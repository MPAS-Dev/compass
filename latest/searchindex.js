Search.setIndex({"docnames": ["design_docs/cached_outputs", "design_docs/compass_package", "design_docs/index", "design_docs/template", "developers_guide/api", "developers_guide/building_docs", "developers_guide/command_line", "developers_guide/docs", "developers_guide/framework", "developers_guide/generated/compass.MpasCore", "developers_guide/generated/compass.MpasCore.add_test_group", "developers_guide/generated/compass.Step", "developers_guide/generated/compass.Step.add_input_file", "developers_guide/generated/compass.Step.add_model_as_input", "developers_guide/generated/compass.Step.add_namelist_file", "developers_guide/generated/compass.Step.add_namelist_options", "developers_guide/generated/compass.Step.add_output_file", "developers_guide/generated/compass.Step.add_streams_file", "developers_guide/generated/compass.Step.constrain_resources", "developers_guide/generated/compass.Step.run", "developers_guide/generated/compass.Step.runtime_setup", "developers_guide/generated/compass.Step.set_resources", "developers_guide/generated/compass.Step.setup", "developers_guide/generated/compass.Step.update_namelist_at_runtime", "developers_guide/generated/compass.Step.update_namelist_pio", "developers_guide/generated/compass.Step.update_streams_at_runtime", "developers_guide/generated/compass.TestCase", "developers_guide/generated/compass.TestCase.add_step", "developers_guide/generated/compass.TestCase.configure", "developers_guide/generated/compass.TestCase.run", "developers_guide/generated/compass.TestCase.validate", "developers_guide/generated/compass.TestGroup", "developers_guide/generated/compass.TestGroup.add_test_case", "developers_guide/generated/compass.__main__.main", "developers_guide/generated/compass.cache.update_cache", "developers_guide/generated/compass.clean.clean_cases", "developers_guide/generated/compass.config.CompassConfigParser", "developers_guide/generated/compass.io.download", "developers_guide/generated/compass.io.symlink", "developers_guide/generated/compass.list.list_cases", "developers_guide/generated/compass.list.list_machines", "developers_guide/generated/compass.list.list_suites", "developers_guide/generated/compass.logging.log_method_call", "developers_guide/generated/compass.mesh.IcosahedralMeshStep", "developers_guide/generated/compass.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon", "developers_guide/generated/compass.mesh.IcosahedralMeshStep.get_cell_width", "developers_guide/generated/compass.mesh.IcosahedralMeshStep.get_subdivisions", "developers_guide/generated/compass.mesh.IcosahedralMeshStep.make_jigsaw_mesh", "developers_guide/generated/compass.mesh.IcosahedralMeshStep.run", "developers_guide/generated/compass.mesh.IcosahedralMeshStep.setup", "developers_guide/generated/compass.mesh.QuasiUniformSphericalMeshStep", "developers_guide/generated/compass.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon", "developers_guide/generated/compass.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh", "developers_guide/generated/compass.mesh.QuasiUniformSphericalMeshStep.run", "developers_guide/generated/compass.mesh.QuasiUniformSphericalMeshStep.setup", "developers_guide/generated/compass.mesh.spherical.SphericalBaseStep", "developers_guide/generated/compass.mesh.spherical.SphericalBaseStep.run", "developers_guide/generated/compass.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width", "developers_guide/generated/compass.mesh.spherical.SphericalBaseStep.setup", "developers_guide/generated/compass.model.make_graph_file", "developers_guide/generated/compass.model.partition", "developers_guide/generated/compass.model.run_model", "developers_guide/generated/compass.mpas_cores.get_mpas_cores", "developers_guide/generated/compass.parallel.check_parallel_system", "developers_guide/generated/compass.parallel.get_available_cores_and_nodes", "developers_guide/generated/compass.parallel.run_command", "developers_guide/generated/compass.parallel.set_cores_per_node", "developers_guide/generated/compass.provenance.write", "developers_guide/generated/compass.run.serial.run_single_step", "developers_guide/generated/compass.run.serial.run_tests", "developers_guide/generated/compass.setup.setup_case", "developers_guide/generated/compass.setup.setup_cases", "developers_guide/generated/compass.suite.clean_suite", "developers_guide/generated/compass.suite.setup_suite", "developers_guide/generated/compass.validate.compare_timers", "developers_guide/generated/compass.validate.compare_variables", "developers_guide/landice/api", "developers_guide/landice/framework", "developers_guide/landice/generated/compass.landice.Landice", "developers_guide/landice/generated/compass.landice.tests.calving_dt_convergence.CalvingDtConvergence", "developers_guide/landice/generated/compass.landice.tests.calving_dt_convergence.dt_convergence_test.DtConvergenceTest", "developers_guide/landice/generated/compass.landice.tests.calving_dt_convergence.dt_convergence_test.DtConvergenceTest.validate", "developers_guide/landice/generated/compass.landice.tests.calving_dt_convergence.run_model.RunModel", "developers_guide/landice/generated/compass.landice.tests.calving_dt_convergence.run_model.RunModel.run", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.CircularShelf", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.decomposition_test.DecompositionTest", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.decomposition_test.DecompositionTest.run", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.run_model.RunModel", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.run_model.RunModel.run", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.setup_mesh.SetupMesh", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.setup_mesh.SetupMesh.run", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.visualize.Visualize", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.visualize.Visualize.run", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.visualize.visualize_circular_shelf", "developers_guide/landice/generated/compass.landice.tests.dome.Dome", "developers_guide/landice/generated/compass.landice.tests.dome.decomposition_test.DecompositionTest", "developers_guide/landice/generated/compass.landice.tests.dome.decomposition_test.DecompositionTest.run", "developers_guide/landice/generated/compass.landice.tests.dome.restart_test.RestartTest", "developers_guide/landice/generated/compass.landice.tests.dome.restart_test.RestartTest.run", "developers_guide/landice/generated/compass.landice.tests.dome.run_model.RunModel", "developers_guide/landice/generated/compass.landice.tests.dome.run_model.RunModel.run", "developers_guide/landice/generated/compass.landice.tests.dome.run_model.RunModel.setup", "developers_guide/landice/generated/compass.landice.tests.dome.setup_mesh.SetupMesh", "developers_guide/landice/generated/compass.landice.tests.dome.setup_mesh.SetupMesh.run", "developers_guide/landice/generated/compass.landice.tests.dome.smoke_test.SmokeTest", "developers_guide/landice/generated/compass.landice.tests.dome.smoke_test.SmokeTest.run", "developers_guide/landice/generated/compass.landice.tests.dome.visualize.Visualize", "developers_guide/landice/generated/compass.landice.tests.dome.visualize.Visualize.run", "developers_guide/landice/generated/compass.landice.tests.dome.visualize.visualize_dome", "developers_guide/landice/generated/compass.landice.tests.eismint2.Eismint2", "developers_guide/landice/generated/compass.landice.tests.eismint2.decomposition_test.DecompositionTest", "developers_guide/landice/generated/compass.landice.tests.eismint2.decomposition_test.DecompositionTest.run", "developers_guide/landice/generated/compass.landice.tests.eismint2.restart_test.RestartTest", "developers_guide/landice/generated/compass.landice.tests.eismint2.restart_test.RestartTest.run", "developers_guide/landice/generated/compass.landice.tests.eismint2.run_experiment.RunExperiment", "developers_guide/landice/generated/compass.landice.tests.eismint2.run_experiment.RunExperiment.run", "developers_guide/landice/generated/compass.landice.tests.eismint2.run_experiment.RunExperiment.setup", "developers_guide/landice/generated/compass.landice.tests.eismint2.setup_mesh.SetupMesh", "developers_guide/landice/generated/compass.landice.tests.eismint2.setup_mesh.SetupMesh.run", "developers_guide/landice/generated/compass.landice.tests.eismint2.standard_experiments.StandardExperiments", "developers_guide/landice/generated/compass.landice.tests.eismint2.standard_experiments.StandardExperiments.run", "developers_guide/landice/generated/compass.landice.tests.eismint2.standard_experiments.visualize.Visualize", "developers_guide/landice/generated/compass.landice.tests.eismint2.standard_experiments.visualize.Visualize.run", "developers_guide/landice/generated/compass.landice.tests.eismint2.standard_experiments.visualize.visualize_eismint2", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.A.A", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.A.A.configure", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.A.A.run", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.A.visualize.Visualize", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.A.visualize.Visualize.run", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.B.B", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.B.B.configure", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.B.B.run", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.B.visualize.Visualize", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.B.visualize.Visualize.run", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.EnthalpyBenchmark", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.run_model.RunModel", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.run_model.RunModel.run", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.run_model.RunModel.setup", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.setup_mesh.SetupMesh", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.setup_mesh.SetupMesh.run", "developers_guide/landice/generated/compass.landice.tests.greenland.Greenland", "developers_guide/landice/generated/compass.landice.tests.greenland.decomposition_test.DecompositionTest", "developers_guide/landice/generated/compass.landice.tests.greenland.decomposition_test.DecompositionTest.run", "developers_guide/landice/generated/compass.landice.tests.greenland.high_res_mesh.HighResMesh", "developers_guide/landice/generated/compass.landice.tests.greenland.high_res_mesh.HighResMesh.run", "developers_guide/landice/generated/compass.landice.tests.greenland.mesh.Mesh", "developers_guide/landice/generated/compass.landice.tests.greenland.mesh.Mesh.build_cell_width", "developers_guide/landice/generated/compass.landice.tests.greenland.mesh.Mesh.run", "developers_guide/landice/generated/compass.landice.tests.greenland.restart_test.RestartTest", "developers_guide/landice/generated/compass.landice.tests.greenland.restart_test.RestartTest.run", "developers_guide/landice/generated/compass.landice.tests.greenland.run_model.RunModel", "developers_guide/landice/generated/compass.landice.tests.greenland.run_model.RunModel.run", "developers_guide/landice/generated/compass.landice.tests.greenland.run_model.RunModel.setup", "developers_guide/landice/generated/compass.landice.tests.greenland.smoke_test.SmokeTest", "developers_guide/landice/generated/compass.landice.tests.greenland.smoke_test.SmokeTest.run", "developers_guide/landice/generated/compass.landice.tests.humboldt.Humboldt", "developers_guide/landice/generated/compass.landice.tests.humboldt.decomposition_test.DecompositionTest", "developers_guide/landice/generated/compass.landice.tests.humboldt.decomposition_test.DecompositionTest.validate", "developers_guide/landice/generated/compass.landice.tests.humboldt.mesh.Mesh", "developers_guide/landice/generated/compass.landice.tests.humboldt.mesh.Mesh.run", "developers_guide/landice/generated/compass.landice.tests.humboldt.mesh_gen.MeshGen", "developers_guide/landice/generated/compass.landice.tests.humboldt.mesh_gen.MeshGen.run", "developers_guide/landice/generated/compass.landice.tests.humboldt.restart_test.RestartTest", "developers_guide/landice/generated/compass.landice.tests.humboldt.restart_test.RestartTest.validate", "developers_guide/landice/generated/compass.landice.tests.humboldt.run_model.RunModel", "developers_guide/landice/generated/compass.landice.tests.humboldt.run_model.RunModel.run", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.HydroRadial", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.decomposition_test.DecompositionTest", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.decomposition_test.DecompositionTest.run", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.restart_test.RestartTest", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.restart_test.RestartTest.run", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.run_model.RunModel", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.run_model.RunModel.run", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.run_model.RunModel.setup", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.setup_mesh.SetupMesh", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.setup_mesh.SetupMesh.run", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.spinup_test.SpinupTest", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.spinup_test.SpinupTest.run", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.steady_state_drift_test.SteadyStateDriftTest", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.steady_state_drift_test.SteadyStateDriftTest.run", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.visualize.Visualize", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.visualize.Visualize.run", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.visualize.visualize_hydro_radial", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.Ismip6Forcing", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.atmosphere.Atmosphere", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.atmosphere.Atmosphere.configure", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.atmosphere.create_mapfile_smb", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.atmosphere.create_mapfile_smb.build_mapping_file", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.atmosphere.create_mapfile_smb.create_atm_scrip", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.atmosphere.process_smb.ProcessSMB", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.atmosphere.process_smb.ProcessSMB.correct_smb_anomaly_for_climatology", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.atmosphere.process_smb.ProcessSMB.remap_ismip6_smb_to_mali", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.atmosphere.process_smb.ProcessSMB.rename_ismip6_smb_to_mali_vars", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.atmosphere.process_smb.ProcessSMB.run", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.atmosphere.process_smb.ProcessSMB.setup", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.ProcessSmbRacmo", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.ProcessSmbRacmo.correct_smb_anomaly_for_base_smb", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.ProcessSmbRacmo.remap_source_smb_to_mali", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.ProcessSmbRacmo.rename_source_smb_to_mali_vars", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.ProcessSmbRacmo.run", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.ProcessSmbRacmo.setup", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.configure.configure", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.create_mapfile.build_mapping_file", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.ocean_basal.OceanBasal", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.ocean_basal.OceanBasal.configure", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.ProcessBasalMelt", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.ProcessBasalMelt.combine_ismip6_inputfiles", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.ProcessBasalMelt.remap_ismip6_basal_melt_to_mali_vars", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.ProcessBasalMelt.rename_ismip6_basal_melt_to_mali_vars", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.ProcessBasalMelt.run", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.ProcessBasalMelt.setup", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.ocean_thermal.OceanThermal", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.ocean_thermal.OceanThermal.configure", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.ocean_thermal.process_thermal_forcing.ProcessThermalForcing", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.ocean_thermal.process_thermal_forcing.ProcessThermalForcing.remap_ismip6_thermal_forcing_to_mali_vars", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.ocean_thermal.process_thermal_forcing.ProcessThermalForcing.rename_ismip6_thermal_forcing_to_mali_vars", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.ocean_thermal.process_thermal_forcing.ProcessThermalForcing.run", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.ocean_thermal.process_thermal_forcing.ProcessThermalForcing.setup", "developers_guide/landice/generated/compass.landice.tests.kangerlussuaq.Kangerlussuaq", "developers_guide/landice/generated/compass.landice.tests.kangerlussuaq.mesh.Mesh", "developers_guide/landice/generated/compass.landice.tests.kangerlussuaq.mesh.Mesh.run", "developers_guide/landice/generated/compass.landice.tests.kangerlussuaq.mesh_gen.MeshGen", "developers_guide/landice/generated/compass.landice.tests.kangerlussuaq.mesh_gen.MeshGen.run", "developers_guide/landice/generated/compass.landice.tests.koge_bugt_s.KogeBugtS", "developers_guide/landice/generated/compass.landice.tests.koge_bugt_s.mesh.Mesh", "developers_guide/landice/generated/compass.landice.tests.koge_bugt_s.mesh.Mesh.run", "developers_guide/landice/generated/compass.landice.tests.koge_bugt_s.mesh_gen.MeshGen", "developers_guide/landice/generated/compass.landice.tests.koge_bugt_s.mesh_gen.MeshGen.run", "developers_guide/landice/generated/compass.landice.tests.mismipplus.MISMIPplus", "developers_guide/landice/generated/compass.landice.tests.mismipplus.run_model.RunModel", "developers_guide/landice/generated/compass.landice.tests.mismipplus.run_model.RunModel.run", "developers_guide/landice/generated/compass.landice.tests.mismipplus.run_model.RunModel.setup", "developers_guide/landice/generated/compass.landice.tests.mismipplus.smoke_test.SmokeTest", "developers_guide/landice/generated/compass.landice.tests.mismipplus.smoke_test.SmokeTest.run", "developers_guide/landice/generated/compass.landice.tests.thwaites.Thwaites", "developers_guide/landice/generated/compass.landice.tests.thwaites.decomposition_test.DecompositionTest", "developers_guide/landice/generated/compass.landice.tests.thwaites.decomposition_test.DecompositionTest.run", "developers_guide/landice/generated/compass.landice.tests.thwaites.restart_test.RestartTest", "developers_guide/landice/generated/compass.landice.tests.thwaites.restart_test.RestartTest.run", "developers_guide/landice/generated/compass.landice.tests.thwaites.run_model.RunModel", "developers_guide/landice/generated/compass.landice.tests.thwaites.run_model.RunModel.run", "developers_guide/landice/generated/compass.landice.tests.thwaites.run_model.RunModel.setup", "developers_guide/landice/index", "developers_guide/landice/test_groups/calving_dt_convergence", "developers_guide/landice/test_groups/circular_shelf", "developers_guide/landice/test_groups/dome", "developers_guide/landice/test_groups/eismint2", "developers_guide/landice/test_groups/enthalpy_benchmark", "developers_guide/landice/test_groups/greenland", "developers_guide/landice/test_groups/humboldt", "developers_guide/landice/test_groups/hydro_radial", "developers_guide/landice/test_groups/index", "developers_guide/landice/test_groups/ismip6_forcing", "developers_guide/landice/test_groups/kangerlussuaq", "developers_guide/landice/test_groups/koge_bugt_s", "developers_guide/landice/test_groups/mismipplus", "developers_guide/landice/test_groups/thwaites", "developers_guide/machines/anvil", "developers_guide/machines/chrysalis", "developers_guide/machines/compy", "developers_guide/machines/cori", "developers_guide/machines/index", "developers_guide/machines/perlmutter", "developers_guide/ocean/api", "developers_guide/ocean/framework", "developers_guide/ocean/generated/compass.ocean.Ocean", "developers_guide/ocean/generated/compass.ocean.haney.compute_haney_number", "developers_guide/ocean/generated/compass.ocean.iceshelf.adjust_ssh", "developers_guide/ocean/generated/compass.ocean.iceshelf.compute_land_ice_pressure_and_draft", "developers_guide/ocean/generated/compass.ocean.mesh.cull.CullMeshStep", "developers_guide/ocean/generated/compass.ocean.mesh.cull.CullMeshStep.run", "developers_guide/ocean/generated/compass.ocean.mesh.cull.CullMeshStep.setup", "developers_guide/ocean/generated/compass.ocean.mesh.cull.cull_mesh", "developers_guide/ocean/generated/compass.ocean.mesh.floodplain.FloodplainMeshStep", "developers_guide/ocean/generated/compass.ocean.mesh.floodplain.FloodplainMeshStep.run", "developers_guide/ocean/generated/compass.ocean.particles.remap_particles", "developers_guide/ocean/generated/compass.ocean.particles.write", "developers_guide/ocean/generated/compass.ocean.plot.plot_initial_state", "developers_guide/ocean/generated/compass.ocean.plot.plot_vertical_grid", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.BaroclinicChannel", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.configure", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.decomp_test.DecompTest", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.decomp_test.DecompTest.configure", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.decomp_test.DecompTest.run", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.default.Default", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.default.Default.configure", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.default.Default.run", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.forward.Forward", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.forward.Forward.run", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.forward.Forward.setup", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.initial_state.InitialState", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.initial_state.InitialState.run", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.initial_state.InitialState.setup", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.restart_test.RestartTest", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.restart_test.RestartTest.configure", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.restart_test.RestartTest.run", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.rpe_test.RpeTest", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.rpe_test.RpeTest.configure", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.rpe_test.RpeTest.run", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.run", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.setup", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.threads_test.ThreadsTest", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.configure", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.run", "developers_guide/ocean/generated/compass.ocean.tests.dam_break.DamBreak", "developers_guide/ocean/generated/compass.ocean.tests.dam_break.default.Default", "developers_guide/ocean/generated/compass.ocean.tests.dam_break.default.Default.configure", "developers_guide/ocean/generated/compass.ocean.tests.dam_break.forward.Forward", "developers_guide/ocean/generated/compass.ocean.tests.dam_break.forward.Forward.run", "developers_guide/ocean/generated/compass.ocean.tests.dam_break.initial_state.InitialState", "developers_guide/ocean/generated/compass.ocean.tests.dam_break.initial_state.InitialState.run", "developers_guide/ocean/generated/compass.ocean.tests.dam_break.viz.Viz", "developers_guide/ocean/generated/compass.ocean.tests.dam_break.viz.Viz.run", "developers_guide/ocean/generated/compass.ocean.tests.drying_slope.DryingSlope", "developers_guide/ocean/generated/compass.ocean.tests.drying_slope.default.Default", "developers_guide/ocean/generated/compass.ocean.tests.drying_slope.default.Default.configure", "developers_guide/ocean/generated/compass.ocean.tests.drying_slope.forward.Forward", "developers_guide/ocean/generated/compass.ocean.tests.drying_slope.forward.Forward.run", "developers_guide/ocean/generated/compass.ocean.tests.drying_slope.initial_state.InitialState", "developers_guide/ocean/generated/compass.ocean.tests.drying_slope.initial_state.InitialState.run", "developers_guide/ocean/generated/compass.ocean.tests.drying_slope.viz.Viz", "developers_guide/ocean/generated/compass.ocean.tests.drying_slope.viz.Viz.run", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.GlobalConvergence", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.CosineBell", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.CosineBell.configure", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.CosineBell.run", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.analysis.Analysis", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rmse", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.run", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.forward.Forward", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.forward.Forward.get_dt", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.forward.Forward.run", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.forward.Forward.setup", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.init.Init", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.init.Init.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.GlobalOcean", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.analysis_test.AnalysisTest", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.analysis_test.AnalysisTest.configure", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.analysis_test.AnalysisTest.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.configure", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.configure.configure_global_ocean", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.daily_output_test.DailyOutputTest", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.daily_output_test.DailyOutputTest.configure", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.daily_output_test.DailyOutputTest.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.decomp_test.DecompTest", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.decomp_test.DecompTest.configure", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.decomp_test.DecompTest.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.dynamic_adjustment.DynamicAdjustment", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.dynamic_adjustment.DynamicAdjustment.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.FilesForE3SM", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.FilesForE3SM.configure", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.FilesForE3SM.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.diagnostics_files.DiagnosticsFiles", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.diagnostics_files.DiagnosticsFiles.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.ocean_graph_partition.OceanGraphPartition", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.ocean_graph_partition.OceanGraphPartition.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.ocean_initial_condition.OceanInitialCondition", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.ocean_initial_condition.OceanInitialCondition.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.scrip.Scrip", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.scrip.Scrip.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.seaice_initial_condition.SeaiceInitialCondition", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.seaice_initial_condition.SeaiceInitialCondition.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.forward.ForwardStep", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.forward.ForwardStep.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.forward.ForwardStep.setup", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.forward.ForwardTestCase", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.forward.ForwardTestCase.configure", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.forward.ForwardTestCase.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.init.Init", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.init.Init.configure", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.init.Init.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.init.initial_state.InitialState", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.init.initial_state.InitialState.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.init.initial_state.InitialState.setup", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.init.ssh_adjustment.SshAdjustment", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.init.ssh_adjustment.SshAdjustment.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.init.ssh_adjustment.SshAdjustment.setup", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.Mesh", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.Mesh.configure", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.Mesh.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.ec30to60.EC30to60BaseMesh", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.ec30to60.EC30to60BaseMesh.build_cell_width_lat_lon", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.ec30to60.dynamic_adjustment.EC30to60DynamicAdjustment", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.ec30to60.dynamic_adjustment.EC30to60DynamicAdjustment.configure", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.ec30to60.dynamic_adjustment.EC30to60DynamicAdjustment.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.qu240.dynamic_adjustment.QU240DynamicAdjustment", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.qu240.dynamic_adjustment.QU240DynamicAdjustment.configure", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.qu240.dynamic_adjustment.QU240DynamicAdjustment.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.so12to60.SO12to60BaseMesh", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.so12to60.SO12to60BaseMesh.build_cell_width_lat_lon", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.so12to60.dynamic_adjustment.SO12to60DynamicAdjustment", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.so12to60.dynamic_adjustment.SO12to60DynamicAdjustment.configure", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.so12to60.dynamic_adjustment.SO12to60DynamicAdjustment.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.wc14.WC14BaseMesh", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.wc14.WC14BaseMesh.build_cell_width_lat_lon", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.wc14.dynamic_adjustment.WC14DynamicAdjustment", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.wc14.dynamic_adjustment.WC14DynamicAdjustment.configure", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.wc14.dynamic_adjustment.WC14DynamicAdjustment.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.metadata.add_mesh_and_init_metadata", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.metadata.get_e3sm_mesh_names", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.performance_test.PerformanceTest", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.performance_test.PerformanceTest.configure", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.performance_test.PerformanceTest.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.restart_test.RestartTest", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.restart_test.RestartTest.configure", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.restart_test.RestartTest.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.threads_test.ThreadsTest", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.threads_test.ThreadsTest.configure", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.threads_test.ThreadsTest.run", "developers_guide/ocean/generated/compass.ocean.tests.gotm.Gotm", "developers_guide/ocean/generated/compass.ocean.tests.gotm.default.Default", "developers_guide/ocean/generated/compass.ocean.tests.gotm.default.Default.validate", "developers_guide/ocean/generated/compass.ocean.tests.gotm.default.analysis.Analysis", "developers_guide/ocean/generated/compass.ocean.tests.gotm.default.analysis.Analysis.run", "developers_guide/ocean/generated/compass.ocean.tests.gotm.default.forward.Forward", "developers_guide/ocean/generated/compass.ocean.tests.gotm.default.forward.Forward.run", "developers_guide/ocean/generated/compass.ocean.tests.gotm.default.init.Init", "developers_guide/ocean/generated/compass.ocean.tests.gotm.default.init.Init.run", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.Hurricane", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.analysis.Analysis", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.analysis.Analysis.read_pointstats", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.analysis.Analysis.read_station_data", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.analysis.Analysis.read_station_file", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.analysis.Analysis.run", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.analysis.Analysis.setup", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.configure", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.forward.Forward", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.forward.Forward.configure", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.forward.Forward.run", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.forward.forward.ForwardStep", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.forward.forward.ForwardStep.run", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.forward.forward.ForwardStep.setup", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.Init", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.Init.configure", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.Init.run", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.create_pointstats_file.CreatePointstatsFile", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.create_pointstats_file.CreatePointstatsFile.create_pointstats_file", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.create_pointstats_file.CreatePointstatsFile.run", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.initial_state.InitialState", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.initial_state.InitialState.run", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.initial_state.InitialState.setup", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing.interpolate_data_to_grid", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing.plot_interp_data", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing.run", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing.write_to_file", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.mesh.Mesh", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.mesh.Mesh.configure", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.mesh.Mesh.run", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.mesh.dequ120at30cr10rr2.DEQU120at30cr10rr2BaseMesh", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.mesh.dequ120at30cr10rr2.DEQU120at30cr10rr2BaseMesh.build_cell_width_lat_lon", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.IceShelf2d", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.configure", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.default.Default", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.default.Default.configure", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.default.Default.run", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.forward.Forward", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.forward.Forward.run", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.forward.Forward.setup", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.initial_state.InitialState", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.initial_state.InitialState.run", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.restart_test.RestartTest", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.restart_test.RestartTest.configure", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.restart_test.RestartTest.run", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.ssh_adjustment.SshAdjustment", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.ssh_adjustment.SshAdjustment.run", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.ssh_adjustment.SshAdjustment.setup", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.viz.Viz", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.viz.Viz.run", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.InternalWave", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.default.Default", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.default.Default.validate", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.forward.Forward", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.forward.Forward.run", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.initial_state.InitialState", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.initial_state.InitialState.run", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.rpe_test.RpeTest", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.rpe_test.analysis.Analysis", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.rpe_test.analysis.Analysis.run", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.ten_day_test.TenDayTest", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.ten_day_test.TenDayTest.validate", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.viz.Viz", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.viz.Viz.run", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.IsomipPlus", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.evap.update_evaporation_flux", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.forward.Forward", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.forward.Forward.run", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.forward.Forward.setup", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.geom.interpolate_ocean_mask", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.geom.process_input_geometry", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.initial_state.InitialState", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.initial_state.InitialState.run", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.misomip.Misomip", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.misomip.Misomip.run", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.ocean_test.OceanTest", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.ocean_test.OceanTest.configure", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.ocean_test.OceanTest.run", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.ssh_adjustment.SshAdjustment", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.ssh_adjustment.SshAdjustment.run", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.ssh_adjustment.SshAdjustment.setup", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.streamfunction.Streamfunction", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.streamfunction.Streamfunction.run", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.Viz", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.Viz.run", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.file_complete", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.images_to_movies", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_3d_field_top_bot_section", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_barotropic_streamfunction", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_horiz_series", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_ice_shelf_boundary_variables", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_layer_interfaces", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_melt_rates", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_overturning_streamfunction", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_potential_density", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_salinity", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_temperature", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.TimeSeriesPlotter", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.TimeSeriesPlotter.plot_melt_time_series", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.TimeSeriesPlotter.plot_time_series", "developers_guide/ocean/generated/compass.ocean.tests.merry_go_round.MerryGoRound", "developers_guide/ocean/generated/compass.ocean.tests.merry_go_round.convergence_test.analysis.Analysis", "developers_guide/ocean/generated/compass.ocean.tests.merry_go_round.convergence_test.analysis.Analysis.run", "developers_guide/ocean/generated/compass.ocean.tests.merry_go_round.default.Default", "developers_guide/ocean/generated/compass.ocean.tests.merry_go_round.default.Default.validate", "developers_guide/ocean/generated/compass.ocean.tests.merry_go_round.forward.Forward", "developers_guide/ocean/generated/compass.ocean.tests.merry_go_round.forward.Forward.run", "developers_guide/ocean/generated/compass.ocean.tests.merry_go_round.initial_state.InitialState", "developers_guide/ocean/generated/compass.ocean.tests.merry_go_round.initial_state.InitialState.run", "developers_guide/ocean/generated/compass.ocean.tests.merry_go_round.viz.Viz", "developers_guide/ocean/generated/compass.ocean.tests.merry_go_round.viz.Viz.run", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.PlanarConvergence", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.conv_init.ConvInit", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.conv_init.ConvInit.run", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.conv_test_case.ConvTestCase", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.conv_test_case.ConvTestCase.configure", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.conv_test_case.ConvTestCase.run", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.conv_test_case.ConvTestCase.update_cores", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.forward.Forward", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.forward.Forward.get_dt_duration", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.forward.Forward.run", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.forward.Forward.setup", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.horizontal_advection.HorizontalAdvection", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.horizontal_advection.HorizontalAdvection.configure", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.horizontal_advection.HorizontalAdvection.run", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.horizontal_advection.analysis.Analysis", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.horizontal_advection.analysis.Analysis.rmse", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.horizontal_advection.analysis.Analysis.run", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.horizontal_advection.init.Init", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.horizontal_advection.init.Init.run", "developers_guide/ocean/generated/compass.ocean.tests.soma.Soma", "developers_guide/ocean/generated/compass.ocean.tests.soma.analysis.Analysis", "developers_guide/ocean/generated/compass.ocean.tests.soma.analysis.Analysis.run", "developers_guide/ocean/generated/compass.ocean.tests.soma.forward.Forward", "developers_guide/ocean/generated/compass.ocean.tests.soma.forward.Forward.run", "developers_guide/ocean/generated/compass.ocean.tests.soma.initial_state.InitialState", "developers_guide/ocean/generated/compass.ocean.tests.soma.initial_state.InitialState.run", "developers_guide/ocean/generated/compass.ocean.tests.soma.soma_test_case.SomaTestCase", "developers_guide/ocean/generated/compass.ocean.tests.soma.soma_test_case.SomaTestCase.validate", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.SphereTransport", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.CorrelatedTracers2D", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.CorrelatedTracers2D.configure", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.CorrelatedTracers2D.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.analysis.Analysis", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.analysis.Analysis.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.Forward", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.Forward.get_timestep_str", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.Forward.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.Forward.setup", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.init.Init", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.init.Init.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.mesh.Mesh", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.mesh.Mesh.build_cell_width_lat_lon", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.mesh.Mesh.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.Divergent2D", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.Divergent2D.configure", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.Divergent2D.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.analysis.Analysis", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.analysis.Analysis.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.forward.Forward", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.forward.Forward.get_timestep_str", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.forward.Forward.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.forward.Forward.setup", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.init.Init", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.init.Init.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.mesh.Mesh", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.mesh.Mesh.build_cell_width_lat_lon", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.mesh.Mesh.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.Nondivergent2D", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.Nondivergent2D.configure", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.Nondivergent2D.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.analysis.Analysis", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.analysis.Analysis.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.forward.Forward", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.forward.Forward.get_timestep_str", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.forward.Forward.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.forward.Forward.setup", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.init.Init", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.init.Init.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.mesh.Mesh", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.mesh.Mesh.build_cell_width_lat_lon", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.mesh.Mesh.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.compute_convergence_rates", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.compute_error_from_output_ncfile", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.make_convergence_arrays", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.plot_convergence", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.plot_filament", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.plot_over_and_undershoot_errors", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.plot_sol", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.print_data_as_csv", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.print_error_conv_table", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.read_ncl_rgb_file", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.Rotation2D", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.Rotation2D.configure", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.Rotation2D.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.analysis.Analysis", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.analysis.Analysis.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.forward.Forward", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.forward.Forward.get_timestep_str", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.forward.Forward.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.forward.Forward.setup", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.init.Init", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.init.Init.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.mesh.Mesh", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.mesh.Mesh.build_cell_width_lat_lon", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.mesh.Mesh.run", "developers_guide/ocean/generated/compass.ocean.tests.ziso.Ziso", "developers_guide/ocean/generated/compass.ocean.tests.ziso.ZisoTestCase", "developers_guide/ocean/generated/compass.ocean.tests.ziso.ZisoTestCase.configure", "developers_guide/ocean/generated/compass.ocean.tests.ziso.ZisoTestCase.run", "developers_guide/ocean/generated/compass.ocean.tests.ziso.configure", "developers_guide/ocean/generated/compass.ocean.tests.ziso.forward.Forward", "developers_guide/ocean/generated/compass.ocean.tests.ziso.forward.Forward.run", "developers_guide/ocean/generated/compass.ocean.tests.ziso.forward.Forward.setup", "developers_guide/ocean/generated/compass.ocean.tests.ziso.initial_state.InitialState", "developers_guide/ocean/generated/compass.ocean.tests.ziso.initial_state.InitialState.run", "developers_guide/ocean/generated/compass.ocean.tests.ziso.with_frazil.WithFrazil", "developers_guide/ocean/generated/compass.ocean.tests.ziso.with_frazil.WithFrazil.configure", "developers_guide/ocean/generated/compass.ocean.tests.ziso.with_frazil.WithFrazil.run", "developers_guide/ocean/generated/compass.ocean.vertical.grid_1d.generate_1d_grid", "developers_guide/ocean/generated/compass.ocean.vertical.grid_1d.write_1d_grid", "developers_guide/ocean/generated/compass.ocean.vertical.init_vertical_coord", "developers_guide/ocean/generated/compass.ocean.vertical.partial_cells.alter_bottom_depth", "developers_guide/ocean/generated/compass.ocean.vertical.partial_cells.alter_ssh", "developers_guide/ocean/generated/compass.ocean.vertical.zlevel.compute_min_max_level_cell", "developers_guide/ocean/generated/compass.ocean.vertical.zlevel.compute_z_level_layer_thickness", "developers_guide/ocean/generated/compass.ocean.vertical.zlevel.compute_z_level_resting_thickness", "developers_guide/ocean/generated/compass.ocean.vertical.zlevel.init_z_level_vertical_coord", "developers_guide/ocean/generated/compass.ocean.vertical.zstar.init_z_star_vertical_coord", "developers_guide/ocean/index", "developers_guide/ocean/test_groups/baroclinic_channel", "developers_guide/ocean/test_groups/dam_break", "developers_guide/ocean/test_groups/drying_slope", "developers_guide/ocean/test_groups/global_convergence", "developers_guide/ocean/test_groups/global_ocean", "developers_guide/ocean/test_groups/gotm", "developers_guide/ocean/test_groups/hurricane", "developers_guide/ocean/test_groups/ice_shelf_2d", "developers_guide/ocean/test_groups/index", "developers_guide/ocean/test_groups/internal_wave", "developers_guide/ocean/test_groups/isomip_plus", "developers_guide/ocean/test_groups/merry_go_round", "developers_guide/ocean/test_groups/planar_convergence", "developers_guide/ocean/test_groups/soma", "developers_guide/ocean/test_groups/sphere_transport", "developers_guide/ocean/test_groups/spherical_harmonic_transform", "developers_guide/ocean/test_groups/ziso", "developers_guide/organization", "developers_guide/overview", "developers_guide/quick_start", "developers_guide/troubleshooting", "glossary", "index", "tutorials/dev_add_param_study", "tutorials/dev_add_test_group", "tutorials/dev_porting_legacy", "users_guide/config_files", "users_guide/landice/framework/index", "users_guide/landice/index", "users_guide/landice/suites", "users_guide/landice/test_groups/calving_dt_convergence", "users_guide/landice/test_groups/circular_shelf", "users_guide/landice/test_groups/dome", "users_guide/landice/test_groups/eismint2", "users_guide/landice/test_groups/enthalpy_benchmark", "users_guide/landice/test_groups/greenland", "users_guide/landice/test_groups/humboldt", "users_guide/landice/test_groups/hydro_radial", "users_guide/landice/test_groups/index", "users_guide/landice/test_groups/ismip6_forcing", "users_guide/landice/test_groups/kangerlussuaq", "users_guide/landice/test_groups/koge_bugt_s", "users_guide/landice/test_groups/mismipplus", "users_guide/landice/test_groups/thwaites", "users_guide/machines/anvil", "users_guide/machines/chrysalis", "users_guide/machines/compy", "users_guide/machines/cori", "users_guide/machines/index", "users_guide/machines/perlmutter", "users_guide/ocean/framework/ice_shelf", "users_guide/ocean/framework/index", "users_guide/ocean/framework/vertical", "users_guide/ocean/index", "users_guide/ocean/suites", "users_guide/ocean/test_groups/baroclinic_channel", "users_guide/ocean/test_groups/dam_break", "users_guide/ocean/test_groups/drying_slope", "users_guide/ocean/test_groups/global_convergence", "users_guide/ocean/test_groups/global_ocean", "users_guide/ocean/test_groups/gotm", "users_guide/ocean/test_groups/hurricane", "users_guide/ocean/test_groups/ice_shelf_2d", "users_guide/ocean/test_groups/index", "users_guide/ocean/test_groups/internal_wave", "users_guide/ocean/test_groups/isomip_plus", "users_guide/ocean/test_groups/merry_go_round", "users_guide/ocean/test_groups/planar_convergence", "users_guide/ocean/test_groups/soma", "users_guide/ocean/test_groups/sphere_transport", "users_guide/ocean/test_groups/spherical_harmonic_transform", "users_guide/ocean/test_groups/ziso", "users_guide/quick_start", "users_guide/test_cases", "users_guide/test_suites", "versions"], "filenames": ["design_docs/cached_outputs.rst", "design_docs/compass_package.rst", "design_docs/index.rst", "design_docs/template.rst", "developers_guide/api.rst", "developers_guide/building_docs.rst", "developers_guide/command_line.rst", "developers_guide/docs.rst", "developers_guide/framework.rst", "developers_guide/generated/compass.MpasCore.rst", "developers_guide/generated/compass.MpasCore.add_test_group.rst", "developers_guide/generated/compass.Step.rst", "developers_guide/generated/compass.Step.add_input_file.rst", "developers_guide/generated/compass.Step.add_model_as_input.rst", "developers_guide/generated/compass.Step.add_namelist_file.rst", "developers_guide/generated/compass.Step.add_namelist_options.rst", "developers_guide/generated/compass.Step.add_output_file.rst", "developers_guide/generated/compass.Step.add_streams_file.rst", "developers_guide/generated/compass.Step.constrain_resources.rst", "developers_guide/generated/compass.Step.run.rst", "developers_guide/generated/compass.Step.runtime_setup.rst", "developers_guide/generated/compass.Step.set_resources.rst", "developers_guide/generated/compass.Step.setup.rst", "developers_guide/generated/compass.Step.update_namelist_at_runtime.rst", "developers_guide/generated/compass.Step.update_namelist_pio.rst", "developers_guide/generated/compass.Step.update_streams_at_runtime.rst", "developers_guide/generated/compass.TestCase.rst", "developers_guide/generated/compass.TestCase.add_step.rst", "developers_guide/generated/compass.TestCase.configure.rst", "developers_guide/generated/compass.TestCase.run.rst", "developers_guide/generated/compass.TestCase.validate.rst", "developers_guide/generated/compass.TestGroup.rst", "developers_guide/generated/compass.TestGroup.add_test_case.rst", "developers_guide/generated/compass.__main__.main.rst", "developers_guide/generated/compass.cache.update_cache.rst", "developers_guide/generated/compass.clean.clean_cases.rst", "developers_guide/generated/compass.config.CompassConfigParser.rst", "developers_guide/generated/compass.io.download.rst", "developers_guide/generated/compass.io.symlink.rst", "developers_guide/generated/compass.list.list_cases.rst", "developers_guide/generated/compass.list.list_machines.rst", "developers_guide/generated/compass.list.list_suites.rst", "developers_guide/generated/compass.logging.log_method_call.rst", "developers_guide/generated/compass.mesh.IcosahedralMeshStep.rst", "developers_guide/generated/compass.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon.rst", "developers_guide/generated/compass.mesh.IcosahedralMeshStep.get_cell_width.rst", "developers_guide/generated/compass.mesh.IcosahedralMeshStep.get_subdivisions.rst", "developers_guide/generated/compass.mesh.IcosahedralMeshStep.make_jigsaw_mesh.rst", "developers_guide/generated/compass.mesh.IcosahedralMeshStep.run.rst", "developers_guide/generated/compass.mesh.IcosahedralMeshStep.setup.rst", "developers_guide/generated/compass.mesh.QuasiUniformSphericalMeshStep.rst", "developers_guide/generated/compass.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon.rst", "developers_guide/generated/compass.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh.rst", "developers_guide/generated/compass.mesh.QuasiUniformSphericalMeshStep.run.rst", "developers_guide/generated/compass.mesh.QuasiUniformSphericalMeshStep.setup.rst", "developers_guide/generated/compass.mesh.spherical.SphericalBaseStep.rst", "developers_guide/generated/compass.mesh.spherical.SphericalBaseStep.run.rst", "developers_guide/generated/compass.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width.rst", "developers_guide/generated/compass.mesh.spherical.SphericalBaseStep.setup.rst", "developers_guide/generated/compass.model.make_graph_file.rst", "developers_guide/generated/compass.model.partition.rst", "developers_guide/generated/compass.model.run_model.rst", "developers_guide/generated/compass.mpas_cores.get_mpas_cores.rst", "developers_guide/generated/compass.parallel.check_parallel_system.rst", "developers_guide/generated/compass.parallel.get_available_cores_and_nodes.rst", "developers_guide/generated/compass.parallel.run_command.rst", "developers_guide/generated/compass.parallel.set_cores_per_node.rst", "developers_guide/generated/compass.provenance.write.rst", "developers_guide/generated/compass.run.serial.run_single_step.rst", "developers_guide/generated/compass.run.serial.run_tests.rst", "developers_guide/generated/compass.setup.setup_case.rst", "developers_guide/generated/compass.setup.setup_cases.rst", "developers_guide/generated/compass.suite.clean_suite.rst", "developers_guide/generated/compass.suite.setup_suite.rst", "developers_guide/generated/compass.validate.compare_timers.rst", "developers_guide/generated/compass.validate.compare_variables.rst", "developers_guide/landice/api.rst", "developers_guide/landice/framework.rst", "developers_guide/landice/generated/compass.landice.Landice.rst", "developers_guide/landice/generated/compass.landice.tests.calving_dt_convergence.CalvingDtConvergence.rst", "developers_guide/landice/generated/compass.landice.tests.calving_dt_convergence.dt_convergence_test.DtConvergenceTest.rst", "developers_guide/landice/generated/compass.landice.tests.calving_dt_convergence.dt_convergence_test.DtConvergenceTest.validate.rst", "developers_guide/landice/generated/compass.landice.tests.calving_dt_convergence.run_model.RunModel.rst", "developers_guide/landice/generated/compass.landice.tests.calving_dt_convergence.run_model.RunModel.run.rst", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.CircularShelf.rst", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.decomposition_test.DecompositionTest.rst", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.decomposition_test.DecompositionTest.run.rst", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.run_model.RunModel.rst", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.run_model.RunModel.run.rst", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.setup_mesh.SetupMesh.rst", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.setup_mesh.SetupMesh.run.rst", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.visualize.Visualize.rst", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.visualize.Visualize.run.rst", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.visualize.visualize_circular_shelf.rst", "developers_guide/landice/generated/compass.landice.tests.dome.Dome.rst", "developers_guide/landice/generated/compass.landice.tests.dome.decomposition_test.DecompositionTest.rst", "developers_guide/landice/generated/compass.landice.tests.dome.decomposition_test.DecompositionTest.run.rst", "developers_guide/landice/generated/compass.landice.tests.dome.restart_test.RestartTest.rst", "developers_guide/landice/generated/compass.landice.tests.dome.restart_test.RestartTest.run.rst", "developers_guide/landice/generated/compass.landice.tests.dome.run_model.RunModel.rst", "developers_guide/landice/generated/compass.landice.tests.dome.run_model.RunModel.run.rst", "developers_guide/landice/generated/compass.landice.tests.dome.run_model.RunModel.setup.rst", "developers_guide/landice/generated/compass.landice.tests.dome.setup_mesh.SetupMesh.rst", "developers_guide/landice/generated/compass.landice.tests.dome.setup_mesh.SetupMesh.run.rst", "developers_guide/landice/generated/compass.landice.tests.dome.smoke_test.SmokeTest.rst", "developers_guide/landice/generated/compass.landice.tests.dome.smoke_test.SmokeTest.run.rst", "developers_guide/landice/generated/compass.landice.tests.dome.visualize.Visualize.rst", "developers_guide/landice/generated/compass.landice.tests.dome.visualize.Visualize.run.rst", "developers_guide/landice/generated/compass.landice.tests.dome.visualize.visualize_dome.rst", "developers_guide/landice/generated/compass.landice.tests.eismint2.Eismint2.rst", "developers_guide/landice/generated/compass.landice.tests.eismint2.decomposition_test.DecompositionTest.rst", "developers_guide/landice/generated/compass.landice.tests.eismint2.decomposition_test.DecompositionTest.run.rst", "developers_guide/landice/generated/compass.landice.tests.eismint2.restart_test.RestartTest.rst", "developers_guide/landice/generated/compass.landice.tests.eismint2.restart_test.RestartTest.run.rst", "developers_guide/landice/generated/compass.landice.tests.eismint2.run_experiment.RunExperiment.rst", "developers_guide/landice/generated/compass.landice.tests.eismint2.run_experiment.RunExperiment.run.rst", "developers_guide/landice/generated/compass.landice.tests.eismint2.run_experiment.RunExperiment.setup.rst", "developers_guide/landice/generated/compass.landice.tests.eismint2.setup_mesh.SetupMesh.rst", "developers_guide/landice/generated/compass.landice.tests.eismint2.setup_mesh.SetupMesh.run.rst", "developers_guide/landice/generated/compass.landice.tests.eismint2.standard_experiments.StandardExperiments.rst", "developers_guide/landice/generated/compass.landice.tests.eismint2.standard_experiments.StandardExperiments.run.rst", "developers_guide/landice/generated/compass.landice.tests.eismint2.standard_experiments.visualize.Visualize.rst", "developers_guide/landice/generated/compass.landice.tests.eismint2.standard_experiments.visualize.Visualize.run.rst", "developers_guide/landice/generated/compass.landice.tests.eismint2.standard_experiments.visualize.visualize_eismint2.rst", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.A.A.rst", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.A.A.configure.rst", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.A.A.run.rst", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.A.visualize.Visualize.rst", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.A.visualize.Visualize.run.rst", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.B.B.rst", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.B.B.configure.rst", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.B.B.run.rst", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.B.visualize.Visualize.rst", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.B.visualize.Visualize.run.rst", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.EnthalpyBenchmark.rst", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.run_model.RunModel.rst", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.run_model.RunModel.run.rst", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.run_model.RunModel.setup.rst", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.setup_mesh.SetupMesh.rst", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.setup_mesh.SetupMesh.run.rst", "developers_guide/landice/generated/compass.landice.tests.greenland.Greenland.rst", "developers_guide/landice/generated/compass.landice.tests.greenland.decomposition_test.DecompositionTest.rst", "developers_guide/landice/generated/compass.landice.tests.greenland.decomposition_test.DecompositionTest.run.rst", "developers_guide/landice/generated/compass.landice.tests.greenland.high_res_mesh.HighResMesh.rst", "developers_guide/landice/generated/compass.landice.tests.greenland.high_res_mesh.HighResMesh.run.rst", "developers_guide/landice/generated/compass.landice.tests.greenland.mesh.Mesh.rst", "developers_guide/landice/generated/compass.landice.tests.greenland.mesh.Mesh.build_cell_width.rst", "developers_guide/landice/generated/compass.landice.tests.greenland.mesh.Mesh.run.rst", "developers_guide/landice/generated/compass.landice.tests.greenland.restart_test.RestartTest.rst", "developers_guide/landice/generated/compass.landice.tests.greenland.restart_test.RestartTest.run.rst", "developers_guide/landice/generated/compass.landice.tests.greenland.run_model.RunModel.rst", "developers_guide/landice/generated/compass.landice.tests.greenland.run_model.RunModel.run.rst", "developers_guide/landice/generated/compass.landice.tests.greenland.run_model.RunModel.setup.rst", "developers_guide/landice/generated/compass.landice.tests.greenland.smoke_test.SmokeTest.rst", "developers_guide/landice/generated/compass.landice.tests.greenland.smoke_test.SmokeTest.run.rst", "developers_guide/landice/generated/compass.landice.tests.humboldt.Humboldt.rst", "developers_guide/landice/generated/compass.landice.tests.humboldt.decomposition_test.DecompositionTest.rst", "developers_guide/landice/generated/compass.landice.tests.humboldt.decomposition_test.DecompositionTest.validate.rst", "developers_guide/landice/generated/compass.landice.tests.humboldt.mesh.Mesh.rst", "developers_guide/landice/generated/compass.landice.tests.humboldt.mesh.Mesh.run.rst", "developers_guide/landice/generated/compass.landice.tests.humboldt.mesh_gen.MeshGen.rst", "developers_guide/landice/generated/compass.landice.tests.humboldt.mesh_gen.MeshGen.run.rst", "developers_guide/landice/generated/compass.landice.tests.humboldt.restart_test.RestartTest.rst", "developers_guide/landice/generated/compass.landice.tests.humboldt.restart_test.RestartTest.validate.rst", "developers_guide/landice/generated/compass.landice.tests.humboldt.run_model.RunModel.rst", "developers_guide/landice/generated/compass.landice.tests.humboldt.run_model.RunModel.run.rst", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.HydroRadial.rst", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.decomposition_test.DecompositionTest.rst", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.decomposition_test.DecompositionTest.run.rst", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.restart_test.RestartTest.rst", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.restart_test.RestartTest.run.rst", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.run_model.RunModel.rst", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.run_model.RunModel.run.rst", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.run_model.RunModel.setup.rst", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.setup_mesh.SetupMesh.rst", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.setup_mesh.SetupMesh.run.rst", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.spinup_test.SpinupTest.rst", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.spinup_test.SpinupTest.run.rst", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.steady_state_drift_test.SteadyStateDriftTest.rst", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.steady_state_drift_test.SteadyStateDriftTest.run.rst", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.visualize.Visualize.rst", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.visualize.Visualize.run.rst", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.visualize.visualize_hydro_radial.rst", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.Ismip6Forcing.rst", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.atmosphere.Atmosphere.rst", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.atmosphere.Atmosphere.configure.rst", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.atmosphere.create_mapfile_smb.rst", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.atmosphere.create_mapfile_smb.build_mapping_file.rst", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.atmosphere.create_mapfile_smb.create_atm_scrip.rst", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.atmosphere.process_smb.ProcessSMB.rst", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.atmosphere.process_smb.ProcessSMB.correct_smb_anomaly_for_climatology.rst", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.atmosphere.process_smb.ProcessSMB.remap_ismip6_smb_to_mali.rst", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.atmosphere.process_smb.ProcessSMB.rename_ismip6_smb_to_mali_vars.rst", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.atmosphere.process_smb.ProcessSMB.run.rst", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.atmosphere.process_smb.ProcessSMB.setup.rst", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.ProcessSmbRacmo.rst", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.ProcessSmbRacmo.correct_smb_anomaly_for_base_smb.rst", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.ProcessSmbRacmo.remap_source_smb_to_mali.rst", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.ProcessSmbRacmo.rename_source_smb_to_mali_vars.rst", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.ProcessSmbRacmo.run.rst", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.ProcessSmbRacmo.setup.rst", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.configure.configure.rst", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.create_mapfile.build_mapping_file.rst", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.ocean_basal.OceanBasal.rst", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.ocean_basal.OceanBasal.configure.rst", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.ProcessBasalMelt.rst", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.ProcessBasalMelt.combine_ismip6_inputfiles.rst", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.ProcessBasalMelt.remap_ismip6_basal_melt_to_mali_vars.rst", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.ProcessBasalMelt.rename_ismip6_basal_melt_to_mali_vars.rst", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.ProcessBasalMelt.run.rst", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.ProcessBasalMelt.setup.rst", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.ocean_thermal.OceanThermal.rst", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.ocean_thermal.OceanThermal.configure.rst", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.ocean_thermal.process_thermal_forcing.ProcessThermalForcing.rst", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.ocean_thermal.process_thermal_forcing.ProcessThermalForcing.remap_ismip6_thermal_forcing_to_mali_vars.rst", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.ocean_thermal.process_thermal_forcing.ProcessThermalForcing.rename_ismip6_thermal_forcing_to_mali_vars.rst", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.ocean_thermal.process_thermal_forcing.ProcessThermalForcing.run.rst", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.ocean_thermal.process_thermal_forcing.ProcessThermalForcing.setup.rst", "developers_guide/landice/generated/compass.landice.tests.kangerlussuaq.Kangerlussuaq.rst", "developers_guide/landice/generated/compass.landice.tests.kangerlussuaq.mesh.Mesh.rst", "developers_guide/landice/generated/compass.landice.tests.kangerlussuaq.mesh.Mesh.run.rst", "developers_guide/landice/generated/compass.landice.tests.kangerlussuaq.mesh_gen.MeshGen.rst", "developers_guide/landice/generated/compass.landice.tests.kangerlussuaq.mesh_gen.MeshGen.run.rst", "developers_guide/landice/generated/compass.landice.tests.koge_bugt_s.KogeBugtS.rst", "developers_guide/landice/generated/compass.landice.tests.koge_bugt_s.mesh.Mesh.rst", "developers_guide/landice/generated/compass.landice.tests.koge_bugt_s.mesh.Mesh.run.rst", "developers_guide/landice/generated/compass.landice.tests.koge_bugt_s.mesh_gen.MeshGen.rst", "developers_guide/landice/generated/compass.landice.tests.koge_bugt_s.mesh_gen.MeshGen.run.rst", "developers_guide/landice/generated/compass.landice.tests.mismipplus.MISMIPplus.rst", "developers_guide/landice/generated/compass.landice.tests.mismipplus.run_model.RunModel.rst", "developers_guide/landice/generated/compass.landice.tests.mismipplus.run_model.RunModel.run.rst", "developers_guide/landice/generated/compass.landice.tests.mismipplus.run_model.RunModel.setup.rst", "developers_guide/landice/generated/compass.landice.tests.mismipplus.smoke_test.SmokeTest.rst", "developers_guide/landice/generated/compass.landice.tests.mismipplus.smoke_test.SmokeTest.run.rst", "developers_guide/landice/generated/compass.landice.tests.thwaites.Thwaites.rst", "developers_guide/landice/generated/compass.landice.tests.thwaites.decomposition_test.DecompositionTest.rst", "developers_guide/landice/generated/compass.landice.tests.thwaites.decomposition_test.DecompositionTest.run.rst", "developers_guide/landice/generated/compass.landice.tests.thwaites.restart_test.RestartTest.rst", "developers_guide/landice/generated/compass.landice.tests.thwaites.restart_test.RestartTest.run.rst", "developers_guide/landice/generated/compass.landice.tests.thwaites.run_model.RunModel.rst", "developers_guide/landice/generated/compass.landice.tests.thwaites.run_model.RunModel.run.rst", "developers_guide/landice/generated/compass.landice.tests.thwaites.run_model.RunModel.setup.rst", "developers_guide/landice/index.rst", "developers_guide/landice/test_groups/calving_dt_convergence.rst", "developers_guide/landice/test_groups/circular_shelf.rst", "developers_guide/landice/test_groups/dome.rst", "developers_guide/landice/test_groups/eismint2.rst", "developers_guide/landice/test_groups/enthalpy_benchmark.rst", "developers_guide/landice/test_groups/greenland.rst", "developers_guide/landice/test_groups/humboldt.rst", "developers_guide/landice/test_groups/hydro_radial.rst", "developers_guide/landice/test_groups/index.rst", "developers_guide/landice/test_groups/ismip6_forcing.rst", "developers_guide/landice/test_groups/kangerlussuaq.rst", "developers_guide/landice/test_groups/koge_bugt_s.rst", "developers_guide/landice/test_groups/mismipplus.rst", "developers_guide/landice/test_groups/thwaites.rst", "developers_guide/machines/anvil.rst", "developers_guide/machines/chrysalis.rst", "developers_guide/machines/compy.rst", "developers_guide/machines/cori.rst", "developers_guide/machines/index.rst", "developers_guide/machines/perlmutter.rst", "developers_guide/ocean/api.rst", "developers_guide/ocean/framework.rst", "developers_guide/ocean/generated/compass.ocean.Ocean.rst", "developers_guide/ocean/generated/compass.ocean.haney.compute_haney_number.rst", "developers_guide/ocean/generated/compass.ocean.iceshelf.adjust_ssh.rst", "developers_guide/ocean/generated/compass.ocean.iceshelf.compute_land_ice_pressure_and_draft.rst", "developers_guide/ocean/generated/compass.ocean.mesh.cull.CullMeshStep.rst", "developers_guide/ocean/generated/compass.ocean.mesh.cull.CullMeshStep.run.rst", "developers_guide/ocean/generated/compass.ocean.mesh.cull.CullMeshStep.setup.rst", "developers_guide/ocean/generated/compass.ocean.mesh.cull.cull_mesh.rst", "developers_guide/ocean/generated/compass.ocean.mesh.floodplain.FloodplainMeshStep.rst", "developers_guide/ocean/generated/compass.ocean.mesh.floodplain.FloodplainMeshStep.run.rst", "developers_guide/ocean/generated/compass.ocean.particles.remap_particles.rst", "developers_guide/ocean/generated/compass.ocean.particles.write.rst", "developers_guide/ocean/generated/compass.ocean.plot.plot_initial_state.rst", "developers_guide/ocean/generated/compass.ocean.plot.plot_vertical_grid.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.BaroclinicChannel.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.decomp_test.DecompTest.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.decomp_test.DecompTest.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.decomp_test.DecompTest.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.default.Default.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.default.Default.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.default.Default.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.forward.Forward.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.forward.Forward.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.forward.Forward.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.initial_state.InitialState.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.initial_state.InitialState.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.initial_state.InitialState.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.restart_test.RestartTest.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.restart_test.RestartTest.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.restart_test.RestartTest.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.rpe_test.RpeTest.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.rpe_test.RpeTest.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.rpe_test.RpeTest.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.dam_break.DamBreak.rst", "developers_guide/ocean/generated/compass.ocean.tests.dam_break.default.Default.rst", "developers_guide/ocean/generated/compass.ocean.tests.dam_break.default.Default.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.dam_break.forward.Forward.rst", "developers_guide/ocean/generated/compass.ocean.tests.dam_break.forward.Forward.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.dam_break.initial_state.InitialState.rst", "developers_guide/ocean/generated/compass.ocean.tests.dam_break.initial_state.InitialState.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.dam_break.viz.Viz.rst", "developers_guide/ocean/generated/compass.ocean.tests.dam_break.viz.Viz.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.drying_slope.DryingSlope.rst", "developers_guide/ocean/generated/compass.ocean.tests.drying_slope.default.Default.rst", "developers_guide/ocean/generated/compass.ocean.tests.drying_slope.default.Default.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.drying_slope.forward.Forward.rst", "developers_guide/ocean/generated/compass.ocean.tests.drying_slope.forward.Forward.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.drying_slope.initial_state.InitialState.rst", "developers_guide/ocean/generated/compass.ocean.tests.drying_slope.initial_state.InitialState.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.drying_slope.viz.Viz.rst", "developers_guide/ocean/generated/compass.ocean.tests.drying_slope.viz.Viz.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.GlobalConvergence.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.CosineBell.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.CosineBell.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.CosineBell.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rmse.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.forward.Forward.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.forward.Forward.get_dt.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.forward.Forward.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.forward.Forward.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.init.Init.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.init.Init.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.GlobalOcean.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.analysis_test.AnalysisTest.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.analysis_test.AnalysisTest.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.analysis_test.AnalysisTest.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.configure.configure_global_ocean.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.daily_output_test.DailyOutputTest.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.daily_output_test.DailyOutputTest.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.daily_output_test.DailyOutputTest.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.decomp_test.DecompTest.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.decomp_test.DecompTest.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.decomp_test.DecompTest.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.dynamic_adjustment.DynamicAdjustment.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.dynamic_adjustment.DynamicAdjustment.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.FilesForE3SM.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.FilesForE3SM.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.FilesForE3SM.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.diagnostics_files.DiagnosticsFiles.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.diagnostics_files.DiagnosticsFiles.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.ocean_graph_partition.OceanGraphPartition.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.ocean_graph_partition.OceanGraphPartition.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.ocean_initial_condition.OceanInitialCondition.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.ocean_initial_condition.OceanInitialCondition.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.scrip.Scrip.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.scrip.Scrip.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.seaice_initial_condition.SeaiceInitialCondition.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.seaice_initial_condition.SeaiceInitialCondition.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.forward.ForwardStep.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.forward.ForwardStep.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.forward.ForwardStep.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.forward.ForwardTestCase.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.forward.ForwardTestCase.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.forward.ForwardTestCase.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.init.Init.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.init.Init.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.init.Init.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.init.initial_state.InitialState.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.init.initial_state.InitialState.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.init.initial_state.InitialState.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.init.ssh_adjustment.SshAdjustment.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.init.ssh_adjustment.SshAdjustment.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.init.ssh_adjustment.SshAdjustment.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.Mesh.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.Mesh.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.Mesh.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.ec30to60.EC30to60BaseMesh.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.ec30to60.EC30to60BaseMesh.build_cell_width_lat_lon.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.ec30to60.dynamic_adjustment.EC30to60DynamicAdjustment.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.ec30to60.dynamic_adjustment.EC30to60DynamicAdjustment.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.ec30to60.dynamic_adjustment.EC30to60DynamicAdjustment.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.qu240.dynamic_adjustment.QU240DynamicAdjustment.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.qu240.dynamic_adjustment.QU240DynamicAdjustment.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.qu240.dynamic_adjustment.QU240DynamicAdjustment.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.so12to60.SO12to60BaseMesh.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.so12to60.SO12to60BaseMesh.build_cell_width_lat_lon.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.so12to60.dynamic_adjustment.SO12to60DynamicAdjustment.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.so12to60.dynamic_adjustment.SO12to60DynamicAdjustment.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.so12to60.dynamic_adjustment.SO12to60DynamicAdjustment.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.wc14.WC14BaseMesh.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.wc14.WC14BaseMesh.build_cell_width_lat_lon.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.wc14.dynamic_adjustment.WC14DynamicAdjustment.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.wc14.dynamic_adjustment.WC14DynamicAdjustment.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.wc14.dynamic_adjustment.WC14DynamicAdjustment.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.metadata.add_mesh_and_init_metadata.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.metadata.get_e3sm_mesh_names.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.performance_test.PerformanceTest.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.performance_test.PerformanceTest.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.performance_test.PerformanceTest.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.restart_test.RestartTest.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.restart_test.RestartTest.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.restart_test.RestartTest.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.threads_test.ThreadsTest.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.threads_test.ThreadsTest.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.threads_test.ThreadsTest.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.gotm.Gotm.rst", "developers_guide/ocean/generated/compass.ocean.tests.gotm.default.Default.rst", "developers_guide/ocean/generated/compass.ocean.tests.gotm.default.Default.validate.rst", "developers_guide/ocean/generated/compass.ocean.tests.gotm.default.analysis.Analysis.rst", "developers_guide/ocean/generated/compass.ocean.tests.gotm.default.analysis.Analysis.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.gotm.default.forward.Forward.rst", "developers_guide/ocean/generated/compass.ocean.tests.gotm.default.forward.Forward.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.gotm.default.init.Init.rst", "developers_guide/ocean/generated/compass.ocean.tests.gotm.default.init.Init.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.Hurricane.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.analysis.Analysis.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.analysis.Analysis.read_pointstats.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.analysis.Analysis.read_station_data.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.analysis.Analysis.read_station_file.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.analysis.Analysis.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.analysis.Analysis.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.forward.Forward.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.forward.Forward.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.forward.Forward.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.forward.forward.ForwardStep.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.forward.forward.ForwardStep.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.forward.forward.ForwardStep.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.Init.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.Init.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.Init.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.create_pointstats_file.CreatePointstatsFile.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.create_pointstats_file.CreatePointstatsFile.create_pointstats_file.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.create_pointstats_file.CreatePointstatsFile.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.initial_state.InitialState.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.initial_state.InitialState.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.initial_state.InitialState.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing.interpolate_data_to_grid.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing.plot_interp_data.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing.write_to_file.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.mesh.Mesh.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.mesh.Mesh.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.mesh.Mesh.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.mesh.dequ120at30cr10rr2.DEQU120at30cr10rr2BaseMesh.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.mesh.dequ120at30cr10rr2.DEQU120at30cr10rr2BaseMesh.build_cell_width_lat_lon.rst", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.IceShelf2d.rst", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.default.Default.rst", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.default.Default.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.default.Default.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.forward.Forward.rst", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.forward.Forward.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.forward.Forward.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.initial_state.InitialState.rst", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.initial_state.InitialState.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.restart_test.RestartTest.rst", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.restart_test.RestartTest.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.restart_test.RestartTest.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.ssh_adjustment.SshAdjustment.rst", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.ssh_adjustment.SshAdjustment.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.ssh_adjustment.SshAdjustment.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.viz.Viz.rst", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.viz.Viz.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.InternalWave.rst", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.default.Default.rst", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.default.Default.validate.rst", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.forward.Forward.rst", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.forward.Forward.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.initial_state.InitialState.rst", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.initial_state.InitialState.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.rpe_test.RpeTest.rst", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.rpe_test.analysis.Analysis.rst", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.rpe_test.analysis.Analysis.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.ten_day_test.TenDayTest.rst", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.ten_day_test.TenDayTest.validate.rst", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.viz.Viz.rst", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.viz.Viz.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.IsomipPlus.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.evap.update_evaporation_flux.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.forward.Forward.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.forward.Forward.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.forward.Forward.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.geom.interpolate_ocean_mask.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.geom.process_input_geometry.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.initial_state.InitialState.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.initial_state.InitialState.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.misomip.Misomip.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.misomip.Misomip.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.ocean_test.OceanTest.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.ocean_test.OceanTest.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.ocean_test.OceanTest.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.ssh_adjustment.SshAdjustment.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.ssh_adjustment.SshAdjustment.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.ssh_adjustment.SshAdjustment.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.streamfunction.Streamfunction.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.streamfunction.Streamfunction.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.Viz.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.Viz.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.file_complete.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.images_to_movies.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_3d_field_top_bot_section.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_barotropic_streamfunction.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_horiz_series.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_ice_shelf_boundary_variables.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_layer_interfaces.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_melt_rates.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_overturning_streamfunction.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_potential_density.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_salinity.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_temperature.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.TimeSeriesPlotter.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.TimeSeriesPlotter.plot_melt_time_series.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.TimeSeriesPlotter.plot_time_series.rst", "developers_guide/ocean/generated/compass.ocean.tests.merry_go_round.MerryGoRound.rst", "developers_guide/ocean/generated/compass.ocean.tests.merry_go_round.convergence_test.analysis.Analysis.rst", "developers_guide/ocean/generated/compass.ocean.tests.merry_go_round.convergence_test.analysis.Analysis.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.merry_go_round.default.Default.rst", "developers_guide/ocean/generated/compass.ocean.tests.merry_go_round.default.Default.validate.rst", "developers_guide/ocean/generated/compass.ocean.tests.merry_go_round.forward.Forward.rst", "developers_guide/ocean/generated/compass.ocean.tests.merry_go_round.forward.Forward.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.merry_go_round.initial_state.InitialState.rst", "developers_guide/ocean/generated/compass.ocean.tests.merry_go_round.initial_state.InitialState.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.merry_go_round.viz.Viz.rst", "developers_guide/ocean/generated/compass.ocean.tests.merry_go_round.viz.Viz.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.PlanarConvergence.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.conv_init.ConvInit.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.conv_init.ConvInit.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.conv_test_case.ConvTestCase.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.conv_test_case.ConvTestCase.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.conv_test_case.ConvTestCase.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.conv_test_case.ConvTestCase.update_cores.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.forward.Forward.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.forward.Forward.get_dt_duration.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.forward.Forward.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.forward.Forward.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.horizontal_advection.HorizontalAdvection.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.horizontal_advection.HorizontalAdvection.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.horizontal_advection.HorizontalAdvection.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.horizontal_advection.analysis.Analysis.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.horizontal_advection.analysis.Analysis.rmse.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.horizontal_advection.analysis.Analysis.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.horizontal_advection.init.Init.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.horizontal_advection.init.Init.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.soma.Soma.rst", "developers_guide/ocean/generated/compass.ocean.tests.soma.analysis.Analysis.rst", "developers_guide/ocean/generated/compass.ocean.tests.soma.analysis.Analysis.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.soma.forward.Forward.rst", "developers_guide/ocean/generated/compass.ocean.tests.soma.forward.Forward.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.soma.initial_state.InitialState.rst", "developers_guide/ocean/generated/compass.ocean.tests.soma.initial_state.InitialState.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.soma.soma_test_case.SomaTestCase.rst", "developers_guide/ocean/generated/compass.ocean.tests.soma.soma_test_case.SomaTestCase.validate.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.SphereTransport.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.CorrelatedTracers2D.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.CorrelatedTracers2D.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.CorrelatedTracers2D.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.analysis.Analysis.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.analysis.Analysis.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.Forward.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.Forward.get_timestep_str.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.Forward.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.Forward.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.init.Init.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.init.Init.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.mesh.Mesh.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.mesh.Mesh.build_cell_width_lat_lon.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.mesh.Mesh.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.Divergent2D.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.Divergent2D.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.Divergent2D.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.analysis.Analysis.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.analysis.Analysis.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.forward.Forward.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.forward.Forward.get_timestep_str.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.forward.Forward.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.forward.Forward.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.init.Init.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.init.Init.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.mesh.Mesh.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.mesh.Mesh.build_cell_width_lat_lon.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.mesh.Mesh.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.Nondivergent2D.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.Nondivergent2D.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.Nondivergent2D.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.analysis.Analysis.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.analysis.Analysis.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.forward.Forward.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.forward.Forward.get_timestep_str.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.forward.Forward.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.forward.Forward.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.init.Init.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.init.Init.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.mesh.Mesh.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.mesh.Mesh.build_cell_width_lat_lon.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.mesh.Mesh.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.compute_convergence_rates.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.compute_error_from_output_ncfile.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.make_convergence_arrays.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.plot_convergence.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.plot_filament.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.plot_over_and_undershoot_errors.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.plot_sol.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.print_data_as_csv.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.print_error_conv_table.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.read_ncl_rgb_file.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.Rotation2D.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.Rotation2D.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.Rotation2D.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.analysis.Analysis.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.analysis.Analysis.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.forward.Forward.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.forward.Forward.get_timestep_str.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.forward.Forward.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.forward.Forward.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.init.Init.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.init.Init.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.mesh.Mesh.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.mesh.Mesh.build_cell_width_lat_lon.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.mesh.Mesh.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.ziso.Ziso.rst", "developers_guide/ocean/generated/compass.ocean.tests.ziso.ZisoTestCase.rst", "developers_guide/ocean/generated/compass.ocean.tests.ziso.ZisoTestCase.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.ziso.ZisoTestCase.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.ziso.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.ziso.forward.Forward.rst", "developers_guide/ocean/generated/compass.ocean.tests.ziso.forward.Forward.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.ziso.forward.Forward.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.ziso.initial_state.InitialState.rst", "developers_guide/ocean/generated/compass.ocean.tests.ziso.initial_state.InitialState.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.ziso.with_frazil.WithFrazil.rst", "developers_guide/ocean/generated/compass.ocean.tests.ziso.with_frazil.WithFrazil.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.ziso.with_frazil.WithFrazil.run.rst", "developers_guide/ocean/generated/compass.ocean.vertical.grid_1d.generate_1d_grid.rst", "developers_guide/ocean/generated/compass.ocean.vertical.grid_1d.write_1d_grid.rst", "developers_guide/ocean/generated/compass.ocean.vertical.init_vertical_coord.rst", "developers_guide/ocean/generated/compass.ocean.vertical.partial_cells.alter_bottom_depth.rst", "developers_guide/ocean/generated/compass.ocean.vertical.partial_cells.alter_ssh.rst", "developers_guide/ocean/generated/compass.ocean.vertical.zlevel.compute_min_max_level_cell.rst", "developers_guide/ocean/generated/compass.ocean.vertical.zlevel.compute_z_level_layer_thickness.rst", "developers_guide/ocean/generated/compass.ocean.vertical.zlevel.compute_z_level_resting_thickness.rst", "developers_guide/ocean/generated/compass.ocean.vertical.zlevel.init_z_level_vertical_coord.rst", "developers_guide/ocean/generated/compass.ocean.vertical.zstar.init_z_star_vertical_coord.rst", "developers_guide/ocean/index.rst", "developers_guide/ocean/test_groups/baroclinic_channel.rst", "developers_guide/ocean/test_groups/dam_break.rst", "developers_guide/ocean/test_groups/drying_slope.rst", "developers_guide/ocean/test_groups/global_convergence.rst", "developers_guide/ocean/test_groups/global_ocean.rst", "developers_guide/ocean/test_groups/gotm.rst", "developers_guide/ocean/test_groups/hurricane.rst", "developers_guide/ocean/test_groups/ice_shelf_2d.rst", "developers_guide/ocean/test_groups/index.rst", "developers_guide/ocean/test_groups/internal_wave.rst", "developers_guide/ocean/test_groups/isomip_plus.rst", "developers_guide/ocean/test_groups/merry_go_round.rst", "developers_guide/ocean/test_groups/planar_convergence.rst", "developers_guide/ocean/test_groups/soma.rst", "developers_guide/ocean/test_groups/sphere_transport.rst", "developers_guide/ocean/test_groups/spherical_harmonic_transform.rst", "developers_guide/ocean/test_groups/ziso.rst", "developers_guide/organization.rst", "developers_guide/overview.rst", "developers_guide/quick_start.rst", "developers_guide/troubleshooting.rst", "glossary.rst", "index.rst", "tutorials/dev_add_param_study.rst", "tutorials/dev_add_test_group.rst", "tutorials/dev_porting_legacy.rst", "users_guide/config_files.rst", "users_guide/landice/framework/index.rst", "users_guide/landice/index.rst", "users_guide/landice/suites.rst", "users_guide/landice/test_groups/calving_dt_convergence.rst", "users_guide/landice/test_groups/circular_shelf.rst", "users_guide/landice/test_groups/dome.rst", "users_guide/landice/test_groups/eismint2.rst", "users_guide/landice/test_groups/enthalpy_benchmark.rst", "users_guide/landice/test_groups/greenland.rst", "users_guide/landice/test_groups/humboldt.rst", "users_guide/landice/test_groups/hydro_radial.rst", "users_guide/landice/test_groups/index.rst", "users_guide/landice/test_groups/ismip6_forcing.rst", "users_guide/landice/test_groups/kangerlussuaq.rst", "users_guide/landice/test_groups/koge_bugt_s.rst", "users_guide/landice/test_groups/mismipplus.rst", "users_guide/landice/test_groups/thwaites.rst", "users_guide/machines/anvil.rst", "users_guide/machines/chrysalis.rst", "users_guide/machines/compy.rst", "users_guide/machines/cori.rst", "users_guide/machines/index.rst", "users_guide/machines/perlmutter.rst", "users_guide/ocean/framework/ice_shelf.rst", "users_guide/ocean/framework/index.rst", "users_guide/ocean/framework/vertical.rst", "users_guide/ocean/index.rst", "users_guide/ocean/suites.rst", "users_guide/ocean/test_groups/baroclinic_channel.rst", "users_guide/ocean/test_groups/dam_break.rst", "users_guide/ocean/test_groups/drying_slope.rst", "users_guide/ocean/test_groups/global_convergence.rst", "users_guide/ocean/test_groups/global_ocean.rst", "users_guide/ocean/test_groups/gotm.rst", "users_guide/ocean/test_groups/hurricane.rst", "users_guide/ocean/test_groups/ice_shelf_2d.rst", "users_guide/ocean/test_groups/index.rst", "users_guide/ocean/test_groups/internal_wave.rst", "users_guide/ocean/test_groups/isomip_plus.rst", "users_guide/ocean/test_groups/merry_go_round.rst", "users_guide/ocean/test_groups/planar_convergence.rst", "users_guide/ocean/test_groups/soma.rst", "users_guide/ocean/test_groups/sphere_transport.rst", "users_guide/ocean/test_groups/spherical_harmonic_transform.rst", "users_guide/ocean/test_groups/ziso.rst", "users_guide/quick_start.rst", "users_guide/test_cases.rst", "users_guide/test_suites.rst", "versions.rst"], "titles": ["Caching outputs from compass steps", "compass python package", "Design Documents", "Template", "API reference", "Building the Documentation", "Command-line interface", "Documentation", "Framework", "compass.MpasCore", "compass.MpasCore.add_test_group", "compass.Step", "compass.Step.add_input_file", "compass.Step.add_model_as_input", "compass.Step.add_namelist_file", "compass.Step.add_namelist_options", "compass.Step.add_output_file", "compass.Step.add_streams_file", "compass.Step.constrain_resources", "compass.Step.run", "compass.Step.runtime_setup", "compass.Step.set_resources", "compass.Step.setup", "compass.Step.update_namelist_at_runtime", "compass.Step.update_namelist_pio", "compass.Step.update_streams_at_runtime", "compass.TestCase", "compass.TestCase.add_step", "compass.TestCase.configure", "compass.TestCase.run", "compass.TestCase.validate", "compass.TestGroup", "compass.TestGroup.add_test_case", "compass.__main__.main", "compass.cache.update_cache", "compass.clean.clean_cases", "compass.config.CompassConfigParser", "compass.io.download", "compass.io.symlink", "compass.list.list_cases", "compass.list.list_machines", "compass.list.list_suites", "compass.logging.log_method_call", "compass.mesh.IcosahedralMeshStep", "compass.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon", "compass.mesh.IcosahedralMeshStep.get_cell_width", "compass.mesh.IcosahedralMeshStep.get_subdivisions", "compass.mesh.IcosahedralMeshStep.make_jigsaw_mesh", "compass.mesh.IcosahedralMeshStep.run", "compass.mesh.IcosahedralMeshStep.setup", "compass.mesh.QuasiUniformSphericalMeshStep", "compass.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon", "compass.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh", "compass.mesh.QuasiUniformSphericalMeshStep.run", "compass.mesh.QuasiUniformSphericalMeshStep.setup", "compass.mesh.spherical.SphericalBaseStep", "compass.mesh.spherical.SphericalBaseStep.run", "compass.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width", "compass.mesh.spherical.SphericalBaseStep.setup", "compass.model.make_graph_file", "compass.model.partition", "compass.model.run_model", "compass.mpas_cores.get_mpas_cores", "compass.parallel.check_parallel_system", "compass.parallel.get_available_cores_and_nodes", "compass.parallel.run_command", "compass.parallel.set_cores_per_node", "compass.provenance.write", "compass.run.serial.run_single_step", "compass.run.serial.run_tests", "compass.setup.setup_case", "compass.setup.setup_cases", "compass.suite.clean_suite", "compass.suite.setup_suite", "compass.validate.compare_timers", "compass.validate.compare_variables", "landice", "Land-ice Framework", "compass.landice.Landice", "compass.landice.tests.calving_dt_convergence.CalvingDtConvergence", "compass.landice.tests.calving_dt_convergence.dt_convergence_test.DtConvergenceTest", "compass.landice.tests.calving_dt_convergence.dt_convergence_test.DtConvergenceTest.validate", "compass.landice.tests.calving_dt_convergence.run_model.RunModel", "compass.landice.tests.calving_dt_convergence.run_model.RunModel.run", "compass.landice.tests.circular_shelf.CircularShelf", "compass.landice.tests.circular_shelf.decomposition_test.DecompositionTest", "compass.landice.tests.circular_shelf.decomposition_test.DecompositionTest.run", "compass.landice.tests.circular_shelf.run_model.RunModel", "compass.landice.tests.circular_shelf.run_model.RunModel.run", "compass.landice.tests.circular_shelf.setup_mesh.SetupMesh", "compass.landice.tests.circular_shelf.setup_mesh.SetupMesh.run", "compass.landice.tests.circular_shelf.visualize.Visualize", "compass.landice.tests.circular_shelf.visualize.Visualize.run", "compass.landice.tests.circular_shelf.visualize.visualize_circular_shelf", "compass.landice.tests.dome.Dome", "compass.landice.tests.dome.decomposition_test.DecompositionTest", "compass.landice.tests.dome.decomposition_test.DecompositionTest.run", "compass.landice.tests.dome.restart_test.RestartTest", "compass.landice.tests.dome.restart_test.RestartTest.run", "compass.landice.tests.dome.run_model.RunModel", "compass.landice.tests.dome.run_model.RunModel.run", "compass.landice.tests.dome.run_model.RunModel.setup", "compass.landice.tests.dome.setup_mesh.SetupMesh", "compass.landice.tests.dome.setup_mesh.SetupMesh.run", "compass.landice.tests.dome.smoke_test.SmokeTest", "compass.landice.tests.dome.smoke_test.SmokeTest.run", "compass.landice.tests.dome.visualize.Visualize", "compass.landice.tests.dome.visualize.Visualize.run", "compass.landice.tests.dome.visualize.visualize_dome", "compass.landice.tests.eismint2.Eismint2", "compass.landice.tests.eismint2.decomposition_test.DecompositionTest", "compass.landice.tests.eismint2.decomposition_test.DecompositionTest.run", "compass.landice.tests.eismint2.restart_test.RestartTest", "compass.landice.tests.eismint2.restart_test.RestartTest.run", "compass.landice.tests.eismint2.run_experiment.RunExperiment", "compass.landice.tests.eismint2.run_experiment.RunExperiment.run", "compass.landice.tests.eismint2.run_experiment.RunExperiment.setup", "compass.landice.tests.eismint2.setup_mesh.SetupMesh", "compass.landice.tests.eismint2.setup_mesh.SetupMesh.run", "compass.landice.tests.eismint2.standard_experiments.StandardExperiments", "compass.landice.tests.eismint2.standard_experiments.StandardExperiments.run", "compass.landice.tests.eismint2.standard_experiments.visualize.Visualize", "compass.landice.tests.eismint2.standard_experiments.visualize.Visualize.run", "compass.landice.tests.eismint2.standard_experiments.visualize.visualize_eismint2", "compass.landice.tests.enthalpy_benchmark.A.A", "compass.landice.tests.enthalpy_benchmark.A.A.configure", "compass.landice.tests.enthalpy_benchmark.A.A.run", "compass.landice.tests.enthalpy_benchmark.A.visualize.Visualize", "compass.landice.tests.enthalpy_benchmark.A.visualize.Visualize.run", "compass.landice.tests.enthalpy_benchmark.B.B", "compass.landice.tests.enthalpy_benchmark.B.B.configure", "compass.landice.tests.enthalpy_benchmark.B.B.run", "compass.landice.tests.enthalpy_benchmark.B.visualize.Visualize", "compass.landice.tests.enthalpy_benchmark.B.visualize.Visualize.run", "compass.landice.tests.enthalpy_benchmark.EnthalpyBenchmark", "compass.landice.tests.enthalpy_benchmark.run_model.RunModel", "compass.landice.tests.enthalpy_benchmark.run_model.RunModel.run", "compass.landice.tests.enthalpy_benchmark.run_model.RunModel.setup", "compass.landice.tests.enthalpy_benchmark.setup_mesh.SetupMesh", "compass.landice.tests.enthalpy_benchmark.setup_mesh.SetupMesh.run", "compass.landice.tests.greenland.Greenland", "compass.landice.tests.greenland.decomposition_test.DecompositionTest", "compass.landice.tests.greenland.decomposition_test.DecompositionTest.run", "compass.landice.tests.greenland.high_res_mesh.HighResMesh", "compass.landice.tests.greenland.high_res_mesh.HighResMesh.run", "compass.landice.tests.greenland.mesh.Mesh", "compass.landice.tests.greenland.mesh.Mesh.build_cell_width", "compass.landice.tests.greenland.mesh.Mesh.run", "compass.landice.tests.greenland.restart_test.RestartTest", "compass.landice.tests.greenland.restart_test.RestartTest.run", "compass.landice.tests.greenland.run_model.RunModel", "compass.landice.tests.greenland.run_model.RunModel.run", "compass.landice.tests.greenland.run_model.RunModel.setup", "compass.landice.tests.greenland.smoke_test.SmokeTest", "compass.landice.tests.greenland.smoke_test.SmokeTest.run", "compass.landice.tests.humboldt.Humboldt", "compass.landice.tests.humboldt.decomposition_test.DecompositionTest", "compass.landice.tests.humboldt.decomposition_test.DecompositionTest.validate", "compass.landice.tests.humboldt.mesh.Mesh", "compass.landice.tests.humboldt.mesh.Mesh.run", "compass.landice.tests.humboldt.mesh_gen.MeshGen", "compass.landice.tests.humboldt.mesh_gen.MeshGen.run", "compass.landice.tests.humboldt.restart_test.RestartTest", "compass.landice.tests.humboldt.restart_test.RestartTest.validate", "compass.landice.tests.humboldt.run_model.RunModel", "compass.landice.tests.humboldt.run_model.RunModel.run", "compass.landice.tests.hydro_radial.HydroRadial", "compass.landice.tests.hydro_radial.decomposition_test.DecompositionTest", "compass.landice.tests.hydro_radial.decomposition_test.DecompositionTest.run", "compass.landice.tests.hydro_radial.restart_test.RestartTest", "compass.landice.tests.hydro_radial.restart_test.RestartTest.run", "compass.landice.tests.hydro_radial.run_model.RunModel", "compass.landice.tests.hydro_radial.run_model.RunModel.run", "compass.landice.tests.hydro_radial.run_model.RunModel.setup", "compass.landice.tests.hydro_radial.setup_mesh.SetupMesh", "compass.landice.tests.hydro_radial.setup_mesh.SetupMesh.run", "compass.landice.tests.hydro_radial.spinup_test.SpinupTest", "compass.landice.tests.hydro_radial.spinup_test.SpinupTest.run", "compass.landice.tests.hydro_radial.steady_state_drift_test.SteadyStateDriftTest", "compass.landice.tests.hydro_radial.steady_state_drift_test.SteadyStateDriftTest.run", "compass.landice.tests.hydro_radial.visualize.Visualize", "compass.landice.tests.hydro_radial.visualize.Visualize.run", "compass.landice.tests.hydro_radial.visualize.visualize_hydro_radial", "compass.landice.tests.ismip6_forcing.Ismip6Forcing", "compass.landice.tests.ismip6_forcing.atmosphere.Atmosphere", "compass.landice.tests.ismip6_forcing.atmosphere.Atmosphere.configure", "compass.landice.tests.ismip6_forcing.atmosphere.create_mapfile_smb", "compass.landice.tests.ismip6_forcing.atmosphere.create_mapfile_smb.build_mapping_file", "compass.landice.tests.ismip6_forcing.atmosphere.create_mapfile_smb.create_atm_scrip", "compass.landice.tests.ismip6_forcing.atmosphere.process_smb.ProcessSMB", "compass.landice.tests.ismip6_forcing.atmosphere.process_smb.ProcessSMB.correct_smb_anomaly_for_climatology", "compass.landice.tests.ismip6_forcing.atmosphere.process_smb.ProcessSMB.remap_ismip6_smb_to_mali", "compass.landice.tests.ismip6_forcing.atmosphere.process_smb.ProcessSMB.rename_ismip6_smb_to_mali_vars", "compass.landice.tests.ismip6_forcing.atmosphere.process_smb.ProcessSMB.run", "compass.landice.tests.ismip6_forcing.atmosphere.process_smb.ProcessSMB.setup", "compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.ProcessSmbRacmo", "compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.ProcessSmbRacmo.correct_smb_anomaly_for_base_smb", "compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.ProcessSmbRacmo.remap_source_smb_to_mali", "compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.ProcessSmbRacmo.rename_source_smb_to_mali_vars", "compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.ProcessSmbRacmo.run", "compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.ProcessSmbRacmo.setup", "compass.landice.tests.ismip6_forcing.configure.configure", "compass.landice.tests.ismip6_forcing.create_mapfile.build_mapping_file", "compass.landice.tests.ismip6_forcing.ocean_basal.OceanBasal", "compass.landice.tests.ismip6_forcing.ocean_basal.OceanBasal.configure", "compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.ProcessBasalMelt", "compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.ProcessBasalMelt.combine_ismip6_inputfiles", "compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.ProcessBasalMelt.remap_ismip6_basal_melt_to_mali_vars", "compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.ProcessBasalMelt.rename_ismip6_basal_melt_to_mali_vars", "compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.ProcessBasalMelt.run", "compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.ProcessBasalMelt.setup", "compass.landice.tests.ismip6_forcing.ocean_thermal.OceanThermal", "compass.landice.tests.ismip6_forcing.ocean_thermal.OceanThermal.configure", "compass.landice.tests.ismip6_forcing.ocean_thermal.process_thermal_forcing.ProcessThermalForcing", "compass.landice.tests.ismip6_forcing.ocean_thermal.process_thermal_forcing.ProcessThermalForcing.remap_ismip6_thermal_forcing_to_mali_vars", "compass.landice.tests.ismip6_forcing.ocean_thermal.process_thermal_forcing.ProcessThermalForcing.rename_ismip6_thermal_forcing_to_mali_vars", "compass.landice.tests.ismip6_forcing.ocean_thermal.process_thermal_forcing.ProcessThermalForcing.run", "compass.landice.tests.ismip6_forcing.ocean_thermal.process_thermal_forcing.ProcessThermalForcing.setup", "compass.landice.tests.kangerlussuaq.Kangerlussuaq", "compass.landice.tests.kangerlussuaq.mesh.Mesh", "compass.landice.tests.kangerlussuaq.mesh.Mesh.run", "compass.landice.tests.kangerlussuaq.mesh_gen.MeshGen", "compass.landice.tests.kangerlussuaq.mesh_gen.MeshGen.run", "compass.landice.tests.koge_bugt_s.KogeBugtS", "compass.landice.tests.koge_bugt_s.mesh.Mesh", "compass.landice.tests.koge_bugt_s.mesh.Mesh.run", "compass.landice.tests.koge_bugt_s.mesh_gen.MeshGen", "compass.landice.tests.koge_bugt_s.mesh_gen.MeshGen.run", "compass.landice.tests.mismipplus.MISMIPplus", "compass.landice.tests.mismipplus.run_model.RunModel", "compass.landice.tests.mismipplus.run_model.RunModel.run", "compass.landice.tests.mismipplus.run_model.RunModel.setup", "compass.landice.tests.mismipplus.smoke_test.SmokeTest", "compass.landice.tests.mismipplus.smoke_test.SmokeTest.run", "compass.landice.tests.thwaites.Thwaites", "compass.landice.tests.thwaites.decomposition_test.DecompositionTest", "compass.landice.tests.thwaites.decomposition_test.DecompositionTest.run", "compass.landice.tests.thwaites.restart_test.RestartTest", "compass.landice.tests.thwaites.restart_test.RestartTest.run", "compass.landice.tests.thwaites.run_model.RunModel", "compass.landice.tests.thwaites.run_model.RunModel.run", "compass.landice.tests.thwaites.run_model.RunModel.setup", "Landice core", "calving_dt_convergence", "circular_shelf", "dome", "eismint2", "enthalpy_benchmark", "greenland", "humboldt", "hydro_radial", "Test groups", "ismip6_forcing", "kangerlussuaq", "koge_bugt_s", "mismipplus", "thwaites", "Anvil", "Chrysalis", "CompyMcNodeFace", "Cori", "Machines", "Perlmutter", "ocean", "Ocean framework", "compass.ocean.Ocean", "compass.ocean.haney.compute_haney_number", "compass.ocean.iceshelf.adjust_ssh", "compass.ocean.iceshelf.compute_land_ice_pressure_and_draft", "compass.ocean.mesh.cull.CullMeshStep", "compass.ocean.mesh.cull.CullMeshStep.run", "compass.ocean.mesh.cull.CullMeshStep.setup", "compass.ocean.mesh.cull.cull_mesh", "compass.ocean.mesh.floodplain.FloodplainMeshStep", "compass.ocean.mesh.floodplain.FloodplainMeshStep.run", "compass.ocean.particles.remap_particles", "compass.ocean.particles.write", "compass.ocean.plot.plot_initial_state", "compass.ocean.plot.plot_vertical_grid", "compass.ocean.tests.baroclinic_channel.BaroclinicChannel", "compass.ocean.tests.baroclinic_channel.configure", "compass.ocean.tests.baroclinic_channel.decomp_test.DecompTest", "compass.ocean.tests.baroclinic_channel.decomp_test.DecompTest.configure", "compass.ocean.tests.baroclinic_channel.decomp_test.DecompTest.run", "compass.ocean.tests.baroclinic_channel.default.Default", "compass.ocean.tests.baroclinic_channel.default.Default.configure", "compass.ocean.tests.baroclinic_channel.default.Default.run", "compass.ocean.tests.baroclinic_channel.forward.Forward", "compass.ocean.tests.baroclinic_channel.forward.Forward.run", "compass.ocean.tests.baroclinic_channel.forward.Forward.setup", "compass.ocean.tests.baroclinic_channel.initial_state.InitialState", "compass.ocean.tests.baroclinic_channel.initial_state.InitialState.run", "compass.ocean.tests.baroclinic_channel.initial_state.InitialState.setup", "compass.ocean.tests.baroclinic_channel.restart_test.RestartTest", "compass.ocean.tests.baroclinic_channel.restart_test.RestartTest.configure", "compass.ocean.tests.baroclinic_channel.restart_test.RestartTest.run", "compass.ocean.tests.baroclinic_channel.rpe_test.RpeTest", "compass.ocean.tests.baroclinic_channel.rpe_test.RpeTest.configure", "compass.ocean.tests.baroclinic_channel.rpe_test.RpeTest.run", "compass.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis", "compass.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.run", "compass.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.setup", "compass.ocean.tests.baroclinic_channel.threads_test.ThreadsTest", "compass.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.configure", "compass.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.run", "compass.ocean.tests.dam_break.DamBreak", "compass.ocean.tests.dam_break.default.Default", "compass.ocean.tests.dam_break.default.Default.configure", "compass.ocean.tests.dam_break.forward.Forward", "compass.ocean.tests.dam_break.forward.Forward.run", "compass.ocean.tests.dam_break.initial_state.InitialState", "compass.ocean.tests.dam_break.initial_state.InitialState.run", "compass.ocean.tests.dam_break.viz.Viz", "compass.ocean.tests.dam_break.viz.Viz.run", "compass.ocean.tests.drying_slope.DryingSlope", "compass.ocean.tests.drying_slope.default.Default", "compass.ocean.tests.drying_slope.default.Default.configure", "compass.ocean.tests.drying_slope.forward.Forward", "compass.ocean.tests.drying_slope.forward.Forward.run", "compass.ocean.tests.drying_slope.initial_state.InitialState", "compass.ocean.tests.drying_slope.initial_state.InitialState.run", "compass.ocean.tests.drying_slope.viz.Viz", "compass.ocean.tests.drying_slope.viz.Viz.run", "compass.ocean.tests.global_convergence.GlobalConvergence", "compass.ocean.tests.global_convergence.cosine_bell.CosineBell", "compass.ocean.tests.global_convergence.cosine_bell.CosineBell.configure", "compass.ocean.tests.global_convergence.cosine_bell.CosineBell.run", "compass.ocean.tests.global_convergence.cosine_bell.analysis.Analysis", "compass.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rmse", "compass.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.run", "compass.ocean.tests.global_convergence.cosine_bell.forward.Forward", "compass.ocean.tests.global_convergence.cosine_bell.forward.Forward.get_dt", "compass.ocean.tests.global_convergence.cosine_bell.forward.Forward.run", "compass.ocean.tests.global_convergence.cosine_bell.forward.Forward.setup", "compass.ocean.tests.global_convergence.cosine_bell.init.Init", "compass.ocean.tests.global_convergence.cosine_bell.init.Init.run", "compass.ocean.tests.global_ocean.GlobalOcean", "compass.ocean.tests.global_ocean.analysis_test.AnalysisTest", "compass.ocean.tests.global_ocean.analysis_test.AnalysisTest.configure", "compass.ocean.tests.global_ocean.analysis_test.AnalysisTest.run", "compass.ocean.tests.global_ocean.configure", "compass.ocean.tests.global_ocean.configure.configure_global_ocean", "compass.ocean.tests.global_ocean.daily_output_test.DailyOutputTest", "compass.ocean.tests.global_ocean.daily_output_test.DailyOutputTest.configure", "compass.ocean.tests.global_ocean.daily_output_test.DailyOutputTest.run", "compass.ocean.tests.global_ocean.decomp_test.DecompTest", "compass.ocean.tests.global_ocean.decomp_test.DecompTest.configure", "compass.ocean.tests.global_ocean.decomp_test.DecompTest.run", "compass.ocean.tests.global_ocean.dynamic_adjustment.DynamicAdjustment", "compass.ocean.tests.global_ocean.dynamic_adjustment.DynamicAdjustment.run", "compass.ocean.tests.global_ocean.files_for_e3sm.FilesForE3SM", "compass.ocean.tests.global_ocean.files_for_e3sm.FilesForE3SM.configure", "compass.ocean.tests.global_ocean.files_for_e3sm.FilesForE3SM.run", "compass.ocean.tests.global_ocean.files_for_e3sm.diagnostics_files.DiagnosticsFiles", "compass.ocean.tests.global_ocean.files_for_e3sm.diagnostics_files.DiagnosticsFiles.run", "compass.ocean.tests.global_ocean.files_for_e3sm.ocean_graph_partition.OceanGraphPartition", "compass.ocean.tests.global_ocean.files_for_e3sm.ocean_graph_partition.OceanGraphPartition.run", "compass.ocean.tests.global_ocean.files_for_e3sm.ocean_initial_condition.OceanInitialCondition", "compass.ocean.tests.global_ocean.files_for_e3sm.ocean_initial_condition.OceanInitialCondition.run", "compass.ocean.tests.global_ocean.files_for_e3sm.scrip.Scrip", "compass.ocean.tests.global_ocean.files_for_e3sm.scrip.Scrip.run", "compass.ocean.tests.global_ocean.files_for_e3sm.seaice_initial_condition.SeaiceInitialCondition", "compass.ocean.tests.global_ocean.files_for_e3sm.seaice_initial_condition.SeaiceInitialCondition.run", "compass.ocean.tests.global_ocean.forward.ForwardStep", "compass.ocean.tests.global_ocean.forward.ForwardStep.run", "compass.ocean.tests.global_ocean.forward.ForwardStep.setup", "compass.ocean.tests.global_ocean.forward.ForwardTestCase", "compass.ocean.tests.global_ocean.forward.ForwardTestCase.configure", "compass.ocean.tests.global_ocean.forward.ForwardTestCase.run", "compass.ocean.tests.global_ocean.init.Init", "compass.ocean.tests.global_ocean.init.Init.configure", "compass.ocean.tests.global_ocean.init.Init.run", "compass.ocean.tests.global_ocean.init.initial_state.InitialState", "compass.ocean.tests.global_ocean.init.initial_state.InitialState.run", "compass.ocean.tests.global_ocean.init.initial_state.InitialState.setup", "compass.ocean.tests.global_ocean.init.ssh_adjustment.SshAdjustment", "compass.ocean.tests.global_ocean.init.ssh_adjustment.SshAdjustment.run", "compass.ocean.tests.global_ocean.init.ssh_adjustment.SshAdjustment.setup", "compass.ocean.tests.global_ocean.mesh.Mesh", "compass.ocean.tests.global_ocean.mesh.Mesh.configure", "compass.ocean.tests.global_ocean.mesh.Mesh.run", "compass.ocean.tests.global_ocean.mesh.ec30to60.EC30to60BaseMesh", "compass.ocean.tests.global_ocean.mesh.ec30to60.EC30to60BaseMesh.build_cell_width_lat_lon", "compass.ocean.tests.global_ocean.mesh.ec30to60.dynamic_adjustment.EC30to60DynamicAdjustment", "compass.ocean.tests.global_ocean.mesh.ec30to60.dynamic_adjustment.EC30to60DynamicAdjustment.configure", "compass.ocean.tests.global_ocean.mesh.ec30to60.dynamic_adjustment.EC30to60DynamicAdjustment.run", "compass.ocean.tests.global_ocean.mesh.qu240.dynamic_adjustment.QU240DynamicAdjustment", "compass.ocean.tests.global_ocean.mesh.qu240.dynamic_adjustment.QU240DynamicAdjustment.configure", "compass.ocean.tests.global_ocean.mesh.qu240.dynamic_adjustment.QU240DynamicAdjustment.run", "compass.ocean.tests.global_ocean.mesh.so12to60.SO12to60BaseMesh", "compass.ocean.tests.global_ocean.mesh.so12to60.SO12to60BaseMesh.build_cell_width_lat_lon", "compass.ocean.tests.global_ocean.mesh.so12to60.dynamic_adjustment.SO12to60DynamicAdjustment", "compass.ocean.tests.global_ocean.mesh.so12to60.dynamic_adjustment.SO12to60DynamicAdjustment.configure", "compass.ocean.tests.global_ocean.mesh.so12to60.dynamic_adjustment.SO12to60DynamicAdjustment.run", "compass.ocean.tests.global_ocean.mesh.wc14.WC14BaseMesh", "compass.ocean.tests.global_ocean.mesh.wc14.WC14BaseMesh.build_cell_width_lat_lon", "compass.ocean.tests.global_ocean.mesh.wc14.dynamic_adjustment.WC14DynamicAdjustment", "compass.ocean.tests.global_ocean.mesh.wc14.dynamic_adjustment.WC14DynamicAdjustment.configure", "compass.ocean.tests.global_ocean.mesh.wc14.dynamic_adjustment.WC14DynamicAdjustment.run", "compass.ocean.tests.global_ocean.metadata.add_mesh_and_init_metadata", "compass.ocean.tests.global_ocean.metadata.get_e3sm_mesh_names", "compass.ocean.tests.global_ocean.performance_test.PerformanceTest", "compass.ocean.tests.global_ocean.performance_test.PerformanceTest.configure", "compass.ocean.tests.global_ocean.performance_test.PerformanceTest.run", "compass.ocean.tests.global_ocean.restart_test.RestartTest", "compass.ocean.tests.global_ocean.restart_test.RestartTest.configure", "compass.ocean.tests.global_ocean.restart_test.RestartTest.run", "compass.ocean.tests.global_ocean.threads_test.ThreadsTest", "compass.ocean.tests.global_ocean.threads_test.ThreadsTest.configure", "compass.ocean.tests.global_ocean.threads_test.ThreadsTest.run", "compass.ocean.tests.gotm.Gotm", "compass.ocean.tests.gotm.default.Default", "compass.ocean.tests.gotm.default.Default.validate", "compass.ocean.tests.gotm.default.analysis.Analysis", "compass.ocean.tests.gotm.default.analysis.Analysis.run", "compass.ocean.tests.gotm.default.forward.Forward", "compass.ocean.tests.gotm.default.forward.Forward.run", "compass.ocean.tests.gotm.default.init.Init", "compass.ocean.tests.gotm.default.init.Init.run", "compass.ocean.tests.hurricane.Hurricane", "compass.ocean.tests.hurricane.analysis.Analysis", "compass.ocean.tests.hurricane.analysis.Analysis.read_pointstats", "compass.ocean.tests.hurricane.analysis.Analysis.read_station_data", "compass.ocean.tests.hurricane.analysis.Analysis.read_station_file", "compass.ocean.tests.hurricane.analysis.Analysis.run", "compass.ocean.tests.hurricane.analysis.Analysis.setup", "compass.ocean.tests.hurricane.configure", "compass.ocean.tests.hurricane.forward.Forward", "compass.ocean.tests.hurricane.forward.Forward.configure", "compass.ocean.tests.hurricane.forward.Forward.run", "compass.ocean.tests.hurricane.forward.forward.ForwardStep", "compass.ocean.tests.hurricane.forward.forward.ForwardStep.run", "compass.ocean.tests.hurricane.forward.forward.ForwardStep.setup", "compass.ocean.tests.hurricane.init.Init", "compass.ocean.tests.hurricane.init.Init.configure", "compass.ocean.tests.hurricane.init.Init.run", "compass.ocean.tests.hurricane.init.create_pointstats_file.CreatePointstatsFile", "compass.ocean.tests.hurricane.init.create_pointstats_file.CreatePointstatsFile.create_pointstats_file", "compass.ocean.tests.hurricane.init.create_pointstats_file.CreatePointstatsFile.run", "compass.ocean.tests.hurricane.init.initial_state.InitialState", "compass.ocean.tests.hurricane.init.initial_state.InitialState.run", "compass.ocean.tests.hurricane.init.initial_state.InitialState.setup", "compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing", "compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing.interpolate_data_to_grid", "compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing.plot_interp_data", "compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing.run", "compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing.write_to_file", "compass.ocean.tests.hurricane.mesh.Mesh", "compass.ocean.tests.hurricane.mesh.Mesh.configure", "compass.ocean.tests.hurricane.mesh.Mesh.run", "compass.ocean.tests.hurricane.mesh.dequ120at30cr10rr2.DEQU120at30cr10rr2BaseMesh", "compass.ocean.tests.hurricane.mesh.dequ120at30cr10rr2.DEQU120at30cr10rr2BaseMesh.build_cell_width_lat_lon", "compass.ocean.tests.ice_shelf_2d.IceShelf2d", "compass.ocean.tests.ice_shelf_2d.configure", "compass.ocean.tests.ice_shelf_2d.default.Default", "compass.ocean.tests.ice_shelf_2d.default.Default.configure", "compass.ocean.tests.ice_shelf_2d.default.Default.run", "compass.ocean.tests.ice_shelf_2d.forward.Forward", "compass.ocean.tests.ice_shelf_2d.forward.Forward.run", "compass.ocean.tests.ice_shelf_2d.forward.Forward.setup", "compass.ocean.tests.ice_shelf_2d.initial_state.InitialState", "compass.ocean.tests.ice_shelf_2d.initial_state.InitialState.run", "compass.ocean.tests.ice_shelf_2d.restart_test.RestartTest", "compass.ocean.tests.ice_shelf_2d.restart_test.RestartTest.configure", "compass.ocean.tests.ice_shelf_2d.restart_test.RestartTest.run", "compass.ocean.tests.ice_shelf_2d.ssh_adjustment.SshAdjustment", "compass.ocean.tests.ice_shelf_2d.ssh_adjustment.SshAdjustment.run", "compass.ocean.tests.ice_shelf_2d.ssh_adjustment.SshAdjustment.setup", "compass.ocean.tests.ice_shelf_2d.viz.Viz", "compass.ocean.tests.ice_shelf_2d.viz.Viz.run", "compass.ocean.tests.internal_wave.InternalWave", "compass.ocean.tests.internal_wave.default.Default", "compass.ocean.tests.internal_wave.default.Default.validate", "compass.ocean.tests.internal_wave.forward.Forward", "compass.ocean.tests.internal_wave.forward.Forward.run", "compass.ocean.tests.internal_wave.initial_state.InitialState", "compass.ocean.tests.internal_wave.initial_state.InitialState.run", "compass.ocean.tests.internal_wave.rpe_test.RpeTest", "compass.ocean.tests.internal_wave.rpe_test.analysis.Analysis", "compass.ocean.tests.internal_wave.rpe_test.analysis.Analysis.run", "compass.ocean.tests.internal_wave.ten_day_test.TenDayTest", "compass.ocean.tests.internal_wave.ten_day_test.TenDayTest.validate", "compass.ocean.tests.internal_wave.viz.Viz", "compass.ocean.tests.internal_wave.viz.Viz.run", "compass.ocean.tests.isomip_plus.IsomipPlus", "compass.ocean.tests.isomip_plus.evap.update_evaporation_flux", "compass.ocean.tests.isomip_plus.forward.Forward", "compass.ocean.tests.isomip_plus.forward.Forward.run", "compass.ocean.tests.isomip_plus.forward.Forward.setup", "compass.ocean.tests.isomip_plus.geom.interpolate_ocean_mask", "compass.ocean.tests.isomip_plus.geom.process_input_geometry", "compass.ocean.tests.isomip_plus.initial_state.InitialState", "compass.ocean.tests.isomip_plus.initial_state.InitialState.run", "compass.ocean.tests.isomip_plus.misomip.Misomip", "compass.ocean.tests.isomip_plus.misomip.Misomip.run", "compass.ocean.tests.isomip_plus.ocean_test.OceanTest", "compass.ocean.tests.isomip_plus.ocean_test.OceanTest.configure", "compass.ocean.tests.isomip_plus.ocean_test.OceanTest.run", "compass.ocean.tests.isomip_plus.ssh_adjustment.SshAdjustment", "compass.ocean.tests.isomip_plus.ssh_adjustment.SshAdjustment.run", "compass.ocean.tests.isomip_plus.ssh_adjustment.SshAdjustment.setup", "compass.ocean.tests.isomip_plus.streamfunction.Streamfunction", "compass.ocean.tests.isomip_plus.streamfunction.Streamfunction.run", "compass.ocean.tests.isomip_plus.viz.Viz", "compass.ocean.tests.isomip_plus.viz.Viz.run", "compass.ocean.tests.isomip_plus.viz.file_complete", "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter", "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.images_to_movies", "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_3d_field_top_bot_section", "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_barotropic_streamfunction", "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_horiz_series", "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_ice_shelf_boundary_variables", "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_layer_interfaces", "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_melt_rates", "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_overturning_streamfunction", "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_potential_density", "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_salinity", "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_temperature", "compass.ocean.tests.isomip_plus.viz.plot.TimeSeriesPlotter", "compass.ocean.tests.isomip_plus.viz.plot.TimeSeriesPlotter.plot_melt_time_series", "compass.ocean.tests.isomip_plus.viz.plot.TimeSeriesPlotter.plot_time_series", "compass.ocean.tests.merry_go_round.MerryGoRound", "compass.ocean.tests.merry_go_round.convergence_test.analysis.Analysis", "compass.ocean.tests.merry_go_round.convergence_test.analysis.Analysis.run", "compass.ocean.tests.merry_go_round.default.Default", "compass.ocean.tests.merry_go_round.default.Default.validate", "compass.ocean.tests.merry_go_round.forward.Forward", "compass.ocean.tests.merry_go_round.forward.Forward.run", "compass.ocean.tests.merry_go_round.initial_state.InitialState", "compass.ocean.tests.merry_go_round.initial_state.InitialState.run", "compass.ocean.tests.merry_go_round.viz.Viz", "compass.ocean.tests.merry_go_round.viz.Viz.run", "compass.ocean.tests.planar_convergence.PlanarConvergence", "compass.ocean.tests.planar_convergence.conv_init.ConvInit", "compass.ocean.tests.planar_convergence.conv_init.ConvInit.run", "compass.ocean.tests.planar_convergence.conv_test_case.ConvTestCase", "compass.ocean.tests.planar_convergence.conv_test_case.ConvTestCase.configure", "compass.ocean.tests.planar_convergence.conv_test_case.ConvTestCase.run", "compass.ocean.tests.planar_convergence.conv_test_case.ConvTestCase.update_cores", "compass.ocean.tests.planar_convergence.forward.Forward", "compass.ocean.tests.planar_convergence.forward.Forward.get_dt_duration", "compass.ocean.tests.planar_convergence.forward.Forward.run", "compass.ocean.tests.planar_convergence.forward.Forward.setup", "compass.ocean.tests.planar_convergence.horizontal_advection.HorizontalAdvection", "compass.ocean.tests.planar_convergence.horizontal_advection.HorizontalAdvection.configure", "compass.ocean.tests.planar_convergence.horizontal_advection.HorizontalAdvection.run", "compass.ocean.tests.planar_convergence.horizontal_advection.analysis.Analysis", "compass.ocean.tests.planar_convergence.horizontal_advection.analysis.Analysis.rmse", "compass.ocean.tests.planar_convergence.horizontal_advection.analysis.Analysis.run", "compass.ocean.tests.planar_convergence.horizontal_advection.init.Init", "compass.ocean.tests.planar_convergence.horizontal_advection.init.Init.run", "compass.ocean.tests.soma.Soma", "compass.ocean.tests.soma.analysis.Analysis", "compass.ocean.tests.soma.analysis.Analysis.run", "compass.ocean.tests.soma.forward.Forward", "compass.ocean.tests.soma.forward.Forward.run", "compass.ocean.tests.soma.initial_state.InitialState", "compass.ocean.tests.soma.initial_state.InitialState.run", "compass.ocean.tests.soma.soma_test_case.SomaTestCase", "compass.ocean.tests.soma.soma_test_case.SomaTestCase.validate", "compass.ocean.tests.sphere_transport.SphereTransport", "compass.ocean.tests.sphere_transport.correlated_tracers_2d.CorrelatedTracers2D", "compass.ocean.tests.sphere_transport.correlated_tracers_2d.CorrelatedTracers2D.configure", "compass.ocean.tests.sphere_transport.correlated_tracers_2d.CorrelatedTracers2D.run", "compass.ocean.tests.sphere_transport.correlated_tracers_2d.analysis.Analysis", "compass.ocean.tests.sphere_transport.correlated_tracers_2d.analysis.Analysis.run", "compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.Forward", "compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.Forward.get_timestep_str", "compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.Forward.run", "compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.Forward.setup", "compass.ocean.tests.sphere_transport.correlated_tracers_2d.init.Init", "compass.ocean.tests.sphere_transport.correlated_tracers_2d.init.Init.run", "compass.ocean.tests.sphere_transport.correlated_tracers_2d.mesh.Mesh", "compass.ocean.tests.sphere_transport.correlated_tracers_2d.mesh.Mesh.build_cell_width_lat_lon", "compass.ocean.tests.sphere_transport.correlated_tracers_2d.mesh.Mesh.run", "compass.ocean.tests.sphere_transport.divergent_2d.Divergent2D", "compass.ocean.tests.sphere_transport.divergent_2d.Divergent2D.configure", "compass.ocean.tests.sphere_transport.divergent_2d.Divergent2D.run", "compass.ocean.tests.sphere_transport.divergent_2d.analysis.Analysis", "compass.ocean.tests.sphere_transport.divergent_2d.analysis.Analysis.run", "compass.ocean.tests.sphere_transport.divergent_2d.forward.Forward", "compass.ocean.tests.sphere_transport.divergent_2d.forward.Forward.get_timestep_str", "compass.ocean.tests.sphere_transport.divergent_2d.forward.Forward.run", "compass.ocean.tests.sphere_transport.divergent_2d.forward.Forward.setup", "compass.ocean.tests.sphere_transport.divergent_2d.init.Init", "compass.ocean.tests.sphere_transport.divergent_2d.init.Init.run", "compass.ocean.tests.sphere_transport.divergent_2d.mesh.Mesh", "compass.ocean.tests.sphere_transport.divergent_2d.mesh.Mesh.build_cell_width_lat_lon", "compass.ocean.tests.sphere_transport.divergent_2d.mesh.Mesh.run", "compass.ocean.tests.sphere_transport.nondivergent_2d.Nondivergent2D", "compass.ocean.tests.sphere_transport.nondivergent_2d.Nondivergent2D.configure", "compass.ocean.tests.sphere_transport.nondivergent_2d.Nondivergent2D.run", "compass.ocean.tests.sphere_transport.nondivergent_2d.analysis.Analysis", "compass.ocean.tests.sphere_transport.nondivergent_2d.analysis.Analysis.run", "compass.ocean.tests.sphere_transport.nondivergent_2d.forward.Forward", "compass.ocean.tests.sphere_transport.nondivergent_2d.forward.Forward.get_timestep_str", "compass.ocean.tests.sphere_transport.nondivergent_2d.forward.Forward.run", "compass.ocean.tests.sphere_transport.nondivergent_2d.forward.Forward.setup", "compass.ocean.tests.sphere_transport.nondivergent_2d.init.Init", "compass.ocean.tests.sphere_transport.nondivergent_2d.init.Init.run", "compass.ocean.tests.sphere_transport.nondivergent_2d.mesh.Mesh", "compass.ocean.tests.sphere_transport.nondivergent_2d.mesh.Mesh.build_cell_width_lat_lon", "compass.ocean.tests.sphere_transport.nondivergent_2d.mesh.Mesh.run", "compass.ocean.tests.sphere_transport.process_output.compute_convergence_rates", "compass.ocean.tests.sphere_transport.process_output.compute_error_from_output_ncfile", "compass.ocean.tests.sphere_transport.process_output.make_convergence_arrays", "compass.ocean.tests.sphere_transport.process_output.plot_convergence", "compass.ocean.tests.sphere_transport.process_output.plot_filament", "compass.ocean.tests.sphere_transport.process_output.plot_over_and_undershoot_errors", "compass.ocean.tests.sphere_transport.process_output.plot_sol", "compass.ocean.tests.sphere_transport.process_output.print_data_as_csv", "compass.ocean.tests.sphere_transport.process_output.print_error_conv_table", "compass.ocean.tests.sphere_transport.process_output.read_ncl_rgb_file", "compass.ocean.tests.sphere_transport.rotation_2d.Rotation2D", "compass.ocean.tests.sphere_transport.rotation_2d.Rotation2D.configure", "compass.ocean.tests.sphere_transport.rotation_2d.Rotation2D.run", "compass.ocean.tests.sphere_transport.rotation_2d.analysis.Analysis", "compass.ocean.tests.sphere_transport.rotation_2d.analysis.Analysis.run", "compass.ocean.tests.sphere_transport.rotation_2d.forward.Forward", "compass.ocean.tests.sphere_transport.rotation_2d.forward.Forward.get_timestep_str", "compass.ocean.tests.sphere_transport.rotation_2d.forward.Forward.run", "compass.ocean.tests.sphere_transport.rotation_2d.forward.Forward.setup", "compass.ocean.tests.sphere_transport.rotation_2d.init.Init", "compass.ocean.tests.sphere_transport.rotation_2d.init.Init.run", "compass.ocean.tests.sphere_transport.rotation_2d.mesh.Mesh", "compass.ocean.tests.sphere_transport.rotation_2d.mesh.Mesh.build_cell_width_lat_lon", "compass.ocean.tests.sphere_transport.rotation_2d.mesh.Mesh.run", "compass.ocean.tests.ziso.Ziso", "compass.ocean.tests.ziso.ZisoTestCase", "compass.ocean.tests.ziso.ZisoTestCase.configure", "compass.ocean.tests.ziso.ZisoTestCase.run", "compass.ocean.tests.ziso.configure", "compass.ocean.tests.ziso.forward.Forward", "compass.ocean.tests.ziso.forward.Forward.run", "compass.ocean.tests.ziso.forward.Forward.setup", "compass.ocean.tests.ziso.initial_state.InitialState", "compass.ocean.tests.ziso.initial_state.InitialState.run", "compass.ocean.tests.ziso.with_frazil.WithFrazil", "compass.ocean.tests.ziso.with_frazil.WithFrazil.configure", "compass.ocean.tests.ziso.with_frazil.WithFrazil.run", "compass.ocean.vertical.grid_1d.generate_1d_grid", "compass.ocean.vertical.grid_1d.write_1d_grid", "compass.ocean.vertical.init_vertical_coord", "compass.ocean.vertical.partial_cells.alter_bottom_depth", "compass.ocean.vertical.partial_cells.alter_ssh", "compass.ocean.vertical.zlevel.compute_min_max_level_cell", "compass.ocean.vertical.zlevel.compute_z_level_layer_thickness", "compass.ocean.vertical.zlevel.compute_z_level_resting_thickness", "compass.ocean.vertical.zlevel.init_z_level_vertical_coord", "compass.ocean.vertical.zstar.init_z_star_vertical_coord", "Ocean core", "baroclinic_channel", "dam_break", "drying_slope", "global_convergence", "global_ocean", "gotm", "hurricane", "ice_shelf_2d", "Test groups", "internal_wave", "isomip_plus", "merry_go_round", "planar_convergence", "soma", "sphere_transport", "spherical_harmonic_transform", "ziso", "Organization of Tests", "Overview", "Quick Start for Developers", "Troubleshooting", "Glossary", "compass", "Developer Tutorial: Adding a parameter study", "Developer Tutorial: Adding a new test group", "Developer Tutorial: Porting a legacy COMPASS test group", "Config Files", "Framework", "Landice core", "Test suites", "calving_dt_convergence", "circular_shelf", "dome", "eismint2", "enthalpy_benchmark", "greenland", "humboldt", "hydro_radial", "Test Groups", "ismip6_forcing", "kangerlussuaq", "koge_bugt_s", "mismipplus", "thwaites", "Anvil", "Chrysalis", "CompyMcNodeFace", "Cori", "Machines", "Perlmutter", "Ice shelf-cavities", "Framework", "Vertical coordinate", "Ocean core", "Test suites", "baroclinic_channel", "dam_break", "drying_slope", "global_convergence", "global_ocean", "gotm", "hurricane", "ice_shelf_2d", "Test groups", "internal_wave", "isomip_plus", "merry_go_round", "planar_convergence", "soma", "sphere_transport", "spherical_harmonic_transform", "ziso", "Quick Start for Users", "Test Cases", "Test Suites", "Code and Documentation Versions"], "terms": {"date": [0, 1, 3, 6, 34, 242, 650, 655, 670, 677, 710, 716], "2021": [0, 1], "07": 0, "30": [0, 1, 8, 45, 507, 655, 666, 667, 668, 683, 686, 698, 700, 708, 709, 710, 713, 716, 717, 721, 722], "contributor": [0, 1, 3], "xylar": [0, 1, 8, 675, 677, 699, 710], "asai": [0, 1, 677, 710, 716], "davi": [0, 1, 677, 710, 716], "we": [0, 1, 3, 7, 8, 63, 201, 211, 213, 243, 244, 245, 246, 248, 249, 250, 252, 255, 256, 259, 261, 264, 275, 651, 652, 653, 658, 660, 661, 662, 664, 667, 668, 669, 670, 673, 674, 675, 676, 677, 690, 697, 698, 699, 700, 701, 703, 710, 713, 714, 719, 720, 721, 723, 725], "would": [0, 1, 3, 6, 8, 11, 21, 23, 27, 65, 75, 82, 87, 99, 114, 135, 150, 164, 171, 229, 239, 287, 308, 317, 363, 375, 457, 465, 473, 498, 526, 668, 669, 670, 671, 675, 676, 682, 699, 701, 703, 710, 717, 723], "like": [0, 1, 3, 6, 7, 8, 264, 655, 667, 668, 669, 670, 671, 673, 674, 675, 676, 677, 699, 709, 710, 718, 721, 723, 724], "have": [0, 1, 3, 5, 6, 7, 8, 25, 35, 63, 82, 87, 99, 114, 150, 164, 171, 188, 229, 239, 243, 249, 259, 261, 264, 327, 348, 546, 564, 578, 592, 616, 652, 655, 657, 661, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 683, 685, 687, 690, 694, 695, 696, 697, 698, 699, 700, 701, 703, 706, 709, 710, 713, 714, 715, 716, 717, 718, 719, 722, 723, 724, 725], "wai": [0, 1, 6, 7, 11, 47, 52, 261, 264, 490, 661, 668, 669, 670, 671, 673, 674, 675, 676, 687, 699, 703, 710, 716], "download": [0, 1, 6, 11, 12, 22, 101, 116, 137, 152, 153, 173, 231, 241, 242, 245, 248, 255, 256, 271, 289, 292, 301, 365, 374, 377, 425, 432, 441, 459, 467, 488, 500, 612, 634, 650, 664, 669, 670, 677, 679, 687, 690, 723, 725], "file": [0, 6, 7, 9, 11, 12, 14, 15, 16, 17, 20, 22, 23, 24, 25, 26, 28, 34, 37, 38, 42, 58, 59, 60, 61, 67, 70, 71, 72, 73, 74, 75, 79, 82, 87, 91, 93, 99, 101, 106, 108, 114, 116, 135, 137, 150, 152, 164, 171, 173, 174, 180, 184, 187, 188, 189, 190, 191, 195, 196, 197, 202, 203, 206, 207, 211, 214, 228, 229, 231, 234, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 255, 256, 261, 269, 272, 275, 276, 277, 278, 289, 292, 301, 337, 348, 350, 353, 355, 357, 359, 361, 363, 378, 383, 391, 396, 399, 400, 423, 436, 437, 442, 446, 459, 467, 485, 488, 490, 500, 505, 506, 508, 510, 547, 604, 609, 612, 634, 641, 650, 651, 652, 653, 655, 657, 658, 660, 661, 662, 664, 666, 667, 669, 670, 671, 672, 673, 674, 676, 680, 682, 683, 684, 685, 686, 687, 688, 690, 691, 692, 694, 698, 699, 700, 703, 705, 706, 709, 710, 713, 716, 718, 720, 721, 723, 724], "an": [0, 3, 4, 6, 7, 8, 11, 12, 16, 23, 38, 43, 45, 46, 63, 74, 75, 112, 123, 178, 243, 245, 246, 248, 250, 255, 256, 261, 264, 276, 334, 337, 348, 350, 353, 355, 357, 359, 361, 383, 386, 391, 396, 399, 400, 401, 411, 489, 493, 495, 503, 508, 515, 516, 517, 533, 549, 558, 567, 570, 581, 584, 595, 598, 604, 605, 606, 609, 612, 619, 622, 651, 652, 653, 655, 656, 658, 660, 661, 662, 666, 667, 670, 671, 672, 673, 676, 677, 680, 682, 683, 685, 687, 690, 693, 694, 699, 701, 703, 705, 708, 710, 715, 716, 717, 719, 720, 721, 722, 723, 724, 725], "onlin": [0, 677, 710], "instead": [0, 1, 6, 8, 29, 69, 86, 96, 98, 105, 111, 113, 120, 126, 131, 142, 144, 149, 154, 161, 168, 170, 177, 179, 222, 227, 233, 236, 238, 257, 261, 272, 283, 286, 295, 298, 304, 342, 352, 380, 449, 456, 464, 630, 639, 668, 669, 674, 675, 676, 680, 682, 687, 695, 719, 720, 721, 723, 725], "gener": [0, 1, 3, 4, 5, 7, 8, 14, 15, 17, 22, 50, 75, 101, 116, 137, 152, 173, 188, 207, 231, 241, 242, 249, 264, 276, 289, 292, 301, 410, 411, 413, 415, 417, 459, 467, 470, 488, 500, 634, 640, 650, 651, 652, 653, 654, 655, 656, 657, 658, 660, 661, 662, 664, 667, 668, 669, 674, 675, 676, 677, 680, 681, 682, 683, 686, 687, 689, 690, 691, 692, 693, 694, 699, 708, 709, 710, 711, 712, 718, 720, 721, 723], "them": [0, 1, 7, 8, 24, 61, 188, 247, 261, 654, 655, 656, 663, 668, 669, 670, 672, 674, 675, 676, 680, 697, 699, 705, 710, 712, 723, 724], "each": [0, 1, 3, 6, 7, 8, 20, 26, 39, 45, 46, 71, 243, 244, 245, 246, 247, 248, 249, 250, 252, 256, 261, 264, 266, 267, 276, 326, 337, 339, 344, 347, 348, 349, 368, 371, 383, 385, 388, 391, 393, 396, 398, 403, 406, 409, 429, 435, 497, 511, 519, 537, 538, 545, 563, 577, 591, 603, 604, 605, 609, 615, 642, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 658, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 672, 674, 675, 676, 677, 680, 681, 684, 686, 687, 690, 699, 703, 704, 706, 708, 709, 710, 712, 713, 715, 716, 717, 718, 719, 720, 721, 723, 725], "time": [0, 1, 6, 7, 8, 11, 26, 82, 87, 99, 114, 150, 164, 171, 229, 239, 243, 245, 246, 247, 248, 250, 255, 256, 264, 276, 296, 321, 331, 337, 342, 345, 348, 363, 366, 383, 386, 391, 396, 401, 404, 407, 420, 442, 443, 444, 477, 486, 491, 495, 505, 506, 508, 510, 518, 522, 540, 566, 567, 580, 581, 594, 595, 604, 608, 609, 618, 619, 651, 652, 653, 654, 655, 656, 657, 658, 660, 661, 662, 663, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 681, 682, 683, 684, 685, 686, 687, 688, 690, 694, 698, 700, 701, 705, 706, 707, 710, 712, 713, 714, 715, 716, 717, 719, 722, 723, 725], "run": [0, 5, 7, 11, 14, 15, 16, 17, 20, 21, 25, 26, 27, 34, 42, 60, 61, 64, 65, 70, 71, 72, 73, 75, 80, 82, 85, 87, 95, 97, 99, 104, 110, 112, 114, 135, 141, 148, 150, 153, 156, 162, 164, 167, 169, 171, 176, 229, 232, 235, 237, 239, 242, 243, 244, 245, 246, 247, 248, 249, 250, 255, 256, 259, 261, 264, 267, 284, 287, 293, 299, 308, 317, 321, 327, 330, 337, 341, 342, 345, 348, 350, 363, 366, 375, 383, 386, 391, 396, 401, 404, 407, 415, 421, 427, 430, 433, 442, 454, 457, 462, 465, 473, 478, 486, 491, 495, 498, 526, 539, 540, 546, 554, 558, 564, 566, 578, 580, 592, 594, 605, 616, 618, 628, 632, 637, 650, 651, 652, 653, 654, 655, 656, 657, 658, 660, 661, 662, 663, 664, 665, 666, 667, 669, 671, 672, 673, 674, 677, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 705, 706, 707, 708, 709, 710, 712, 713, 715, 717, 718, 719, 720, 721, 722, 724, 725], "The": [0, 1, 3, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 18, 20, 22, 23, 24, 25, 26, 27, 31, 32, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 50, 51, 55, 59, 60, 61, 64, 65, 67, 69, 70, 71, 72, 73, 74, 75, 78, 80, 82, 85, 87, 89, 91, 95, 97, 99, 101, 102, 104, 106, 110, 112, 114, 116, 117, 119, 121, 123, 124, 127, 129, 132, 135, 137, 138, 141, 143, 145, 148, 150, 152, 153, 156, 158, 160, 162, 164, 167, 169, 171, 173, 174, 176, 178, 180, 184, 187, 189, 191, 195, 197, 202, 203, 205, 207, 211, 213, 214, 219, 221, 224, 226, 229, 231, 232, 235, 237, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 261, 264, 265, 267, 268, 269, 272, 273, 275, 277, 278, 280, 281, 284, 287, 289, 290, 292, 293, 296, 299, 301, 302, 306, 308, 310, 312, 315, 317, 319, 321, 324, 327, 328, 330, 334, 337, 341, 342, 345, 348, 350, 353, 355, 357, 359, 361, 363, 366, 369, 372, 375, 378, 381, 383, 386, 389, 391, 394, 396, 399, 400, 401, 404, 407, 411, 413, 415, 417, 420, 427, 430, 433, 436, 439, 442, 447, 450, 453, 454, 457, 459, 460, 462, 465, 467, 468, 471, 473, 475, 477, 478, 480, 482, 485, 486, 488, 489, 490, 491, 493, 495, 498, 500, 501, 503, 506, 508, 509, 510, 512, 513, 514, 518, 522, 524, 526, 528, 530, 533, 535, 539, 543, 546, 547, 549, 552, 554, 556, 558, 561, 564, 566, 570, 572, 575, 578, 580, 584, 586, 589, 592, 594, 598, 600, 606, 613, 616, 618, 622, 624, 628, 631, 632, 634, 635, 637, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 677, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724], "primari": [0, 3, 6, 8, 725], "motiv": 0, "thi": [0, 1, 3, 4, 6, 7, 8, 11, 12, 16, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 34, 36, 42, 43, 44, 47, 48, 50, 51, 52, 53, 55, 56, 60, 63, 65, 67, 69, 74, 75, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 188, 189, 193, 194, 195, 199, 200, 203, 205, 209, 210, 211, 213, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 269, 270, 272, 273, 274, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 327, 329, 330, 332, 334, 335, 336, 337, 338, 341, 342, 343, 345, 346, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 369, 370, 372, 373, 375, 376, 378, 379, 380, 381, 382, 383, 384, 386, 387, 389, 390, 391, 392, 394, 395, 396, 397, 399, 400, 401, 402, 404, 405, 407, 408, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 424, 427, 428, 430, 431, 433, 434, 436, 438, 439, 440, 442, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 539, 541, 543, 546, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 564, 565, 566, 567, 568, 570, 571, 572, 573, 574, 575, 578, 579, 580, 581, 582, 584, 585, 586, 587, 588, 589, 592, 593, 594, 595, 596, 598, 599, 600, 601, 602, 603, 604, 613, 616, 617, 618, 619, 620, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 650, 651, 652, 653, 654, 655, 657, 658, 660, 661, 662, 664, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 680, 681, 682, 683, 684, 685, 686, 687, 690, 691, 692, 693, 694, 698, 699, 700, 701, 703, 705, 707, 708, 709, 710, 712, 713, 715, 716, 717, 718, 719, 720, 721, 722, 723, 725], "i": [0, 3, 6, 7, 8, 11, 12, 20, 21, 26, 29, 34, 37, 38, 50, 51, 55, 60, 61, 65, 68, 69, 70, 74, 75, 82, 86, 87, 91, 96, 98, 99, 105, 106, 111, 113, 114, 120, 126, 131, 135, 142, 144, 149, 150, 154, 156, 161, 164, 168, 170, 171, 176, 177, 178, 179, 180, 187, 202, 222, 227, 229, 233, 236, 238, 239, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 268, 269, 273, 275, 276, 283, 286, 287, 295, 298, 304, 308, 317, 321, 337, 342, 348, 352, 363, 375, 380, 430, 444, 449, 450, 456, 457, 464, 465, 473, 486, 489, 490, 495, 498, 506, 510, 526, 554, 556, 558, 609, 630, 632, 635, 639, 642, 648, 649, 650, 651, 652, 653, 654, 655, 657, 658, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 680, 681, 682, 683, 684, 685, 686, 687, 688, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 705, 706, 707, 708, 709, 710, 711, 712, 713, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725], "option": [0, 6, 7, 11, 12, 14, 15, 17, 21, 23, 24, 25, 26, 27, 28, 34, 35, 36, 37, 38, 39, 43, 49, 50, 51, 54, 55, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 79, 82, 87, 91, 93, 99, 106, 108, 114, 123, 125, 130, 135, 150, 164, 171, 180, 182, 187, 191, 197, 201, 202, 207, 214, 229, 239, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 261, 264, 266, 269, 272, 273, 276, 277, 278, 280, 282, 285, 287, 294, 297, 303, 307, 308, 316, 317, 325, 333, 338, 341, 343, 346, 351, 363, 367, 370, 375, 379, 381, 384, 387, 389, 392, 394, 397, 399, 400, 402, 405, 408, 428, 430, 434, 448, 450, 453, 455, 457, 463, 465, 473, 486, 495, 496, 498, 508, 509, 510, 512, 513, 514, 518, 526, 536, 540, 542, 544, 554, 562, 569, 576, 583, 590, 597, 604, 614, 621, 629, 631, 632, 638, 640, 642, 643, 644, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 660, 661, 662, 663, 664, 665, 666, 667, 671, 673, 674, 677, 680, 693, 703, 705, 723, 724], "avoid": [0, 1, 6, 668, 675, 676, 712], "consum": [0, 8, 668, 674, 675, 705, 710, 725], "mesh": [0, 1, 6, 11, 59, 79, 80, 82, 85, 89, 91, 95, 97, 99, 102, 104, 106, 117, 119, 138, 143, 153, 156, 160, 162, 164, 174, 176, 184, 187, 191, 192, 196, 197, 198, 202, 203, 206, 207, 208, 211, 213, 214, 215, 221, 226, 228, 234, 243, 244, 245, 246, 247, 250, 252, 255, 266, 275, 276, 284, 290, 310, 319, 324, 327, 328, 330, 334, 337, 341, 342, 345, 348, 350, 353, 355, 359, 361, 363, 366, 369, 372, 399, 400, 401, 404, 407, 417, 427, 430, 433, 436, 439, 442, 443, 460, 475, 489, 491, 506, 518, 528, 533, 535, 539, 543, 546, 547, 556, 558, 561, 564, 566, 570, 575, 578, 580, 584, 589, 592, 594, 598, 603, 605, 606, 611, 613, 616, 618, 622, 628, 635, 637, 642, 648, 649, 651, 652, 653, 656, 658, 660, 661, 662, 663, 664, 667, 668, 669, 670, 672, 673, 676, 677, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 703, 705, 706, 707, 708, 709, 711, 713, 715, 716, 717, 718, 719, 720, 721, 722, 723, 725], "initi": [0, 7, 8, 11, 89, 102, 104, 117, 138, 143, 145, 153, 158, 160, 174, 176, 178, 196, 213, 219, 221, 224, 226, 244, 245, 246, 247, 248, 250, 255, 256, 264, 268, 272, 276, 277, 284, 290, 310, 319, 323, 334, 336, 337, 341, 342, 345, 348, 350, 353, 355, 357, 359, 361, 363, 366, 369, 372, 383, 386, 391, 396, 399, 400, 401, 404, 407, 411, 417, 427, 430, 433, 439, 460, 475, 485, 491, 528, 533, 552, 556, 558, 570, 584, 598, 604, 609, 622, 628, 635, 637, 651, 652, 653, 654, 655, 656, 658, 660, 661, 662, 663, 664, 665, 667, 668, 669, 671, 672, 673, 674, 676, 677, 680, 682, 683, 684, 685, 687, 688, 689, 693, 694, 701, 703, 705, 706, 707, 708, 709, 710, 713, 715, 716, 717, 719, 722, 724], "condit": [0, 11, 89, 102, 104, 117, 138, 143, 145, 153, 158, 160, 174, 176, 178, 213, 219, 221, 224, 226, 244, 245, 246, 247, 248, 250, 255, 256, 264, 276, 277, 284, 290, 310, 319, 323, 334, 336, 337, 341, 342, 345, 348, 350, 353, 355, 357, 359, 361, 363, 366, 369, 372, 383, 386, 391, 396, 399, 400, 401, 404, 407, 411, 417, 427, 430, 433, 439, 460, 475, 491, 528, 533, 556, 558, 570, 584, 598, 604, 622, 628, 635, 637, 651, 652, 653, 654, 655, 656, 658, 660, 661, 662, 663, 664, 665, 667, 668, 669, 672, 673, 674, 676, 677, 680, 682, 683, 684, 685, 686, 687, 688, 689, 693, 694, 701, 705, 706, 707, 708, 710, 712, 713, 715, 716, 717, 719, 722, 724], "faster": [0, 8, 670, 687], "regress": [0, 1, 3, 323, 336, 651, 655, 660, 661, 662, 668, 672, 673, 675, 676, 680, 682, 684, 689, 705, 706, 710, 715, 716, 717, 719, 722, 723, 725], "mpa": [0, 6, 7, 9, 10, 11, 12, 26, 31, 42, 59, 62, 67, 70, 71, 72, 73, 79, 84, 94, 109, 134, 140, 146, 155, 166, 183, 218, 223, 228, 234, 242, 244, 245, 246, 247, 250, 257, 258, 259, 260, 261, 262, 264, 265, 266, 269, 273, 279, 287, 305, 308, 314, 317, 321, 323, 324, 330, 336, 337, 348, 350, 353, 359, 361, 363, 366, 369, 378, 383, 386, 391, 396, 399, 401, 410, 415, 419, 421, 430, 433, 442, 443, 447, 452, 457, 470, 473, 484, 486, 489, 506, 518, 521, 526, 532, 535, 539, 543, 551, 554, 560, 561, 566, 567, 575, 580, 581, 589, 594, 595, 604, 609, 613, 618, 619, 627, 632, 641, 650, 651, 652, 653, 654, 655, 656, 657, 658, 660, 661, 662, 663, 664, 665, 666, 667, 672, 673, 674, 675, 676, 677, 679, 695, 696, 697, 698, 699, 700, 701, 703, 704, 705, 706, 707, 710, 711, 712, 715, 716, 720, 721, 722, 724, 725], "compon": [0, 6, 242, 650, 655, 668, 669, 673, 675, 676, 677, 699, 701, 712], "forward": [0, 1, 8, 11, 14, 15, 17, 82, 87, 99, 104, 114, 135, 150, 153, 164, 171, 176, 229, 239, 242, 248, 252, 256, 264, 284, 296, 321, 337, 342, 345, 348, 383, 386, 391, 396, 401, 404, 407, 420, 442, 454, 477, 538, 558, 628, 637, 650, 668, 669, 677, 682, 683, 684, 685, 686, 688, 694, 701, 706, 707, 708, 709, 713, 715, 716, 717, 718, 719, 721, 722], "mode": [0, 1, 6, 14, 15, 17, 652, 653, 655, 657, 664, 668, 670, 675, 676, 677, 707, 710, 712, 716, 721, 723], "potenti": [0, 276, 296, 477, 655, 661, 668, 675, 706, 710, 715, 716, 719], "other": [0, 1, 3, 6, 7, 8, 11, 16, 36, 244, 257, 489, 654, 661, 663, 665, 668, 669, 670, 671, 672, 673, 674, 677, 680, 686, 689, 690, 694, 695, 705, 710, 718, 720, 724], "could": [0, 1, 243, 668, 669, 670, 674, 675, 676, 677, 693, 710, 716], "includ": [0, 1, 3, 6, 7, 8, 12, 22, 26, 37, 69, 101, 116, 137, 146, 152, 156, 162, 164, 173, 231, 241, 243, 247, 249, 252, 261, 269, 271, 272, 273, 289, 292, 301, 353, 359, 361, 365, 369, 372, 374, 377, 378, 432, 441, 450, 457, 459, 467, 486, 488, 490, 491, 495, 500, 508, 510, 554, 556, 558, 628, 632, 634, 635, 637, 651, 655, 658, 660, 661, 662, 664, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725], "result": [0, 1, 6, 8, 37, 46, 74, 75, 85, 95, 97, 110, 112, 141, 148, 156, 162, 167, 169, 235, 237, 243, 244, 245, 246, 247, 250, 261, 264, 281, 293, 299, 302, 312, 321, 345, 355, 357, 401, 404, 407, 413, 462, 478, 501, 506, 518, 530, 604, 612, 651, 654, 655, 660, 661, 663, 664, 665, 667, 668, 669, 670, 672, 674, 675, 676, 677, 680, 681, 682, 683, 684, 685, 686, 687, 688, 694, 705, 706, 709, 710, 711, 712, 715, 716, 717, 718, 719, 720, 722, 725], "baselin": [0, 1, 6, 8, 26, 70, 71, 73, 74, 75, 244, 245, 246, 248, 250, 255, 256, 337, 348, 412, 472, 481, 525, 651, 655, 658, 661, 662, 664, 667, 669, 672, 676, 680, 693, 705, 713, 716, 723], "valid": [0, 1, 6, 26, 82, 164, 243, 245, 246, 248, 250, 255, 337, 420, 506, 642, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 655, 656, 657, 660, 662, 664, 667, 669, 670, 673, 675, 683, 703, 706, 707, 708, 710, 711, 712, 713, 715, 717, 719, 722, 723], "A": [0, 1, 6, 7, 8, 9, 11, 12, 15, 17, 23, 25, 26, 31, 36, 39, 43, 44, 47, 50, 51, 52, 55, 60, 62, 65, 67, 69, 70, 71, 72, 73, 74, 75, 79, 80, 82, 84, 85, 87, 89, 91, 93, 94, 95, 97, 99, 102, 106, 108, 109, 110, 112, 114, 117, 119, 121, 123, 132, 134, 135, 138, 140, 141, 145, 148, 150, 155, 156, 158, 162, 164, 166, 167, 169, 171, 174, 176, 180, 182, 183, 184, 187, 189, 195, 201, 202, 203, 205, 211, 213, 218, 219, 223, 224, 228, 229, 232, 234, 235, 237, 239, 244, 245, 246, 250, 264, 266, 267, 268, 269, 272, 273, 279, 281, 287, 290, 293, 299, 302, 305, 308, 310, 312, 314, 317, 319, 321, 323, 324, 327, 330, 334, 336, 337, 342, 345, 348, 350, 353, 355, 357, 359, 361, 363, 366, 369, 372, 375, 378, 381, 383, 386, 389, 391, 394, 396, 399, 401, 404, 407, 410, 413, 415, 417, 419, 420, 427, 430, 433, 436, 439, 442, 447, 450, 452, 457, 460, 462, 465, 468, 470, 473, 475, 478, 482, 484, 485, 486, 489, 490, 491, 493, 498, 501, 503, 506, 508, 510, 518, 521, 522, 526, 528, 530, 532, 533, 535, 539, 543, 546, 549, 551, 552, 554, 556, 560, 561, 564, 566, 570, 572, 575, 578, 580, 584, 586, 589, 592, 594, 598, 600, 606, 609, 613, 616, 618, 622, 624, 627, 632, 635, 640, 641, 642, 643, 644, 645, 646, 648, 649, 651, 652, 655, 658, 660, 661, 662, 664, 667, 668, 669, 670, 672, 673, 674, 675, 676, 680, 684, 699, 705, 709, 710, 712, 716, 719, 720], "challeng": [0, 1, 3], "capabl": [0, 1, 3, 261, 264, 669, 699, 721, 722, 723], "provid": [0, 1, 3, 4, 6, 8, 12, 74, 75, 242, 244, 245, 246, 248, 250, 256, 264, 337, 612, 650, 651, 653, 655, 657, 658, 660, 661, 662, 664, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 680, 682, 690, 693, 694, 699, 701, 710, 713, 716, 719, 720, 722, 723], "easi": [0, 7, 12, 669, 676], "both": [0, 1, 6, 7, 8, 75, 252, 264, 651, 653, 655, 657, 658, 661, 666, 668, 670, 673, 674, 675, 676, 677, 682, 683, 685, 688, 690, 701, 705, 710, 712, 713, 716, 717, 718, 719, 722], "develop": [0, 6, 7, 8, 242, 261, 668, 669, 671, 677, 699, 710, 723], "user": [0, 6, 7, 8, 11, 25, 26, 27, 36, 67, 75, 146, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 261, 651, 652, 653, 655, 657, 658, 660, 661, 662, 664, 665, 666, 667, 668, 671, 672, 674, 675, 676, 679, 683, 690, 698, 699, 700, 704, 709, 710, 716, 718, 720, 721], "control": [0, 1, 244, 245, 246, 264, 485, 668, 673, 677, 690, 709, 711, 716, 718, 719, 720, 722, 723], "which": [0, 1, 3, 6, 7, 8, 12, 17, 31, 70, 71, 73, 75, 196, 245, 246, 248, 250, 256, 276, 281, 293, 302, 321, 454, 462, 489, 490, 651, 652, 653, 655, 656, 657, 661, 668, 669, 670, 674, 675, 676, 677, 680, 682, 683, 685, 686, 687, 688, 690, 691, 692, 694, 699, 701, 703, 705, 706, 708, 709, 710, 712, 713, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725], "case": [0, 6, 7, 8, 9, 11, 16, 17, 21, 22, 26, 27, 28, 30, 31, 32, 34, 35, 39, 43, 48, 50, 53, 55, 60, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 112, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 145, 147, 148, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 169, 171, 172, 173, 174, 175, 176, 178, 180, 181, 182, 184, 185, 187, 189, 193, 194, 195, 199, 200, 201, 202, 203, 204, 205, 209, 210, 211, 212, 213, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 261, 264, 265, 269, 270, 271, 273, 274, 279, 280, 281, 282, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 327, 329, 330, 334, 337, 338, 341, 342, 343, 345, 346, 348, 350, 351, 353, 355, 357, 359, 361, 363, 365, 366, 367, 369, 370, 372, 374, 375, 377, 378, 379, 381, 383, 384, 386, 387, 389, 391, 392, 394, 396, 397, 399, 400, 401, 402, 404, 405, 407, 408, 410, 411, 413, 414, 415, 416, 417, 418, 420, 424, 425, 427, 428, 430, 432, 433, 434, 436, 439, 441, 442, 445, 447, 448, 450, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 486, 487, 488, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 539, 543, 544, 546, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 564, 565, 566, 570, 572, 574, 575, 576, 578, 579, 580, 584, 586, 588, 589, 590, 592, 593, 594, 598, 600, 602, 604, 605, 606, 609, 610, 611, 613, 614, 616, 617, 618, 622, 624, 626, 627, 628, 629, 631, 632, 633, 634, 635, 636, 637, 638, 640, 650, 651, 652, 653, 654, 656, 657, 658, 660, 661, 662, 663, 664, 665, 666, 667, 670, 672, 673, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 703, 704, 705, 706, 707, 708, 709, 711, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 725], "suit": [0, 1, 3, 7, 11, 26, 35, 39, 68, 69, 71, 261, 655, 670, 672, 673, 674, 675, 676, 677, 679, 687, 695, 696, 697, 698, 700, 704, 710, 714], "ar": [0, 1, 3, 6, 7, 8, 9, 11, 12, 20, 21, 23, 26, 31, 36, 63, 65, 69, 71, 75, 82, 85, 87, 95, 97, 99, 110, 112, 114, 135, 141, 148, 150, 156, 162, 164, 167, 169, 171, 211, 213, 229, 235, 237, 239, 242, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 261, 264, 267, 287, 308, 317, 345, 363, 375, 404, 407, 457, 465, 473, 485, 498, 506, 509, 526, 552, 558, 603, 605, 610, 628, 632, 642, 645, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 679, 680, 681, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725], "last": [0, 1, 3, 670, 680, 709, 723], "modifi": [0, 3, 8, 24, 28, 61, 125, 130, 280, 282, 285, 294, 297, 303, 307, 316, 338, 341, 343, 346, 351, 367, 370, 379, 384, 387, 392, 397, 402, 405, 408, 428, 434, 448, 453, 455, 463, 496, 629, 631, 638, 653, 655, 661, 662, 668, 673, 674, 675, 676, 677, 683, 701, 710, 712, 713, 716, 723], "defin": [0, 1, 7, 8, 11, 26, 50, 70, 71, 73, 146, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 256, 261, 264, 272, 275, 650, 651, 652, 653, 654, 655, 656, 657, 658, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 672, 673, 677, 682, 683, 685, 688, 690, 699, 703, 706, 707, 708, 709, 710, 712, 713, 715, 716, 717, 719, 720, 722, 724, 725], "its": [0, 1, 6, 7, 8, 11, 28, 72, 191, 197, 214, 247, 252, 609, 655, 662, 663, 668, 669, 670, 672, 674, 675, 676, 677, 682, 683, 684, 688, 690, 695, 709, 710, 716, 718, 723, 724], "attribut": [0, 1, 8, 20, 246, 248, 250, 256, 264, 655, 661, 674, 675, 676], "For": [0, 1, 3, 4, 6, 7, 8, 63, 71, 245, 246, 248, 250, 256, 257, 653, 655, 661, 668, 669, 670, 672, 674, 675, 676, 677, 679, 680, 684, 690, 695, 704, 708, 709, 710, 714, 716, 717, 719, 720, 721, 723, 724], "see": [0, 1, 6, 7, 8, 243, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 605, 651, 654, 655, 656, 658, 661, 663, 664, 665, 666, 667, 668, 670, 671, 674, 675, 676, 677, 679, 681, 683, 690, 693, 699, 704, 705, 709, 710, 713, 716, 718, 720, 722, 723, 724, 725], "mechan": [0, 1, 668], "comput": [0, 1, 7, 63, 261, 264, 266, 268, 328, 501, 506, 547, 603, 604, 611, 645, 646, 647, 651, 654, 655, 658, 660, 661, 662, 663, 664, 667, 668, 670, 675, 687, 691, 692, 693, 696, 698, 699, 700, 701, 710, 716, 721, 723], "There": [0, 1, 6, 248, 255, 256, 264, 642, 648, 649, 651, 655, 661, 668, 669, 670, 671, 675, 676, 677, 679, 681, 682, 683, 686, 687, 690, 691, 692, 693, 694, 700, 715, 716], "need": [0, 1, 3, 5, 6, 7, 8, 27, 36, 51, 63, 242, 273, 350, 353, 489, 506, 518, 650, 655, 661, 664, 668, 669, 670, 671, 673, 674, 675, 676, 677, 685, 690, 693, 695, 698, 699, 700, 701, 703, 705, 709, 710, 716, 718, 720, 721, 723, 725], "practic": [0, 1, 668, 669, 675, 701], "should": [0, 1, 3, 6, 7, 8, 12, 22, 26, 28, 37, 51, 60, 70, 71, 75, 101, 116, 137, 152, 173, 231, 241, 242, 255, 257, 258, 259, 260, 261, 262, 264, 272, 289, 292, 301, 459, 467, 488, 500, 533, 634, 650, 655, 661, 668, 670, 671, 674, 675, 676, 677, 680, 681, 687, 690, 705, 706, 710, 713, 715, 716, 723], "overli": [0, 7, 264, 268, 701, 710, 713, 716], "tediou": [0, 1], "manual": [0, 1, 6, 8, 26, 27, 243, 244, 245, 246, 250, 668, 674, 690, 713, 716, 724], "e": [0, 1, 7, 8, 11, 28, 31, 42, 252, 261, 264, 506, 606, 655, 668, 669, 670, 671, 672, 674, 675, 676, 677, 684, 690, 698, 700, 703, 706, 708, 710, 713, 715, 716, 717, 718, 719, 722, 723, 724, 725], "g": [0, 1, 7, 8, 11, 28, 31, 42, 114, 123, 246, 261, 606, 655, 668, 669, 670, 671, 672, 674, 675, 676, 677, 684, 690, 703, 706, 708, 710, 713, 715, 716, 717, 718, 722, 723, 725], "set": [0, 1, 5, 6, 7, 8, 11, 12, 14, 15, 17, 22, 35, 51, 66, 67, 70, 71, 73, 74, 75, 82, 99, 101, 116, 137, 152, 164, 173, 174, 194, 200, 210, 217, 231, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 257, 258, 259, 260, 261, 262, 264, 271, 289, 292, 301, 323, 325, 333, 336, 365, 374, 377, 432, 441, 459, 467, 488, 500, 505, 506, 536, 542, 544, 562, 569, 576, 583, 590, 597, 603, 605, 614, 621, 634, 642, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 660, 661, 662, 663, 664, 665, 667, 668, 669, 671, 672, 673, 677, 681, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 694, 695, 696, 697, 698, 699, 700, 705, 706, 708, 709, 710, 711, 712, 713, 715, 716, 717, 718, 719, 720, 721, 725], "flag": [0, 1, 6, 668, 669, 671, 672, 675, 676, 677, 679, 704, 706, 715, 723], "document": [0, 4, 8, 612, 655, 668, 669, 673, 677, 710, 715], "process": [0, 1, 3, 8, 65, 183, 184, 189, 195, 203, 205, 211, 213, 247, 249, 252, 264, 355, 357, 407, 490, 655, 668, 669, 670, 672, 673, 674, 675, 676, 690, 710, 712, 713], "creat": [0, 6, 8, 9, 11, 12, 20, 26, 31, 38, 43, 44, 50, 51, 55, 70, 71, 72, 73, 80, 82, 85, 87, 89, 91, 95, 97, 99, 102, 104, 106, 110, 112, 114, 117, 119, 121, 124, 127, 129, 132, 135, 138, 141, 143, 145, 148, 150, 153, 156, 158, 160, 162, 164, 167, 169, 171, 174, 176, 178, 180, 183, 184, 188, 189, 195, 203, 205, 211, 213, 219, 221, 224, 226, 229, 232, 235, 237, 239, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 256, 261, 264, 269, 272, 273, 277, 281, 284, 287, 290, 293, 296, 299, 302, 306, 308, 310, 312, 315, 317, 319, 321, 324, 327, 330, 334, 337, 342, 345, 348, 350, 353, 355, 357, 359, 361, 363, 366, 369, 372, 375, 378, 381, 382, 383, 386, 389, 390, 391, 394, 395, 396, 401, 404, 407, 411, 413, 415, 417, 420, 427, 430, 433, 436, 437, 439, 442, 447, 450, 451, 454, 457, 460, 462, 465, 468, 471, 473, 475, 477, 478, 480, 482, 486, 491, 493, 495, 498, 501, 503, 506, 518, 522, 524, 526, 528, 530, 533, 535, 539, 543, 546, 549, 552, 554, 556, 558, 561, 564, 566, 570, 572, 573, 575, 578, 580, 584, 586, 587, 589, 592, 594, 598, 600, 601, 606, 613, 616, 618, 622, 624, 625, 628, 632, 635, 637, 642, 648, 649, 653, 654, 655, 656, 657, 658, 661, 664, 668, 669, 671, 672, 673, 674, 676, 677, 680, 686, 687, 690, 691, 692, 694, 695, 696, 697, 698, 699, 700, 705, 709, 710, 716, 718, 720, 721, 723], "upload": [0, 710], "give": [0, 6, 8, 668, 669, 670, 674, 675, 676, 677, 684, 720, 721, 723], "stamp": [0, 1, 6], "given": [0, 1, 6, 7, 8, 9, 25, 37, 45, 63, 65, 69, 74, 75, 243, 296, 328, 399, 400, 422, 477, 508, 510, 533, 547, 603, 604, 645, 651, 653, 655, 660, 665, 668, 671, 674, 675, 677, 683, 685, 686, 688, 690, 694, 701, 706, 710, 712, 715, 716, 722, 723, 725], "git": [0, 3, 8, 67, 242, 650, 670, 675, 676, 677, 723], "hash": 0, "releas": [0, 1, 669, 673, 679, 699, 700, 704, 723], "know": [0, 1, 8, 668, 669, 670, 675, 676, 701, 710], "older": [0, 6], "retain": [0, 6, 661, 676, 677, 710], "so": [0, 1, 6, 7, 8, 24, 61, 77, 156, 242, 261, 269, 642, 648, 649, 650, 652, 655, 658, 661, 667, 668, 669, 670, 672, 674, 675, 676, 677, 678, 699, 700, 701, 703, 705, 709, 710, 716, 718, 720, 722, 723, 725], "can": [0, 3, 5, 6, 7, 8, 11, 12, 21, 26, 30, 47, 50, 52, 70, 71, 73, 75, 81, 157, 163, 242, 243, 244, 245, 247, 248, 250, 252, 256, 257, 258, 259, 260, 261, 262, 264, 268, 269, 348, 489, 559, 650, 655, 661, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 680, 681, 683, 684, 686, 687, 690, 694, 698, 699, 700, 701, 705, 709, 710, 712, 713, 716, 718, 719, 720, 721, 722, 723, 724, 725], "still": [0, 1, 676, 687, 716], "It": [0, 1, 3, 6, 11, 20, 243, 244, 245, 246, 248, 249, 250, 256, 264, 651, 652, 653, 655, 656, 657, 658, 660, 662, 668, 669, 670, 672, 674, 675, 676, 677, 687, 690, 693, 699, 710, 719, 720], "mai": [0, 1, 6, 7, 8, 16, 20, 25, 242, 247, 261, 272, 650, 653, 655, 661, 668, 670, 671, 672, 675, 676, 677, 680, 690, 693, 694, 698, 700, 710, 712, 716, 720, 723, 724], "worthwhil": 0, "deprec": [0, 29, 86, 96, 98, 105, 111, 113, 120, 126, 131, 142, 144, 149, 154, 161, 168, 170, 177, 179, 222, 227, 233, 236, 238, 283, 286, 295, 298, 304, 352, 380, 449, 456, 464, 630, 639, 668], "delet": [0, 6, 8, 669, 670, 671, 723], "old": [0, 6, 672, 674], "do": [0, 1, 3, 6, 8, 188, 249, 655, 668, 670, 671, 672, 673, 674, 675, 676, 686, 687, 690, 691, 692, 694, 699, 705, 710, 716, 719, 723], "abil": [0, 7, 720], "up": [0, 1, 5, 6, 7, 8, 11, 14, 15, 17, 22, 26, 35, 56, 67, 70, 71, 72, 73, 74, 75, 101, 116, 137, 152, 173, 174, 176, 194, 200, 210, 217, 231, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 257, 258, 259, 260, 261, 262, 264, 271, 289, 292, 301, 323, 336, 365, 374, 377, 432, 441, 459, 467, 488, 500, 634, 650, 651, 652, 653, 654, 655, 656, 657, 658, 660, 661, 662, 663, 664, 665, 667, 668, 669, 671, 672, 673, 674, 677, 683, 687, 688, 689, 690, 695, 696, 697, 698, 700, 705, 709, 710, 712, 718, 720, 721, 724], "same": [0, 1, 6, 7, 8, 12, 26, 74, 75, 80, 249, 505, 655, 661, 665, 668, 669, 670, 672, 674, 675, 676, 677, 680, 683, 684, 685, 686, 688, 690, 694, 695, 696, 697, 698, 699, 700, 701, 703, 705, 706, 710, 715, 716, 717, 718, 723, 724, 725], "within": [0, 6, 7, 8, 11, 12, 16, 21, 26, 72, 73, 74, 75, 91, 106, 180, 244, 247, 275, 369, 651, 655, 656, 658, 665, 668, 670, 672, 674, 675, 676, 677, 686, 687, 690, 691, 692, 694, 695, 696, 697, 698, 699, 700, 710, 711, 713, 716, 723], "If": [0, 1, 3, 6, 7, 8, 11, 12, 21, 27, 28, 38, 61, 63, 65, 66, 70, 74, 75, 82, 87, 99, 114, 135, 150, 164, 171, 229, 239, 257, 258, 259, 260, 261, 262, 287, 308, 317, 363, 375, 457, 465, 473, 498, 526, 651, 653, 655, 658, 660, 661, 662, 664, 667, 668, 669, 670, 671, 672, 674, 675, 676, 677, 698, 699, 700, 703, 709, 718, 720, 721, 723], "place": [0, 1, 6, 8, 655, 668, 675, 676, 699, 709, 718, 719, 720], "import": [0, 1, 8, 252, 668, 669, 670, 672, 674, 675, 676, 701], "constraint": [0, 700, 723], "solut": [0, 1, 8, 174, 178, 250, 259, 321, 522, 609, 610, 653, 654, 656, 663, 665, 671, 674, 676, 682, 683, 686, 688, 694, 707, 708, 711, 719, 720], "support": [0, 6, 8, 11, 245, 246, 248, 250, 256, 264, 642, 648, 649, 651, 653, 654, 664, 667, 668, 669, 673, 674, 675, 676, 677, 680, 681, 687, 695, 696, 697, 698, 700, 701, 703, 706, 710, 712, 713, 716, 724], "databas": [0, 1, 6, 8, 9, 11, 12, 245, 664, 668, 690, 699], "input": [0, 6, 8, 11, 12, 13, 16, 22, 59, 91, 101, 106, 116, 137, 152, 173, 180, 188, 191, 192, 197, 198, 206, 207, 208, 214, 215, 231, 241, 243, 244, 245, 246, 247, 248, 250, 255, 256, 269, 275, 289, 292, 301, 436, 459, 467, 488, 490, 500, 506, 567, 581, 595, 619, 634, 651, 652, 653, 655, 657, 658, 660, 661, 662, 674, 675, 676, 680, 690, 712], "data": [0, 6, 8, 12, 183, 184, 188, 189, 191, 192, 195, 196, 197, 198, 203, 205, 207, 208, 211, 213, 214, 215, 252, 255, 261, 266, 269, 312, 321, 420, 421, 422, 425, 442, 443, 444, 446, 505, 506, 508, 510, 605, 610, 642, 648, 649, 652, 653, 655, 657, 661, 668, 670, 673, 674, 677, 680, 690, 693, 694, 699, 707, 710, 712, 720, 723, 724, 725], "e3sm": [0, 1, 6, 8, 11, 342, 350, 353, 355, 357, 359, 361, 400, 650, 655, 668, 670, 673, 675, 676, 677, 695, 696, 697, 698, 699, 700, 701, 703, 705, 710], "lcrc": [0, 1, 6, 8, 34, 245, 668, 669, 677, 695, 696, 699, 723], "server": [0, 1, 6, 8, 12, 34, 242, 245, 255, 650, 668, 669, 677, 698, 700, 710], "store": [0, 1, 8, 28, 655, 661, 668, 674, 675, 676, 710, 723], "new": [0, 1, 3, 6, 9, 11, 15, 23, 26, 31, 36, 38, 43, 50, 55, 82, 87, 99, 114, 135, 150, 164, 171, 229, 239, 264, 269, 273, 275, 287, 308, 317, 330, 355, 357, 359, 361, 363, 381, 389, 394, 413, 415, 430, 450, 457, 473, 485, 486, 526, 539, 554, 566, 572, 580, 586, 594, 600, 618, 624, 632, 642, 648, 649, 661, 668, 669, 670, 671, 672, 673, 693, 694, 710, 716, 723], "compass_cach": [0, 6, 8, 9, 668], "core": [0, 6, 7, 8, 9, 10, 11, 12, 14, 15, 17, 18, 20, 21, 23, 24, 25, 26, 31, 41, 62, 64, 65, 67, 72, 73, 77, 78, 79, 84, 85, 93, 94, 95, 104, 108, 109, 110, 123, 134, 140, 141, 153, 155, 156, 166, 167, 176, 182, 183, 187, 202, 218, 223, 228, 234, 235, 244, 245, 246, 248, 249, 250, 256, 264, 265, 272, 276, 279, 281, 284, 305, 314, 323, 336, 345, 410, 419, 452, 470, 484, 521, 532, 538, 551, 560, 627, 651, 652, 653, 655, 658, 660, 662, 664, 667, 672, 673, 674, 675, 676, 677, 678, 680, 684, 686, 687, 688, 690, 694, 695, 696, 697, 698, 699, 700, 702, 705, 710, 712, 721, 723, 724, 725], "": [0, 1, 6, 7, 8, 11, 12, 16, 26, 28, 34, 56, 68, 72, 73, 75, 244, 245, 246, 247, 249, 250, 252, 253, 254, 651, 652, 653, 654, 655, 656, 657, 658, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 674, 675, 676, 677, 679, 683, 690, 692, 695, 696, 697, 698, 699, 700, 704, 709, 710, 712, 716, 718, 720, 721, 722, 723], "space": [0, 1, 6, 7, 8, 668, 670, 676, 686, 687, 691, 692, 694, 699, 719, 723], "appropri": [0, 1, 3, 6, 63, 242, 243, 244, 261, 533, 650, 651, 652, 653, 655, 658, 660, 661, 662, 664, 667, 668, 670, 673, 675, 676, 677, 680, 682, 695, 696, 697, 698, 699, 700, 705, 710, 716, 719, 723], "ad": [0, 1, 3, 6, 7, 8, 12, 22, 28, 36, 75, 101, 116, 137, 152, 173, 231, 241, 244, 245, 250, 264, 289, 292, 301, 459, 467, 488, 500, 634, 642, 648, 649, 651, 655, 658, 660, 670, 673, 693, 694, 695, 696, 697, 698, 700, 702, 710, 716, 723], "where": [0, 1, 6, 7, 8, 11, 26, 35, 37, 67, 70, 71, 73, 242, 264, 268, 506, 518, 642, 645, 648, 649, 650, 655, 658, 661, 668, 670, 672, 673, 674, 675, 676, 677, 683, 684, 686, 688, 690, 694, 695, 696, 697, 698, 699, 700, 701, 703, 709, 710, 712, 713, 716, 722, 723, 725], "target": [0, 1, 8, 12, 38, 245, 261, 655, 668, 674, 675, 676, 710], "local": [0, 1, 6, 8, 11, 12, 26, 242, 252, 650, 668, 670, 671, 677, 690, 698, 699, 700, 703, 710, 721], "futur": [0, 1, 20, 264, 655, 667, 668, 669, 670, 672, 673, 675, 693, 694, 701, 710, 712, 724], "filenam": [0, 1, 12, 16, 75, 93, 108, 245, 446, 505, 655, 668, 670, 674, 675, 676], "correspond": [0, 1, 3, 7, 8, 74, 75, 184, 203, 211, 242, 275, 603, 609, 650, 655, 658, 661, 668, 670, 690, 711], "via": [0, 1, 3, 6, 668, 676, 699, 701], "python": [0, 2, 6, 7, 8, 20, 28, 378, 651, 652, 668, 669, 670, 672, 673, 674, 675, 676, 677, 698, 699, 700, 710, 723], "dictionari": [0, 1, 8, 9, 11, 15, 17, 23, 25, 26, 31, 36, 67, 71, 75, 337, 420, 604, 605, 610, 651, 667, 668, 669, 675, 676], "describ": [0, 1, 6, 7, 67, 74, 75, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 261, 264, 651, 652, 653, 654, 655, 657, 658, 660, 661, 662, 664, 667, 668, 669, 670, 671, 674, 675, 676, 677, 680, 685, 690, 695, 696, 697, 698, 699, 700, 703, 709, 710, 713, 716, 719, 723], "08": [0, 675, 706, 715], "03": [0, 667], "indic": [0, 1, 7, 8, 71, 75, 264, 506, 645, 668, 671, 675, 677, 681, 690, 703, 710], "two": [0, 1, 6, 8, 85, 95, 97, 110, 112, 141, 148, 156, 162, 167, 169, 235, 237, 244, 245, 246, 248, 249, 250, 252, 256, 264, 293, 345, 404, 407, 462, 651, 653, 654, 655, 658, 668, 669, 670, 675, 676, 683, 684, 686, 687, 688, 690, 694, 705, 706, 708, 710, 711, 713, 715, 716, 721, 722, 723, 724], "all": [0, 1, 6, 7, 8, 9, 11, 21, 26, 62, 65, 67, 70, 71, 78, 82, 87, 99, 114, 135, 150, 164, 171, 201, 206, 207, 229, 239, 242, 243, 246, 252, 264, 265, 272, 275, 276, 287, 308, 317, 337, 363, 369, 375, 457, 465, 473, 498, 506, 507, 526, 558, 642, 648, 649, 650, 655, 661, 664, 668, 669, 670, 672, 673, 674, 675, 676, 677, 679, 680, 681, 683, 684, 685, 688, 690, 699, 703, 704, 705, 706, 708, 710, 712, 715, 717, 718, 719, 720, 722, 723, 724], "follow": [0, 1, 5, 6, 7, 8, 42, 242, 247, 249, 261, 264, 642, 648, 649, 650, 655, 658, 661, 668, 670, 671, 674, 675, 676, 677, 680, 682, 687, 690, 691, 692, 698, 699, 700, 701, 703, 705, 709, 710, 711, 712, 713, 716, 718, 719, 722, 723], "notat": [0, 668], "ocean": [0, 4, 6, 7, 8, 9, 31, 72, 73, 183, 203, 211, 242, 252, 651, 652, 653, 654, 655, 656, 657, 658, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 672, 673, 674, 675, 676, 677, 690, 695, 696, 697, 698, 699, 700, 701, 702, 703, 705, 706, 707, 708, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 721, 722, 723, 724, 725], "global_ocean": [0, 1, 6, 8, 269, 427, 430, 436, 442, 650, 657, 659, 668, 669, 670, 672, 673, 675, 676, 677, 701, 704, 705, 712, 714, 723, 724, 725], "qu240": [0, 1, 6, 606, 611, 668, 669, 670, 674, 677, 705, 723, 725], "phc": [0, 1, 6, 369, 372, 655, 668, 669, 703, 705, 710, 725], "init": [0, 1, 6, 14, 15, 17, 21, 242, 275, 276, 337, 341, 342, 345, 348, 350, 363, 366, 383, 386, 391, 396, 401, 404, 407, 427, 430, 650, 652, 653, 657, 664, 667, 668, 669, 670, 675, 677, 705, 721, 723, 725], "onli": [0, 1, 6, 7, 8, 23, 26, 188, 242, 243, 255, 256, 261, 506, 510, 554, 556, 558, 650, 654, 655, 661, 663, 668, 669, 673, 674, 675, 676, 677, 682, 683, 687, 690, 691, 692, 693, 694, 698, 699, 700, 703, 706, 709, 710, 713, 716, 718, 719, 720, 722, 723], "some": [0, 1, 6, 8, 26, 243, 506, 518, 655, 661, 664, 667, 668, 669, 670, 671, 674, 675, 676, 677, 679, 687, 690, 695, 696, 697, 698, 699, 700, 703, 704, 710, 723, 724, 725], "thei": [0, 1, 3, 6, 7, 8, 12, 28, 36, 50, 69, 246, 337, 650, 651, 655, 658, 660, 661, 668, 669, 672, 673, 674, 675, 676, 677, 680, 683, 684, 686, 688, 690, 694, 699, 701, 703, 705, 706, 709, 710, 713, 716, 719, 722, 723, 725], "list": [0, 1, 3, 7, 11, 26, 27, 34, 35, 62, 65, 69, 70, 71, 72, 73, 74, 75, 82, 87, 99, 114, 150, 156, 164, 171, 229, 239, 243, 245, 246, 248, 250, 256, 299, 321, 324, 327, 348, 383, 391, 396, 399, 478, 522, 535, 546, 561, 564, 575, 578, 589, 592, 605, 611, 613, 616, 651, 668, 669, 670, 672, 673, 674, 675, 676, 677, 679, 680, 684, 686, 694, 698, 699, 700, 709, 716, 718, 720, 721, 723, 724, 725], "explicitli": [0, 6, 7, 8, 655, 668, 675, 676, 677, 710, 712, 723], "initial_st": [0, 1, 6, 277, 654, 655, 663, 665, 668, 669, 674, 677, 706, 707, 708, 710, 712, 713, 715, 716, 717, 719, 722], "similarli": [0, 1, 6, 8, 668, 670, 674, 675, 676, 699, 705, 723], "ha": [0, 1, 6, 8, 11, 16, 21, 26, 28, 66, 70, 71, 73, 75, 77, 82, 87, 99, 114, 135, 150, 164, 171, 206, 207, 229, 239, 242, 243, 244, 245, 246, 247, 248, 250, 252, 255, 256, 257, 258, 259, 260, 264, 287, 308, 317, 363, 375, 457, 465, 473, 498, 505, 526, 650, 651, 652, 653, 655, 658, 660, 661, 662, 664, 667, 668, 669, 670, 672, 673, 674, 675, 676, 677, 678, 682, 683, 684, 686, 687, 688, 690, 700, 701, 703, 706, 707, 708, 709, 710, 713, 715, 716, 718, 719, 720, 722, 723], "specifi": [0, 6, 8, 12, 164, 243, 249, 269, 657, 661, 668, 670, 674, 675, 676, 677, 681, 687, 690, 698, 700, 709, 710, 712, 716, 718, 720, 721, 722, 723], "suffix": [0, 71, 82, 87, 99, 114, 150, 164, 171, 229, 239, 245, 246, 248, 249, 250, 256, 668, 710], "c": [0, 1, 6, 71, 114, 123, 246, 261, 264, 668, 670, 680, 684, 695, 696, 697, 698, 699, 700, 705, 716, 718, 720, 723, 725], "number": [0, 1, 6, 8, 11, 18, 20, 21, 23, 24, 35, 39, 43, 44, 45, 46, 47, 60, 61, 64, 65, 71, 82, 87, 99, 114, 135, 150, 164, 171, 187, 202, 206, 229, 239, 243, 247, 249, 252, 266, 267, 272, 276, 287, 308, 317, 328, 363, 375, 399, 400, 442, 457, 465, 473, 498, 505, 526, 538, 547, 650, 651, 655, 658, 661, 664, 667, 668, 669, 672, 675, 676, 677, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 690, 691, 692, 694, 699, 701, 703, 705, 706, 707, 708, 709, 710, 711, 712, 713, 715, 716, 717, 718, 719, 720, 721, 723], "setup": [0, 11, 21, 23, 26, 85, 95, 97, 110, 112, 141, 148, 156, 162, 167, 169, 235, 237, 244, 245, 246, 248, 250, 256, 442, 651, 652, 655, 658, 660, 661, 664, 667, 669, 670, 672, 673, 674, 675, 676, 677, 709, 712, 718, 720, 721, 723, 724], "n": [0, 1, 6, 44, 51, 52, 57, 382, 390, 395, 451, 573, 587, 601, 625, 668, 698, 699, 700, 719, 721, 723], "90c": [0, 668], "91c": [0, 668], "92": [0, 668, 703, 721], "approach": [0, 1, 668, 669, 670, 671, 674, 675, 676, 701, 703, 716], "effici": [0, 1, 342, 655, 668, 710], "doe": [0, 1, 3, 8, 187, 191, 197, 202, 207, 214, 264, 658, 668, 673, 675, 676, 680, 690, 699, 710, 713, 719, 721, 722], "ani": [0, 1, 6, 7, 8, 22, 70, 71, 101, 116, 137, 152, 173, 231, 241, 245, 246, 248, 250, 271, 289, 292, 301, 365, 374, 377, 432, 441, 459, 467, 488, 500, 634, 651, 652, 653, 655, 660, 661, 662, 668, 669, 670, 673, 674, 675, 676, 677, 680, 690, 699, 705, 706, 710, 716, 723], "much": [0, 1, 6, 8, 243, 485, 668, 674, 675, 676, 705, 710, 713, 716, 722], "more": [0, 4, 6, 8, 26, 34, 35, 51, 70, 71, 247, 651, 652, 653, 654, 655, 656, 658, 663, 665, 666, 667, 668, 669, 670, 672, 674, 675, 676, 679, 681, 686, 687, 689, 690, 693, 694, 699, 701, 702, 704, 705, 710, 712, 713, 714, 719, 722, 723, 724], "verbos": [0, 6, 39, 41, 668, 674, 725], "must": [0, 1, 6, 7, 8, 11, 16, 17, 19, 72, 73, 275, 566, 580, 594, 618, 655, 668, 670, 675, 690, 703, 710, 721, 724], "own": [0, 1, 7, 8, 11, 247, 609, 655, 668, 669, 670, 672, 674, 675, 676, 677, 709, 710, 718, 720, 721, 723, 724], "t": [0, 1, 6, 7, 8, 245, 246, 248, 250, 605, 609, 651, 652, 653, 655, 660, 662, 664, 668, 669, 670, 671, 674, 675, 676, 677, 680, 697, 698, 699, 705, 709, 710, 718, 720, 721, 723, 724, 725], "These": [0, 1, 6, 8, 9, 11, 242, 567, 581, 595, 603, 619, 650, 651, 655, 660, 668, 669, 670, 673, 675, 677, 680, 683, 699, 705, 707, 710, 711, 712, 716, 721, 722, 723, 724, 725], "assum": [0, 28, 275, 276, 348, 668, 675, 676, 677, 698, 700, 701], "alwai": [0, 1, 7, 8, 36, 242, 650, 655, 668, 669, 670, 674, 675, 676, 677, 690, 710], "free": [0, 1, 665, 674, 675, 676, 677, 701], "choos": [0, 1, 6, 669, 675, 690, 695, 696, 697, 698, 700, 724], "between": [0, 1, 3, 6, 8, 12, 24, 44, 51, 52, 57, 61, 74, 75, 184, 203, 211, 244, 264, 293, 382, 390, 395, 442, 451, 462, 573, 587, 601, 625, 642, 648, 649, 652, 653, 654, 655, 657, 661, 663, 664, 665, 668, 669, 670, 675, 683, 684, 686, 688, 693, 694, 699, 701, 703, 706, 710, 713, 715, 716, 719], "long": [0, 1, 5, 11, 21, 65, 82, 87, 99, 114, 135, 150, 164, 171, 176, 229, 239, 243, 287, 308, 317, 363, 375, 400, 457, 465, 473, 498, 526, 554, 558, 628, 632, 655, 664, 667, 668, 669, 675, 680, 690, 705, 713, 716, 723], "been": [0, 1, 6, 8, 11, 26, 28, 35, 70, 71, 73, 242, 257, 258, 259, 260, 327, 546, 564, 578, 592, 616, 650, 655, 661, 668, 669, 670, 671, 673, 674, 675, 676, 677, 690, 695, 696, 697, 698, 699, 700, 703, 706, 710, 714, 715, 723], "cached_fil": [0, 6, 9, 668], "json": [0, 6, 8, 9, 34, 668, 698, 700], "command": [0, 1, 8, 20, 65, 67, 612, 668, 669, 670, 672, 673, 674, 675, 676, 698, 699, 700, 705, 723], "line": [0, 1, 7, 8, 65, 661, 668, 669, 670, 673, 674, 675, 676, 684, 694, 716, 723], "tool": [0, 1, 6, 8, 242, 244, 245, 246, 247, 250, 264, 650, 668, 670, 673, 674, 675, 676, 677, 680, 705, 710], "avail": [0, 1, 5, 6, 8, 11, 16, 18, 21, 39, 62, 64, 65, 82, 87, 99, 114, 135, 150, 164, 171, 229, 239, 243, 272, 287, 308, 317, 321, 363, 375, 457, 465, 473, 498, 526, 661, 668, 669, 670, 675, 679, 683, 687, 690, 695, 696, 697, 698, 700, 704, 706, 707, 708, 709, 710, 716, 718, 720, 723, 725], "chrysali": [0, 1, 6, 261, 668, 675, 676, 677, 699, 723], "anvil": [0, 1, 6, 261, 668, 677, 699, 723], "machin": [0, 6, 8, 11, 26, 67, 70, 71, 73, 93, 108, 123, 182, 242, 650, 655, 668, 669, 673, 675, 676, 677, 695, 696, 697, 698, 700], "work": [0, 1, 3, 6, 8, 11, 12, 16, 19, 22, 26, 34, 35, 67, 68, 70, 71, 73, 101, 116, 137, 152, 173, 231, 241, 245, 246, 248, 249, 250, 256, 259, 261, 271, 289, 292, 301, 365, 374, 377, 432, 441, 459, 467, 488, 500, 634, 668, 669, 670, 671, 672, 675, 676, 677, 699, 705, 709, 716, 718, 719, 720, 721, 722, 723, 724], "directori": [0, 6, 8, 11, 12, 16, 22, 26, 34, 35, 38, 67, 68, 70, 71, 72, 73, 74, 75, 91, 101, 106, 116, 137, 152, 173, 180, 231, 241, 242, 261, 271, 289, 292, 301, 365, 374, 377, 432, 441, 459, 467, 488, 500, 634, 650, 651, 655, 658, 661, 669, 670, 672, 673, 675, 676, 677, 683, 690, 698, 700, 709, 710, 716, 718, 720, 721, 723, 724], "copi": [0, 6, 8, 12, 34, 70, 71, 73, 248, 485, 675, 676, 723], "map": [0, 8, 9, 50, 51, 184, 187, 191, 197, 202, 203, 207, 211, 214, 252, 508, 510, 655, 670, 677, 690, 710], "those": [0, 1, 8, 23, 26, 74, 75, 261, 655, 667, 668, 669, 670, 672, 673, 674, 675, 676, 690, 709, 710, 713, 714, 716, 725], "exampl": [0, 1, 3, 4, 6, 7, 8, 264, 655, 668, 669, 670, 671, 672, 674, 675, 676, 677, 681, 683, 690, 703, 704, 710, 723, 724, 725], "name": [0, 1, 6, 7, 8, 9, 11, 12, 14, 15, 17, 23, 24, 25, 26, 28, 31, 35, 37, 38, 39, 43, 50, 55, 59, 60, 61, 69, 70, 71, 72, 73, 74, 75, 80, 82, 87, 91, 99, 106, 114, 123, 135, 150, 164, 171, 180, 189, 191, 195, 197, 207, 214, 229, 239, 269, 272, 273, 278, 287, 308, 317, 328, 330, 334, 363, 366, 378, 381, 389, 394, 399, 400, 420, 423, 427, 430, 433, 436, 442, 447, 450, 457, 473, 486, 490, 506, 508, 510, 518, 522, 526, 528, 530, 535, 547, 606, 609, 610, 611, 612, 631, 632, 641, 651, 655, 660, 668, 669, 670, 672, 674, 675, 676, 677, 681, 683, 684, 685, 686, 688, 690, 694, 698, 700, 706, 710, 715, 723, 725], "culled_mesh": [0, 1, 6, 668, 675, 676], "nc": [0, 1, 6, 8, 91, 106, 180, 245, 248, 256, 264, 277, 348, 604, 609, 655, 661, 664, 667, 668, 669, 674, 675, 676, 690, 710], "becom": [0, 1, 7, 243, 264, 420, 668, 675, 676, 682, 701], "20210730": 0, "when": [0, 1, 6, 8, 14, 15, 17, 20, 26, 27, 36, 37, 38, 39, 68, 74, 75, 156, 243, 244, 245, 246, 248, 249, 250, 256, 261, 647, 651, 655, 658, 660, 661, 664, 667, 668, 669, 670, 673, 674, 675, 676, 680, 681, 682, 683, 684, 688, 690, 695, 696, 697, 698, 700, 703, 705, 710, 716, 723, 724], "call": [0, 1, 6, 8, 11, 20, 26, 27, 28, 42, 60, 68, 244, 245, 246, 248, 249, 250, 253, 254, 256, 261, 264, 348, 651, 655, 658, 661, 664, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 690, 698, 699, 700, 705, 710, 723], "default": [0, 1, 6, 7, 8, 11, 12, 14, 15, 17, 23, 24, 25, 26, 34, 51, 55, 61, 67, 69, 82, 87, 91, 93, 99, 104, 106, 108, 114, 123, 135, 150, 153, 164, 171, 180, 182, 221, 226, 229, 239, 242, 244, 245, 246, 248, 250, 253, 254, 256, 257, 258, 259, 260, 269, 272, 273, 287, 308, 310, 317, 319, 363, 430, 450, 457, 473, 480, 486, 509, 526, 552, 628, 632, 650, 654, 655, 661, 663, 664, 665, 666, 667, 668, 670, 673, 674, 676, 677, 682, 683, 684, 685, 686, 687, 688, 690, 691, 692, 694, 695, 696, 697, 698, 699, 700, 703, 705, 709, 710, 716, 718, 723, 724, 725], "being": [0, 1, 8, 11, 26, 68, 71, 75, 164, 264, 655, 658, 661, 668, 669, 670, 673, 674, 690, 703, 710, 714], "made": [0, 3, 6, 11, 16, 26, 75, 79, 228, 234, 655, 668, 669, 672, 674, 676, 688, 701, 724], "overridden": [0, 668], "contain": [0, 1, 3, 6, 7, 8, 9, 14, 17, 25, 62, 245, 246, 247, 248, 250, 264, 269, 278, 423, 436, 489, 490, 604, 642, 648, 649, 651, 652, 653, 655, 660, 662, 668, 669, 670, 672, 674, 675, 676, 677, 679, 690, 704, 710, 712, 716, 723], "210803": [0, 6], "culled_graph": [0, 1, 6, 668, 675], "info": [0, 1, 6, 8, 59, 60, 61, 275, 276, 506, 518, 655, 664, 667, 668, 675, 676], "critical_passages_mask_fin": [0, 6], "init_mode_forcing_data": [0, 6, 668], "prototyp": [0, 1], "had": [0, 261, 668, 669], "separ": [0, 1, 6, 7, 8, 143, 243, 489, 668, 675, 676, 681, 684, 686, 687, 690, 694, 708, 709, 710, 718, 720, 721, 723], "depend": [0, 1, 6, 8, 22, 101, 116, 137, 152, 173, 231, 241, 252, 271, 289, 292, 301, 365, 374, 377, 432, 441, 459, 467, 488, 500, 509, 634, 652, 654, 655, 658, 668, 670, 672, 674, 675, 676, 677, 698, 699, 700, 703, 709, 710, 711, 723, 724], "earlier": [0, 1], "turn": [0, 1, 11, 668, 671, 675, 716, 717], "out": [0, 1, 8, 14, 15, 17, 23, 24, 25, 66, 264, 490, 505, 655, 661, 668, 669, 670, 675, 676, 677, 683, 703, 710, 715, 716, 719, 723], "veri": [0, 1, 250, 490, 658, 668, 669, 670, 675, 676, 688, 690, 713, 716, 719, 722], "cumbersom": [0, 1], "mani": [0, 1, 6, 8, 668, 669, 670, 672, 673, 674, 675, 676, 681, 683, 685, 688, 704, 706, 709, 710, 714, 715, 718, 720], "subdirectori": [0, 1, 6, 8, 11, 12, 26, 39, 43, 50, 55, 82, 87, 91, 99, 106, 114, 135, 150, 164, 171, 180, 229, 239, 245, 269, 273, 287, 308, 317, 363, 369, 381, 389, 394, 430, 450, 457, 473, 486, 526, 632, 668, 669, 674, 675, 676, 690, 710, 723, 724], "predetermin": 0, "allow": [0, 1, 3, 8, 11, 21, 36, 75, 255, 264, 655, 661, 668, 672, 675, 676, 677, 680, 681, 699, 701, 703, 707, 709, 710, 712, 716, 718, 720, 724], "But": [0, 1, 261, 668, 669, 674, 675, 676, 677, 699], "did": [0, 1, 8, 75], "therefor": [0, 1, 261, 656, 668, 670, 672, 673, 675, 676, 680, 709, 710, 718, 720, 723], "propos": [0, 1, 3], "previou": [0, 6, 8, 247, 264, 401, 655, 668, 674, 676, 677, 690, 705, 719, 723, 725], "section": [0, 1, 3, 4, 7, 8, 51, 61, 242, 244, 245, 246, 250, 264, 468, 482, 506, 508, 512, 515, 516, 517, 640, 642, 648, 649, 650, 655, 656, 661, 664, 667, 668, 670, 671, 674, 675, 676, 677, 682, 683, 684, 690, 695, 696, 697, 698, 699, 700, 703, 709, 711, 715, 716, 717, 718, 720, 721, 723], "far": [0, 1, 77, 642, 648, 649, 658, 669, 675, 676, 678, 716], "flexibl": [0, 8, 654, 668, 670, 673], "about": [0, 1, 6, 7, 8, 11, 668, 669, 674, 675, 676, 677, 680, 681, 690, 716, 720], "clear": [0, 1, 3, 669, 674, 676], "me": [0, 1], "how": [0, 1, 3, 6, 8, 50, 264, 661, 668, 669, 674, 675, 676, 677, 690, 698, 699, 700, 701, 709, 716, 718, 719, 720, 722], "achiev": [0, 46, 676, 701], "without": [0, 1, 6, 8, 12, 245, 404, 628, 655, 667, 668, 669, 670, 677, 683, 686, 687, 697, 699, 710, 716, 723], "branch": [0, 1, 3, 6, 70, 71, 73, 242, 261, 650, 668, 670, 673, 674, 675, 676, 677, 723], "04": [0, 1, 667], "boolean": [0, 8, 645], "fals": [0, 1, 8, 11, 12, 27, 34, 39, 41, 68, 69, 71, 73, 75, 156, 162, 164, 244, 245, 250, 266, 269, 272, 276, 486, 490, 495, 498, 503, 510, 632, 661, 664, 667, 668, 675, 676, 677, 682, 683, 685, 686, 687, 690, 691, 692, 697, 700, 706, 708, 710, 715, 721], "true": [0, 1, 7, 8, 27, 37, 38, 61, 75, 257, 258, 259, 260, 262, 264, 272, 273, 276, 450, 457, 507, 510, 520, 655, 658, 661, 668, 675, 676, 677, 682, 683, 684, 686, 687, 688, 690, 691, 692, 694, 695, 696, 697, 698, 699, 700, 710, 716, 718, 721, 723, 724], "usual": [0, 668, 670, 675, 723], "ignor": 0, "namelist": [0, 1, 7, 11, 14, 15, 22, 23, 24, 61, 82, 87, 99, 101, 114, 116, 137, 150, 152, 164, 171, 173, 229, 231, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 255, 256, 289, 292, 301, 333, 459, 467, 488, 500, 540, 542, 569, 583, 597, 621, 634, 650, 651, 652, 653, 654, 655, 658, 660, 661, 662, 663, 664, 665, 667, 669, 673, 674, 677, 683, 685, 706, 710, 713, 715, 722], "steam": 0, "also": [0, 1, 3, 6, 7, 8, 20, 36, 74, 75, 247, 255, 264, 642, 648, 649, 651, 655, 661, 664, 666, 667, 668, 669, 670, 675, 676, 677, 685, 687, 690, 698, 699, 700, 701, 703, 705, 706, 708, 710, 715, 716, 717, 719, 720, 722, 723, 724], "along": [0, 1, 506, 651, 655, 658, 660, 661, 667, 668, 673, 675, 676, 701, 710, 716], "path": [0, 1, 6, 8, 11, 12, 16, 26, 34, 35, 36, 37, 38, 39, 42, 67, 70, 71, 72, 73, 74, 75, 242, 245, 275, 276, 277, 650, 668, 669, 670, 672, 675, 677, 690, 695, 696, 697, 698, 699, 700, 710, 723, 724], "By": [0, 1, 6, 8, 242, 650, 661, 668, 675, 676, 677, 684, 706, 707, 708, 709, 713, 715, 716, 718], "empti": [0, 36, 668, 669, 672, 675, 676], "onc": [0, 1, 8, 244, 245, 246, 248, 250, 256, 651, 652, 655, 658, 661, 670, 677, 690, 701, 709, 710, 716, 723], "white": [0, 694], "strip": [0, 669], "awai": [0, 3, 178, 668, 676], "accomplish": [0, 1, 6, 669, 676], "special": [0, 1, 6, 672], "_all": [0, 70, 71], "first": [0, 1, 8, 70, 71, 245, 246, 247, 248, 250, 256, 272, 651, 652, 653, 655, 658, 660, 661, 662, 664, 667, 668, 669, 670, 671, 674, 675, 676, 683, 684, 685, 686, 688, 694, 695, 696, 697, 698, 699, 700, 709, 710, 712, 713, 716, 721, 723], "start": [0, 1, 6, 7, 8, 321, 651, 658, 661, 668, 669, 673, 679, 688, 690, 698, 699, 700, 701, 704, 710, 712, 716], "after": [0, 1, 7, 11, 12, 16, 56, 61, 242, 261, 489, 643, 644, 650, 655, 656, 661, 668, 674, 677, 683, 698, 700, 710, 715, 723], "remaind": [0, 676], "append": [0, 6, 655], "conveni": [0, 1, 6, 642, 648, 649, 668, 672, 675, 676, 677, 693, 705, 710, 716, 723], "multipl": [0, 1, 6, 7, 8, 245, 246, 247, 248, 250, 256, 655, 668, 669, 674, 675, 676, 683, 684, 685, 686, 688, 694, 699, 706, 710, 715, 723], "global_converg": [0, 566, 580, 594, 598, 618, 622, 650, 659, 674, 675, 676, 704, 714, 720], "cosine_bel": [0, 535, 543, 675, 676], "qu60_mesh": 0, "qu60_init": 0, "qu90_mesh": 0, "qu90_init": 0, "qu120_mesh": 0, "qu120_init": 0, "qu150_mesh": 0, "qu150_init": 0, "qu180_mesh": 0, "qu180_init": 0, "qu210_mesh": 0, "qu210_init": 0, "qu240_mesh": 0, "qu240_init": 0, "individu": [0, 1, 8, 75, 668, 669, 675, 680, 681, 698, 699, 700, 723, 724], "while": [0, 1, 8, 245, 246, 248, 250, 256, 651, 655, 658, 668, 671, 672, 675, 676, 683, 710, 713, 716], "singl": [0, 1, 6, 8, 656, 657, 668, 669, 672, 674, 675, 676, 681, 682, 690, 691, 692, 693, 699, 705, 709, 711, 712, 716, 718, 720, 721], "featur": [0, 1, 669, 672, 675, 676, 677, 705, 706, 715, 716, 719], "too": [0, 1, 11, 21, 65, 658, 668, 669, 675, 676, 701, 709, 710, 718, 720], "broadli": [0, 669], "probabl": [0, 1, 506, 675, 676, 699], "want": [0, 1, 3, 6, 8, 28, 668, 670, 671, 674, 675, 676, 677, 686, 687, 690, 691, 692, 694, 698, 700, 723, 724], "cosin": [0, 327, 330, 334, 570, 584, 598, 622, 654, 663, 665, 709, 720], "bell": [0, 327, 330, 334, 570, 584, 598, 622, 654, 663, 665, 709, 720], "abov": [0, 1, 6, 7, 8, 207, 264, 272, 485, 506, 655, 661, 668, 669, 670, 675, 676, 677, 686, 694, 709, 710, 712, 716, 718, 723, 725], "modul": [0, 1, 5, 6, 14, 17, 25, 42, 257, 258, 259, 260, 261, 264, 655, 668, 671, 672, 673, 674, 675, 676, 677, 695, 696, 697, 698, 699, 700, 723], "take": [0, 1, 6, 7, 8, 36, 243, 245, 655, 668, 670, 673, 674, 675, 676, 680, 687, 691, 692, 716, 725], "dry_run": [0, 6, 34], "doesn": [0, 1, 8, 245, 246, 248, 250, 651, 652, 653, 660, 662, 668, 669, 674, 675, 676, 699, 710], "date_str": [0, 6, 34], "let": [0, 6, 655, 670, 672, 675, 676, 677, 698, 700], "suppli": [0, 1, 6, 7, 8, 272, 668, 670, 675, 690, 716], "yymmdd": [0, 34, 655, 677, 710], "than": [0, 1, 6, 8, 11, 12, 21, 36, 82, 87, 99, 114, 135, 150, 164, 171, 211, 213, 229, 239, 261, 287, 308, 317, 363, 375, 457, 465, 473, 498, 526, 651, 658, 668, 669, 670, 671, 674, 675, 676, 681, 687, 690, 691, 692, 701, 703, 706, 710, 713, 715, 716, 720, 722, 725], "todai": [0, 6, 34], "As": [0, 1, 5, 6, 8, 45, 655, 668, 669, 670, 675, 676, 677, 681, 682, 703, 710, 719, 722, 725], "state": [0, 1, 63, 176, 250, 264, 277, 651, 652, 653, 654, 655, 656, 658, 660, 661, 662, 663, 664, 665, 667, 675, 688, 716, 722], "To": [0, 1, 3, 6, 8, 75, 242, 245, 246, 247, 248, 250, 256, 261, 264, 650, 668, 669, 670, 674, 675, 676, 687, 690, 695, 696, 697, 698, 699, 700, 703, 709, 718, 720, 721, 723], "produc": [0, 1, 8, 11, 16, 34, 82, 87, 99, 114, 150, 164, 171, 229, 239, 244, 245, 247, 250, 281, 293, 302, 337, 341, 342, 345, 348, 350, 363, 366, 383, 386, 391, 396, 401, 404, 407, 420, 427, 430, 442, 462, 489, 651, 652, 653, 654, 655, 656, 658, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 675, 676, 680, 705, 708, 710, 716, 717, 722, 723], "mpas_cor": [0, 1, 8, 11, 26, 31, 61, 72, 73, 79, 84, 94, 109, 134, 140, 155, 166, 183, 218, 223, 228, 234, 279, 305, 314, 323, 336, 410, 419, 452, 470, 484, 521, 532, 551, 560, 627, 668, 669, 675, 676], "_cached_fil": [0, 8, 668], "base": [0, 1, 6, 8, 9, 11, 12, 18, 25, 26, 31, 34, 35, 49, 54, 55, 70, 71, 72, 73, 146, 190, 196, 242, 246, 248, 252, 261, 264, 269, 272, 333, 490, 542, 569, 583, 597, 621, 642, 643, 644, 645, 646, 647, 648, 649, 650, 654, 655, 657, 661, 663, 664, 667, 668, 669, 670, 672, 674, 676, 677, 686, 687, 690, 691, 692, 694, 695, 696, 697, 698, 699, 700, 703, 710, 712, 716, 724], "alreadi": [0, 1, 5, 8, 28, 38, 505, 668, 669, 670, 675, 676, 677, 690, 693, 694, 699, 703, 709, 710, 718, 720, 721, 723], "exist": [0, 1, 7, 8, 11, 16, 23, 38, 72, 73, 187, 191, 196, 197, 202, 207, 214, 252, 651, 668, 669, 670, 671, 674, 675, 676, 690, 699, 710, 716, 725], "befor": [0, 1, 6, 8, 20, 25, 206, 244, 245, 246, 247, 250, 489, 655, 661, 668, 669, 670, 671, 674, 675, 676, 690, 700, 703, 709, 710, 716, 718, 720, 721, 723], "inform": [0, 1, 6, 7, 8, 11, 75, 436, 668, 670, 677, 679, 690, 704, 710, 723], "yet": [0, 1, 259, 655, 668, 669, 670, 674, 675, 676, 700, 710], "point": [0, 1, 6, 33, 38, 242, 245, 264, 272, 437, 485, 650, 668, 669, 670, 675, 676, 677, 685, 687, 691, 692, 699, 716, 723], "yesterdai": 0, "8": [0, 1, 8, 45, 345, 651, 655, 667, 668, 670, 675, 677, 690, 694, 706, 709, 710, 712, 716, 718, 720, 722, 723], "3": [0, 1, 8, 45, 245, 246, 247, 248, 250, 252, 256, 264, 514, 554, 556, 558, 604, 605, 628, 632, 651, 655, 660, 661, 665, 667, 668, 670, 671, 674, 675, 676, 677, 680, 682, 683, 684, 685, 686, 687, 688, 690, 694, 698, 699, 700, 703, 705, 706, 707, 709, 715, 716, 717, 718, 719, 720, 721, 722, 723], "qu60": 0, "qu90": 0, "qu120": [0, 606], "qu150": 0, "qu180": 0, "qu210": 0, "done": [0, 1, 21, 668, 675, 676, 723], "wa": [0, 1, 8, 37, 74, 75, 261, 655, 668, 669, 670, 671, 674, 675, 676, 677, 681, 703, 708, 710, 713, 723], "ocean_cached_fil": [0, 6], "graph": [0, 1, 20, 59, 60, 61, 244, 245, 246, 247, 250, 275, 276, 651, 655, 658, 660, 661, 662, 664, 667, 668, 675, 676, 677, 710], "back": [0, 7, 247, 663, 675, 676, 685, 715, 721, 723], "repo": [0, 1, 3, 6, 242, 650, 673, 675, 676], "commit": [0, 1, 669, 670], "master": [0, 7, 650, 670, 675, 676, 726], "pull": [0, 1, 7, 655, 669, 675, 676, 677, 680, 710], "request": [0, 1, 7, 60, 61, 643, 644, 655, 668, 669, 671, 675, 676, 677, 680, 709, 710, 718, 720, 721], "string": [0, 1, 6, 8, 567, 581, 595, 619, 668], "end": [0, 1, 245, 246, 248, 250, 256, 350, 353, 355, 357, 359, 361, 420, 651, 655, 658, 661, 668, 669, 670, 672, 675, 690, 708, 709], "desir": [0, 1, 8, 75, 255, 264, 655, 668, 670, 675, 676, 677, 710, 723], "lean": 0, "heavili": [0, 1], "assumpt": 0, "part": [0, 1, 4, 6, 7, 8, 11, 26, 82, 87, 99, 114, 135, 150, 164, 171, 229, 239, 243, 275, 276, 287, 308, 317, 330, 363, 375, 415, 430, 457, 465, 473, 486, 498, 526, 539, 554, 566, 580, 594, 618, 632, 661, 664, 667, 668, 669, 670, 673, 674, 675, 676, 680, 686, 694, 703, 710, 713], "nevertheless": 0, "were": [0, 1, 261, 506, 668, 669, 672, 674, 675, 676, 677, 697, 703], "necessari": [0, 7, 668, 675, 676, 690, 712], "make": [0, 5, 6, 12, 13, 36, 44, 45, 47, 59, 75, 242, 257, 258, 259, 260, 261, 262, 275, 281, 293, 302, 337, 345, 404, 407, 454, 462, 642, 648, 649, 650, 651, 655, 658, 660, 661, 662, 668, 669, 670, 672, 677, 682, 683, 684, 686, 687, 688, 694, 695, 696, 697, 698, 699, 700, 701, 706, 709, 710, 712, 713, 716, 723, 725], "symlink": [0, 1, 6, 11, 12, 485, 655, 669, 670, 675, 676, 710], "locat": [0, 1, 6, 8, 26, 70, 71, 73, 242, 264, 275, 423, 436, 506, 650, 657, 658, 661, 663, 668, 670, 672, 675, 677, 690, 695, 696, 697, 698, 699, 700, 703, 706, 709, 712, 715, 718, 723], "uncach": [0, 34], "group": [0, 8, 9, 10, 11, 26, 31, 32, 79, 80, 84, 85, 94, 95, 97, 104, 109, 110, 112, 119, 124, 129, 134, 140, 141, 143, 148, 153, 155, 156, 160, 162, 166, 167, 169, 176, 178, 183, 184, 203, 211, 218, 221, 223, 226, 228, 232, 234, 235, 237, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 264, 279, 281, 284, 287, 293, 296, 299, 302, 305, 306, 314, 315, 323, 324, 336, 337, 342, 345, 348, 350, 366, 369, 378, 383, 386, 391, 396, 401, 404, 407, 410, 411, 419, 427, 433, 447, 452, 454, 462, 470, 471, 473, 477, 478, 480, 484, 495, 521, 522, 524, 530, 532, 535, 543, 551, 558, 560, 561, 575, 589, 604, 606, 609, 613, 627, 628, 637, 650, 651, 652, 653, 654, 655, 656, 657, 658, 660, 661, 662, 663, 664, 665, 666, 667, 672, 673, 677, 679, 681, 682, 683, 684, 685, 686, 687, 688, 690, 691, 692, 693, 694, 695, 696, 698, 699, 700, 702, 703, 704, 706, 707, 708, 709, 710, 711, 712, 713, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725], "public_html": [0, 1, 695, 696, 699], "mpas_standalonedata": [0, 1, 8, 668, 677, 695, 696, 697, 698, 699, 700], "constructor": [0, 8, 245, 651, 653, 655, 660, 662, 675, 676], "construct": [0, 1, 78, 244, 245, 246, 247, 250, 265, 640, 642, 643, 644, 648, 649, 655, 668, 675, 676, 710], "quwisc240": [0, 1, 668, 669, 723, 725], "ssh_adjust": [0, 1, 650, 655, 668, 677, 713, 716], "ec30to60": [0, 1, 723, 725], "wc14": [0, 723, 725], "ecwisc30to60": [0, 1, 381, 723, 725], "sowisc12to60": [0, 389, 394, 668, 723, 725], "togeth": [0, 668, 672, 674, 675, 725], "performance_test": [0, 1, 668, 705, 725], "global": [0, 8, 31, 264, 269, 272, 273, 323, 324, 336, 337, 342, 345, 348, 350, 363, 366, 369, 378, 383, 386, 391, 396, 401, 404, 407, 433, 447, 535, 543, 561, 572, 575, 586, 589, 600, 613, 624, 654, 655, 657, 665, 666, 668, 673, 674, 677, 698, 700, 710, 712, 719, 722, 723], "ran": [0, 1, 676], "successfulli": [0, 1, 243, 337], "bit": [0, 1, 156, 249, 668, 669, 672, 676, 680, 682, 683, 684, 686, 687, 688, 694, 701, 705, 706, 713, 723], "nightli": [0, 1, 3, 670, 710, 714, 723, 725], "cosine_bell_cached_init": [0, 723, 725], "fro": 0, "resolut": [0, 8, 43, 46, 50, 51, 85, 89, 91, 95, 97, 99, 102, 104, 106, 119, 143, 145, 156, 158, 162, 164, 219, 224, 245, 246, 248, 249, 250, 253, 254, 256, 273, 280, 281, 284, 287, 290, 293, 296, 299, 302, 306, 308, 315, 317, 324, 327, 328, 330, 381, 389, 394, 450, 453, 454, 457, 460, 462, 477, 478, 486, 491, 493, 495, 498, 501, 503, 522, 526, 528, 530, 533, 535, 539, 546, 547, 549, 552, 554, 556, 558, 561, 564, 566, 570, 572, 575, 578, 580, 584, 586, 589, 592, 594, 598, 600, 605, 606, 610, 611, 613, 616, 618, 622, 624, 628, 631, 632, 635, 637, 651, 652, 653, 654, 655, 656, 657, 658, 660, 661, 662, 663, 664, 665, 666, 667, 668, 674, 677, 680, 682, 683, 684, 685, 686, 687, 688, 690, 691, 692, 693, 694, 701, 706, 707, 708, 710, 711, 712, 713, 715, 716, 717, 719, 722, 724], "remain": [0, 1, 489, 661, 674, 684, 701, 713, 716], "mention": [0, 1, 669], "40c": 0, "41c": 0, "42": [0, 1], "60c": 0, "61c": 0, "62": 0, "80c": 0, "81c": 0, "82": 0, "85c": 0, "86c": 0, "87": 0, "95c": 0, "96c": 0, "97": 0, "sere": 0, "expect": [0, 1, 3, 8, 156, 249, 264, 348, 567, 581, 595, 619, 655, 661, 668, 670, 673, 675, 680, 701, 702, 705, 710, 714, 720, 722], "basenam": 0, "extens": [0, 507, 676, 677], "altern": [0, 1, 6, 8, 675, 723], "No": [0, 1, 8, 673], "perform": [0, 1, 3, 6, 8, 19, 20, 22, 30, 43, 74, 75, 81, 82, 85, 87, 95, 97, 99, 101, 104, 110, 112, 114, 116, 119, 135, 137, 141, 148, 150, 152, 153, 156, 157, 162, 163, 164, 167, 169, 171, 173, 176, 229, 231, 235, 237, 239, 241, 244, 245, 246, 248, 249, 250, 252, 255, 256, 264, 267, 284, 287, 289, 292, 296, 301, 308, 317, 323, 330, 336, 337, 345, 348, 350, 363, 383, 386, 391, 396, 401, 404, 407, 411, 415, 427, 430, 454, 457, 459, 467, 473, 477, 486, 488, 500, 526, 539, 554, 558, 559, 566, 580, 594, 618, 628, 632, 634, 637, 650, 651, 652, 653, 654, 655, 658, 660, 661, 662, 663, 665, 666, 667, 668, 672, 673, 674, 675, 676, 677, 683, 684, 685, 686, 688, 690, 694, 699, 701, 705, 706, 707, 708, 710, 712, 713, 715, 717, 719, 720, 721, 722, 725], "ensur": [0, 1, 3, 8, 36, 244, 245, 246, 248, 249, 250, 256, 651, 655, 658, 664, 667, 668, 669, 670, 676, 680, 705, 710], "don": [0, 1, 7, 8, 668, 669, 670, 674, 675, 676, 697, 698, 710, 724], "forese": 0, "problem": [0, 1, 8, 243, 668, 671, 675, 680, 705], "requr": 0, "howev": [0, 1, 668, 674, 701, 710], "relax": [0, 683], "outlin": 0, "author": [1, 655, 677, 710, 712], "2020": [1, 656, 710, 711, 716], "11": [1, 8, 45, 276, 719, 722], "16": [1, 655, 668, 675, 676, 677, 687, 694, 710, 718, 719, 720, 723], "infrastructur": [1, 669, 710], "serv": [1, 70, 71, 72, 73, 652, 653, 668, 675], "u": [1, 655, 668, 676, 698, 699, 700, 710], "well": [1, 3, 8, 244, 245, 246, 248, 250, 256, 264, 312, 321, 350, 645, 651, 652, 653, 655, 658, 660, 661, 662, 667, 668, 672, 674, 675, 676, 677, 680, 681, 690, 705, 708, 723, 724], "sever": [1, 8, 246, 247, 250, 511, 519, 655, 657, 664, 667, 668, 669, 670, 672, 675, 676, 680, 704, 705, 710, 716, 723, 725], "shortcom": 1, "emerg": 1, "over": [1, 6, 8, 36, 156, 261, 490, 608, 661, 668, 669, 673, 674, 675, 676, 681, 699, 701, 703, 706, 710, 712, 713, 715, 716, 719, 720, 722, 723], "year": [1, 244, 245, 246, 247, 250, 255, 554, 558, 628, 632, 655, 673, 683, 684, 685, 686, 687, 688, 690, 693, 710, 716, 719], "found": [1, 8, 655, 668, 669, 670, 673, 675, 676, 677, 699, 701], "current": [1, 3, 6, 8, 11, 21, 74, 75, 242, 261, 264, 650, 654, 655, 661, 663, 664, 667, 668, 669, 670, 672, 673, 675, 676, 677, 680, 681, 687, 699, 701, 703, 704, 705, 706, 709, 710, 712, 713, 716, 718, 722, 723, 724, 725], "system": [1, 5, 6, 11, 21, 63, 65, 66, 82, 87, 99, 114, 135, 150, 164, 171, 229, 239, 257, 258, 259, 260, 261, 287, 308, 317, 363, 375, 457, 465, 473, 498, 526, 668, 671, 673, 675, 676, 677, 690, 695, 696, 697, 698, 699, 700, 712, 723], "xml": [1, 668, 669, 672, 673, 676], "pars": [1, 8, 14, 15, 17, 668, 669, 674], "script": [1, 5, 6, 8, 33, 72, 244, 245, 246, 247, 250, 261, 262, 669, 672, 673, 676, 677, 683, 699, 716], "stream": [1, 7, 8, 11, 17, 22, 25, 61, 82, 87, 99, 101, 114, 116, 137, 150, 152, 164, 171, 173, 229, 231, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 255, 256, 289, 292, 301, 459, 467, 488, 500, 634, 650, 651, 652, 653, 655, 658, 660, 661, 662, 664, 667, 669, 673, 677, 710], "intuit": 1, "second": [1, 8, 82, 87, 99, 114, 150, 164, 171, 229, 239, 667, 668, 669, 675, 676, 681, 683, 684, 686, 688, 694, 706, 708, 710, 713, 716, 720, 721], "lend": 1, "themselv": [1, 661, 668, 669, 673, 676, 710], "reus": [1, 668, 669, 673, 675, 676], "lead": [1, 264, 716], "config": [1, 6, 7, 11, 25, 26, 28, 37, 49, 51, 54, 60, 61, 63, 64, 65, 66, 67, 70, 71, 73, 75, 93, 108, 123, 182, 187, 201, 202, 242, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 261, 264, 278, 280, 325, 333, 363, 378, 399, 400, 453, 536, 540, 542, 544, 562, 569, 576, 583, 590, 597, 614, 621, 631, 640, 642, 643, 644, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 673, 674, 693, 703, 723, 724], "third": [1, 676, 681, 716], "edit": [1, 6, 7, 75, 670, 675, 676, 710, 716, 723], "step": [1, 2, 6, 7, 8, 26, 27, 29, 34, 43, 48, 50, 53, 55, 56, 60, 61, 64, 65, 67, 68, 69, 70, 71, 75, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 96, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 111, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 126, 127, 128, 131, 132, 133, 135, 136, 137, 138, 139, 142, 144, 145, 147, 149, 150, 151, 152, 154, 158, 159, 161, 164, 165, 168, 170, 171, 172, 173, 174, 175, 177, 179, 180, 181, 182, 187, 189, 193, 194, 195, 199, 200, 202, 205, 209, 210, 213, 216, 217, 219, 220, 222, 224, 225, 227, 229, 230, 231, 233, 236, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 264, 267, 269, 270, 272, 273, 274, 283, 286, 287, 288, 289, 290, 291, 292, 295, 298, 299, 300, 301, 304, 308, 309, 310, 311, 312, 313, 317, 318, 319, 320, 321, 322, 326, 327, 329, 330, 331, 332, 334, 335, 339, 344, 347, 348, 349, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 368, 371, 372, 373, 375, 376, 380, 381, 383, 385, 388, 389, 391, 393, 394, 396, 398, 399, 403, 406, 409, 413, 414, 415, 416, 417, 418, 420, 424, 429, 430, 431, 435, 436, 438, 439, 440, 442, 445, 449, 450, 456, 457, 458, 459, 460, 461, 464, 465, 466, 467, 468, 469, 473, 474, 475, 476, 478, 479, 482, 483, 486, 487, 488, 491, 492, 493, 494, 497, 498, 499, 500, 501, 502, 503, 504, 522, 523, 526, 527, 528, 529, 530, 531, 533, 534, 537, 538, 539, 540, 541, 545, 546, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 563, 564, 565, 566, 567, 568, 570, 571, 572, 574, 577, 578, 579, 580, 581, 582, 584, 585, 586, 588, 591, 592, 593, 594, 595, 596, 598, 599, 600, 602, 604, 615, 616, 617, 618, 619, 620, 622, 623, 624, 626, 630, 632, 633, 634, 635, 636, 639, 651, 652, 653, 654, 656, 657, 658, 660, 661, 662, 663, 664, 665, 666, 667, 669, 670, 672, 673, 677, 681, 682, 683, 684, 685, 686, 687, 688, 690, 691, 692, 694, 698, 700, 703, 706, 707, 708, 713, 715, 716, 717, 719, 721, 722, 724, 725], "fourth": [1, 676, 686], "easili": [1, 675], "constrain": [1, 18, 264, 276], "us": [1, 6, 7, 8, 11, 12, 20, 21, 23, 25, 26, 29, 34, 37, 51, 59, 60, 63, 65, 68, 75, 79, 82, 86, 87, 95, 96, 97, 98, 99, 104, 105, 110, 111, 112, 113, 114, 120, 126, 131, 135, 141, 142, 144, 148, 149, 150, 153, 154, 156, 161, 162, 164, 168, 170, 171, 174, 177, 179, 187, 188, 191, 192, 197, 198, 202, 207, 208, 214, 215, 222, 227, 228, 229, 233, 234, 236, 238, 239, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 261, 264, 269, 272, 276, 283, 286, 287, 295, 298, 304, 308, 317, 321, 324, 327, 337, 342, 345, 348, 350, 352, 353, 355, 357, 359, 361, 363, 366, 369, 372, 375, 380, 383, 386, 391, 396, 401, 404, 407, 433, 436, 439, 442, 449, 456, 457, 464, 465, 473, 485, 489, 498, 508, 510, 526, 554, 556, 558, 567, 581, 595, 605, 612, 619, 630, 639, 640, 642, 643, 644, 648, 649, 650, 651, 652, 653, 655, 657, 658, 660, 661, 662, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 680, 681, 682, 683, 684, 686, 687, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 703, 705, 706, 707, 708, 709, 710, 712, 713, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725], "hard": [1, 653, 669, 675, 676, 701], "fifth": [1, 719], "better": [1, 8, 261, 674, 723], "autom": [1, 247, 673], "sixth": 1, "impos": 1, "test_group": [1, 8, 9, 10, 11, 26, 80, 85, 95, 97, 104, 110, 112, 119, 124, 129, 141, 143, 148, 153, 156, 160, 162, 167, 169, 176, 178, 184, 203, 211, 221, 226, 232, 235, 237, 281, 284, 293, 296, 302, 306, 315, 324, 337, 342, 345, 348, 350, 366, 369, 378, 383, 386, 391, 396, 401, 404, 407, 411, 427, 433, 447, 454, 462, 471, 477, 480, 495, 524, 535, 543, 558, 561, 575, 589, 613, 628, 637, 655, 668, 674, 675, 676], "resoltuion": 1, "test_cas": [1, 6, 8, 11, 31, 32, 43, 50, 55, 67, 70, 71, 74, 75, 82, 87, 89, 91, 99, 102, 106, 114, 117, 121, 127, 132, 135, 138, 145, 150, 158, 164, 171, 174, 180, 189, 195, 205, 213, 219, 224, 229, 239, 244, 245, 250, 269, 273, 287, 290, 299, 308, 310, 312, 317, 319, 321, 327, 330, 334, 341, 353, 355, 357, 359, 361, 363, 372, 375, 381, 389, 394, 413, 415, 417, 420, 430, 436, 439, 442, 450, 457, 460, 465, 468, 473, 475, 478, 482, 486, 491, 493, 498, 501, 503, 522, 526, 528, 530, 533, 539, 546, 549, 552, 554, 556, 564, 566, 570, 572, 578, 580, 584, 586, 592, 594, 598, 600, 616, 618, 622, 624, 632, 635, 651, 655, 660, 668, 674, 675, 676, 677, 716, 723], "rigid": [1, 720], "applic": [1, 669, 710], "final": [1, 3, 7, 190, 244, 245, 247, 250, 264, 272, 348, 604, 651, 655, 658, 660, 661, 662, 664, 667, 668, 674, 675, 676, 681, 685, 687, 710, 712, 716, 721], "help": [1, 6, 668, 673, 675, 676, 679, 699, 704, 710], "either": [1, 6, 7, 8, 45, 245, 658, 668, 670, 672, 674, 675, 676, 677, 683, 684, 686, 687, 690, 703, 710, 723], "interest": [1, 675, 676, 710, 716], "address": [1, 677], "hope": [1, 669], "significantli": [1, 8, 667, 681, 703, 710, 716], "easier": [1, 668, 669, 670, 675, 676, 677, 710, 723, 725], "12": [1, 8, 45, 520, 652, 653, 655, 656, 665, 667, 683, 710, 717, 720], "luke": 1, "van": 1, "roekel": 1, "written": [1, 7, 8, 11, 26, 506, 518, 655, 668, 675, 720], "primarili": [1, 680], "model": [1, 3, 6, 11, 12, 13, 14, 15, 17, 70, 71, 73, 82, 87, 99, 114, 150, 164, 171, 178, 201, 211, 213, 229, 239, 242, 244, 245, 246, 247, 248, 250, 252, 256, 257, 258, 259, 260, 261, 262, 264, 267, 281, 293, 296, 302, 410, 411, 413, 415, 417, 462, 470, 477, 650, 651, 655, 656, 657, 660, 670, 671, 672, 673, 675, 676, 677, 679, 680, 682, 683, 685, 686, 687, 688, 689, 690, 691, 692, 694, 695, 696, 697, 698, 699, 700, 701, 704, 705, 706, 707, 708, 710, 711, 712, 713, 715, 716, 717, 719, 722, 723], "get": [1, 7, 8, 11, 14, 15, 17, 26, 27, 45, 60, 62, 64, 68, 261, 331, 363, 399, 400, 540, 668, 669, 670, 672, 677, 690, 703, 723], "direct": [1, 8, 651, 652, 653, 658, 660, 662, 667, 668, 675, 698, 700, 706, 713, 715, 716, 722], "common": [1, 7, 8, 20, 26, 31, 245, 247, 248, 255, 256, 651, 652, 653, 658, 660, 661, 662, 668, 669, 671, 672, 677, 700, 723, 724, 725], "languag": [1, 612, 698, 700], "rather": [1, 3, 8, 11, 12, 36, 211, 213, 261, 651, 658, 668, 671, 675, 676, 701, 703, 710], "custom": [1, 6, 8, 35, 36, 37, 70, 71, 73, 242, 650, 668, 674, 676, 677, 698, 700, 723], "tag": [1, 668, 673], "importantli": 1, "possibl": [1, 3, 8, 46, 264, 655, 658, 668, 669, 674, 675, 676, 703, 710, 712], "balanc": [1, 189, 195, 252, 655, 658, 661, 690, 710, 713, 716], "readabl": [1, 669, 676], "reusabl": 1, "risk": [1, 670, 713], "redesign": 1, "difficult": [1, 261, 668, 669, 699, 701], "contribut": [1, 669], "go": [1, 8, 521, 522, 524, 526, 528, 530, 662, 668, 669, 670, 674, 675, 676, 698, 700, 710, 717], "best": [1, 668], "reusibl": 1, "In": [1, 3, 7, 8, 11, 245, 247, 252, 264, 342, 654, 655, 664, 668, 670, 673, 674, 675, 676, 677, 680, 690, 693, 694, 699, 701, 703, 710, 712, 713, 716, 719, 720, 721, 722, 723, 724, 725], "extern": [1, 11, 242, 650, 668, 669, 677, 679, 704], "often": [1, 11, 668, 669, 672, 674, 675, 677, 724, 725], "mpas_tool": [1, 8, 244, 245, 246, 247, 250, 264, 651, 652, 653, 657, 658, 660, 661, 662, 665, 666, 667, 668, 669, 675, 676, 710], "outsid": [1, 143, 668, 687, 691, 692, 716], "prefer": [1, 3, 668, 675, 676, 677, 680], "itself": [1, 7, 8, 11, 255, 668, 674, 675, 676, 723], "attempt": [1, 261, 673, 699, 701], "led": [1, 669], "frequent": [1, 242, 650], "unintend": 1, "consequ": 1, "link": [1, 3, 7, 8, 12, 13, 38, 261, 612, 655, 658, 661, 668, 669, 670, 675, 676, 679, 699, 704, 710, 723], "chang": [1, 6, 8, 25, 50, 242, 264, 650, 661, 668, 669, 670, 672, 674, 675, 676, 677, 680, 684, 685, 698, 700, 701, 703, 705, 710, 713, 716, 717, 719, 720, 722, 723, 725], "one": [1, 3, 6, 7, 8, 12, 24, 26, 34, 35, 38, 61, 70, 71, 73, 75, 85, 95, 97, 110, 112, 141, 148, 156, 162, 167, 169, 237, 244, 245, 246, 248, 249, 250, 252, 256, 267, 280, 293, 337, 404, 462, 650, 651, 652, 653, 655, 658, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 680, 681, 686, 690, 694, 698, 699, 700, 701, 703, 708, 709, 710, 712, 713, 716, 718, 719, 720, 721, 723, 724, 725], "sophist": [1, 668], "method": [1, 8, 9, 11, 19, 20, 26, 27, 28, 29, 30, 31, 36, 42, 43, 47, 50, 51, 52, 55, 56, 78, 79, 80, 81, 82, 84, 85, 86, 87, 89, 91, 94, 95, 96, 97, 98, 99, 102, 104, 105, 106, 109, 110, 111, 112, 113, 114, 117, 119, 120, 121, 124, 126, 127, 129, 131, 132, 134, 135, 138, 140, 141, 142, 143, 144, 145, 148, 149, 150, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 174, 176, 177, 178, 179, 180, 183, 184, 187, 189, 191, 195, 197, 202, 203, 205, 207, 211, 213, 214, 218, 219, 221, 222, 223, 224, 226, 227, 228, 229, 232, 233, 234, 235, 236, 237, 238, 239, 243, 252, 264, 265, 269, 273, 276, 279, 281, 283, 284, 286, 287, 290, 293, 295, 296, 298, 299, 302, 304, 305, 306, 308, 310, 312, 314, 315, 317, 319, 321, 323, 324, 327, 330, 334, 336, 337, 342, 345, 348, 350, 352, 353, 355, 357, 359, 361, 363, 366, 369, 372, 375, 378, 380, 381, 383, 386, 389, 391, 394, 396, 401, 404, 407, 410, 411, 413, 415, 417, 419, 420, 427, 430, 433, 436, 439, 442, 447, 449, 450, 452, 454, 456, 457, 460, 462, 464, 465, 468, 470, 471, 473, 475, 477, 478, 480, 482, 484, 486, 491, 493, 495, 498, 501, 503, 506, 518, 521, 522, 524, 526, 528, 530, 532, 533, 535, 539, 543, 546, 549, 551, 552, 554, 556, 558, 559, 560, 561, 564, 566, 570, 572, 575, 578, 580, 584, 586, 589, 592, 594, 598, 600, 613, 616, 618, 622, 624, 627, 628, 630, 632, 635, 637, 639, 655, 657, 668, 669, 674, 681, 690, 710], "beyond": [1, 664, 682], "isol": 1, "read": [1, 8, 9, 11, 14, 17, 26, 421, 422, 423, 490, 612, 655, 668, 669, 675, 676, 712, 721], "larg": [1, 8, 264, 655, 658, 661, 668, 682, 695, 701, 710, 713, 720], "unavail": 1, "files_for_e3sm": [1, 8, 668, 677, 705], "dedic": 1, "again": [1, 6, 259, 264, 668, 670, 671, 674, 675, 676, 710, 723], "from": [1, 2, 3, 6, 7, 8, 9, 11, 12, 14, 17, 26, 28, 34, 35, 37, 38, 59, 60, 61, 65, 69, 71, 74, 75, 91, 93, 106, 108, 121, 123, 127, 132, 135, 174, 178, 180, 182, 187, 202, 244, 245, 246, 247, 248, 250, 252, 255, 256, 261, 264, 268, 269, 272, 287, 327, 348, 350, 353, 355, 357, 359, 361, 363, 375, 383, 386, 391, 396, 399, 400, 421, 454, 465, 473, 485, 489, 490, 493, 498, 501, 503, 506, 511, 518, 540, 546, 552, 564, 578, 592, 604, 605, 606, 612, 616, 646, 651, 652, 653, 654, 655, 656, 657, 658, 660, 661, 662, 663, 664, 665, 667, 669, 671, 672, 673, 674, 675, 676, 677, 680, 683, 684, 685, 686, 687, 688, 690, 691, 692, 694, 695, 696, 697, 698, 700, 701, 703, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 718, 719, 720, 721, 722, 723, 724, 725], "awkward": [1, 675], "involv": [1, 8, 75, 655, 668, 672, 721], "pio": [1, 24, 61, 651, 655, 658, 660, 661, 662, 664, 667, 668], "task": [1, 8, 11, 20, 21, 24, 60, 61, 65, 82, 87, 99, 114, 135, 150, 164, 171, 229, 239, 287, 308, 317, 363, 375, 457, 465, 473, 498, 526, 668, 669, 675, 676, 695, 696, 697, 698, 699, 700, 712], "node": [1, 8, 11, 21, 23, 24, 61, 63, 64, 65, 261, 669, 670, 677, 695, 696, 697, 698, 699, 700, 710, 723], "exacerb": 1, "even": [1, 8, 12, 36, 261, 668, 669, 670, 675, 676, 677, 690, 699, 710, 723], "processor": [1, 156, 655, 668, 676, 680, 682, 683, 706, 709, 718, 720], "overrid": [1, 6, 8, 19, 20, 22, 28, 30, 36, 47, 50, 51, 52, 81, 101, 116, 137, 152, 157, 163, 173, 231, 241, 289, 292, 301, 459, 467, 488, 500, 559, 634, 668, 669, 676, 677, 700, 723], "stride": [1, 24, 61, 668], "updat": [1, 6, 7, 11, 14, 20, 21, 23, 25, 242, 247, 259, 264, 275, 485, 538, 540, 650, 651, 652, 655, 657, 658, 660, 661, 662, 664, 667, 671, 673, 674, 675, 710, 712, 716, 723], "automat": [1, 7, 8, 655, 668, 669, 670, 675, 676, 677, 690, 695, 696, 697, 698, 699, 700, 710, 723], "accommod": [1, 11, 21, 65, 661, 675], "dataset": [1, 266, 369, 372, 489, 506, 518, 604, 609, 642, 648, 649, 668, 675, 676, 710], "load": [1, 261, 262, 275, 670, 675, 676, 677, 695, 696, 697, 698, 699, 700, 721, 723], "conda": [1, 5, 6, 8, 67, 242, 257, 258, 259, 260, 261, 650, 655, 668, 669, 673, 675, 676, 677, 695, 696, 697, 698, 700], "environ": [1, 5, 6, 63, 242, 257, 258, 259, 260, 261, 650, 655, 668, 669, 673, 675, 676, 677, 695, 696, 697, 698, 699, 700, 710], "per": [1, 8, 11, 21, 24, 61, 65, 206, 407, 668, 677, 690, 695, 696, 697, 698, 699, 700, 706, 708, 709, 716, 718, 720, 723], "advantag": [1, 8, 261, 655, 669, 699], "aspect": [1, 708], "unnecessarili": 1, "redund": [1, 6, 642, 648, 649, 707], "converg": [1, 79, 80, 82, 243, 522, 533, 535, 539, 546, 549, 603, 605, 606, 611, 654, 663, 665, 666, 668, 673, 674, 680, 681, 709, 717, 718, 721], "sort": [1, 668], "anoth": [1, 3, 6, 7, 8, 12, 74, 75, 247, 267, 650, 653, 658, 661, 668, 669, 670, 672, 674, 675, 676, 677, 683, 685, 688, 701, 706, 710, 713, 715, 716, 723, 724, 725], "properti": [1, 8, 668, 676, 699, 709, 718], "besid": [1, 676], "uniqu": [1, 668, 669, 674, 675, 676], "overwrit": [1, 38, 507, 520], "activ": [1, 261, 551, 655, 664, 698, 699, 700, 710, 716, 719, 723], "build": [1, 6, 8, 47, 52, 184, 187, 191, 197, 202, 203, 207, 211, 214, 242, 248, 255, 256, 257, 258, 259, 260, 261, 262, 650, 654, 665, 666, 668, 669, 671, 673, 675, 676, 677, 683, 686, 690, 694, 695, 696, 697, 698, 699, 700], "queu": [1, 63], "10": [1, 8, 45, 245, 246, 247, 249, 250, 253, 264, 276, 650, 651, 652, 655, 656, 658, 660, 661, 662, 667, 668, 675, 676, 677, 683, 684, 686, 687, 688, 691, 692, 694, 703, 706, 708, 710, 712, 713, 715, 716, 717, 722, 724], "matt": 1, "hoffman": [1, 679], "longer": [1, 293, 462, 651, 655, 660, 661, 675, 684, 706, 709, 710, 713, 716, 718, 719, 722, 725], "term": [1, 11, 662, 672, 673, 674, 675, 676, 717], "ot": [1, 7, 675], "add": [1, 3, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 27, 28, 32, 49, 54, 58, 248, 264, 272, 276, 399, 655, 668, 669, 670, 672, 674, 675, 676, 677, 683, 699, 700, 709, 710, 716, 718, 720, 721, 723], "reduc": [1, 264, 668, 701, 713], "wall": [1, 722, 723], "clock": [1, 723], "differ": [1, 8, 36, 47, 52, 75, 235, 242, 243, 245, 246, 248, 249, 250, 256, 261, 287, 296, 473, 477, 605, 650, 651, 652, 653, 655, 657, 660, 662, 667, 668, 669, 670, 672, 674, 675, 676, 677, 680, 681, 682, 687, 690, 693, 694, 698, 700, 705, 706, 708, 709, 710, 715, 716, 717, 718, 719, 720, 721, 722], "viscos": [1, 287, 296, 299, 411, 473, 477, 478, 651, 652, 656, 658, 660, 668, 669, 675, 676, 706, 711, 715], "baroclin": [1, 31, 279, 280, 281, 284, 287, 290, 293, 296, 299, 302, 372, 651, 668, 675, 676, 706], "channel": [1, 31, 279, 281, 284, 287, 290, 293, 296, 299, 302, 372, 653, 668, 671, 675, 676, 699, 706, 708, 723], "rpe": [1, 296, 299, 477, 478, 668, 675, 706, 715], "full": [1, 8, 11, 69, 97, 112, 148, 162, 169, 237, 249, 510, 643, 644, 651, 654, 655, 658, 663, 668, 670, 673, 675, 676, 683, 684, 686, 687, 688, 694, 699, 703, 706, 709, 710, 712, 713, 715, 716, 717, 718, 720, 722, 723], "choic": [1, 655, 674, 681], "mind": [1, 3, 6], "addit": [1, 3, 7, 8, 11, 23, 272, 655, 668, 669, 670, 675, 676, 679, 680, 685, 687, 690, 693, 694, 705, 710, 716], "minim": [1, 652, 683], "modif": [1, 3, 7, 247, 668, 676], "particularli": [1, 8, 668, 671, 674, 675, 710, 713], "mark": [1, 670], "petersen": [1, 670, 675, 706, 715], "build_base_mesh": 1, "py": [1, 8, 42, 244, 245, 246, 247, 250, 261, 668, 669, 670, 672, 673, 674, 675, 676, 677], "complex": [1, 8, 51, 668, 669, 676, 701], "dx": 1, "min": [1, 668, 675, 686, 687, 691, 692, 694, 706, 713, 715, 717, 722], "max": [1, 668, 674, 675, 686, 687, 691, 692, 694, 709], "linear": [1, 276, 510, 661, 667, 675, 706, 708, 715, 719, 720, 722], "log": [1, 11, 26, 60, 65, 75, 93, 108, 123, 182, 187, 202, 272, 276, 668, 670, 673, 676, 720, 721, 723], "someth": [1, 6, 7, 670], "fundament": [1, 668], "soft": [1, 695, 696, 699, 723], "add_initial_condit": 1, "quickli": [1, 8, 682, 713], "iter": [1, 264, 267, 375, 454, 465, 498, 650, 658, 661, 677, 701, 710, 713, 716], "until": [1, 176, 668, 669], "peopl": [1, 677], "workflow": [1, 668, 670], "ideal": [1, 11, 21, 65, 82, 87, 99, 114, 135, 150, 164, 171, 229, 239, 287, 308, 317, 363, 375, 457, 465, 473, 498, 526, 667, 668, 669, 673, 674, 675, 677, 693, 701, 716, 719, 722, 724], "possibli": [1, 8, 247, 668, 670, 675, 676], "cach": [1, 2, 9, 11, 12, 70, 71, 673, 677, 690, 695, 696, 697, 698, 699, 700, 723, 725], "version": [1, 6, 8, 36, 67, 74, 75, 242, 650, 651, 655, 661, 668, 669, 670, 672, 675, 676, 677, 683, 686, 687, 693, 694, 698, 699, 700, 704, 706, 707, 708, 710, 715, 716, 717, 719, 722, 723], "submit": [1, 699], "job": [1, 63, 261, 673, 680, 695, 696, 697, 698, 700, 716], "13": [1, 8, 45, 675, 706, 710, 715], "write": [1, 8, 14, 15, 17, 23, 24, 25, 264, 278, 446, 490, 641, 655, 656, 661, 667, 668, 670, 675, 676], "function": [1, 7, 8, 22, 44, 51, 60, 101, 116, 137, 146, 152, 156, 173, 186, 188, 201, 207, 231, 241, 244, 245, 246, 247, 248, 250, 252, 256, 261, 264, 289, 292, 301, 340, 426, 459, 467, 488, 500, 567, 581, 595, 603, 604, 608, 619, 634, 655, 657, 661, 666, 668, 669, 673, 674, 675, 676, 686, 687, 691, 692, 694, 705, 709, 710, 712, 715, 718, 720, 721, 722, 724], "class": [1, 8, 9, 11, 19, 26, 31, 36, 42, 43, 50, 55, 78, 79, 80, 82, 84, 85, 87, 89, 91, 94, 95, 97, 99, 102, 104, 106, 109, 110, 112, 114, 117, 119, 121, 124, 127, 129, 132, 134, 135, 138, 140, 141, 143, 145, 148, 150, 153, 155, 156, 158, 160, 162, 164, 166, 167, 169, 171, 174, 176, 178, 180, 183, 184, 189, 195, 203, 205, 211, 213, 218, 219, 221, 223, 224, 226, 228, 229, 232, 234, 235, 237, 239, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 256, 264, 265, 269, 273, 279, 281, 284, 287, 290, 293, 296, 299, 302, 305, 306, 308, 310, 312, 314, 315, 317, 319, 321, 323, 324, 327, 330, 334, 336, 337, 342, 345, 348, 350, 353, 355, 357, 359, 361, 363, 366, 369, 372, 375, 378, 381, 383, 386, 389, 391, 394, 396, 401, 404, 407, 410, 411, 413, 415, 417, 419, 420, 427, 430, 433, 436, 439, 442, 447, 450, 452, 454, 457, 460, 462, 465, 468, 470, 471, 473, 475, 477, 478, 480, 482, 484, 486, 491, 493, 495, 498, 501, 503, 506, 518, 521, 522, 524, 526, 528, 530, 532, 533, 535, 539, 543, 546, 549, 551, 552, 554, 556, 558, 560, 561, 564, 566, 570, 572, 575, 578, 580, 584, 586, 589, 592, 594, 598, 600, 613, 616, 618, 622, 624, 627, 628, 632, 635, 637, 650, 651, 652, 653, 654, 656, 657, 658, 660, 661, 662, 663, 664, 665, 666, 667, 668, 674, 675, 676], "larger": [1, 243, 687, 691, 692], "descend": [1, 264, 655, 668, 669, 675, 676], "testcas": [1, 6, 8, 11, 32, 43, 50, 55, 70, 71, 74, 75, 82, 87, 89, 91, 99, 102, 106, 114, 117, 127, 132, 135, 138, 145, 150, 158, 164, 171, 174, 180, 219, 224, 229, 239, 273, 287, 290, 299, 308, 312, 317, 321, 326, 332, 335, 339, 341, 344, 347, 349, 354, 356, 358, 360, 362, 363, 364, 368, 371, 373, 376, 381, 385, 388, 389, 393, 394, 398, 403, 406, 409, 429, 431, 435, 438, 440, 450, 457, 460, 465, 468, 473, 475, 478, 482, 486, 491, 493, 498, 501, 503, 522, 526, 528, 530, 533, 537, 541, 545, 546, 549, 554, 556, 563, 568, 571, 577, 582, 585, 591, 596, 599, 615, 620, 623, 632, 635, 655, 667, 669, 674, 675, 676, 677, 690, 706, 710, 712, 713, 715, 717, 719, 722, 723], "equival": [1, 668, 670, 676, 690, 695], "config_driv": [1, 676], "config_": [1, 676], "collect": [1, 7, 8, 31, 62, 78, 265, 605, 668, 672, 675, 676, 680], "struck": 1, "improv": [1, 655, 710], "jinja2": [1, 17, 25, 655, 668], "templat": [1, 2, 17, 25, 243, 264, 655, 661, 673, 676, 677], "manipul": [1, 669], "usr": [1, 42], "bin": [1, 670, 698, 700, 723], "env": [1, 670, 698, 700], "pickl": [1, 6, 8, 723], "configpars": [1, 8, 65, 668, 674, 675], "loggingcontext": [1, 8], "def": [1, 3, 7, 8, 655, 668, 669, 674, 675, 676], "main": [1, 4, 8, 19, 261, 655, 668, 669, 670, 675, 676, 680, 705, 710, 724], "open": [1, 5, 272, 490, 661, 675, 676, 710, 716], "test_case_": 1, "rb": 1, "handl": [1, 8, 243, 489, 661, 668, 675, 676, 699, 709, 718, 720], "steps_to_run": [1, 6, 8, 26, 69, 75, 668, 674, 677], "new_step_log_fil": [1, 26], "interpol": [1, 184, 187, 202, 203, 211, 266, 269, 442, 443, 444, 489, 493, 552, 657, 661, 674, 675, 677, 690, 713, 716, 721], "extendedinterpol": [1, 674], "config_filenam": [1, 11, 26, 668], "stdout": [1, 6, 8, 11, 26, 272, 668, 676], "stderr": [1, 8, 11, 26, 668], "test_nam": 1, "replac": [1, 7, 8, 14, 15, 17, 23, 25, 26, 38, 490, 655, 668, 669, 674, 675, 676, 677, 710, 723], "_": [1, 655, 668, 670, 675, 690], "logger": [1, 8, 11, 26, 42, 60, 65, 93, 108, 123, 182, 187, 202, 272, 664, 667, 668, 675, 676], "__name__": 1, "__main__": 1, "curli": 1, "brace": 1, "element": [1, 642, 648, 649], "variabl": [1, 3, 6, 9, 11, 26, 30, 31, 43, 50, 55, 59, 63, 74, 75, 80, 81, 82, 85, 87, 89, 91, 95, 97, 99, 102, 104, 106, 114, 135, 145, 150, 156, 157, 158, 162, 163, 164, 174, 184, 192, 198, 203, 206, 207, 208, 211, 213, 215, 219, 224, 229, 239, 245, 248, 249, 252, 253, 254, 256, 261, 264, 267, 269, 273, 281, 284, 287, 290, 293, 296, 299, 302, 306, 315, 321, 324, 327, 330, 337, 348, 350, 353, 361, 363, 366, 369, 372, 378, 383, 391, 396, 412, 420, 427, 430, 433, 436, 439, 442, 454, 457, 460, 462, 472, 478, 481, 486, 491, 493, 495, 501, 503, 506, 508, 510, 511, 518, 519, 522, 525, 526, 528, 530, 533, 535, 539, 547, 552, 554, 556, 558, 559, 561, 564, 566, 572, 575, 578, 580, 586, 589, 592, 594, 600, 613, 616, 618, 624, 628, 632, 635, 637, 642, 648, 649, 655, 658, 661, 662, 664, 667, 668, 669, 670, 671, 675, 676, 679, 680, 683, 684, 686, 687, 688, 690, 691, 692, 694, 695, 696, 697, 698, 699, 700, 701, 704, 705, 706, 710, 713, 715, 716, 717, 719, 722, 723], "valu": [1, 7, 8, 15, 23, 75, 80, 82, 156, 164, 243, 264, 276, 296, 317, 477, 506, 508, 509, 510, 513, 514, 603, 604, 605, 606, 610, 611, 651, 653, 655, 660, 661, 664, 667, 668, 669, 673, 674, 675, 676, 677, 681, 686, 687, 690, 691, 692, 694, 703, 706, 708, 710, 711, 712, 715, 716, 717, 719, 720, 721, 722], "content": [1, 6, 8, 668, 669, 675, 676, 723], "normal": [1, 668, 670, 699, 716], "contrast": [1, 8, 674, 701, 710, 719], "seri": [1, 79, 80, 243, 264, 267, 299, 478, 506, 508, 509, 510, 511, 513, 514, 515, 516, 517, 518, 519, 654, 655, 661, 663, 665, 666, 668, 673, 675, 680, 681, 687, 705, 707, 713, 716], "format": [1, 7, 8, 252, 420, 457, 567, 581, 595, 610, 619, 632, 635, 637, 655, 658, 661, 664, 667, 668, 669, 674, 675, 676, 677, 705, 708, 710, 713, 716, 720], "statement": [1, 3, 8, 668, 672, 676], "syntax": [1, 3, 669, 676], "immutable_stream": [1, 655, 668, 675, 676], "filename_templ": [1, 655, 668, 675, 676], "restart": [1, 26, 97, 112, 135, 148, 162, 169, 237, 243, 244, 245, 246, 247, 248, 249, 250, 255, 256, 293, 348, 350, 353, 355, 357, 359, 361, 383, 391, 396, 400, 404, 462, 651, 653, 655, 658, 660, 661, 662, 668, 669, 672, 675, 680, 683, 684, 686, 687, 688, 694, 705, 706, 710, 713], "type": [1, 7, 89, 91, 95, 97, 99, 102, 104, 106, 119, 143, 145, 156, 158, 162, 164, 174, 219, 224, 264, 276, 315, 453, 454, 462, 491, 495, 653, 655, 664, 667, 668, 669, 671, 672, 674, 675, 676, 677, 683, 688, 706, 708, 709, 710, 713, 715, 716, 717, 718, 722, 725], "output_interv": [1, 655, 668, 675, 676], "0000_00": [1, 667, 668, 675, 676], "00": [1, 8, 667, 668, 675, 676, 698, 700, 716, 723], "01": [1, 653, 667, 668, 675, 676, 708, 716], "clobber_mod": [1, 668, 675, 676], "truncat": [1, 666, 668, 675, 676, 721], "var_struct": [1, 668, 675], "tracer": [1, 264, 521, 560, 604, 609, 651, 654, 655, 660, 662, 663, 665, 668, 675, 709, 710, 717, 718, 720], "var": [1, 443, 446, 668, 675, 676], "xtime": [1, 446, 655, 668, 675, 676], "normalveloc": [1, 8, 244, 245, 248, 651, 655, 662, 668, 675, 676], "layerthick": [1, 8, 264, 642, 646, 647, 648, 649, 651, 655, 664, 667, 668, 675, 676], "basic": [1, 6, 7, 670, 677, 699, 723], "config_write_output_on_startup": [1, 668, 675], "config_run_dur": [1, 668, 675, 676], "15": [1, 8, 45, 247, 454, 651, 655, 656, 658, 660, 661, 668, 675, 676, 680, 684, 685, 706, 709, 711, 713, 715, 716, 718, 723], "config_use_mom_del2": [1, 668, 675], "config_implicit_bottom_drag_coeff": [1, 668, 675, 676], "1": [1, 6, 7, 8, 11, 45, 82, 87, 99, 114, 135, 150, 164, 171, 229, 239, 244, 245, 246, 247, 248, 249, 250, 253, 255, 256, 264, 268, 272, 281, 287, 302, 308, 317, 407, 457, 465, 473, 490, 498, 526, 566, 580, 594, 604, 618, 642, 648, 649, 651, 652, 653, 655, 656, 660, 661, 664, 667, 668, 671, 674, 675, 676, 677, 681, 682, 683, 684, 686, 687, 688, 690, 691, 692, 694, 698, 699, 700, 701, 703, 706, 707, 708, 709, 710, 711, 712, 713, 715, 716, 717, 718, 719, 720, 721, 722, 723, 726], "0e": [1, 668, 675, 676], "2": [1, 3, 8, 245, 246, 247, 248, 250, 256, 262, 264, 302, 407, 605, 609, 651, 655, 656, 658, 662, 663, 667, 668, 674, 675, 676, 677, 680, 683, 684, 685, 686, 687, 688, 690, 691, 692, 694, 698, 699, 700, 703, 706, 708, 709, 710, 713, 715, 716, 717, 718, 720, 721, 722, 723], "config_use_cvmix_background": [1, 668, 675], "config_cvmix_background_diffus": [1, 668, 675], "0": [1, 3, 6, 7, 8, 45, 75, 247, 257, 258, 259, 260, 261, 262, 264, 268, 272, 276, 490, 513, 514, 609, 642, 647, 648, 649, 653, 655, 658, 667, 668, 669, 671, 675, 676, 677, 679, 681, 682, 683, 684, 685, 686, 687, 688, 690, 691, 692, 694, 699, 700, 703, 704, 706, 707, 708, 709, 710, 711, 712, 713, 715, 716, 717, 718, 719, 720, 722, 723, 726], "config_cvmix_background_viscos": [1, 668, 675], "4": [1, 7, 8, 104, 176, 234, 244, 245, 246, 248, 250, 256, 281, 284, 345, 411, 651, 653, 655, 656, 658, 660, 662, 664, 665, 667, 668, 669, 673, 674, 675, 676, 677, 682, 683, 684, 686, 687, 688, 690, 692, 694, 699, 704, 705, 706, 708, 709, 710, 711, 713, 715, 716, 717, 718, 719, 720, 722, 723], "regard": [1, 3], "whole": [1, 26, 668, 669, 675, 713, 716, 723], "degre": [1, 44, 51, 52, 57, 382, 390, 395, 451, 573, 587, 601, 625, 655, 677, 706, 710, 713, 715, 716, 717], "left": [1, 6, 264, 675, 681, 703, 709, 717, 722], "across": [1, 7, 8, 156, 246, 264, 276, 651, 653, 658, 663, 668, 669, 672, 673, 675, 676, 702, 710], "increas": [1, 605, 655, 669, 674, 681, 685, 716], "simpler": [1, 670, 675, 676, 701], "perhap": [1, 16, 668], "less": [1, 324, 327, 668, 681, 690, 703, 710], "creation": [1, 655, 677, 710], "comment": [1, 7, 668, 674, 677, 684], "certain": [1, 8, 36, 276, 420, 668, 670, 677, 721], "familiar": [1, 675, 676], "somewher": 1, "recommend": [1, 6, 7, 8, 668, 669, 670, 699], "With": [1, 670, 675, 676, 716], "essenti": [1, 6, 668], "inevit": 1, "minimum": [1, 8, 276, 489, 490, 508, 509, 510, 513, 514, 655, 668, 674, 675, 676, 677, 686, 687, 691, 692, 694, 703, 706, 707, 708, 709, 710, 712, 713, 715, 716, 717, 718, 720, 722], "level": [1, 3, 8, 247, 264, 276, 399, 400, 453, 454, 462, 485, 491, 495, 604, 642, 643, 644, 645, 646, 647, 648, 649, 651, 655, 658, 661, 668, 669, 675, 676, 677, 682, 683, 684, 685, 686, 687, 688, 691, 692, 694, 706, 707, 708, 710, 711, 713, 715, 716, 717, 718, 722, 725], "learn": [1, 669], "curv": [1, 669, 719], "skill": [1, 669], "pai": 1, "off": [1, 6, 276, 652, 670, 671, 690, 693, 717], "cannot": [1, 8, 243, 668, 675], "organ": [1, 673], "greatli": 1, "simplifi": [1, 8, 658, 713], "cfg": [1, 8, 28, 668, 669, 670, 674, 675, 676, 677, 710, 716, 723], "mpas_core_framework_modul": 1, "mpas_core_framework_packag": 1, "shared_step": 1, "test_group_shared_modul": 1, "framework_modul": 1, "framework_packag": 1, "slightli": [1, 8, 668], "convent": [1, 655, 675, 676, 710], "mpascor": [1, 11, 26, 31, 62, 279, 305, 314, 336, 410, 452, 470, 521, 551, 627, 668, 669, 675, 676], "now": [1, 668, 670, 675, 676, 677, 699, 719], "dynam": [1, 264, 267, 323, 336, 348, 350, 353, 355, 357, 359, 361, 383, 386, 391, 396, 490, 650, 655, 658, 668, 672, 673, 677, 683, 701, 710, 713, 716, 719, 722, 724], "landic": [1, 4, 6, 8, 9, 42, 72, 73, 77, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 668, 670, 672, 673, 675, 676, 677, 678, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 723, 724, 725], "testgroup": [1, 10, 11, 26, 668, 669, 675, 676], "legaci": [1, 6, 261, 264, 655, 668, 669, 672, 674, 675, 677, 679, 699, 704, 710, 714, 722, 726], "mismip3d": 1, "least": [1, 8, 668, 670, 710], "reason": [1, 20, 668, 669, 674, 675, 676, 710, 725], "next": [1, 7, 247, 668, 675, 676, 685, 690, 703, 710, 712, 713, 716, 723], "hierarchi": 1, "rel": [1, 3, 6, 8, 12, 16, 34, 35, 36, 70, 71, 73, 74, 75, 242, 245, 603, 604, 650, 668, 669, 670, 672, 675, 677, 706, 710, 713, 715, 716, 723, 724], "distinguish": [1, 489, 683, 685, 686, 688, 694, 706, 715], "variant": [1, 34, 244, 245, 246, 247, 250, 651, 652, 653, 655, 660, 661, 662, 664, 667, 668, 670, 675, 676, 681, 683, 684, 685, 686, 687, 688, 694, 699, 703, 706, 709, 710, 716, 719, 722], "vari": [1, 442, 486, 491, 495, 654, 655, 657, 661, 663, 665, 666, 668, 671, 674, 699, 703, 709, 710, 712, 713, 716, 718, 719], "characterist": 1, "base_mesh": [1, 8, 43, 50, 273, 381, 389, 394, 450, 668, 675], "refer": [1, 7, 11, 264, 268, 296, 477, 642, 645, 648, 649, 668, 669, 670, 672, 673, 674, 675, 676, 703, 706, 715, 722], "confus": [1, 6, 668, 669, 670, 673, 674, 675, 676], "tri": [1, 669], "clearer": 1, "distinct": [1, 669], "clean": [1, 3, 72, 668, 670, 673], "what": [1, 3, 8, 261, 655, 669, 675, 676, 698, 700, 723], "here": [1, 8, 243, 244, 245, 246, 248, 249, 250, 255, 256, 651, 652, 653, 655, 658, 660, 661, 662, 664, 667, 668, 669, 670, 674, 675, 676, 677, 684, 685, 688, 690, 695, 696, 697, 698, 699, 700, 710, 711, 720, 721, 723, 725], "combin": [1, 11, 12, 26, 36, 67, 93, 108, 123, 182, 205, 206, 207, 252, 264, 272, 664, 667, 668, 671, 674, 677, 680, 687, 690, 710, 723], "self": [1, 8, 28, 57, 244, 245, 250, 264, 442, 651, 655, 658, 660, 664, 667, 668, 669, 674, 675, 676, 677, 721], "add_input_fil": [1, 8, 245, 668, 674, 675, 676], "run_model": [1, 8, 91, 106, 114, 180, 243, 244, 245, 664, 667, 668, 675, 676, 682, 683, 685, 686, 688, 694], "str": [1, 8, 9, 11, 12, 14, 15, 16, 17, 23, 24, 25, 26, 31, 34, 35, 37, 38, 39, 43, 50, 55, 59, 60, 61, 65, 67, 69, 70, 71, 72, 73, 74, 75, 80, 82, 85, 87, 89, 91, 93, 95, 97, 99, 102, 104, 106, 108, 114, 119, 135, 145, 150, 156, 158, 162, 164, 171, 180, 187, 188, 190, 191, 192, 196, 197, 198, 202, 206, 207, 208, 214, 215, 219, 224, 229, 239, 269, 272, 273, 275, 276, 277, 278, 280, 281, 284, 287, 290, 293, 296, 299, 302, 308, 315, 317, 321, 328, 330, 331, 334, 348, 350, 353, 355, 357, 359, 361, 363, 366, 369, 378, 381, 383, 389, 391, 394, 396, 399, 400, 420, 427, 430, 433, 436, 442, 447, 450, 453, 454, 457, 460, 462, 473, 478, 485, 486, 490, 491, 495, 506, 508, 510, 518, 522, 526, 528, 530, 535, 547, 552, 554, 556, 558, 606, 609, 610, 611, 612, 628, 631, 632, 635, 637, 641, 668, 674, 675, 676], "__init__": [1, 8, 9, 11, 26, 31, 36, 42, 43, 50, 55, 78, 79, 80, 82, 84, 85, 87, 89, 91, 94, 95, 97, 99, 102, 104, 106, 109, 110, 112, 114, 117, 119, 121, 124, 127, 129, 132, 134, 135, 138, 140, 141, 143, 145, 148, 150, 153, 155, 156, 158, 160, 162, 164, 166, 167, 169, 171, 174, 176, 178, 180, 183, 184, 189, 195, 203, 205, 211, 213, 218, 219, 221, 223, 224, 226, 228, 229, 232, 234, 235, 237, 239, 265, 269, 273, 279, 281, 284, 287, 290, 293, 296, 299, 302, 305, 306, 308, 310, 312, 314, 315, 317, 319, 321, 323, 324, 327, 330, 334, 336, 337, 342, 345, 348, 350, 353, 355, 357, 359, 361, 363, 366, 369, 372, 375, 378, 381, 383, 386, 389, 391, 394, 396, 401, 404, 407, 410, 411, 413, 415, 417, 419, 420, 427, 430, 433, 436, 439, 442, 447, 450, 452, 454, 457, 460, 462, 465, 468, 470, 471, 473, 475, 477, 478, 480, 482, 484, 486, 491, 493, 495, 498, 501, 503, 506, 518, 521, 522, 524, 526, 528, 530, 532, 533, 535, 539, 543, 546, 549, 551, 552, 554, 556, 558, 560, 561, 564, 566, 570, 572, 575, 578, 580, 584, 586, 589, 592, 594, 598, 600, 613, 616, 618, 622, 624, 627, 628, 632, 635, 637, 655, 668, 669, 672, 674, 675, 676], "subdir": [1, 6, 11, 26, 43, 50, 55, 82, 87, 91, 99, 106, 114, 135, 150, 164, 171, 180, 229, 239, 269, 273, 287, 308, 317, 363, 381, 389, 394, 430, 450, 457, 473, 486, 526, 632, 651, 660, 668, 674, 675, 676], "none": [1, 7, 8, 11, 12, 14, 15, 17, 21, 23, 24, 25, 26, 34, 35, 37, 39, 41, 43, 50, 55, 59, 61, 67, 69, 71, 72, 73, 74, 75, 82, 87, 91, 99, 106, 114, 135, 150, 156, 162, 164, 171, 180, 187, 189, 195, 202, 229, 239, 269, 272, 273, 276, 287, 308, 317, 321, 341, 363, 375, 381, 389, 394, 430, 450, 457, 465, 473, 486, 498, 508, 509, 510, 518, 519, 520, 526, 632, 668, 674, 675, 680, 681, 698, 703, 706, 713, 715, 716, 717, 718, 722], "min_cor": 1, "thread": [1, 8, 11, 20, 21, 26, 61, 65, 82, 87, 99, 114, 135, 150, 164, 171, 229, 239, 287, 302, 308, 317, 363, 375, 407, 457, 465, 473, 498, 526, 651, 655, 668, 672, 674, 675, 676, 677, 700, 705, 706, 710, 712], "nu": [1, 287, 299, 473, 478, 651, 660, 668, 675, 676], "belong": [1, 8, 11, 21, 26, 31, 35, 43, 50, 55, 79, 80, 82, 84, 85, 87, 89, 91, 94, 95, 97, 99, 102, 104, 106, 109, 110, 112, 114, 117, 119, 121, 124, 127, 129, 132, 134, 135, 138, 140, 141, 143, 145, 148, 150, 153, 155, 156, 158, 160, 162, 164, 166, 167, 169, 171, 174, 176, 178, 180, 183, 184, 189, 195, 203, 205, 211, 213, 218, 219, 221, 223, 224, 226, 228, 229, 232, 234, 235, 237, 239, 269, 273, 279, 281, 284, 287, 290, 293, 296, 299, 302, 305, 306, 308, 310, 312, 314, 315, 317, 319, 321, 323, 324, 327, 330, 334, 336, 337, 342, 345, 348, 350, 353, 355, 357, 359, 361, 363, 366, 369, 372, 375, 378, 381, 383, 386, 389, 391, 394, 396, 401, 404, 407, 410, 411, 413, 415, 417, 419, 420, 427, 430, 433, 436, 439, 442, 447, 450, 452, 454, 457, 460, 462, 465, 468, 470, 471, 473, 475, 477, 478, 480, 482, 484, 486, 491, 493, 495, 498, 501, 503, 521, 522, 524, 526, 528, 530, 532, 533, 535, 539, 543, 546, 549, 551, 552, 554, 556, 558, 560, 561, 564, 566, 570, 572, 575, 578, 580, 584, 586, 589, 592, 594, 598, 600, 613, 616, 618, 622, 624, 627, 628, 632, 635, 637, 655, 668, 669, 674, 675, 676, 725], "int": [1, 11, 18, 21, 35, 39, 43, 44, 45, 46, 47, 60, 64, 65, 82, 87, 99, 114, 135, 150, 164, 171, 187, 202, 229, 239, 267, 272, 276, 287, 308, 317, 324, 327, 328, 330, 363, 375, 400, 442, 457, 465, 473, 498, 526, 533, 535, 539, 546, 547, 549, 561, 564, 566, 570, 572, 575, 578, 580, 584, 586, 589, 592, 594, 598, 600, 604, 613, 616, 618, 622, 624, 655, 668, 674, 675], "fewer": [1, 11, 21, 65, 82, 87, 99, 114, 135, 150, 164, 171, 229, 239, 287, 308, 317, 363, 375, 457, 465, 473, 498, 526, 658, 668, 675, 713, 723], "below": [1, 6, 11, 21, 65, 82, 87, 99, 114, 135, 150, 164, 171, 229, 239, 247, 252, 261, 287, 308, 317, 363, 375, 457, 465, 473, 489, 490, 491, 495, 498, 526, 650, 655, 658, 668, 670, 674, 675, 676, 677, 679, 681, 686, 690, 694, 699, 701, 703, 709, 710, 712, 713, 716, 718, 720, 721, 723], "fail": [1, 8, 11, 21, 26, 37, 75, 82, 87, 99, 114, 135, 150, 164, 171, 229, 239, 287, 308, 317, 363, 375, 457, 465, 473, 498, 526, 655, 668, 673, 675, 676, 677, 709, 710, 712, 718, 720], "float": [1, 7, 8, 43, 45, 46, 50, 75, 82, 164, 268, 273, 276, 287, 299, 306, 315, 317, 321, 328, 381, 389, 394, 450, 473, 478, 486, 489, 490, 491, 493, 495, 498, 501, 503, 506, 508, 509, 510, 513, 514, 547, 651, 660, 661, 668, 675, 680, 682, 701], "super": [1, 655, 668, 669, 674, 675, 676], "add_namelist_fil": [1, 11, 655, 668, 675, 676], "baroclinic_channel": [1, 7, 8, 650, 659, 668, 669, 672, 675, 676, 704, 705, 714, 723, 724, 725], "config_mom_del2": [1, 651, 660, 668, 675], "add_namelist_opt": [1, 11, 658, 668, 675, 676], "add_streams_fil": [1, 11, 655, 658, 668, 675, 676], "add_output_fil": [1, 8, 655, 668, 675, 676], "add_model_as_input": [1, 8, 668, 675, 676], "popul": 1, "dure": [1, 8, 11, 23, 25, 26, 651, 652, 653, 655, 658, 660, 668, 669, 674, 677, 701, 710, 722, 723, 724, 725], "phase": [1, 25, 247, 716], "idea": [1, 8, 675, 676, 720], "runtim": [1, 8, 20, 23, 244, 245, 246, 247, 250, 658, 664, 667], "hopefulli": [1, 677], "tedium": 1, "later": [1, 8, 11, 21, 36, 75, 651, 660, 661, 668, 674, 675, 676, 677, 693, 710, 716], "order": [1, 6, 8, 655, 664, 666, 668, 670, 675, 676, 680, 690, 701, 710, 712, 716, 720, 721, 723], "top": [1, 264, 508, 642, 643, 644, 645, 646, 647, 648, 649, 658, 661, 668, 681, 701, 703, 715, 716], "partit": [1, 20, 59, 61, 244, 245, 246, 247, 250, 264, 275, 276, 651, 655, 658, 660, 661, 662, 664, 667, 668, 676, 677, 695, 696, 697, 698, 700, 710, 723], "execut": [1, 6, 8, 13, 60, 61, 70, 71, 73, 242, 650, 658, 661, 668, 670, 675, 676, 677, 695, 696, 697, 698, 699, 700, 723], "pass": [1, 6, 8, 26, 75, 655, 668, 669, 670, 672, 674, 675, 676, 680, 723], "directli": [1, 8, 11, 668, 669, 672, 673, 675, 676, 687, 710, 721], "tread": 1, "maximum": [1, 8, 75, 276, 399, 508, 509, 510, 513, 514, 655, 677, 686, 687, 691, 692, 694, 703, 709, 710, 712, 718, 720, 722], "memori": [1, 11, 21, 655, 668, 677, 710, 712, 721], "amount": [1, 11, 21, 264, 655, 668, 669, 687, 691, 692, 702, 716], "disk": [1, 670, 677, 698, 700, 710], "workerqueu": 1, "explain": [1, 668, 669], "total": [1, 18, 64, 249, 519, 656, 658, 661, 668, 669, 681], "determin": [1, 8, 12, 20, 26, 61, 63, 146, 264, 651, 654, 655, 661, 663, 665, 668, 674, 675, 676, 680, 691, 692, 701, 703, 705, 706, 709, 710, 715, 716, 717, 718, 720], "slurm": [1, 63, 66, 673, 677, 695, 696, 697, 698, 700, 723], "error": [1, 8, 11, 26, 243, 264, 328, 547, 603, 604, 605, 606, 608, 611, 654, 662, 663, 666, 668, 669, 670, 673, 674, 675, 682, 720, 721], "rais": [1, 7, 8, 11, 16, 37, 38, 63, 75, 651, 668, 675, 676, 720], "few": [1, 6, 11, 21, 65, 245, 248, 255, 256, 261, 651, 652, 653, 655, 658, 660, 661, 662, 668, 669, 675, 676, 677, 699, 704, 709, 710, 716, 718, 720], "particular": [1, 261, 655, 668, 670, 673, 674, 675, 676, 699, 710, 723], "otherwis": [1, 8, 655, 668, 675, 695, 696, 697, 698, 699, 700, 719, 722], "mean": [1, 6, 8, 63, 174, 250, 328, 505, 506, 519, 547, 654, 661, 662, 663, 670, 675, 676, 701, 703, 705, 706, 710, 715, 722, 725], "non": [1, 8, 664, 667, 682, 710, 716, 722], "known": [1, 23, 654, 663, 665, 668, 674, 675, 676, 682, 710], "strategi": [1, 8], "happen": [1, 8, 75, 668, 675, 676, 687, 691, 692, 700, 709, 718, 720, 721], "care": [1, 8, 655, 668, 670, 676], "suffici": [1, 275], "worri": [1, 668], "globalocean": [1, 324, 337, 342, 345, 348, 350, 366, 369, 378, 383, 386, 391, 396, 401, 404, 407, 535, 543, 655, 668, 669, 674, 675, 676], "getint": [1, 664, 668, 674, 675, 676], "init_cor": [1, 677], "init_min_cor": [1, 677], "init_thread": [1, 677, 710, 712], "forward_cor": [1, 677], "forward_min_cor": [1, 677], "forward_thread": [1, 677, 710, 712], "ref_": 1, "alg_machine_data": 1, "root": [1, 70, 71, 73, 242, 328, 547, 650, 654, 662, 663, 668, 669, 670, 672, 677, 690, 695, 696, 697, 698, 699, 700, 703, 723], "mesh_databas": [1, 677, 695, 696, 697, 698, 699, 700, 723], "initial_condition_databas": [1, 677, 695, 696, 697, 698, 699, 700, 723], "bathymetry_databas": [1, 8, 264, 668, 677, 695, 696, 697, 698, 699, 700, 723], "ocean_database_root": [1, 8, 668, 677, 695, 696, 697, 698, 699, 700, 723], "project": [1, 3, 6, 42, 650, 670, 675, 676, 677, 690, 695, 699, 716], "regionalclim": 1, "common_mpa": 1, "grid": [1, 44, 51, 57, 184, 187, 188, 191, 197, 202, 203, 206, 211, 214, 244, 245, 246, 247, 250, 252, 264, 275, 278, 382, 390, 395, 411, 437, 443, 444, 451, 489, 493, 573, 587, 601, 625, 640, 641, 642, 643, 644, 645, 648, 649, 651, 653, 655, 656, 658, 660, 661, 662, 664, 667, 668, 675, 676, 677, 682, 690, 691, 692, 706, 707, 708, 709, 710, 711, 713, 715, 716, 717, 718, 721, 722], "mali": [1, 6, 78, 82, 85, 87, 95, 97, 99, 110, 112, 114, 135, 141, 148, 150, 156, 162, 164, 167, 169, 171, 184, 187, 190, 191, 192, 196, 197, 198, 202, 203, 206, 207, 208, 211, 214, 215, 229, 235, 237, 239, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 255, 256, 261, 668, 670, 672, 673, 677, 679, 680, 681, 683, 685, 686, 687, 690, 693, 694, 695, 696, 697, 698, 699, 700, 701, 723, 724], "landice_database_root": [1, 677, 690, 695, 696, 697, 698, 699, 700, 723], "albani": [1, 6, 242, 248, 255, 256, 257, 258, 260, 261, 668, 677, 679, 680, 682, 683, 686, 694, 695, 696, 697, 698, 699, 700, 723], "compass_env": [1, 695, 696, 697, 698, 699, 700], "climat": [1, 42, 690, 695, 696, 699, 710, 719, 723], "shared_clim": 1, "anaconda_env": 1, "single_nod": [1, 677, 695, 696, 697, 698, 699, 700, 723], "whether": [1, 6, 8, 11, 12, 26, 27, 34, 37, 38, 39, 61, 63, 68, 69, 70, 71, 73, 75, 156, 162, 164, 201, 211, 213, 264, 266, 269, 272, 273, 324, 327, 353, 359, 361, 363, 369, 372, 378, 442, 450, 457, 486, 490, 491, 495, 506, 554, 556, 558, 628, 632, 635, 655, 668, 670, 671, 675, 676, 677, 682, 683, 684, 685, 688, 690, 695, 696, 697, 698, 699, 700, 703, 706, 708, 710, 713, 715, 716, 717, 718, 720, 722, 723], "mpirun": [1, 671, 677, 695, 696, 697, 698, 699, 700, 723], "srun": [1, 671, 677, 695, 696, 697, 698, 699, 700, 723], "parallel_execut": [1, 671, 677, 695, 696, 697, 698, 699, 700, 723], "cores_per_nod": [1, 677, 695, 696, 697, 698, 699, 700, 723], "36": [1, 153, 651, 655, 661, 667, 668, 675, 695, 699, 710, 712, 716, 723], "account": [1, 680, 695, 697, 698, 699, 700, 723], "multiprocess": [1, 668, 669, 674, 677], "dask": [1, 677], "18": [1, 667, 677, 710, 712, 721], "variou": [1, 79, 535, 655, 661, 665, 666, 668, 670, 716], "find": [1, 7, 37, 46, 66, 437, 505, 669, 670, 671, 675, 677, 712, 723], "compil": [1, 5, 6, 257, 258, 259, 260, 261, 262, 668, 671, 673, 675, 676, 680, 695, 696, 697, 698, 699, 700, 721, 723], "mpi": [1, 8, 257, 258, 259, 261, 407, 668, 670, 671, 673, 674, 675, 676, 695, 696, 697, 698, 700, 712, 721, 723], "explor": [1, 661, 668, 675, 703, 716, 720], "intend": [1, 3, 8, 247, 653, 655, 661, 676, 677, 710, 724], "incorpor": [1, 252, 668, 710], "come": [1, 12, 655, 661, 668, 670, 675, 676, 680, 695, 696, 697, 698, 699, 700, 702, 710, 714, 722, 723], "placehold": [1, 11, 21, 668, 723], "conceptu": [1, 668, 669, 675, 676, 713, 716], "most": [1, 8, 20, 82, 87, 99, 114, 150, 164, 171, 229, 239, 242, 250, 261, 650, 655, 667, 668, 669, 670, 672, 674, 675, 677, 687, 690, 693, 699, 700, 701, 703, 704, 710, 719, 720, 724], "stick": [1, 675, 676], "inde": 1, "seemingli": 1, "unrel": 1, "argument": [1, 6, 7, 8, 65, 245, 248, 651, 652, 653, 655, 660, 662, 668, 669, 670, 674, 675, 676, 725], "taken": [1, 61, 400, 654, 663, 665, 668, 676, 698, 700, 716, 723], "restart_test": [1, 82, 87, 99, 114, 150, 164, 171, 229, 239, 245, 668, 675, 680, 705, 723, 725], "sinc": [1, 6, 8, 321, 651, 655, 658, 668, 669, 670, 674, 675, 676, 677, 705, 709, 710, 712, 715, 721], "identifi": [1, 724], "sphinx": [1, 7], "readthedoc": 1, "built": [1, 6, 70, 71, 73, 242, 650, 668, 670, 676, 677, 699, 723], "manner": [1, 675], "similar": [1, 3, 6, 8, 261, 262, 264, 653, 668, 669, 670, 674, 675, 676, 681, 710, 716, 719, 720, 723], "geometric_featur": [1, 264, 272, 655, 710], "pyremap": 1, "analysi": [1, 243, 337, 342, 350, 353, 436, 558, 605, 628, 632, 651, 655, 660, 661, 662, 667, 668, 669, 677, 705, 709, 710, 717, 718, 719, 720, 721, 724], "guid": [1, 7, 244, 245, 246, 247, 249, 250, 252, 253, 254, 651, 652, 653, 655, 657, 658, 660, 661, 662, 664, 665, 666, 667, 668, 669, 670, 674, 675, 676, 679, 683, 699, 704, 710], "detail": [1, 3, 4, 6, 7, 8, 39, 75, 654, 655, 656, 663, 665, 666, 668, 669, 670, 671, 674, 675, 676, 690, 693, 701, 722, 723], "instruct": [1, 670, 675, 676, 690], "quick": [1, 264, 658, 673, 675, 679, 690, 704, 713, 725], "overview": [1, 7, 673, 698, 700], "philosophi": [1, 669], "subsect": 1, "sub": [1, 506, 701, 710, 713], "descript": [1, 6, 7, 655, 661, 674, 675, 676, 677, 679, 684, 685, 688, 693, 704, 710], "manag": [1, 3, 671, 699], "api": [1, 7, 8, 673, 675, 676], "docstr": [1, 669, 673, 675], "eventu": [1, 716], "tutori": [1, 669], "plan": [1, 3, 242, 650, 652, 668, 672, 716, 724], "parsl": 1, "begin": [1, 7, 8, 245, 246, 248, 250, 256, 420, 651, 658, 668, 670, 673, 675, 676, 683, 684, 686, 688, 694, 699, 709, 712, 713, 716, 719], "seem": [1, 668, 674, 675, 676, 700], "workqueueexecutor": 1, "enough": [1, 8, 651, 660, 662, 668, 669, 676, 709, 710, 713, 716, 718, 720, 722], "consid": [1, 669, 716], "beta": 1, "latest": [1, 242, 650, 661, 670, 679, 704, 716, 723, 726], "v1": [1, 8, 673, 700, 703, 710], "prematur": 1, "settl": [1, 675, 676], "except": [1, 8, 11, 16, 37, 75, 655, 661, 668, 669, 674, 675, 690, 710, 715, 716, 719, 720], "accordingli": [1, 66, 248, 264, 653], "accur": [1, 681, 687, 693, 701, 717], "race": 1, "unnecessari": [1, 676, 710], "block": [1, 3, 668, 675, 710], "prerequisit": [1, 612], "subsequ": [1, 668, 672, 694, 710, 725], "associ": [1, 8, 603, 604, 642, 648, 649, 651, 653, 655, 660, 668, 672, 675, 690, 710, 713], "datafutur": 1, "usag": [1, 243, 655, 677, 680, 687, 691, 692, 698, 700, 710, 712], "arbitrari": 1, "1gb": 1, "calibr": 1, "actual": [1, 3, 6, 8, 668, 670, 675, 681], "approxim": [1, 8, 43, 45, 46, 50, 273, 381, 389, 394, 450, 603, 611, 666, 670, 680, 683, 684, 688, 690, 709, 710, 716, 718, 720, 721], "debug": [1, 8, 257, 258, 259, 260, 262, 604, 662, 695, 696, 697, 698, 700, 717], "flesh": [1, 675, 676], "further": [1, 7, 655, 668, 684, 685, 688, 690, 698, 700], "restrict": [1, 8, 675, 676], "facilit": 1, "m": [1, 6, 44, 51, 52, 57, 245, 247, 306, 382, 390, 395, 451, 573, 587, 601, 625, 651, 652, 655, 656, 658, 660, 661, 662, 667, 668, 670, 676, 682, 683, 684, 685, 687, 688, 690, 691, 692, 695, 696, 697, 698, 700, 703, 706, 707, 709, 711, 713, 715, 716, 717, 719, 722, 723], "oppos": [1, 324, 327, 716], "origin": [1, 8, 34, 252, 444, 485, 489, 490, 663, 666, 670, 674, 675, 676, 690, 708, 718, 722, 723], "simpli": [1, 8, 36, 104, 143, 153, 160, 221, 226, 284, 628, 637, 656, 668, 670, 675, 676, 683, 703, 723, 725], "anyth": [1, 675], "discuss": [1, 3, 8, 668, 669, 675, 676, 709, 710, 720], "decid": [1, 674, 676, 710], "misunderstood": 1, "select": [1, 6, 8, 668, 670], "skip": [1, 6, 8, 75, 668, 725], "latter": [1, 6, 26, 245, 246, 248, 250, 256, 261, 716], "suggest": [1, 671, 716], "put": [1, 670, 675, 676, 719], "under": [1, 3, 74, 261, 485, 495, 511, 608, 655, 661, 670, 673, 683, 690, 703, 705, 713, 716, 720, 724], "break": [1, 305, 308, 310, 312, 652, 707, 722], "backward": 1, "compat": [1, 242, 275, 650, 670, 671, 673, 710, 713], "scope": 1, "hinder": 1, "effort": [1, 710], "14": [1, 256, 655, 671, 694, 710], "scratch": [1, 6, 670, 674, 675, 698, 700, 723], "simper": 1, "underwai": 1, "aid": [1, 6], "compass_1": 1, "http": [1, 6, 7, 8, 38, 612, 655, 668, 669, 670, 671, 673, 676, 677, 679, 698, 700, 704, 710, 723], "github": [1, 6, 7, 655, 669, 670, 673, 675, 676, 677, 679, 704, 710, 723, 726], "com": [1, 6, 7, 38, 655, 669, 670, 673, 675, 676, 677, 710, 723], "dev": [1, 6, 7, 242, 655, 668, 669, 670, 673, 675, 676, 677, 679, 704, 710, 723], "28": [1, 677, 710], "somewhat": 1, "conflict": 1, "tend": [1, 264], "child": [1, 19, 533, 668, 669], "just": [1, 6, 11, 21, 39, 82, 87, 99, 114, 150, 164, 171, 229, 239, 245, 246, 248, 250, 256, 261, 668, 669, 670, 672, 673, 674, 675, 676, 698, 700, 716], "instanti": 1, "becaus": [1, 7, 8, 243, 489, 668, 669, 670, 674, 675, 676, 682, 686, 687, 690, 691, 692, 694, 697, 700, 701, 710, 712, 716, 718, 723], "parent": [1, 348, 366, 655, 668], "object": [1, 8, 14, 17, 25, 74, 75, 506, 518, 655, 668, 669, 675, 676, 701, 710], "respect": [1, 3, 8, 264, 662, 668, 669, 675, 690, 708, 710, 716, 722], "baroclinicchannel": [1, 281, 284, 293, 296, 302, 651, 668, 669, 675, 676], "short": [1, 6, 104, 153, 176, 248, 249, 255, 256, 264, 267, 284, 337, 345, 400, 401, 407, 411, 454, 628, 637, 655, 668, 669, 675, 676, 680, 681, 683, 686, 688, 694, 701, 705, 706, 708, 710, 715, 717, 719, 722], "add_step": [1, 244, 245, 250, 651, 655, 660, 668, 674, 675, 676], "initialst": [1, 651, 652, 653, 655, 657, 658, 660, 661, 662, 664, 667, 668, 675], "And": [1, 7, 668, 670], "save": [1, 8, 37, 57, 651, 658, 668, 682, 683, 684, 686, 688, 690, 694, 699, 706, 710, 713], "res_param": [1, 651, 667, 668, 675, 676], "10km": [1, 8, 651, 667, 668, 675, 676, 687, 691, 705, 706, 723, 724, 725], "nx": [1, 668, 675, 676, 682, 683, 684, 685, 688, 708, 711, 713, 715], "ny": [1, 668, 675, 676, 682, 683, 684, 685, 688, 711, 713, 715], "50": [1, 247, 651, 662, 667, 668, 675, 676, 685, 688, 706, 713, 715, 717, 718], "dc": [1, 668, 675, 676, 682, 683, 684, 685, 688, 711, 713, 715], "10e3": [1, 668, 675, 676], "4km": [1, 254, 256, 651, 668, 675, 676, 692, 706, 719, 723], "40": [1, 652, 661, 668, 675, 676, 682, 697, 707, 716, 721], "126": [1, 668, 675, 676], "4e3": [1, 668, 675, 676], "1km": [1, 6, 156, 162, 164, 651, 668, 675, 676, 706, 708, 723], "160": [1, 668, 675, 676], "500": [1, 655, 664, 667, 668, 675, 676, 677, 703, 713, 717, 722], "1e3": [1, 668, 675, 676], "valueerror": [1, 8, 63, 651, 668, 675, 676], "unsupport": [1, 651, 668, 675, 676], "param": [1, 143, 203, 651, 655, 668, 675, 676], "recip": [1, 668], "elsewher": [1, 655, 670, 676, 701], "might": [1, 3, 8, 264, 668, 675, 676, 677, 690, 722, 723], "you": [1, 3, 5, 6, 7, 8, 242, 257, 258, 259, 260, 261, 262, 264, 650, 661, 668, 669, 670, 671, 672, 674, 675, 676, 677, 686, 687, 691, 692, 694, 695, 696, 697, 698, 699, 700, 709, 710, 713, 716, 718, 720, 721, 723, 724, 725], "kei": [1, 9, 26, 31, 71, 420, 605, 610, 668, 687], "config_time_integr": [1, 676], "split_explicit": [1, 337, 342, 345, 348, 363, 366, 383, 386, 391, 396, 401, 404, 407, 655, 676, 710, 720], "config_dt": [1, 662, 675, 676], "02": 1, "config_btr_dt": [1, 675, 676], "06": [1, 667, 711], "0000_06": 1, "config_hmix_use_ref_cell_width": 1, "config_use_debugtrac": 1, "Such": 1, "forwardstep": [1, 655, 657, 668], "time_integr": [1, 337, 342, 345, 348, 363, 366, 383, 386, 391, 396, 401, 404, 407, 655, 720], "with_ice_shelf_cav": [1, 269, 353, 359, 361, 378, 655, 668, 710], "wisc": [1, 655, 710], "littl": [1, 8, 669, 670, 673, 674, 675, 676], "trickier": 1, "typic": [1, 6, 7, 8, 11, 23, 69, 264, 400, 655, 668, 670, 672, 674, 675, 676, 677, 680, 682, 683, 684, 687, 688, 691, 692, 699, 701, 703, 710, 719, 723, 724], "look": [1, 6, 7, 8, 655, 668, 669, 674, 675, 676, 677, 721], "forcing_data": [1, 661, 668], "mixedlayerdepthsoutput": 1, "var_arrai": [1, 668], "constant": [1, 8, 43, 50, 51, 273, 381, 389, 394, 450, 653, 664, 667, 676, 682, 685, 706, 708, 709, 713, 715, 716, 717, 718, 720, 722], "remov": [1, 6, 8, 69, 72, 490, 651, 652, 653, 658, 660, 661, 662, 664, 667, 668, 674, 710, 716], "etc": [1, 8, 72, 73, 315, 453, 454, 462, 491, 495, 655, 668, 706, 710, 715], "rare": [1, 670], "One": [1, 8, 261, 652, 653, 669, 674, 676, 699, 705, 710, 723, 725], "add_config": [1, 674], "io": [1, 668, 669, 673, 675, 676, 677, 679, 704], "enthalpy_benchmark": [1, 242, 251, 668, 679, 680, 689], "readm": [1, 8, 247, 668, 685], "work_dir": [1, 6, 8, 11, 26, 35, 67, 70, 71, 72, 73, 74, 75, 668], "visual": [1, 8, 247, 312, 321, 327, 468, 482, 503, 546, 564, 578, 592, 616, 652, 653, 658, 661, 668, 672, 682, 683, 684, 685, 686, 688, 694, 707, 708, 715, 716, 717], "eismint2_viz": [1, 246, 684], "experi": [1, 114, 119, 123, 246, 261, 485, 486, 491, 493, 495, 501, 503, 506, 518, 661, 669, 684, 703, 716], "b": [1, 3, 6, 114, 123, 246, 670, 672, 684, 723], "d": [1, 114, 123, 246, 505, 506, 518, 642, 648, 649, 668, 675, 676, 684, 708], "f": [1, 6, 8, 114, 123, 246, 651, 668, 670, 674, 675, 677, 684, 690, 698, 700, 713, 723], "unchang": [1, 710], "eismint2": [1, 31, 242, 251, 679, 680, 689], "whichev": [1, 242, 650, 703], "sens": [1, 673, 675], "appli": [1, 7, 8, 39, 190, 196, 276, 485, 661, 668, 675, 680, 681, 690, 700, 701, 708, 710, 713, 716, 722], "shown": [1, 668, 694, 719, 722], "oper": [1, 8, 22, 101, 116, 137, 152, 173, 231, 241, 289, 292, 301, 459, 467, 488, 500, 634, 668, 680, 705, 725], "explicit": [1, 8, 653, 655, 669, 675, 676, 694, 705, 708, 710, 720], "neither": 1, "timer": [1, 6, 26, 30, 74, 81, 157, 163, 655, 664, 667, 668, 669], "compare_vari": [1, 8, 668, 676], "mesh_step": [1, 668], "mesh_cor": [1, 677], "mesh_min_cor": [1, 677], "xcell": [1, 655, 668, 675], "ycell": [1, 655, 668, 675], "zcell": [1, 655], "filename1": [1, 8, 75, 668, 676], "purpos": [1, 3, 31, 652, 653, 668, 669, 672, 675, 676, 682, 693, 694, 710, 724], "meti": [1, 59, 676], "split": [1, 655, 669, 674, 675, 676, 705, 710, 720], "domain": [1, 60, 61, 249, 253, 254, 264, 275, 468, 490, 506, 652, 655, 661, 668, 675, 676, 680, 683, 684, 685, 688, 701, 706, 707, 708, 709, 710, 712, 713, 715, 716, 717, 718, 719, 722, 724], "trivial": 1, "quit": [1, 3, 655, 668, 713], "compar": [1, 6, 8, 26, 70, 71, 73, 74, 75, 247, 255, 348, 401, 604, 652, 653, 654, 655, 656, 657, 662, 663, 665, 666, 667, 669, 672, 674, 675, 676, 680, 683, 684, 686, 687, 688, 694, 705, 706, 707, 710, 711, 712, 713, 716, 719, 721, 723, 725], "signific": [1, 668, 669, 681, 716], "dynamic_adjust": [1, 350, 668, 677, 705], "rk4": [1, 337, 342, 345, 348, 363, 366, 383, 386, 391, 396, 401, 404, 407, 655, 669, 675, 676, 705, 710, 720, 725], "intermedi": [1, 710], "meshstep": [1, 372, 439, 657, 668], "build_cell_width_lat_lon": [1, 8, 50, 657], "numpi": [1, 8, 44, 51, 52, 57, 382, 390, 395, 451, 506, 573, 587, 601, 603, 606, 611, 625, 640, 641, 668, 675, 676], "np": [1, 664, 675, 676], "qu240mesh": 1, "mesh_nam": [1, 328, 330, 334, 378, 447, 655, 710], "bool": [1, 11, 12, 26, 27, 34, 37, 38, 39, 61, 68, 69, 70, 71, 73, 75, 156, 162, 164, 201, 211, 213, 264, 266, 269, 272, 273, 276, 324, 327, 353, 359, 361, 363, 369, 372, 378, 442, 450, 457, 486, 490, 491, 495, 506, 510, 554, 556, 558, 628, 632, 635], "ic": [1, 7, 141, 146, 148, 174, 242, 247, 248, 250, 252, 267, 268, 269, 272, 353, 359, 361, 375, 378, 400, 452, 454, 457, 460, 462, 465, 468, 484, 486, 489, 490, 491, 495, 498, 506, 508, 511, 515, 516, 517, 519, 650, 655, 658, 661, 667, 669, 670, 673, 675, 676, 677, 679, 680, 682, 683, 684, 685, 686, 687, 688, 690, 691, 692, 693, 694, 702, 703, 704, 705, 713, 716, 722, 724], "shelf": [1, 7, 84, 85, 268, 269, 272, 353, 359, 361, 375, 378, 452, 454, 457, 460, 462, 465, 468, 484, 486, 498, 506, 511, 519, 554, 556, 558, 655, 658, 661, 668, 669, 675, 676, 677, 682, 683, 693, 694, 702, 703, 704, 705, 713, 716, 719, 722], "caviti": [1, 269, 272, 353, 359, 361, 378, 506, 510, 655, 658, 661, 669, 675, 676, 677, 702, 703, 704, 705, 713, 716], "__module__": [1, 655, 674], "mesh_config_filenam": [1, 378, 655], "cell": [1, 8, 43, 44, 45, 46, 50, 51, 52, 57, 146, 264, 266, 269, 272, 273, 275, 276, 328, 381, 382, 389, 390, 394, 395, 411, 450, 451, 489, 506, 547, 573, 587, 601, 625, 642, 643, 644, 645, 648, 649, 652, 655, 656, 661, 664, 668, 674, 675, 676, 682, 683, 684, 685, 686, 687, 688, 691, 692, 694, 703, 706, 708, 709, 710, 711, 712, 713, 715, 716, 717, 718, 719, 720, 722], "width": [1, 8, 43, 44, 45, 50, 51, 52, 57, 273, 381, 382, 389, 390, 394, 395, 450, 451, 573, 587, 601, 625, 675, 706, 708, 713, 715, 718, 719, 722], "arrai": [1, 8, 44, 51, 52, 57, 266, 382, 390, 395, 451, 508, 510, 573, 587, 601, 605, 606, 625, 640, 641, 643, 644, 645, 646], "regular": [1, 6, 39, 44, 51, 324, 327, 382, 390, 395, 451, 573, 587, 601, 625, 675, 695, 697, 698, 699, 700, 705, 723], "latitud": [1, 44, 51, 382, 390, 395, 451, 573, 587, 601, 625, 655, 709, 710, 719, 721], "longitud": [1, 44, 51, 52, 57, 382, 390, 395, 451, 573, 587, 601, 625, 655, 709, 719], "return": [1, 3, 7, 37, 44, 45, 46, 51, 62, 64, 71, 266, 268, 328, 331, 382, 390, 395, 400, 451, 489, 540, 547, 573, 587, 601, 603, 604, 605, 612, 625, 640, 643, 644, 645, 646, 647, 669, 674, 675, 676, 709, 718, 721], "cellwidth": [1, 382, 390, 395, 451, 573, 587, 601, 625], "x": [1, 44, 51, 52, 57, 188, 382, 390, 395, 411, 451, 506, 508, 515, 516, 517, 573, 587, 601, 625, 652, 655, 656, 658, 662, 668, 675, 676, 708, 711, 713, 715, 718], "km": [1, 8, 43, 44, 45, 46, 50, 51, 52, 57, 246, 248, 249, 250, 253, 256, 273, 306, 315, 330, 381, 382, 389, 390, 394, 395, 450, 451, 486, 490, 491, 493, 495, 498, 501, 503, 539, 547, 566, 570, 572, 573, 580, 584, 586, 587, 594, 598, 600, 601, 618, 622, 624, 625, 651, 654, 655, 656, 661, 663, 664, 665, 666, 667, 674, 675, 676, 677, 680, 684, 686, 687, 688, 691, 692, 694, 701, 706, 708, 709, 710, 713, 715, 716, 718, 719, 720, 721, 722, 724], "lon": [1, 8, 44, 50, 51, 52, 57, 188, 382, 390, 395, 451, 573, 587, 601, 625, 677, 710], "length": [1, 44, 51, 52, 57, 382, 390, 395, 451, 573, 587, 601, 625, 655, 667, 708, 711, 722], "180": [1, 44, 51, 52, 57, 382, 390, 395, 451, 573, 587, 601, 625, 709, 712, 720], "lat": [1, 8, 44, 50, 51, 52, 57, 188, 382, 390, 395, 451, 573, 587, 601, 625, 677, 710], "90": [1, 44, 51, 52, 57, 382, 390, 395, 451, 573, 587, 601, 625, 667, 668, 709, 720], "dlon": 1, "dlat": 1, "constantcellwidth": 1, "240": [1, 8, 45, 606, 611, 654, 655, 665, 677, 701, 709, 710, 716, 720], "nlat": [1, 721], "nlon": 1, "360": 1, "linspac": [1, 8, 664], "ones": [1, 6, 192, 198, 208, 215, 506, 642, 648, 649, 669, 674], "size": [1, 3, 8, 45, 46, 146, 512, 566, 580, 594, 603, 605, 606, 611, 618, 668, 675, 676, 677, 682, 683, 684, 685, 688, 709, 710, 711, 713, 715, 718], "integr": [1, 8, 296, 337, 342, 345, 348, 363, 366, 383, 386, 391, 396, 401, 404, 407, 477, 651, 655, 660, 661, 668, 669, 675, 676, 680, 681, 683, 684, 685, 686, 687, 688, 689, 691, 692, 694, 705, 706, 709, 710, 713, 715, 716, 717, 718, 719, 720, 722], "0000_01": 1, "1000": [1, 247, 655, 675, 677, 685, 688, 703, 706, 710, 712, 715, 722], "config_mom_del4": 1, "2e11": 1, "config_hmix_scalewithmesh": 1, "config_use_gm": 1, "vertic": [1, 245, 246, 250, 276, 278, 315, 399, 400, 411, 453, 454, 462, 491, 495, 554, 556, 558, 604, 651, 653, 655, 656, 657, 658, 660, 661, 662, 664, 667, 668, 674, 676, 677, 682, 683, 684, 685, 688, 701, 702, 704, 706, 707, 708, 710, 711, 712, 713, 715, 716, 717, 718, 719, 722], "layer": [1, 245, 246, 250, 264, 266, 512, 554, 556, 558, 640, 641, 642, 646, 647, 648, 649, 651, 655, 656, 657, 658, 660, 661, 662, 664, 667, 675, 677, 682, 683, 684, 688, 701, 703, 705, 706, 707, 708, 710, 711, 712, 713, 715, 716, 717, 718, 719, 722], "metadata": [1, 677], "vertical_grid": [1, 264, 278, 640, 642, 648, 649, 655, 668, 675, 677, 703, 706, 707, 708, 713, 715, 716, 717, 718, 722], "grid_typ": [1, 655, 675, 677, 703, 706, 713, 715, 716, 717, 718, 722], "60layerphc": [1, 655, 710], "mb": [1, 11, 21, 655, 677, 710, 712], "init_max_memori": [1, 655, 677, 710, 712], "init_max_disk": [1, 677], "128": [1, 655, 696, 700], "forward_max_memori": [1, 655, 677, 710, 712], "forward_max_disk": [1, 677], "prefix": [1, 508, 510, 520, 655, 668, 670, 677, 710], "qu": [1, 654, 655, 674, 677, 709, 710, 721], "ec": [1, 655, 677, 710], "wc": [1, 655, 677, 710], "mesh_descript": [1, 655, 677, 710], "eddi": [1, 651, 655, 706, 710, 719], "closur": [1, 655, 710, 711], "e3sm_vers": [1, 655, 677, 710], "enhanc": [1, 655], "around": [1, 276, 652, 654, 655, 665, 675, 676, 677, 701, 706, 709, 710, 715, 719], "equat": [1, 264, 655, 658, 675, 683, 709, 710, 711], "south": [1, 655], "pole": [1, 197, 655, 690, 710], "35": [1, 655, 675, 706, 708, 709, 710, 715, 717, 718, 721, 723], "greenland": [1, 31, 242, 251, 254, 655, 668, 672, 679, 680, 687, 689, 691, 692, 724], "min_r": [1, 655, 677, 710], "max_r": [1, 655, 677, 710], "mid": [1, 264, 655, 661, 710], "revis": [1, 6, 655, 677, 710], "increment": [1, 655, 677, 710], "mesh_revis": [1, 655, 677, 710], "finest": [1, 655, 677, 709, 710, 718, 720], "coarsest": [1, 655, 675, 677, 710], "60": [1, 8, 45, 264, 272, 566, 580, 594, 618, 654, 655, 665, 666, 668, 703, 709, 710, 713, 719, 720, 721], "url": [1, 8, 12, 37, 655, 668, 671, 677, 710], "pull_request": [1, 655, 677, 710], "miss": [1, 8, 655, 668, 677, 710], "dynamical_adjust": 1, "spin": [1, 176, 668, 688, 705, 710], "kind": [1, 674, 675], "dynamicaladjust": 1, "dynamicadjust": [1, 350, 655], "qu240dynamicadjust": [1, 655, 668], "adjust": [1, 248, 264, 267, 323, 336, 348, 350, 353, 355, 357, 359, 361, 375, 383, 386, 391, 396, 454, 465, 498, 650, 655, 658, 661, 668, 677, 687, 691, 692, 693, 705, 710, 713, 716, 720], "dissip": [1, 348, 350, 355, 357, 383, 386, 391, 396, 655, 675, 706, 710, 715], "fast": [1, 348, 350, 355, 357, 383, 386, 391, 396, 655, 687, 710, 721], "move": [1, 243, 264, 348, 350, 383, 386, 391, 396, 655, 668, 669, 675, 716], "wave": [1, 348, 350, 355, 357, 383, 386, 391, 396, 471, 473, 475, 477, 478, 480, 482, 655, 660, 668, 675, 706, 710, 715], "restart_tim": 1, "0001": [1, 716], "02_00": 1, "03_00": 1, "restart_filenam": [1, 135, 348, 350, 353, 355, 357, 359, 361, 383, 391, 396, 655], "rst": [1, 7, 82, 87, 99, 114, 150, 164, 171, 229, 239, 245, 246, 248, 249, 250, 256, 655, 668, 675, 676], "step_nam": 1, "damped_adjustment_1": [1, 655], "namelist_opt": 1, "01_00": [1, 668, 716], "config_rayleigh_frict": 1, "config_rayleigh_damping_coeff": [1, 653], "stream_replac": [1, 668], "restart_interv": [1, 655, 668], "template_replac": [1, 17, 25, 668], "simul": [1, 249, 252, 312, 321, 348, 411, 419, 457, 493, 501, 503, 506, 518, 551, 554, 556, 558, 628, 632, 635, 655, 658, 661, 664, 665, 668, 672, 674, 675, 676, 687, 690, 701, 706, 708, 710, 711, 712, 713, 719, 721, 722, 723], "config_do_restart": 1, "config_start_tim": 1, "whew": 1, "That": [1, 668, 669, 672, 675, 676, 690, 723], "lot": [1, 8, 668, 669, 676], "thank": 1, "bear": [1, 676], "myriad": 1, "highlight": 1, "roughli": [1, 669, 675, 709, 718, 720], "broken": [1, 97, 112, 148, 162, 169, 237, 668, 669], "ident": [1, 3, 6, 8, 85, 95, 97, 110, 112, 141, 148, 156, 162, 167, 169, 235, 237, 245, 246, 248, 249, 250, 256, 281, 293, 302, 337, 345, 404, 407, 462, 651, 655, 658, 664, 667, 669, 675, 676, 680, 683, 684, 686, 687, 688, 694, 706, 710, 713, 715, 716, 719, 720, 722], "analog": [1, 669], "get_available_cores_and_nod": [1, 669], "abl": [1, 6, 257, 258, 259, 260, 262, 668, 669, 670, 675, 676, 699], "unless": [1, 38, 69, 661, 669, 670, 675, 676], "am": 1, "theoret": [1, 669], "my": 1, "ambit": 1, "gradual": [1, 655, 717], "sea": [1, 7, 264, 266, 267, 268, 361, 375, 400, 454, 465, 485, 498, 508, 512, 515, 516, 517, 644, 645, 646, 647, 650, 655, 657, 658, 661, 676, 677, 703, 705, 707, 708, 710, 711, 713, 716], "surfac": [1, 7, 189, 195, 247, 252, 264, 266, 267, 268, 276, 375, 454, 465, 485, 498, 508, 512, 515, 516, 517, 554, 556, 558, 644, 645, 646, 647, 650, 655, 657, 658, 661, 675, 677, 685, 690, 703, 705, 706, 707, 708, 710, 713, 715, 716, 718, 719, 722], "height": [1, 7, 264, 266, 267, 268, 375, 454, 465, 498, 512, 644, 645, 646, 647, 650, 655, 657, 658, 661, 677, 703, 705, 707, 708, 710, 713, 716], "frazil": [1, 264, 457, 628, 632, 635, 637, 658, 667, 705, 713, 722], "land": [1, 7, 242, 264, 267, 268, 269, 272, 273, 450, 486, 489, 491, 495, 650, 655, 658, 661, 664, 673, 676, 677, 679, 680, 703, 710, 712, 713, 716, 719, 724], "flux": [1, 247, 264, 485, 511, 519, 655, 658, 661, 681, 685, 705, 710, 713, 716], "1d": [1, 264, 640, 641, 642, 643, 644, 645, 646, 648, 649, 658, 661], "coordin": [1, 187, 188, 202, 315, 453, 454, 462, 491, 495, 506, 642, 648, 649, 653, 655, 658, 661, 674, 701, 702, 704, 706, 708, 710, 713, 715, 716, 717, 718, 722], "3d": [1, 276, 508], "z": [1, 264, 272, 453, 454, 462, 486, 491, 495, 498, 506, 508, 515, 516, 517, 643, 644, 645, 646, 647, 648, 649, 658, 661, 675, 676, 701, 706, 708, 713, 715, 716, 717, 718, 720, 722, 725], "iceshelf": [1, 264], "pressur": [1, 7, 264, 267, 268, 375, 442, 454, 465, 498, 650, 655, 657, 658, 661, 677, 701, 710, 712, 713, 716], "match": [1, 375, 454, 465, 498, 612, 652, 653, 658, 661, 670, 690, 717], "particl": [1, 552, 554, 558, 628, 632, 664, 667, 705], "plot": [1, 8, 57, 93, 108, 123, 182, 243, 244, 245, 246, 247, 250, 299, 411, 413, 420, 442, 444, 478, 522, 530, 604, 605, 606, 607, 608, 609, 610, 651, 652, 653, 654, 656, 657, 660, 661, 662, 663, 664, 665, 666, 674, 675, 676, 681, 682, 683, 684, 685, 688, 707, 708, 709, 712, 713, 716, 717, 718, 720, 721, 724], "nearli": [1, 174, 250, 337, 655, 668, 669, 672, 673, 675, 676, 688, 701, 710, 720], "netcdf": [1, 275, 276, 277, 278, 399, 446, 655, 675, 677, 695, 696, 697, 698, 699, 700, 710], "maintain": [1, 264, 720, 723], "hundr": 1, "en4": [1, 655, 669, 710], "1900": [1, 655, 669, 710], "bgc": [1, 369, 372, 655, 669], "overkil": [1, 668], "never": [1, 668, 672], "note": [1, 7, 8, 188, 243, 275, 673, 675, 686, 687, 690, 693, 694, 698, 700, 710, 712], "show": [1, 3, 7, 8, 266, 506, 508, 652, 653, 668, 675, 676, 681, 685, 698, 699, 700, 706, 709, 710, 715, 716, 718], "recent": [1, 704], "issu": [1, 3, 661, 668, 709, 718], "777": 1, "aren": [1, 8, 655, 668, 669, 670, 674, 675, 676, 709, 718, 720, 725], "occur": [1, 143, 243, 661, 671], "rpe_test": [1, 668, 669, 723], "5": [1, 6, 8, 45, 246, 248, 255, 256, 276, 296, 477, 512, 607, 651, 655, 656, 658, 660, 664, 667, 668, 669, 671, 675, 676, 677, 682, 684, 686, 687, 690, 691, 692, 693, 694, 705, 706, 708, 710, 711, 713, 715, 716, 717, 719, 722, 723], "sourc": [1, 3, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 99, 100, 102, 103, 104, 106, 107, 108, 109, 110, 112, 114, 115, 117, 118, 119, 121, 122, 123, 124, 125, 127, 128, 129, 130, 132, 133, 134, 135, 136, 138, 139, 140, 141, 143, 145, 146, 147, 148, 150, 151, 153, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 169, 171, 172, 174, 175, 176, 178, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 228, 229, 230, 232, 234, 235, 237, 239, 240, 252, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 287, 288, 290, 291, 293, 294, 296, 297, 299, 300, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 341, 342, 345, 348, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 386, 389, 390, 391, 394, 395, 396, 399, 400, 401, 404, 407, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 457, 458, 460, 461, 462, 463, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 631, 632, 633, 635, 636, 637, 638, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 668, 670, 675, 676, 677, 690, 693, 694, 695, 696, 697, 698, 699, 700, 717, 723], "major": [1, 261, 668, 676, 699, 701, 710, 719], "assembl": [1, 350], "check": [1, 6, 8, 63, 75, 80, 201, 249, 264, 337, 658, 661, 670, 672, 674, 675, 676, 677, 698, 700, 705, 722, 723, 725], "extend": [1, 677, 716, 719], "opiton": 1, "mpas_model": [1, 6, 242, 650, 668, 677], "ocean_model": [1, 650, 670, 676, 677], "previous": [1, 668, 674], "resourc": [1, 8, 21, 65, 651, 660, 662, 668, 675, 687, 691, 692, 710], "Then": [1, 5, 7, 8, 242, 247, 257, 258, 259, 260, 261, 262, 650, 651, 652, 653, 655, 658, 660, 661, 662, 664, 667, 668, 674, 676, 683, 684, 686, 688, 690, 694, 699, 706, 710, 713, 716, 723], "configure_global_ocean": [1, 655, 668], "initial_condit": [1, 174, 369, 372, 549, 669], "polar": [1, 655, 677, 703, 710], "scienc": [1, 655, 703, 710], "center": [1, 264, 266, 275, 276, 655, 668, 675, 682, 683, 684, 688, 703, 706, 710, 712, 713, 715, 716, 717, 718, 722], "hydrograph": [1, 655, 703, 710], "climatologi": [1, 190, 252, 655, 690, 703, 710], "en4_1900": [1, 369, 372, 655, 705, 710], "met": [1, 3], "offic": 1, "hadlei": 1, "centr": 1, "init_descript": [1, 655, 677, 710], "bathymetri": [1, 8, 264, 269, 490, 506, 655, 668, 677, 710, 712, 722], "bathy_descript": [1, 655, 677, 710], "gebco": [1, 677, 710], "2019": 1, "bedmachin": [1, 272, 677, 710], "antarctica": [1, 272, 655, 677, 701, 710], "with_bgc": [1, 369, 372, 668], "todo": 1, "fill": [1, 243, 264, 272, 661, 710], "bgc_descript": 1, "wisc_descript": 1, "shelv": [1, 650, 655, 658, 677, 690, 701, 703, 705, 710, 713, 716], "although": [1, 8, 674], "config_fil": [1, 6, 70, 71, 73], "commandlin": 1, "w": [1, 6, 247, 670, 672, 685, 719, 723], "test_baroclinic_channel": 1, "test_nightli": 1, "check_siz": [1, 677], "verifi": [1, 8, 85, 95, 97, 110, 112, 141, 148, 156, 162, 167, 169, 235, 237, 552, 653, 677], "home": [1, 8, 670, 675, 676, 677, 698, 699, 700], "default_input": [1, 242, 650, 668, 677], "mesh_max_memori": [1, 677], "mesh_max_disk": [1, 677], "add_metadata": [1, 655, 677, 710], "quasi": [1, 8, 50, 176, 178, 554, 558, 628, 632, 655, 674, 677, 688, 710, 713, 716, 720, 721], "uniform": [1, 8, 50, 206, 245, 250, 330, 539, 547, 566, 570, 572, 580, 584, 586, 594, 598, 600, 618, 622, 624, 651, 654, 655, 658, 660, 664, 665, 666, 667, 668, 674, 675, 676, 677, 682, 683, 684, 688, 706, 710, 713, 715, 716, 717, 718, 720, 721, 722], "max_depth": [1, 655, 677, 710], "autodetect": [1, 655, 677, 710, 712], "creation_d": [1, 655, 677, 710], "email": [1, 655, 677, 710, 712], "lanl": [1, 673, 677, 710], "gov": [1, 8, 668, 671, 677, 698, 700, 710], "enable_ocean_initial_condit": [1, 677, 710], "enable_ocean_graph_partit": [1, 677, 710], "enable_seaice_initial_condit": [1, 677, 710], "enable_scrip": [1, 677, 710], "enable_diagnostics_fil": [1, 677, 710], "comparisonlatresolut": [1, 677, 710], "comparisonlonresolut": [1, 677, 710], "comparisonantarcticstereowidth": [1, 677, 710], "6000": [1, 655, 677, 703, 710], "comparisonantarcticstereoresolut": [1, 677, 710], "comparisonarcticstereowidth": [1, 677, 710], "comparisonarcticstereoresolut": [1, 677, 710], "tanh_dz": [1, 655, 677, 710], "vert_level": [1, 655, 668, 675, 676, 677, 703, 706, 707, 708, 711, 713, 715, 716, 717, 718], "bottom_depth": [1, 655, 668, 675, 676, 677, 703, 706, 711, 713, 715, 716, 717, 718, 719, 722], "3000": [1, 655, 674, 677, 709, 710, 718, 720], "min_layer_thick": [1, 655, 677, 703, 716], "max_layer_thick": [1, 655, 677, 703], "unfortun": 1, "lost": 1, "standard": [1, 119, 272, 655, 661, 665, 669, 670, 710, 720, 723], "search": [1, 6, 39, 275], "through": [1, 3, 71, 468, 482, 655, 661, 669, 676, 679, 687, 691, 692, 701, 704, 707, 708, 715, 716, 717], "our": [1, 669, 674, 675, 676, 698, 723], "preserv": [1, 272, 273, 723], "lower": [1, 8, 668, 675, 690, 706, 715, 717], "hpc": [1, 670, 699], "laptop": [1, 670, 675, 676, 677], "desktop": [1, 675, 676, 690], "varieti": [1, 689], "straightforward": [1, 668], "Or": [1, 6, 677], "late": 1, "run_step": [1, 668, 683], "subset": [1, 6, 661], "run_by_default": [1, 27, 244, 245, 250, 668], "mesh_typ": [1, 85, 89, 91, 95, 97, 99, 102, 104, 106, 119, 145, 156, 158, 162, 164, 219, 224, 244, 245, 668], "dome": [1, 8, 42, 85, 127, 132, 135, 169, 174, 180, 213, 242, 251, 668, 672, 679, 680, 689, 723, 724], "tye": [1, 85], "smoke_test": [1, 245, 668], "setupmesh": [1, 8, 246, 247, 250, 668], "runmodel": [1, 247, 248, 249, 250, 255, 256, 668], "unifi": [1, 670, 698, 700], "detect": [1, 264, 655, 668, 677, 695, 696, 697, 699, 710, 712, 720, 723], "fulli": [1, 661], "cori": [1, 261, 690, 699, 723], "haswel": [1, 261, 723], "compi": [1, 261, 697, 723], "nest": [1, 675, 676], "27": 1, "29": [1, 721], "31": 1, "decomp_test": [1, 7, 675, 705, 723, 725], "32": [1, 663, 664, 667, 687, 694, 698, 718, 720, 723], "threads_test": [1, 8, 675, 705, 723, 725], "33": [1, 677, 710, 715, 716, 723], "analysis_test": [1, 705, 725], "34": [1, 668, 683, 713, 716, 719, 722, 723], "daily_output_test": 1, "37": [1, 655, 723], "38": [1, 723], "39": 1, "41": 1, "43": 1, "44": [1, 713], "45": [1, 655, 710], "phc_bgc": [1, 705, 710], "46": [1, 682], "cull": [1, 8, 489, 651, 652, 653, 655, 658, 660, 661, 662, 664, 667, 668, 675, 676, 684, 686, 687, 691, 692, 694, 710, 712, 719], "switch": [1, 670, 675, 677, 722], "treat": [1, 668, 669], "progress": [1, 69, 266, 272, 508, 510], "intermix": 1, "continu": [1, 3, 135, 668, 674, 675, 680, 705, 710, 716], "azur": 1, "pipelin": 1, "doc": [1, 5, 7, 668, 675, 676, 698, 700, 726], "renam": [1, 184, 190, 192, 196, 198, 203, 205, 208, 211, 215, 252, 669, 690], "titl": [1, 508, 510], "tabl": [1, 8, 611, 670, 699, 723], "tree": [1, 7, 673, 676], "0_doc": 1, "brows": [1, 675, 676], "index": [1, 5, 8, 264, 642, 643, 644, 645, 646, 647, 648, 649, 668, 675, 676, 682, 683, 688], "html": [1, 5, 679, 704], "keep": [1, 3, 6, 8, 11, 36, 485, 655, 668, 670, 676, 677, 690, 716], "track": [1, 8, 11, 655, 668, 670, 719, 722], "thorough": 1, "absolut": [1, 6, 8, 11, 12, 36, 70, 71, 73, 242, 650, 668, 670, 677, 723], "sure": [1, 6, 8, 75, 242, 261, 281, 293, 302, 337, 345, 404, 407, 462, 650, 651, 655, 658, 661, 668, 669, 670, 672, 675, 676, 677, 682, 683, 684, 686, 687, 688, 694, 698, 699, 700, 706, 709, 710, 713], "present": [1, 264, 272, 495, 655, 670, 674, 675, 676, 708], "figur": [1, 8, 512, 607, 609, 668, 676, 677, 682, 683, 684, 688], "implicitli": 1, "repositori": [1, 668, 673, 675, 676, 723], "affect": [1, 8, 668, 680, 701, 705], "immedi": [1, 42, 668, 670, 675, 676], "noth": [1, 8, 655, 671, 690, 709, 718, 720, 721], "preclud": 1, "wouldn": 1, "limit": [1, 670, 673, 681], "review": 1, "agre": 1, "column": [1, 609, 656, 661, 670, 676, 685, 701, 711, 713, 716, 723], "eas": [1, 675], "shallow": [1, 9, 670, 680, 683, 720], "water": [1, 9, 655, 661, 675, 701, 706, 707, 708, 710, 713, 715, 716, 719], "he": 1, "down": [1, 642, 643, 644, 645, 646, 647, 648, 649, 658, 661, 703], "road": 1, "86": 1, "higher": [1, 655, 675, 710, 722], "subject": 1, "thing": [1, 6, 257, 258, 260, 261, 262, 668, 669, 673, 675, 676], "proof": 1, "concept": [1, 668, 669, 672, 724], "250": [1, 655, 656, 676, 703, 711, 722], "thick": [1, 174, 245, 246, 247, 248, 256, 264, 266, 485, 490, 642, 646, 647, 648, 649, 651, 655, 656, 658, 660, 661, 662, 677, 680, 682, 685, 687, 691, 692, 703, 705, 706, 707, 708, 710, 711, 713, 715, 716], "245": 1, "imposs": 1, "effect": [1, 716], "ask": [1, 681, 710], "evolv": [1, 264, 673, 701, 703, 716], "declar": [1, 3, 7], "good": [1, 8, 11, 668, 670, 674, 675, 676], "merg": 1, "intent": [1, 8], "ongo": 1, "basi": [1, 350, 353, 355, 357, 359, 361, 705], "demonstr": [1, 668, 675, 676, 717, 722], "compass": [2, 3, 5, 7, 8, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 650, 651, 652, 653, 654, 655, 656, 657, 658, 660, 661, 662, 663, 664, 665, 666, 667, 671, 672, 674, 675, 677, 679, 680, 683, 687, 691, 692, 695, 696, 697, 698, 699, 700, 704, 705, 710, 711, 714, 716, 719, 722, 724, 725], "packag": [2, 5, 6, 7, 8, 12, 14, 17, 25, 28, 67, 72, 73, 261, 264, 378, 655, 668, 670, 671, 672, 673, 674, 675, 676, 690, 695, 696, 697, 698, 699, 700, 710, 714, 723], "output": [2, 6, 7, 8, 9, 11, 16, 22, 26, 34, 58, 59, 60, 65, 69, 75, 91, 93, 101, 106, 108, 116, 121, 123, 127, 132, 137, 152, 173, 180, 182, 187, 188, 202, 206, 207, 231, 241, 243, 244, 245, 246, 247, 248, 250, 255, 256, 264, 272, 275, 276, 277, 289, 292, 301, 312, 327, 337, 342, 348, 399, 420, 436, 442, 459, 467, 488, 493, 500, 503, 506, 518, 546, 547, 564, 578, 592, 604, 609, 616, 634, 641, 651, 652, 653, 655, 656, 658, 660, 661, 662, 664, 667, 672, 673, 674, 676, 677, 687, 690, 698, 700, 707, 710, 712, 723, 725], "yyyi": 3, "mm": [3, 331, 567, 581, 595, 619], "dd": 3, "summar": [3, 680], "code": [3, 6, 7, 8, 11, 242, 247, 264, 650, 653, 668, 670, 672, 673, 675, 676, 677, 680, 685, 689, 702, 705, 720, 723], "softwar": [3, 59, 698, 700, 723], "success": [3, 37, 242, 650, 668, 677], "your": [3, 5, 6, 8, 242, 261, 650, 669, 670, 671, 674, 675, 676, 677, 695, 698, 699, 700, 709, 710, 718, 720, 721, 723], "appear": [3, 261, 661, 668], "head": 3, "technic": [3, 7], "focu": [3, 674], "extent": [3, 146, 722], "independ": [3, 6, 668, 672, 690], "thu": [3, 7, 668, 675, 690, 710, 716], "meet": [3, 715], "pde": 3, "solver": [3, 95, 97, 99, 104, 141, 148, 150, 153, 156, 162, 164, 243, 246, 247, 248, 255, 256, 668, 670, 673, 680, 681, 682, 683, 684, 686, 687, 694, 723], "steer": [3, 690], "low": [3, 150, 234, 710, 716, 717], "interfac": [3, 8, 264, 266, 508, 511, 512, 515, 516, 517, 519, 640, 641, 642, 648, 649, 658, 661, 668, 669, 670, 673, 675, 676, 701, 703], "sequenc": [3, 245, 246, 248, 250, 256, 507, 655, 668, 669, 672, 723, 724, 725], "math": 3, "almost": [3, 8, 674], "latex": 3, "2ab": 3, "imag": [3, 7, 277, 278, 506, 507, 508, 509, 510, 511, 513, 514, 515, 516, 517, 518, 519, 668, 675, 680, 682, 683, 684, 688, 710, 721], "small": [3, 8, 20, 244, 264, 656, 668, 680, 681, 682, 683, 687, 695, 702, 703, 713, 716, 720, 723], "jpeg": 3, "png": [3, 8, 277, 278, 654, 663, 666, 675, 676, 680, 682, 683, 685, 688], "okai": [3, 668, 676], "centric": 3, "pseudo": 3, "item": 3, "timelin": 3, "staf": 3, "example_funct": 3, "foo": [3, 669], "configur": [3, 6, 7, 8, 11, 21, 26, 37, 60, 63, 64, 65, 66, 67, 70, 71, 73, 80, 93, 108, 123, 182, 187, 202, 232, 249, 261, 278, 399, 400, 640, 642, 643, 644, 648, 649, 652, 653, 666, 669, 673, 674, 675, 676, 677, 683, 687, 690, 693, 698, 699, 700, 701, 703, 705, 710, 712, 716, 719, 722, 723, 724], "properli": [3, 257, 258, 259, 260, 675, 677, 705, 721, 723], "page": [4, 7, 612, 695], "auto": 4, "summari": [4, 243, 681, 690], "relev": [4, 7, 8, 249, 675, 676, 690, 695, 696, 697, 698, 699, 700, 723], "procedur": [5, 243, 261, 264, 670, 674, 698, 700], "export": [5, 671], "docs_vers": 5, "test": [5, 6, 7, 8, 9, 10, 11, 16, 21, 22, 26, 27, 28, 30, 31, 32, 34, 35, 39, 42, 43, 48, 50, 53, 55, 60, 62, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 261, 264, 265, 269, 270, 271, 273, 274, 640, 650, 651, 652, 653, 654, 656, 657, 658, 660, 661, 662, 663, 664, 665, 666, 667, 670, 671, 672, 673, 679, 681, 682, 683, 684, 685, 686, 687, 688, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 706, 707, 708, 709, 711, 713, 715, 716, 717, 718, 719, 720, 721, 722], "cd": [5, 242, 650, 670, 675, 676, 723], "rm": 5, "rf": 5, "developers_guid": [5, 675, 676], "_build": 5, "view": [5, 652, 670], "act": [6, 485, 669, 676, 703], "instal": [6, 670, 675, 698, 699, 700, 723], "reflect": [6, 652, 670], "h": [6, 655, 668, 676, 722], "v": [6, 264, 670, 710, 725], "example_compact": [6, 242, 650, 668, 677], "test1": 6, "test2": 6, "displai": [6, 8, 272, 698, 700], "messag": [6, 8, 668, 671, 698, 700], "test_expr": [6, 39], "substr": 6, "express": [6, 39], "think": [6, 675], "tempat": 6, "step1": 6, "step2": 6, "underli": 6, "framework": [6, 7, 26, 68, 75, 242, 650, 668, 672, 673, 675, 679, 704, 719, 722], "standalon": [6, 259, 668, 701], "num": 6, "mach": [6, 11, 695, 696, 697, 698, 699, 700, 723], "p": [6, 670, 675, 677, 723], "suite_nam": [6, 8, 35, 69, 71, 72, 73, 723], "case_numb": 6, "comma": [6, 8, 684, 709, 718, 720, 721], "requir": [6, 8, 11, 21, 82, 87, 99, 114, 135, 150, 164, 171, 229, 239, 242, 247, 248, 255, 256, 287, 308, 317, 363, 375, 457, 465, 473, 498, 526, 567, 581, 595, 619, 650, 655, 664, 667, 668, 669, 670, 671, 673, 674, 675, 676, 677, 679, 680, 683, 685, 686, 687, 690, 691, 692, 694, 699, 703, 704, 710, 723, 724], "piec": [6, 668, 675], "r": [6, 655, 698, 700, 709], "tell": [6, 670], "re": [6, 150, 234, 651, 653, 655, 667, 668, 669, 670, 672, 674, 675, 676, 677, 698, 699, 700, 709, 712, 716, 718, 720, 721, 723], "leav": [6, 269, 668, 677, 690, 713, 716], "unknown": [6, 261, 699], "temp": 6, "baseline_dir": [6, 26, 70, 71, 73], "predefin": [6, 719], "afther": 6, "behind": [6, 669, 675], "fresh": [6, 674], "resid": 6, "test_suit": [6, 668], "proven": [6, 36, 673, 677, 710], "entir": [6, 674, 675, 706, 713, 715, 716, 725], "complet": [6, 8, 14, 17, 243, 264, 670, 675, 676, 680, 710, 723], "comparison": [6, 8, 26, 74, 75, 312, 321, 653, 655, 668, 677, 708, 710, 713, 716], "against": [6, 8, 75, 255, 348, 412, 472, 481, 525, 655, 656, 664, 667, 668, 676, 680, 683, 705, 707, 708], "no_step": 6, "wherea": [6, 8, 668, 713, 722, 724], "clone": [6, 242, 650, 668, 670, 675, 676, 723], "tab": [6, 723], "full_run": [6, 655, 683, 684, 686, 688, 694, 706, 710, 713], "restart_run": [6, 82, 87, 99, 114, 150, 164, 171, 229, 239, 655, 683, 684, 686, 688, 694, 706, 710, 713], "preced": [6, 36], "serial": [6, 20, 666, 668, 721], "structur": [6, 8, 673, 676, 690, 710], "onto": [6, 191, 197, 206, 207, 214, 252, 264, 275, 442, 657, 670, 690, 712, 721], "whose": [6, 605, 609, 610, 668], "pr": [6, 723, 725], "saniti": [6, 264], "print": [6, 8, 39, 75, 610, 611, 668, 669, 676, 725], "restructuredtext": 7, "label": [7, 676, 699, 723], "_ocean": 7, "dev_": 7, "prepend": 7, "_dev_ocean": 7, "_ocean_baroclinic_channel": 7, "_ocean_baroclinic_channel_default": 7, "_dev_ocean_baroclinic_channel": 7, "_dev_ocean_baroclinic_channel_default": 7, "who": [7, 670, 675, 676, 677, 698, 700], "citat": 7, "brief": [7, 675, 676], "awar": [7, 261, 668, 675, 676, 690, 699], "wish": [7, 8, 264, 668, 670, 674, 675, 710, 723, 725], "specif": [7, 8, 28, 242, 261, 650, 653, 655, 667, 668, 670, 673, 674, 675, 676, 677, 690, 693, 699, 710, 723, 725], "share": [7, 77, 201, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 264, 650, 651, 652, 653, 655, 658, 660, 661, 662, 664, 667, 668, 670, 673, 675, 676, 678, 683, 684, 685, 688, 690, 697, 698, 699, 700, 702, 706, 715, 717, 723], "public": [7, 8, 668, 677, 690], "underscor": [7, 675, 676], "currentmodul": 7, "autosummari": 7, "toctre": 7, "numpydoc": 7, "compute_land_ice_pressure_and_draft": [7, 264], "ssh": [7, 264, 266, 267, 268, 420, 422, 642, 644, 645, 646, 647, 648, 649, 650, 652, 653, 655, 658, 661, 668, 675, 677, 698, 700, 701, 707, 708, 710, 712, 713, 716], "modifysshmask": 7, "ref_dens": [7, 268], "draft": [7, 268, 490, 658, 661, 701, 703, 710, 716], "paramet": [7, 9, 10, 11, 12, 14, 15, 16, 17, 18, 21, 23, 24, 25, 26, 27, 31, 32, 34, 35, 37, 38, 39, 42, 43, 45, 46, 47, 50, 55, 57, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 80, 82, 85, 87, 89, 91, 93, 95, 97, 99, 102, 104, 106, 108, 110, 112, 114, 117, 119, 121, 123, 124, 127, 129, 132, 135, 138, 141, 145, 148, 150, 153, 156, 158, 160, 162, 164, 167, 169, 171, 174, 176, 178, 180, 182, 183, 184, 187, 188, 189, 190, 191, 192, 195, 196, 197, 198, 201, 202, 203, 205, 206, 207, 208, 211, 213, 214, 215, 219, 221, 224, 226, 229, 232, 235, 237, 239, 266, 267, 268, 269, 272, 273, 275, 276, 277, 278, 280, 281, 284, 287, 290, 293, 296, 299, 302, 306, 308, 310, 312, 315, 317, 319, 321, 324, 327, 328, 330, 334, 337, 341, 342, 345, 348, 350, 353, 355, 357, 359, 361, 363, 366, 369, 372, 375, 378, 381, 383, 386, 389, 391, 394, 396, 399, 400, 401, 404, 407, 411, 413, 415, 417, 420, 427, 430, 433, 436, 439, 442, 447, 450, 453, 454, 457, 460, 462, 465, 468, 471, 473, 475, 477, 478, 480, 482, 485, 486, 489, 490, 491, 493, 495, 498, 501, 503, 506, 508, 509, 510, 512, 513, 514, 518, 522, 524, 526, 528, 530, 533, 535, 539, 543, 546, 547, 549, 552, 554, 556, 558, 561, 564, 566, 570, 572, 575, 578, 580, 584, 586, 589, 592, 594, 598, 600, 603, 604, 605, 606, 609, 610, 611, 612, 613, 616, 618, 622, 624, 628, 631, 632, 635, 637, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 655, 664, 667, 668, 673, 686, 687, 690, 691, 692, 694, 706, 710, 713, 715, 716, 719, 722], "xarrai": [7, 266, 268, 489, 506, 508, 510, 518, 642, 643, 644, 645, 646, 647, 648, 649, 668, 675, 676], "dataarrai": [7, 266, 268, 508, 510, 643, 644, 645, 646, 647, 668], "mask": [7, 264, 268, 272, 489, 506, 642, 645, 648, 649, 655, 661, 668, 675, 677, 703, 710, 712], "landicepressur": [7, 264, 267, 268, 655, 661, 668, 701, 710, 713, 716], "deviat": [7, 268], "densiti": [7, 8, 146, 264, 268, 276, 675, 686, 687, 691, 692, 694, 701, 716, 719], "seawat": [7, 268, 716], "displac": [7, 268, 701], "landicedraft": [7, 264, 268, 661, 716], "equal": [7, 249, 268, 669, 707], "entri": [7, 33, 70, 71, 661, 716], "side": [7, 717], "colon": 7, "doubl": [7, 668, 719], "quot": 7, "interfer": 7, "keyword": [7, 8, 668, 676], "arg": [7, 8, 65], "On": [7, 8, 676, 699, 726], "indent": [7, 668], "obviou": [7, 668, 675], "els": [7, 8, 668, 675], "meant": [8, 669, 676, 677, 680, 682, 683, 687, 693, 705], "list_cas": 8, "list_machin": [8, 669], "list_suit": 8, "anywher": [8, 670], "setup_cas": 8, "clean_cas": 8, "setup_suit": 8, "clean_suit": 8, "product": [8, 420, 667, 712], "ntask": [8, 11, 18, 21, 60, 65, 82, 87, 99, 114, 135, 150, 164, 171, 229, 239, 287, 308, 317, 363, 375, 457, 465, 473, 498, 526, 651, 655, 660, 668, 674, 675, 676], "cpus_per_task": [8, 11, 18, 21, 65, 668], "caveat": 8, "sit": 8, "idl": 8, "fraction": [8, 82, 243, 489, 490, 661, 675, 681, 703, 706, 713, 715, 716, 717, 718, 719, 722], "min_task": [8, 11, 21, 65, 82, 87, 99, 114, 135, 150, 164, 171, 229, 239, 287, 308, 317, 363, 375, 457, 465, 473, 498, 526, 538, 651, 655, 667, 668, 674, 675, 676], "min_cpus_per_task": [8, 11, 21, 65, 668], "fewest": 8, "run_test": [8, 668, 676], "run_single_step": 8, "cpu": [8, 261, 668, 723], "retriev": [8, 671], "text": [8, 709], "txt": [8, 72, 73, 668, 671], "case_output": 8, "implement": [8, 243, 244, 245, 246, 247, 250, 264, 490, 651, 652, 653, 654, 656, 657, 658, 660, 661, 662, 663, 664, 665, 666, 667, 669, 675, 676, 680, 681, 682, 683, 684, 685, 688, 701, 706, 709, 710, 711, 718, 719, 720, 721, 722], "termin": [8, 668, 676], "window": [8, 682, 683, 685, 688], "update_cach": 8, "enabl": [8, 632, 655, 664, 667, 668, 671, 677, 680, 698, 700, 710, 722], "parser": [8, 36], "mpasconfigpars": 8, "compassconfigpars": [8, 11, 26, 37, 60, 63, 64, 66, 67, 93, 108, 123, 182, 187, 201, 202, 278, 280, 399, 400, 453, 631, 640, 642, 643, 644, 648, 649], "convert": [8, 507, 567, 581, 595, 619, 668, 674, 675, 676], "add_from_packag": 8, "make_diagnostics_fil": [8, 710], "makediagnosticsfil": 8, "behavior": [8, 69, 668, 674, 675, 680, 683, 705, 716], "getinteg": 8, "getfloat": [8, 664, 668, 674, 675, 676], "getboolean": [8, 668, 675], "getlist": 8, "integ": [8, 606], "getexpress": 8, "tupl": [8, 512], "rang": [8, 264, 655, 687, 701, 719], "arang": 8, "check_cal": [8, 668], "won": [8, 669, 674, 675, 676, 677], "captur": [8, 676], "insid": [8, 668, 669, 675, 716], "subprocess": [8, 11, 65, 68, 668, 669, 671, 676], "trick": [8, 245, 668], "snippet": [8, 675], "setup_mesh": [8, 244, 245, 668, 682, 683, 685, 688], "create_landice_grid_from_generic_mpas_grid": [8, 244, 245, 246, 247, 250], "mpas_grid": [8, 245, 668], "o": [8, 655, 669, 670, 676, 677, 723], "landice_grid": [8, 668], "l": [8, 75, 698, 700], "relat": [8, 23, 79, 242, 245, 248, 250, 255, 256, 264, 511, 519, 650, 651, 652, 653, 655, 658, 660, 661, 662, 664, 667, 668, 669, 670, 671, 675, 677, 680, 682, 683, 684, 685, 688, 695, 696, 697, 698, 699, 700, 701, 703, 706, 707, 708, 710, 712, 713, 715, 716, 717, 718, 719, 721, 722, 723], "intern": [8, 11, 26, 471, 473, 475, 477, 478, 480, 482, 660, 668, 671, 715], "importlib": [8, 668], "though": [8, 11, 668, 669, 675, 676, 710], "whenev": [8, 668, 675, 676], "step_dir": 8, "database_root": 8, "download_path": 8, "join": 8, "remote_filenam": 8, "bedmachineantarctica_and_gebco_2019_0": 8, "05_degre": 8, "200128": 8, "local_filenam": 8, "topographi": [8, 264, 489, 490, 512, 645, 655, 661, 668, 675, 701, 703, 706, 712, 713, 715, 716, 717, 718, 719, 722, 724], "file_nam": 8, "web": [8, 612, 668, 677], "anl": [8, 668, 677], "dest_path": [8, 37], "remot": [8, 12, 670], "quasiuniformsphericalmeshstep": [8, 264, 654, 655], "icosahedralmeshstep": [8, 654, 655], "jigsaw": [8, 43, 47, 49, 50, 52, 54, 55, 324, 327, 668, 686, 694, 710], "opt": [8, 55], "make_jigsaw_mesh": [8, 50], "icosahedr": [8, 43, 45, 324, 327, 655, 709], "smooth": [8, 490, 661, 701, 716], "hand": [8, 669], "subdivis": [8, 43, 44, 45, 46, 47], "icosahedron": [8, 44, 45, 46, 47], "6": [8, 45, 246, 520, 655, 656, 662, 667, 668, 675, 676, 684, 687, 690, 704, 707, 708, 717, 722, 723], "120": [8, 45, 606, 655, 667, 707, 709, 720], "7": [8, 45, 661, 667, 682, 690, 698, 700, 709, 710, 713, 716, 722, 723], "9": [8, 45, 512, 655, 667, 676, 699, 710, 716, 718, 723], "94": [8, 45], "spherical_mesh": [8, 51, 264, 710, 712], "cell_width": [8, 43, 44, 45, 46, 50, 51, 52, 57, 273, 381, 389, 394, 450], "icosahedral_method": 8, "jigsaw_mesh_filenam": 8, "msh": 8, "jigsaw_geom_filenam": 8, "geom": 8, "jigsaw_jcfg_filenam": 8, "jig": 8, "jigsaw_hfun_filenam": 8, "spac": 8, "triangles_filenam": 8, "mesh_triangl": 8, "mpas_mesh_filenam": 8, "plot_cell_width": 8, "cell_width_filenam": [8, 57], "cellwidthvslatlon": 8, "cell_width_image_filenam": 8, "cellwidthglob": 8, "cell_width_colormap": 8, "3wbgy5": 8, "add_mesh_dens": 8, "vtk": 8, "convert_to_vtk": 8, "vtk_dir": 8, "base_mesh_vtk": 8, "extract": [8, 655], "sphere": [8, 560, 561, 575, 589, 613, 654, 663, 665, 666, 709, 720, 721], "vtk_lat_lon": 8, "librari": [8, 248, 255, 256, 257, 261, 670, 675, 676, 680, 695, 696, 697, 698, 699, 700, 711, 721, 723], "moment": 8, "openmp_thread": [8, 11, 21, 65, 82, 87, 99, 114, 135, 150, 164, 171, 229, 239, 287, 308, 317, 363, 375, 457, 465, 473, 498, 526, 655, 660, 668, 675, 676], "gpmeti": [8, 677, 710], "divid": [8, 566, 580, 594, 618, 656, 676, 681, 703, 707], "partition_graph": [8, 61, 664, 667], "circumst": [8, 701], "wast": 8, "update_namelist_pio": 8, "config_pio_num_iotask": [8, 668], "config_pio_strid": [8, 668], "v2": [8, 655, 673, 677, 703, 710], "feel": [8, 668, 674, 675, 676], "safe": [8, 668, 670], "update_pio": [8, 61], "yourself": [8, 675, 699], "fact": [8, 11, 675], "culler": [8, 676], "make_graph_fil": [8, 668], "field": [8, 57, 59, 190, 196, 252, 255, 264, 272, 275, 443, 444, 485, 489, 642, 648, 649, 651, 655, 658, 660, 661, 662, 664, 665, 667, 675, 680, 687, 690, 701, 706, 708, 709, 710, 712, 713, 715, 716, 717, 718, 719, 720, 722], "weight": [8, 59, 187, 202, 264, 375, 454, 465, 498, 642, 648, 649, 683, 701, 703, 710], "weight_field": [8, 59], "critic": [8, 264, 272, 674, 675, 710], "filename2": [8, 75], "simpl": [8, 490, 661, 669, 675, 676, 716, 723], "temperatur": [8, 110, 112, 206, 246, 247, 264, 517, 552, 651, 653, 655, 656, 658, 660, 661, 662, 664, 667, 668, 675, 684, 685, 690, 705, 706, 708, 709, 710, 713, 715, 716, 717, 718, 719, 722], "salin": [8, 264, 515, 516, 552, 651, 653, 655, 656, 658, 660, 661, 662, 664, 667, 668, 675, 690, 705, 706, 708, 709, 710, 713, 715, 716, 717, 718, 719, 722], "prognost": [8, 655, 658, 661, 680, 683, 684, 686, 687, 688, 694, 705, 706, 710, 713, 715, 717, 719, 722], "4proc": [8, 706, 710], "8proc": [8, 706, 710], "alter": [8, 485, 643, 644, 661, 668, 673, 675, 703, 706, 709, 710, 713, 715, 716, 717, 718, 719, 720, 721, 722], "skip_if_step_not_run": [8, 75, 668], "forc": [8, 164, 183, 184, 187, 188, 189, 191, 195, 197, 201, 202, 203, 211, 214, 252, 264, 442, 485, 486, 491, 495, 653, 657, 661, 664, 690, 716, 719, 721, 722, 724], "failur": 8, "quiet": [8, 69, 75, 676], "report": 8, "threshold": [8, 264, 490, 661, 687, 709, 710, 712, 716, 718], "l1": [8, 75], "00000000000000e": 8, "l2": [8, 75, 603, 604, 605, 606, 611], "l_infin": 8, "linf": [8, 75, 603, 604, 605, 606, 611], "test_nightly_latest": 8, "1thread": [8, 706, 710], "2thread": [8, 706, 710], "test_20210616": 8, "further_valid": 8, "disabl": [8, 662, 680, 687, 710, 724], "check_output": [8, 75], "unlik": [8, 675, 676, 677, 690, 719, 722], "zero": [8, 174, 250, 485, 643, 644, 645, 646, 647, 651, 656, 658, 660, 661, 667, 674, 676, 684, 688, 713, 716], "l1_norm": [8, 75], "l2_norm": [8, 75], "linf_norm": [8, 75], "nonzero": [8, 75, 665, 720], "easiest": [8, 675], "clobber": 8, "qualit": [8, 668], "judgment": 8, "compare_tim": 8, "rundir1": [8, 74], "92264": 8, "82317": 8, "percent": 8, "781019682649793": 8, "speedup": 8, "1208377370409515": 8, "hous": [9, 710], "sw": 9, "dict": [9, 11, 15, 17, 23, 25, 26, 31, 67, 71, 337, 420, 540, 604, 605, 610, 668, 674, 676], "max_memori": [11, 21], "run_as_subprocess": [11, 668], "smallest": [11, 668, 672, 703, 724], "unit": [11, 508, 510, 520, 567, 581, 595, 619, 668, 672, 706, 708, 715, 717, 724], "necessarili": [11, 12, 672, 710], "openmp": [11, 21, 65, 82, 87, 99, 114, 135, 150, 164, 171, 229, 239, 257, 258, 259, 260, 287, 317, 363, 375, 457, 465, 473, 498, 526, 668, 675, 695, 696, 697, 698, 700, 721], "parallel": [11, 20, 21, 666, 668, 669, 670, 671, 672, 675, 677, 695, 696, 697, 698, 699, 700, 721, 723, 724], "input_data": 11, "namelist_data": 11, "streams_data": 11, "machine_info": 11, "machineinfo": 11, "base_work_dir": [11, 26, 668], "log_filenam": [11, 26, 668], "At": [11, 26, 655, 668, 675, 676, 687, 691, 692, 716], "redirect": [11, 668], "work_dir_target": [12, 668], "out_nam": [14, 15, 17, 23, 24, 25, 668], "render": [17, 25, 668, 676], "available_cor": 18, "everi": [19, 651, 658, 668, 669, 670, 671, 672, 674, 675, 676, 706, 713], "subtask": 21, "runtime_setup": [21, 29, 86, 96, 98, 105, 111, 113, 120, 126, 131, 142, 144, 149, 154, 161, 168, 170, 177, 179, 222, 227, 233, 236, 238, 283, 286, 295, 298, 304, 352, 380, 449, 456, 464, 630, 639], "consist": [24, 61, 267, 552, 650, 658, 668, 675, 676, 677, 682, 701, 713, 716], "decomposit": [26, 156, 264, 275, 281, 672, 680, 682, 684, 686, 687, 694], "stdout_logg": 26, "goe": [26, 668, 675, 676], "regardless": [26, 655], "statu": 26, "prior": [28, 668], "constrain_resourc": [29, 86, 96, 98, 105, 111, 113, 120, 126, 131, 142, 144, 149, 154, 161, 168, 170, 177, 179, 222, 227, 233, 236, 238, 283, 286, 295, 298, 304, 352, 380, 449, 456, 464, 630, 639], "step_path": 34, "datestamp": 34, "dry": [34, 305, 314, 317, 319, 321, 652, 653, 661, 708, 712, 716], "meta": 36, "link_nam": 38, "stackoverflow": 38, "55742015": 38, "7728169": 38, "symbol": [38, 668], "fileexistserror": 38, "try": [38, 668, 669, 670, 671, 675, 676, 677, 700, 710, 723], "isadirectoryerror": 38, "decomposition_test": [42, 244, 245, 668, 680, 723], "decompositiontest": [42, 246, 248, 249, 250, 256, 668], "turquois": 42, "mhoffman": 42, "ndarrai": [44, 51, 52, 57, 506, 603, 606, 611, 640, 641], "static": [45, 46, 676], "rule": 45, "thumb": 45, "close": [46, 156, 272, 658, 673, 709], "subclass": [47, 50, 51, 52, 56], "jigsawpi": [55, 668], "jigsaw_jig_t": 55, "finish": 56, "mesh_filenam": [59, 710], "graph_filenam": [59, 275, 276, 667], "graph_fil": [60, 61], "interact": [63, 655, 698, 699, 700, 723], "batch": 63, "slurm_job_id": 63, "substep": 65, "cpus_per_nod": 66, "step_is_subprocess": 68, "is_test_cas": 69, "steps_not_to_run": 69, "mpas_model_path": [70, 71, 73], "cached_step": 70, "copy_execut": [70, 71, 73, 723], "rundir2": 74, "norm": [75, 605, 607, 720], "infin": [75, 720], "toler": [75, 244, 680, 687], "exclud": [75, 710, 723], "assess": [79, 178, 243, 401, 655, 681, 689], "timestep": [79, 243, 680, 681], "calv": [79, 80, 82, 156, 162, 164, 243, 248, 256, 490, 661, 680, 681, 687, 716], "pre": [79, 228, 234, 249, 681, 686, 687, 694], "veloc": [79, 82, 95, 97, 99, 104, 141, 148, 150, 153, 156, 162, 164, 243, 255, 256, 411, 442, 511, 519, 651, 655, 656, 658, 660, 661, 662, 667, 668, 670, 676, 680, 681, 682, 683, 686, 687, 694, 705, 709, 710, 711, 713, 718, 720, 722, 723], "velo": [80, 82, 680], "config_adaptive_timestep_calvingcfl_fract": [80, 243], "calvingdtconverg": [80, 243], "calv_dt_frac": 82, "dt": [82, 331, 667, 681, 709, 718], "mesh_fil": [82, 164, 436, 437, 690], "twice": [82, 87, 99, 114, 150, 164, 171, 229, 239], "mismip": [82, 228, 229, 232, 255, 680, 693, 716], "humboldt": [82, 242, 251, 679, 680, 681, 689], "thwait": [82, 242, 251, 679, 680, 689], "specified_calving_veloc": [82, 164, 680, 681], "eigencalv": [82, 164, 680], "von_mises_stress": [82, 164, 680], "fo": [82, 95, 97, 99, 104, 141, 148, 150, 153, 156, 162, 164, 243, 248, 255, 256, 668, 680, 682, 683, 686, 687, 694], "circular": [84, 85, 682, 719], "four": [85, 95, 110, 156, 252, 264, 668, 690, 716, 719], "input_dir": [91, 106, 180], "velo_solv": [95, 97, 99, 104, 141, 148, 150, 153, 156, 162, 164, 248, 668], "sia": [95, 97, 99, 104, 141, 148, 150, 153, 156, 162, 164, 248, 668, 670, 680, 683, 686], "segment": [97, 112, 148, 162, 169, 237, 655], "thermal_solv": [110, 112], "enthalpi": [110, 112, 124, 129, 134, 138, 246, 247, 684, 685], "formul": [110, 112], "thermodynam": [110, 112, 680], "standardexperi": [121, 246], "kleiner": [124, 129, 247, 685], "benchmark": [124, 129, 134, 138, 247, 685], "enthalpybenchmark": [124, 129, 247], "sheet": [141, 148, 247, 248, 250, 252, 489, 661, 683, 684, 685, 686, 688, 690, 701, 710, 716], "eight": 141, "high": [143, 669, 696, 699, 710, 716, 717, 719, 722], "basal": [143, 207, 247, 252, 682, 684, 685, 686, 687, 690, 691, 692, 694], "friction": [143, 511, 519, 655, 682, 686, 687, 691, 692, 694, 710], "optim": [143, 686, 687, 691, 692, 694], "definit": [146, 668, 674, 675, 676], "region": [146, 195, 249, 253, 254, 652, 655, 657, 673, 677, 707, 710, 712, 713, 716, 722], "observ": [146, 211, 213, 252, 420, 422, 436, 437, 657, 673, 690, 691, 692, 712], "flow": [146, 665, 683, 707, 708, 709, 716, 718, 720], "speed": [146, 686, 687, 691, 692, 694], "distanc": [146, 490, 661, 675, 686, 687, 691, 692, 694, 706, 715, 722], "margin": [146, 686, 687, 691, 692, 694], "20km": [150, 667, 705, 722, 725], "calving_law": [156, 162, 164], "damag": [156, 162, 164, 687], "face_melt": [156, 162, 164], "law": [156, 162, 164, 680, 681, 687], "face": [156, 162, 164], "melt": [156, 162, 164, 206, 207, 252, 513, 519, 655, 661, 690, 701, 710, 713, 716], "proc_list": 156, "pair": [156, 605, 687, 720], "count": [156, 235, 655, 674, 710], "3km": [156, 162, 164], "forcing_fil": [164, 442], "damagecalv": [164, 680], "ismip6_retreat": [164, 680], "radial": [166, 167, 169, 171, 176, 250, 682, 683, 688], "symmetr": [166, 167, 169, 171, 176, 250, 682, 683, 684, 688, 715], "hydrologi": [166, 250, 668, 683], "hydrolog": [167, 169, 171, 176, 250, 688], "three": [167, 276, 662, 675, 676, 686, 689, 690, 694, 699, 710, 717, 720], "hydroradi": [167, 176, 178, 250], "exact": [174, 178, 250, 654, 663, 665, 669, 688], "precomput": 174, "steadi": [176, 250, 688, 716], "reach": [176, 716], "drift": 178, "ismip6": [183, 184, 187, 188, 189, 190, 191, 192, 195, 196, 197, 198, 201, 202, 203, 205, 206, 207, 208, 211, 214, 215, 252, 655, 690], "atmospher": [183, 442, 655, 657], "8km": [184, 191, 203, 211, 214, 690, 719], "polarstereo": [184, 191, 203, 211, 214, 252, 690], "regrid": [184, 203, 206, 211, 252, 690], "ismip6forc": [184, 203, 211, 252], "ismip6_grid_fil": [187, 202], "mapping_fil": [187, 202], "mali_mesh_fil": [187, 191, 196, 197, 202, 207, 214, 690], "method_remap": [187, 191, 197, 202, 207, 214, 690], "remap": [187, 190, 191, 192, 196, 197, 198, 202, 205, 207, 208, 214, 215, 252, 264, 275, 690], "polarstero": [187, 202], "unstructur": [187, 202, 252, 690, 721], "esmf_regridweightgen": [187, 202], "source_grid_fil": 188, "source_grid_scripfil": 188, "scripfil": 188, "y": [188, 506, 512, 651, 652, 653, 655, 658, 660, 661, 667, 668, 675, 676, 698, 700, 706, 708, 711, 713, 715, 716, 718, 722], "dimens": [188, 708, 717], "smb": [188, 190, 191, 196, 197, 252, 690], "scrip": [188, 252, 655, 676, 677, 710], "input_fil": [189, 191, 195, 197, 207, 214], "mass": [189, 195, 252, 690, 701, 720], "racmo_clim_fil": 190, "output_clim_ismip6_fil": 190, "output_file_fin": 190, "anomali": [190, 196, 252, 690, 722], "racmo": [190, 195, 197, 690], "1995": [190, 690], "2017": [190, 690, 703], "correct": [190, 206, 252, 264, 670, 690], "output_fil": [191, 192, 196, 197, 198, 207, 208, 214, 215, 668], "mali_mesh_nam": [191, 197, 207, 214, 690], "nativ": [191, 197, 214, 252, 690], "remapped_file_temp": [192, 198, 208, 215], "temporari": [192, 198, 206, 207, 208, 215], "rotat": [197, 665, 690, 709, 720], "check_model_opt": 201, "scenario": [201, 690], "period_endyear": [201, 690], "basalmelt": [203, 205], "coeff": 203, "oceanbas": [205, 252], "basin_fil": 206, "coeff_gamma0_deltat_fil": 206, "combined_file_temp": [206, 207], "imbie2": [206, 252, 690], "basin": [206, 252, 655, 664, 690, 719], "rate": [206, 513, 519, 603, 611, 654, 661, 663, 665, 684, 701, 709, 710, 716, 718, 720], "coeffici": [206, 252, 317, 321, 653, 667, 676, 690, 708, 711, 719, 722], "gamma0": 206, "process_ob": [211, 213], "thermal": [211, 214, 246, 247, 252, 511, 519, 684, 690, 719], "cmip": [211, 213, 252], "oceantherm": [213, 252], "kogebugt": [226, 254], "smoke": [232, 255, 655, 693, 694], "14km": [234, 694], "landice_model": [242, 668, 670, 677], "core_path": [242, 245, 650, 668, 677], "submodul": [242, 650, 668, 670, 675, 676, 723], "guarante": [242, 650, 670], "recurs": [242, 650, 669, 670, 675, 676, 723], "calving_dt_converg": [242, 251, 679, 689], "circular_shelf": [242, 251, 679, 680, 689, 723], "hydro_radi": [242, 251, 679, 680, 689, 724], "ismip6_forc": [242, 251, 679, 689], "kangerlussuaq": [242, 251, 679, 689], "koge_bugt_": [242, 251, 679, 689], "mismipplu": [242, 251, 679, 689], "physic": [243, 675, 680, 681, 687, 689, 718], "addition": [243, 244, 245, 246, 247, 250, 651, 652, 653, 655, 658, 660, 661, 662, 664, 667, 687, 690, 695, 696, 697, 698, 700], "globalstat": [243, 710], "hardcod": 243, "smaller": [243, 264, 655, 723], "cost": [243, 693], "analyz": [243, 547, 664, 674, 720], "annoy": 243, "occasion": 243, "fine": [243, 653, 668, 675, 676], "logic": [243, 675, 706, 715], "circularshelf": 244, "horizont": [244, 245, 246, 247, 250, 264, 454, 486, 491, 493, 495, 498, 501, 503, 532, 543, 651, 655, 656, 658, 660, 661, 674, 676, 683, 684, 688, 701, 706, 707, 708, 710, 711, 712, 713, 715, 716, 717, 718, 722], "planar_hex": [244, 245, 246, 247, 250, 651, 652, 653, 658, 660, 661, 662, 667, 668, 675, 676], "make_planar_hex_mesh": [244, 245, 246, 247, 250, 651, 652, 653, 658, 660, 661, 662, 667, 668, 675, 676], "privat": [244, 245, 246, 247, 250, 674], "_setup_circular_shelf_initial_condit": 244, "circular_shelf_viz": [244, 682], "200": [244, 245, 246, 247, 667, 668, 675, 683, 684, 685, 716], "ureconstructx": 244, "ureconstructi": 244, "2000": [245, 658, 668, 683, 684, 713, 716, 722], "durat": [245, 247, 248, 249, 250, 255, 256, 486, 540, 651, 652, 653, 655, 658, 660, 661, 662, 668, 683, 710, 715, 718], "dome_varres_grid": [245, 668], "server_base_url": [245, 677], "_setup_dome_initial_condit": [245, 247], "dome_viz": [245, 668, 683], "former": [245, 246, 248, 250, 256], "25": [246, 247, 656, 660, 676, 684, 708, 715, 717, 719], "globalstatsoutput": [246, 658, 661], "runexperi": 246, "letter": [246, 675, 676, 690], "_setup_eismint2_initial_condit": 246, "000": [246, 247, 250, 676, 684, 685, 688], "basaltemperatur": 246, "heatdissip": 246, "restarttest": [246, 248, 249, 250, 256, 651, 655, 658, 668], "et": [247, 250, 312, 675, 679, 683, 684, 685, 688, 703, 706, 707, 708, 709, 715, 716, 719, 720, 722], "al": [247, 250, 312, 675, 679, 683, 684, 685, 688, 703, 706, 707, 708, 709, 715, 716, 719, 720, 722], "2015": [247, 250, 675, 685, 688, 706, 715, 719, 722], "air": [247, 684, 685], "temper": 247, "heat": [247, 485, 511, 685, 713, 716], "basal_heat_flux": [247, 685], "042": [247, 685], "k": [247, 264, 676, 684, 685, 703, 711], "surface_air_temperatur": [247, 685], "243": [247, 685], "100": [247, 513, 655, 658, 664, 667, 675, 676, 680, 684, 685, 703, 716, 719, 722], "phase1_surface_air_temperatur": [247, 685], "phase2_surface_air_temperatur": [247, 685], "268": [247, 685], "150": [247, 685, 709, 719, 720], "phase3_surface_air_temperatur": [247, 685], "analyt": [247, 321, 653, 656, 666, 676, 682, 683, 708, 711, 719, 721, 724], "mat": [247, 668], "400": [247, 685], "270": [247, 685], "dai": [248, 256, 296, 321, 477, 566, 580, 594, 618, 651, 654, 655, 660, 663, 665, 668, 675, 686, 694, 706, 708, 709, 710, 715, 716, 722], "coars": [248, 256, 686, 694, 710, 716], "20": [248, 296, 477, 651, 655, 658, 660, 661, 667, 668, 675, 686, 706, 708, 713, 715, 716, 717, 719, 720, 722], "albany_input": [248, 255], "yaml": [248, 255, 700], "gis20km": 248, "210608": [248, 256], "smoketest": [248, 255, 668], "highresmesh": [248, 256], "glacier": [249, 253, 256, 680, 687, 691, 693, 694], "meshgen": [249, 253, 254], "restartn_test": 249, "plu": [249, 672, 687], "_setup_hydro_radial_initial_condit": 250, "thin": [250, 264, 490, 491, 495, 661, 688, 710, 712, 716], "numer": [250, 264, 668, 701], "bueler": [250, 683, 688], "iscontrol": 250, "hydro_radial_viz": [250, 688], "spinuptest": 250, "steadystatedrifttest": 250, "month": [250, 661, 684, 687, 688, 702, 710, 714, 716, 722], "waterthick": 250, "waterpressur": 250, "ismip6_": 252, "intercomparison": [252, 690, 716], "cmip6": [252, 690], "protocol": [252, 690, 716], "ocean_thermal_ob": 252, "process_smb": [252, 690], "process_smb_racmo": [252, 690], "process_basal_melt": [252, 690], "process_thermal_forc": [252, 690], "build_mapping_fil": 252, "destin": 252, "parameter": [252, 690, 710, 713], "util": [252, 669, 690], "500m": [254, 692], "koge": [254, 692], "bugt": [254, 692], "surfacespe": 256, "load_dev_compass_1": [257, 258, 259, 260, 261, 262, 675, 676], "0_anvil_intel_impi": [257, 261], "sh": [257, 258, 259, 260, 261, 262, 670, 671, 675, 676, 695, 696, 697, 698, 700, 723], "openmpi": [257, 261, 670, 673, 695, 696, 723], "mvapich": [257, 261, 695], "impi": [257, 261, 695, 696, 697, 699], "ifort": [257, 261, 695], "ve": [257, 258, 260, 262, 668, 675], "0_anvil_gnu_mvapich": 257, "gfortran": [257, 258, 261, 670, 695, 696], "0_chrysalis_intel_impi": [258, 675, 676], "0_chrysalis_gnu_openmpi": 258, "soon": [259, 690, 723], "0_compy_intel_impi": 259, "architectur": 260, "0_cori": 260, "haswell_intel_mpt": 260, "nersc": [260, 261, 262, 698, 700], "haswell_gnu_mpt": 260, "load_compass_env": [261, 670, 723], "right": [261, 264, 655, 668, 670, 675, 676, 677, 681, 703, 709, 717, 722, 723], "gnu": [261, 670, 697, 699, 723], "lib": 261, "intel": [261, 670, 675, 676, 699], "mpt": [261, 698], "pm": [261, 700, 723], "mpich": [261, 670, 673, 700, 723], "compymcnodefac": [261, 699], "perlmutt": [261, 699, 723], "pretti": [261, 668, 669, 675, 677], "forg": [261, 673, 723], "linux": [261, 670, 699], "configure_compass_env": [261, 670, 671, 675, 676], "conda_path": [261, 670], "osx": [261, 699], "clang": [261, 670], "0_": 261, "alpha": 262, "2_pm": 262, "cpu_gnu_mpich": 262, "expand": [264, 703], "grid_1d": 264, "generate_1d_grid": 264, "star": [264, 453, 454, 462, 486, 491, 495, 498, 647, 649, 658, 661, 675, 706, 708, 713, 715, 716, 717, 718, 722, 725], "init_vertical_coord": [264, 675], "minlevelcel": [264, 642, 644, 645, 646, 647, 648, 649], "maxlevelcel": [264, 642, 643, 644, 645, 646, 647, 648, 649, 668, 676], "cellmask": [264, 642, 645, 648, 649], "zmid": [264, 642, 648, 649], "restingthick": [264, 642, 647, 648, 649, 668, 676], "bottomdepth": [264, 642, 643, 645, 646, 647, 648, 649, 668, 675, 676], "spheric": [264, 269, 654, 655, 666, 709, 710, 712, 721], "cullmeshstep": [264, 655], "cull_mesh": [264, 269], "natur": [264, 272, 710], "earth": [264, 272, 710], "coverag": [264, 272, 680], "north": [264, 272, 655, 706, 710], "antarct": [264, 272, 655, 677, 690, 701, 710, 716], "ground": [264, 272, 489, 490, 491, 495, 661, 682, 694, 710, 716], "bedmachineantarctica": [264, 272, 710], "transect": [264, 272, 506, 655, 677, 710], "passag": [264, 272, 710], "with_critical_passag": [264, 272], "seed": [264, 272, 276], "flood": [264, 272, 652, 710], "lock": [264, 272], "floodplainmeshstep": 264, "preserve_floodplain": [264, 269, 272, 273, 450], "srtm15_plus_earth_relief_15": 264, "elev": [264, 272, 642, 648, 649, 661, 703, 710, 712], "floodplain_elev": [264, 710, 712], "inject_bathymetri": 264, "inject_preserve_floodplain": 264, "compute_haney_numb": 264, "1991": [264, 701], "measur": [264, 710, 719], "gradient": [264, 675, 701, 706, 715, 719, 722], "tilt": 264, "r_": 264, "x1": 264, "frac": [264, 668, 675, 703, 722], "z_": [264, 703], "textrm": 264, "c_2": 264, "c_1": 264, "edg": [264, 266, 710, 713, 717], "adjac": [264, 703, 713], "middl": [264, 642, 648, 649, 661, 716], "boussinesq": 264, "adjust_ssh": 264, "imbal": 264, "period": [264, 411, 420, 535, 543, 651, 652, 653, 656, 658, 660, 662, 663, 667, 668, 675, 676, 681, 690, 706, 708, 712, 713, 715, 718, 722], "hour": [264, 653, 655, 656, 661, 662, 668, 698, 700, 701, 716, 717, 718, 723], "translat": 264, "compens": [264, 701], "repeat": [264, 690], "fix": [264, 276, 512, 654, 661, 668, 713, 716], "elimin": 264, "substanti": [264, 670, 675], "prevent": [264, 485, 661, 668, 701, 716], "caus": [264, 670, 700, 703], "instabl": 264, "agnost": 264, "light": [264, 719, 722], "buoyanc": [264, 276, 667], "isopycn": [264, 276], "passiv": [264, 276, 560], "remap_particl": 264, "plot_initial_st": 264, "histogram": [264, 277], "bottom": [264, 512, 642, 643, 644, 645, 646, 647, 648, 649, 653, 655, 661, 667, 675, 677, 703, 706, 708, 711, 713, 715, 716, 717, 718, 719, 722], "depth": [264, 399, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 655, 656, 661, 667, 675, 676, 677, 703, 706, 710, 711, 713, 715, 716, 717, 718, 719, 722], "distribut": [264, 654, 663, 664, 665, 667, 710, 719, 721, 722], "plot_vertical_grid": 264, "bound": [264, 722], "ds_mesh": 266, "layer_thick": 266, "show_progress": 266, "rx1": 266, "bar": [266, 272, 508, 510], "haney_edg": 266, "haney_cel": 266, "iteration_count": 267, "modify_mask": 268, "base_mesh_step": 269, "do_inject_bathymetri": 269, "sphericalbasestep": [269, 655], "criteria": 269, "with_cav": 272, "custom_critical_passag": 272, "custom_land_blockag": 272, "use_progress_bar": 272, "process_count": 272, "blockag": [272, 710], "geojson": [272, 676], "cellseedmask": 272, "floodplain": [272, 652, 707, 712], "problemat": [272, 668], "init_filenam": [275, 276, 399, 667], "particle_filenam": [275, 276, 667], "posit": [275, 276, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 661, 694, 703, 722], "goal": 275, "currentblock": 275, "compli": 275, "nearest": [275, 437, 709], "neighbor": [275, 710], "form": [275, 276, 669, 676, 722, 724], "n_vert_level": 276, "vert_seed_typ": 276, "n_buoy_surf": 276, "pot_dens_min": 276, "1028": [276, 719], "pot_dens_max": 276, "1030": [276, 719], "spatial_filt": 276, "downsampl": 276, "seed_cent": 276, "seed_vertex": 276, "add_nois": 276, "cfl_min": 276, "005": 276, "densecent": 276, "southernoceanplanar": 276, "southernoceanxyz": 276, "spatial": 276, "filter": 276, "amg": 276, "epsilon": [276, 711], "vertex": 276, "gaussian": [276, 663, 718, 721], "nois": 276, "cfl": [276, 681], "perturb": [276, 706, 709, 715, 716], "input_file_nam": 277, "output_file_nam": 277, "grid_filenam": 278, "out_filenam": [278, 641], "shorter": [293, 462, 680, 684, 705], "energi": [296, 477, 668, 675, 706, 715], "dam": [305, 308, 310, 312, 652, 707], "wet": [305, 314, 652, 661, 712, 716], "dambreak": [306, 652], "experiment": [312, 652, 690, 707], "rom": [312, 321, 652, 653, 707, 708], "warner": [312, 707, 708], "2013": [312, 707, 708, 722], "slope": [314, 317, 319, 321, 653, 701, 708, 713, 719, 720, 722], "coord_typ": [315, 317, 319, 453, 454, 462, 653, 675, 703, 706, 708, 713, 715, 716, 717, 718, 722], "sigma": [315, 317, 319, 653, 708, 716], "single_lay": [315, 653, 708, 716], "dryingslop": [315, 653], "damping_coeff": [317, 321, 653], "rayleigh": [317, 321, 653, 655, 708, 710], "damp": [317, 321, 653, 655, 708, 710], "datatyp": 321, "cosinebel": [327, 330, 334, 654, 674], "rmsevalu": 328, "squar": [328, 547, 654, 662, 663, 718], "ncell": [328, 547, 655, 668, 675, 676], "hh": [331, 567, 581, 595, 619], "ss": [331, 567, 581, 595, 619], "member": [337, 342, 350, 353, 436, 558, 628, 632, 655, 657, 661, 664, 667, 676, 677, 705, 710, 712], "timeseriesstatmonthli": 342, "daili": [342, 710], "stage": [348, 668, 710, 716], "seaic": [350, 655, 710], "diagnost": [350, 353, 655, 677, 682, 695, 697, 698, 699, 700, 710, 723], "meridion": [350, 353, 655, 706, 715, 717, 722], "overturn": [350, 353, 501, 514, 655, 661, 716], "circul": [350, 353, 655, 716], "filesfore3sm": [353, 355, 357, 359, 361, 655, 668], "ntasks_from_config": 363, "min_tasks_from_config": 363, "threads_from_config": 363, "biogeochemistri": [369, 372, 655, 675, 676], "init_subdir": 369, "2d": [375, 452, 454, 457, 460, 462, 465, 468, 484, 486, 498, 561, 575, 589, 613, 713], "output_filenam": 399, "short_mesh_nam": [400, 655], "long_mesh_nam": [400, 655], "turbul": [410, 411, 413, 415, 417, 470, 656, 675, 676, 711], "doubli": [411, 535, 543, 656, 676, 718], "storm": [420, 427, 433, 436, 442, 712], "station": [420, 422, 423, 436, 437, 657, 712], "frmt": 420, "datetim": [420, 668], "min_dat": [420, 422], "max_data": 420, "pointstats_fil": [420, 421, 436], "pointwisestat": [420, 421, 436, 437, 657, 712], "labl": 420, "legend": [420, 676], "obs_fil": 422, "obs_typ": 422, "max_dat": 422, "timeseri": [422, 657, 712], "station_fil": [423, 436], "contiain": 436, "pointstat": 436, "stations_fil": 437, "wind": [442, 655, 657, 664, 712, 719, 722], "plot_interv": 442, "snap": [442, 443], "wind_fil": 442, "pres_fil": 442, "grid_fil": [442, 443], "data_fil": 443, "orig_data": 444, "interp_data": 444, "var_label": 444, "var_abrev": 444, "iceshelf2d": [454, 462, 658, 668, 669, 675, 676], "with_frazil": [457, 632, 635, 658, 705, 725], "cross": [468, 482, 506, 512, 661, 682, 715, 716, 717], "gotm": [470, 650, 659, 675, 676, 704, 714], "internalwav": [471, 477, 480, 660], "in_forcing_fil": 485, "out_forcing_fil": 485, "out_forcing_link": 485, "evapor": [485, 661, 716], "isomip": [485, 486, 490, 491, 493, 495, 501, 503, 506, 518, 661, 716], "evaporationflux": 485, "seaicesalinityflux": 485, "seaiceheatflux": 485, "salt": 485, "northern": [485, 655, 661, 675, 706, 713, 715, 716, 722], "boundari": [485, 652, 653, 655, 661, 663, 673, 686, 701, 706, 713, 715, 716, 717, 722, 724], "spillwai": [485, 652, 661], "rise": [485, 661, 713, 716], "run_dur": [486, 667], "vertical_coordin": [486, 491, 495, 498], "tidal_forc": [486, 495, 503], "time_varying_forc": [486, 491, 495], "thin_film_pres": [486, 490, 491, 495, 498, 661], "ocean0": [486, 491, 493, 495, 501, 503, 506, 518, 661], "ocean1": [486, 491, 493, 495, 501, 503, 506, 518, 661], "ocean2": [486, 491, 493, 495, 501, 503, 506, 518, 661], "dsmesh": [489, 506, 518, 668, 675, 676], "dsgeom": 489, "min_ocean_fract": [489, 716], "bisicl": [489, 490, 661, 716], "process_input_geometri": [489, 661], "dsmask": 489, "regioncellmask": 489, "infilenam": 490, "outfilenam": 490, "filtersigma": 490, "minicethick": 490, "scale": [490, 661, 667, 673, 710, 711, 716, 719, 720, 722, 723], "geometri": [490, 652, 661, 713, 716, 722], "scheme": [490, 661, 665, 690, 712, 716, 717, 720], "film": [490, 491, 495, 661, 716], "misomip1": 493, "time_varying_load": 495, "thin_film_prs": 495, "isomipplu": [495, 661], "barotrop": [501, 509, 657, 661, 712, 716], "slice": 505, "monthli": 505, "infold": [506, 518], "streamfunctionfold": 506, "outfold": [506, 507, 518], "expt": [506, 509, 518, 684], "sectioni": 506, "showprogress": 506, "plotter": [506, 518], "hold": [506, 518], "folder": [506, 518], "streamfunct": [506, 509, 514, 716], "axi": [506, 668, 675, 681, 720], "plane": 506, "montli": 506, "oceanmask": 506, "cavitymask": 506, "oceanpatch": 506, "patchcollect": 506, "polygon": 506, "cover": [506, 661, 690, 705, 710], "cavitypatch": 506, "horiz": 506, "vert": 506, "sectionmask": 506, "progressbar": 506, "framespersecond": 507, "mp4": [507, 708, 716], "movi": [507, 653, 661, 708, 716], "ffmpeg": 507, "da": [508, 510, 520], "nameintitl": [508, 510, 520], "vmin": [508, 509, 510, 513, 514], "vmax": [508, 509, 510, 513, 514], "cmap": [508, 510], "cmap_set_und": [508, 510], "floor": [508, 515, 516, 517, 676, 703, 711, 713, 716], "nae": [508, 510], "subfold": [508, 510], "colorbar": [508, 509, 510, 513, 514], "colormap": [508, 510, 612], "color": [508, 510, 520], "chosen": [509, 668, 690], "oceandomain": 510, "cmap_scal": 510, "drive": [511, 519, 653, 716], "halin": 511, "figsiz": [512, 520], "sshmax": 519, "advect": [521, 532, 543, 546, 549, 560, 654, 663, 665, 680, 705, 709, 717, 718], "merri": [521, 522, 524, 526, 528, 530, 662, 717], "round": [521, 522, 524, 526, 528, 530, 662, 674, 709, 717], "merrygoround": [524, 662], "5m": [526, 717], "planar": [533, 535, 539, 543, 675, 718], "convergence_test_cas": 539, "convergencetestcas": 539, "rms_error": 547, "mesoscal": [551, 664, 710, 719], "profil": [552, 653, 655, 656, 658, 661, 664, 667, 671, 711, 716, 719, 722], "with_particl": [554, 558, 628, 632, 664, 667], "with_surface_restor": [554, 556, 558], "three_lay": [554, 556, 558, 664], "lagrangian": [554, 705, 719, 722], "restor": [554, 556, 558, 661, 716, 719, 722], "equilibrium": [554, 558, 628, 632, 684, 719], "continent": [554, 556, 558, 655, 710, 716, 719], "algorithm": [560, 661, 668, 701, 716, 721], "transport": [561, 575, 589, 613, 655, 665, 709, 720], "spheretransport": [561, 575, 589, 613], "correlatedtracers2d": [564, 566, 570, 572, 665, 720], "dt_minut": [566, 580, 594, 618], "minut": [566, 567, 580, 581, 594, 595, 618, 619, 651, 652, 655, 656, 658, 660, 668, 675, 680, 690, 706, 713, 720, 725], "24": [566, 580, 594, 618, 654, 655, 661, 663, 709, 716, 718, 720], "divergent2d": [578, 580, 584, 586, 665], "nondivergent2d": [592, 594, 598, 600, 665], "dlambda": [603, 605, 606, 611], "compute_error_from_output_ncfil": [603, 611], "tracer1": [603, 605, 606, 611, 662, 717, 720], "linfrat": [603, 611], "l2rate": [603, 611], "lev": 604, "netcdf4": [604, 609, 675, 677], "tcdata": [605, 610], "appx": [605, 611], "linf1": [605, 606], "linf2": [605, 606], "tracer2": [605, 606, 717, 720], "linf3": [605, 606], "tracer3": [605, 606, 717, 720], "l21": [605, 606], "l22": [605, 606], "l23": [605, 606], "filament": [605, 607, 720], "sec": [605, 709, 722], "lspt2012": [605, 607], "ax": [606, 607, 608], "tcname": [606, 607, 608, 609, 610, 611], "resval": [606, 607, 608, 611], "matplotlib": [606, 609, 612, 675, 676], "instanc": [606, 609, 675, 676], "u1": [608, 698, 700], "o1": 608, "u2": 608, "o2": [608, 668], "u3": 608, "o3": 608, "shoot": [608, 720], "fig": [609, 668], "row": 609, "csv": [610, 720], "consol": 611, "compute_convergence_r": 611, "cmap_filenam": 612, "rgb": 612, "ncar": 612, "ncl": 612, "www": 612, "ucar": 612, "edu": 612, "graphic": 612, "color_table_galleri": 612, "shtml": 612, "usabl": 612, "rotation2d": [616, 618, 622, 624, 665, 720], "tos": 618, "zonal": [627, 667, 706, 710, 715, 717, 722], "invari": [627, 658, 710], "southern": [627, 655, 667, 675, 706, 710, 715, 716, 722], "with_analysi": 632, "meter": [640, 641, 686, 687, 691, 692, 694, 713], "stretch": [642, 648, 649, 703], "midpoint": [642, 648, 649], "reftopdepth": [642, 645, 646, 648, 649], "ref": [642, 648, 649, 655, 690, 710], "refzmid": [642, 648, 649, 668, 675], "refbottomdepth": [642, 643, 644, 645, 646, 648, 649, 668, 675, 676], "refinterfac": [642, 648, 649], "nvertlevel": [642, 648, 649, 668, 675, 703], "vertcoordmovementweight": [642, 648, 649, 668, 676], "movement": [642, 648, 649], "consider": [642, 648, 649], "sometim": [642, 648, 649, 668, 672, 676, 710], "partial": [643, 644, 675, 703, 706, 713, 715, 716, 717, 718, 722], "seafloor": [643, 645, 646, 647, 703], "rest": [647, 674, 676, 703, 710], "unstretch": 647, "dam_break": [650, 659, 704, 714], "drying_slop": [650, 659, 704, 714], "hurrican": [650, 659, 704, 714], "ice_shelf_2d": [650, 659, 668, 675, 676, 701, 704, 705, 714, 725], "internal_wav": [650, 659, 704, 714], "isomip_plu": [650, 659, 704, 714], "merry_go_round": [650, 659, 704, 714], "planar_converg": [650, 659, 668, 704, 714], "soma": [650, 659, 704, 714], "sphere_transport": [650, 659, 704, 714], "ziso": [650, 659, 668, 669, 675, 676, 703, 704, 705, 714, 724, 725], "spherical_harmonic_transform": [650, 659, 704, 714], "momentum": [651, 660], "diffus": [651, 660, 680, 683, 705, 717, 719], "decomptest": [651, 655], "threadstest": [651, 655], "frequenc": [651, 658], "rpetest": [651, 660, 668, 675], "144": [651, 655, 668, 675], "intens": [651, 660, 662], "cullcel": 652, "tailor": [652, 653], "multipanel": 652, "evolut": [652, 653, 661, 683, 707], "site": [652, 671, 707], "subplot": 652, "accept": [652, 653], "plain": 652, "drag": [653, 676, 708, 711], "tidal": [653, 661, 708, 716], "coord": [653, 716], "plug": 653, "background": [653, 669, 676, 709, 715, 717, 718], "emploi": [653, 668], "0025": [653, 708], "grain": 653, "interv": [653, 657, 668, 712], "globalconverg": [654, 675, 676], "studi": [654, 663, 673, 675, 676, 709, 710, 718, 719, 720], "globe": [654, 663, 709, 710, 720], "ico": [654, 709], "shape": [654, 663, 665, 709], "blob": [654, 663, 718], "dt_per_km": [654, 709], "rmse": [654, 663], "realist": [655, 668, 673, 694, 701, 710, 712, 713, 719, 724], "gitconfig": [655, 677, 710, 712], "enter": [655, 677, 710, 712], "get_e3sm_mesh_nam": 655, "mesh_prefix": 655, "kml": 655, "e3smv": 655, "qu240e2r1": [655, 710], "qu240kml16e3smv2r1": [655, 710], "forwardtestcas": 655, "performancetest": 655, "land_ice_flux": [655, 661], "forward_": [655, 710], "focus": [655, 710, 719], "init_ntask": [655, 710, 712], "init_min_task": [655, 710, 712], "forward_ntask": [655, 710, 712], "forward_min_task": [655, 710, 712], "subdivid": 655, "asid": 655, "pure": 655, "ec30to60mesh": 655, "refin": [655, 657, 662, 710, 712, 717], "atlant": [655, 710], "pacif": [655, 710], "arctic": [655, 677, 710], "so12to60": 655, "so12to60mesh": 655, "1296": 655, "band": 655, "cycl": [655, 710], "gulf": 655, "wc14mesh": 655, "720": [655, 716], "america": 655, "628": 655, "uk": [655, 710], "metoffic": [655, 710], "estim": [655, 701, 710], "biogeochemsitri": 655, "stress": [655, 701, 722], "shortwav": 655, "ecosystem": [655, 695, 710], "sshadjust": [655, 658, 661], "closer": [655, 674], "clearli": 655, "wrong": 655, "half": [655, 675, 706, 713, 715, 716, 722], "analysistest": 655, "dailyoutputtest": 655, "timeseriesstatsdaili": [655, 710], "timeseriesstatsmonthli": [655, 710], "averag": [655, 661, 701, 710, 716], "rapid": [655, 680], "artifici": 655, "global_ocean_mesh": 655, "d_": [655, 668], "strong": [655, 675, 715, 716], "1e": [655, 676, 722], "jinja": 655, "ec30to60dynamicadjust": 655, "so12to60dynamicadjust": 655, "damped_adjustment_3": 655, "weaken": 655, "4e": 655, "wc14dynamicadjust": 655, "damped_adjustment_6": 655, "prepar": [655, 710, 712], "assembled_fil": [655, 710], "ocean_initial_condit": 655, "oceaninitialcondit": 655, "inputdata": 655, "ocn": 655, "mesh_short_nam": 655, "_no_xtim": 655, "ocean_graph_partit": 655, "oceangraphpartit": 655, "wide": [655, 671, 713, 717, 719], "min_graph_s": 655, "max_graph_s": 655, "power": [655, 718], "1200": [655, 667, 683], "core_count": 655, "seaice_initial_condit": 655, "seaiceinitialcondit": 655, "keep_var": 655, "areacel": 655, "cellsoncel": 655, "edgesoncel": 655, "fcell": [655, 668, 675], "indextocellid": 655, "latcel": 655, "loncel": 655, "meshdens": 655, "nedgesoncel": 655, "verticesoncel": 655, "angleedg": 655, "cellsonedg": 655, "dcedg": 655, "dvedg": 655, "edgesonedg": 655, "fedg": [655, 668, 675], "indextoedgeid": 655, "latedg": 655, "lonedg": 655, "nedgesonedg": 655, "verticesonedg": 655, "weightsonedg": 655, "xedg": [655, 668, 675], "yedg": 655, "zedg": 655, "areatriangl": 655, "cellsonvertex": 655, "edgesonvertex": 655, "fvertex": [655, 668, 675], "indextovertexid": 655, "kiteareasonvertex": 655, "latvertex": 655, "lonvertex": 655, "xvertex": [655, 668, 675], "yvertex": 655, "zvertex": 655, "landicemask": [655, 716], "cice": 655, "coupl": [655, 671, 673, 684, 701, 710], "nomask": 655, "diagnostics_fil": 655, "diagnosticsfil": 655, "aggreg": 655, "get_aggregator_by_nam": 655, "region_group": 655, "subbasin": 655, "mpas_analysi": 655, "region_mask": 655, "ref_dat": 655, "moc": 655, "repres": [655, 675, 676, 690, 703, 709, 710, 713], "_moc_masks_and_transect": 655, "stereograph": [655, 677, 710], "map_": 655, "_to_0": 655, "5x0": 655, "5degree_bilinear": 655, "_to_6000": 655, "0x6000": 655, "0km_10": 655, "0km_antarctic_stereo_bilinear": 655, "0km_arctic_stereo_bilinear": 655, "k\u00e4rn\u00e4": [656, 711], "cm": [656, 707], "ever": [656, 669], "tropic": [657, 712], "cyclon": [657, 712], "dequ120at30cr10rr2": 657, "dequ120at30cr10rr2mesh": 657, "inherit": [657, 669], "coastal_tool": 657, "coastal_refined_mesh": 657, "interpolateatmforc": 657, "cfsv2": [657, 712], "reanalysi": [657, 712], "hourli": [657, 712], "createpointstatsfil": 657, "noaa": [657, 712], "usg": [657, 712], "squash": [658, 661, 667, 703, 716], "config_use_frazil_ice_form": 658, "config_frazil_maximum_depth": 658, "dirti": 658, "cut": 658, "tendaytest": 660, "timeseriesstatsmonthlyoutput": 661, "update_evaporation_flux": 661, "mimic": [661, 674], "indefinit": 661, "due": [661, 681, 716], "freshwat": [661, 705, 710, 713], "factor": [661, 708, 717, 719], "interpolate_ocean_mask": 661, "interpolate_geom": 661, "geometr": 661, "bottomdepthobserv": 661, "bedrock": 661, "oceanfracobserv": 661, "landicefract": 661, "smootheddraftmask": 661, "reli": [661, 668, 675], "nx_thin_film": 661, "runawai": 661, "incom": 661, "meltwat": [661, 716], "landicepressureforc": 661, "landicedraftforc": 661, "isomip_plus_forc": [661, 716], "time_varying_ocean0": 661, "consecut": 661, "land_ice_forc": 661, "motion": [661, 716], "front": [661, 722], "held": [661, 668], "landicefractionforc": 661, "presur": 661, "readi": [661, 668, 675, 676, 698, 700], "fuller": 661, "repeatedli": [661, 681, 716], "plot_streamfunct": [661, 716], "isomip_plus_viz": [661, 716], "frame": [661, 708, 716], "deepest": [661, 667, 703], "timeseriesbelow300m": 661, "correctli": 661, "resolv": [661, 712], "oceantest": 661, "tendenc": 662, "convergencetest": 662, "concomitt": 662, "covergence_test": 662, "conveg": 662, "planarconverg": 663, "horizontaladvect": 663, "dt_1km": [663, 718], "surface_restor": 664, "radiu": [664, 684, 709], "accord": [664, 667, 710, 723], "100layere3smv1": [664, 667, 710, 722], "32km": [664, 719], "min_den": 664, "min_particle_dens": [664, 719], "max_den": 664, "max_particle_dens": [664, 719], "nsurf": 664, "surface_count": [664, 719], "build_particle_simpl": 664, "f_grid": 664, "f_name": 664, "f_decomp": 664, "buoysurf": 664, "somatestcas": 664, "solid": [665, 706, 709, 713, 715, 717], "bodi": [665, 709], "build_mesh": [665, 666], "build_spherical_mesh": [665, 666], "timestep_munut": 665, "rotation_2d_converg": 665, "pdf": 665, "_sol": 665, "diverg": [665, 720], "nondivergent2d_converg": 665, "divergent2d_converg": 665, "correlatedtracers2d_triplot": 665, "quconverg": 666, "harmon": [666, 721], "transform": [666, 721], "implemnt": 666, "runnin": 666, "test_sht": 666, "ey": 667, "toward": 667, "2500": [667, 676, 703, 711, 719, 722], "cores_with_particl": 667, "min_cores_with_particl": 667, "btr_dt": 667, "mom_del4": 667, "0e10": 667, "80": 667, "130": 667, "25e9": 667, "5km": [667, 676, 705, 713, 716, 725], "300": [667, 674, 709, 718, 719, 720, 722], "09": 667, "8e8": 667, "2100": [667, 690], "900": 667, "8e7": 667, "zisotestcas": 667, "withfrazil": 667, "initial_temp_t1": [667, 722], "tanh": [667, 703, 722], "initial_temp_t2": [667, 722], "initial_temp_h1": [667, 722], "initial_temp_mt": [667, 722], "green": 668, "blue": [668, 695, 723], "orang": 668, "red": 668, "laid": 668, "among": [668, 670, 675, 676, 690], "organiz": 668, "encompass": 668, "perspect": 668, "add_test_group": [668, 669, 675, 676], "univers": 668, "mix": [668, 710, 715], "2000m": [668, 680, 683, 686, 723], "halfar": [668, 683], "cism": [668, 683], "dome_typ": [668, 683], "closest": [668, 683, 712], "put_origin_on_a_cel": [668, 683], "hydro": [668, 683], "time_slic": [668, 682, 683, 688], "save_imag": [668, 682, 683, 684, 688], "hide": [668, 682, 683, 684, 688], "hide_fig": [668, 682, 683, 684, 688], "add_test_cas": [668, 675, 676], "variable_resolut": [668, 680, 723], "talk": 668, "complic": [668, 669, 670, 675, 676], "access": [668, 669, 670, 675, 676, 690, 695, 698, 699, 700], "0200": 668, "00_00": [668, 676], "calcul": [668, 690], "enumer": [668, 675], "rpe_test_": [668, 675], "_nu_": [668, 675], "deliber": 668, "fairli": [668, 669, 670, 675, 713, 716], "clumsi": [668, 669, 674], "rpe_test_1_nu_1": [668, 706, 715], "rpe_test_2_nu_5": [668, 706, 715], "po4": 668, "no3": 668, "sio3": 668, "nh4": 668, "fe": 668, "dic": 668, "dic_alt_co2": 668, "alk": 668, "dofe": 668, "dop": 668, "dopr": 668, "donr": 668, "zooc": 668, "spchl": 668, "spc": 668, "spfe": 668, "spcaco3": 668, "diatchl": 668, "diatc": 668, "diatf": 668, "diatsi": 668, "diazchl": 668, "diazc": 668, "diazf": 668, "phaeochl": 668, "phaeoc": 668, "phaeof": 668, "dm": 668, "dmsp": 668, "prot": 668, "poli": 668, "lip": 668, "adjusted_init": 668, "unwant": 668, "outer": 668, "inner": [668, 675, 676], "question": [668, 677], "neglig": [668, 701, 713], "precis": 668, "mesh_cpus_per_task": 668, "mesh_min_cpus_per_task": 668, "write_netcdf": [668, 675, 676], "convers": [668, 675, 676], "generate_grid": 668, "nonperiodic_x": [668, 675, 676], "nonperiodic_i": [668, 675, 676], "graphinfofilenam": [668, 675, 676], "use_dist": [668, 675, 706, 715], "gradient_width_dist": [668, 675, 706, 715], "gradient_width_frac": [668, 675, 706, 715], "bottom_temperatur": [668, 675, 706, 715], "surface_temperatur": [668, 675, 706, 715, 719], "temperature_differ": [668, 675, 706, 715], "coriolis_paramet": [668, 675, 706, 715, 716], "len": 668, "ones_lik": [668, 675], "xmin": [668, 675], "xmax": [668, 675], "ymin": [668, 675], "ymax": [668, 675], "ymid": [668, 675], "xperturbmin": [668, 675], "xperturbmax": [668, 675], "perturbationwidth": [668, 675], "yoffset": [668, 675], "sin": [668, 675, 706, 708, 715], "pi": [668, 675, 703, 708, 709], "temp_vert": [668, 675], "logical_and": [668, 675], "transpos": [668, 675], "3rd": [668, 675, 720], "crest": [668, 675], "expand_dim": [668, 675], "dim": [668, 675], "broadcast": [668, 675], "zeros_lik": [668, 675, 676], "nedg": [668, 675], "dtype": 668, "harm": 668, "likewis": [668, 675], "arisen": 668, "omit": [668, 676, 723], "open_dataset": [668, 676], "isn": [668, 669, 675, 676], "mesh_path": 668, "initial_state_target": 668, "entha_analy_result": 668, "ourselv": 668, "firewal": 668, "bedmachineantarctica_v2_and_gebco_2022_0": 668, "05_degree_20220729": 668, "slate": 668, "commonli": [668, 693], "expens": [668, 683], "word": 668, "clariti": 668, "ff": 668, "91": 668, "transfer": 668, "design": [668, 669, 673, 674, 699, 710, 718, 719], "substitut": 668, "beforehand": 668, "update_namelist_at_runtim": [668, 676], "pio_num_iotask": 668, "pio_strid": 668, "mostli": [668, 675, 676, 710], "synchron": [668, 673], "update_streams_at_runtim": 668, "timedelta": 668, "3600": 668, "delta": [668, 703], "03d": 668, "02d": 668, "forgotten": 668, "dig": [669, 677], "adher": [669, 675, 676], "strictli": [669, 675], "pep8": 669, "bot": [669, 703], "violat": 669, "pleas": [669, 670, 674, 675], "editor": 669, "pycharm": [669, 675, 676], "spyder": 669, "linter": 669, "flake8": 669, "discourag": 669, "reformat": 669, "autopep8": 669, "undesir": 669, "lint": 669, "wildcard": 669, "vim": [669, 675, 676], "plugin": 669, "id": 669, "why": [669, 676, 680], "sound": 669, "subpackag": 669, "understand": [669, 677], "downstream": 669, "clu": 669, "intro": 669, "hidden": 669, "shortcut": [669, 723], "referenc": [669, 674, 675], "ll": [669, 675, 676, 690, 698, 700], "dot": 669, "charact": 669, "unix": [669, 673], "mayb": 669, "machine_config": 669, "endswith": 669, "splitext": 669, "exactli": [669, 670, 675, 676, 680, 690, 703, 705], "visa": 669, "versa": 669, "comfort": [669, 675, 676], "orient": 669, "program": [669, 677], "felt": 669, "hesit": 669, "harder": 669, "outcom": 669, "augment": 669, "compos": [669, 713, 716], "dens": 669, "worth": [669, 675], "endeavor": 669, "took": 669, "138": 669, "bash": [670, 671, 723], "ksh": 670, "mac": [670, 673], "csh": 670, "tcsh": 670, "temporarili": 670, "obtain": [670, 690], "recogn": 670, "miniconda3": [670, 675, 676, 699, 723], "permiss": 670, "anyon": 670, "person": [670, 671], "base_path_to_install_or_update_conda": 670, "with_albani": 670, "with_netlib_lapack": 670, "with_petsc": 670, "flavor": 670, "login": [670, 698, 700], "troubl": 670, "recognit": 670, "trilino": 670, "spack": [670, 695, 696, 697, 698, 699, 700], "downsid": 670, "unneed": 670, "workstat": 670, "deploy": 670, "touch": 670, "miniconda": [670, 699, 723], "update_speck": 670, "reinstal": 670, "scorpio": [670, 699, 723], "esmf": [670, 698, 723], "load_": 670, "encod": 670, "load_dev_compass_": 670, "dev_compass_": [670, 671], "safest": 670, "rerun": 670, "load_dev_compass": 670, "echo": 670, "rememb": 670, "recreat": [670, 671], "incorrect": 670, "unus": 670, "pip": 670, "extra": [670, 719], "wih": 670, "env_onli": 670, "mpas_make_target": [670, 723], "scientif": [670, 710, 719, 722, 723], "situat": [670, 675, 676, 723], "platform": [670, 723], "wiki": [670, 723], "workdir": [670, 723], "es3m": 670, "mkdir": 670, "fetch": [670, 675], "new_branch_nam": 670, "respons": [670, 712, 721], "simplest": [670, 720], "your_new_branch": 670, "checkout": 670, "encount": 671, "solv": [671, 682, 683, 703], "geo": 671, "cartopi": 671, "np110py27_4": 671, "calledprocesserror": 671, "spec": [671, 698, 700], "vpn": 671, "shell": [671, 673], "honor": 671, "spawn": 671, "usernam": [671, 675, 698, 700], "proxy_en": 671, "all_proxi": 671, "proxyout": 671, "8080": 671, "no_proxi": 671, "localhost": [671, 698, 699, 700, 723], "127": 671, "proxy_dis": 671, "unset": 671, "anytim": 671, "fatal": 671, "mpi_init": 671, "stack": 671, "mpir_init_thread": 671, "159": 671, "mpid_init": 671, "164": 671, "mpidi_ch3_init": 671, "95": 671, "mpid_nem_init": 671, "314": 671, "mpid_nem_tcp_init": 671, "173": 671, "mpid_nem_tcp_get_business_card": 671, "395": 671, "getsockinterfaceaddr": 671, "369": 671, "pn2034311": 671, "errno": 671, "host": [671, 699, 723], "unexpect": [672, 675, 676, 680, 705], "Of": 673, "predict": 673, "kept": [673, 710], "expert": [673, 687, 691, 692, 710], "team": [673, 710], "launch": 673, "benefit": 673, "queue": 673, "beginn": [673, 675, 676], "worktre": [673, 675, 676], "advanc": [673, 675, 676], "style": [673, 675, 676], "troubleshoot": 673, "proxi": 673, "gethostbynam": 673, "port": [673, 674, 675, 698, 700, 710, 714, 722], "list_testcas": 673, "setup_testcas": 673, "clean_testcas": 673, "manage_regression_suit": 673, "strict": [673, 675, 699, 723], "experienc": 673, "seriou": 673, "anticip": [673, 675, 710], "persist": 673, "medium": [673, 695], "glossari": [674, 675, 676], "rapidli": [674, 716], "companion": 674, "liber": 674, "add_cosine_bel": 674, "add_baroclinic_channel": [674, 675], "fit": [674, 677, 720], "camel": 674, "welcom": 674, "_mesh": 674, "bring": 674, "_namelist": 674, "_init": 674, "_output": 674, "wasn": 674, "becam": 674, "didn": [674, 676], "_setup_step": 674, "haven": [674, 675, 676], "_ntask": 674, "heurist": 674, "refus": 674, "update_cor": 674, "goal_cells_per_cor": [674, 709, 718, 720], "max_cells_per_cor": [674, 709, 718, 720], "qu30": 674, "65275": 674, "10383": 674, "approx_cel": 674, "6e8": 674, "pinch": 674, "_forward": 674, "_min_task": 674, "consult": [675, 676, 710], "fork": 675, "push": 675, "lowercas": [675, 676], "hyphen": 675, "realli": [675, 676, 698, 700], "nice": [675, 676, 698, 700], "supercomput": [675, 676], "highli": [675, 676], "camelcas": [675, 676], "capit": [675, 676], "cap": [675, 676], "promot": 675, "pattern": [675, 676], "seen": [675, 681], "seldom": 675, "outweigh": 675, "equip": 675, "hexagon": 675, "variat": [675, 716], "pain": 675, "pick": [675, 676], "partial_cell_typ": [675, 703, 706, 713, 715, 716, 717, 718, 722], "min_pc_fract": [675, 703, 706, 713, 715, 716, 717, 718, 722], "halv": [675, 706, 715], "500km": [675, 706, 715], "40e3": [675, 706, 715, 716], "corioli": [675, 706, 713, 715, 716, 722], "2e": [675, 706, 715], "connect": [675, 698, 700, 710], "handi": 675, "05": [675, 719, 722], "techiniqu": 675, "input_interv": [675, 676], "initial_onli": [675, 676], "__init": 675, "spuriou": [675, 706, 715], "pop": [675, 706, 715], "mom": [675, 706, 715], "mitgcm": [675, 706, 715], "heavi": 675, "context": 675, "analogi": 675, "tet": 675, "20_00": 675, "0000": [675, 676], "dayssincestartofsim": 675, "relativevort": 675, "pyplot": [675, 676], "plt": [675, 676], "cmocean": 675, "output_": 675, "sections_baroclinic_channel_": 675, "_plot": 675, "compact": 675, "anymor": 675, "bc_configur": 675, "users_guid": [675, 676], "alphabet": [675, 676], "daunt": [675, 676], "tini": 676, "add_gotm": 676, "driver": 676, "Its": 676, "driver_script": 676, "pre_messag": 676, "post_messag": 676, "config_init": 676, "add_execut": 676, "dest": 676, "config_init_configur": 676, "periodic_planar": 676, "config_vert_level": 676, "config_periodic_planar_vert_level": 676, "config_periodic_planar_bottom_depth": 676, "config_periodic_planar_velocity_strength": 676, "config_ocean_run_mod": 676, "config_write_cull_cell_mask": 676, "config_vertical_grid": 676, "immut": 676, "input_init": 676, "output_init": 676, "add_cont": 676, "edgemask": 676, "run_script": 676, "mpascellcul": 676, "mpasmeshconvert": 676, "model_run": 676, "proc": 676, "gotmturb": 676, "nml": 676, "plot_profil": 676, "jump": 676, "encourag": 676, "plai": 676, "role": 676, "barotropic_channel": 676, "excerpt": 676, "slight": 676, "hasn": 676, "real": 676, "deep": [676, 719], "uniformli": 676, "wrapper": 676, "conform": 676, "add_link": 676, "copy_fil": 676, "source_path": 676, "script_test_dir": 676, "0000_12": 676, "config_zonal_ssh_grad": 676, "config_pressure_gradient_typ": 676, "constant_forc": 676, "config_use_cvmix": 676, "config_use_gotm": 676, "config_gotm_namelist_fil": 676, "config_gotm_constant_bottom_drag_coeff": 676, "73e": 676, "config_use_implicit_bottom_drag": 676, "velocityzon": 676, "velocitymeridion": 676, "vertvisctopofcel": 676, "nor": 676, "velocity_profil": 676, "viscosity_profil": 676, "xr": 676, "switch_backend": 676, "agg": 676, "kappa": 676, "z0b": 676, "5e": [676, 722], "gssh": 676, "81": 676, "isel": 676, "zi": 676, "ustarb": 676, "sqrt": [676, 710], "u_a": 676, "nu_a": 676, "infer": [676, 711], "c_d": 676, "4g": 676, "xlabel": 676, "ylabel": 676, "savefig": 676, "introduc": 676, "got": 676, "newli": 676, "explanatori": 677, "wherev": 677, "my_machin": 677, "customize_config_pars": 677, "inej": 677, "ssl": 677, "certif": 677, "partition_execut": 677, "netcdf4_class": 677, "netcdf3_64bit": 677, "netcdf3_class": 677, "engin": 677, "scipi": 677, "2022": [677, 710], "contact": [677, 690], "temperaturemax": [677, 710], "statist": [677, 710], "temperature_max": [677, 710], "offlin": [677, 710], "coarser": [677, 709, 710, 718], "finer": [677, 710, 722], "2018": 679, "websit": [679, 704], "v6": 679, "land_ic": 679, "sia_restart_test": [680, 723], "sia_decomposition_test": [680, 723], "enthalpy_decomposition_test": 680, "enthalpy_restart_test": 680, "expos": [680, 705], "fo_decomposition_test": [680, 723], "fo_restart_test": [680, 723], "3km_restart_test": 680, "fo_calv": 680, "von_mises_stress_damag": 680, "threshold_facemelt": 680, "3km_decomposition_test": 680, "none_calv": 680, "adp": 681, "timestepp": [681, 693], "ratio": [681, 708], "warn": [681, 709, 718], "greater": [681, 683], "panel": 681, "cumul": 681, "adapt": [681, 693], "lag": 681, "trigger": 681, "routin": [681, 689], "unabl": 681, "volum": 681, "unground": 682, "iceberg": 682, "presenc": 682, "1250": [682, 722], "dirichlet": 682, "bed": 682, "use_mu": 682, "area": [682, 710], "use_7cel": 682, "1proc_run": [682, 683, 684, 686, 688], "4proc_run": [682, 683, 684, 686], "1983": 683, "2005": [683, 708, 710], "rectangular": [683, 684, 688, 707, 719], "circularli": [683, 684], "accumul": [683, 684], "ablat": 683, "16700": 683, "varr": 683, "payn": 684, "750": 684, "exmapl": [684, 688], "25000m": 684, "64": [684, 703, 721], "74": 684, "25000": 684, "thermomechan": 684, "warm": [684, 716, 722], "altitud": 684, "cooler": [684, 706, 722], "slip": [684, 686, 722], "throughout": [684, 706, 708, 715, 716, 717], "exismint2_viz": 684, "enthalpy_benchmark_viz": 685, "display_imag": 685, "prescrib": [685, 716, 719], "decreas": [685, 716], "paraview": [686, 694], "cull_dist": [686, 687, 691, 692, 694], "min_spac": [686, 687, 691, 692, 694], "e3": [686, 687, 691, 692, 694], "max_spac": [686, 687, 691, 692, 694], "log10": [686, 687, 691, 692, 694], "high_log_spe": [686, 687, 691, 692, 694], "low_log_spe": [686, 687, 691, 692, 694], "75": [686, 687, 691, 692, 694, 713, 716], "high_dist": [686, 687, 691, 692, 694], "e5": [686, 687, 691, 692, 694], "low_dist": [686, 687, 691, 692, 694], "e4": [686, 687, 691, 692, 694], "use_spe": [686, 687, 691, 692, 694], "use_dist_to_grounding_lin": [686, 687, 691, 692, 694], "use_dist_to_edg": [686, 687, 691, 692, 694], "newer": [686, 694], "notabl": 687, "slower": 687, "humboldt_mesh": 687, "yr": [687, 691, 692, 716], "16proc_run": [687, 694], "32proc_run": [687, 694], "fot": 687, "bfb": 687, "von": 687, "mise": 687, "marin": [687, 716], "facemelt": 687, "exercis": [687, 710], "widest": 687, "1000m": 688, "58": 688, "3proc_run": 688, "specialti": 689, "carefulli": 689, "2300": 690, "ob": 690, "overal": 690, "publicli": 690, "process_racmo_smb": 690, "harmless": 690, "six": 690, "modern": 690, "committe": 690, "globu": 690, "base_path_ismip6": 690, "ghub": 690, "endpoint": 690, "ce": 690, "ssp585": 690, "ukesm1": 690, "ai": [690, 710], "atmosphere_forc": 690, "regridded_8km": 690, "ll_anomaly_ssp585_1995": 690, "2100_8km": 690, "ocean_forc": 690, "ll_ssp585": 690, "ll_ssp585_thermal_forcing_8km_x_60m": 690, "atmospheric_forc": 690, "ccsm4": 690, "rcp85": 690, "rcp26": 690, "racmo2": 690, "3p2_ant27_smb_yearly_1979_2018": 690, "obs_thermal_forcing_1995": 690, "2017_8km_x_60m": 690, "ocean_f": 690, "orc": 690, "climatology_from_obs_1995": 690, "imbie2_basin_numbers_8km": 690, "coeff_gamma0_deltat_quadratic_loc": 690, "underneath": 690, "landice_ismip6_forcing_config": 690, "basal_melt": 690, "ocean_thermal_forc": 690, "ismip6_ai": 690, "ismip6_ais_atmospher": 690, "ismip6_ais_ocean_therm": 690, "ismip6_ais_ocean_bas": 690, "bilinear": 690, "neareststod": 690, "conserv": [690, 720], "hollyhan": 690, "research": 690, "ismip6_2300_protocol": 690, "base_path_mali": 690, "output_base_path": 690, "process_forcing_testcas": 690, "cesm2": 690, "cnrm_cm6": 690, "cnrm_esm2": 690, "csiro": 690, "mk3": 690, "hadgem2": 690, "ipsl": 690, "cm5a": 690, "mr": 690, "miroc": 690, "esm": 690, "chem": 690, "noresm1": 690, "waccm": 690, "ssp126": 690, "ssp585v1": 690, "ssp585v2": 690, "map_ismip6_8km_to_": 690, "antarctica_8to30km": 690, "antarctic_8to80km_20220407": 690, "ais_8to30km_r01_20220607": 690, "process_obs_data": 690, "rcp2": 690, "80km": 690, "atmosphereprocess_smb_racmo": 690, "notavail": 690, "high_res_kangerlussuaq_mesh": 691, "high_res_kogebugts_mesh": 692, "e2": 692, "2km": [693, 716], "paper": [693, 719, 722, 723], "trade": 693, "accuraci": 693, "includess": 694, "gain": [695, 710], "confluenc": 695, "deploi": [695, 696, 697, 698, 699, 700, 719], "mpi_intel": [695, 696, 697, 698, 699], "mpi_gnu": [695, 696, 698, 699, 700], "hdf5": [695, 696, 697, 698, 699, 700], "fortran": [695, 696, 697, 698, 699, 700], "pnetcdf": [695, 696, 697, 698, 699, 700], "use_e3sm_hdf5_netcdf": [695, 696, 697, 698, 699, 700], "cobalt": [695, 696, 697, 698, 699, 700], "condo": [695, 723], "acm": [695, 698, 723], "qualiti": [695, 697, 698, 699, 700, 723], "servic": [695, 697, 698, 699, 700, 723], "qo": [695, 697, 698, 699, 700, 723], "acme_high": 695, "load_latest_compass_intel_impi": [695, 696, 697], "load_latest_compass_gnu_mvapich": 695, "load_latest_compass_gnu_openmpi": [696, 723], "compyf": 697, "app": [697, 723], "conda_env": [697, 723], "mpi_pgi": 697, "mvapich2": 697, "pmi2": 697, "my_usernam": [698, 699, 700], "salloc": [698, 699, 700], "knl": 698, "nim": 698, "filesystem": [698, 700], "cscratch1": 698, "sd": 698, "myquota": [698, 700], "prjquota": [698, 700], "projectid": [698, 700], "m2833": 698, "archiv": [698, 700], "hpss": [698, 700], "hsi": [698, 700], "htar": [698, 700], "zstash": [698, 700], "cf": [698, 700, 710, 723], "cdir": [698, 700, 723], "premium": [698, 700], "load_latest_compass_intel_mpt": 698, "load_latest_compass_gnu_mpt": 698, "8844": [698, 700], "monik": [698, 700], "browser": [698, 700], "grab": [698, 700], "logon": [698, 700], "kernel": [698, 700], "myenv": [698, 700], "ipykernel": [698, 700], "kernelspec": [698, 700], "Be": [698, 700], "interpret": [698, 700], "argv": [698, 700], "ipykernel_launch": [698, 700], "connection_fil": [698, 700], "display_nam": [698, 700], "sai": [699, 716], "workload": 699, "sbatch": [699, 723], "squeue": 699, "scancel": 699, "jobid": 699, "cancel": 699, "emtpi": 699, "channel_prior": [699, 723], "mpi_mpich": [699, 723], "mpi_openmpi": [699, 723], "nompi": [699, 723], "p1": 700, "gpu": 700, "iri": 700, "m1795": 700, "hyperthread": 700, "hang": 700, "threads_per_cor": 700, "256": 700, "modules_befor": 700, "modules_aft": 700, "crai": 700, "cray_compil": 700, "load_latest_compass_gnu_mpich": 700, "inclus": [701, 710], "cryospher": [701, 710], "campaign": [701, 710], "loss": 701, "depress": [701, 703, 713, 716], "thicker": 701, "hanei": [701, 716], "stationari": 701, "freeli": 701, "guess": 701, "robust": [701, 716], "grow": 702, "stewart": [703, 722], "z_2": 703, "z_1": 703, "mathrm": [703, 722], "rightarrow": 703, "infti": 703, "z_k": 703, "z_0": 703, "finder": 703, "n_z": 703, "h_": [703, 722], "210": [703, 709], "5500": 703, "renorm": [703, 722], "51": 703, "221": 703, "63": 703, "flat": 703, "collaps": 703, "adcroft": 703, "campin": 703, "2004": 703, "absenc": 703, "proport": [703, 709, 718, 720], "watercolumn": 703, "press": 703, "batymetri": 703, "stair": 703, "release_6": 704, "unexpectedli": 705, "proper": [705, 710], "equilibr": 705, "ilicak": [706, 715], "2012": [706, 715, 720], "psu": [706, 708, 713, 715, 716, 717, 718, 719, 722], "sinusoid": [706, 708, 715], "warmer": [706, 715], "mk": [706, 708, 715, 717], "celsiu": [706, 713, 715, 716, 717], "reproduc": [707, 708, 710], "box": 707, "viz": [707, 708, 713, 715, 716, 717], "config_dam_break_vert_level": 707, "40cm": 707, "inspect": [707, 708], "oei": 708, "6km": 708, "seaward": [708, 716], "oscil": 708, "zeta_": 708, "east": 708, "5t": 708, "degc": [708, 717], "rough": 708, "250m": 708, "coordiant": 708, "ouptut": [708, 716], "drying_slope_viz": 708, "generate_movi": 708, "frames_per_second": [708, 716], "movie_format": [708, 716], "12h": 708, "williamson": 709, "1992": 709, "3a": 709, "skamarock": 709, "gassmann": 709, "psi": 709, "psi_0": 709, "co": [709, 710], "ge": 709, "equatori": 709, "u_0": 709, "aim": [709, 710, 718, 720], "central": 709, "rad": 709, "lat_cent": 709, "lon_cent": 709, "14159265": 709, "2123666": 709, "6667": 709, "hill": 709, "psi0": 709, "transit": [709, 710, 716, 717], "vel_pd": 709, "qu_conv_thresh": 709, "qu_conv_max": 709, "icos_conv_thresh": 709, "icos_conv_max": 709, "480": 709, "multipli": [709, 718], "alloc": [709, 718, 720], "cull_mesh_cpus_per_task": [710, 712], "cull_mesh_min_cpus_per_task": [710, 712], "cull_mesh_max_memori": [710, 712], "cull_mesh_": 710, "init_": 710, "april": 710, "mpas_mesh_short_nam": 710, "mpas_mesh_long_nam": 710, "mpas_mesh_prefix": 710, "mpas_mesh_e3sm_vers": 710, "mpas_mesh_pull_request": 710, "mpas_mesh_qu_revis": 710, "mpas_mesh_qu_version_author": 710, "mpas_mesh_qu_version_author_": 710, "mail": 710, "mpas_mesh_qu_version_creation_d": 710, "210116": 710, "mpas_mesh_qu_minimum_resolution_km": 710, "mpas_mesh_qu_maximum_resolution_km": 710, "mpas_mesh_qu_maximum_depth_m": 710, "mpas_mesh_qu_number_of_level": 710, "mpas_mesh_descript": 710, "mpas_mesh_bathymetri": 710, "mpas_initial_condit": 710, "mpas_mesh_compass_vers": 710, "mpas_mesh_jigsaw_vers": 710, "mpas_mesh_jigsaw": 710, "python_vers": 710, "mpas_mesh_mpa": 710, "tools_vers": 710, "mpas_mesh_nco_vers": 710, "mpas_mesh_esmf_vers": 710, "mpas_mesh_geometric_features_vers": 710, "mpas_mesh_metis_vers": 710, "mpas_mesh_pyremap_vers": 710, "lowest": 710, "everywher": 710, "impli": 710, "treatment": 710, "gent": 710, "mcwilliam": 710, "doi": 710, "org": 710, "1175": 710, "1520": 710, "0485": 710, "1990": [710, 713, 716], "020": 710, "0150": 710, "imiocm": 710, "a_c": 710, "smoothli": 710, "sorrm": 710, "taper": 710, "attach": 710, "topograph": 710, "global_ocean_dynamic_adjust": 710, "coastlin": [710, 719], "portion": 710, "gibraltar": 710, "mediterranean": 710, "contigu": 710, "peninsula": 710, "deriv": 710, "en4_1900_bgc": 710, "thought": 710, "explict": 710, "higdon": 710, "4th": [710, 720], "rung": [710, 720], "kutta": [710, 720], "infeas": 710, "surfaceareaweightedaverag": 710, "watermasscensu": 710, "layervolumeweightedaverag": 710, "zonalmean": 710, "okuboweiss": 710, "meridionalheattransport": 710, "highfrequencyoutput": 710, "eliassenpalm": 710, "mixedlayerdepth": 710, "debugdiagnost": 710, "eddyproductvari": 710, "oceanheatcont": 710, "mixedlayerheatbudget": 710, "sync": 710, "confid": 710, "complianc": 710, "cfconvent": 710, "transient": [710, 713], "amplitud": 710, "aggress": 710, "gentli": 710, "global_ocean_mesh_quwisc240": 710, "global_ocean_mesh_ecwisc30to60": 710, "qu240_for_e3sm": [710, 723, 725], "quwisc240_for_e3sm": [710, 723, 725], "mocstreamfunct": 710, "weren": 710, "ofr": 710, "wcatl12to45e2r4": 710, "210318": 710, "gl": 711, "umlauf": 711, "burchard": 711, "2003": 711, "67": 711, "69": 711, "0173": 711, "event": 712, "tide": [712, 721], "coastal": 712, "estuari": 712, "surg": 712, "inund": 712, "strm15": 712, "carri": 712, "vector": 712, "recor": 712, "spinup": 712, "ramp": 712, "shock": 712, "dimension": 713, "linearli": [713, 716, 719], "bui": [713, 716], "1490": [713, 716], "abruptli": [713, 716], "occupi": [713, 716], "cavity_thick": 713, "slope_height": 713, "angl": 713, "edge_width": 713, "0e3": 713, "y1": 713, "y2": 713, "surface_salin": [713, 719], "bottom_salin": 713, "5e3": 713, "strenuou": 713, "live": [713, 723], "induc": [715, 717], "propag": [715, 716], "stratif": [715, 719], "5000": 715, "amplitude_width_frac": 715, "amplitude_width_dist": 715, "50e3": 715, "2016": [716, 722], "sheetmodel": 716, "cornford": 716, "ocean3": 716, "ocean4": 716, "inflow": 716, "misomip": 716, "topo_smooth": 716, "min_ice_thick": 716, "scalar": 716, "draft_scal": 716, "minimum_level": 716, "min_column_thick": 716, "min_smoothed_draft_mask": 716, "min_land_ice_fract": 716, "init_top_temp": 716, "init_bot_temp": 716, "init_top_s": 716, "init_bot_s": 716, "restore_top_temp": 716, "restore_bot_temp": 716, "restore_top_s": 716, "restore_bot_s": 716, "restore_r": 716, "restore_evap_r": 716, "restore_xmin": 716, "790e3": 716, "restore_xmax": 716, "800e3": 716, "409e": 716, "kg": 716, "effective_dens": 716, "1026": 716, "0002": 716, "0003": 716, "isomip_plus_streamfunct": 716, "osf_dx": 716, "2e3": 716, "osf_dz": 716, "plot_hanei": 716, "section_i": 716, "warmest": 716, "amundsen": 716, "bellingshausen": 716, "vigor": 716, "rigor": 716, "cold": [716, 722], "weddel": 716, "ross": 716, "weak": 716, "decad": 716, "opposit": 716, "misimp": 716, "undergon": 716, "retreat": 716, "exponenti": 716, "cours": 716, "stai": 716, "monoton": 716, "thin_film_time_varying_ocean0": 716, "thin_film_wetting_ocean0": 716, "thin_film_drying_ocean0": 716, "landward": 716, "computation": 716, "inexpens": 716, "setup_to_run": 716, "loop": 716, "convect": 717, "perod": 717, "concentr": 717, "contour": 717, "streamlin": 717, "temperature_right": 717, "temperature_left": 717, "salinity_background": 717, "tracer2_background": 717, "tracer3_background": 717, "6h": 717, "stagger": 718, "hex": 718, "nx_1km": 718, "512": 718, "ny_1km": 718, "640": 718, "deg": 718, "x_center": 718, "y_center": 718, "gaussian_width": 718, "advect_x": 718, "advect_i": 718, "conv_thresh": 718, "conv_max": 718, "wolfram": [719, 722], "investig": 719, "midlatitud": 719, "21": 719, "48": 719, "gyre": 719, "appendix": 719, "16km": 719, "expans": 719, "eos_linear_alpha": 719, "density_differ": 719, "salinity_gradi": 719, "0008": 719, "thermocline_depth": 719, "density_difference_linear": 719, "phi": 719, "shelf_depth": [719, 722], "unequ": 719, "trajectori": 719, "situ": [719, 722], "lauritzen": 720, "debugtrac": 720, "discontinu": 720, "slot": 720, "cylind": 720, "offset": 720, "timestep_minut": 720, "tracer1_conv_thresh": 720, "tracer2_conv_thresh": 720, "tracer3_conv_thresh": 720, "appreci": 720, "degrad": 720, "revers": 720, "deform": 720, "nonlinearli": 720, "correl": 720, "invers": 721, "attract": 721, "guassian": 721, "shperic": 721, "shtn": 721, "dosen": 721, "gather": 721, "rank": 721, "scatter": 721, "impliment": 721, "algoritm": 721, "all_reduc": 721, "use_shtn": 721, "analyit": 721, "sprial": 721, "harmoic": 721, "26": 721, "220": 721, "980": 721, "spherial": 721, "ringler": 722, "span": 722, "l_x": 722, "l_y": 722, "y_": 722, "w_": 722, "easterli": 722, "wind_transition_posit": 722, "800000": 722, "antarctic_shelf_front_width": 722, "600000": 722, "wind_stress_shelf_front_max": 722, "meridional_ext": 722, "0e6": 722, "slope_half_width": 722, "0e5": 722, "slope_center_posit": 722, "reference_corioli": 722, "coriolis_gradi": 722, "wind_stress_max": 722, "mean_restoring_temp": 722, "restoring_temp_dev_ta": 722, "restoring_temp_dev_tb": 722, "interior": 722, "restoring_temp_tau": 722, "piston": 722, "restoring_temp_piston_vel": 722, "93e": 722, "fold": 722, "restoring_temp_z": 722, "spong": 722, "restoring_sponge_l": 722, "0e4": 722, "frazil_temperature_anomali": 722, "load_latest_compass": 723, "minu": 723, "create_compass_load_script": 723, "load_compass_1": 723, "0_mpich": 723, "sia_smoke_test": 723, "fo_smoke_test": 723, "grep": 723, "mpas_path": 723, "17": 723, "210131_test_new_branch": 723, "fall": 723, "landice_datafil": 723, "ocean_databas": 723, "_database_root": 723, "previous_workdir": 723, "recompil": 723, "safer": 723, "test_subdir": 723, "whatev": 723, "job_script": 723, "j": 723, "exclus": 723, "job_nam": 723, "wall_tim": 723, "fo_integr": [723, 725], "full_integr": [723, 725], "sia_integr": [723, 725], "suitenam": 723, "prohibit": 725}, "objects": {"compass": [[9, 0, 1, "", "MpasCore"], [11, 0, 1, "", "Step"], [26, 0, 1, "", "TestCase"], [31, 0, 1, "", "TestGroup"]], "compass.MpasCore": [[9, 1, 1, "", "__init__"], [10, 1, 1, "", "add_test_group"]], "compass.Step": [[11, 1, 1, "", "__init__"], [12, 1, 1, "", "add_input_file"], [13, 1, 1, "", "add_model_as_input"], [14, 1, 1, "", "add_namelist_file"], [15, 1, 1, "", "add_namelist_options"], [16, 1, 1, "", "add_output_file"], [17, 1, 1, "", "add_streams_file"], [18, 1, 1, "", "constrain_resources"], [19, 1, 1, "", "run"], [20, 1, 1, "", "runtime_setup"], [21, 1, 1, "", "set_resources"], [22, 1, 1, "", "setup"], [23, 1, 1, "", "update_namelist_at_runtime"], [24, 1, 1, "", "update_namelist_pio"], [25, 1, 1, "", "update_streams_at_runtime"]], "compass.TestCase": [[26, 1, 1, "", "__init__"], [27, 1, 1, "", "add_step"], [28, 1, 1, "", "configure"], [29, 1, 1, "", "run"], [30, 1, 1, "", "validate"]], "compass.TestGroup": [[31, 1, 1, "", "__init__"], [32, 1, 1, "", "add_test_case"]], "compass.__main__": [[33, 2, 1, "", "main"]], "compass.cache": [[34, 2, 1, "", "update_cache"]], "compass.clean": [[35, 2, 1, "", "clean_cases"]], "compass.config": [[36, 0, 1, "", "CompassConfigParser"]], "compass.config.CompassConfigParser": [[36, 1, 1, "", "__init__"]], "compass.io": [[37, 2, 1, "", "download"], [38, 2, 1, "", "symlink"]], "compass.landice": [[78, 0, 1, "", "Landice"]], "compass.landice.Landice": [[78, 1, 1, "", "__init__"]], "compass.landice.tests.calving_dt_convergence": [[79, 0, 1, "", "CalvingDtConvergence"]], "compass.landice.tests.calving_dt_convergence.CalvingDtConvergence": [[79, 1, 1, "", "__init__"]], "compass.landice.tests.calving_dt_convergence.dt_convergence_test": [[80, 0, 1, "", "DtConvergenceTest"]], "compass.landice.tests.calving_dt_convergence.dt_convergence_test.DtConvergenceTest": [[80, 1, 1, "", "__init__"], [81, 1, 1, "", "validate"]], "compass.landice.tests.calving_dt_convergence.run_model": [[82, 0, 1, "", "RunModel"]], "compass.landice.tests.calving_dt_convergence.run_model.RunModel": [[82, 1, 1, "", "__init__"], [83, 1, 1, "", "run"]], "compass.landice.tests.circular_shelf": [[84, 0, 1, "", "CircularShelf"]], "compass.landice.tests.circular_shelf.CircularShelf": [[84, 1, 1, "", "__init__"]], "compass.landice.tests.circular_shelf.decomposition_test": [[85, 0, 1, "", "DecompositionTest"]], "compass.landice.tests.circular_shelf.decomposition_test.DecompositionTest": [[85, 1, 1, "", "__init__"], [86, 1, 1, "", "run"]], "compass.landice.tests.circular_shelf.run_model": [[87, 0, 1, "", "RunModel"]], "compass.landice.tests.circular_shelf.run_model.RunModel": [[87, 1, 1, "", "__init__"], [88, 1, 1, "", "run"]], "compass.landice.tests.circular_shelf.setup_mesh": [[89, 0, 1, "", "SetupMesh"]], "compass.landice.tests.circular_shelf.setup_mesh.SetupMesh": [[89, 1, 1, "", "__init__"], [90, 1, 1, "", "run"]], "compass.landice.tests.circular_shelf.visualize": [[91, 0, 1, "", "Visualize"], [93, 2, 1, "", "visualize_circular_shelf"]], "compass.landice.tests.circular_shelf.visualize.Visualize": [[91, 1, 1, "", "__init__"], [92, 1, 1, "", "run"]], "compass.landice.tests.dome": [[94, 0, 1, "", "Dome"]], "compass.landice.tests.dome.Dome": [[94, 1, 1, "", "__init__"]], "compass.landice.tests.dome.decomposition_test": [[95, 0, 1, "", "DecompositionTest"]], "compass.landice.tests.dome.decomposition_test.DecompositionTest": [[95, 1, 1, "", "__init__"], [96, 1, 1, "", "run"]], "compass.landice.tests.dome.restart_test": [[97, 0, 1, "", "RestartTest"]], "compass.landice.tests.dome.restart_test.RestartTest": [[97, 1, 1, "", "__init__"], [98, 1, 1, "", "run"]], "compass.landice.tests.dome.run_model": [[99, 0, 1, "", "RunModel"]], "compass.landice.tests.dome.run_model.RunModel": [[99, 1, 1, "", "__init__"], [100, 1, 1, "", "run"], [101, 1, 1, "", "setup"]], "compass.landice.tests.dome.setup_mesh": [[102, 0, 1, "", "SetupMesh"]], "compass.landice.tests.dome.setup_mesh.SetupMesh": [[102, 1, 1, "", "__init__"], [103, 1, 1, "", "run"]], "compass.landice.tests.dome.smoke_test": [[104, 0, 1, "", "SmokeTest"]], "compass.landice.tests.dome.smoke_test.SmokeTest": [[104, 1, 1, "", "__init__"], [105, 1, 1, "", "run"]], "compass.landice.tests.dome.visualize": [[106, 0, 1, "", "Visualize"], [108, 2, 1, "", "visualize_dome"]], "compass.landice.tests.dome.visualize.Visualize": [[106, 1, 1, "", "__init__"], [107, 1, 1, "", "run"]], "compass.landice.tests.eismint2": [[109, 0, 1, "", "Eismint2"]], "compass.landice.tests.eismint2.Eismint2": [[109, 1, 1, "", "__init__"]], "compass.landice.tests.eismint2.decomposition_test": [[110, 0, 1, "", "DecompositionTest"]], "compass.landice.tests.eismint2.decomposition_test.DecompositionTest": [[110, 1, 1, "", "__init__"], [111, 1, 1, "", "run"]], "compass.landice.tests.eismint2.restart_test": [[112, 0, 1, "", "RestartTest"]], "compass.landice.tests.eismint2.restart_test.RestartTest": [[112, 1, 1, "", "__init__"], [113, 1, 1, "", "run"]], "compass.landice.tests.eismint2.run_experiment": [[114, 0, 1, "", "RunExperiment"]], "compass.landice.tests.eismint2.run_experiment.RunExperiment": [[114, 1, 1, "", "__init__"], [115, 1, 1, "", "run"], [116, 1, 1, "", "setup"]], "compass.landice.tests.eismint2.setup_mesh": [[117, 0, 1, "", "SetupMesh"]], "compass.landice.tests.eismint2.setup_mesh.SetupMesh": [[117, 1, 1, "", "__init__"], [118, 1, 1, "", "run"]], "compass.landice.tests.eismint2.standard_experiments": [[119, 0, 1, "", "StandardExperiments"]], "compass.landice.tests.eismint2.standard_experiments.StandardExperiments": [[119, 1, 1, "", "__init__"], [120, 1, 1, "", "run"]], "compass.landice.tests.eismint2.standard_experiments.visualize": [[121, 0, 1, "", "Visualize"], [123, 2, 1, "", "visualize_eismint2"]], "compass.landice.tests.eismint2.standard_experiments.visualize.Visualize": [[121, 1, 1, "", "__init__"], [122, 1, 1, "", "run"]], "compass.landice.tests.enthalpy_benchmark.A": [[124, 0, 1, "", "A"]], "compass.landice.tests.enthalpy_benchmark.A.A": [[124, 1, 1, "", "__init__"], [125, 1, 1, "", "configure"], [126, 1, 1, "", "run"]], "compass.landice.tests.enthalpy_benchmark.A.visualize": [[127, 0, 1, "", "Visualize"]], "compass.landice.tests.enthalpy_benchmark.A.visualize.Visualize": [[127, 1, 1, "", "__init__"], [128, 1, 1, "", "run"]], "compass.landice.tests.enthalpy_benchmark.B": [[129, 0, 1, "", "B"]], "compass.landice.tests.enthalpy_benchmark.B.B": [[129, 1, 1, "", "__init__"], [130, 1, 1, "", "configure"], [131, 1, 1, "", "run"]], "compass.landice.tests.enthalpy_benchmark.B.visualize": [[132, 0, 1, "", "Visualize"]], "compass.landice.tests.enthalpy_benchmark.B.visualize.Visualize": [[132, 1, 1, "", "__init__"], [133, 1, 1, "", "run"]], "compass.landice.tests.enthalpy_benchmark": [[134, 0, 1, "", "EnthalpyBenchmark"]], "compass.landice.tests.enthalpy_benchmark.EnthalpyBenchmark": [[134, 1, 1, "", "__init__"]], "compass.landice.tests.enthalpy_benchmark.run_model": [[135, 0, 1, "", "RunModel"]], "compass.landice.tests.enthalpy_benchmark.run_model.RunModel": [[135, 1, 1, "", "__init__"], [136, 1, 1, "", "run"], [137, 1, 1, "", "setup"]], "compass.landice.tests.enthalpy_benchmark.setup_mesh": [[138, 0, 1, "", "SetupMesh"]], "compass.landice.tests.enthalpy_benchmark.setup_mesh.SetupMesh": [[138, 1, 1, "", "__init__"], [139, 1, 1, "", "run"]], "compass.landice.tests.greenland": [[140, 0, 1, "", "Greenland"]], "compass.landice.tests.greenland.Greenland": [[140, 1, 1, "", "__init__"]], "compass.landice.tests.greenland.decomposition_test": [[141, 0, 1, "", "DecompositionTest"]], "compass.landice.tests.greenland.decomposition_test.DecompositionTest": [[141, 1, 1, "", "__init__"], [142, 1, 1, "", "run"]], "compass.landice.tests.greenland.high_res_mesh": [[143, 0, 1, "", "HighResMesh"]], "compass.landice.tests.greenland.high_res_mesh.HighResMesh": [[143, 1, 1, "", "__init__"], [144, 1, 1, "", "run"]], "compass.landice.tests.greenland.mesh": [[145, 0, 1, "", "Mesh"]], "compass.landice.tests.greenland.mesh.Mesh": [[145, 1, 1, "", "__init__"], [146, 1, 1, "", "build_cell_width"], [147, 1, 1, "", "run"]], "compass.landice.tests.greenland.restart_test": [[148, 0, 1, "", "RestartTest"]], "compass.landice.tests.greenland.restart_test.RestartTest": [[148, 1, 1, "", "__init__"], [149, 1, 1, "", "run"]], "compass.landice.tests.greenland.run_model": [[150, 0, 1, "", "RunModel"]], "compass.landice.tests.greenland.run_model.RunModel": [[150, 1, 1, "", "__init__"], [151, 1, 1, "", "run"], [152, 1, 1, "", "setup"]], "compass.landice.tests.greenland.smoke_test": [[153, 0, 1, "", "SmokeTest"]], "compass.landice.tests.greenland.smoke_test.SmokeTest": [[153, 1, 1, "", "__init__"], [154, 1, 1, "", "run"]], "compass.landice.tests.humboldt": [[155, 0, 1, "", "Humboldt"]], "compass.landice.tests.humboldt.Humboldt": [[155, 1, 1, "", "__init__"]], "compass.landice.tests.humboldt.decomposition_test": [[156, 0, 1, "", "DecompositionTest"]], "compass.landice.tests.humboldt.decomposition_test.DecompositionTest": [[156, 1, 1, "", "__init__"], [157, 1, 1, "", "validate"]], "compass.landice.tests.humboldt.mesh": [[158, 0, 1, "", "Mesh"]], "compass.landice.tests.humboldt.mesh.Mesh": [[158, 1, 1, "", "__init__"], [159, 1, 1, "", "run"]], "compass.landice.tests.humboldt.mesh_gen": [[160, 0, 1, "", "MeshGen"]], "compass.landice.tests.humboldt.mesh_gen.MeshGen": [[160, 1, 1, "", "__init__"], [161, 1, 1, "", "run"]], "compass.landice.tests.humboldt.restart_test": [[162, 0, 1, "", "RestartTest"]], "compass.landice.tests.humboldt.restart_test.RestartTest": [[162, 1, 1, "", "__init__"], [163, 1, 1, "", "validate"]], "compass.landice.tests.humboldt.run_model": [[164, 0, 1, "", "RunModel"]], "compass.landice.tests.humboldt.run_model.RunModel": [[164, 1, 1, "", "__init__"], [165, 1, 1, "", "run"]], "compass.landice.tests.hydro_radial": [[166, 0, 1, "", "HydroRadial"]], "compass.landice.tests.hydro_radial.HydroRadial": [[166, 1, 1, "", "__init__"]], "compass.landice.tests.hydro_radial.decomposition_test": [[167, 0, 1, "", "DecompositionTest"]], "compass.landice.tests.hydro_radial.decomposition_test.DecompositionTest": [[167, 1, 1, "", "__init__"], [168, 1, 1, "", "run"]], "compass.landice.tests.hydro_radial.restart_test": [[169, 0, 1, "", "RestartTest"]], "compass.landice.tests.hydro_radial.restart_test.RestartTest": [[169, 1, 1, "", "__init__"], [170, 1, 1, "", "run"]], "compass.landice.tests.hydro_radial.run_model": [[171, 0, 1, "", "RunModel"]], "compass.landice.tests.hydro_radial.run_model.RunModel": [[171, 1, 1, "", "__init__"], [172, 1, 1, "", "run"], [173, 1, 1, "", "setup"]], "compass.landice.tests.hydro_radial.setup_mesh": [[174, 0, 1, "", "SetupMesh"]], "compass.landice.tests.hydro_radial.setup_mesh.SetupMesh": [[174, 1, 1, "", "__init__"], [175, 1, 1, "", "run"]], "compass.landice.tests.hydro_radial.spinup_test": [[176, 0, 1, "", "SpinupTest"]], "compass.landice.tests.hydro_radial.spinup_test.SpinupTest": [[176, 1, 1, "", "__init__"], [177, 1, 1, "", "run"]], "compass.landice.tests.hydro_radial.steady_state_drift_test": [[178, 0, 1, "", "SteadyStateDriftTest"]], "compass.landice.tests.hydro_radial.steady_state_drift_test.SteadyStateDriftTest": [[178, 1, 1, "", "__init__"], [179, 1, 1, "", "run"]], "compass.landice.tests.hydro_radial.visualize": [[180, 0, 1, "", "Visualize"], [182, 2, 1, "", "visualize_hydro_radial"]], "compass.landice.tests.hydro_radial.visualize.Visualize": [[180, 1, 1, "", "__init__"], [181, 1, 1, "", "run"]], "compass.landice.tests.ismip6_forcing": [[183, 0, 1, "", "Ismip6Forcing"]], "compass.landice.tests.ismip6_forcing.Ismip6Forcing": [[183, 1, 1, "", "__init__"]], "compass.landice.tests.ismip6_forcing.atmosphere": [[184, 0, 1, "", "Atmosphere"], [186, 3, 0, "-", "create_mapfile_smb"]], "compass.landice.tests.ismip6_forcing.atmosphere.Atmosphere": [[184, 1, 1, "", "__init__"], [185, 1, 1, "", "configure"]], "compass.landice.tests.ismip6_forcing.atmosphere.create_mapfile_smb": [[187, 2, 1, "", "build_mapping_file"], [188, 2, 1, "", "create_atm_scrip"]], "compass.landice.tests.ismip6_forcing.atmosphere.process_smb": [[189, 0, 1, "", "ProcessSMB"]], "compass.landice.tests.ismip6_forcing.atmosphere.process_smb.ProcessSMB": [[189, 1, 1, "", "__init__"], [190, 1, 1, "", "correct_smb_anomaly_for_climatology"], [191, 1, 1, "", "remap_ismip6_smb_to_mali"], [192, 1, 1, "", "rename_ismip6_smb_to_mali_vars"], [193, 1, 1, "", "run"], [194, 1, 1, "", "setup"]], "compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo": [[195, 0, 1, "", "ProcessSmbRacmo"]], "compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.ProcessSmbRacmo": [[195, 1, 1, "", "__init__"], [196, 1, 1, "", "correct_smb_anomaly_for_base_smb"], [197, 1, 1, "", "remap_source_smb_to_mali"], [198, 1, 1, "", "rename_source_smb_to_mali_vars"], [199, 1, 1, "", "run"], [200, 1, 1, "", "setup"]], "compass.landice.tests.ismip6_forcing.configure": [[201, 2, 1, "", "configure"]], "compass.landice.tests.ismip6_forcing.create_mapfile": [[202, 2, 1, "", "build_mapping_file"]], "compass.landice.tests.ismip6_forcing.ocean_basal": [[203, 0, 1, "", "OceanBasal"]], "compass.landice.tests.ismip6_forcing.ocean_basal.OceanBasal": [[203, 1, 1, "", "__init__"], [204, 1, 1, "", "configure"]], "compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt": [[205, 0, 1, "", "ProcessBasalMelt"]], "compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.ProcessBasalMelt": [[205, 1, 1, "", "__init__"], [206, 1, 1, "", "combine_ismip6_inputfiles"], [207, 1, 1, "", "remap_ismip6_basal_melt_to_mali_vars"], [208, 1, 1, "", "rename_ismip6_basal_melt_to_mali_vars"], [209, 1, 1, "", "run"], [210, 1, 1, "", "setup"]], "compass.landice.tests.ismip6_forcing.ocean_thermal": [[211, 0, 1, "", "OceanThermal"]], "compass.landice.tests.ismip6_forcing.ocean_thermal.OceanThermal": [[211, 1, 1, "", "__init__"], [212, 1, 1, "", "configure"]], "compass.landice.tests.ismip6_forcing.ocean_thermal.process_thermal_forcing": [[213, 0, 1, "", "ProcessThermalForcing"]], "compass.landice.tests.ismip6_forcing.ocean_thermal.process_thermal_forcing.ProcessThermalForcing": [[213, 1, 1, "", "__init__"], [214, 1, 1, "", "remap_ismip6_thermal_forcing_to_mali_vars"], [215, 1, 1, "", "rename_ismip6_thermal_forcing_to_mali_vars"], [216, 1, 1, "", "run"], [217, 1, 1, "", "setup"]], "compass.landice.tests.kangerlussuaq": [[218, 0, 1, "", "Kangerlussuaq"]], "compass.landice.tests.kangerlussuaq.Kangerlussuaq": [[218, 1, 1, "", "__init__"]], "compass.landice.tests.kangerlussuaq.mesh": [[219, 0, 1, "", "Mesh"]], "compass.landice.tests.kangerlussuaq.mesh.Mesh": [[219, 1, 1, "", "__init__"], [220, 1, 1, "", "run"]], "compass.landice.tests.kangerlussuaq.mesh_gen": [[221, 0, 1, "", "MeshGen"]], "compass.landice.tests.kangerlussuaq.mesh_gen.MeshGen": [[221, 1, 1, "", "__init__"], [222, 1, 1, "", "run"]], "compass.landice.tests.koge_bugt_s": [[223, 0, 1, "", "KogeBugtS"]], "compass.landice.tests.koge_bugt_s.KogeBugtS": [[223, 1, 1, "", "__init__"]], "compass.landice.tests.koge_bugt_s.mesh": [[224, 0, 1, "", "Mesh"]], "compass.landice.tests.koge_bugt_s.mesh.Mesh": [[224, 1, 1, "", "__init__"], [225, 1, 1, "", "run"]], "compass.landice.tests.koge_bugt_s.mesh_gen": [[226, 0, 1, "", "MeshGen"]], "compass.landice.tests.koge_bugt_s.mesh_gen.MeshGen": [[226, 1, 1, "", "__init__"], [227, 1, 1, "", "run"]], "compass.landice.tests.mismipplus": [[228, 0, 1, "", "MISMIPplus"]], "compass.landice.tests.mismipplus.MISMIPplus": [[228, 1, 1, "", "__init__"]], "compass.landice.tests.mismipplus.run_model": [[229, 0, 1, "", "RunModel"]], "compass.landice.tests.mismipplus.run_model.RunModel": [[229, 1, 1, "", "__init__"], [230, 1, 1, "", "run"], [231, 1, 1, "", "setup"]], "compass.landice.tests.mismipplus.smoke_test": [[232, 0, 1, "", "SmokeTest"]], "compass.landice.tests.mismipplus.smoke_test.SmokeTest": [[232, 1, 1, "", "__init__"], [233, 1, 1, "", "run"]], "compass.landice.tests.thwaites": [[234, 0, 1, "", "Thwaites"]], "compass.landice.tests.thwaites.Thwaites": [[234, 1, 1, "", "__init__"]], "compass.landice.tests.thwaites.decomposition_test": [[235, 0, 1, "", "DecompositionTest"]], "compass.landice.tests.thwaites.decomposition_test.DecompositionTest": [[235, 1, 1, "", "__init__"], [236, 1, 1, "", "run"]], "compass.landice.tests.thwaites.restart_test": [[237, 0, 1, "", "RestartTest"]], "compass.landice.tests.thwaites.restart_test.RestartTest": [[237, 1, 1, "", "__init__"], [238, 1, 1, "", "run"]], "compass.landice.tests.thwaites.run_model": [[239, 0, 1, "", "RunModel"]], "compass.landice.tests.thwaites.run_model.RunModel": [[239, 1, 1, "", "__init__"], [240, 1, 1, "", "run"], [241, 1, 1, "", "setup"]], "compass.list": [[39, 2, 1, "", "list_cases"], [40, 2, 1, "", "list_machines"], [41, 2, 1, "", "list_suites"]], "compass.logging": [[42, 2, 1, "", "log_method_call"]], "compass.mesh": [[43, 0, 1, "", "IcosahedralMeshStep"], [50, 0, 1, "", "QuasiUniformSphericalMeshStep"]], "compass.mesh.IcosahedralMeshStep": [[43, 1, 1, "", "__init__"], [44, 1, 1, "", "build_subdivisions_cell_width_lat_lon"], [45, 1, 1, "", "get_cell_width"], [46, 1, 1, "", "get_subdivisions"], [47, 1, 1, "", "make_jigsaw_mesh"], [48, 1, 1, "", "run"], [49, 1, 1, "", "setup"]], "compass.mesh.QuasiUniformSphericalMeshStep": [[50, 1, 1, "", "__init__"], [51, 1, 1, "", "build_cell_width_lat_lon"], [52, 1, 1, "", "make_jigsaw_mesh"], [53, 1, 1, "", "run"], [54, 1, 1, "", "setup"]], "compass.mesh.spherical": [[55, 0, 1, "", "SphericalBaseStep"]], "compass.mesh.spherical.SphericalBaseStep": [[55, 1, 1, "", "__init__"], [56, 1, 1, "", "run"], [57, 1, 1, "", "save_and_plot_cell_width"], [58, 1, 1, "", "setup"]], "compass.model": [[59, 2, 1, "", "make_graph_file"], [60, 2, 1, "", "partition"], [61, 2, 1, "", "run_model"]], "compass.mpas_cores": [[62, 2, 1, "", "get_mpas_cores"]], "compass.ocean": [[265, 0, 1, "", "Ocean"]], "compass.ocean.Ocean": [[265, 1, 1, "", "__init__"]], "compass.ocean.haney": [[266, 2, 1, "", "compute_haney_number"]], "compass.ocean.iceshelf": [[267, 2, 1, "", "adjust_ssh"], [268, 2, 1, "", "compute_land_ice_pressure_and_draft"]], "compass.ocean.mesh.cull": [[269, 0, 1, "", "CullMeshStep"], [272, 2, 1, "", "cull_mesh"]], "compass.ocean.mesh.cull.CullMeshStep": [[269, 1, 1, "", "__init__"], [270, 1, 1, "", "run"], [271, 1, 1, "", "setup"]], "compass.ocean.mesh.floodplain": [[273, 0, 1, "", "FloodplainMeshStep"]], "compass.ocean.mesh.floodplain.FloodplainMeshStep": [[273, 1, 1, "", "__init__"], [274, 1, 1, "", "run"]], "compass.ocean.particles": [[275, 2, 1, "", "remap_particles"], [276, 2, 1, "", "write"]], "compass.ocean.plot": [[277, 2, 1, "", "plot_initial_state"], [278, 2, 1, "", "plot_vertical_grid"]], "compass.ocean.tests.baroclinic_channel": [[279, 0, 1, "", "BaroclinicChannel"], [280, 2, 1, "", "configure"]], "compass.ocean.tests.baroclinic_channel.BaroclinicChannel": [[279, 1, 1, "", "__init__"]], "compass.ocean.tests.baroclinic_channel.decomp_test": [[281, 0, 1, "", "DecompTest"]], "compass.ocean.tests.baroclinic_channel.decomp_test.DecompTest": [[281, 1, 1, "", "__init__"], [282, 1, 1, "", "configure"], [283, 1, 1, "", "run"]], "compass.ocean.tests.baroclinic_channel.default": [[284, 0, 1, "", "Default"]], "compass.ocean.tests.baroclinic_channel.default.Default": [[284, 1, 1, "", "__init__"], [285, 1, 1, "", "configure"], [286, 1, 1, "", "run"]], "compass.ocean.tests.baroclinic_channel.forward": [[287, 0, 1, "", "Forward"]], "compass.ocean.tests.baroclinic_channel.forward.Forward": [[287, 1, 1, "", "__init__"], [288, 1, 1, "", "run"], [289, 1, 1, "", "setup"]], "compass.ocean.tests.baroclinic_channel.initial_state": [[290, 0, 1, "", "InitialState"]], "compass.ocean.tests.baroclinic_channel.initial_state.InitialState": [[290, 1, 1, "", "__init__"], [291, 1, 1, "", "run"], [292, 1, 1, "", "setup"]], "compass.ocean.tests.baroclinic_channel.restart_test": [[293, 0, 1, "", "RestartTest"]], "compass.ocean.tests.baroclinic_channel.restart_test.RestartTest": [[293, 1, 1, "", "__init__"], [294, 1, 1, "", "configure"], [295, 1, 1, "", "run"]], "compass.ocean.tests.baroclinic_channel.rpe_test": [[296, 0, 1, "", "RpeTest"]], "compass.ocean.tests.baroclinic_channel.rpe_test.RpeTest": [[296, 1, 1, "", "__init__"], [297, 1, 1, "", "configure"], [298, 1, 1, "", "run"]], "compass.ocean.tests.baroclinic_channel.rpe_test.analysis": [[299, 0, 1, "", "Analysis"]], "compass.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis": [[299, 1, 1, "", "__init__"], [300, 1, 1, "", "run"], [301, 1, 1, "", "setup"]], "compass.ocean.tests.baroclinic_channel.threads_test": [[302, 0, 1, "", "ThreadsTest"]], "compass.ocean.tests.baroclinic_channel.threads_test.ThreadsTest": [[302, 1, 1, "", "__init__"], [303, 1, 1, "", "configure"], [304, 1, 1, "", "run"]], "compass.ocean.tests.dam_break": [[305, 0, 1, "", "DamBreak"]], "compass.ocean.tests.dam_break.DamBreak": [[305, 1, 1, "", "__init__"]], "compass.ocean.tests.dam_break.default": [[306, 0, 1, "", "Default"]], "compass.ocean.tests.dam_break.default.Default": [[306, 1, 1, "", "__init__"], [307, 1, 1, "", "configure"]], "compass.ocean.tests.dam_break.forward": [[308, 0, 1, "", "Forward"]], "compass.ocean.tests.dam_break.forward.Forward": [[308, 1, 1, "", "__init__"], [309, 1, 1, "", "run"]], "compass.ocean.tests.dam_break.initial_state": [[310, 0, 1, "", "InitialState"]], "compass.ocean.tests.dam_break.initial_state.InitialState": [[310, 1, 1, "", "__init__"], [311, 1, 1, "", "run"]], "compass.ocean.tests.dam_break.viz": [[312, 0, 1, "", "Viz"]], "compass.ocean.tests.dam_break.viz.Viz": [[312, 1, 1, "", "__init__"], [313, 1, 1, "", "run"]], "compass.ocean.tests.drying_slope": [[314, 0, 1, "", "DryingSlope"]], "compass.ocean.tests.drying_slope.DryingSlope": [[314, 1, 1, "", "__init__"]], "compass.ocean.tests.drying_slope.default": [[315, 0, 1, "", "Default"]], "compass.ocean.tests.drying_slope.default.Default": [[315, 1, 1, "", "__init__"], [316, 1, 1, "", "configure"]], "compass.ocean.tests.drying_slope.forward": [[317, 0, 1, "", "Forward"]], "compass.ocean.tests.drying_slope.forward.Forward": [[317, 1, 1, "", "__init__"], [318, 1, 1, "", "run"]], "compass.ocean.tests.drying_slope.initial_state": [[319, 0, 1, "", "InitialState"]], "compass.ocean.tests.drying_slope.initial_state.InitialState": [[319, 1, 1, "", "__init__"], [320, 1, 1, "", "run"]], "compass.ocean.tests.drying_slope.viz": [[321, 0, 1, "", "Viz"]], "compass.ocean.tests.drying_slope.viz.Viz": [[321, 1, 1, "", "__init__"], [322, 1, 1, "", "run"]], "compass.ocean.tests.global_convergence": [[323, 0, 1, "", "GlobalConvergence"]], "compass.ocean.tests.global_convergence.GlobalConvergence": [[323, 1, 1, "", "__init__"]], "compass.ocean.tests.global_convergence.cosine_bell": [[324, 0, 1, "", "CosineBell"]], "compass.ocean.tests.global_convergence.cosine_bell.CosineBell": [[324, 1, 1, "", "__init__"], [325, 1, 1, "", "configure"], [326, 1, 1, "", "run"]], "compass.ocean.tests.global_convergence.cosine_bell.analysis": [[327, 0, 1, "", "Analysis"]], "compass.ocean.tests.global_convergence.cosine_bell.analysis.Analysis": [[327, 1, 1, "", "__init__"], [328, 1, 1, "", "rmse"], [329, 1, 1, "", "run"]], "compass.ocean.tests.global_convergence.cosine_bell.forward": [[330, 0, 1, "", "Forward"]], "compass.ocean.tests.global_convergence.cosine_bell.forward.Forward": [[330, 1, 1, "", "__init__"], [331, 1, 1, "", "get_dt"], [332, 1, 1, "", "run"], [333, 1, 1, "", "setup"]], "compass.ocean.tests.global_convergence.cosine_bell.init": [[334, 0, 1, "", "Init"]], "compass.ocean.tests.global_convergence.cosine_bell.init.Init": [[334, 1, 1, "", "__init__"], [335, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean": [[336, 0, 1, "", "GlobalOcean"], [340, 3, 0, "-", "configure"]], "compass.ocean.tests.global_ocean.GlobalOcean": [[336, 1, 1, "", "__init__"]], "compass.ocean.tests.global_ocean.analysis_test": [[337, 0, 1, "", "AnalysisTest"]], "compass.ocean.tests.global_ocean.analysis_test.AnalysisTest": [[337, 1, 1, "", "__init__"], [338, 1, 1, "", "configure"], [339, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.configure": [[341, 2, 1, "", "configure_global_ocean"]], "compass.ocean.tests.global_ocean.daily_output_test": [[342, 0, 1, "", "DailyOutputTest"]], "compass.ocean.tests.global_ocean.daily_output_test.DailyOutputTest": [[342, 1, 1, "", "__init__"], [343, 1, 1, "", "configure"], [344, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.decomp_test": [[345, 0, 1, "", "DecompTest"]], "compass.ocean.tests.global_ocean.decomp_test.DecompTest": [[345, 1, 1, "", "__init__"], [346, 1, 1, "", "configure"], [347, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.dynamic_adjustment": [[348, 0, 1, "", "DynamicAdjustment"]], "compass.ocean.tests.global_ocean.dynamic_adjustment.DynamicAdjustment": [[348, 1, 1, "", "__init__"], [349, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.files_for_e3sm": [[350, 0, 1, "", "FilesForE3SM"]], "compass.ocean.tests.global_ocean.files_for_e3sm.FilesForE3SM": [[350, 1, 1, "", "__init__"], [351, 1, 1, "", "configure"], [352, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.files_for_e3sm.diagnostics_files": [[353, 0, 1, "", "DiagnosticsFiles"]], "compass.ocean.tests.global_ocean.files_for_e3sm.diagnostics_files.DiagnosticsFiles": [[353, 1, 1, "", "__init__"], [354, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.files_for_e3sm.ocean_graph_partition": [[355, 0, 1, "", "OceanGraphPartition"]], "compass.ocean.tests.global_ocean.files_for_e3sm.ocean_graph_partition.OceanGraphPartition": [[355, 1, 1, "", "__init__"], [356, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.files_for_e3sm.ocean_initial_condition": [[357, 0, 1, "", "OceanInitialCondition"]], "compass.ocean.tests.global_ocean.files_for_e3sm.ocean_initial_condition.OceanInitialCondition": [[357, 1, 1, "", "__init__"], [358, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.files_for_e3sm.scrip": [[359, 0, 1, "", "Scrip"]], "compass.ocean.tests.global_ocean.files_for_e3sm.scrip.Scrip": [[359, 1, 1, "", "__init__"], [360, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.files_for_e3sm.seaice_initial_condition": [[361, 0, 1, "", "SeaiceInitialCondition"]], "compass.ocean.tests.global_ocean.files_for_e3sm.seaice_initial_condition.SeaiceInitialCondition": [[361, 1, 1, "", "__init__"], [362, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.forward": [[363, 0, 1, "", "ForwardStep"], [366, 0, 1, "", "ForwardTestCase"]], "compass.ocean.tests.global_ocean.forward.ForwardStep": [[363, 1, 1, "", "__init__"], [364, 1, 1, "", "run"], [365, 1, 1, "", "setup"]], "compass.ocean.tests.global_ocean.forward.ForwardTestCase": [[366, 1, 1, "", "__init__"], [367, 1, 1, "", "configure"], [368, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.init": [[369, 0, 1, "", "Init"]], "compass.ocean.tests.global_ocean.init.Init": [[369, 1, 1, "", "__init__"], [370, 1, 1, "", "configure"], [371, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.init.initial_state": [[372, 0, 1, "", "InitialState"]], "compass.ocean.tests.global_ocean.init.initial_state.InitialState": [[372, 1, 1, "", "__init__"], [373, 1, 1, "", "run"], [374, 1, 1, "", "setup"]], "compass.ocean.tests.global_ocean.init.ssh_adjustment": [[375, 0, 1, "", "SshAdjustment"]], "compass.ocean.tests.global_ocean.init.ssh_adjustment.SshAdjustment": [[375, 1, 1, "", "__init__"], [376, 1, 1, "", "run"], [377, 1, 1, "", "setup"]], "compass.ocean.tests.global_ocean.mesh": [[378, 0, 1, "", "Mesh"]], "compass.ocean.tests.global_ocean.mesh.Mesh": [[378, 1, 1, "", "__init__"], [379, 1, 1, "", "configure"], [380, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.mesh.ec30to60": [[381, 0, 1, "", "EC30to60BaseMesh"]], "compass.ocean.tests.global_ocean.mesh.ec30to60.EC30to60BaseMesh": [[381, 1, 1, "", "__init__"], [382, 1, 1, "", "build_cell_width_lat_lon"]], "compass.ocean.tests.global_ocean.mesh.ec30to60.dynamic_adjustment": [[383, 0, 1, "", "EC30to60DynamicAdjustment"]], "compass.ocean.tests.global_ocean.mesh.ec30to60.dynamic_adjustment.EC30to60DynamicAdjustment": [[383, 1, 1, "", "__init__"], [384, 1, 1, "", "configure"], [385, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.mesh.qu240.dynamic_adjustment": [[386, 0, 1, "", "QU240DynamicAdjustment"]], "compass.ocean.tests.global_ocean.mesh.qu240.dynamic_adjustment.QU240DynamicAdjustment": [[386, 1, 1, "", "__init__"], [387, 1, 1, "", "configure"], [388, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.mesh.so12to60": [[389, 0, 1, "", "SO12to60BaseMesh"]], "compass.ocean.tests.global_ocean.mesh.so12to60.SO12to60BaseMesh": [[389, 1, 1, "", "__init__"], [390, 1, 1, "", "build_cell_width_lat_lon"]], "compass.ocean.tests.global_ocean.mesh.so12to60.dynamic_adjustment": [[391, 0, 1, "", "SO12to60DynamicAdjustment"]], "compass.ocean.tests.global_ocean.mesh.so12to60.dynamic_adjustment.SO12to60DynamicAdjustment": [[391, 1, 1, "", "__init__"], [392, 1, 1, "", "configure"], [393, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.mesh.wc14": [[394, 0, 1, "", "WC14BaseMesh"]], "compass.ocean.tests.global_ocean.mesh.wc14.WC14BaseMesh": [[394, 1, 1, "", "__init__"], [395, 1, 1, "", "build_cell_width_lat_lon"]], "compass.ocean.tests.global_ocean.mesh.wc14.dynamic_adjustment": [[396, 0, 1, "", "WC14DynamicAdjustment"]], "compass.ocean.tests.global_ocean.mesh.wc14.dynamic_adjustment.WC14DynamicAdjustment": [[396, 1, 1, "", "__init__"], [397, 1, 1, "", "configure"], [398, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.metadata": [[399, 2, 1, "", "add_mesh_and_init_metadata"], [400, 2, 1, "", "get_e3sm_mesh_names"]], "compass.ocean.tests.global_ocean.performance_test": [[401, 0, 1, "", "PerformanceTest"]], "compass.ocean.tests.global_ocean.performance_test.PerformanceTest": [[401, 1, 1, "", "__init__"], [402, 1, 1, "", "configure"], [403, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.restart_test": [[404, 0, 1, "", "RestartTest"]], "compass.ocean.tests.global_ocean.restart_test.RestartTest": [[404, 1, 1, "", "__init__"], [405, 1, 1, "", "configure"], [406, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.threads_test": [[407, 0, 1, "", "ThreadsTest"]], "compass.ocean.tests.global_ocean.threads_test.ThreadsTest": [[407, 1, 1, "", "__init__"], [408, 1, 1, "", "configure"], [409, 1, 1, "", "run"]], "compass.ocean.tests.gotm": [[410, 0, 1, "", "Gotm"]], "compass.ocean.tests.gotm.Gotm": [[410, 1, 1, "", "__init__"]], "compass.ocean.tests.gotm.default": [[411, 0, 1, "", "Default"]], "compass.ocean.tests.gotm.default.Default": [[411, 1, 1, "", "__init__"], [412, 1, 1, "", "validate"]], "compass.ocean.tests.gotm.default.analysis": [[413, 0, 1, "", "Analysis"]], "compass.ocean.tests.gotm.default.analysis.Analysis": [[413, 1, 1, "", "__init__"], [414, 1, 1, "", "run"]], "compass.ocean.tests.gotm.default.forward": [[415, 0, 1, "", "Forward"]], "compass.ocean.tests.gotm.default.forward.Forward": [[415, 1, 1, "", "__init__"], [416, 1, 1, "", "run"]], "compass.ocean.tests.gotm.default.init": [[417, 0, 1, "", "Init"]], "compass.ocean.tests.gotm.default.init.Init": [[417, 1, 1, "", "__init__"], [418, 1, 1, "", "run"]], "compass.ocean.tests.hurricane": [[419, 0, 1, "", "Hurricane"], [426, 3, 0, "-", "configure"]], "compass.ocean.tests.hurricane.Hurricane": [[419, 1, 1, "", "__init__"]], "compass.ocean.tests.hurricane.analysis": [[420, 0, 1, "", "Analysis"]], "compass.ocean.tests.hurricane.analysis.Analysis": [[420, 1, 1, "", "__init__"], [421, 1, 1, "", "read_pointstats"], [422, 1, 1, "", "read_station_data"], [423, 1, 1, "", "read_station_file"], [424, 1, 1, "", "run"], [425, 1, 1, "", "setup"]], "compass.ocean.tests.hurricane.forward": [[427, 0, 1, "", "Forward"]], "compass.ocean.tests.hurricane.forward.Forward": [[427, 1, 1, "", "__init__"], [428, 1, 1, "", "configure"], [429, 1, 1, "", "run"]], "compass.ocean.tests.hurricane.forward.forward": [[430, 0, 1, "", "ForwardStep"]], "compass.ocean.tests.hurricane.forward.forward.ForwardStep": [[430, 1, 1, "", "__init__"], [431, 1, 1, "", "run"], [432, 1, 1, "", "setup"]], "compass.ocean.tests.hurricane.init": [[433, 0, 1, "", "Init"]], "compass.ocean.tests.hurricane.init.Init": [[433, 1, 1, "", "__init__"], [434, 1, 1, "", "configure"], [435, 1, 1, "", "run"]], "compass.ocean.tests.hurricane.init.create_pointstats_file": [[436, 0, 1, "", "CreatePointstatsFile"]], "compass.ocean.tests.hurricane.init.create_pointstats_file.CreatePointstatsFile": [[436, 1, 1, "", "__init__"], [437, 1, 1, "", "create_pointstats_file"], [438, 1, 1, "", "run"]], "compass.ocean.tests.hurricane.init.initial_state": [[439, 0, 1, "", "InitialState"]], "compass.ocean.tests.hurricane.init.initial_state.InitialState": [[439, 1, 1, "", "__init__"], [440, 1, 1, "", "run"], [441, 1, 1, "", "setup"]], "compass.ocean.tests.hurricane.init.interpolate_atm_forcing": [[442, 0, 1, "", "InterpolateAtmForcing"]], "compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing": [[442, 1, 1, "", "__init__"], [443, 1, 1, "", "interpolate_data_to_grid"], [444, 1, 1, "", "plot_interp_data"], [445, 1, 1, "", "run"], [446, 1, 1, "", "write_to_file"]], "compass.ocean.tests.hurricane.mesh": [[447, 0, 1, "", "Mesh"]], "compass.ocean.tests.hurricane.mesh.Mesh": [[447, 1, 1, "", "__init__"], [448, 1, 1, "", "configure"], [449, 1, 1, "", "run"]], "compass.ocean.tests.hurricane.mesh.dequ120at30cr10rr2": [[450, 0, 1, "", "DEQU120at30cr10rr2BaseMesh"]], "compass.ocean.tests.hurricane.mesh.dequ120at30cr10rr2.DEQU120at30cr10rr2BaseMesh": [[450, 1, 1, "", "__init__"], [451, 1, 1, "", "build_cell_width_lat_lon"]], "compass.ocean.tests.ice_shelf_2d": [[452, 0, 1, "", "IceShelf2d"], [453, 2, 1, "", "configure"]], "compass.ocean.tests.ice_shelf_2d.IceShelf2d": [[452, 1, 1, "", "__init__"]], "compass.ocean.tests.ice_shelf_2d.default": [[454, 0, 1, "", "Default"]], "compass.ocean.tests.ice_shelf_2d.default.Default": [[454, 1, 1, "", "__init__"], [455, 1, 1, "", "configure"], [456, 1, 1, "", "run"]], "compass.ocean.tests.ice_shelf_2d.forward": [[457, 0, 1, "", "Forward"]], "compass.ocean.tests.ice_shelf_2d.forward.Forward": [[457, 1, 1, "", "__init__"], [458, 1, 1, "", "run"], [459, 1, 1, "", "setup"]], "compass.ocean.tests.ice_shelf_2d.initial_state": [[460, 0, 1, "", "InitialState"]], "compass.ocean.tests.ice_shelf_2d.initial_state.InitialState": [[460, 1, 1, "", "__init__"], [461, 1, 1, "", "run"]], "compass.ocean.tests.ice_shelf_2d.restart_test": [[462, 0, 1, "", "RestartTest"]], "compass.ocean.tests.ice_shelf_2d.restart_test.RestartTest": [[462, 1, 1, "", "__init__"], [463, 1, 1, "", "configure"], [464, 1, 1, "", "run"]], "compass.ocean.tests.ice_shelf_2d.ssh_adjustment": [[465, 0, 1, "", "SshAdjustment"]], "compass.ocean.tests.ice_shelf_2d.ssh_adjustment.SshAdjustment": [[465, 1, 1, "", "__init__"], [466, 1, 1, "", "run"], [467, 1, 1, "", "setup"]], "compass.ocean.tests.ice_shelf_2d.viz": [[468, 0, 1, "", "Viz"]], "compass.ocean.tests.ice_shelf_2d.viz.Viz": [[468, 1, 1, "", "__init__"], [469, 1, 1, "", "run"]], "compass.ocean.tests.internal_wave": [[470, 0, 1, "", "InternalWave"]], "compass.ocean.tests.internal_wave.InternalWave": [[470, 1, 1, "", "__init__"]], "compass.ocean.tests.internal_wave.default": [[471, 0, 1, "", "Default"]], "compass.ocean.tests.internal_wave.default.Default": [[471, 1, 1, "", "__init__"], [472, 1, 1, "", "validate"]], "compass.ocean.tests.internal_wave.forward": [[473, 0, 1, "", "Forward"]], "compass.ocean.tests.internal_wave.forward.Forward": [[473, 1, 1, "", "__init__"], [474, 1, 1, "", "run"]], "compass.ocean.tests.internal_wave.initial_state": [[475, 0, 1, "", "InitialState"]], "compass.ocean.tests.internal_wave.initial_state.InitialState": [[475, 1, 1, "", "__init__"], [476, 1, 1, "", "run"]], "compass.ocean.tests.internal_wave.rpe_test": [[477, 0, 1, "", "RpeTest"]], "compass.ocean.tests.internal_wave.rpe_test.RpeTest": [[477, 1, 1, "", "__init__"]], "compass.ocean.tests.internal_wave.rpe_test.analysis": [[478, 0, 1, "", "Analysis"]], "compass.ocean.tests.internal_wave.rpe_test.analysis.Analysis": [[478, 1, 1, "", "__init__"], [479, 1, 1, "", "run"]], "compass.ocean.tests.internal_wave.ten_day_test": [[480, 0, 1, "", "TenDayTest"]], "compass.ocean.tests.internal_wave.ten_day_test.TenDayTest": [[480, 1, 1, "", "__init__"], [481, 1, 1, "", "validate"]], "compass.ocean.tests.internal_wave.viz": [[482, 0, 1, "", "Viz"]], "compass.ocean.tests.internal_wave.viz.Viz": [[482, 1, 1, "", "__init__"], [483, 1, 1, "", "run"]], "compass.ocean.tests.isomip_plus": [[484, 0, 1, "", "IsomipPlus"]], "compass.ocean.tests.isomip_plus.IsomipPlus": [[484, 1, 1, "", "__init__"]], "compass.ocean.tests.isomip_plus.evap": [[485, 2, 1, "", "update_evaporation_flux"]], "compass.ocean.tests.isomip_plus.forward": [[486, 0, 1, "", "Forward"]], "compass.ocean.tests.isomip_plus.forward.Forward": [[486, 1, 1, "", "__init__"], [487, 1, 1, "", "run"], [488, 1, 1, "", "setup"]], "compass.ocean.tests.isomip_plus.geom": [[489, 2, 1, "", "interpolate_ocean_mask"], [490, 2, 1, "", "process_input_geometry"]], "compass.ocean.tests.isomip_plus.initial_state": [[491, 0, 1, "", "InitialState"]], "compass.ocean.tests.isomip_plus.initial_state.InitialState": [[491, 1, 1, "", "__init__"], [492, 1, 1, "", "run"]], "compass.ocean.tests.isomip_plus.misomip": [[493, 0, 1, "", "Misomip"]], "compass.ocean.tests.isomip_plus.misomip.Misomip": [[493, 1, 1, "", "__init__"], [494, 1, 1, "", "run"]], "compass.ocean.tests.isomip_plus.ocean_test": [[495, 0, 1, "", "OceanTest"]], "compass.ocean.tests.isomip_plus.ocean_test.OceanTest": [[495, 1, 1, "", "__init__"], [496, 1, 1, "", "configure"], [497, 1, 1, "", "run"]], "compass.ocean.tests.isomip_plus.ssh_adjustment": [[498, 0, 1, "", "SshAdjustment"]], "compass.ocean.tests.isomip_plus.ssh_adjustment.SshAdjustment": [[498, 1, 1, "", "__init__"], [499, 1, 1, "", "run"], [500, 1, 1, "", "setup"]], "compass.ocean.tests.isomip_plus.streamfunction": [[501, 0, 1, "", "Streamfunction"]], "compass.ocean.tests.isomip_plus.streamfunction.Streamfunction": [[501, 1, 1, "", "__init__"], [502, 1, 1, "", "run"]], "compass.ocean.tests.isomip_plus.viz": [[503, 0, 1, "", "Viz"], [505, 2, 1, "", "file_complete"]], "compass.ocean.tests.isomip_plus.viz.Viz": [[503, 1, 1, "", "__init__"], [504, 1, 1, "", "run"]], "compass.ocean.tests.isomip_plus.viz.plot": [[506, 0, 1, "", "MoviePlotter"], [518, 0, 1, "", "TimeSeriesPlotter"]], "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter": [[506, 1, 1, "", "__init__"], [507, 1, 1, "", "images_to_movies"], [508, 1, 1, "", "plot_3d_field_top_bot_section"], [509, 1, 1, "", "plot_barotropic_streamfunction"], [510, 1, 1, "", "plot_horiz_series"], [511, 1, 1, "", "plot_ice_shelf_boundary_variables"], [512, 1, 1, "", "plot_layer_interfaces"], [513, 1, 1, "", "plot_melt_rates"], [514, 1, 1, "", "plot_overturning_streamfunction"], [515, 1, 1, "", "plot_potential_density"], [516, 1, 1, "", "plot_salinity"], [517, 1, 1, "", "plot_temperature"]], "compass.ocean.tests.isomip_plus.viz.plot.TimeSeriesPlotter": [[518, 1, 1, "", "__init__"], [519, 1, 1, "", "plot_melt_time_series"], [520, 1, 1, "", "plot_time_series"]], "compass.ocean.tests.merry_go_round": [[521, 0, 1, "", "MerryGoRound"]], "compass.ocean.tests.merry_go_round.MerryGoRound": [[521, 1, 1, "", "__init__"]], "compass.ocean.tests.merry_go_round.convergence_test.analysis": [[522, 0, 1, "", "Analysis"]], "compass.ocean.tests.merry_go_round.convergence_test.analysis.Analysis": [[522, 1, 1, "", "__init__"], [523, 1, 1, "", "run"]], "compass.ocean.tests.merry_go_round.default": [[524, 0, 1, "", "Default"]], "compass.ocean.tests.merry_go_round.default.Default": [[524, 1, 1, "", "__init__"], [525, 1, 1, "", "validate"]], "compass.ocean.tests.merry_go_round.forward": [[526, 0, 1, "", "Forward"]], "compass.ocean.tests.merry_go_round.forward.Forward": [[526, 1, 1, "", "__init__"], [527, 1, 1, "", "run"]], "compass.ocean.tests.merry_go_round.initial_state": [[528, 0, 1, "", "InitialState"]], "compass.ocean.tests.merry_go_round.initial_state.InitialState": [[528, 1, 1, "", "__init__"], [529, 1, 1, "", "run"]], "compass.ocean.tests.merry_go_round.viz": [[530, 0, 1, "", "Viz"]], "compass.ocean.tests.merry_go_round.viz.Viz": [[530, 1, 1, "", "__init__"], [531, 1, 1, "", "run"]], "compass.ocean.tests.planar_convergence": [[532, 0, 1, "", "PlanarConvergence"]], "compass.ocean.tests.planar_convergence.PlanarConvergence": [[532, 1, 1, "", "__init__"]], "compass.ocean.tests.planar_convergence.conv_init": [[533, 0, 1, "", "ConvInit"]], "compass.ocean.tests.planar_convergence.conv_init.ConvInit": [[533, 1, 1, "", "__init__"], [534, 1, 1, "", "run"]], "compass.ocean.tests.planar_convergence.conv_test_case": [[535, 0, 1, "", "ConvTestCase"]], "compass.ocean.tests.planar_convergence.conv_test_case.ConvTestCase": [[535, 1, 1, "", "__init__"], [536, 1, 1, "", "configure"], [537, 1, 1, "", "run"], [538, 1, 1, "", "update_cores"]], "compass.ocean.tests.planar_convergence.forward": [[539, 0, 1, "", "Forward"]], "compass.ocean.tests.planar_convergence.forward.Forward": [[539, 1, 1, "", "__init__"], [540, 1, 1, "", "get_dt_duration"], [541, 1, 1, "", "run"], [542, 1, 1, "", "setup"]], "compass.ocean.tests.planar_convergence.horizontal_advection": [[543, 0, 1, "", "HorizontalAdvection"]], "compass.ocean.tests.planar_convergence.horizontal_advection.HorizontalAdvection": [[543, 1, 1, "", "__init__"], [544, 1, 1, "", "configure"], [545, 1, 1, "", "run"]], "compass.ocean.tests.planar_convergence.horizontal_advection.analysis": [[546, 0, 1, "", "Analysis"]], "compass.ocean.tests.planar_convergence.horizontal_advection.analysis.Analysis": [[546, 1, 1, "", "__init__"], [547, 1, 1, "", "rmse"], [548, 1, 1, "", "run"]], "compass.ocean.tests.planar_convergence.horizontal_advection.init": [[549, 0, 1, "", "Init"]], "compass.ocean.tests.planar_convergence.horizontal_advection.init.Init": [[549, 1, 1, "", "__init__"], [550, 1, 1, "", "run"]], "compass.ocean.tests.soma": [[551, 0, 1, "", "Soma"]], "compass.ocean.tests.soma.Soma": [[551, 1, 1, "", "__init__"]], "compass.ocean.tests.soma.analysis": [[552, 0, 1, "", "Analysis"]], "compass.ocean.tests.soma.analysis.Analysis": [[552, 1, 1, "", "__init__"], [553, 1, 1, "", "run"]], "compass.ocean.tests.soma.forward": [[554, 0, 1, "", "Forward"]], "compass.ocean.tests.soma.forward.Forward": [[554, 1, 1, "", "__init__"], [555, 1, 1, "", "run"]], "compass.ocean.tests.soma.initial_state": [[556, 0, 1, "", "InitialState"]], "compass.ocean.tests.soma.initial_state.InitialState": [[556, 1, 1, "", "__init__"], [557, 1, 1, "", "run"]], "compass.ocean.tests.soma.soma_test_case": [[558, 0, 1, "", "SomaTestCase"]], "compass.ocean.tests.soma.soma_test_case.SomaTestCase": [[558, 1, 1, "", "__init__"], [559, 1, 1, "", "validate"]], "compass.ocean.tests.sphere_transport": [[560, 0, 1, "", "SphereTransport"]], "compass.ocean.tests.sphere_transport.SphereTransport": [[560, 1, 1, "", "__init__"]], "compass.ocean.tests.sphere_transport.correlated_tracers_2d": [[561, 0, 1, "", "CorrelatedTracers2D"]], "compass.ocean.tests.sphere_transport.correlated_tracers_2d.CorrelatedTracers2D": [[561, 1, 1, "", "__init__"], [562, 1, 1, "", "configure"], [563, 1, 1, "", "run"]], "compass.ocean.tests.sphere_transport.correlated_tracers_2d.analysis": [[564, 0, 1, "", "Analysis"]], "compass.ocean.tests.sphere_transport.correlated_tracers_2d.analysis.Analysis": [[564, 1, 1, "", "__init__"], [565, 1, 1, "", "run"]], "compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward": [[566, 0, 1, "", "Forward"]], "compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.Forward": [[566, 1, 1, "", "__init__"], [567, 1, 1, "", "get_timestep_str"], [568, 1, 1, "", "run"], [569, 1, 1, "", "setup"]], "compass.ocean.tests.sphere_transport.correlated_tracers_2d.init": [[570, 0, 1, "", "Init"]], "compass.ocean.tests.sphere_transport.correlated_tracers_2d.init.Init": [[570, 1, 1, "", "__init__"], [571, 1, 1, "", "run"]], "compass.ocean.tests.sphere_transport.correlated_tracers_2d.mesh": [[572, 0, 1, "", "Mesh"]], "compass.ocean.tests.sphere_transport.correlated_tracers_2d.mesh.Mesh": [[572, 1, 1, "", "__init__"], [573, 1, 1, "", "build_cell_width_lat_lon"], [574, 1, 1, "", "run"]], "compass.ocean.tests.sphere_transport.divergent_2d": [[575, 0, 1, "", "Divergent2D"]], "compass.ocean.tests.sphere_transport.divergent_2d.Divergent2D": [[575, 1, 1, "", "__init__"], [576, 1, 1, "", "configure"], [577, 1, 1, "", "run"]], "compass.ocean.tests.sphere_transport.divergent_2d.analysis": [[578, 0, 1, "", "Analysis"]], "compass.ocean.tests.sphere_transport.divergent_2d.analysis.Analysis": [[578, 1, 1, "", "__init__"], [579, 1, 1, "", "run"]], "compass.ocean.tests.sphere_transport.divergent_2d.forward": [[580, 0, 1, "", "Forward"]], "compass.ocean.tests.sphere_transport.divergent_2d.forward.Forward": [[580, 1, 1, "", "__init__"], [581, 1, 1, "", "get_timestep_str"], [582, 1, 1, "", "run"], [583, 1, 1, "", "setup"]], "compass.ocean.tests.sphere_transport.divergent_2d.init": [[584, 0, 1, "", "Init"]], "compass.ocean.tests.sphere_transport.divergent_2d.init.Init": [[584, 1, 1, "", "__init__"], [585, 1, 1, "", "run"]], "compass.ocean.tests.sphere_transport.divergent_2d.mesh": [[586, 0, 1, "", "Mesh"]], "compass.ocean.tests.sphere_transport.divergent_2d.mesh.Mesh": [[586, 1, 1, "", "__init__"], [587, 1, 1, "", "build_cell_width_lat_lon"], [588, 1, 1, "", "run"]], "compass.ocean.tests.sphere_transport.nondivergent_2d": [[589, 0, 1, "", "Nondivergent2D"]], "compass.ocean.tests.sphere_transport.nondivergent_2d.Nondivergent2D": [[589, 1, 1, "", "__init__"], [590, 1, 1, "", "configure"], [591, 1, 1, "", "run"]], "compass.ocean.tests.sphere_transport.nondivergent_2d.analysis": [[592, 0, 1, "", "Analysis"]], "compass.ocean.tests.sphere_transport.nondivergent_2d.analysis.Analysis": [[592, 1, 1, "", "__init__"], [593, 1, 1, "", "run"]], "compass.ocean.tests.sphere_transport.nondivergent_2d.forward": [[594, 0, 1, "", "Forward"]], "compass.ocean.tests.sphere_transport.nondivergent_2d.forward.Forward": [[594, 1, 1, "", "__init__"], [595, 1, 1, "", "get_timestep_str"], [596, 1, 1, "", "run"], [597, 1, 1, "", "setup"]], "compass.ocean.tests.sphere_transport.nondivergent_2d.init": [[598, 0, 1, "", "Init"]], "compass.ocean.tests.sphere_transport.nondivergent_2d.init.Init": [[598, 1, 1, "", "__init__"], [599, 1, 1, "", "run"]], "compass.ocean.tests.sphere_transport.nondivergent_2d.mesh": [[600, 0, 1, "", "Mesh"]], "compass.ocean.tests.sphere_transport.nondivergent_2d.mesh.Mesh": [[600, 1, 1, "", "__init__"], [601, 1, 1, "", "build_cell_width_lat_lon"], [602, 1, 1, "", "run"]], "compass.ocean.tests.sphere_transport.process_output": [[603, 2, 1, "", "compute_convergence_rates"], [604, 2, 1, "", "compute_error_from_output_ncfile"], [605, 2, 1, "", "make_convergence_arrays"], [606, 2, 1, "", "plot_convergence"], [607, 2, 1, "", "plot_filament"], [608, 2, 1, "", "plot_over_and_undershoot_errors"], [609, 2, 1, "", "plot_sol"], [610, 2, 1, "", "print_data_as_csv"], [611, 2, 1, "", "print_error_conv_table"], [612, 2, 1, "", "read_ncl_rgb_file"]], "compass.ocean.tests.sphere_transport.rotation_2d": [[613, 0, 1, "", "Rotation2D"]], "compass.ocean.tests.sphere_transport.rotation_2d.Rotation2D": [[613, 1, 1, "", "__init__"], [614, 1, 1, "", "configure"], [615, 1, 1, "", "run"]], "compass.ocean.tests.sphere_transport.rotation_2d.analysis": [[616, 0, 1, "", "Analysis"]], "compass.ocean.tests.sphere_transport.rotation_2d.analysis.Analysis": [[616, 1, 1, "", "__init__"], [617, 1, 1, "", "run"]], "compass.ocean.tests.sphere_transport.rotation_2d.forward": [[618, 0, 1, "", "Forward"]], "compass.ocean.tests.sphere_transport.rotation_2d.forward.Forward": [[618, 1, 1, "", "__init__"], [619, 1, 1, "", "get_timestep_str"], [620, 1, 1, "", "run"], [621, 1, 1, "", "setup"]], "compass.ocean.tests.sphere_transport.rotation_2d.init": [[622, 0, 1, "", "Init"]], "compass.ocean.tests.sphere_transport.rotation_2d.init.Init": [[622, 1, 1, "", "__init__"], [623, 1, 1, "", "run"]], "compass.ocean.tests.sphere_transport.rotation_2d.mesh": [[624, 0, 1, "", "Mesh"]], "compass.ocean.tests.sphere_transport.rotation_2d.mesh.Mesh": [[624, 1, 1, "", "__init__"], [625, 1, 1, "", "build_cell_width_lat_lon"], [626, 1, 1, "", "run"]], "compass.ocean.tests.ziso": [[627, 0, 1, "", "Ziso"], [628, 0, 1, "", "ZisoTestCase"], [631, 2, 1, "", "configure"]], "compass.ocean.tests.ziso.Ziso": [[627, 1, 1, "", "__init__"]], "compass.ocean.tests.ziso.ZisoTestCase": [[628, 1, 1, "", "__init__"], [629, 1, 1, "", "configure"], [630, 1, 1, "", "run"]], "compass.ocean.tests.ziso.forward": [[632, 0, 1, "", "Forward"]], "compass.ocean.tests.ziso.forward.Forward": [[632, 1, 1, "", "__init__"], [633, 1, 1, "", "run"], [634, 1, 1, "", "setup"]], "compass.ocean.tests.ziso.initial_state": [[635, 0, 1, "", "InitialState"]], "compass.ocean.tests.ziso.initial_state.InitialState": [[635, 1, 1, "", "__init__"], [636, 1, 1, "", "run"]], "compass.ocean.tests.ziso.with_frazil": [[637, 0, 1, "", "WithFrazil"]], "compass.ocean.tests.ziso.with_frazil.WithFrazil": [[637, 1, 1, "", "__init__"], [638, 1, 1, "", "configure"], [639, 1, 1, "", "run"]], "compass.ocean.vertical.grid_1d": [[640, 2, 1, "", "generate_1d_grid"], [641, 2, 1, "", "write_1d_grid"]], "compass.ocean.vertical": [[642, 2, 1, "", "init_vertical_coord"]], "compass.ocean.vertical.partial_cells": [[643, 2, 1, "", "alter_bottom_depth"], [644, 2, 1, "", "alter_ssh"]], "compass.ocean.vertical.zlevel": [[645, 2, 1, "", "compute_min_max_level_cell"], [646, 2, 1, "", "compute_z_level_layer_thickness"], [647, 2, 1, "", "compute_z_level_resting_thickness"], [648, 2, 1, "", "init_z_level_vertical_coord"]], "compass.ocean.vertical.zstar": [[649, 2, 1, "", "init_z_star_vertical_coord"]], "compass.parallel": [[63, 2, 1, "", "check_parallel_system"], [64, 2, 1, "", "get_available_cores_and_nodes"], [65, 2, 1, "", "run_command"], [66, 2, 1, "", "set_cores_per_node"]], "compass.provenance": [[67, 2, 1, "", "write"]], "compass.run.serial": [[68, 2, 1, "", "run_single_step"], [69, 2, 1, "", "run_tests"]], "compass.setup": [[70, 2, 1, "", "setup_case"], [71, 2, 1, "", "setup_cases"]], "compass.suite": [[72, 2, 1, "", "clean_suite"], [73, 2, 1, "", "setup_suite"]], "compass.validate": [[74, 2, 1, "", "compare_timers"], [75, 2, 1, "", "compare_variables"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:module"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "module", "Python module"]}, "titleterms": {"cach": [0, 4, 6, 8, 34, 668], "output": [0, 1, 668, 675], "from": [0, 668, 670, 699], "compass": [0, 1, 4, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 668, 669, 670, 673, 676, 723], "step": [0, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 263, 655, 668, 674, 675, 676, 709, 710, 712, 718, 720], "summari": [0, 1, 3], "requir": [0, 1, 3], "select": 0, "whether": 0, "us": 0, "updat": [0, 8, 668, 670, 676], "uniqu": 0, "identifi": 0, "either": 0, "normal": 0, "version": [0, 673, 726], "design": [0, 1, 2, 3], "implement": [0, 1, 3], "test": [0, 1, 3, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 251, 263, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 655, 659, 668, 669, 674, 675, 676, 677, 680, 689, 705, 710, 712, 714, 723, 724, 725], "python": 1, "packag": [1, 669], "make": [1, 8, 674, 675, 676], "case": [1, 263, 655, 668, 669, 674, 675, 676, 677, 710, 712, 723, 724], "easi": 1, "understand": 1, "modifi": 1, "creat": [1, 670, 675, 712], "share": [1, 669, 710, 712, 713, 716, 718, 719, 722], "code": [1, 669, 726], "configur": [1, 28, 125, 130, 185, 201, 204, 212, 280, 282, 285, 294, 297, 303, 307, 316, 325, 338, 340, 341, 343, 346, 351, 367, 370, 379, 384, 387, 392, 397, 402, 405, 408, 426, 428, 434, 448, 453, 455, 463, 496, 536, 544, 562, 576, 590, 614, 629, 631, 638, 655, 668, 671], "option": [1, 3, 8, 668, 670, 675, 676, 681, 682, 683, 684, 685, 686, 687, 688, 690, 691, 692, 694, 695, 696, 697, 698, 699, 700, 706, 707, 708, 709, 710, 711, 712, 713, 715, 716, 717, 718, 719, 720, 721, 722], "abil": 1, "specifi": 1, "core": [1, 4, 242, 650, 668, 669, 679, 704, 709, 718, 720], "count": 1, "machin": [1, 261, 670, 699, 723], "specif": 1, "data": [1, 698, 700], "looser": 1, "more": 1, "flexibl": 1, "directori": [1, 668], "structur": [1, 668], "user": [1, 670, 673, 677, 723], "develop": [1, 670, 673, 674, 675, 676], "friendli": 1, "document": [1, 2, 5, 7, 674, 675, 676, 726], "consider": 1, "relat": 1, "run": [1, 4, 6, 8, 19, 29, 48, 53, 56, 68, 69, 83, 86, 88, 90, 92, 96, 98, 100, 103, 105, 107, 111, 113, 115, 118, 120, 122, 126, 128, 131, 133, 136, 139, 142, 144, 147, 149, 151, 154, 159, 161, 165, 168, 170, 172, 175, 177, 179, 181, 193, 199, 209, 216, 220, 222, 225, 227, 230, 233, 236, 238, 240, 270, 274, 283, 286, 288, 291, 295, 298, 300, 304, 309, 311, 313, 318, 320, 322, 326, 329, 332, 335, 339, 344, 347, 349, 352, 354, 356, 358, 360, 362, 364, 368, 371, 373, 376, 380, 385, 388, 393, 398, 403, 406, 409, 414, 416, 418, 424, 429, 431, 435, 438, 440, 445, 449, 456, 458, 461, 464, 466, 469, 474, 476, 479, 483, 487, 492, 494, 497, 499, 502, 504, 523, 527, 529, 531, 534, 537, 541, 545, 548, 550, 553, 555, 557, 563, 565, 568, 571, 574, 577, 579, 582, 585, 588, 591, 593, 596, 599, 602, 615, 617, 620, 623, 626, 630, 633, 636, 639, 668, 670, 675, 676, 716, 723], "parallel": [1, 4, 63, 64, 65, 66], "resolut": [1, 675, 676, 709, 718, 720, 721], "can": 1, "paramet": [1, 674, 675, 676], "i": 1, "alter": 1, "rerun": 1, "support": [1, 261, 670, 699, 723], "pre": 1, "made": 1, "initi": [1, 675, 712], "condit": [1, 675], "file": [1, 8, 264, 668, 675, 677, 712], "batch": 1, "submiss": 1, "algorithm": [1, 3], "constructor": [1, 668], "setup": [1, 4, 6, 8, 22, 49, 54, 58, 70, 71, 101, 116, 137, 152, 173, 194, 200, 210, 217, 231, 241, 271, 289, 292, 301, 333, 365, 374, 377, 425, 432, 441, 459, 467, 488, 500, 542, 569, 583, 597, 621, 634, 668], "global": 1, "ocean": [1, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 704], "group": [1, 76, 251, 263, 659, 668, 669, 674, 675, 676, 689, 714], "framework": [1, 4, 8, 77, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 263, 264, 651, 652, 653, 655, 658, 660, 661, 662, 664, 667, 669, 678, 702], "within": [1, 669], "an": [1, 668, 669, 674, 675], "mpa": [1, 4, 8, 668, 669, 670, 723], "max_memori": 1, "max_disk": 1, "input": [1, 668], "templat": [3, 668], "name": 3, "topic": 3, "here": 3, "same": 3, "valid": [3, 4, 8, 30, 74, 75, 81, 157, 163, 412, 472, 481, 525, 559, 668, 676], "api": 4, "refer": 4, "command": [4, 6], "line": [4, 6], "interfac": [4, 6], "list": [4, 6, 8, 39, 40, 41], "clean": [4, 6, 8, 35], "suit": [4, 6, 8, 72, 73, 668, 680, 705, 723, 725], "base": [4, 675], "class": [4, 655, 669], "mpas_cor": [4, 62], "testgroup": [4, 31, 32], "testcas": [4, 26, 27, 28, 29, 30, 668], "config": [4, 8, 36, 675, 676, 677, 681, 682, 683, 684, 685, 686, 687, 688, 690, 691, 692, 694, 695, 696, 697, 698, 699, 700, 706, 707, 708, 709, 710, 711, 712, 713, 715, 716, 717, 718, 719, 720, 721, 722], "io": [4, 8, 37, 38], "log": [4, 8, 42], "mesh": [4, 8, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 145, 146, 147, 158, 159, 219, 220, 224, 225, 248, 249, 253, 254, 256, 264, 269, 270, 271, 272, 273, 274, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 447, 448, 449, 450, 451, 572, 573, 574, 586, 587, 588, 600, 601, 602, 624, 625, 626, 654, 655, 657, 665, 666, 674, 675, 710, 712], "model": [4, 8, 59, 60, 61, 668], "proven": [4, 8, 67], "build": [5, 670, 723], "docstr": 7, "modul": [8, 669, 670], "serial": [8, 68, 69], "comment": 8, "symlink": [8, 38, 668], "download": [8, 37, 668], "spheric": [8, 55, 56, 57, 58], "partit": [8, 60], "pio": 8, "namelist": [8, 264, 668, 675, 676], "graph": 8, "variabl": 8, "norm": 8, "timer": 8, "mpascor": [9, 10], "add_test_group": 10, "add_input_fil": 12, "add_model_as_input": 13, "add_namelist_fil": 14, "add_namelist_opt": 15, "add_output_fil": 16, "add_streams_fil": 17, "constrain_resourc": [18, 668], "runtime_setup": [20, 668], "set_resourc": 21, "update_namelist_at_runtim": 23, "update_namelist_pio": 24, "update_streams_at_runtim": 25, "add_step": 27, "add_test_cas": 32, "__main__": 33, "main": 33, "update_cach": 34, "clean_cas": 35, "compassconfigpars": 36, "list_cas": 39, "list_machin": 40, "list_suit": 41, "log_method_cal": 42, "icosahedralmeshstep": [43, 44, 45, 46, 47, 48, 49], "build_subdivisions_cell_width_lat_lon": 44, "get_cell_width": 45, "get_subdivis": 46, "make_jigsaw_mesh": [47, 52], "quasiuniformsphericalmeshstep": [50, 51, 52, 53, 54], "build_cell_width_lat_lon": [51, 382, 390, 395, 451, 573, 587, 601, 625], "sphericalbasestep": [55, 56, 57, 58], "save_and_plot_cell_width": 57, "make_graph_fil": 59, "run_model": [61, 82, 83, 87, 88, 99, 100, 101, 135, 136, 137, 150, 151, 152, 164, 165, 171, 172, 173, 229, 230, 231, 239, 240, 241, 247, 248, 249, 250, 255, 256], "get_mpas_cor": 62, "check_parallel_system": 63, "get_available_cores_and_nod": 64, "run_command": 65, "set_cores_per_nod": 66, "write": [67, 276], "run_single_step": 68, "run_test": 69, "setup_cas": [70, 71], "clean_suit": 72, "setup_suit": 73, "compare_tim": 74, "compare_vari": 75, "landic": [76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 679], "calving_dt_converg": [76, 79, 80, 81, 82, 83, 243, 680, 681], "circular_shelf": [76, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 244, 682], "dome": [76, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 245, 683], "enthalpy_benchmark": [76, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 247, 685], "eismint2": [76, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 246, 684], "greenland": [76, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 248, 686], "humboldt": [76, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 249, 687], "hydro_radi": [76, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 250, 688], "ismip6_forc": [76, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 252, 690], "kangerlussuaq": [76, 218, 219, 220, 221, 222, 253, 691], "koge_bugt_": [76, 223, 224, 225, 226, 227, 254, 692], "mismipplu": [76, 228, 229, 230, 231, 232, 233, 255, 693], "thwait": [76, 234, 235, 236, 237, 238, 239, 240, 241, 256, 694], "land": 77, "ic": [77, 264, 701, 710], "calvingdtconverg": 79, "dt_convergence_test": [80, 81, 681], "dtconvergencetest": [80, 81, 243], "runmodel": [82, 83, 87, 88, 99, 100, 101, 135, 136, 137, 150, 151, 152, 164, 165, 171, 172, 173, 229, 230, 231, 239, 240, 241, 243, 244, 245], "circularshelf": 84, "decomposition_test": [85, 86, 95, 96, 110, 111, 141, 142, 156, 157, 167, 168, 235, 236, 246, 248, 249, 250, 256, 682, 683, 684, 686, 687, 688, 694], "decompositiontest": [85, 86, 95, 96, 110, 111, 141, 142, 156, 157, 167, 168, 235, 236, 244, 245], "setup_mesh": [89, 90, 102, 103, 117, 118, 138, 139, 174, 175, 246, 247, 250], "setupmesh": [89, 90, 102, 103, 117, 118, 138, 139, 174, 175, 244, 245], "visual": [91, 92, 93, 106, 107, 108, 121, 122, 123, 127, 128, 132, 133, 180, 181, 182, 244, 245, 246, 250], "visualize_circular_shelf": 93, "restart_test": [97, 98, 112, 113, 148, 149, 162, 163, 169, 170, 237, 238, 246, 248, 249, 250, 256, 293, 294, 295, 404, 405, 406, 462, 463, 464, 651, 655, 658, 683, 684, 686, 687, 688, 694, 706, 710, 713], "restarttest": [97, 98, 112, 113, 148, 149, 162, 163, 169, 170, 237, 238, 245, 293, 294, 295, 404, 405, 406, 462, 463, 464], "smoke_test": [104, 105, 153, 154, 232, 233, 248, 255, 683, 686, 693], "smoketest": [104, 105, 153, 154, 232, 233, 245], "visualize_dom": 108, "run_experi": [114, 115, 116, 246], "runexperi": [114, 115, 116], "standard_experi": [119, 120, 121, 122, 123, 246, 684], "standardexperi": [119, 120], "visualize_eismint2": 123, "A": [124, 125, 126, 127, 128, 247, 677, 685], "b": [129, 130, 131, 132, 133, 247, 685], "enthalpybenchmark": 134, "high_res_mesh": [143, 144, 248, 256, 686, 694], "highresmesh": [143, 144], "build_cell_width": 146, "mesh_gen": [160, 161, 221, 222, 226, 227, 249, 253, 254, 687, 691, 692], "meshgen": [160, 161, 221, 222, 226, 227], "hydroradi": 166, "spinup_test": [176, 177, 250, 688], "spinuptest": [176, 177], "steady_state_drift_test": [178, 179, 250, 688], "steadystatedrifttest": [178, 179], "visualize_hydro_radi": 182, "ismip6forc": 183, "atmospher": [184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 252, 690, 712], "create_mapfile_smb": [186, 187, 188], "build_mapping_fil": [187, 202], "create_atm_scrip": 188, "process_smb": [189, 190, 191, 192, 193, 194], "processsmb": [189, 190, 191, 192, 193, 194], "correct_smb_anomaly_for_climatologi": 190, "remap_ismip6_smb_to_mali": 191, "rename_ismip6_smb_to_mali_var": 192, "process_smb_racmo": [195, 196, 197, 198, 199, 200], "processsmbracmo": [195, 196, 197, 198, 199, 200], "correct_smb_anomaly_for_base_smb": 196, "remap_source_smb_to_mali": 197, "rename_source_smb_to_mali_var": 198, "create_mapfil": 202, "ocean_bas": [203, 204, 205, 206, 207, 208, 209, 210, 252, 690], "oceanbas": [203, 204], "process_basal_melt": [205, 206, 207, 208, 209, 210], "processbasalmelt": [205, 206, 207, 208, 209, 210], "combine_ismip6_inputfil": 206, "remap_ismip6_basal_melt_to_mali_var": 207, "rename_ismip6_basal_melt_to_mali_var": 208, "ocean_therm": [211, 212, 213, 214, 215, 216, 217, 252, 690], "oceantherm": [211, 212], "process_thermal_forc": [213, 214, 215, 216, 217], "processthermalforc": [213, 214, 215, 216, 217], "remap_ismip6_thermal_forcing_to_mali_var": 214, "rename_ismip6_thermal_forcing_to_mali_var": 215, "kogebugt": 223, "enthalpy_decomposition_test": [246, 684], "enthalpy_restart_test": [246, 684], "anvil": [257, 695], "intel": [257, 258, 259, 260, 695, 696, 697, 698], "gnu": [257, 258, 260, 262, 695, 696, 698, 700], "chrysali": [258, 696], "compymcnodefac": [259, 697], "cori": [260, 698], "haswel": [260, 698], "other": [261, 675, 676, 699, 723], "perlmutt": [262, 700], "pm": 262, "cpu": [262, 674, 700], "baroclinic_channel": [263, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 651, 706], "dam_break": [263, 305, 306, 307, 308, 309, 310, 311, 312, 313, 652, 707], "drying_slop": [263, 314, 315, 316, 317, 318, 319, 320, 321, 322, 653, 708], "global_converg": [263, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 654, 709], "cosine_bel": [263, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 654, 674, 709], "global_ocean": [263, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 655, 710], "gotm": [263, 410, 411, 412, 413, 414, 415, 416, 417, 418, 656, 711], "default": [263, 284, 285, 286, 306, 307, 315, 316, 411, 412, 413, 414, 415, 416, 417, 418, 454, 455, 456, 471, 472, 524, 525, 651, 652, 653, 656, 658, 660, 662, 675, 706, 707, 708, 711, 713, 715, 717, 719, 722], "hurrican": [263, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 657, 712], "ice_shelf_2d": [263, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 658, 713], "internal_wav": [263, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 660, 715], "isomip_plu": [263, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 661, 716], "merry_go_round": [263, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 662, 717], "planar_converg": [263, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 663, 718], "horizontal_advect": [263, 543, 544, 545, 546, 547, 548, 549, 550, 663, 718], "soma": [263, 551, 552, 553, 554, 555, 556, 557, 558, 559, 664, 719], "sphere_transport": [263, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 665, 720], "correlated_tracers_2d": [263, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 665, 720], "divergent_2d": [263, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 665, 720], "nondivergent_2d": [263, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 665, 720], "rotation_2d": [263, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 665, 720], "ziso": [263, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 667, 722], "replac": 264, "stream": [264, 668, 675, 676], "vertic": [264, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 675, 703], "coordin": [264, 675, 703], "cull": [264, 269, 270, 271, 272], "includ": 264, "floodplain": [264, 273, 274], "hanei": [264, 266], "number": [264, 674], "shelf": [264, 701, 710], "caviti": [264, 701, 710], "particl": [264, 275, 276, 719, 722], "plot": [264, 277, 278, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520], "compute_haney_numb": 266, "iceshelf": [267, 268], "adjust_ssh": 267, "compute_land_ice_pressure_and_draft": 268, "cullmeshstep": [269, 270, 271], "cull_mesh": 272, "floodplainmeshstep": [273, 274], "remap_particl": 275, "plot_initial_st": 277, "plot_vertical_grid": 278, "baroclinicchannel": 279, "decomp_test": [281, 282, 283, 345, 346, 347, 651, 655, 706, 710], "decomptest": [281, 282, 283, 345, 346, 347], "forward": [287, 288, 289, 308, 309, 317, 318, 330, 331, 332, 333, 363, 364, 365, 366, 367, 368, 415, 416, 427, 428, 429, 430, 431, 432, 457, 458, 459, 473, 474, 486, 487, 488, 526, 527, 539, 540, 541, 542, 554, 555, 566, 567, 568, 569, 580, 581, 582, 583, 594, 595, 596, 597, 618, 619, 620, 621, 632, 633, 634, 651, 652, 653, 654, 655, 656, 657, 658, 660, 661, 662, 663, 664, 665, 667, 674, 675, 676, 710, 712], "initial_st": [290, 291, 292, 310, 311, 319, 320, 372, 373, 374, 439, 440, 441, 460, 461, 475, 476, 491, 492, 528, 529, 556, 557, 635, 636, 651, 652, 653, 657, 658, 660, 661, 662, 664, 667, 675], "initialst": [290, 291, 292, 310, 311, 319, 320, 372, 373, 374, 439, 440, 441, 460, 461, 475, 476, 491, 492, 528, 529, 556, 557, 635, 636], "rpe_test": [296, 297, 298, 299, 300, 301, 477, 478, 479, 651, 660, 675, 706, 715], "rpetest": [296, 297, 298, 477], "analysi": [299, 300, 301, 327, 328, 329, 413, 414, 420, 421, 422, 423, 424, 425, 478, 479, 522, 523, 546, 547, 548, 552, 553, 564, 565, 578, 579, 592, 593, 616, 617, 654, 656, 657, 663, 664, 665, 666, 674, 675, 676, 712], "threads_test": [302, 303, 304, 407, 408, 409, 651, 655, 710], "threadstest": [302, 303, 304, 407, 408, 409], "dambreak": 305, "viz": [312, 313, 321, 322, 468, 469, 482, 483, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 530, 531, 652, 653, 658, 661], "dryingslop": 314, "globalconverg": 323, "cosinebel": [324, 325, 326], "rmse": [328, 547], "get_dt": 331, "init": [334, 335, 369, 370, 371, 372, 373, 374, 375, 376, 377, 417, 418, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 549, 550, 570, 571, 584, 585, 598, 599, 622, 623, 654, 655, 656, 663, 665, 666, 674, 676, 710, 712], "globalocean": 336, "analysis_test": [337, 338, 339, 655, 710], "analysistest": [337, 338, 339], "configure_global_ocean": 341, "daily_output_test": [342, 343, 344, 655, 710], "dailyoutputtest": [342, 343, 344], "dynamic_adjust": [348, 349, 383, 384, 385, 386, 387, 388, 391, 392, 393, 396, 397, 398, 655, 710], "dynamicadjust": [348, 349], "files_for_e3sm": [350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 655, 710], "filesfore3sm": [350, 351, 352], "diagnostics_fil": [353, 354], "diagnosticsfil": [353, 354], "ocean_graph_partit": [355, 356], "oceangraphpartit": [355, 356], "ocean_initial_condit": [357, 358], "oceaninitialcondit": [357, 358], "scrip": [359, 360], "seaice_initial_condit": [361, 362], "seaiceinitialcondit": [361, 362], "forwardstep": [363, 364, 365, 430, 431, 432], "forwardtestcas": [366, 367, 368], "ssh_adjust": [375, 376, 377, 465, 466, 467, 498, 499, 500, 658, 661], "sshadjust": [375, 376, 377, 465, 466, 467, 498, 499, 500], "ec30to60": [381, 382, 383, 384, 385, 655, 705, 710], "ec30to60basemesh": [381, 382], "ec30to60dynamicadjust": [383, 384, 385], "qu240": [386, 387, 388, 655, 710], "qu240dynamicadjust": [386, 387, 388], "so12to60": [389, 390, 391, 392, 393], "so12to60basemesh": [389, 390], "so12to60dynamicadjust": [391, 392, 393], "wc14": [394, 395, 396, 397, 398, 655, 710], "wc14basemesh": [394, 395], "wc14dynamicadjust": [396, 397, 398], "metadata": [399, 400, 655, 710], "add_mesh_and_init_metadata": 399, "get_e3sm_mesh_nam": 400, "performance_test": [401, 402, 403, 655, 710], "performancetest": [401, 402, 403], "read_pointstat": 421, "read_station_data": 422, "read_station_fil": 423, "create_pointstats_fil": [436, 437, 438, 657], "createpointstatsfil": [436, 437, 438], "interpolate_atm_forc": [442, 443, 444, 445, 446, 657], "interpolateatmforc": [442, 443, 444, 445, 446], "interpolate_data_to_grid": 443, "plot_interp_data": 444, "write_to_fil": 446, "dequ120at30cr10rr2": [450, 451], "dequ120at30cr10rr2basemesh": [450, 451], "iceshelf2d": 452, "internalwav": 470, "ten_day_test": [480, 481, 660, 715], "tendaytest": [480, 481], "isomipplu": 484, "evap": [485, 661], "update_evaporation_flux": 485, "geom": [489, 490, 661], "interpolate_ocean_mask": 489, "process_input_geometri": 490, "misomip": [493, 494, 661], "ocean_test": [495, 496, 497, 661], "oceantest": [495, 496, 497], "streamfunct": [501, 502, 661], "file_complet": 505, "movieplott": [506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517], "images_to_movi": 507, "plot_3d_field_top_bot_sect": 508, "plot_barotropic_streamfunct": 509, "plot_horiz_seri": 510, "plot_ice_shelf_boundary_vari": 511, "plot_layer_interfac": 512, "plot_melt_r": 513, "plot_overturning_streamfunct": 514, "plot_potential_dens": 515, "plot_salin": 516, "plot_temperatur": 517, "timeseriesplott": [518, 519, 520], "plot_melt_time_seri": 519, "plot_time_seri": 520, "merrygoround": 521, "convergence_test": [522, 523, 662, 717], "planarconverg": 532, "conv_init": [533, 534], "convinit": [533, 534], "conv_test_cas": [535, 536, 537, 538], "convtestcas": [535, 536, 537, 538], "update_cor": 538, "get_dt_dur": 540, "horizontaladvect": [543, 544, 545], "soma_test_cas": [558, 559, 664], "somatestcas": [558, 559], "spheretransport": 560, "correlatedtracers2d": [561, 562, 563], "get_timestep_str": [567, 581, 595, 619], "divergent2d": [575, 576, 577], "nondivergent2d": [589, 590, 591], "process_output": [603, 604, 605, 606, 607, 608, 609, 610, 611, 612], "compute_convergence_r": 603, "compute_error_from_output_ncfil": 604, "make_convergence_arrai": 605, "plot_converg": 606, "plot_fila": 607, "plot_over_and_undershoot_error": 608, "plot_sol": 609, "print_data_as_csv": 610, "print_error_conv_t": 611, "read_ncl_rgb_fil": 612, "rotation2d": [613, 614, 615], "zisotestcas": [628, 629, 630], "with_frazil": [637, 638, 639, 667, 722], "withfrazil": [637, 638, 639], "grid_1d": [640, 641], "generate_1d_grid": 640, "write_1d_grid": 641, "init_vertical_coord": 642, "partial_cel": [643, 644], "alter_bottom_depth": 643, "alter_ssh": 644, "zlevel": [645, 646, 647, 648], "compute_min_max_level_cel": 645, "compute_z_level_layer_thick": 646, "compute_z_level_resting_thick": 647, "init_z_level_vertical_coord": 648, "zstar": 649, "init_z_star_vertical_coord": 649, "type": [654, 703], "quwisc240": [655, 705, 710], "icos240": 655, "icoswisc240": 655, "ecwisc30to60": [655, 705, 710], "sowisc12to60": [655, 710], "child": 655, "spherical_harmonic_transform": [666, 721], "qu_converg": [666, 721], "ziso_test_cas": 667, "organ": 668, "attribut": 668, "copi": 668, "ad": [668, 674, 675, 676], "runtim": 668, "overview": 669, "style": 669, "In": 669, "quick": [670, 723], "start": [670, 674, 675, 676, 723], "unix": 670, "shell": 670, "set": [670, 674, 675, 676, 723], "up": [670, 675, 676, 723], "repositori": 670, "beginn": 670, "conda": [670, 671, 699, 723], "environ": [670, 671, 723], "compil": 670, "system": 670, "albani": 670, "petsc": 670, "netlib": 670, "lapack": 670, "unknown": 670, "what": 670, "script": [670, 723], "doe": 670, "flag": 670, "activ": 670, "troubleshoot": [670, 671], "onli": 670, "compon": [670, 723], "repo": 670, "worktre": 670, "advanc": 670, "solver": 671, "error": 671, "when": 671, "proxi": 671, "lanl": 671, "mac": 671, "gethostbynam": 671, "fail": 671, "glossari": [672, 673], "": 673, "guid": 673, "tutori": [673, 674, 675, 676], "legaci": [673, 676], "studi": 674, "get": [674, 675, 676], "new": [674, 675, 676], "task": 674, "per": 674, "vari": [675, 676], "horizont": 675, "defin": [675, 676], "method": [675, 676], "port": 676, "The": 676, "sia_integr": 680, "fo_integr": 680, "full_integr": 680, "humboldt_calving_test": 680, "humboldt_calving_tests_fo": 680, "ocean_thermal_ob": 690, "jupyt": [698, 700], "notebook": [698, 700], "remot": [698, 700], "slurm": 699, "job": [699, 723], "queue": 699, "mpich": 699, "openmpi": 699, "No": 699, "mpi": 699, "forg": 699, "sea": 701, "surfac": 701, "height": 701, "adjust": 701, "1d": 703, "grid": 703, "uniform": 703, "tanh_dz": 703, "60layerphc": 703, "100layere3smv1": 703, "3d": 703, "z": 703, "star": 703, "level": 703, "nightli": 705, "qu240_for_e3sm": 705, "quwisc240_for_e3sm": 705, "thread_test": 706, "time": [709, 718, 720], "biogeochemsitri": 710, "make_diagnostic_fil": 710, "state": 712, "interpol": 712, "forc": 712, "pointstat": 712, "sandi": 712, "ocean0": 716, "ocean1": 716, "ocean2": 716, "time_varying_ocean0": 716, "thin_film_ocean0": 716, "thin_film_tidal_forcing_ocean0": 716, "perform": 716, "simul": 716, "long": [719, 722], "surface_restor": 719, "three_lay": 719, "converg": 720, "threshold": 720, "parallel_n": 721, "serial_nlat": 721, "e3sm": 723}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Caching outputs from compass steps": [[0, "caching-outputs-from-compass-steps"]], "Summary": [[0, "summary"], [1, "summary"], [3, "summary"]], "Requirements": [[0, "requirements"], [1, "requirements"], [3, "requirements"]], "Requirement: cached outputs": [[0, "requirement-cached-outputs"]], "Requirement: selecting whether to use cached outputs": [[0, "requirement-selecting-whether-to-use-cached-outputs"]], "Requirement: updating cached outputs": [[0, "requirement-updating-cached-outputs"]], "Requirement: unique identifier for cached outputs": [[0, "requirement-unique-identifier-for-cached-outputs"]], "Requirement: either \u201cnormal\u201d or \u201ccached\u201d versions of a step": [[0, "requirement-either-normal-or-cached-versions-of-a-step"]], "Design": [[0, "design"]], "Design: cached outputs": [[0, "design-cached-outputs"]], "Design: selecting whether to use cached outputs": [[0, "design-selecting-whether-to-use-cached-outputs"]], "Design: updating cached outputs": [[0, "design-updating-cached-outputs"]], "Design: unique identifier for cached outputs": [[0, "design-unique-identifier-for-cached-outputs"]], "Design: either \u201cnormal\u201d or \u201ccached\u201d versions of a step": [[0, "design-either-normal-or-cached-versions-of-a-step"]], "Implementation": [[0, "implementation"], [1, "implementation"], [3, "implementation"]], "Implementation: cached outputs": [[0, "implementation-cached-outputs"]], "Implementation: selecting whether to use cached outputs": [[0, "implementation-selecting-whether-to-use-cached-outputs"]], "Implementation: updating cached outputs": [[0, "implementation-updating-cached-outputs"]], "Implementation: unique identifier for cached outputs": [[0, "implementation-unique-identifier-for-cached-outputs"]], "Implementation: either \u201cnormal\u201d or \u201ccached\u201d versions of a step": [[0, "implementation-either-normal-or-cached-versions-of-a-step"]], "Testing": [[0, "testing"], [1, "testing"], [3, "testing"]], "Testing: cached outputs": [[0, "testing-cached-outputs"]], "Testing: selecting whether to use cached outputs": [[0, "testing-selecting-whether-to-use-cached-outputs"]], "Testing: updating cached outputs": [[0, "testing-updating-cached-outputs"]], "Testing: unique identifier for cached outputs": [[0, "testing-unique-identifier-for-cached-outputs"]], "Testing: either \u201cnormal\u201d or \u201ccached\u201d versions of a step": [[0, "testing-either-normal-or-cached-versions-of-a-step"]], "compass python package": [[1, "compass-python-package"]], "Requirement: Make test cases easy to understand, modify and create": [[1, "requirement-make-test-cases-easy-to-understand-modify-and-create"]], "Requirement: Shared code": [[1, "requirement-shared-code"]], "Requirement: Shared configuration options": [[1, "requirement-shared-configuration-options"]], "Requirement: Ability specify/modify core counts": [[1, "requirement-ability-specify-modify-core-counts"]], "Requirement: Machine-specific data": [[1, "requirement-machine-specific-data"]], "Requirement: Looser, more flexible directory structure": [[1, "requirement-looser-more-flexible-directory-structure"]], "Requirement: User- and developer-friendly documentation": [[1, "requirement-user-and-developer-friendly-documentation"]], "Requirement: Considerations related to running test cases in parallel": [[1, "requirement-considerations-related-to-running-test-cases-in-parallel"]], "Requirement: Resolution can be a test case parameter": [[1, "requirement-resolution-can-be-a-test-case-parameter"]], "Requirement: Test case code is easy to alter and rerun": [[1, "requirement-test-case-code-is-easy-to-alter-and-rerun"]], "Requirement: Support for pre-made initial condition files": [[1, "requirement-support-for-pre-made-initial-condition-files"]], "Requirement: Easy batch submission": [[1, "requirement-easy-batch-submission"]], "Algorithm Design": [[1, "algorithm-design"]], "Algorithm design: Make test cases easy to understand, modify and  and create": [[1, "algorithm-design-make-test-cases-easy-to-understand-modify-and-and-create"]], "Algorithm design: Shared code": [[1, "algorithm-design-shared-code"]], "Algorithm design: Shared configuration options": [[1, "algorithm-design-shared-configuration-options"]], "Algorithm design: Ability specify/modify core counts": [[1, "algorithm-design-ability-specify-modify-core-counts"]], "Algorithm design: Machine-specific data": [[1, "algorithm-design-machine-specific-data"]], "Algorithm design: Looser, more flexible directory structure": [[1, "algorithm-design-looser-more-flexible-directory-structure"]], "Algorithm design: User- and developer-friendly documentation": [[1, "algorithm-design-user-and-developer-friendly-documentation"]], "Algorithm design: Considerations related to running test cases in parallel": [[1, "algorithm-design-considerations-related-to-running-test-cases-in-parallel"]], "Algorithm design: Resolution can be a test case parameter": [[1, "algorithm-design-resolution-can-be-a-test-case-parameter"]], "Algorithm design: Test case code is easy to alter and rerun": [[1, "algorithm-design-test-case-code-is-easy-to-alter-and-rerun"]], "Algorithm design: Support for pre-made initial condition files": [[1, "algorithm-design-support-for-pre-made-initial-condition-files"]], "Algorithm design: Easy batch submission": [[1, "algorithm-design-easy-batch-submission"]], "Implementation: Make test cases easy to understand, modify and  and create": [[1, "implementation-make-test-cases-easy-to-understand-modify-and-and-create"]], "constructors": [[1, "constructors"]], "configure()": [[1, "configure"], [668, "configure"]], "setup()": [[1, "setup"], [668, "setup"]], "run": [[1, "run"], [4, "run"]], "global ocean test group": [[1, "global-ocean-test-group"]], "Implementation: Shared code": [[1, "implementation-shared-code"]], "compass framework": [[1, "compass-framework"], [4, "compass-framework"]], "within an MPAS core": [[1, "within-an-mpas-core"]], "within a test group": [[1, "within-a-test-group"]], "within a test case": [[1, "within-a-test-case"]], "Implementation: Shared configuration options": [[1, "implementation-shared-configuration-options"]], "Implementation: Ability specify/modify core counts": [[1, "implementation-ability-specify-modify-core-counts"]], "Implementation: Machine-specific data": [[1, "implementation-machine-specific-data"]], "Implementation: Looser, more flexible directory structure": [[1, "implementation-looser-more-flexible-directory-structure"]], "Implementation: User- and developer-friendly documentation": [[1, "implementation-user-and-developer-friendly-documentation"]], "Implementation: Considerations related to running test cases in parallel": [[1, "implementation-considerations-related-to-running-test-cases-in-parallel"]], "cores, max_memory and max_disk": [[1, "cores-max-memory-and-max-disk"]], "inputs and outputs": [[1, "inputs-and-outputs"], [668, "inputs-and-outputs"]], "Implementation: Resolution can be a test case parameter": [[1, "implementation-resolution-can-be-a-test-case-parameter"]], "Implementation: Test case code is easy to alter and rerun": [[1, "implementation-test-case-code-is-easy-to-alter-and-rerun"]], "Implementation: Support for pre-made initial condition files": [[1, "implementation-support-for-pre-made-initial-condition-files"]], "Implementation: Easy batch submission": [[1, "implementation-easy-batch-submission"]], "Testing: Make test cases easy to understand, modify and create": [[1, "testing-make-test-cases-easy-to-understand-modify-and-create"]], "Testing: Shared code": [[1, "testing-shared-code"]], "Testing: Shared configuration options": [[1, "testing-shared-configuration-options"]], "Testing: Ability specify/modify core counts": [[1, "testing-ability-specify-modify-core-counts"]], "Testing: Machine-specific data": [[1, "testing-machine-specific-data"]], "Testing: Looser, more flexible directory structure": [[1, "testing-looser-more-flexible-directory-structure"]], "Testing: User- and developer-friendly documentation": [[1, "testing-user-and-developer-friendly-documentation"]], "Testing: Considerations related to running test cases in parallel": [[1, "testing-considerations-related-to-running-test-cases-in-parallel"]], "Testing: Resolution can be a test case parameter": [[1, "testing-resolution-can-be-a-test-case-parameter"]], "Testing: Test case code is easy to alter and rerun": [[1, "testing-test-case-code-is-easy-to-alter-and-rerun"]], "Testing: Support for pre-made initial condition files": [[1, "testing-support-for-pre-made-initial-condition-files"]], "Testing: Easy batch submission": [[1, "testing-easy-batch-submission"]], "Design Documents": [[2, "design-documents"]], "Template": [[3, "template"]], "Requirement: name-of-topic-here": [[3, "requirement-name-of-topic-here"]], "Algorithm Design (optional)": [[3, "algorithm-design-optional"]], "Algorithm Design: name-of-topic-here (same as Requirement)": [[3, "algorithm-design-name-of-topic-here-same-as-requirement"]], "Implementation: name-of-topic-here (same as Requirement)": [[3, "implementation-name-of-topic-here-same-as-requirement"]], "Testing and Validation: name-of-topic-here (same as Requirement)": [[3, "testing-and-validation-name-of-topic-here-same-as-requirement"]], "API reference": [[4, "api-reference"]], "MPAS Cores": [[4, "mpas-cores"], [668, "mpas-cores"]], "Command-line interface": [[4, "command-line-interface"], [6, "command-line-interface"]], "list": [[4, "list"]], "setup": [[4, "setup"]], "clean": [[4, "clean"]], "suite": [[4, "suite"]], "cache": [[4, "cache"]], "Base Classes": [[4, "base-classes"]], "mpas_core": [[4, "mpas-core"]], "testgroup": [[4, "testgroup"]], "testcase": [[4, "testcase"]], "step": [[4, "step"]], "config": [[4, "config"]], "io": [[4, "io"]], "logging": [[4, "logging"]], "mesh": [[4, "mesh"], [248, "mesh"], [249, "mesh"], [253, "mesh"], [254, "mesh"], [256, "mesh"], [654, "mesh"], [657, "mesh"], [665, "mesh"], [665, "id1"], [665, "id5"], [665, "id9"], [666, "mesh"]], "model": [[4, "model"]], "mpas_cores": [[4, "id1"]], "parallel": [[4, "parallel"]], "provenance": [[4, "provenance"]], "validate": [[4, "validate"]], "Building the Documentation": [[5, "building-the-documentation"]], "compass list": [[6, "compass-list"]], "compass setup": [[6, "compass-setup"]], "compass clean": [[6, "compass-clean"]], "compass suite": [[6, "compass-suite"]], "compass run": [[6, "compass-run"]], "compass cache": [[6, "compass-cache"]], "Documentation": [[7, "documentation"], [674, "documentation"], [675, "documentation"], [676, "documentation"]], "Docstrings": [[7, "docstrings"]], "Framework": [[8, "framework"], [655, "framework"], [678, "framework"], [702, "framework"]], "list module": [[8, "list-module"]], "setup module": [[8, "setup-module"]], "clean module": [[8, "clean-module"]], "suite module": [[8, "suite-module"]], "run.serial module": [[8, "run-serial-module"]], "cache module": [[8, "cache-module"]], "Config files": [[8, "config-files"]], "Comments in config files": [[8, "comments-in-config-files"]], "Logging": [[8, "logging"]], "IO": [[8, "io"]], "Symlinks": [[8, "symlinks"]], "Download": [[8, "download"]], "Mesh": [[8, "mesh"], [264, "mesh"]], "Spherical Meshes": [[8, "spherical-meshes"]], "Model": [[8, "model"]], "Running MPAS": [[8, "running-mpas"]], "Partitioning the mesh": [[8, "partitioning-the-mesh"]], "Updating PIO namelist options": [[8, "updating-pio-namelist-options"]], "Making a graph file": [[8, "making-a-graph-file"]], "Validation": [[8, "validation"]], "Validating variables": [[8, "validating-variables"]], "Norms": [[8, "norms"]], "Validating timers": [[8, "validating-timers"]], "Provenance": [[8, "provenance"]], "compass.MpasCore": [[9, "compass-mpascore"]], "compass.MpasCore.add_test_group": [[10, "compass-mpascore-add-test-group"]], "compass.Step": [[11, "compass-step"]], "compass.Step.add_input_file": [[12, "compass-step-add-input-file"]], "compass.Step.add_model_as_input": [[13, "compass-step-add-model-as-input"]], "compass.Step.add_namelist_file": [[14, "compass-step-add-namelist-file"]], "compass.Step.add_namelist_options": [[15, "compass-step-add-namelist-options"]], "compass.Step.add_output_file": [[16, "compass-step-add-output-file"]], "compass.Step.add_streams_file": [[17, "compass-step-add-streams-file"]], "compass.Step.constrain_resources": [[18, "compass-step-constrain-resources"]], "compass.Step.run": [[19, "compass-step-run"]], "compass.Step.runtime_setup": [[20, "compass-step-runtime-setup"]], "compass.Step.set_resources": [[21, "compass-step-set-resources"]], "compass.Step.setup": [[22, "compass-step-setup"]], "compass.Step.update_namelist_at_runtime": [[23, "compass-step-update-namelist-at-runtime"]], "compass.Step.update_namelist_pio": [[24, "compass-step-update-namelist-pio"]], "compass.Step.update_streams_at_runtime": [[25, "compass-step-update-streams-at-runtime"]], "compass.TestCase": [[26, "compass-testcase"]], "compass.TestCase.add_step": [[27, "compass-testcase-add-step"]], "compass.TestCase.configure": [[28, "compass-testcase-configure"]], "compass.TestCase.run": [[29, "compass-testcase-run"]], "compass.TestCase.validate": [[30, "compass-testcase-validate"]], "compass.TestGroup": [[31, "compass-testgroup"]], "compass.TestGroup.add_test_case": [[32, "compass-testgroup-add-test-case"]], "compass.__main__.main": [[33, "compass-main-main"]], "compass.cache.update_cache": [[34, "compass-cache-update-cache"]], "compass.clean.clean_cases": [[35, "compass-clean-clean-cases"]], "compass.config.CompassConfigParser": [[36, "compass-config-compassconfigparser"]], "compass.io.download": [[37, "compass-io-download"]], "compass.io.symlink": [[38, "compass-io-symlink"]], "compass.list.list_cases": [[39, "compass-list-list-cases"]], "compass.list.list_machines": [[40, "compass-list-list-machines"]], "compass.list.list_suites": [[41, "compass-list-list-suites"]], "compass.logging.log_method_call": [[42, "compass-logging-log-method-call"]], "compass.mesh.IcosahedralMeshStep": [[43, "compass-mesh-icosahedralmeshstep"]], "compass.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon": [[44, "compass-mesh-icosahedralmeshstep-build-subdivisions-cell-width-lat-lon"]], "compass.mesh.IcosahedralMeshStep.get_cell_width": [[45, "compass-mesh-icosahedralmeshstep-get-cell-width"]], "compass.mesh.IcosahedralMeshStep.get_subdivisions": [[46, "compass-mesh-icosahedralmeshstep-get-subdivisions"]], "compass.mesh.IcosahedralMeshStep.make_jigsaw_mesh": [[47, "compass-mesh-icosahedralmeshstep-make-jigsaw-mesh"]], "compass.mesh.IcosahedralMeshStep.run": [[48, "compass-mesh-icosahedralmeshstep-run"]], "compass.mesh.IcosahedralMeshStep.setup": [[49, "compass-mesh-icosahedralmeshstep-setup"]], "compass.mesh.QuasiUniformSphericalMeshStep": [[50, "compass-mesh-quasiuniformsphericalmeshstep"]], "compass.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon": [[51, "compass-mesh-quasiuniformsphericalmeshstep-build-cell-width-lat-lon"]], "compass.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh": [[52, "compass-mesh-quasiuniformsphericalmeshstep-make-jigsaw-mesh"]], "compass.mesh.QuasiUniformSphericalMeshStep.run": [[53, "compass-mesh-quasiuniformsphericalmeshstep-run"]], "compass.mesh.QuasiUniformSphericalMeshStep.setup": [[54, "compass-mesh-quasiuniformsphericalmeshstep-setup"]], "compass.mesh.spherical.SphericalBaseStep": [[55, "compass-mesh-spherical-sphericalbasestep"]], "compass.mesh.spherical.SphericalBaseStep.run": [[56, "compass-mesh-spherical-sphericalbasestep-run"]], "compass.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width": [[57, "compass-mesh-spherical-sphericalbasestep-save-and-plot-cell-width"]], "compass.mesh.spherical.SphericalBaseStep.setup": [[58, "compass-mesh-spherical-sphericalbasestep-setup"]], "compass.model.make_graph_file": [[59, "compass-model-make-graph-file"]], "compass.model.partition": [[60, "compass-model-partition"]], "compass.model.run_model": [[61, "compass-model-run-model"]], "compass.mpas_cores.get_mpas_cores": [[62, "compass-mpas-cores-get-mpas-cores"]], "compass.parallel.check_parallel_system": [[63, "compass-parallel-check-parallel-system"]], "compass.parallel.get_available_cores_and_nodes": [[64, "compass-parallel-get-available-cores-and-nodes"]], "compass.parallel.run_command": [[65, "compass-parallel-run-command"]], "compass.parallel.set_cores_per_node": [[66, "compass-parallel-set-cores-per-node"]], "compass.provenance.write": [[67, "compass-provenance-write"]], "compass.run.serial.run_single_step": [[68, "compass-run-serial-run-single-step"]], "compass.run.serial.run_tests": [[69, "compass-run-serial-run-tests"]], "compass.setup.setup_case": [[70, "compass-setup-setup-case"]], "compass.setup.setup_cases": [[71, "compass-setup-setup-cases"]], "compass.suite.clean_suite": [[72, "compass-suite-clean-suite"]], "compass.suite.setup_suite": [[73, "compass-suite-setup-suite"]], "compass.validate.compare_timers": [[74, "compass-validate-compare-timers"]], "compass.validate.compare_variables": [[75, "compass-validate-compare-variables"]], "landice": [[76, "landice"]], "Test Groups": [[76, "test-groups"], [263, "test-groups"], [668, "test-groups"], [689, "test-groups"]], "calving_dt_convergence": [[76, "calving-dt-convergence"], [243, "calving-dt-convergence"], [680, "calving-dt-convergence"], [681, "calving-dt-convergence"]], "circular_shelf": [[76, "circular-shelf"], [244, "circular-shelf"], [682, "circular-shelf"]], "dome": [[76, "dome"], [245, "dome"], [683, "dome"]], "enthalpy_benchmark": [[76, "enthalpy-benchmark"], [247, "enthalpy-benchmark"], [685, "enthalpy-benchmark"]], "eismint2": [[76, "eismint2"], [246, "eismint2"], [684, "eismint2"]], "greenland": [[76, "greenland"], [248, "greenland"], [686, "greenland"]], "humboldt": [[76, "humboldt"], [249, "humboldt"], [687, "humboldt"]], "hydro_radial": [[76, "hydro-radial"], [250, "hydro-radial"], [688, "hydro-radial"]], "ismip6_forcing": [[76, "ismip6-forcing"], [252, "ismip6-forcing"], [690, "ismip6-forcing"]], "kangerlussuaq": [[76, "kangerlussuaq"], [253, "kangerlussuaq"], [691, "kangerlussuaq"]], "koge_bugt_s": [[76, "koge-bugt-s"], [254, "koge-bugt-s"], [692, "koge-bugt-s"]], "mismipplus": [[76, "mismipplus"], [255, "mismipplus"], [693, "mismipplus"]], "thwaites": [[76, "thwaites"], [256, "thwaites"], [694, "thwaites"]], "Land-ice Framework": [[77, "land-ice-framework"]], "compass.landice.Landice": [[78, "compass-landice-landice"]], "compass.landice.tests.calving_dt_convergence.CalvingDtConvergence": [[79, "compass-landice-tests-calving-dt-convergence-calvingdtconvergence"]], "compass.landice.tests.calving_dt_convergence.dt_convergence_test.DtConvergenceTest": [[80, "compass-landice-tests-calving-dt-convergence-dt-convergence-test-dtconvergencetest"]], "compass.landice.tests.calving_dt_convergence.dt_convergence_test.DtConvergenceTest.validate": [[81, "compass-landice-tests-calving-dt-convergence-dt-convergence-test-dtconvergencetest-validate"]], "compass.landice.tests.calving_dt_convergence.run_model.RunModel": [[82, "compass-landice-tests-calving-dt-convergence-run-model-runmodel"]], "compass.landice.tests.calving_dt_convergence.run_model.RunModel.run": [[83, "compass-landice-tests-calving-dt-convergence-run-model-runmodel-run"]], "compass.landice.tests.circular_shelf.CircularShelf": [[84, "compass-landice-tests-circular-shelf-circularshelf"]], "compass.landice.tests.circular_shelf.decomposition_test.DecompositionTest": [[85, "compass-landice-tests-circular-shelf-decomposition-test-decompositiontest"]], "compass.landice.tests.circular_shelf.decomposition_test.DecompositionTest.run": [[86, "compass-landice-tests-circular-shelf-decomposition-test-decompositiontest-run"]], "compass.landice.tests.circular_shelf.run_model.RunModel": [[87, "compass-landice-tests-circular-shelf-run-model-runmodel"]], "compass.landice.tests.circular_shelf.run_model.RunModel.run": [[88, "compass-landice-tests-circular-shelf-run-model-runmodel-run"]], "compass.landice.tests.circular_shelf.setup_mesh.SetupMesh": [[89, "compass-landice-tests-circular-shelf-setup-mesh-setupmesh"]], "compass.landice.tests.circular_shelf.setup_mesh.SetupMesh.run": [[90, "compass-landice-tests-circular-shelf-setup-mesh-setupmesh-run"]], "compass.landice.tests.circular_shelf.visualize.Visualize": [[91, "compass-landice-tests-circular-shelf-visualize-visualize"]], "compass.landice.tests.circular_shelf.visualize.Visualize.run": [[92, "compass-landice-tests-circular-shelf-visualize-visualize-run"]], "compass.landice.tests.circular_shelf.visualize.visualize_circular_shelf": [[93, "compass-landice-tests-circular-shelf-visualize-visualize-circular-shelf"]], "compass.landice.tests.dome.Dome": [[94, "compass-landice-tests-dome-dome"]], "compass.landice.tests.dome.decomposition_test.DecompositionTest": [[95, "compass-landice-tests-dome-decomposition-test-decompositiontest"]], "compass.landice.tests.dome.decomposition_test.DecompositionTest.run": [[96, "compass-landice-tests-dome-decomposition-test-decompositiontest-run"]], "compass.landice.tests.dome.restart_test.RestartTest": [[97, "compass-landice-tests-dome-restart-test-restarttest"]], "compass.landice.tests.dome.restart_test.RestartTest.run": [[98, "compass-landice-tests-dome-restart-test-restarttest-run"]], "compass.landice.tests.dome.run_model.RunModel": [[99, "compass-landice-tests-dome-run-model-runmodel"]], "compass.landice.tests.dome.run_model.RunModel.run": [[100, "compass-landice-tests-dome-run-model-runmodel-run"]], "compass.landice.tests.dome.run_model.RunModel.setup": [[101, "compass-landice-tests-dome-run-model-runmodel-setup"]], "compass.landice.tests.dome.setup_mesh.SetupMesh": [[102, "compass-landice-tests-dome-setup-mesh-setupmesh"]], "compass.landice.tests.dome.setup_mesh.SetupMesh.run": [[103, "compass-landice-tests-dome-setup-mesh-setupmesh-run"]], "compass.landice.tests.dome.smoke_test.SmokeTest": [[104, "compass-landice-tests-dome-smoke-test-smoketest"]], "compass.landice.tests.dome.smoke_test.SmokeTest.run": [[105, "compass-landice-tests-dome-smoke-test-smoketest-run"]], "compass.landice.tests.dome.visualize.Visualize": [[106, "compass-landice-tests-dome-visualize-visualize"]], "compass.landice.tests.dome.visualize.Visualize.run": [[107, "compass-landice-tests-dome-visualize-visualize-run"]], "compass.landice.tests.dome.visualize.visualize_dome": [[108, "compass-landice-tests-dome-visualize-visualize-dome"]], "compass.landice.tests.eismint2.Eismint2": [[109, "compass-landice-tests-eismint2-eismint2"]], "compass.landice.tests.eismint2.decomposition_test.DecompositionTest": [[110, "compass-landice-tests-eismint2-decomposition-test-decompositiontest"]], "compass.landice.tests.eismint2.decomposition_test.DecompositionTest.run": [[111, "compass-landice-tests-eismint2-decomposition-test-decompositiontest-run"]], "compass.landice.tests.eismint2.restart_test.RestartTest": [[112, "compass-landice-tests-eismint2-restart-test-restarttest"]], "compass.landice.tests.eismint2.restart_test.RestartTest.run": [[113, "compass-landice-tests-eismint2-restart-test-restarttest-run"]], "compass.landice.tests.eismint2.run_experiment.RunExperiment": [[114, "compass-landice-tests-eismint2-run-experiment-runexperiment"]], "compass.landice.tests.eismint2.run_experiment.RunExperiment.run": [[115, "compass-landice-tests-eismint2-run-experiment-runexperiment-run"]], "compass.landice.tests.eismint2.run_experiment.RunExperiment.setup": [[116, "compass-landice-tests-eismint2-run-experiment-runexperiment-setup"]], "compass.landice.tests.eismint2.setup_mesh.SetupMesh": [[117, "compass-landice-tests-eismint2-setup-mesh-setupmesh"]], "compass.landice.tests.eismint2.setup_mesh.SetupMesh.run": [[118, "compass-landice-tests-eismint2-setup-mesh-setupmesh-run"]], "compass.landice.tests.eismint2.standard_experiments.StandardExperiments": [[119, "compass-landice-tests-eismint2-standard-experiments-standardexperiments"]], "compass.landice.tests.eismint2.standard_experiments.StandardExperiments.run": [[120, "compass-landice-tests-eismint2-standard-experiments-standardexperiments-run"]], "compass.landice.tests.eismint2.standard_experiments.visualize.Visualize": [[121, "compass-landice-tests-eismint2-standard-experiments-visualize-visualize"]], "compass.landice.tests.eismint2.standard_experiments.visualize.Visualize.run": [[122, "compass-landice-tests-eismint2-standard-experiments-visualize-visualize-run"]], "compass.landice.tests.eismint2.standard_experiments.visualize.visualize_eismint2": [[123, "compass-landice-tests-eismint2-standard-experiments-visualize-visualize-eismint2"]], "compass.landice.tests.enthalpy_benchmark.A.A": [[124, "compass-landice-tests-enthalpy-benchmark-a-a"]], "compass.landice.tests.enthalpy_benchmark.A.A.configure": [[125, "compass-landice-tests-enthalpy-benchmark-a-a-configure"]], "compass.landice.tests.enthalpy_benchmark.A.A.run": [[126, "compass-landice-tests-enthalpy-benchmark-a-a-run"]], "compass.landice.tests.enthalpy_benchmark.A.visualize.Visualize": [[127, "compass-landice-tests-enthalpy-benchmark-a-visualize-visualize"]], "compass.landice.tests.enthalpy_benchmark.A.visualize.Visualize.run": [[128, "compass-landice-tests-enthalpy-benchmark-a-visualize-visualize-run"]], "compass.landice.tests.enthalpy_benchmark.B.B": [[129, "compass-landice-tests-enthalpy-benchmark-b-b"]], "compass.landice.tests.enthalpy_benchmark.B.B.configure": [[130, "compass-landice-tests-enthalpy-benchmark-b-b-configure"]], "compass.landice.tests.enthalpy_benchmark.B.B.run": [[131, "compass-landice-tests-enthalpy-benchmark-b-b-run"]], "compass.landice.tests.enthalpy_benchmark.B.visualize.Visualize": [[132, "compass-landice-tests-enthalpy-benchmark-b-visualize-visualize"]], "compass.landice.tests.enthalpy_benchmark.B.visualize.Visualize.run": [[133, "compass-landice-tests-enthalpy-benchmark-b-visualize-visualize-run"]], "compass.landice.tests.enthalpy_benchmark.EnthalpyBenchmark": [[134, "compass-landice-tests-enthalpy-benchmark-enthalpybenchmark"]], "compass.landice.tests.enthalpy_benchmark.run_model.RunModel": [[135, "compass-landice-tests-enthalpy-benchmark-run-model-runmodel"]], "compass.landice.tests.enthalpy_benchmark.run_model.RunModel.run": [[136, "compass-landice-tests-enthalpy-benchmark-run-model-runmodel-run"]], "compass.landice.tests.enthalpy_benchmark.run_model.RunModel.setup": [[137, "compass-landice-tests-enthalpy-benchmark-run-model-runmodel-setup"]], "compass.landice.tests.enthalpy_benchmark.setup_mesh.SetupMesh": [[138, "compass-landice-tests-enthalpy-benchmark-setup-mesh-setupmesh"]], "compass.landice.tests.enthalpy_benchmark.setup_mesh.SetupMesh.run": [[139, "compass-landice-tests-enthalpy-benchmark-setup-mesh-setupmesh-run"]], "compass.landice.tests.greenland.Greenland": [[140, "compass-landice-tests-greenland-greenland"]], "compass.landice.tests.greenland.decomposition_test.DecompositionTest": [[141, "compass-landice-tests-greenland-decomposition-test-decompositiontest"]], "compass.landice.tests.greenland.decomposition_test.DecompositionTest.run": [[142, "compass-landice-tests-greenland-decomposition-test-decompositiontest-run"]], "compass.landice.tests.greenland.high_res_mesh.HighResMesh": [[143, "compass-landice-tests-greenland-high-res-mesh-highresmesh"]], "compass.landice.tests.greenland.high_res_mesh.HighResMesh.run": [[144, "compass-landice-tests-greenland-high-res-mesh-highresmesh-run"]], "compass.landice.tests.greenland.mesh.Mesh": [[145, "compass-landice-tests-greenland-mesh-mesh"]], "compass.landice.tests.greenland.mesh.Mesh.build_cell_width": [[146, "compass-landice-tests-greenland-mesh-mesh-build-cell-width"]], "compass.landice.tests.greenland.mesh.Mesh.run": [[147, "compass-landice-tests-greenland-mesh-mesh-run"]], "compass.landice.tests.greenland.restart_test.RestartTest": [[148, "compass-landice-tests-greenland-restart-test-restarttest"]], "compass.landice.tests.greenland.restart_test.RestartTest.run": [[149, "compass-landice-tests-greenland-restart-test-restarttest-run"]], "compass.landice.tests.greenland.run_model.RunModel": [[150, "compass-landice-tests-greenland-run-model-runmodel"]], "compass.landice.tests.greenland.run_model.RunModel.run": [[151, "compass-landice-tests-greenland-run-model-runmodel-run"]], "compass.landice.tests.greenland.run_model.RunModel.setup": [[152, "compass-landice-tests-greenland-run-model-runmodel-setup"]], "compass.landice.tests.greenland.smoke_test.SmokeTest": [[153, "compass-landice-tests-greenland-smoke-test-smoketest"]], "compass.landice.tests.greenland.smoke_test.SmokeTest.run": [[154, "compass-landice-tests-greenland-smoke-test-smoketest-run"]], "compass.landice.tests.humboldt.Humboldt": [[155, "compass-landice-tests-humboldt-humboldt"]], "compass.landice.tests.humboldt.decomposition_test.DecompositionTest": [[156, "compass-landice-tests-humboldt-decomposition-test-decompositiontest"]], "compass.landice.tests.humboldt.decomposition_test.DecompositionTest.validate": [[157, "compass-landice-tests-humboldt-decomposition-test-decompositiontest-validate"]], "compass.landice.tests.humboldt.mesh.Mesh": [[158, "compass-landice-tests-humboldt-mesh-mesh"]], "compass.landice.tests.humboldt.mesh.Mesh.run": [[159, "compass-landice-tests-humboldt-mesh-mesh-run"]], "compass.landice.tests.humboldt.mesh_gen.MeshGen": [[160, "compass-landice-tests-humboldt-mesh-gen-meshgen"]], "compass.landice.tests.humboldt.mesh_gen.MeshGen.run": [[161, "compass-landice-tests-humboldt-mesh-gen-meshgen-run"]], "compass.landice.tests.humboldt.restart_test.RestartTest": [[162, "compass-landice-tests-humboldt-restart-test-restarttest"]], "compass.landice.tests.humboldt.restart_test.RestartTest.validate": [[163, "compass-landice-tests-humboldt-restart-test-restarttest-validate"]], "compass.landice.tests.humboldt.run_model.RunModel": [[164, "compass-landice-tests-humboldt-run-model-runmodel"]], "compass.landice.tests.humboldt.run_model.RunModel.run": [[165, "compass-landice-tests-humboldt-run-model-runmodel-run"]], "compass.landice.tests.hydro_radial.HydroRadial": [[166, "compass-landice-tests-hydro-radial-hydroradial"]], "compass.landice.tests.hydro_radial.decomposition_test.DecompositionTest": [[167, "compass-landice-tests-hydro-radial-decomposition-test-decompositiontest"]], "compass.landice.tests.hydro_radial.decomposition_test.DecompositionTest.run": [[168, "compass-landice-tests-hydro-radial-decomposition-test-decompositiontest-run"]], "compass.landice.tests.hydro_radial.restart_test.RestartTest": [[169, "compass-landice-tests-hydro-radial-restart-test-restarttest"]], "compass.landice.tests.hydro_radial.restart_test.RestartTest.run": [[170, "compass-landice-tests-hydro-radial-restart-test-restarttest-run"]], "compass.landice.tests.hydro_radial.run_model.RunModel": [[171, "compass-landice-tests-hydro-radial-run-model-runmodel"]], "compass.landice.tests.hydro_radial.run_model.RunModel.run": [[172, "compass-landice-tests-hydro-radial-run-model-runmodel-run"]], "compass.landice.tests.hydro_radial.run_model.RunModel.setup": [[173, "compass-landice-tests-hydro-radial-run-model-runmodel-setup"]], "compass.landice.tests.hydro_radial.setup_mesh.SetupMesh": [[174, "compass-landice-tests-hydro-radial-setup-mesh-setupmesh"]], "compass.landice.tests.hydro_radial.setup_mesh.SetupMesh.run": [[175, "compass-landice-tests-hydro-radial-setup-mesh-setupmesh-run"]], "compass.landice.tests.hydro_radial.spinup_test.SpinupTest": [[176, "compass-landice-tests-hydro-radial-spinup-test-spinuptest"]], "compass.landice.tests.hydro_radial.spinup_test.SpinupTest.run": [[177, "compass-landice-tests-hydro-radial-spinup-test-spinuptest-run"]], "compass.landice.tests.hydro_radial.steady_state_drift_test.SteadyStateDriftTest": [[178, "compass-landice-tests-hydro-radial-steady-state-drift-test-steadystatedrifttest"]], "compass.landice.tests.hydro_radial.steady_state_drift_test.SteadyStateDriftTest.run": [[179, "compass-landice-tests-hydro-radial-steady-state-drift-test-steadystatedrifttest-run"]], "compass.landice.tests.hydro_radial.visualize.Visualize": [[180, "compass-landice-tests-hydro-radial-visualize-visualize"]], "compass.landice.tests.hydro_radial.visualize.Visualize.run": [[181, "compass-landice-tests-hydro-radial-visualize-visualize-run"]], "compass.landice.tests.hydro_radial.visualize.visualize_hydro_radial": [[182, "compass-landice-tests-hydro-radial-visualize-visualize-hydro-radial"]], "compass.landice.tests.ismip6_forcing.Ismip6Forcing": [[183, "compass-landice-tests-ismip6-forcing-ismip6forcing"]], "compass.landice.tests.ismip6_forcing.atmosphere.Atmosphere": [[184, "compass-landice-tests-ismip6-forcing-atmosphere-atmosphere"]], "compass.landice.tests.ismip6_forcing.atmosphere.Atmosphere.configure": [[185, "compass-landice-tests-ismip6-forcing-atmosphere-atmosphere-configure"]], "compass.landice.tests.ismip6_forcing.atmosphere.create_mapfile_smb": [[186, "module-compass.landice.tests.ismip6_forcing.atmosphere.create_mapfile_smb"]], "compass.landice.tests.ismip6_forcing.atmosphere.create_mapfile_smb.build_mapping_file": [[187, "compass-landice-tests-ismip6-forcing-atmosphere-create-mapfile-smb-build-mapping-file"]], "compass.landice.tests.ismip6_forcing.atmosphere.create_mapfile_smb.create_atm_scrip": [[188, "compass-landice-tests-ismip6-forcing-atmosphere-create-mapfile-smb-create-atm-scrip"]], "compass.landice.tests.ismip6_forcing.atmosphere.process_smb.ProcessSMB": [[189, "compass-landice-tests-ismip6-forcing-atmosphere-process-smb-processsmb"]], "compass.landice.tests.ismip6_forcing.atmosphere.process_smb.ProcessSMB.correct_smb_anomaly_for_climatology": [[190, "compass-landice-tests-ismip6-forcing-atmosphere-process-smb-processsmb-correct-smb-anomaly-for-climatology"]], "compass.landice.tests.ismip6_forcing.atmosphere.process_smb.ProcessSMB.remap_ismip6_smb_to_mali": [[191, "compass-landice-tests-ismip6-forcing-atmosphere-process-smb-processsmb-remap-ismip6-smb-to-mali"]], "compass.landice.tests.ismip6_forcing.atmosphere.process_smb.ProcessSMB.rename_ismip6_smb_to_mali_vars": [[192, "compass-landice-tests-ismip6-forcing-atmosphere-process-smb-processsmb-rename-ismip6-smb-to-mali-vars"]], "compass.landice.tests.ismip6_forcing.atmosphere.process_smb.ProcessSMB.run": [[193, "compass-landice-tests-ismip6-forcing-atmosphere-process-smb-processsmb-run"]], "compass.landice.tests.ismip6_forcing.atmosphere.process_smb.ProcessSMB.setup": [[194, "compass-landice-tests-ismip6-forcing-atmosphere-process-smb-processsmb-setup"]], "compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.ProcessSmbRacmo": [[195, "compass-landice-tests-ismip6-forcing-atmosphere-process-smb-racmo-processsmbracmo"]], "compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.ProcessSmbRacmo.correct_smb_anomaly_for_base_smb": [[196, "compass-landice-tests-ismip6-forcing-atmosphere-process-smb-racmo-processsmbracmo-correct-smb-anomaly-for-base-smb"]], "compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.ProcessSmbRacmo.remap_source_smb_to_mali": [[197, "compass-landice-tests-ismip6-forcing-atmosphere-process-smb-racmo-processsmbracmo-remap-source-smb-to-mali"]], "compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.ProcessSmbRacmo.rename_source_smb_to_mali_vars": [[198, "compass-landice-tests-ismip6-forcing-atmosphere-process-smb-racmo-processsmbracmo-rename-source-smb-to-mali-vars"]], "compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.ProcessSmbRacmo.run": [[199, "compass-landice-tests-ismip6-forcing-atmosphere-process-smb-racmo-processsmbracmo-run"]], "compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.ProcessSmbRacmo.setup": [[200, "compass-landice-tests-ismip6-forcing-atmosphere-process-smb-racmo-processsmbracmo-setup"]], "compass.landice.tests.ismip6_forcing.configure.configure": [[201, "compass-landice-tests-ismip6-forcing-configure-configure"]], "compass.landice.tests.ismip6_forcing.create_mapfile.build_mapping_file": [[202, "compass-landice-tests-ismip6-forcing-create-mapfile-build-mapping-file"]], "compass.landice.tests.ismip6_forcing.ocean_basal.OceanBasal": [[203, "compass-landice-tests-ismip6-forcing-ocean-basal-oceanbasal"]], "compass.landice.tests.ismip6_forcing.ocean_basal.OceanBasal.configure": [[204, "compass-landice-tests-ismip6-forcing-ocean-basal-oceanbasal-configure"]], "compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.ProcessBasalMelt": [[205, "compass-landice-tests-ismip6-forcing-ocean-basal-process-basal-melt-processbasalmelt"]], "compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.ProcessBasalMelt.combine_ismip6_inputfiles": [[206, "compass-landice-tests-ismip6-forcing-ocean-basal-process-basal-melt-processbasalmelt-combine-ismip6-inputfiles"]], "compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.ProcessBasalMelt.remap_ismip6_basal_melt_to_mali_vars": [[207, "compass-landice-tests-ismip6-forcing-ocean-basal-process-basal-melt-processbasalmelt-remap-ismip6-basal-melt-to-mali-vars"]], "compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.ProcessBasalMelt.rename_ismip6_basal_melt_to_mali_vars": [[208, "compass-landice-tests-ismip6-forcing-ocean-basal-process-basal-melt-processbasalmelt-rename-ismip6-basal-melt-to-mali-vars"]], "compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.ProcessBasalMelt.run": [[209, "compass-landice-tests-ismip6-forcing-ocean-basal-process-basal-melt-processbasalmelt-run"]], "compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.ProcessBasalMelt.setup": [[210, "compass-landice-tests-ismip6-forcing-ocean-basal-process-basal-melt-processbasalmelt-setup"]], "compass.landice.tests.ismip6_forcing.ocean_thermal.OceanThermal": [[211, "compass-landice-tests-ismip6-forcing-ocean-thermal-oceanthermal"]], "compass.landice.tests.ismip6_forcing.ocean_thermal.OceanThermal.configure": [[212, "compass-landice-tests-ismip6-forcing-ocean-thermal-oceanthermal-configure"]], "compass.landice.tests.ismip6_forcing.ocean_thermal.process_thermal_forcing.ProcessThermalForcing": [[213, "compass-landice-tests-ismip6-forcing-ocean-thermal-process-thermal-forcing-processthermalforcing"]], "compass.landice.tests.ismip6_forcing.ocean_thermal.process_thermal_forcing.ProcessThermalForcing.remap_ismip6_thermal_forcing_to_mali_vars": [[214, "compass-landice-tests-ismip6-forcing-ocean-thermal-process-thermal-forcing-processthermalforcing-remap-ismip6-thermal-forcing-to-mali-vars"]], "compass.landice.tests.ismip6_forcing.ocean_thermal.process_thermal_forcing.ProcessThermalForcing.rename_ismip6_thermal_forcing_to_mali_vars": [[215, "compass-landice-tests-ismip6-forcing-ocean-thermal-process-thermal-forcing-processthermalforcing-rename-ismip6-thermal-forcing-to-mali-vars"]], "compass.landice.tests.ismip6_forcing.ocean_thermal.process_thermal_forcing.ProcessThermalForcing.run": [[216, "compass-landice-tests-ismip6-forcing-ocean-thermal-process-thermal-forcing-processthermalforcing-run"]], "compass.landice.tests.ismip6_forcing.ocean_thermal.process_thermal_forcing.ProcessThermalForcing.setup": [[217, "compass-landice-tests-ismip6-forcing-ocean-thermal-process-thermal-forcing-processthermalforcing-setup"]], "compass.landice.tests.kangerlussuaq.Kangerlussuaq": [[218, "compass-landice-tests-kangerlussuaq-kangerlussuaq"]], "compass.landice.tests.kangerlussuaq.mesh.Mesh": [[219, "compass-landice-tests-kangerlussuaq-mesh-mesh"]], "compass.landice.tests.kangerlussuaq.mesh.Mesh.run": [[220, "compass-landice-tests-kangerlussuaq-mesh-mesh-run"]], "compass.landice.tests.kangerlussuaq.mesh_gen.MeshGen": [[221, "compass-landice-tests-kangerlussuaq-mesh-gen-meshgen"]], "compass.landice.tests.kangerlussuaq.mesh_gen.MeshGen.run": [[222, "compass-landice-tests-kangerlussuaq-mesh-gen-meshgen-run"]], "compass.landice.tests.koge_bugt_s.KogeBugtS": [[223, "compass-landice-tests-koge-bugt-s-kogebugts"]], "compass.landice.tests.koge_bugt_s.mesh.Mesh": [[224, "compass-landice-tests-koge-bugt-s-mesh-mesh"]], "compass.landice.tests.koge_bugt_s.mesh.Mesh.run": [[225, "compass-landice-tests-koge-bugt-s-mesh-mesh-run"]], "compass.landice.tests.koge_bugt_s.mesh_gen.MeshGen": [[226, "compass-landice-tests-koge-bugt-s-mesh-gen-meshgen"]], "compass.landice.tests.koge_bugt_s.mesh_gen.MeshGen.run": [[227, "compass-landice-tests-koge-bugt-s-mesh-gen-meshgen-run"]], "compass.landice.tests.mismipplus.MISMIPplus": [[228, "compass-landice-tests-mismipplus-mismipplus"]], "compass.landice.tests.mismipplus.run_model.RunModel": [[229, "compass-landice-tests-mismipplus-run-model-runmodel"]], "compass.landice.tests.mismipplus.run_model.RunModel.run": [[230, "compass-landice-tests-mismipplus-run-model-runmodel-run"]], "compass.landice.tests.mismipplus.run_model.RunModel.setup": [[231, "compass-landice-tests-mismipplus-run-model-runmodel-setup"]], "compass.landice.tests.mismipplus.smoke_test.SmokeTest": [[232, "compass-landice-tests-mismipplus-smoke-test-smoketest"]], "compass.landice.tests.mismipplus.smoke_test.SmokeTest.run": [[233, "compass-landice-tests-mismipplus-smoke-test-smoketest-run"]], "compass.landice.tests.thwaites.Thwaites": [[234, "compass-landice-tests-thwaites-thwaites"]], "compass.landice.tests.thwaites.decomposition_test.DecompositionTest": [[235, "compass-landice-tests-thwaites-decomposition-test-decompositiontest"]], "compass.landice.tests.thwaites.decomposition_test.DecompositionTest.run": [[236, "compass-landice-tests-thwaites-decomposition-test-decompositiontest-run"]], "compass.landice.tests.thwaites.restart_test.RestartTest": [[237, "compass-landice-tests-thwaites-restart-test-restarttest"]], "compass.landice.tests.thwaites.restart_test.RestartTest.run": [[238, "compass-landice-tests-thwaites-restart-test-restarttest-run"]], "compass.landice.tests.thwaites.run_model.RunModel": [[239, "compass-landice-tests-thwaites-run-model-runmodel"]], "compass.landice.tests.thwaites.run_model.RunModel.run": [[240, "compass-landice-tests-thwaites-run-model-runmodel-run"]], "compass.landice.tests.thwaites.run_model.RunModel.setup": [[241, "compass-landice-tests-thwaites-run-model-runmodel-setup"]], "Landice core": [[242, "landice-core"], [679, "landice-core"]], "framework": [[243, "framework"], [244, "framework"], [245, "framework"], [246, "framework"], [247, "framework"], [248, "framework"], [249, "framework"], [250, "framework"], [252, "framework"], [253, "framework"], [254, "framework"], [255, "framework"], [256, "framework"], [651, "framework"], [652, "framework"], [653, "framework"], [658, "framework"], [660, "framework"], [661, "framework"], [662, "framework"], [664, "framework"], [667, "framework"]], "DtConvergenceTest": [[243, "dtconvergencetest"]], "RunModel": [[243, "runmodel"], [244, "runmodel"], [245, "runmodel"]], "SetupMesh": [[244, "setupmesh"], [245, "setupmesh"]], "Visualize": [[244, "visualize"], [245, "visualize"]], "DecompositionTest": [[244, "decompositiontest"], [245, "decompositiontest"]], "SmokeTest": [[245, "smoketest"]], "RestartTest": [[245, "restarttest"]], "setup_mesh": [[246, "setup-mesh"], [247, "setup-mesh"], [250, "setup-mesh"]], "run_experiment": [[246, "run-experiment"]], "standard_experiments": [[246, "standard-experiments"], [684, "standard-experiments"]], "visualize": [[246, "visualize"], [250, "visualize"]], "decomposition_test and enthalpy_decomposition_test": [[246, "decomposition-test-and-enthalpy-decomposition-test"], [684, "decomposition-test-and-enthalpy-decomposition-test"]], "restart_test and enthalpy_restart_test": [[246, "restart-test-and-enthalpy-restart-test"], [684, "restart-test-and-enthalpy-restart-test"]], "run_model": [[247, "run-model"], [248, "run-model"], [249, "run-model"], [250, "run-model"], [255, "run-model"], [256, "run-model"]], "A": [[247, "a"], [685, "a"]], "B": [[247, "b"], [685, "b"]], "smoke_test": [[248, "smoke-test"], [255, "smoke-test"], [683, "smoke-test"], [686, "smoke-test"], [693, "smoke-test"]], "decomposition_test": [[248, "decomposition-test"], [249, "decomposition-test"], [250, "decomposition-test"], [256, "decomposition-test"], [682, "decomposition-test"], [683, "decomposition-test"], [686, "decomposition-test"], [688, "decomposition-test"], [694, "decomposition-test"]], "restart_test": [[248, "restart-test"], [249, "restart-test"], [250, "restart-test"], [256, "restart-test"], [651, "restart-test"], [658, "restart-test"], [683, "restart-test"], [686, "restart-test"], [688, "restart-test"], [694, "restart-test"], [706, "restart-test"], [713, "restart-test"]], "high_res_mesh": [[248, "high-res-mesh"], [256, "high-res-mesh"], [686, "high-res-mesh"], [694, "high-res-mesh"]], "mesh_gen": [[249, "mesh-gen"], [253, "mesh-gen"], [254, "mesh-gen"], [687, "mesh-gen"], [691, "mesh-gen"], [692, "mesh-gen"]], "spinup_test": [[250, "spinup-test"], [688, "spinup-test"]], "steady_state_drift_test": [[250, "steady-state-drift-test"], [688, "steady-state-drift-test"]], "Test groups": [[251, "test-groups"], [659, "test-groups"], [714, "test-groups"]], "atmosphere": [[252, "atmosphere"], [690, "atmosphere"]], "ocean_basal": [[252, "ocean-basal"], [690, "ocean-basal"]], "ocean_thermal": [[252, "ocean-thermal"], [690, "ocean-thermal"]], "Anvil": [[257, "anvil"], [695, "anvil"]], "intel": [[257, "intel"], [258, "intel"], [259, "intel"]], "gnu": [[257, "gnu"], [258, "gnu"]], "Chrysalis": [[258, "chrysalis"], [696, "chrysalis"]], "CompyMcNodeFace": [[259, "compymcnodeface"], [697, "compymcnodeface"]], "Cori": [[260, "cori"], [698, "cori"]], "cori-haswell, intel": [[260, "cori-haswell-intel"]], "cori-haswell, gnu": [[260, "cori-haswell-gnu"]], "Machines": [[261, "machines"], [699, "machines"]], "Supported Machines": [[261, "supported-machines"], [699, "supported-machines"]], "Other Machines": [[261, "other-machines"], [699, "other-machines"]], "Perlmutter": [[262, "perlmutter"], [700, "perlmutter"]], "pm-cpu, gnu": [[262, "pm-cpu-gnu"]], "ocean": [[263, "ocean"]], "baroclinic_channel": [[263, "baroclinic-channel"], [651, "baroclinic-channel"], [706, "baroclinic-channel"]], "dam_break": [[263, "dam-break"], [652, "dam-break"], [707, "dam-break"]], "drying_slope": [[263, "drying-slope"], [653, "drying-slope"], [708, "drying-slope"]], "global_convergence": [[263, "global-convergence"], [654, "global-convergence"], [709, "global-convergence"]], "cosine_bell": [[263, "cosine-bell"], [654, "cosine-bell"], [709, "cosine-bell"]], "global_ocean": [[263, "global-ocean"], [655, "global-ocean"], [710, "global-ocean"]], "test cases and steps": [[263, "test-cases-and-steps"], [263, "id1"]], "global_ocean framework": [[263, "global-ocean-framework"]], "gotm": [[263, "gotm"], [656, "gotm"], [711, "gotm"]], "default": [[263, "default"], [651, "default"], [652, "default"], [653, "default"], [656, "default"], [658, "default"], [660, "default"], [662, "default"], [706, "default"], [707, "default"], [708, "default"], [711, "default"], [713, "default"], [715, "default"], [717, "default"], [719, "default"], [722, "default"]], "hurricane": [[263, "hurricane"], [657, "hurricane"], [712, "hurricane"]], "ice_shelf_2d": [[263, "ice-shelf-2d"], [658, "ice-shelf-2d"], [713, "ice-shelf-2d"]], "internal_wave": [[263, "internal-wave"], [660, "internal-wave"], [715, "internal-wave"]], "isomip_plus": [[263, "isomip-plus"], [661, "isomip-plus"], [716, "isomip-plus"]], "merry_go_round": [[263, "merry-go-round"], [662, "merry-go-round"], [717, "merry-go-round"]], "planar_convergence": [[263, "planar-convergence"], [663, "planar-convergence"], [718, "planar-convergence"]], "horizontal_advection": [[263, "horizontal-advection"], [663, "horizontal-advection"], [718, "horizontal-advection"]], "soma": [[263, "soma"], [664, "soma"], [719, "soma"]], "sphere_transport": [[263, "sphere-transport"], [665, "sphere-transport"], [720, "sphere-transport"]], "correlated_tracers_2d": [[263, "correlated-tracers-2d"], [665, "correlated-tracers-2d"], [720, "correlated-tracers-2d"]], "divergent_2d": [[263, "divergent-2d"], [665, "divergent-2d"], [720, "divergent-2d"]], "nondivergent_2d": [[263, "nondivergent-2d"], [665, "nondivergent-2d"], [720, "nondivergent-2d"]], "rotation_2d": [[263, "rotation-2d"], [665, "rotation-2d"], [720, "rotation-2d"]], "sphere_transport framework": [[263, "sphere-transport-framework"]], "ziso": [[263, "ziso"], [667, "ziso"], [722, "ziso"]], "ocean framework": [[263, "ocean-framework"]], "Ocean framework": [[264, "ocean-framework"]], "Namelist replacements and streams files": [[264, "namelist-replacements-and-streams-files"]], "Vertical coordinate": [[264, "vertical-coordinate"], [703, "vertical-coordinate"]], "Culling Meshes": [[264, "culling-meshes"]], "Including a Floodplain": [[264, "including-a-floodplain"]], "Haney number": [[264, "haney-number"]], "Ice-shelf cavities": [[264, "ice-shelf-cavities"], [710, "ice-shelf-cavities"]], "Particles": [[264, "particles"]], "Plotting": [[264, "plotting"]], "compass.ocean.Ocean": [[265, "compass-ocean-ocean"]], "compass.ocean.haney.compute_haney_number": [[266, "compass-ocean-haney-compute-haney-number"]], "compass.ocean.iceshelf.adjust_ssh": [[267, "compass-ocean-iceshelf-adjust-ssh"]], "compass.ocean.iceshelf.compute_land_ice_pressure_and_draft": [[268, "compass-ocean-iceshelf-compute-land-ice-pressure-and-draft"]], "compass.ocean.mesh.cull.CullMeshStep": [[269, "compass-ocean-mesh-cull-cullmeshstep"]], "compass.ocean.mesh.cull.CullMeshStep.run": [[270, "compass-ocean-mesh-cull-cullmeshstep-run"]], "compass.ocean.mesh.cull.CullMeshStep.setup": [[271, "compass-ocean-mesh-cull-cullmeshstep-setup"]], "compass.ocean.mesh.cull.cull_mesh": [[272, "compass-ocean-mesh-cull-cull-mesh"]], "compass.ocean.mesh.floodplain.FloodplainMeshStep": [[273, "compass-ocean-mesh-floodplain-floodplainmeshstep"]], "compass.ocean.mesh.floodplain.FloodplainMeshStep.run": [[274, "compass-ocean-mesh-floodplain-floodplainmeshstep-run"]], "compass.ocean.particles.remap_particles": [[275, "compass-ocean-particles-remap-particles"]], "compass.ocean.particles.write": [[276, "compass-ocean-particles-write"]], "compass.ocean.plot.plot_initial_state": [[277, "compass-ocean-plot-plot-initial-state"]], "compass.ocean.plot.plot_vertical_grid": [[278, "compass-ocean-plot-plot-vertical-grid"]], "compass.ocean.tests.baroclinic_channel.BaroclinicChannel": [[279, "compass-ocean-tests-baroclinic-channel-baroclinicchannel"]], "compass.ocean.tests.baroclinic_channel.configure": [[280, "compass-ocean-tests-baroclinic-channel-configure"]], "compass.ocean.tests.baroclinic_channel.decomp_test.DecompTest": [[281, "compass-ocean-tests-baroclinic-channel-decomp-test-decomptest"]], "compass.ocean.tests.baroclinic_channel.decomp_test.DecompTest.configure": [[282, "compass-ocean-tests-baroclinic-channel-decomp-test-decomptest-configure"]], "compass.ocean.tests.baroclinic_channel.decomp_test.DecompTest.run": [[283, "compass-ocean-tests-baroclinic-channel-decomp-test-decomptest-run"]], "compass.ocean.tests.baroclinic_channel.default.Default": [[284, "compass-ocean-tests-baroclinic-channel-default-default"]], "compass.ocean.tests.baroclinic_channel.default.Default.configure": [[285, "compass-ocean-tests-baroclinic-channel-default-default-configure"]], "compass.ocean.tests.baroclinic_channel.default.Default.run": [[286, "compass-ocean-tests-baroclinic-channel-default-default-run"]], "compass.ocean.tests.baroclinic_channel.forward.Forward": [[287, "compass-ocean-tests-baroclinic-channel-forward-forward"]], "compass.ocean.tests.baroclinic_channel.forward.Forward.run": [[288, "compass-ocean-tests-baroclinic-channel-forward-forward-run"]], "compass.ocean.tests.baroclinic_channel.forward.Forward.setup": [[289, "compass-ocean-tests-baroclinic-channel-forward-forward-setup"]], "compass.ocean.tests.baroclinic_channel.initial_state.InitialState": [[290, "compass-ocean-tests-baroclinic-channel-initial-state-initialstate"]], "compass.ocean.tests.baroclinic_channel.initial_state.InitialState.run": [[291, "compass-ocean-tests-baroclinic-channel-initial-state-initialstate-run"]], "compass.ocean.tests.baroclinic_channel.initial_state.InitialState.setup": [[292, "compass-ocean-tests-baroclinic-channel-initial-state-initialstate-setup"]], "compass.ocean.tests.baroclinic_channel.restart_test.RestartTest": [[293, "compass-ocean-tests-baroclinic-channel-restart-test-restarttest"]], "compass.ocean.tests.baroclinic_channel.restart_test.RestartTest.configure": [[294, "compass-ocean-tests-baroclinic-channel-restart-test-restarttest-configure"]], "compass.ocean.tests.baroclinic_channel.restart_test.RestartTest.run": [[295, "compass-ocean-tests-baroclinic-channel-restart-test-restarttest-run"]], "compass.ocean.tests.baroclinic_channel.rpe_test.RpeTest": [[296, "compass-ocean-tests-baroclinic-channel-rpe-test-rpetest"]], "compass.ocean.tests.baroclinic_channel.rpe_test.RpeTest.configure": [[297, "compass-ocean-tests-baroclinic-channel-rpe-test-rpetest-configure"]], "compass.ocean.tests.baroclinic_channel.rpe_test.RpeTest.run": [[298, "compass-ocean-tests-baroclinic-channel-rpe-test-rpetest-run"]], "compass.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis": [[299, "compass-ocean-tests-baroclinic-channel-rpe-test-analysis-analysis"]], "compass.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.run": [[300, "compass-ocean-tests-baroclinic-channel-rpe-test-analysis-analysis-run"]], "compass.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.setup": [[301, "compass-ocean-tests-baroclinic-channel-rpe-test-analysis-analysis-setup"]], "compass.ocean.tests.baroclinic_channel.threads_test.ThreadsTest": [[302, "compass-ocean-tests-baroclinic-channel-threads-test-threadstest"]], "compass.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.configure": [[303, "compass-ocean-tests-baroclinic-channel-threads-test-threadstest-configure"]], "compass.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.run": [[304, "compass-ocean-tests-baroclinic-channel-threads-test-threadstest-run"]], "compass.ocean.tests.dam_break.DamBreak": [[305, "compass-ocean-tests-dam-break-dambreak"]], "compass.ocean.tests.dam_break.default.Default": [[306, "compass-ocean-tests-dam-break-default-default"]], "compass.ocean.tests.dam_break.default.Default.configure": [[307, "compass-ocean-tests-dam-break-default-default-configure"]], "compass.ocean.tests.dam_break.forward.Forward": [[308, "compass-ocean-tests-dam-break-forward-forward"]], "compass.ocean.tests.dam_break.forward.Forward.run": [[309, "compass-ocean-tests-dam-break-forward-forward-run"]], "compass.ocean.tests.dam_break.initial_state.InitialState": [[310, "compass-ocean-tests-dam-break-initial-state-initialstate"]], "compass.ocean.tests.dam_break.initial_state.InitialState.run": [[311, "compass-ocean-tests-dam-break-initial-state-initialstate-run"]], "compass.ocean.tests.dam_break.viz.Viz": [[312, "compass-ocean-tests-dam-break-viz-viz"]], "compass.ocean.tests.dam_break.viz.Viz.run": [[313, "compass-ocean-tests-dam-break-viz-viz-run"]], "compass.ocean.tests.drying_slope.DryingSlope": [[314, "compass-ocean-tests-drying-slope-dryingslope"]], "compass.ocean.tests.drying_slope.default.Default": [[315, "compass-ocean-tests-drying-slope-default-default"]], "compass.ocean.tests.drying_slope.default.Default.configure": [[316, "compass-ocean-tests-drying-slope-default-default-configure"]], "compass.ocean.tests.drying_slope.forward.Forward": [[317, "compass-ocean-tests-drying-slope-forward-forward"]], "compass.ocean.tests.drying_slope.forward.Forward.run": [[318, "compass-ocean-tests-drying-slope-forward-forward-run"]], "compass.ocean.tests.drying_slope.initial_state.InitialState": [[319, "compass-ocean-tests-drying-slope-initial-state-initialstate"]], "compass.ocean.tests.drying_slope.initial_state.InitialState.run": [[320, "compass-ocean-tests-drying-slope-initial-state-initialstate-run"]], "compass.ocean.tests.drying_slope.viz.Viz": [[321, "compass-ocean-tests-drying-slope-viz-viz"]], "compass.ocean.tests.drying_slope.viz.Viz.run": [[322, "compass-ocean-tests-drying-slope-viz-viz-run"]], "compass.ocean.tests.global_convergence.GlobalConvergence": [[323, "compass-ocean-tests-global-convergence-globalconvergence"]], "compass.ocean.tests.global_convergence.cosine_bell.CosineBell": [[324, "compass-ocean-tests-global-convergence-cosine-bell-cosinebell"]], "compass.ocean.tests.global_convergence.cosine_bell.CosineBell.configure": [[325, "compass-ocean-tests-global-convergence-cosine-bell-cosinebell-configure"]], "compass.ocean.tests.global_convergence.cosine_bell.CosineBell.run": [[326, "compass-ocean-tests-global-convergence-cosine-bell-cosinebell-run"]], "compass.ocean.tests.global_convergence.cosine_bell.analysis.Analysis": [[327, "compass-ocean-tests-global-convergence-cosine-bell-analysis-analysis"]], "compass.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rmse": [[328, "compass-ocean-tests-global-convergence-cosine-bell-analysis-analysis-rmse"]], "compass.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.run": [[329, "compass-ocean-tests-global-convergence-cosine-bell-analysis-analysis-run"]], "compass.ocean.tests.global_convergence.cosine_bell.forward.Forward": [[330, "compass-ocean-tests-global-convergence-cosine-bell-forward-forward"]], "compass.ocean.tests.global_convergence.cosine_bell.forward.Forward.get_dt": [[331, "compass-ocean-tests-global-convergence-cosine-bell-forward-forward-get-dt"]], "compass.ocean.tests.global_convergence.cosine_bell.forward.Forward.run": [[332, "compass-ocean-tests-global-convergence-cosine-bell-forward-forward-run"]], "compass.ocean.tests.global_convergence.cosine_bell.forward.Forward.setup": [[333, "compass-ocean-tests-global-convergence-cosine-bell-forward-forward-setup"]], "compass.ocean.tests.global_convergence.cosine_bell.init.Init": [[334, "compass-ocean-tests-global-convergence-cosine-bell-init-init"]], "compass.ocean.tests.global_convergence.cosine_bell.init.Init.run": [[335, "compass-ocean-tests-global-convergence-cosine-bell-init-init-run"]], "compass.ocean.tests.global_ocean.GlobalOcean": [[336, "compass-ocean-tests-global-ocean-globalocean"]], "compass.ocean.tests.global_ocean.analysis_test.AnalysisTest": [[337, "compass-ocean-tests-global-ocean-analysis-test-analysistest"]], "compass.ocean.tests.global_ocean.analysis_test.AnalysisTest.configure": [[338, "compass-ocean-tests-global-ocean-analysis-test-analysistest-configure"]], "compass.ocean.tests.global_ocean.analysis_test.AnalysisTest.run": [[339, "compass-ocean-tests-global-ocean-analysis-test-analysistest-run"]], "compass.ocean.tests.global_ocean.configure": [[340, "module-compass.ocean.tests.global_ocean.configure"]], "compass.ocean.tests.global_ocean.configure.configure_global_ocean": [[341, "compass-ocean-tests-global-ocean-configure-configure-global-ocean"]], "compass.ocean.tests.global_ocean.daily_output_test.DailyOutputTest": [[342, "compass-ocean-tests-global-ocean-daily-output-test-dailyoutputtest"]], "compass.ocean.tests.global_ocean.daily_output_test.DailyOutputTest.configure": [[343, "compass-ocean-tests-global-ocean-daily-output-test-dailyoutputtest-configure"]], "compass.ocean.tests.global_ocean.daily_output_test.DailyOutputTest.run": [[344, "compass-ocean-tests-global-ocean-daily-output-test-dailyoutputtest-run"]], "compass.ocean.tests.global_ocean.decomp_test.DecompTest": [[345, "compass-ocean-tests-global-ocean-decomp-test-decomptest"]], "compass.ocean.tests.global_ocean.decomp_test.DecompTest.configure": [[346, "compass-ocean-tests-global-ocean-decomp-test-decomptest-configure"]], "compass.ocean.tests.global_ocean.decomp_test.DecompTest.run": [[347, "compass-ocean-tests-global-ocean-decomp-test-decomptest-run"]], "compass.ocean.tests.global_ocean.dynamic_adjustment.DynamicAdjustment": [[348, "compass-ocean-tests-global-ocean-dynamic-adjustment-dynamicadjustment"]], "compass.ocean.tests.global_ocean.dynamic_adjustment.DynamicAdjustment.run": [[349, "compass-ocean-tests-global-ocean-dynamic-adjustment-dynamicadjustment-run"]], "compass.ocean.tests.global_ocean.files_for_e3sm.FilesForE3SM": [[350, "compass-ocean-tests-global-ocean-files-for-e3sm-filesfore3sm"]], "compass.ocean.tests.global_ocean.files_for_e3sm.FilesForE3SM.configure": [[351, "compass-ocean-tests-global-ocean-files-for-e3sm-filesfore3sm-configure"]], "compass.ocean.tests.global_ocean.files_for_e3sm.FilesForE3SM.run": [[352, "compass-ocean-tests-global-ocean-files-for-e3sm-filesfore3sm-run"]], "compass.ocean.tests.global_ocean.files_for_e3sm.diagnostics_files.DiagnosticsFiles": [[353, "compass-ocean-tests-global-ocean-files-for-e3sm-diagnostics-files-diagnosticsfiles"]], "compass.ocean.tests.global_ocean.files_for_e3sm.diagnostics_files.DiagnosticsFiles.run": [[354, "compass-ocean-tests-global-ocean-files-for-e3sm-diagnostics-files-diagnosticsfiles-run"]], "compass.ocean.tests.global_ocean.files_for_e3sm.ocean_graph_partition.OceanGraphPartition": [[355, "compass-ocean-tests-global-ocean-files-for-e3sm-ocean-graph-partition-oceangraphpartition"]], "compass.ocean.tests.global_ocean.files_for_e3sm.ocean_graph_partition.OceanGraphPartition.run": [[356, "compass-ocean-tests-global-ocean-files-for-e3sm-ocean-graph-partition-oceangraphpartition-run"]], "compass.ocean.tests.global_ocean.files_for_e3sm.ocean_initial_condition.OceanInitialCondition": [[357, "compass-ocean-tests-global-ocean-files-for-e3sm-ocean-initial-condition-oceaninitialcondition"]], "compass.ocean.tests.global_ocean.files_for_e3sm.ocean_initial_condition.OceanInitialCondition.run": [[358, "compass-ocean-tests-global-ocean-files-for-e3sm-ocean-initial-condition-oceaninitialcondition-run"]], "compass.ocean.tests.global_ocean.files_for_e3sm.scrip.Scrip": [[359, "compass-ocean-tests-global-ocean-files-for-e3sm-scrip-scrip"]], "compass.ocean.tests.global_ocean.files_for_e3sm.scrip.Scrip.run": [[360, "compass-ocean-tests-global-ocean-files-for-e3sm-scrip-scrip-run"]], "compass.ocean.tests.global_ocean.files_for_e3sm.seaice_initial_condition.SeaiceInitialCondition": [[361, "compass-ocean-tests-global-ocean-files-for-e3sm-seaice-initial-condition-seaiceinitialcondition"]], "compass.ocean.tests.global_ocean.files_for_e3sm.seaice_initial_condition.SeaiceInitialCondition.run": [[362, "compass-ocean-tests-global-ocean-files-for-e3sm-seaice-initial-condition-seaiceinitialcondition-run"]], "compass.ocean.tests.global_ocean.forward.ForwardStep": [[363, "compass-ocean-tests-global-ocean-forward-forwardstep"]], "compass.ocean.tests.global_ocean.forward.ForwardStep.run": [[364, "compass-ocean-tests-global-ocean-forward-forwardstep-run"]], "compass.ocean.tests.global_ocean.forward.ForwardStep.setup": [[365, "compass-ocean-tests-global-ocean-forward-forwardstep-setup"]], "compass.ocean.tests.global_ocean.forward.ForwardTestCase": [[366, "compass-ocean-tests-global-ocean-forward-forwardtestcase"]], "compass.ocean.tests.global_ocean.forward.ForwardTestCase.configure": [[367, "compass-ocean-tests-global-ocean-forward-forwardtestcase-configure"]], "compass.ocean.tests.global_ocean.forward.ForwardTestCase.run": [[368, "compass-ocean-tests-global-ocean-forward-forwardtestcase-run"]], "compass.ocean.tests.global_ocean.init.Init": [[369, "compass-ocean-tests-global-ocean-init-init"]], "compass.ocean.tests.global_ocean.init.Init.configure": [[370, "compass-ocean-tests-global-ocean-init-init-configure"]], "compass.ocean.tests.global_ocean.init.Init.run": [[371, "compass-ocean-tests-global-ocean-init-init-run"]], "compass.ocean.tests.global_ocean.init.initial_state.InitialState": [[372, "compass-ocean-tests-global-ocean-init-initial-state-initialstate"]], "compass.ocean.tests.global_ocean.init.initial_state.InitialState.run": [[373, "compass-ocean-tests-global-ocean-init-initial-state-initialstate-run"]], "compass.ocean.tests.global_ocean.init.initial_state.InitialState.setup": [[374, "compass-ocean-tests-global-ocean-init-initial-state-initialstate-setup"]], "compass.ocean.tests.global_ocean.init.ssh_adjustment.SshAdjustment": [[375, "compass-ocean-tests-global-ocean-init-ssh-adjustment-sshadjustment"]], "compass.ocean.tests.global_ocean.init.ssh_adjustment.SshAdjustment.run": [[376, "compass-ocean-tests-global-ocean-init-ssh-adjustment-sshadjustment-run"]], "compass.ocean.tests.global_ocean.init.ssh_adjustment.SshAdjustment.setup": [[377, "compass-ocean-tests-global-ocean-init-ssh-adjustment-sshadjustment-setup"]], "compass.ocean.tests.global_ocean.mesh.Mesh": [[378, "compass-ocean-tests-global-ocean-mesh-mesh"]], "compass.ocean.tests.global_ocean.mesh.Mesh.configure": [[379, "compass-ocean-tests-global-ocean-mesh-mesh-configure"]], "compass.ocean.tests.global_ocean.mesh.Mesh.run": [[380, "compass-ocean-tests-global-ocean-mesh-mesh-run"]], "compass.ocean.tests.global_ocean.mesh.ec30to60.EC30to60BaseMesh": [[381, "compass-ocean-tests-global-ocean-mesh-ec30to60-ec30to60basemesh"]], "compass.ocean.tests.global_ocean.mesh.ec30to60.EC30to60BaseMesh.build_cell_width_lat_lon": [[382, "compass-ocean-tests-global-ocean-mesh-ec30to60-ec30to60basemesh-build-cell-width-lat-lon"]], "compass.ocean.tests.global_ocean.mesh.ec30to60.dynamic_adjustment.EC30to60DynamicAdjustment": [[383, "compass-ocean-tests-global-ocean-mesh-ec30to60-dynamic-adjustment-ec30to60dynamicadjustment"]], "compass.ocean.tests.global_ocean.mesh.ec30to60.dynamic_adjustment.EC30to60DynamicAdjustment.configure": [[384, "compass-ocean-tests-global-ocean-mesh-ec30to60-dynamic-adjustment-ec30to60dynamicadjustment-configure"]], "compass.ocean.tests.global_ocean.mesh.ec30to60.dynamic_adjustment.EC30to60DynamicAdjustment.run": [[385, "compass-ocean-tests-global-ocean-mesh-ec30to60-dynamic-adjustment-ec30to60dynamicadjustment-run"]], "compass.ocean.tests.global_ocean.mesh.qu240.dynamic_adjustment.QU240DynamicAdjustment": [[386, "compass-ocean-tests-global-ocean-mesh-qu240-dynamic-adjustment-qu240dynamicadjustment"]], "compass.ocean.tests.global_ocean.mesh.qu240.dynamic_adjustment.QU240DynamicAdjustment.configure": [[387, "compass-ocean-tests-global-ocean-mesh-qu240-dynamic-adjustment-qu240dynamicadjustment-configure"]], "compass.ocean.tests.global_ocean.mesh.qu240.dynamic_adjustment.QU240DynamicAdjustment.run": [[388, "compass-ocean-tests-global-ocean-mesh-qu240-dynamic-adjustment-qu240dynamicadjustment-run"]], "compass.ocean.tests.global_ocean.mesh.so12to60.SO12to60BaseMesh": [[389, "compass-ocean-tests-global-ocean-mesh-so12to60-so12to60basemesh"]], "compass.ocean.tests.global_ocean.mesh.so12to60.SO12to60BaseMesh.build_cell_width_lat_lon": [[390, "compass-ocean-tests-global-ocean-mesh-so12to60-so12to60basemesh-build-cell-width-lat-lon"]], "compass.ocean.tests.global_ocean.mesh.so12to60.dynamic_adjustment.SO12to60DynamicAdjustment": [[391, "compass-ocean-tests-global-ocean-mesh-so12to60-dynamic-adjustment-so12to60dynamicadjustment"]], "compass.ocean.tests.global_ocean.mesh.so12to60.dynamic_adjustment.SO12to60DynamicAdjustment.configure": [[392, "compass-ocean-tests-global-ocean-mesh-so12to60-dynamic-adjustment-so12to60dynamicadjustment-configure"]], "compass.ocean.tests.global_ocean.mesh.so12to60.dynamic_adjustment.SO12to60DynamicAdjustment.run": [[393, "compass-ocean-tests-global-ocean-mesh-so12to60-dynamic-adjustment-so12to60dynamicadjustment-run"]], "compass.ocean.tests.global_ocean.mesh.wc14.WC14BaseMesh": [[394, "compass-ocean-tests-global-ocean-mesh-wc14-wc14basemesh"]], "compass.ocean.tests.global_ocean.mesh.wc14.WC14BaseMesh.build_cell_width_lat_lon": [[395, "compass-ocean-tests-global-ocean-mesh-wc14-wc14basemesh-build-cell-width-lat-lon"]], "compass.ocean.tests.global_ocean.mesh.wc14.dynamic_adjustment.WC14DynamicAdjustment": [[396, "compass-ocean-tests-global-ocean-mesh-wc14-dynamic-adjustment-wc14dynamicadjustment"]], "compass.ocean.tests.global_ocean.mesh.wc14.dynamic_adjustment.WC14DynamicAdjustment.configure": [[397, "compass-ocean-tests-global-ocean-mesh-wc14-dynamic-adjustment-wc14dynamicadjustment-configure"]], "compass.ocean.tests.global_ocean.mesh.wc14.dynamic_adjustment.WC14DynamicAdjustment.run": [[398, "compass-ocean-tests-global-ocean-mesh-wc14-dynamic-adjustment-wc14dynamicadjustment-run"]], "compass.ocean.tests.global_ocean.metadata.add_mesh_and_init_metadata": [[399, "compass-ocean-tests-global-ocean-metadata-add-mesh-and-init-metadata"]], "compass.ocean.tests.global_ocean.metadata.get_e3sm_mesh_names": [[400, "compass-ocean-tests-global-ocean-metadata-get-e3sm-mesh-names"]], "compass.ocean.tests.global_ocean.performance_test.PerformanceTest": [[401, "compass-ocean-tests-global-ocean-performance-test-performancetest"]], "compass.ocean.tests.global_ocean.performance_test.PerformanceTest.configure": [[402, "compass-ocean-tests-global-ocean-performance-test-performancetest-configure"]], "compass.ocean.tests.global_ocean.performance_test.PerformanceTest.run": [[403, "compass-ocean-tests-global-ocean-performance-test-performancetest-run"]], "compass.ocean.tests.global_ocean.restart_test.RestartTest": [[404, "compass-ocean-tests-global-ocean-restart-test-restarttest"]], "compass.ocean.tests.global_ocean.restart_test.RestartTest.configure": [[405, "compass-ocean-tests-global-ocean-restart-test-restarttest-configure"]], "compass.ocean.tests.global_ocean.restart_test.RestartTest.run": [[406, "compass-ocean-tests-global-ocean-restart-test-restarttest-run"]], "compass.ocean.tests.global_ocean.threads_test.ThreadsTest": [[407, "compass-ocean-tests-global-ocean-threads-test-threadstest"]], "compass.ocean.tests.global_ocean.threads_test.ThreadsTest.configure": [[408, "compass-ocean-tests-global-ocean-threads-test-threadstest-configure"]], "compass.ocean.tests.global_ocean.threads_test.ThreadsTest.run": [[409, "compass-ocean-tests-global-ocean-threads-test-threadstest-run"]], "compass.ocean.tests.gotm.Gotm": [[410, "compass-ocean-tests-gotm-gotm"]], "compass.ocean.tests.gotm.default.Default": [[411, "compass-ocean-tests-gotm-default-default"]], "compass.ocean.tests.gotm.default.Default.validate": [[412, "compass-ocean-tests-gotm-default-default-validate"]], "compass.ocean.tests.gotm.default.analysis.Analysis": [[413, "compass-ocean-tests-gotm-default-analysis-analysis"]], "compass.ocean.tests.gotm.default.analysis.Analysis.run": [[414, "compass-ocean-tests-gotm-default-analysis-analysis-run"]], "compass.ocean.tests.gotm.default.forward.Forward": [[415, "compass-ocean-tests-gotm-default-forward-forward"]], "compass.ocean.tests.gotm.default.forward.Forward.run": [[416, "compass-ocean-tests-gotm-default-forward-forward-run"]], "compass.ocean.tests.gotm.default.init.Init": [[417, "compass-ocean-tests-gotm-default-init-init"]], "compass.ocean.tests.gotm.default.init.Init.run": [[418, "compass-ocean-tests-gotm-default-init-init-run"]], "compass.ocean.tests.hurricane.Hurricane": [[419, "compass-ocean-tests-hurricane-hurricane"]], "compass.ocean.tests.hurricane.analysis.Analysis": [[420, "compass-ocean-tests-hurricane-analysis-analysis"]], "compass.ocean.tests.hurricane.analysis.Analysis.read_pointstats": [[421, "compass-ocean-tests-hurricane-analysis-analysis-read-pointstats"]], "compass.ocean.tests.hurricane.analysis.Analysis.read_station_data": [[422, "compass-ocean-tests-hurricane-analysis-analysis-read-station-data"]], "compass.ocean.tests.hurricane.analysis.Analysis.read_station_file": [[423, "compass-ocean-tests-hurricane-analysis-analysis-read-station-file"]], "compass.ocean.tests.hurricane.analysis.Analysis.run": [[424, "compass-ocean-tests-hurricane-analysis-analysis-run"]], "compass.ocean.tests.hurricane.analysis.Analysis.setup": [[425, "compass-ocean-tests-hurricane-analysis-analysis-setup"]], "compass.ocean.tests.hurricane.configure": [[426, "module-compass.ocean.tests.hurricane.configure"]], "compass.ocean.tests.hurricane.forward.Forward": [[427, "compass-ocean-tests-hurricane-forward-forward"]], "compass.ocean.tests.hurricane.forward.Forward.configure": [[428, "compass-ocean-tests-hurricane-forward-forward-configure"]], "compass.ocean.tests.hurricane.forward.Forward.run": [[429, "compass-ocean-tests-hurricane-forward-forward-run"]], "compass.ocean.tests.hurricane.forward.forward.ForwardStep": [[430, "compass-ocean-tests-hurricane-forward-forward-forwardstep"]], "compass.ocean.tests.hurricane.forward.forward.ForwardStep.run": [[431, "compass-ocean-tests-hurricane-forward-forward-forwardstep-run"]], "compass.ocean.tests.hurricane.forward.forward.ForwardStep.setup": [[432, "compass-ocean-tests-hurricane-forward-forward-forwardstep-setup"]], "compass.ocean.tests.hurricane.init.Init": [[433, "compass-ocean-tests-hurricane-init-init"]], "compass.ocean.tests.hurricane.init.Init.configure": [[434, "compass-ocean-tests-hurricane-init-init-configure"]], "compass.ocean.tests.hurricane.init.Init.run": [[435, "compass-ocean-tests-hurricane-init-init-run"]], "compass.ocean.tests.hurricane.init.create_pointstats_file.CreatePointstatsFile": [[436, "compass-ocean-tests-hurricane-init-create-pointstats-file-createpointstatsfile"]], "compass.ocean.tests.hurricane.init.create_pointstats_file.CreatePointstatsFile.create_pointstats_file": [[437, "compass-ocean-tests-hurricane-init-create-pointstats-file-createpointstatsfile-create-pointstats-file"]], "compass.ocean.tests.hurricane.init.create_pointstats_file.CreatePointstatsFile.run": [[438, "compass-ocean-tests-hurricane-init-create-pointstats-file-createpointstatsfile-run"]], "compass.ocean.tests.hurricane.init.initial_state.InitialState": [[439, "compass-ocean-tests-hurricane-init-initial-state-initialstate"]], "compass.ocean.tests.hurricane.init.initial_state.InitialState.run": [[440, "compass-ocean-tests-hurricane-init-initial-state-initialstate-run"]], "compass.ocean.tests.hurricane.init.initial_state.InitialState.setup": [[441, "compass-ocean-tests-hurricane-init-initial-state-initialstate-setup"]], "compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing": [[442, "compass-ocean-tests-hurricane-init-interpolate-atm-forcing-interpolateatmforcing"]], "compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing.interpolate_data_to_grid": [[443, "compass-ocean-tests-hurricane-init-interpolate-atm-forcing-interpolateatmforcing-interpolate-data-to-grid"]], "compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing.plot_interp_data": [[444, "compass-ocean-tests-hurricane-init-interpolate-atm-forcing-interpolateatmforcing-plot-interp-data"]], "compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing.run": [[445, "compass-ocean-tests-hurricane-init-interpolate-atm-forcing-interpolateatmforcing-run"]], "compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing.write_to_file": [[446, "compass-ocean-tests-hurricane-init-interpolate-atm-forcing-interpolateatmforcing-write-to-file"]], "compass.ocean.tests.hurricane.mesh.Mesh": [[447, "compass-ocean-tests-hurricane-mesh-mesh"]], "compass.ocean.tests.hurricane.mesh.Mesh.configure": [[448, "compass-ocean-tests-hurricane-mesh-mesh-configure"]], "compass.ocean.tests.hurricane.mesh.Mesh.run": [[449, "compass-ocean-tests-hurricane-mesh-mesh-run"]], "compass.ocean.tests.hurricane.mesh.dequ120at30cr10rr2.DEQU120at30cr10rr2BaseMesh": [[450, "compass-ocean-tests-hurricane-mesh-dequ120at30cr10rr2-dequ120at30cr10rr2basemesh"]], "compass.ocean.tests.hurricane.mesh.dequ120at30cr10rr2.DEQU120at30cr10rr2BaseMesh.build_cell_width_lat_lon": [[451, "compass-ocean-tests-hurricane-mesh-dequ120at30cr10rr2-dequ120at30cr10rr2basemesh-build-cell-width-lat-lon"]], "compass.ocean.tests.ice_shelf_2d.IceShelf2d": [[452, "compass-ocean-tests-ice-shelf-2d-iceshelf2d"]], "compass.ocean.tests.ice_shelf_2d.configure": [[453, "compass-ocean-tests-ice-shelf-2d-configure"]], "compass.ocean.tests.ice_shelf_2d.default.Default": [[454, "compass-ocean-tests-ice-shelf-2d-default-default"]], "compass.ocean.tests.ice_shelf_2d.default.Default.configure": [[455, "compass-ocean-tests-ice-shelf-2d-default-default-configure"]], "compass.ocean.tests.ice_shelf_2d.default.Default.run": [[456, "compass-ocean-tests-ice-shelf-2d-default-default-run"]], "compass.ocean.tests.ice_shelf_2d.forward.Forward": [[457, "compass-ocean-tests-ice-shelf-2d-forward-forward"]], "compass.ocean.tests.ice_shelf_2d.forward.Forward.run": [[458, "compass-ocean-tests-ice-shelf-2d-forward-forward-run"]], "compass.ocean.tests.ice_shelf_2d.forward.Forward.setup": [[459, "compass-ocean-tests-ice-shelf-2d-forward-forward-setup"]], "compass.ocean.tests.ice_shelf_2d.initial_state.InitialState": [[460, "compass-ocean-tests-ice-shelf-2d-initial-state-initialstate"]], "compass.ocean.tests.ice_shelf_2d.initial_state.InitialState.run": [[461, "compass-ocean-tests-ice-shelf-2d-initial-state-initialstate-run"]], "compass.ocean.tests.ice_shelf_2d.restart_test.RestartTest": [[462, "compass-ocean-tests-ice-shelf-2d-restart-test-restarttest"]], "compass.ocean.tests.ice_shelf_2d.restart_test.RestartTest.configure": [[463, "compass-ocean-tests-ice-shelf-2d-restart-test-restarttest-configure"]], "compass.ocean.tests.ice_shelf_2d.restart_test.RestartTest.run": [[464, "compass-ocean-tests-ice-shelf-2d-restart-test-restarttest-run"]], "compass.ocean.tests.ice_shelf_2d.ssh_adjustment.SshAdjustment": [[465, "compass-ocean-tests-ice-shelf-2d-ssh-adjustment-sshadjustment"]], "compass.ocean.tests.ice_shelf_2d.ssh_adjustment.SshAdjustment.run": [[466, "compass-ocean-tests-ice-shelf-2d-ssh-adjustment-sshadjustment-run"]], "compass.ocean.tests.ice_shelf_2d.ssh_adjustment.SshAdjustment.setup": [[467, "compass-ocean-tests-ice-shelf-2d-ssh-adjustment-sshadjustment-setup"]], "compass.ocean.tests.ice_shelf_2d.viz.Viz": [[468, "compass-ocean-tests-ice-shelf-2d-viz-viz"]], "compass.ocean.tests.ice_shelf_2d.viz.Viz.run": [[469, "compass-ocean-tests-ice-shelf-2d-viz-viz-run"]], "compass.ocean.tests.internal_wave.InternalWave": [[470, "compass-ocean-tests-internal-wave-internalwave"]], "compass.ocean.tests.internal_wave.default.Default": [[471, "compass-ocean-tests-internal-wave-default-default"]], "compass.ocean.tests.internal_wave.default.Default.validate": [[472, "compass-ocean-tests-internal-wave-default-default-validate"]], "compass.ocean.tests.internal_wave.forward.Forward": [[473, "compass-ocean-tests-internal-wave-forward-forward"]], "compass.ocean.tests.internal_wave.forward.Forward.run": [[474, "compass-ocean-tests-internal-wave-forward-forward-run"]], "compass.ocean.tests.internal_wave.initial_state.InitialState": [[475, "compass-ocean-tests-internal-wave-initial-state-initialstate"]], "compass.ocean.tests.internal_wave.initial_state.InitialState.run": [[476, "compass-ocean-tests-internal-wave-initial-state-initialstate-run"]], "compass.ocean.tests.internal_wave.rpe_test.RpeTest": [[477, "compass-ocean-tests-internal-wave-rpe-test-rpetest"]], "compass.ocean.tests.internal_wave.rpe_test.analysis.Analysis": [[478, "compass-ocean-tests-internal-wave-rpe-test-analysis-analysis"]], "compass.ocean.tests.internal_wave.rpe_test.analysis.Analysis.run": [[479, "compass-ocean-tests-internal-wave-rpe-test-analysis-analysis-run"]], "compass.ocean.tests.internal_wave.ten_day_test.TenDayTest": [[480, "compass-ocean-tests-internal-wave-ten-day-test-tendaytest"]], "compass.ocean.tests.internal_wave.ten_day_test.TenDayTest.validate": [[481, "compass-ocean-tests-internal-wave-ten-day-test-tendaytest-validate"]], "compass.ocean.tests.internal_wave.viz.Viz": [[482, "compass-ocean-tests-internal-wave-viz-viz"]], "compass.ocean.tests.internal_wave.viz.Viz.run": [[483, "compass-ocean-tests-internal-wave-viz-viz-run"]], "compass.ocean.tests.isomip_plus.IsomipPlus": [[484, "compass-ocean-tests-isomip-plus-isomipplus"]], "compass.ocean.tests.isomip_plus.evap.update_evaporation_flux": [[485, "compass-ocean-tests-isomip-plus-evap-update-evaporation-flux"]], "compass.ocean.tests.isomip_plus.forward.Forward": [[486, "compass-ocean-tests-isomip-plus-forward-forward"]], "compass.ocean.tests.isomip_plus.forward.Forward.run": [[487, "compass-ocean-tests-isomip-plus-forward-forward-run"]], "compass.ocean.tests.isomip_plus.forward.Forward.setup": [[488, "compass-ocean-tests-isomip-plus-forward-forward-setup"]], "compass.ocean.tests.isomip_plus.geom.interpolate_ocean_mask": [[489, "compass-ocean-tests-isomip-plus-geom-interpolate-ocean-mask"]], "compass.ocean.tests.isomip_plus.geom.process_input_geometry": [[490, "compass-ocean-tests-isomip-plus-geom-process-input-geometry"]], "compass.ocean.tests.isomip_plus.initial_state.InitialState": [[491, "compass-ocean-tests-isomip-plus-initial-state-initialstate"]], "compass.ocean.tests.isomip_plus.initial_state.InitialState.run": [[492, "compass-ocean-tests-isomip-plus-initial-state-initialstate-run"]], "compass.ocean.tests.isomip_plus.misomip.Misomip": [[493, "compass-ocean-tests-isomip-plus-misomip-misomip"]], "compass.ocean.tests.isomip_plus.misomip.Misomip.run": [[494, "compass-ocean-tests-isomip-plus-misomip-misomip-run"]], "compass.ocean.tests.isomip_plus.ocean_test.OceanTest": [[495, "compass-ocean-tests-isomip-plus-ocean-test-oceantest"]], "compass.ocean.tests.isomip_plus.ocean_test.OceanTest.configure": [[496, "compass-ocean-tests-isomip-plus-ocean-test-oceantest-configure"]], "compass.ocean.tests.isomip_plus.ocean_test.OceanTest.run": [[497, "compass-ocean-tests-isomip-plus-ocean-test-oceantest-run"]], "compass.ocean.tests.isomip_plus.ssh_adjustment.SshAdjustment": [[498, "compass-ocean-tests-isomip-plus-ssh-adjustment-sshadjustment"]], "compass.ocean.tests.isomip_plus.ssh_adjustment.SshAdjustment.run": [[499, "compass-ocean-tests-isomip-plus-ssh-adjustment-sshadjustment-run"]], "compass.ocean.tests.isomip_plus.ssh_adjustment.SshAdjustment.setup": [[500, "compass-ocean-tests-isomip-plus-ssh-adjustment-sshadjustment-setup"]], "compass.ocean.tests.isomip_plus.streamfunction.Streamfunction": [[501, "compass-ocean-tests-isomip-plus-streamfunction-streamfunction"]], "compass.ocean.tests.isomip_plus.streamfunction.Streamfunction.run": [[502, "compass-ocean-tests-isomip-plus-streamfunction-streamfunction-run"]], "compass.ocean.tests.isomip_plus.viz.Viz": [[503, "compass-ocean-tests-isomip-plus-viz-viz"]], "compass.ocean.tests.isomip_plus.viz.Viz.run": [[504, "compass-ocean-tests-isomip-plus-viz-viz-run"]], "compass.ocean.tests.isomip_plus.viz.file_complete": [[505, "compass-ocean-tests-isomip-plus-viz-file-complete"]], "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter": [[506, "compass-ocean-tests-isomip-plus-viz-plot-movieplotter"]], "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.images_to_movies": [[507, "compass-ocean-tests-isomip-plus-viz-plot-movieplotter-images-to-movies"]], "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_3d_field_top_bot_section": [[508, "compass-ocean-tests-isomip-plus-viz-plot-movieplotter-plot-3d-field-top-bot-section"]], "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_barotropic_streamfunction": [[509, "compass-ocean-tests-isomip-plus-viz-plot-movieplotter-plot-barotropic-streamfunction"]], "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_horiz_series": [[510, "compass-ocean-tests-isomip-plus-viz-plot-movieplotter-plot-horiz-series"]], "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_ice_shelf_boundary_variables": [[511, "compass-ocean-tests-isomip-plus-viz-plot-movieplotter-plot-ice-shelf-boundary-variables"]], "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_layer_interfaces": [[512, "compass-ocean-tests-isomip-plus-viz-plot-movieplotter-plot-layer-interfaces"]], "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_melt_rates": [[513, "compass-ocean-tests-isomip-plus-viz-plot-movieplotter-plot-melt-rates"]], "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_overturning_streamfunction": [[514, "compass-ocean-tests-isomip-plus-viz-plot-movieplotter-plot-overturning-streamfunction"]], "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_potential_density": [[515, "compass-ocean-tests-isomip-plus-viz-plot-movieplotter-plot-potential-density"]], "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_salinity": [[516, "compass-ocean-tests-isomip-plus-viz-plot-movieplotter-plot-salinity"]], "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_temperature": [[517, "compass-ocean-tests-isomip-plus-viz-plot-movieplotter-plot-temperature"]], "compass.ocean.tests.isomip_plus.viz.plot.TimeSeriesPlotter": [[518, "compass-ocean-tests-isomip-plus-viz-plot-timeseriesplotter"]], "compass.ocean.tests.isomip_plus.viz.plot.TimeSeriesPlotter.plot_melt_time_series": [[519, "compass-ocean-tests-isomip-plus-viz-plot-timeseriesplotter-plot-melt-time-series"]], "compass.ocean.tests.isomip_plus.viz.plot.TimeSeriesPlotter.plot_time_series": [[520, "compass-ocean-tests-isomip-plus-viz-plot-timeseriesplotter-plot-time-series"]], "compass.ocean.tests.merry_go_round.MerryGoRound": [[521, "compass-ocean-tests-merry-go-round-merrygoround"]], "compass.ocean.tests.merry_go_round.convergence_test.analysis.Analysis": [[522, "compass-ocean-tests-merry-go-round-convergence-test-analysis-analysis"]], "compass.ocean.tests.merry_go_round.convergence_test.analysis.Analysis.run": [[523, "compass-ocean-tests-merry-go-round-convergence-test-analysis-analysis-run"]], "compass.ocean.tests.merry_go_round.default.Default": [[524, "compass-ocean-tests-merry-go-round-default-default"]], "compass.ocean.tests.merry_go_round.default.Default.validate": [[525, "compass-ocean-tests-merry-go-round-default-default-validate"]], "compass.ocean.tests.merry_go_round.forward.Forward": [[526, "compass-ocean-tests-merry-go-round-forward-forward"]], "compass.ocean.tests.merry_go_round.forward.Forward.run": [[527, "compass-ocean-tests-merry-go-round-forward-forward-run"]], "compass.ocean.tests.merry_go_round.initial_state.InitialState": [[528, "compass-ocean-tests-merry-go-round-initial-state-initialstate"]], "compass.ocean.tests.merry_go_round.initial_state.InitialState.run": [[529, "compass-ocean-tests-merry-go-round-initial-state-initialstate-run"]], "compass.ocean.tests.merry_go_round.viz.Viz": [[530, "compass-ocean-tests-merry-go-round-viz-viz"]], "compass.ocean.tests.merry_go_round.viz.Viz.run": [[531, "compass-ocean-tests-merry-go-round-viz-viz-run"]], "compass.ocean.tests.planar_convergence.PlanarConvergence": [[532, "compass-ocean-tests-planar-convergence-planarconvergence"]], "compass.ocean.tests.planar_convergence.conv_init.ConvInit": [[533, "compass-ocean-tests-planar-convergence-conv-init-convinit"]], "compass.ocean.tests.planar_convergence.conv_init.ConvInit.run": [[534, "compass-ocean-tests-planar-convergence-conv-init-convinit-run"]], "compass.ocean.tests.planar_convergence.conv_test_case.ConvTestCase": [[535, "compass-ocean-tests-planar-convergence-conv-test-case-convtestcase"]], "compass.ocean.tests.planar_convergence.conv_test_case.ConvTestCase.configure": [[536, "compass-ocean-tests-planar-convergence-conv-test-case-convtestcase-configure"]], "compass.ocean.tests.planar_convergence.conv_test_case.ConvTestCase.run": [[537, "compass-ocean-tests-planar-convergence-conv-test-case-convtestcase-run"]], "compass.ocean.tests.planar_convergence.conv_test_case.ConvTestCase.update_cores": [[538, "compass-ocean-tests-planar-convergence-conv-test-case-convtestcase-update-cores"]], "compass.ocean.tests.planar_convergence.forward.Forward": [[539, "compass-ocean-tests-planar-convergence-forward-forward"]], "compass.ocean.tests.planar_convergence.forward.Forward.get_dt_duration": [[540, "compass-ocean-tests-planar-convergence-forward-forward-get-dt-duration"]], "compass.ocean.tests.planar_convergence.forward.Forward.run": [[541, "compass-ocean-tests-planar-convergence-forward-forward-run"]], "compass.ocean.tests.planar_convergence.forward.Forward.setup": [[542, "compass-ocean-tests-planar-convergence-forward-forward-setup"]], "compass.ocean.tests.planar_convergence.horizontal_advection.HorizontalAdvection": [[543, "compass-ocean-tests-planar-convergence-horizontal-advection-horizontaladvection"]], "compass.ocean.tests.planar_convergence.horizontal_advection.HorizontalAdvection.configure": [[544, "compass-ocean-tests-planar-convergence-horizontal-advection-horizontaladvection-configure"]], "compass.ocean.tests.planar_convergence.horizontal_advection.HorizontalAdvection.run": [[545, "compass-ocean-tests-planar-convergence-horizontal-advection-horizontaladvection-run"]], "compass.ocean.tests.planar_convergence.horizontal_advection.analysis.Analysis": [[546, "compass-ocean-tests-planar-convergence-horizontal-advection-analysis-analysis"]], "compass.ocean.tests.planar_convergence.horizontal_advection.analysis.Analysis.rmse": [[547, "compass-ocean-tests-planar-convergence-horizontal-advection-analysis-analysis-rmse"]], "compass.ocean.tests.planar_convergence.horizontal_advection.analysis.Analysis.run": [[548, "compass-ocean-tests-planar-convergence-horizontal-advection-analysis-analysis-run"]], "compass.ocean.tests.planar_convergence.horizontal_advection.init.Init": [[549, "compass-ocean-tests-planar-convergence-horizontal-advection-init-init"]], "compass.ocean.tests.planar_convergence.horizontal_advection.init.Init.run": [[550, "compass-ocean-tests-planar-convergence-horizontal-advection-init-init-run"]], "compass.ocean.tests.soma.Soma": [[551, "compass-ocean-tests-soma-soma"]], "compass.ocean.tests.soma.analysis.Analysis": [[552, "compass-ocean-tests-soma-analysis-analysis"]], "compass.ocean.tests.soma.analysis.Analysis.run": [[553, "compass-ocean-tests-soma-analysis-analysis-run"]], "compass.ocean.tests.soma.forward.Forward": [[554, "compass-ocean-tests-soma-forward-forward"]], "compass.ocean.tests.soma.forward.Forward.run": [[555, "compass-ocean-tests-soma-forward-forward-run"]], "compass.ocean.tests.soma.initial_state.InitialState": [[556, "compass-ocean-tests-soma-initial-state-initialstate"]], "compass.ocean.tests.soma.initial_state.InitialState.run": [[557, "compass-ocean-tests-soma-initial-state-initialstate-run"]], "compass.ocean.tests.soma.soma_test_case.SomaTestCase": [[558, "compass-ocean-tests-soma-soma-test-case-somatestcase"]], "compass.ocean.tests.soma.soma_test_case.SomaTestCase.validate": [[559, "compass-ocean-tests-soma-soma-test-case-somatestcase-validate"]], "compass.ocean.tests.sphere_transport.SphereTransport": [[560, "compass-ocean-tests-sphere-transport-spheretransport"]], "compass.ocean.tests.sphere_transport.correlated_tracers_2d.CorrelatedTracers2D": [[561, "compass-ocean-tests-sphere-transport-correlated-tracers-2d-correlatedtracers2d"]], "compass.ocean.tests.sphere_transport.correlated_tracers_2d.CorrelatedTracers2D.configure": [[562, "compass-ocean-tests-sphere-transport-correlated-tracers-2d-correlatedtracers2d-configure"]], "compass.ocean.tests.sphere_transport.correlated_tracers_2d.CorrelatedTracers2D.run": [[563, "compass-ocean-tests-sphere-transport-correlated-tracers-2d-correlatedtracers2d-run"]], "compass.ocean.tests.sphere_transport.correlated_tracers_2d.analysis.Analysis": [[564, "compass-ocean-tests-sphere-transport-correlated-tracers-2d-analysis-analysis"]], "compass.ocean.tests.sphere_transport.correlated_tracers_2d.analysis.Analysis.run": [[565, "compass-ocean-tests-sphere-transport-correlated-tracers-2d-analysis-analysis-run"]], "compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.Forward": [[566, "compass-ocean-tests-sphere-transport-correlated-tracers-2d-forward-forward"]], "compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.Forward.get_timestep_str": [[567, "compass-ocean-tests-sphere-transport-correlated-tracers-2d-forward-forward-get-timestep-str"]], "compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.Forward.run": [[568, "compass-ocean-tests-sphere-transport-correlated-tracers-2d-forward-forward-run"]], "compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.Forward.setup": [[569, "compass-ocean-tests-sphere-transport-correlated-tracers-2d-forward-forward-setup"]], "compass.ocean.tests.sphere_transport.correlated_tracers_2d.init.Init": [[570, "compass-ocean-tests-sphere-transport-correlated-tracers-2d-init-init"]], "compass.ocean.tests.sphere_transport.correlated_tracers_2d.init.Init.run": [[571, "compass-ocean-tests-sphere-transport-correlated-tracers-2d-init-init-run"]], "compass.ocean.tests.sphere_transport.correlated_tracers_2d.mesh.Mesh": [[572, "compass-ocean-tests-sphere-transport-correlated-tracers-2d-mesh-mesh"]], "compass.ocean.tests.sphere_transport.correlated_tracers_2d.mesh.Mesh.build_cell_width_lat_lon": [[573, "compass-ocean-tests-sphere-transport-correlated-tracers-2d-mesh-mesh-build-cell-width-lat-lon"]], "compass.ocean.tests.sphere_transport.correlated_tracers_2d.mesh.Mesh.run": [[574, "compass-ocean-tests-sphere-transport-correlated-tracers-2d-mesh-mesh-run"]], "compass.ocean.tests.sphere_transport.divergent_2d.Divergent2D": [[575, "compass-ocean-tests-sphere-transport-divergent-2d-divergent2d"]], "compass.ocean.tests.sphere_transport.divergent_2d.Divergent2D.configure": [[576, "compass-ocean-tests-sphere-transport-divergent-2d-divergent2d-configure"]], "compass.ocean.tests.sphere_transport.divergent_2d.Divergent2D.run": [[577, "compass-ocean-tests-sphere-transport-divergent-2d-divergent2d-run"]], "compass.ocean.tests.sphere_transport.divergent_2d.analysis.Analysis": [[578, "compass-ocean-tests-sphere-transport-divergent-2d-analysis-analysis"]], "compass.ocean.tests.sphere_transport.divergent_2d.analysis.Analysis.run": [[579, "compass-ocean-tests-sphere-transport-divergent-2d-analysis-analysis-run"]], "compass.ocean.tests.sphere_transport.divergent_2d.forward.Forward": [[580, "compass-ocean-tests-sphere-transport-divergent-2d-forward-forward"]], "compass.ocean.tests.sphere_transport.divergent_2d.forward.Forward.get_timestep_str": [[581, "compass-ocean-tests-sphere-transport-divergent-2d-forward-forward-get-timestep-str"]], "compass.ocean.tests.sphere_transport.divergent_2d.forward.Forward.run": [[582, "compass-ocean-tests-sphere-transport-divergent-2d-forward-forward-run"]], "compass.ocean.tests.sphere_transport.divergent_2d.forward.Forward.setup": [[583, "compass-ocean-tests-sphere-transport-divergent-2d-forward-forward-setup"]], "compass.ocean.tests.sphere_transport.divergent_2d.init.Init": [[584, "compass-ocean-tests-sphere-transport-divergent-2d-init-init"]], "compass.ocean.tests.sphere_transport.divergent_2d.init.Init.run": [[585, "compass-ocean-tests-sphere-transport-divergent-2d-init-init-run"]], "compass.ocean.tests.sphere_transport.divergent_2d.mesh.Mesh": [[586, "compass-ocean-tests-sphere-transport-divergent-2d-mesh-mesh"]], "compass.ocean.tests.sphere_transport.divergent_2d.mesh.Mesh.build_cell_width_lat_lon": [[587, "compass-ocean-tests-sphere-transport-divergent-2d-mesh-mesh-build-cell-width-lat-lon"]], "compass.ocean.tests.sphere_transport.divergent_2d.mesh.Mesh.run": [[588, "compass-ocean-tests-sphere-transport-divergent-2d-mesh-mesh-run"]], "compass.ocean.tests.sphere_transport.nondivergent_2d.Nondivergent2D": [[589, "compass-ocean-tests-sphere-transport-nondivergent-2d-nondivergent2d"]], "compass.ocean.tests.sphere_transport.nondivergent_2d.Nondivergent2D.configure": [[590, "compass-ocean-tests-sphere-transport-nondivergent-2d-nondivergent2d-configure"]], "compass.ocean.tests.sphere_transport.nondivergent_2d.Nondivergent2D.run": [[591, "compass-ocean-tests-sphere-transport-nondivergent-2d-nondivergent2d-run"]], "compass.ocean.tests.sphere_transport.nondivergent_2d.analysis.Analysis": [[592, "compass-ocean-tests-sphere-transport-nondivergent-2d-analysis-analysis"]], "compass.ocean.tests.sphere_transport.nondivergent_2d.analysis.Analysis.run": [[593, "compass-ocean-tests-sphere-transport-nondivergent-2d-analysis-analysis-run"]], "compass.ocean.tests.sphere_transport.nondivergent_2d.forward.Forward": [[594, "compass-ocean-tests-sphere-transport-nondivergent-2d-forward-forward"]], "compass.ocean.tests.sphere_transport.nondivergent_2d.forward.Forward.get_timestep_str": [[595, "compass-ocean-tests-sphere-transport-nondivergent-2d-forward-forward-get-timestep-str"]], "compass.ocean.tests.sphere_transport.nondivergent_2d.forward.Forward.run": [[596, "compass-ocean-tests-sphere-transport-nondivergent-2d-forward-forward-run"]], "compass.ocean.tests.sphere_transport.nondivergent_2d.forward.Forward.setup": [[597, "compass-ocean-tests-sphere-transport-nondivergent-2d-forward-forward-setup"]], "compass.ocean.tests.sphere_transport.nondivergent_2d.init.Init": [[598, "compass-ocean-tests-sphere-transport-nondivergent-2d-init-init"]], "compass.ocean.tests.sphere_transport.nondivergent_2d.init.Init.run": [[599, "compass-ocean-tests-sphere-transport-nondivergent-2d-init-init-run"]], "compass.ocean.tests.sphere_transport.nondivergent_2d.mesh.Mesh": [[600, "compass-ocean-tests-sphere-transport-nondivergent-2d-mesh-mesh"]], "compass.ocean.tests.sphere_transport.nondivergent_2d.mesh.Mesh.build_cell_width_lat_lon": [[601, "compass-ocean-tests-sphere-transport-nondivergent-2d-mesh-mesh-build-cell-width-lat-lon"]], "compass.ocean.tests.sphere_transport.nondivergent_2d.mesh.Mesh.run": [[602, "compass-ocean-tests-sphere-transport-nondivergent-2d-mesh-mesh-run"]], "compass.ocean.tests.sphere_transport.process_output.compute_convergence_rates": [[603, "compass-ocean-tests-sphere-transport-process-output-compute-convergence-rates"]], "compass.ocean.tests.sphere_transport.process_output.compute_error_from_output_ncfile": [[604, "compass-ocean-tests-sphere-transport-process-output-compute-error-from-output-ncfile"]], "compass.ocean.tests.sphere_transport.process_output.make_convergence_arrays": [[605, "compass-ocean-tests-sphere-transport-process-output-make-convergence-arrays"]], "compass.ocean.tests.sphere_transport.process_output.plot_convergence": [[606, "compass-ocean-tests-sphere-transport-process-output-plot-convergence"]], "compass.ocean.tests.sphere_transport.process_output.plot_filament": [[607, "compass-ocean-tests-sphere-transport-process-output-plot-filament"]], "compass.ocean.tests.sphere_transport.process_output.plot_over_and_undershoot_errors": [[608, "compass-ocean-tests-sphere-transport-process-output-plot-over-and-undershoot-errors"]], "compass.ocean.tests.sphere_transport.process_output.plot_sol": [[609, "compass-ocean-tests-sphere-transport-process-output-plot-sol"]], "compass.ocean.tests.sphere_transport.process_output.print_data_as_csv": [[610, "compass-ocean-tests-sphere-transport-process-output-print-data-as-csv"]], "compass.ocean.tests.sphere_transport.process_output.print_error_conv_table": [[611, "compass-ocean-tests-sphere-transport-process-output-print-error-conv-table"]], "compass.ocean.tests.sphere_transport.process_output.read_ncl_rgb_file": [[612, "compass-ocean-tests-sphere-transport-process-output-read-ncl-rgb-file"]], "compass.ocean.tests.sphere_transport.rotation_2d.Rotation2D": [[613, "compass-ocean-tests-sphere-transport-rotation-2d-rotation2d"]], "compass.ocean.tests.sphere_transport.rotation_2d.Rotation2D.configure": [[614, "compass-ocean-tests-sphere-transport-rotation-2d-rotation2d-configure"]], "compass.ocean.tests.sphere_transport.rotation_2d.Rotation2D.run": [[615, "compass-ocean-tests-sphere-transport-rotation-2d-rotation2d-run"]], "compass.ocean.tests.sphere_transport.rotation_2d.analysis.Analysis": [[616, "compass-ocean-tests-sphere-transport-rotation-2d-analysis-analysis"]], "compass.ocean.tests.sphere_transport.rotation_2d.analysis.Analysis.run": [[617, "compass-ocean-tests-sphere-transport-rotation-2d-analysis-analysis-run"]], "compass.ocean.tests.sphere_transport.rotation_2d.forward.Forward": [[618, "compass-ocean-tests-sphere-transport-rotation-2d-forward-forward"]], "compass.ocean.tests.sphere_transport.rotation_2d.forward.Forward.get_timestep_str": [[619, "compass-ocean-tests-sphere-transport-rotation-2d-forward-forward-get-timestep-str"]], "compass.ocean.tests.sphere_transport.rotation_2d.forward.Forward.run": [[620, "compass-ocean-tests-sphere-transport-rotation-2d-forward-forward-run"]], "compass.ocean.tests.sphere_transport.rotation_2d.forward.Forward.setup": [[621, "compass-ocean-tests-sphere-transport-rotation-2d-forward-forward-setup"]], "compass.ocean.tests.sphere_transport.rotation_2d.init.Init": [[622, "compass-ocean-tests-sphere-transport-rotation-2d-init-init"]], "compass.ocean.tests.sphere_transport.rotation_2d.init.Init.run": [[623, "compass-ocean-tests-sphere-transport-rotation-2d-init-init-run"]], "compass.ocean.tests.sphere_transport.rotation_2d.mesh.Mesh": [[624, "compass-ocean-tests-sphere-transport-rotation-2d-mesh-mesh"]], "compass.ocean.tests.sphere_transport.rotation_2d.mesh.Mesh.build_cell_width_lat_lon": [[625, "compass-ocean-tests-sphere-transport-rotation-2d-mesh-mesh-build-cell-width-lat-lon"]], "compass.ocean.tests.sphere_transport.rotation_2d.mesh.Mesh.run": [[626, "compass-ocean-tests-sphere-transport-rotation-2d-mesh-mesh-run"]], "compass.ocean.tests.ziso.Ziso": [[627, "compass-ocean-tests-ziso-ziso"]], "compass.ocean.tests.ziso.ZisoTestCase": [[628, "compass-ocean-tests-ziso-zisotestcase"]], "compass.ocean.tests.ziso.ZisoTestCase.configure": [[629, "compass-ocean-tests-ziso-zisotestcase-configure"]], "compass.ocean.tests.ziso.ZisoTestCase.run": [[630, "compass-ocean-tests-ziso-zisotestcase-run"]], "compass.ocean.tests.ziso.configure": [[631, "compass-ocean-tests-ziso-configure"]], "compass.ocean.tests.ziso.forward.Forward": [[632, "compass-ocean-tests-ziso-forward-forward"]], "compass.ocean.tests.ziso.forward.Forward.run": [[633, "compass-ocean-tests-ziso-forward-forward-run"]], "compass.ocean.tests.ziso.forward.Forward.setup": [[634, "compass-ocean-tests-ziso-forward-forward-setup"]], "compass.ocean.tests.ziso.initial_state.InitialState": [[635, "compass-ocean-tests-ziso-initial-state-initialstate"]], "compass.ocean.tests.ziso.initial_state.InitialState.run": [[636, "compass-ocean-tests-ziso-initial-state-initialstate-run"]], "compass.ocean.tests.ziso.with_frazil.WithFrazil": [[637, "compass-ocean-tests-ziso-with-frazil-withfrazil"]], "compass.ocean.tests.ziso.with_frazil.WithFrazil.configure": [[638, "compass-ocean-tests-ziso-with-frazil-withfrazil-configure"]], "compass.ocean.tests.ziso.with_frazil.WithFrazil.run": [[639, "compass-ocean-tests-ziso-with-frazil-withfrazil-run"]], "compass.ocean.vertical.grid_1d.generate_1d_grid": [[640, "compass-ocean-vertical-grid-1d-generate-1d-grid"]], "compass.ocean.vertical.grid_1d.write_1d_grid": [[641, "compass-ocean-vertical-grid-1d-write-1d-grid"]], "compass.ocean.vertical.init_vertical_coord": [[642, "compass-ocean-vertical-init-vertical-coord"]], "compass.ocean.vertical.partial_cells.alter_bottom_depth": [[643, "compass-ocean-vertical-partial-cells-alter-bottom-depth"]], "compass.ocean.vertical.partial_cells.alter_ssh": [[644, "compass-ocean-vertical-partial-cells-alter-ssh"]], "compass.ocean.vertical.zlevel.compute_min_max_level_cell": [[645, "compass-ocean-vertical-zlevel-compute-min-max-level-cell"]], "compass.ocean.vertical.zlevel.compute_z_level_layer_thickness": [[646, "compass-ocean-vertical-zlevel-compute-z-level-layer-thickness"]], "compass.ocean.vertical.zlevel.compute_z_level_resting_thickness": [[647, "compass-ocean-vertical-zlevel-compute-z-level-resting-thickness"]], "compass.ocean.vertical.zlevel.init_z_level_vertical_coord": [[648, "compass-ocean-vertical-zlevel-init-z-level-vertical-coord"]], "compass.ocean.vertical.zstar.init_z_star_vertical_coord": [[649, "compass-ocean-vertical-zstar-init-z-star-vertical-coord"]], "Ocean core": [[650, "ocean-core"], [704, "ocean-core"]], "initial_state": [[651, "initial-state"], [652, "initial-state"], [653, "initial-state"], [657, "initial-state"], [658, "initial-state"], [660, "initial-state"], [661, "initial-state"], [662, "initial-state"], [664, "initial-state"], [667, "initial-state"]], "forward": [[651, "forward"], [652, "forward"], [653, "forward"], [654, "forward"], [656, "forward"], [657, "forward"], [658, "forward"], [660, "forward"], [661, "forward"], [662, "forward"], [663, "forward"], [664, "forward"], [665, "forward"], [665, "id3"], [665, "id7"], [665, "id11"], [667, "forward"]], "decomp_test": [[651, "decomp-test"], [706, "decomp-test"]], "threads_test": [[651, "threads-test"]], "rpe_test": [[651, "rpe-test"], [660, "rpe-test"], [706, "rpe-test"], [715, "rpe-test"]], "viz": [[652, "viz"], [653, "viz"], [658, "viz"], [661, "viz"]], "mesh types": [[654, "mesh-types"]], "init": [[654, "init"], [656, "init"], [663, "init"], [665, "init"], [665, "id2"], [665, "id6"], [665, "id10"], [666, "init"]], "analysis": [[654, "analysis"], [656, "analysis"], [657, "analysis"], [663, "analysis"], [664, "analysis"], [665, "analysis"], [665, "id4"], [665, "id8"], [665, "id12"], [666, "analysis"]], "configure": [[655, "configure"]], "metadata": [[655, "metadata"]], "forward test case": [[655, "forward-test-case"]], "forward step": [[655, "forward-step"], [712, "forward-step"]], "Test cases": [[655, "test-cases"], [668, "test-cases"], [710, "test-cases"]], "mesh test case": [[655, "mesh-test-case"], [710, "mesh-test-case"], [712, "mesh-test-case"]], "meshes": [[655, "meshes"]], "QU240 and QUwISC240": [[655, "qu240-and-quwisc240"], [655, "id1"]], "Icos240 and IcoswISC240": [[655, "icos240-and-icoswisc240"]], "EC30to60 and ECwISC30to60": [[655, "ec30to60-and-ecwisc30to60"], [655, "id2"]], "SOwISC12to60": [[655, "sowisc12to60"], [655, "id3"], [710, "sowisc12to60"]], "WC14": [[655, "wc14"], [655, "id4"], [710, "wc14"]], "init test case": [[655, "init-test-case"], [710, "init-test-case"], [712, "init-test-case"]], "performance_test test case": [[655, "performance-test-test-case"], [710, "performance-test-test-case"]], "restart_test test case": [[655, "restart-test-test-case"], [710, "restart-test-test-case"]], "decomp_test test case": [[655, "decomp-test-test-case"], [710, "decomp-test-test-case"]], "threads_test test case": [[655, "threads-test-test-case"], [710, "threads-test-test-case"]], "analysis_test test case": [[655, "analysis-test-test-case"], [710, "analysis-test-test-case"]], "daily_output_test test case": [[655, "daily-output-test-test-case"], [710, "daily-output-test-test-case"]], "dynamic_adjustment test case": [[655, "dynamic-adjustment-test-case"], [710, "dynamic-adjustment-test-case"]], "child classes": [[655, "child-classes"]], "files_for_e3sm test case": [[655, "files-for-e3sm-test-case"], [710, "files-for-e3sm-test-case"]], "interpolate_atm_forcing": [[657, "interpolate-atm-forcing"]], "create_pointstats_file": [[657, "create-pointstats-file"]], "ssh_adjustment": [[658, "ssh-adjustment"], [661, "ssh-adjustment"]], "ten_day_test": [[660, "ten-day-test"], [715, "ten-day-test"]], "evap": [[661, "evap"]], "geom": [[661, "geom"]], "streamfunction": [[661, "streamfunction"]], "misomip": [[661, "misomip"]], "ocean_test": [[661, "ocean-test"]], "convergence_test": [[662, "convergence-test"], [717, "convergence-test"]], "soma_test_case": [[664, "soma-test-case"]], "spherical_harmonic_transform": [[666, "spherical-harmonic-transform"], [721, "spherical-harmonic-transform"]], "qu_convergence": [[666, "qu-convergence"], [721, "qu-convergence"]], "ziso_test_case": [[667, "ziso-test-case"]], "with_frazil": [[667, "with-frazil"], [722, "with-frazil"]], "Organization of Tests": [[668, "organization-of-tests"]], "Directory structure": [[668, "directory-structure"]], "TestCase attributes": [[668, "testcase-attributes"]], "constructor": [[668, "constructor"], [668, "dev-step-init"]], "run()": [[668, "run"], [668, "dev-step-run"]], "validate()": [[668, "validate"]], "Steps": [[668, "steps"]], "Step attributes": [[668, "step-attributes"]], "constrain_resources()": [[668, "constrain-resources"]], "runtime_setup()": [[668, "runtime-setup"]], "Input files": [[668, "input-files"]], "Symlinks to input files": [[668, "symlinks-to-input-files"]], "Symlink to input files from compass": [[668, "symlink-to-input-files-from-compass"]], "Downloading and symlinking input files": [[668, "downloading-and-symlinking-input-files"]], "Copying input files": [[668, "copying-input-files"]], "Output files": [[668, "output-files"]], "Cached output files": [[668, "cached-output-files"]], "Adding namelist and streams files": [[668, "adding-namelist-and-streams-files"]], "Adding a namelist file": [[668, "adding-a-namelist-file"]], "Adding namelist options": [[668, "adding-namelist-options"]], "Updating namelist options at runtime": [[668, "updating-namelist-options-at-runtime"]], "Adding a streams file": [[668, "adding-a-streams-file"]], "Adding a template streams file": [[668, "adding-a-template-streams-file"]], "Updating a streams file at runtime": [[668, "updating-a-streams-file-at-runtime"]], "Adding MPAS model as an input": [[668, "adding-mpas-model-as-an-input"]], "Test Suites": [[668, "test-suites"], [723, "test-suites"], [725, "test-suites"]], "Overview": [[669, "overview"]], "Code Style": [[669, "code-style"]], "Packages and Modules": [[669, "packages-and-modules"]], "Packages": [[669, "packages"]], "Modules": [[669, "modules"]], "Classes": [[669, "classes"]], "Code sharing": [[669, "code-sharing"]], "In compass framework": [[669, "in-compass-framework"]], "Within an MPAS core": [[669, "within-an-mpas-core"]], "Within a test group": [[669, "within-a-test-group"]], "Within a test case": [[669, "within-a-test-case"]], "Quick Start for Developers": [[670, "quick-start-for-developers"]], "Unix Shell": [[670, "unix-shell"]], "Set up a compass repository: for beginners": [[670, "set-up-a-compass-repository-for-beginners"]], "compass conda environment, compilers and system modules": [[670, "compass-conda-environment-compilers-and-system-modules"]], "Supported machines": [[670, "supported-machines"]], "Environments with Albany": [[670, "environments-with-albany"]], "Environments with PETSc and Netlib-LAPACK": [[670, "environments-with-petsc-and-netlib-lapack"]], "Unknown machines": [[670, "unknown-machines"]], "What the script does": [[670, "what-the-script-does"]], "Optional flags": [[670, "optional-flags"]], "Activating the environment": [[670, "activating-the-environment"]], "Troubleshooting": [[670, "troubleshooting"], [671, "troubleshooting"]], "Creating/updating only the compass environment": [[670, "creating-updating-only-the-compass-environment"]], "Building MPAS components": [[670, "building-mpas-components"], [723, "building-mpas-components"]], "Running compass from the repo": [[670, "running-compass-from-the-repo"]], "Set up a compass repository with worktrees: for advanced users": [[670, "set-up-a-compass-repository-with-worktrees-for-advanced-users"]], "Solver errors when configuring conda environment": [[671, "solver-errors-when-configuring-conda-environment"]], "Proxy on LANL Macs": [[671, "proxy-on-lanl-macs"]], "gethostbyname failed": [[671, "gethostbyname-failed"]], "Glossary": [[672, "glossary"], [673, null]], "compass": [[673, "compass"]], "User's guide": [[673, null]], "Developer's guide": [[673, null]], "Tutorials": [[673, null]], "Versions": [[673, null]], "Legacy COMPASS": [[673, "legacy-compass"]], "Developer Tutorial: Adding a parameter study": [[674, "developer-tutorial-adding-a-parameter-study"]], "Getting started": [[674, "getting-started"], [675, "getting-started"], [676, "getting-started"]], "Making a new test group and \u201ccosine_bell\u201d test case": [[674, "making-a-new-test-group-and-cosine-bell-test-case"]], "Adding \u201cmesh\u201d, \u201cinit\u201d and \u201cforward\u201d steps": [[674, "adding-mesh-init-and-forward-steps"]], "Adding an \u201canalysis\u201d step": [[674, "adding-an-analysis-step"]], "Adding the steps to the test case": [[674, "adding-the-steps-to-the-test-case"], [675, "adding-the-steps-to-the-test-case"], [675, "id1"]], "Setting the number of tasks and CPUs per task": [[674, "setting-the-number-of-tasks-and-cpus-per-task"]], "Developer Tutorial: Adding a new test group": [[675, "developer-tutorial-adding-a-new-test-group"]], "Making a new test group": [[675, "making-a-new-test-group"], [676, "making-a-new-test-group"]], "Adding a \u201cdefault\u201d test case": [[675, "adding-a-default-test-case"]], "Varying resolution (or other parameters)": [[675, "varying-resolution-or-other-parameters"], [676, "varying-resolution-or-other-parameters"]], "Adding the initial_state step": [[675, "adding-the-initial-state-step"]], "Creating a horizontal mesh": [[675, "creating-a-horizontal-mesh"]], "Setting config options based on resolution": [[675, "setting-config-options-based-on-resolution"], [675, "id2"]], "Creating a vertical coordinate": [[675, "creating-a-vertical-coordinate"]], "Creating an initial condition": [[675, "creating-an-initial-condition"]], "Adding step outputs": [[675, "adding-step-outputs"]], "Adding the forward step": [[675, "adding-the-forward-step"], [676, "adding-the-forward-step"]], "Defining namelist options": [[675, "defining-namelist-options"], [676, "defining-namelist-options"]], "Defining streams": [[675, "defining-streams"], [676, "defining-streams"]], "Defining the run method": [[675, "defining-the-run-method"], [676, "defining-the-run-method"]], "Adding an \u201crpe_test\u201d test case": [[675, "adding-an-rpe-test-test-case"]], "Defining namelist options and streams files": [[675, "defining-namelist-options-and-streams-files"]], "Adding the analysis step": [[675, "adding-the-analysis-step"], [676, "adding-the-analysis-step"]], "Set up and run": [[675, "set-up-and-run"], [676, "set-up-and-run"]], "Developer Tutorial: Porting a legacy COMPASS test group": [[676, "developer-tutorial-porting-a-legacy-compass-test-group"]], "The legacy COMPASS test group": [[676, "the-legacy-compass-test-group"]], "Adding a test case": [[676, "adding-a-test-case"]], "Adding the init step": [[676, "adding-the-init-step"]], "Defining config options": [[676, "defining-config-options"]], "Updating the test case and test group": [[676, "updating-the-test-case-and-test-group"]], "Adding validation": [[676, "adding-validation"]], "Config Files": [[677, "config-files"]], "A \u201cuser\u201d config file": [[677, "a-user-config-file"]], "Test-case config files": [[677, "test-case-config-files"]], "Test suites": [[680, "test-suites"], [705, "test-suites"]], "sia_integration test suite": [[680, "sia-integration-test-suite"]], "fo_integration test suite": [[680, "fo-integration-test-suite"]], "full_integration test suite": [[680, "full-integration-test-suite"]], "humboldt_calving_tests": [[680, "humboldt-calving-tests"]], "humboldt_calving_tests_fo": [[680, "humboldt-calving-tests-fo"]], "config options": [[681, "config-options"], [682, "config-options"], [683, "config-options"], [684, "config-options"], [685, "config-options"], [686, "config-options"], [687, "config-options"], [688, "config-options"], [690, "config-options"], [691, "config-options"], [692, "config-options"], [694, "config-options"], [695, "config-options"], [696, "config-options"], [697, "config-options"], [698, "config-options"], [699, "config-options"], [700, "config-options"], [706, "config-options"], [707, "config-options"], [708, "config-options"], [709, "config-options"], [711, "config-options"], [715, "config-options"], [717, "config-options"], [718, "config-options"], [720, "config-options"], [721, "config-options"]], "dt_convergence_test": [[681, "dt-convergence-test"]], "decomposition_tests": [[687, "decomposition-tests"]], "restart_tests": [[687, "restart-tests"]], "ocean_thermal_obs": [[690, "ocean-thermal-obs"]], "Intel on Anvil": [[695, "intel-on-anvil"]], "Gnu on Anvil": [[695, "gnu-on-anvil"]], "Intel on Chrysalis": [[696, "intel-on-chrysalis"]], "Gnu on Chrysalis": [[696, "gnu-on-chrysalis"]], "Intel on CompyMcNodeFace": [[697, "intel-on-compymcnodeface"]], "Cori-Haswell": [[698, "cori-haswell"]], "Intel on Cori-Haswell": [[698, "intel-on-cori-haswell"]], "Gnu on Cori-Haswell": [[698, "gnu-on-cori-haswell"]], "Jupyter notebook on remote data": [[698, "jupyter-notebook-on-remote-data"], [700, "jupyter-notebook-on-remote-data"]], "Slurm job queueing": [[699, "slurm-job-queueing"]], "MPICH": [[699, "id4"]], "OpenMPI": [[699, "id5"]], "No MPI from conda-forge": [[699, "no-mpi-from-conda-forge"]], "Perlmutter-CPU": [[700, "perlmutter-cpu"]], "Gnu on Perlmutter-CPU": [[700, "gnu-on-perlmutter-cpu"]], "Ice shelf-cavities": [[701, "ice-shelf-cavities"]], "Sea surface height adjustment": [[701, "sea-surface-height-adjustment"]], "1D Grid type": [[703, "d-grid-type"]], "uniform": [[703, "uniform"]], "tanh_dz": [[703, "tanh-dz"]], "60layerPHC": [[703, "layerphc"]], "100layerE3SMv1": [[703, "layere3smv1"]], "3D vertical coordinates": [[703, "d-vertical-coordinates"]], "z-star": [[703, "z-star"]], "z-level": [[703, "z-level"]], "nightly test suite": [[705, "nightly-test-suite"]], "quwisc240 test suite": [[705, "quwisc240-test-suite"]], "qu240_for_e3sm test suite": [[705, "qu240-for-e3sm-test-suite"]], "quwisc240_for_e3sm test suite": [[705, "quwisc240-for-e3sm-test-suite"]], "ec30to60 test suite": [[705, "ec30to60-test-suite"]], "ecwisc30to60 test suite": [[705, "ecwisc30to60-test-suite"]], "thread_test": [[706, "thread-test"]], "resolutions": [[709, "resolutions"], [718, "resolutions"], [720, "resolutions"], [721, "resolutions"]], "time step": [[709, "time-step"], [718, "time-step"], [720, "time-step"]], "cores": [[709, "cores"], [718, "cores"], [720, "cores"]], "Shared config options": [[710, "shared-config-options"], [712, "shared-config-options"]], "Metadata": [[710, "metadata"]], "Meshes": [[710, "meshes"]], "QU240": [[710, "qu240"]], "QUwISC240": [[710, "quwisc240"]], "EC30to60": [[710, "ec30to60"]], "ECwISC30to60": [[710, "ecwisc30to60"]], "Biogeochemsitry": [[710, "biogeochemsitry"]], "Forward step": [[710, "forward-step"]], "make_diagnostic_files test case": [[710, "make-diagnostic-files-test-case"]], "initial state step": [[712, "initial-state-step"]], "interpolate atmosphere forcing step": [[712, "interpolate-atmosphere-forcing-step"]], "create pointstats file step": [[712, "create-pointstats-file-step"]], "sandy test case": [[712, "sandy-test-case"]], "analysis step": [[712, "analysis-step"]], "shared config options": [[713, "shared-config-options"], [716, "shared-config-options"], [718, "shared-config-options"], [719, "shared-config-options"], [722, "shared-config-options"]], "Ocean0": [[716, "ocean0"]], "Ocean1": [[716, "ocean1"]], "Ocean2": [[716, "ocean2"]], "time_varying_Ocean0": [[716, "time-varying-ocean0"]], "thin_film_Ocean0": [[716, "thin-film-ocean0"]], "thin_film_tidal_forcing_Ocean0": [[716, "thin-film-tidal-forcing-ocean0"]], "Performance run": [[716, "performance-run"]], "Simulation run": [[716, "simulation-run"]], "long": [[719, "long"], [722, "long"]], "particles": [[719, "particles"], [722, "particles"]], "surface_restoring": [[719, "surface-restoring"]], "three_layer": [[719, "three-layer"]], "convergence thresholds": [[720, "convergence-thresholds"]], "parallel_N": [[721, "parallel-n"]], "serial_nLat": [[721, "serial-nlat"]], "Quick Start for Users": [[723, "quick-start-for-users"]], "compass conda environment": [[723, "compass-conda-environment"]], "E3SM supported machines": [[723, "e3sm-supported-machines"]], "other machines": [[723, "other-machines"]], "Setting up test cases": [[723, "setting-up-test-cases"]], "Running a test case": [[723, "running-a-test-case"]], "Running with a job script": [[723, "running-with-a-job-script"]], "Test Cases": [[724, "test-cases"]], "Code and Documentation Versions": [[726, "code-and-documentation-versions"]]}, "indexentries": {"mpascore (class in compass)": [[9, "compass.MpasCore"]], "__init__() (compass.mpascore method)": [[9, "compass.MpasCore.__init__"]], "add_test_group() (compass.mpascore method)": [[10, "compass.MpasCore.add_test_group"]], "step (class in compass)": [[11, "compass.Step"]], "__init__() (compass.step method)": [[11, "compass.Step.__init__"]], "add_input_file() (compass.step method)": [[12, "compass.Step.add_input_file"]], "add_model_as_input() (compass.step method)": [[13, "compass.Step.add_model_as_input"]], "add_namelist_file() (compass.step method)": [[14, "compass.Step.add_namelist_file"]], "add_namelist_options() (compass.step method)": [[15, "compass.Step.add_namelist_options"]], "add_output_file() (compass.step method)": [[16, "compass.Step.add_output_file"]], "add_streams_file() (compass.step method)": [[17, "compass.Step.add_streams_file"]], "constrain_resources() (compass.step method)": [[18, "compass.Step.constrain_resources"]], "run() (compass.step method)": [[19, "compass.Step.run"]], "runtime_setup() (compass.step method)": [[20, "compass.Step.runtime_setup"]], "set_resources() (compass.step method)": [[21, "compass.Step.set_resources"]], "setup() (compass.step method)": [[22, "compass.Step.setup"]], "update_namelist_at_runtime() (compass.step method)": [[23, "compass.Step.update_namelist_at_runtime"]], "update_namelist_pio() (compass.step method)": [[24, "compass.Step.update_namelist_pio"]], "update_streams_at_runtime() (compass.step method)": [[25, "compass.Step.update_streams_at_runtime"]], "testcase (class in compass)": [[26, "compass.TestCase"]], "__init__() (compass.testcase method)": [[26, "compass.TestCase.__init__"]], "add_step() (compass.testcase method)": [[27, "compass.TestCase.add_step"]], "configure() (compass.testcase method)": [[28, "compass.TestCase.configure"]], "run() (compass.testcase method)": [[29, "compass.TestCase.run"]], "validate() (compass.testcase method)": [[30, "compass.TestCase.validate"]], "testgroup (class in compass)": [[31, "compass.TestGroup"]], "__init__() (compass.testgroup method)": [[31, "compass.TestGroup.__init__"]], "add_test_case() (compass.testgroup method)": [[32, "compass.TestGroup.add_test_case"]], "main() (in module compass.__main__)": [[33, "compass.__main__.main"]], "update_cache() (in module compass.cache)": [[34, "compass.cache.update_cache"]], "clean_cases() (in module compass.clean)": [[35, "compass.clean.clean_cases"]], "compassconfigparser (class in compass.config)": [[36, "compass.config.CompassConfigParser"]], "__init__() (compass.config.compassconfigparser method)": [[36, "compass.config.CompassConfigParser.__init__"]], "download() (in module compass.io)": [[37, "compass.io.download"]], "symlink() (in module compass.io)": [[38, "compass.io.symlink"]], "list_cases() (in module compass.list)": [[39, "compass.list.list_cases"]], "list_machines() (in module compass.list)": [[40, "compass.list.list_machines"]], "list_suites() (in module compass.list)": [[41, "compass.list.list_suites"]], "log_method_call() (in module compass.logging)": [[42, "compass.logging.log_method_call"]], "icosahedralmeshstep (class in compass.mesh)": [[43, "compass.mesh.IcosahedralMeshStep"]], "__init__() (compass.mesh.icosahedralmeshstep method)": [[43, "compass.mesh.IcosahedralMeshStep.__init__"]], "build_subdivisions_cell_width_lat_lon() (compass.mesh.icosahedralmeshstep method)": [[44, "compass.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon"]], "get_cell_width() (compass.mesh.icosahedralmeshstep static method)": [[45, "compass.mesh.IcosahedralMeshStep.get_cell_width"]], "get_subdivisions() (compass.mesh.icosahedralmeshstep static method)": [[46, "compass.mesh.IcosahedralMeshStep.get_subdivisions"]], "make_jigsaw_mesh() (compass.mesh.icosahedralmeshstep method)": [[47, "compass.mesh.IcosahedralMeshStep.make_jigsaw_mesh"]], "run() (compass.mesh.icosahedralmeshstep method)": [[48, "compass.mesh.IcosahedralMeshStep.run"]], "setup() (compass.mesh.icosahedralmeshstep method)": [[49, "compass.mesh.IcosahedralMeshStep.setup"]], "quasiuniformsphericalmeshstep (class in compass.mesh)": [[50, "compass.mesh.QuasiUniformSphericalMeshStep"]], "__init__() (compass.mesh.quasiuniformsphericalmeshstep method)": [[50, "compass.mesh.QuasiUniformSphericalMeshStep.__init__"]], "build_cell_width_lat_lon() (compass.mesh.quasiuniformsphericalmeshstep method)": [[51, "compass.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon"]], "make_jigsaw_mesh() (compass.mesh.quasiuniformsphericalmeshstep method)": [[52, "compass.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh"]], "run() (compass.mesh.quasiuniformsphericalmeshstep method)": [[53, "compass.mesh.QuasiUniformSphericalMeshStep.run"]], "setup() (compass.mesh.quasiuniformsphericalmeshstep method)": [[54, "compass.mesh.QuasiUniformSphericalMeshStep.setup"]], "sphericalbasestep (class in compass.mesh.spherical)": [[55, "compass.mesh.spherical.SphericalBaseStep"]], "__init__() (compass.mesh.spherical.sphericalbasestep method)": [[55, "compass.mesh.spherical.SphericalBaseStep.__init__"]], "run() (compass.mesh.spherical.sphericalbasestep method)": [[56, "compass.mesh.spherical.SphericalBaseStep.run"]], "save_and_plot_cell_width() (compass.mesh.spherical.sphericalbasestep method)": [[57, "compass.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width"]], "setup() (compass.mesh.spherical.sphericalbasestep method)": [[58, "compass.mesh.spherical.SphericalBaseStep.setup"]], "make_graph_file() (in module compass.model)": [[59, "compass.model.make_graph_file"]], "partition() (in module compass.model)": [[60, "compass.model.partition"]], "run_model() (in module compass.model)": [[61, "compass.model.run_model"]], "get_mpas_cores() (in module compass.mpas_cores)": [[62, "compass.mpas_cores.get_mpas_cores"]], "check_parallel_system() (in module compass.parallel)": [[63, "compass.parallel.check_parallel_system"]], "get_available_cores_and_nodes() (in module compass.parallel)": [[64, "compass.parallel.get_available_cores_and_nodes"]], "run_command() (in module compass.parallel)": [[65, "compass.parallel.run_command"]], "set_cores_per_node() (in module compass.parallel)": [[66, "compass.parallel.set_cores_per_node"]], "write() (in module compass.provenance)": [[67, "compass.provenance.write"]], "run_single_step() (in module compass.run.serial)": [[68, "compass.run.serial.run_single_step"]], "run_tests() (in module compass.run.serial)": [[69, "compass.run.serial.run_tests"]], "setup_case() (in module compass.setup)": [[70, "compass.setup.setup_case"]], "setup_cases() (in module compass.setup)": [[71, "compass.setup.setup_cases"]], "clean_suite() (in module compass.suite)": [[72, "compass.suite.clean_suite"]], "setup_suite() (in module compass.suite)": [[73, "compass.suite.setup_suite"]], "compare_timers() (in module compass.validate)": [[74, "compass.validate.compare_timers"]], "compare_variables() (in module compass.validate)": [[75, "compass.validate.compare_variables"]], "landice (class in compass.landice)": [[78, "compass.landice.Landice"]], "__init__() (compass.landice.landice method)": [[78, "compass.landice.Landice.__init__"]], "calvingdtconvergence (class in compass.landice.tests.calving_dt_convergence)": [[79, "compass.landice.tests.calving_dt_convergence.CalvingDtConvergence"]], "__init__() (compass.landice.tests.calving_dt_convergence.calvingdtconvergence method)": [[79, "compass.landice.tests.calving_dt_convergence.CalvingDtConvergence.__init__"]], "dtconvergencetest (class in compass.landice.tests.calving_dt_convergence.dt_convergence_test)": [[80, "compass.landice.tests.calving_dt_convergence.dt_convergence_test.DtConvergenceTest"]], "__init__() (compass.landice.tests.calving_dt_convergence.dt_convergence_test.dtconvergencetest method)": [[80, "compass.landice.tests.calving_dt_convergence.dt_convergence_test.DtConvergenceTest.__init__"]], "validate() (compass.landice.tests.calving_dt_convergence.dt_convergence_test.dtconvergencetest method)": [[81, "compass.landice.tests.calving_dt_convergence.dt_convergence_test.DtConvergenceTest.validate"]], "runmodel (class in compass.landice.tests.calving_dt_convergence.run_model)": [[82, "compass.landice.tests.calving_dt_convergence.run_model.RunModel"]], "__init__() (compass.landice.tests.calving_dt_convergence.run_model.runmodel method)": [[82, "compass.landice.tests.calving_dt_convergence.run_model.RunModel.__init__"]], "run() (compass.landice.tests.calving_dt_convergence.run_model.runmodel method)": [[83, "compass.landice.tests.calving_dt_convergence.run_model.RunModel.run"]], "circularshelf (class in compass.landice.tests.circular_shelf)": [[84, "compass.landice.tests.circular_shelf.CircularShelf"]], "__init__() (compass.landice.tests.circular_shelf.circularshelf method)": [[84, "compass.landice.tests.circular_shelf.CircularShelf.__init__"]], "decompositiontest (class in compass.landice.tests.circular_shelf.decomposition_test)": [[85, "compass.landice.tests.circular_shelf.decomposition_test.DecompositionTest"]], "__init__() (compass.landice.tests.circular_shelf.decomposition_test.decompositiontest method)": [[85, "compass.landice.tests.circular_shelf.decomposition_test.DecompositionTest.__init__"]], "run() (compass.landice.tests.circular_shelf.decomposition_test.decompositiontest method)": [[86, "compass.landice.tests.circular_shelf.decomposition_test.DecompositionTest.run"]], "runmodel (class in compass.landice.tests.circular_shelf.run_model)": [[87, "compass.landice.tests.circular_shelf.run_model.RunModel"]], "__init__() (compass.landice.tests.circular_shelf.run_model.runmodel method)": [[87, "compass.landice.tests.circular_shelf.run_model.RunModel.__init__"]], "run() (compass.landice.tests.circular_shelf.run_model.runmodel method)": [[88, "compass.landice.tests.circular_shelf.run_model.RunModel.run"]], "setupmesh (class in compass.landice.tests.circular_shelf.setup_mesh)": [[89, "compass.landice.tests.circular_shelf.setup_mesh.SetupMesh"]], "__init__() (compass.landice.tests.circular_shelf.setup_mesh.setupmesh method)": [[89, "compass.landice.tests.circular_shelf.setup_mesh.SetupMesh.__init__"]], "run() (compass.landice.tests.circular_shelf.setup_mesh.setupmesh method)": [[90, "compass.landice.tests.circular_shelf.setup_mesh.SetupMesh.run"]], "visualize (class in compass.landice.tests.circular_shelf.visualize)": [[91, "compass.landice.tests.circular_shelf.visualize.Visualize"]], "__init__() (compass.landice.tests.circular_shelf.visualize.visualize method)": [[91, "compass.landice.tests.circular_shelf.visualize.Visualize.__init__"]], "run() (compass.landice.tests.circular_shelf.visualize.visualize method)": [[92, "compass.landice.tests.circular_shelf.visualize.Visualize.run"]], "visualize_circular_shelf() (in module compass.landice.tests.circular_shelf.visualize)": [[93, "compass.landice.tests.circular_shelf.visualize.visualize_circular_shelf"]], "dome (class in compass.landice.tests.dome)": [[94, "compass.landice.tests.dome.Dome"]], "__init__() (compass.landice.tests.dome.dome method)": [[94, "compass.landice.tests.dome.Dome.__init__"]], "decompositiontest (class in compass.landice.tests.dome.decomposition_test)": [[95, "compass.landice.tests.dome.decomposition_test.DecompositionTest"]], "__init__() (compass.landice.tests.dome.decomposition_test.decompositiontest method)": [[95, "compass.landice.tests.dome.decomposition_test.DecompositionTest.__init__"]], "run() (compass.landice.tests.dome.decomposition_test.decompositiontest method)": [[96, "compass.landice.tests.dome.decomposition_test.DecompositionTest.run"]], "restarttest (class in compass.landice.tests.dome.restart_test)": [[97, "compass.landice.tests.dome.restart_test.RestartTest"]], "__init__() (compass.landice.tests.dome.restart_test.restarttest method)": [[97, "compass.landice.tests.dome.restart_test.RestartTest.__init__"]], "run() (compass.landice.tests.dome.restart_test.restarttest method)": [[98, "compass.landice.tests.dome.restart_test.RestartTest.run"]], "runmodel (class in compass.landice.tests.dome.run_model)": [[99, "compass.landice.tests.dome.run_model.RunModel"]], "__init__() (compass.landice.tests.dome.run_model.runmodel method)": [[99, "compass.landice.tests.dome.run_model.RunModel.__init__"]], "run() (compass.landice.tests.dome.run_model.runmodel method)": [[100, "compass.landice.tests.dome.run_model.RunModel.run"]], "setup() (compass.landice.tests.dome.run_model.runmodel method)": [[101, "compass.landice.tests.dome.run_model.RunModel.setup"]], "setupmesh (class in compass.landice.tests.dome.setup_mesh)": [[102, "compass.landice.tests.dome.setup_mesh.SetupMesh"]], "__init__() (compass.landice.tests.dome.setup_mesh.setupmesh method)": [[102, "compass.landice.tests.dome.setup_mesh.SetupMesh.__init__"]], "run() (compass.landice.tests.dome.setup_mesh.setupmesh method)": [[103, "compass.landice.tests.dome.setup_mesh.SetupMesh.run"]], "smoketest (class in compass.landice.tests.dome.smoke_test)": [[104, "compass.landice.tests.dome.smoke_test.SmokeTest"]], "__init__() (compass.landice.tests.dome.smoke_test.smoketest method)": [[104, "compass.landice.tests.dome.smoke_test.SmokeTest.__init__"]], "run() (compass.landice.tests.dome.smoke_test.smoketest method)": [[105, "compass.landice.tests.dome.smoke_test.SmokeTest.run"]], "visualize (class in compass.landice.tests.dome.visualize)": [[106, "compass.landice.tests.dome.visualize.Visualize"]], "__init__() (compass.landice.tests.dome.visualize.visualize method)": [[106, "compass.landice.tests.dome.visualize.Visualize.__init__"]], "run() (compass.landice.tests.dome.visualize.visualize method)": [[107, "compass.landice.tests.dome.visualize.Visualize.run"]], "visualize_dome() (in module compass.landice.tests.dome.visualize)": [[108, "compass.landice.tests.dome.visualize.visualize_dome"]], "eismint2 (class in compass.landice.tests.eismint2)": [[109, "compass.landice.tests.eismint2.Eismint2"]], "__init__() (compass.landice.tests.eismint2.eismint2 method)": [[109, "compass.landice.tests.eismint2.Eismint2.__init__"]], "decompositiontest (class in compass.landice.tests.eismint2.decomposition_test)": [[110, "compass.landice.tests.eismint2.decomposition_test.DecompositionTest"]], "__init__() (compass.landice.tests.eismint2.decomposition_test.decompositiontest method)": [[110, "compass.landice.tests.eismint2.decomposition_test.DecompositionTest.__init__"]], "run() (compass.landice.tests.eismint2.decomposition_test.decompositiontest method)": [[111, "compass.landice.tests.eismint2.decomposition_test.DecompositionTest.run"]], "restarttest (class in compass.landice.tests.eismint2.restart_test)": [[112, "compass.landice.tests.eismint2.restart_test.RestartTest"]], "__init__() (compass.landice.tests.eismint2.restart_test.restarttest method)": [[112, "compass.landice.tests.eismint2.restart_test.RestartTest.__init__"]], "run() (compass.landice.tests.eismint2.restart_test.restarttest method)": [[113, "compass.landice.tests.eismint2.restart_test.RestartTest.run"]], "runexperiment (class in compass.landice.tests.eismint2.run_experiment)": [[114, "compass.landice.tests.eismint2.run_experiment.RunExperiment"]], "__init__() (compass.landice.tests.eismint2.run_experiment.runexperiment method)": [[114, "compass.landice.tests.eismint2.run_experiment.RunExperiment.__init__"]], "run() (compass.landice.tests.eismint2.run_experiment.runexperiment method)": [[115, "compass.landice.tests.eismint2.run_experiment.RunExperiment.run"]], "setup() (compass.landice.tests.eismint2.run_experiment.runexperiment method)": [[116, "compass.landice.tests.eismint2.run_experiment.RunExperiment.setup"]], "setupmesh (class in compass.landice.tests.eismint2.setup_mesh)": [[117, "compass.landice.tests.eismint2.setup_mesh.SetupMesh"]], "__init__() (compass.landice.tests.eismint2.setup_mesh.setupmesh method)": [[117, "compass.landice.tests.eismint2.setup_mesh.SetupMesh.__init__"]], "run() (compass.landice.tests.eismint2.setup_mesh.setupmesh method)": [[118, "compass.landice.tests.eismint2.setup_mesh.SetupMesh.run"]], "standardexperiments (class in compass.landice.tests.eismint2.standard_experiments)": [[119, "compass.landice.tests.eismint2.standard_experiments.StandardExperiments"]], "__init__() (compass.landice.tests.eismint2.standard_experiments.standardexperiments method)": [[119, "compass.landice.tests.eismint2.standard_experiments.StandardExperiments.__init__"]], "run() (compass.landice.tests.eismint2.standard_experiments.standardexperiments method)": [[120, "compass.landice.tests.eismint2.standard_experiments.StandardExperiments.run"]], "visualize (class in compass.landice.tests.eismint2.standard_experiments.visualize)": [[121, "compass.landice.tests.eismint2.standard_experiments.visualize.Visualize"]], "__init__() (compass.landice.tests.eismint2.standard_experiments.visualize.visualize method)": [[121, "compass.landice.tests.eismint2.standard_experiments.visualize.Visualize.__init__"]], "run() (compass.landice.tests.eismint2.standard_experiments.visualize.visualize method)": [[122, "compass.landice.tests.eismint2.standard_experiments.visualize.Visualize.run"]], "visualize_eismint2() (in module compass.landice.tests.eismint2.standard_experiments.visualize)": [[123, "compass.landice.tests.eismint2.standard_experiments.visualize.visualize_eismint2"]], "a (class in compass.landice.tests.enthalpy_benchmark.a)": [[124, "compass.landice.tests.enthalpy_benchmark.A.A"]], "__init__() (compass.landice.tests.enthalpy_benchmark.a.a method)": [[124, "compass.landice.tests.enthalpy_benchmark.A.A.__init__"]], "configure() (compass.landice.tests.enthalpy_benchmark.a.a method)": [[125, "compass.landice.tests.enthalpy_benchmark.A.A.configure"]], "run() (compass.landice.tests.enthalpy_benchmark.a.a method)": [[126, "compass.landice.tests.enthalpy_benchmark.A.A.run"]], "visualize (class in compass.landice.tests.enthalpy_benchmark.a.visualize)": [[127, "compass.landice.tests.enthalpy_benchmark.A.visualize.Visualize"]], "__init__() (compass.landice.tests.enthalpy_benchmark.a.visualize.visualize method)": [[127, "compass.landice.tests.enthalpy_benchmark.A.visualize.Visualize.__init__"]], "run() (compass.landice.tests.enthalpy_benchmark.a.visualize.visualize method)": [[128, "compass.landice.tests.enthalpy_benchmark.A.visualize.Visualize.run"]], "b (class in compass.landice.tests.enthalpy_benchmark.b)": [[129, "compass.landice.tests.enthalpy_benchmark.B.B"]], "__init__() (compass.landice.tests.enthalpy_benchmark.b.b method)": [[129, "compass.landice.tests.enthalpy_benchmark.B.B.__init__"]], "configure() (compass.landice.tests.enthalpy_benchmark.b.b method)": [[130, "compass.landice.tests.enthalpy_benchmark.B.B.configure"]], "run() (compass.landice.tests.enthalpy_benchmark.b.b method)": [[131, "compass.landice.tests.enthalpy_benchmark.B.B.run"]], "visualize (class in compass.landice.tests.enthalpy_benchmark.b.visualize)": [[132, "compass.landice.tests.enthalpy_benchmark.B.visualize.Visualize"]], "__init__() (compass.landice.tests.enthalpy_benchmark.b.visualize.visualize method)": [[132, "compass.landice.tests.enthalpy_benchmark.B.visualize.Visualize.__init__"]], "run() (compass.landice.tests.enthalpy_benchmark.b.visualize.visualize method)": [[133, "compass.landice.tests.enthalpy_benchmark.B.visualize.Visualize.run"]], "enthalpybenchmark (class in compass.landice.tests.enthalpy_benchmark)": [[134, "compass.landice.tests.enthalpy_benchmark.EnthalpyBenchmark"]], "__init__() (compass.landice.tests.enthalpy_benchmark.enthalpybenchmark method)": [[134, "compass.landice.tests.enthalpy_benchmark.EnthalpyBenchmark.__init__"]], "runmodel (class in compass.landice.tests.enthalpy_benchmark.run_model)": [[135, "compass.landice.tests.enthalpy_benchmark.run_model.RunModel"]], "__init__() (compass.landice.tests.enthalpy_benchmark.run_model.runmodel method)": [[135, "compass.landice.tests.enthalpy_benchmark.run_model.RunModel.__init__"]], "run() (compass.landice.tests.enthalpy_benchmark.run_model.runmodel method)": [[136, "compass.landice.tests.enthalpy_benchmark.run_model.RunModel.run"]], "setup() (compass.landice.tests.enthalpy_benchmark.run_model.runmodel method)": [[137, "compass.landice.tests.enthalpy_benchmark.run_model.RunModel.setup"]], "setupmesh (class in compass.landice.tests.enthalpy_benchmark.setup_mesh)": [[138, "compass.landice.tests.enthalpy_benchmark.setup_mesh.SetupMesh"]], "__init__() (compass.landice.tests.enthalpy_benchmark.setup_mesh.setupmesh method)": [[138, "compass.landice.tests.enthalpy_benchmark.setup_mesh.SetupMesh.__init__"]], "run() (compass.landice.tests.enthalpy_benchmark.setup_mesh.setupmesh method)": [[139, "compass.landice.tests.enthalpy_benchmark.setup_mesh.SetupMesh.run"]], "greenland (class in compass.landice.tests.greenland)": [[140, "compass.landice.tests.greenland.Greenland"]], "__init__() (compass.landice.tests.greenland.greenland method)": [[140, "compass.landice.tests.greenland.Greenland.__init__"]], "decompositiontest (class in compass.landice.tests.greenland.decomposition_test)": [[141, "compass.landice.tests.greenland.decomposition_test.DecompositionTest"]], "__init__() (compass.landice.tests.greenland.decomposition_test.decompositiontest method)": [[141, "compass.landice.tests.greenland.decomposition_test.DecompositionTest.__init__"]], "run() (compass.landice.tests.greenland.decomposition_test.decompositiontest method)": [[142, "compass.landice.tests.greenland.decomposition_test.DecompositionTest.run"]], "highresmesh (class in compass.landice.tests.greenland.high_res_mesh)": [[143, "compass.landice.tests.greenland.high_res_mesh.HighResMesh"]], "__init__() (compass.landice.tests.greenland.high_res_mesh.highresmesh method)": [[143, "compass.landice.tests.greenland.high_res_mesh.HighResMesh.__init__"]], "run() (compass.landice.tests.greenland.high_res_mesh.highresmesh method)": [[144, "compass.landice.tests.greenland.high_res_mesh.HighResMesh.run"]], "mesh (class in compass.landice.tests.greenland.mesh)": [[145, "compass.landice.tests.greenland.mesh.Mesh"]], "__init__() (compass.landice.tests.greenland.mesh.mesh method)": [[145, "compass.landice.tests.greenland.mesh.Mesh.__init__"]], "build_cell_width() (compass.landice.tests.greenland.mesh.mesh method)": [[146, "compass.landice.tests.greenland.mesh.Mesh.build_cell_width"]], "run() (compass.landice.tests.greenland.mesh.mesh method)": [[147, "compass.landice.tests.greenland.mesh.Mesh.run"]], "restarttest (class in compass.landice.tests.greenland.restart_test)": [[148, "compass.landice.tests.greenland.restart_test.RestartTest"]], "__init__() (compass.landice.tests.greenland.restart_test.restarttest method)": [[148, "compass.landice.tests.greenland.restart_test.RestartTest.__init__"]], "run() (compass.landice.tests.greenland.restart_test.restarttest method)": [[149, "compass.landice.tests.greenland.restart_test.RestartTest.run"]], "runmodel (class in compass.landice.tests.greenland.run_model)": [[150, "compass.landice.tests.greenland.run_model.RunModel"]], "__init__() (compass.landice.tests.greenland.run_model.runmodel method)": [[150, "compass.landice.tests.greenland.run_model.RunModel.__init__"]], "run() (compass.landice.tests.greenland.run_model.runmodel method)": [[151, "compass.landice.tests.greenland.run_model.RunModel.run"]], "setup() (compass.landice.tests.greenland.run_model.runmodel method)": [[152, "compass.landice.tests.greenland.run_model.RunModel.setup"]], "smoketest (class in compass.landice.tests.greenland.smoke_test)": [[153, "compass.landice.tests.greenland.smoke_test.SmokeTest"]], "__init__() (compass.landice.tests.greenland.smoke_test.smoketest method)": [[153, "compass.landice.tests.greenland.smoke_test.SmokeTest.__init__"]], "run() (compass.landice.tests.greenland.smoke_test.smoketest method)": [[154, "compass.landice.tests.greenland.smoke_test.SmokeTest.run"]], "humboldt (class in compass.landice.tests.humboldt)": [[155, "compass.landice.tests.humboldt.Humboldt"]], "__init__() (compass.landice.tests.humboldt.humboldt method)": [[155, "compass.landice.tests.humboldt.Humboldt.__init__"]], "decompositiontest (class in compass.landice.tests.humboldt.decomposition_test)": [[156, "compass.landice.tests.humboldt.decomposition_test.DecompositionTest"]], "__init__() (compass.landice.tests.humboldt.decomposition_test.decompositiontest method)": [[156, "compass.landice.tests.humboldt.decomposition_test.DecompositionTest.__init__"]], "validate() (compass.landice.tests.humboldt.decomposition_test.decompositiontest method)": [[157, "compass.landice.tests.humboldt.decomposition_test.DecompositionTest.validate"]], "mesh (class in compass.landice.tests.humboldt.mesh)": [[158, "compass.landice.tests.humboldt.mesh.Mesh"]], "__init__() (compass.landice.tests.humboldt.mesh.mesh method)": [[158, "compass.landice.tests.humboldt.mesh.Mesh.__init__"]], "run() (compass.landice.tests.humboldt.mesh.mesh method)": [[159, "compass.landice.tests.humboldt.mesh.Mesh.run"]], "meshgen (class in compass.landice.tests.humboldt.mesh_gen)": [[160, "compass.landice.tests.humboldt.mesh_gen.MeshGen"]], "__init__() (compass.landice.tests.humboldt.mesh_gen.meshgen method)": [[160, "compass.landice.tests.humboldt.mesh_gen.MeshGen.__init__"]], "run() (compass.landice.tests.humboldt.mesh_gen.meshgen method)": [[161, "compass.landice.tests.humboldt.mesh_gen.MeshGen.run"]], "restarttest (class in compass.landice.tests.humboldt.restart_test)": [[162, "compass.landice.tests.humboldt.restart_test.RestartTest"]], "__init__() (compass.landice.tests.humboldt.restart_test.restarttest method)": [[162, "compass.landice.tests.humboldt.restart_test.RestartTest.__init__"]], "validate() (compass.landice.tests.humboldt.restart_test.restarttest method)": [[163, "compass.landice.tests.humboldt.restart_test.RestartTest.validate"]], "runmodel (class in compass.landice.tests.humboldt.run_model)": [[164, "compass.landice.tests.humboldt.run_model.RunModel"]], "__init__() (compass.landice.tests.humboldt.run_model.runmodel method)": [[164, "compass.landice.tests.humboldt.run_model.RunModel.__init__"]], "run() (compass.landice.tests.humboldt.run_model.runmodel method)": [[165, "compass.landice.tests.humboldt.run_model.RunModel.run"]], "hydroradial (class in compass.landice.tests.hydro_radial)": [[166, "compass.landice.tests.hydro_radial.HydroRadial"]], "__init__() (compass.landice.tests.hydro_radial.hydroradial method)": [[166, "compass.landice.tests.hydro_radial.HydroRadial.__init__"]], "decompositiontest (class in compass.landice.tests.hydro_radial.decomposition_test)": [[167, "compass.landice.tests.hydro_radial.decomposition_test.DecompositionTest"]], "__init__() (compass.landice.tests.hydro_radial.decomposition_test.decompositiontest method)": [[167, "compass.landice.tests.hydro_radial.decomposition_test.DecompositionTest.__init__"]], "run() (compass.landice.tests.hydro_radial.decomposition_test.decompositiontest method)": [[168, "compass.landice.tests.hydro_radial.decomposition_test.DecompositionTest.run"]], "restarttest (class in compass.landice.tests.hydro_radial.restart_test)": [[169, "compass.landice.tests.hydro_radial.restart_test.RestartTest"]], "__init__() (compass.landice.tests.hydro_radial.restart_test.restarttest method)": [[169, "compass.landice.tests.hydro_radial.restart_test.RestartTest.__init__"]], "run() (compass.landice.tests.hydro_radial.restart_test.restarttest method)": [[170, "compass.landice.tests.hydro_radial.restart_test.RestartTest.run"]], "runmodel (class in compass.landice.tests.hydro_radial.run_model)": [[171, "compass.landice.tests.hydro_radial.run_model.RunModel"]], "__init__() (compass.landice.tests.hydro_radial.run_model.runmodel method)": [[171, "compass.landice.tests.hydro_radial.run_model.RunModel.__init__"]], "run() (compass.landice.tests.hydro_radial.run_model.runmodel method)": [[172, "compass.landice.tests.hydro_radial.run_model.RunModel.run"]], "setup() (compass.landice.tests.hydro_radial.run_model.runmodel method)": [[173, "compass.landice.tests.hydro_radial.run_model.RunModel.setup"]], "setupmesh (class in compass.landice.tests.hydro_radial.setup_mesh)": [[174, "compass.landice.tests.hydro_radial.setup_mesh.SetupMesh"]], "__init__() (compass.landice.tests.hydro_radial.setup_mesh.setupmesh method)": [[174, "compass.landice.tests.hydro_radial.setup_mesh.SetupMesh.__init__"]], "run() (compass.landice.tests.hydro_radial.setup_mesh.setupmesh method)": [[175, "compass.landice.tests.hydro_radial.setup_mesh.SetupMesh.run"]], "spinuptest (class in compass.landice.tests.hydro_radial.spinup_test)": [[176, "compass.landice.tests.hydro_radial.spinup_test.SpinupTest"]], "__init__() (compass.landice.tests.hydro_radial.spinup_test.spinuptest method)": [[176, "compass.landice.tests.hydro_radial.spinup_test.SpinupTest.__init__"]], "run() (compass.landice.tests.hydro_radial.spinup_test.spinuptest method)": [[177, "compass.landice.tests.hydro_radial.spinup_test.SpinupTest.run"]], "steadystatedrifttest (class in compass.landice.tests.hydro_radial.steady_state_drift_test)": [[178, "compass.landice.tests.hydro_radial.steady_state_drift_test.SteadyStateDriftTest"]], "__init__() (compass.landice.tests.hydro_radial.steady_state_drift_test.steadystatedrifttest method)": [[178, "compass.landice.tests.hydro_radial.steady_state_drift_test.SteadyStateDriftTest.__init__"]], "run() (compass.landice.tests.hydro_radial.steady_state_drift_test.steadystatedrifttest method)": [[179, "compass.landice.tests.hydro_radial.steady_state_drift_test.SteadyStateDriftTest.run"]], "visualize (class in compass.landice.tests.hydro_radial.visualize)": [[180, "compass.landice.tests.hydro_radial.visualize.Visualize"]], "__init__() (compass.landice.tests.hydro_radial.visualize.visualize method)": [[180, "compass.landice.tests.hydro_radial.visualize.Visualize.__init__"]], "run() (compass.landice.tests.hydro_radial.visualize.visualize method)": [[181, "compass.landice.tests.hydro_radial.visualize.Visualize.run"]], "visualize_hydro_radial() (in module compass.landice.tests.hydro_radial.visualize)": [[182, "compass.landice.tests.hydro_radial.visualize.visualize_hydro_radial"]], "ismip6forcing (class in compass.landice.tests.ismip6_forcing)": [[183, "compass.landice.tests.ismip6_forcing.Ismip6Forcing"]], "__init__() (compass.landice.tests.ismip6_forcing.ismip6forcing method)": [[183, "compass.landice.tests.ismip6_forcing.Ismip6Forcing.__init__"]], "atmosphere (class in compass.landice.tests.ismip6_forcing.atmosphere)": [[184, "compass.landice.tests.ismip6_forcing.atmosphere.Atmosphere"]], "__init__() (compass.landice.tests.ismip6_forcing.atmosphere.atmosphere method)": [[184, "compass.landice.tests.ismip6_forcing.atmosphere.Atmosphere.__init__"]], "configure() (compass.landice.tests.ismip6_forcing.atmosphere.atmosphere method)": [[185, "compass.landice.tests.ismip6_forcing.atmosphere.Atmosphere.configure"]], "compass.landice.tests.ismip6_forcing.atmosphere.create_mapfile_smb": [[186, "module-compass.landice.tests.ismip6_forcing.atmosphere.create_mapfile_smb"]], "module": [[186, "module-compass.landice.tests.ismip6_forcing.atmosphere.create_mapfile_smb"], [340, "module-compass.ocean.tests.global_ocean.configure"], [426, "module-compass.ocean.tests.hurricane.configure"]], "build_mapping_file() (in module compass.landice.tests.ismip6_forcing.atmosphere.create_mapfile_smb)": [[187, "compass.landice.tests.ismip6_forcing.atmosphere.create_mapfile_smb.build_mapping_file"]], "create_atm_scrip() (in module compass.landice.tests.ismip6_forcing.atmosphere.create_mapfile_smb)": [[188, "compass.landice.tests.ismip6_forcing.atmosphere.create_mapfile_smb.create_atm_scrip"]], "processsmb (class in compass.landice.tests.ismip6_forcing.atmosphere.process_smb)": [[189, "compass.landice.tests.ismip6_forcing.atmosphere.process_smb.ProcessSMB"]], "__init__() (compass.landice.tests.ismip6_forcing.atmosphere.process_smb.processsmb method)": [[189, "compass.landice.tests.ismip6_forcing.atmosphere.process_smb.ProcessSMB.__init__"]], "correct_smb_anomaly_for_climatology() (compass.landice.tests.ismip6_forcing.atmosphere.process_smb.processsmb method)": [[190, "compass.landice.tests.ismip6_forcing.atmosphere.process_smb.ProcessSMB.correct_smb_anomaly_for_climatology"]], "remap_ismip6_smb_to_mali() (compass.landice.tests.ismip6_forcing.atmosphere.process_smb.processsmb method)": [[191, "compass.landice.tests.ismip6_forcing.atmosphere.process_smb.ProcessSMB.remap_ismip6_smb_to_mali"]], "rename_ismip6_smb_to_mali_vars() (compass.landice.tests.ismip6_forcing.atmosphere.process_smb.processsmb method)": [[192, "compass.landice.tests.ismip6_forcing.atmosphere.process_smb.ProcessSMB.rename_ismip6_smb_to_mali_vars"]], "run() (compass.landice.tests.ismip6_forcing.atmosphere.process_smb.processsmb method)": [[193, "compass.landice.tests.ismip6_forcing.atmosphere.process_smb.ProcessSMB.run"]], "setup() (compass.landice.tests.ismip6_forcing.atmosphere.process_smb.processsmb method)": [[194, "compass.landice.tests.ismip6_forcing.atmosphere.process_smb.ProcessSMB.setup"]], "processsmbracmo (class in compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo)": [[195, "compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.ProcessSmbRacmo"]], "__init__() (compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.processsmbracmo method)": [[195, "compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.ProcessSmbRacmo.__init__"]], "correct_smb_anomaly_for_base_smb() (compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.processsmbracmo method)": [[196, "compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.ProcessSmbRacmo.correct_smb_anomaly_for_base_smb"]], "remap_source_smb_to_mali() (compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.processsmbracmo method)": [[197, "compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.ProcessSmbRacmo.remap_source_smb_to_mali"]], "rename_source_smb_to_mali_vars() (compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.processsmbracmo method)": [[198, "compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.ProcessSmbRacmo.rename_source_smb_to_mali_vars"]], "run() (compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.processsmbracmo method)": [[199, "compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.ProcessSmbRacmo.run"]], "setup() (compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.processsmbracmo method)": [[200, "compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.ProcessSmbRacmo.setup"]], "configure() (in module compass.landice.tests.ismip6_forcing.configure)": [[201, "compass.landice.tests.ismip6_forcing.configure.configure"]], "build_mapping_file() (in module compass.landice.tests.ismip6_forcing.create_mapfile)": [[202, "compass.landice.tests.ismip6_forcing.create_mapfile.build_mapping_file"]], "oceanbasal (class in compass.landice.tests.ismip6_forcing.ocean_basal)": [[203, "compass.landice.tests.ismip6_forcing.ocean_basal.OceanBasal"]], "__init__() (compass.landice.tests.ismip6_forcing.ocean_basal.oceanbasal method)": [[203, "compass.landice.tests.ismip6_forcing.ocean_basal.OceanBasal.__init__"]], "configure() (compass.landice.tests.ismip6_forcing.ocean_basal.oceanbasal method)": [[204, "compass.landice.tests.ismip6_forcing.ocean_basal.OceanBasal.configure"]], "processbasalmelt (class in compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt)": [[205, "compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.ProcessBasalMelt"]], "__init__() (compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.processbasalmelt method)": [[205, "compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.ProcessBasalMelt.__init__"]], "combine_ismip6_inputfiles() (compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.processbasalmelt method)": [[206, "compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.ProcessBasalMelt.combine_ismip6_inputfiles"]], "remap_ismip6_basal_melt_to_mali_vars() (compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.processbasalmelt method)": [[207, "compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.ProcessBasalMelt.remap_ismip6_basal_melt_to_mali_vars"]], "rename_ismip6_basal_melt_to_mali_vars() (compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.processbasalmelt method)": [[208, "compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.ProcessBasalMelt.rename_ismip6_basal_melt_to_mali_vars"]], "run() (compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.processbasalmelt method)": [[209, "compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.ProcessBasalMelt.run"]], "setup() (compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.processbasalmelt method)": [[210, "compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.ProcessBasalMelt.setup"]], "oceanthermal (class in compass.landice.tests.ismip6_forcing.ocean_thermal)": [[211, "compass.landice.tests.ismip6_forcing.ocean_thermal.OceanThermal"]], "__init__() (compass.landice.tests.ismip6_forcing.ocean_thermal.oceanthermal method)": [[211, "compass.landice.tests.ismip6_forcing.ocean_thermal.OceanThermal.__init__"]], "configure() (compass.landice.tests.ismip6_forcing.ocean_thermal.oceanthermal method)": [[212, "compass.landice.tests.ismip6_forcing.ocean_thermal.OceanThermal.configure"]], "processthermalforcing (class in compass.landice.tests.ismip6_forcing.ocean_thermal.process_thermal_forcing)": [[213, "compass.landice.tests.ismip6_forcing.ocean_thermal.process_thermal_forcing.ProcessThermalForcing"]], "__init__() (compass.landice.tests.ismip6_forcing.ocean_thermal.process_thermal_forcing.processthermalforcing method)": [[213, "compass.landice.tests.ismip6_forcing.ocean_thermal.process_thermal_forcing.ProcessThermalForcing.__init__"]], "remap_ismip6_thermal_forcing_to_mali_vars() (compass.landice.tests.ismip6_forcing.ocean_thermal.process_thermal_forcing.processthermalforcing method)": [[214, "compass.landice.tests.ismip6_forcing.ocean_thermal.process_thermal_forcing.ProcessThermalForcing.remap_ismip6_thermal_forcing_to_mali_vars"]], "rename_ismip6_thermal_forcing_to_mali_vars() (compass.landice.tests.ismip6_forcing.ocean_thermal.process_thermal_forcing.processthermalforcing method)": [[215, "compass.landice.tests.ismip6_forcing.ocean_thermal.process_thermal_forcing.ProcessThermalForcing.rename_ismip6_thermal_forcing_to_mali_vars"]], "run() (compass.landice.tests.ismip6_forcing.ocean_thermal.process_thermal_forcing.processthermalforcing method)": [[216, "compass.landice.tests.ismip6_forcing.ocean_thermal.process_thermal_forcing.ProcessThermalForcing.run"]], "setup() (compass.landice.tests.ismip6_forcing.ocean_thermal.process_thermal_forcing.processthermalforcing method)": [[217, "compass.landice.tests.ismip6_forcing.ocean_thermal.process_thermal_forcing.ProcessThermalForcing.setup"]], "kangerlussuaq (class in compass.landice.tests.kangerlussuaq)": [[218, "compass.landice.tests.kangerlussuaq.Kangerlussuaq"]], "__init__() (compass.landice.tests.kangerlussuaq.kangerlussuaq method)": [[218, "compass.landice.tests.kangerlussuaq.Kangerlussuaq.__init__"]], "mesh (class in compass.landice.tests.kangerlussuaq.mesh)": [[219, "compass.landice.tests.kangerlussuaq.mesh.Mesh"]], "__init__() (compass.landice.tests.kangerlussuaq.mesh.mesh method)": [[219, "compass.landice.tests.kangerlussuaq.mesh.Mesh.__init__"]], "run() (compass.landice.tests.kangerlussuaq.mesh.mesh method)": [[220, "compass.landice.tests.kangerlussuaq.mesh.Mesh.run"]], "meshgen (class in compass.landice.tests.kangerlussuaq.mesh_gen)": [[221, "compass.landice.tests.kangerlussuaq.mesh_gen.MeshGen"]], "__init__() (compass.landice.tests.kangerlussuaq.mesh_gen.meshgen method)": [[221, "compass.landice.tests.kangerlussuaq.mesh_gen.MeshGen.__init__"]], "run() (compass.landice.tests.kangerlussuaq.mesh_gen.meshgen method)": [[222, "compass.landice.tests.kangerlussuaq.mesh_gen.MeshGen.run"]], "kogebugts (class in compass.landice.tests.koge_bugt_s)": [[223, "compass.landice.tests.koge_bugt_s.KogeBugtS"]], "__init__() (compass.landice.tests.koge_bugt_s.kogebugts method)": [[223, "compass.landice.tests.koge_bugt_s.KogeBugtS.__init__"]], "mesh (class in compass.landice.tests.koge_bugt_s.mesh)": [[224, "compass.landice.tests.koge_bugt_s.mesh.Mesh"]], "__init__() (compass.landice.tests.koge_bugt_s.mesh.mesh method)": [[224, "compass.landice.tests.koge_bugt_s.mesh.Mesh.__init__"]], "run() (compass.landice.tests.koge_bugt_s.mesh.mesh method)": [[225, "compass.landice.tests.koge_bugt_s.mesh.Mesh.run"]], "meshgen (class in compass.landice.tests.koge_bugt_s.mesh_gen)": [[226, "compass.landice.tests.koge_bugt_s.mesh_gen.MeshGen"]], "__init__() (compass.landice.tests.koge_bugt_s.mesh_gen.meshgen method)": [[226, "compass.landice.tests.koge_bugt_s.mesh_gen.MeshGen.__init__"]], "run() (compass.landice.tests.koge_bugt_s.mesh_gen.meshgen method)": [[227, "compass.landice.tests.koge_bugt_s.mesh_gen.MeshGen.run"]], "mismipplus (class in compass.landice.tests.mismipplus)": [[228, "compass.landice.tests.mismipplus.MISMIPplus"]], "__init__() (compass.landice.tests.mismipplus.mismipplus method)": [[228, "compass.landice.tests.mismipplus.MISMIPplus.__init__"]], "runmodel (class in compass.landice.tests.mismipplus.run_model)": [[229, "compass.landice.tests.mismipplus.run_model.RunModel"]], "__init__() (compass.landice.tests.mismipplus.run_model.runmodel method)": [[229, "compass.landice.tests.mismipplus.run_model.RunModel.__init__"]], "run() (compass.landice.tests.mismipplus.run_model.runmodel method)": [[230, "compass.landice.tests.mismipplus.run_model.RunModel.run"]], "setup() (compass.landice.tests.mismipplus.run_model.runmodel method)": [[231, "compass.landice.tests.mismipplus.run_model.RunModel.setup"]], "smoketest (class in compass.landice.tests.mismipplus.smoke_test)": [[232, "compass.landice.tests.mismipplus.smoke_test.SmokeTest"]], "__init__() (compass.landice.tests.mismipplus.smoke_test.smoketest method)": [[232, "compass.landice.tests.mismipplus.smoke_test.SmokeTest.__init__"]], "run() (compass.landice.tests.mismipplus.smoke_test.smoketest method)": [[233, "compass.landice.tests.mismipplus.smoke_test.SmokeTest.run"]], "thwaites (class in compass.landice.tests.thwaites)": [[234, "compass.landice.tests.thwaites.Thwaites"]], "__init__() (compass.landice.tests.thwaites.thwaites method)": [[234, "compass.landice.tests.thwaites.Thwaites.__init__"]], "decompositiontest (class in compass.landice.tests.thwaites.decomposition_test)": [[235, "compass.landice.tests.thwaites.decomposition_test.DecompositionTest"]], "__init__() (compass.landice.tests.thwaites.decomposition_test.decompositiontest method)": [[235, "compass.landice.tests.thwaites.decomposition_test.DecompositionTest.__init__"]], "run() (compass.landice.tests.thwaites.decomposition_test.decompositiontest method)": [[236, "compass.landice.tests.thwaites.decomposition_test.DecompositionTest.run"]], "restarttest (class in compass.landice.tests.thwaites.restart_test)": [[237, "compass.landice.tests.thwaites.restart_test.RestartTest"]], "__init__() (compass.landice.tests.thwaites.restart_test.restarttest method)": [[237, "compass.landice.tests.thwaites.restart_test.RestartTest.__init__"]], "run() (compass.landice.tests.thwaites.restart_test.restarttest method)": [[238, "compass.landice.tests.thwaites.restart_test.RestartTest.run"]], "runmodel (class in compass.landice.tests.thwaites.run_model)": [[239, "compass.landice.tests.thwaites.run_model.RunModel"]], "__init__() (compass.landice.tests.thwaites.run_model.runmodel method)": [[239, "compass.landice.tests.thwaites.run_model.RunModel.__init__"]], "run() (compass.landice.tests.thwaites.run_model.runmodel method)": [[240, "compass.landice.tests.thwaites.run_model.RunModel.run"]], "setup() (compass.landice.tests.thwaites.run_model.runmodel method)": [[241, "compass.landice.tests.thwaites.run_model.RunModel.setup"]], "ocean (class in compass.ocean)": [[265, "compass.ocean.Ocean"]], "__init__() (compass.ocean.ocean method)": [[265, "compass.ocean.Ocean.__init__"]], "compute_haney_number() (in module compass.ocean.haney)": [[266, "compass.ocean.haney.compute_haney_number"]], "adjust_ssh() (in module compass.ocean.iceshelf)": [[267, "compass.ocean.iceshelf.adjust_ssh"]], "compute_land_ice_pressure_and_draft() (in module compass.ocean.iceshelf)": [[268, "compass.ocean.iceshelf.compute_land_ice_pressure_and_draft"]], "cullmeshstep (class in compass.ocean.mesh.cull)": [[269, "compass.ocean.mesh.cull.CullMeshStep"]], "__init__() (compass.ocean.mesh.cull.cullmeshstep method)": [[269, "compass.ocean.mesh.cull.CullMeshStep.__init__"]], "run() (compass.ocean.mesh.cull.cullmeshstep method)": [[270, "compass.ocean.mesh.cull.CullMeshStep.run"]], "setup() (compass.ocean.mesh.cull.cullmeshstep method)": [[271, "compass.ocean.mesh.cull.CullMeshStep.setup"]], "cull_mesh() (in module compass.ocean.mesh.cull)": [[272, "compass.ocean.mesh.cull.cull_mesh"]], "floodplainmeshstep (class in compass.ocean.mesh.floodplain)": [[273, "compass.ocean.mesh.floodplain.FloodplainMeshStep"]], "__init__() (compass.ocean.mesh.floodplain.floodplainmeshstep method)": [[273, "compass.ocean.mesh.floodplain.FloodplainMeshStep.__init__"]], "run() (compass.ocean.mesh.floodplain.floodplainmeshstep method)": [[274, "compass.ocean.mesh.floodplain.FloodplainMeshStep.run"]], "remap_particles() (in module compass.ocean.particles)": [[275, "compass.ocean.particles.remap_particles"]], "write() (in module compass.ocean.particles)": [[276, "compass.ocean.particles.write"]], "plot_initial_state() (in module compass.ocean.plot)": [[277, "compass.ocean.plot.plot_initial_state"]], "plot_vertical_grid() (in module compass.ocean.plot)": [[278, "compass.ocean.plot.plot_vertical_grid"]], "baroclinicchannel (class in compass.ocean.tests.baroclinic_channel)": [[279, "compass.ocean.tests.baroclinic_channel.BaroclinicChannel"]], "__init__() (compass.ocean.tests.baroclinic_channel.baroclinicchannel method)": [[279, "compass.ocean.tests.baroclinic_channel.BaroclinicChannel.__init__"]], "configure() (in module compass.ocean.tests.baroclinic_channel)": [[280, "compass.ocean.tests.baroclinic_channel.configure"]], "decomptest (class in compass.ocean.tests.baroclinic_channel.decomp_test)": [[281, "compass.ocean.tests.baroclinic_channel.decomp_test.DecompTest"]], "__init__() (compass.ocean.tests.baroclinic_channel.decomp_test.decomptest method)": [[281, "compass.ocean.tests.baroclinic_channel.decomp_test.DecompTest.__init__"]], "configure() (compass.ocean.tests.baroclinic_channel.decomp_test.decomptest method)": [[282, "compass.ocean.tests.baroclinic_channel.decomp_test.DecompTest.configure"]], "run() (compass.ocean.tests.baroclinic_channel.decomp_test.decomptest method)": [[283, "compass.ocean.tests.baroclinic_channel.decomp_test.DecompTest.run"]], "default (class in compass.ocean.tests.baroclinic_channel.default)": [[284, "compass.ocean.tests.baroclinic_channel.default.Default"]], "__init__() (compass.ocean.tests.baroclinic_channel.default.default method)": [[284, "compass.ocean.tests.baroclinic_channel.default.Default.__init__"]], "configure() (compass.ocean.tests.baroclinic_channel.default.default method)": [[285, "compass.ocean.tests.baroclinic_channel.default.Default.configure"]], "run() (compass.ocean.tests.baroclinic_channel.default.default method)": [[286, "compass.ocean.tests.baroclinic_channel.default.Default.run"]], "forward (class in compass.ocean.tests.baroclinic_channel.forward)": [[287, "compass.ocean.tests.baroclinic_channel.forward.Forward"]], "__init__() (compass.ocean.tests.baroclinic_channel.forward.forward method)": [[287, "compass.ocean.tests.baroclinic_channel.forward.Forward.__init__"]], "run() (compass.ocean.tests.baroclinic_channel.forward.forward method)": [[288, "compass.ocean.tests.baroclinic_channel.forward.Forward.run"]], "setup() (compass.ocean.tests.baroclinic_channel.forward.forward method)": [[289, "compass.ocean.tests.baroclinic_channel.forward.Forward.setup"]], "initialstate (class in compass.ocean.tests.baroclinic_channel.initial_state)": [[290, "compass.ocean.tests.baroclinic_channel.initial_state.InitialState"]], "__init__() (compass.ocean.tests.baroclinic_channel.initial_state.initialstate method)": [[290, "compass.ocean.tests.baroclinic_channel.initial_state.InitialState.__init__"]], "run() (compass.ocean.tests.baroclinic_channel.initial_state.initialstate method)": [[291, "compass.ocean.tests.baroclinic_channel.initial_state.InitialState.run"]], "setup() (compass.ocean.tests.baroclinic_channel.initial_state.initialstate method)": [[292, "compass.ocean.tests.baroclinic_channel.initial_state.InitialState.setup"]], "restarttest (class in compass.ocean.tests.baroclinic_channel.restart_test)": [[293, "compass.ocean.tests.baroclinic_channel.restart_test.RestartTest"]], "__init__() (compass.ocean.tests.baroclinic_channel.restart_test.restarttest method)": [[293, "compass.ocean.tests.baroclinic_channel.restart_test.RestartTest.__init__"]], "configure() (compass.ocean.tests.baroclinic_channel.restart_test.restarttest method)": [[294, "compass.ocean.tests.baroclinic_channel.restart_test.RestartTest.configure"]], "run() (compass.ocean.tests.baroclinic_channel.restart_test.restarttest method)": [[295, "compass.ocean.tests.baroclinic_channel.restart_test.RestartTest.run"]], "rpetest (class in compass.ocean.tests.baroclinic_channel.rpe_test)": [[296, "compass.ocean.tests.baroclinic_channel.rpe_test.RpeTest"]], "__init__() (compass.ocean.tests.baroclinic_channel.rpe_test.rpetest method)": [[296, "compass.ocean.tests.baroclinic_channel.rpe_test.RpeTest.__init__"]], "configure() (compass.ocean.tests.baroclinic_channel.rpe_test.rpetest method)": [[297, "compass.ocean.tests.baroclinic_channel.rpe_test.RpeTest.configure"]], "run() (compass.ocean.tests.baroclinic_channel.rpe_test.rpetest method)": [[298, "compass.ocean.tests.baroclinic_channel.rpe_test.RpeTest.run"]], "analysis (class in compass.ocean.tests.baroclinic_channel.rpe_test.analysis)": [[299, "compass.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis"]], "__init__() (compass.ocean.tests.baroclinic_channel.rpe_test.analysis.analysis method)": [[299, "compass.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.__init__"]], "run() (compass.ocean.tests.baroclinic_channel.rpe_test.analysis.analysis method)": [[300, "compass.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.run"]], "setup() (compass.ocean.tests.baroclinic_channel.rpe_test.analysis.analysis method)": [[301, "compass.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.setup"]], "threadstest (class in compass.ocean.tests.baroclinic_channel.threads_test)": [[302, "compass.ocean.tests.baroclinic_channel.threads_test.ThreadsTest"]], "__init__() (compass.ocean.tests.baroclinic_channel.threads_test.threadstest method)": [[302, "compass.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.__init__"]], "configure() (compass.ocean.tests.baroclinic_channel.threads_test.threadstest method)": [[303, "compass.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.configure"]], "run() (compass.ocean.tests.baroclinic_channel.threads_test.threadstest method)": [[304, "compass.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.run"]], "dambreak (class in compass.ocean.tests.dam_break)": [[305, "compass.ocean.tests.dam_break.DamBreak"]], "__init__() (compass.ocean.tests.dam_break.dambreak method)": [[305, "compass.ocean.tests.dam_break.DamBreak.__init__"]], "default (class in compass.ocean.tests.dam_break.default)": [[306, "compass.ocean.tests.dam_break.default.Default"]], "__init__() (compass.ocean.tests.dam_break.default.default method)": [[306, "compass.ocean.tests.dam_break.default.Default.__init__"]], "configure() (compass.ocean.tests.dam_break.default.default method)": [[307, "compass.ocean.tests.dam_break.default.Default.configure"]], "forward (class in compass.ocean.tests.dam_break.forward)": [[308, "compass.ocean.tests.dam_break.forward.Forward"]], "__init__() (compass.ocean.tests.dam_break.forward.forward method)": [[308, "compass.ocean.tests.dam_break.forward.Forward.__init__"]], "run() (compass.ocean.tests.dam_break.forward.forward method)": [[309, "compass.ocean.tests.dam_break.forward.Forward.run"]], "initialstate (class in compass.ocean.tests.dam_break.initial_state)": [[310, "compass.ocean.tests.dam_break.initial_state.InitialState"]], "__init__() (compass.ocean.tests.dam_break.initial_state.initialstate method)": [[310, "compass.ocean.tests.dam_break.initial_state.InitialState.__init__"]], "run() (compass.ocean.tests.dam_break.initial_state.initialstate method)": [[311, "compass.ocean.tests.dam_break.initial_state.InitialState.run"]], "viz (class in compass.ocean.tests.dam_break.viz)": [[312, "compass.ocean.tests.dam_break.viz.Viz"]], "__init__() (compass.ocean.tests.dam_break.viz.viz method)": [[312, "compass.ocean.tests.dam_break.viz.Viz.__init__"]], "run() (compass.ocean.tests.dam_break.viz.viz method)": [[313, "compass.ocean.tests.dam_break.viz.Viz.run"]], "dryingslope (class in compass.ocean.tests.drying_slope)": [[314, "compass.ocean.tests.drying_slope.DryingSlope"]], "__init__() (compass.ocean.tests.drying_slope.dryingslope method)": [[314, "compass.ocean.tests.drying_slope.DryingSlope.__init__"]], "default (class in compass.ocean.tests.drying_slope.default)": [[315, "compass.ocean.tests.drying_slope.default.Default"]], "__init__() (compass.ocean.tests.drying_slope.default.default method)": [[315, "compass.ocean.tests.drying_slope.default.Default.__init__"]], "configure() (compass.ocean.tests.drying_slope.default.default method)": [[316, "compass.ocean.tests.drying_slope.default.Default.configure"]], "forward (class in compass.ocean.tests.drying_slope.forward)": [[317, "compass.ocean.tests.drying_slope.forward.Forward"]], "__init__() (compass.ocean.tests.drying_slope.forward.forward method)": [[317, "compass.ocean.tests.drying_slope.forward.Forward.__init__"]], "run() (compass.ocean.tests.drying_slope.forward.forward method)": [[318, "compass.ocean.tests.drying_slope.forward.Forward.run"]], "initialstate (class in compass.ocean.tests.drying_slope.initial_state)": [[319, "compass.ocean.tests.drying_slope.initial_state.InitialState"]], "__init__() (compass.ocean.tests.drying_slope.initial_state.initialstate method)": [[319, "compass.ocean.tests.drying_slope.initial_state.InitialState.__init__"]], "run() (compass.ocean.tests.drying_slope.initial_state.initialstate method)": [[320, "compass.ocean.tests.drying_slope.initial_state.InitialState.run"]], "viz (class in compass.ocean.tests.drying_slope.viz)": [[321, "compass.ocean.tests.drying_slope.viz.Viz"]], "__init__() (compass.ocean.tests.drying_slope.viz.viz method)": [[321, "compass.ocean.tests.drying_slope.viz.Viz.__init__"]], "run() (compass.ocean.tests.drying_slope.viz.viz method)": [[322, "compass.ocean.tests.drying_slope.viz.Viz.run"]], "globalconvergence (class in compass.ocean.tests.global_convergence)": [[323, "compass.ocean.tests.global_convergence.GlobalConvergence"]], "__init__() (compass.ocean.tests.global_convergence.globalconvergence method)": [[323, "compass.ocean.tests.global_convergence.GlobalConvergence.__init__"]], "cosinebell (class in compass.ocean.tests.global_convergence.cosine_bell)": [[324, "compass.ocean.tests.global_convergence.cosine_bell.CosineBell"]], "__init__() (compass.ocean.tests.global_convergence.cosine_bell.cosinebell method)": [[324, "compass.ocean.tests.global_convergence.cosine_bell.CosineBell.__init__"]], "configure() (compass.ocean.tests.global_convergence.cosine_bell.cosinebell method)": [[325, "compass.ocean.tests.global_convergence.cosine_bell.CosineBell.configure"]], "run() (compass.ocean.tests.global_convergence.cosine_bell.cosinebell method)": [[326, "compass.ocean.tests.global_convergence.cosine_bell.CosineBell.run"]], "analysis (class in compass.ocean.tests.global_convergence.cosine_bell.analysis)": [[327, "compass.ocean.tests.global_convergence.cosine_bell.analysis.Analysis"]], "__init__() (compass.ocean.tests.global_convergence.cosine_bell.analysis.analysis method)": [[327, "compass.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.__init__"]], "rmse() (compass.ocean.tests.global_convergence.cosine_bell.analysis.analysis method)": [[328, "compass.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rmse"]], "run() (compass.ocean.tests.global_convergence.cosine_bell.analysis.analysis method)": [[329, "compass.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.run"]], "forward (class in compass.ocean.tests.global_convergence.cosine_bell.forward)": [[330, "compass.ocean.tests.global_convergence.cosine_bell.forward.Forward"]], "__init__() (compass.ocean.tests.global_convergence.cosine_bell.forward.forward method)": [[330, "compass.ocean.tests.global_convergence.cosine_bell.forward.Forward.__init__"]], "get_dt() (compass.ocean.tests.global_convergence.cosine_bell.forward.forward method)": [[331, "compass.ocean.tests.global_convergence.cosine_bell.forward.Forward.get_dt"]], "run() (compass.ocean.tests.global_convergence.cosine_bell.forward.forward method)": [[332, "compass.ocean.tests.global_convergence.cosine_bell.forward.Forward.run"]], "setup() (compass.ocean.tests.global_convergence.cosine_bell.forward.forward method)": [[333, "compass.ocean.tests.global_convergence.cosine_bell.forward.Forward.setup"]], "init (class in compass.ocean.tests.global_convergence.cosine_bell.init)": [[334, "compass.ocean.tests.global_convergence.cosine_bell.init.Init"]], "__init__() (compass.ocean.tests.global_convergence.cosine_bell.init.init method)": [[334, "compass.ocean.tests.global_convergence.cosine_bell.init.Init.__init__"]], "run() (compass.ocean.tests.global_convergence.cosine_bell.init.init method)": [[335, "compass.ocean.tests.global_convergence.cosine_bell.init.Init.run"]], "globalocean (class in compass.ocean.tests.global_ocean)": [[336, "compass.ocean.tests.global_ocean.GlobalOcean"]], "__init__() (compass.ocean.tests.global_ocean.globalocean method)": [[336, "compass.ocean.tests.global_ocean.GlobalOcean.__init__"]], "analysistest (class in compass.ocean.tests.global_ocean.analysis_test)": [[337, "compass.ocean.tests.global_ocean.analysis_test.AnalysisTest"]], "__init__() (compass.ocean.tests.global_ocean.analysis_test.analysistest method)": [[337, "compass.ocean.tests.global_ocean.analysis_test.AnalysisTest.__init__"]], "configure() (compass.ocean.tests.global_ocean.analysis_test.analysistest method)": [[338, "compass.ocean.tests.global_ocean.analysis_test.AnalysisTest.configure"]], "run() (compass.ocean.tests.global_ocean.analysis_test.analysistest method)": [[339, "compass.ocean.tests.global_ocean.analysis_test.AnalysisTest.run"]], "compass.ocean.tests.global_ocean.configure": [[340, "module-compass.ocean.tests.global_ocean.configure"]], "configure_global_ocean() (in module compass.ocean.tests.global_ocean.configure)": [[341, "compass.ocean.tests.global_ocean.configure.configure_global_ocean"]], "dailyoutputtest (class in compass.ocean.tests.global_ocean.daily_output_test)": [[342, "compass.ocean.tests.global_ocean.daily_output_test.DailyOutputTest"]], "__init__() (compass.ocean.tests.global_ocean.daily_output_test.dailyoutputtest method)": [[342, "compass.ocean.tests.global_ocean.daily_output_test.DailyOutputTest.__init__"]], "configure() (compass.ocean.tests.global_ocean.daily_output_test.dailyoutputtest method)": [[343, "compass.ocean.tests.global_ocean.daily_output_test.DailyOutputTest.configure"]], "run() (compass.ocean.tests.global_ocean.daily_output_test.dailyoutputtest method)": [[344, "compass.ocean.tests.global_ocean.daily_output_test.DailyOutputTest.run"]], "decomptest (class in compass.ocean.tests.global_ocean.decomp_test)": [[345, "compass.ocean.tests.global_ocean.decomp_test.DecompTest"]], "__init__() (compass.ocean.tests.global_ocean.decomp_test.decomptest method)": [[345, "compass.ocean.tests.global_ocean.decomp_test.DecompTest.__init__"]], "configure() (compass.ocean.tests.global_ocean.decomp_test.decomptest method)": [[346, "compass.ocean.tests.global_ocean.decomp_test.DecompTest.configure"]], "run() (compass.ocean.tests.global_ocean.decomp_test.decomptest method)": [[347, "compass.ocean.tests.global_ocean.decomp_test.DecompTest.run"]], "dynamicadjustment (class in compass.ocean.tests.global_ocean.dynamic_adjustment)": [[348, "compass.ocean.tests.global_ocean.dynamic_adjustment.DynamicAdjustment"]], "__init__() (compass.ocean.tests.global_ocean.dynamic_adjustment.dynamicadjustment method)": [[348, "compass.ocean.tests.global_ocean.dynamic_adjustment.DynamicAdjustment.__init__"]], "run() (compass.ocean.tests.global_ocean.dynamic_adjustment.dynamicadjustment method)": [[349, "compass.ocean.tests.global_ocean.dynamic_adjustment.DynamicAdjustment.run"]], "filesfore3sm (class in compass.ocean.tests.global_ocean.files_for_e3sm)": [[350, "compass.ocean.tests.global_ocean.files_for_e3sm.FilesForE3SM"]], "__init__() (compass.ocean.tests.global_ocean.files_for_e3sm.filesfore3sm method)": [[350, "compass.ocean.tests.global_ocean.files_for_e3sm.FilesForE3SM.__init__"]], "configure() (compass.ocean.tests.global_ocean.files_for_e3sm.filesfore3sm method)": [[351, "compass.ocean.tests.global_ocean.files_for_e3sm.FilesForE3SM.configure"]], "run() (compass.ocean.tests.global_ocean.files_for_e3sm.filesfore3sm method)": [[352, "compass.ocean.tests.global_ocean.files_for_e3sm.FilesForE3SM.run"]], "diagnosticsfiles (class in compass.ocean.tests.global_ocean.files_for_e3sm.diagnostics_files)": [[353, "compass.ocean.tests.global_ocean.files_for_e3sm.diagnostics_files.DiagnosticsFiles"]], "__init__() (compass.ocean.tests.global_ocean.files_for_e3sm.diagnostics_files.diagnosticsfiles method)": [[353, "compass.ocean.tests.global_ocean.files_for_e3sm.diagnostics_files.DiagnosticsFiles.__init__"]], "run() (compass.ocean.tests.global_ocean.files_for_e3sm.diagnostics_files.diagnosticsfiles method)": [[354, "compass.ocean.tests.global_ocean.files_for_e3sm.diagnostics_files.DiagnosticsFiles.run"]], "oceangraphpartition (class in compass.ocean.tests.global_ocean.files_for_e3sm.ocean_graph_partition)": [[355, "compass.ocean.tests.global_ocean.files_for_e3sm.ocean_graph_partition.OceanGraphPartition"]], "__init__() (compass.ocean.tests.global_ocean.files_for_e3sm.ocean_graph_partition.oceangraphpartition method)": [[355, "compass.ocean.tests.global_ocean.files_for_e3sm.ocean_graph_partition.OceanGraphPartition.__init__"]], "run() (compass.ocean.tests.global_ocean.files_for_e3sm.ocean_graph_partition.oceangraphpartition method)": [[356, "compass.ocean.tests.global_ocean.files_for_e3sm.ocean_graph_partition.OceanGraphPartition.run"]], "oceaninitialcondition (class in compass.ocean.tests.global_ocean.files_for_e3sm.ocean_initial_condition)": [[357, "compass.ocean.tests.global_ocean.files_for_e3sm.ocean_initial_condition.OceanInitialCondition"]], "__init__() (compass.ocean.tests.global_ocean.files_for_e3sm.ocean_initial_condition.oceaninitialcondition method)": [[357, "compass.ocean.tests.global_ocean.files_for_e3sm.ocean_initial_condition.OceanInitialCondition.__init__"]], "run() (compass.ocean.tests.global_ocean.files_for_e3sm.ocean_initial_condition.oceaninitialcondition method)": [[358, "compass.ocean.tests.global_ocean.files_for_e3sm.ocean_initial_condition.OceanInitialCondition.run"]], "scrip (class in compass.ocean.tests.global_ocean.files_for_e3sm.scrip)": [[359, "compass.ocean.tests.global_ocean.files_for_e3sm.scrip.Scrip"]], "__init__() (compass.ocean.tests.global_ocean.files_for_e3sm.scrip.scrip method)": [[359, "compass.ocean.tests.global_ocean.files_for_e3sm.scrip.Scrip.__init__"]], "run() (compass.ocean.tests.global_ocean.files_for_e3sm.scrip.scrip method)": [[360, "compass.ocean.tests.global_ocean.files_for_e3sm.scrip.Scrip.run"]], "seaiceinitialcondition (class in compass.ocean.tests.global_ocean.files_for_e3sm.seaice_initial_condition)": [[361, "compass.ocean.tests.global_ocean.files_for_e3sm.seaice_initial_condition.SeaiceInitialCondition"]], "__init__() (compass.ocean.tests.global_ocean.files_for_e3sm.seaice_initial_condition.seaiceinitialcondition method)": [[361, "compass.ocean.tests.global_ocean.files_for_e3sm.seaice_initial_condition.SeaiceInitialCondition.__init__"]], "run() (compass.ocean.tests.global_ocean.files_for_e3sm.seaice_initial_condition.seaiceinitialcondition method)": [[362, "compass.ocean.tests.global_ocean.files_for_e3sm.seaice_initial_condition.SeaiceInitialCondition.run"]], "forwardstep (class in compass.ocean.tests.global_ocean.forward)": [[363, "compass.ocean.tests.global_ocean.forward.ForwardStep"]], "__init__() (compass.ocean.tests.global_ocean.forward.forwardstep method)": [[363, "compass.ocean.tests.global_ocean.forward.ForwardStep.__init__"]], "run() (compass.ocean.tests.global_ocean.forward.forwardstep method)": [[364, "compass.ocean.tests.global_ocean.forward.ForwardStep.run"]], "setup() (compass.ocean.tests.global_ocean.forward.forwardstep method)": [[365, "compass.ocean.tests.global_ocean.forward.ForwardStep.setup"]], "forwardtestcase (class in compass.ocean.tests.global_ocean.forward)": [[366, "compass.ocean.tests.global_ocean.forward.ForwardTestCase"]], "__init__() (compass.ocean.tests.global_ocean.forward.forwardtestcase method)": [[366, "compass.ocean.tests.global_ocean.forward.ForwardTestCase.__init__"]], "configure() (compass.ocean.tests.global_ocean.forward.forwardtestcase method)": [[367, "compass.ocean.tests.global_ocean.forward.ForwardTestCase.configure"]], "run() (compass.ocean.tests.global_ocean.forward.forwardtestcase method)": [[368, "compass.ocean.tests.global_ocean.forward.ForwardTestCase.run"]], "init (class in compass.ocean.tests.global_ocean.init)": [[369, "compass.ocean.tests.global_ocean.init.Init"]], "__init__() (compass.ocean.tests.global_ocean.init.init method)": [[369, "compass.ocean.tests.global_ocean.init.Init.__init__"]], "configure() (compass.ocean.tests.global_ocean.init.init method)": [[370, "compass.ocean.tests.global_ocean.init.Init.configure"]], "run() (compass.ocean.tests.global_ocean.init.init method)": [[371, "compass.ocean.tests.global_ocean.init.Init.run"]], "initialstate (class in compass.ocean.tests.global_ocean.init.initial_state)": [[372, "compass.ocean.tests.global_ocean.init.initial_state.InitialState"]], "__init__() (compass.ocean.tests.global_ocean.init.initial_state.initialstate method)": [[372, "compass.ocean.tests.global_ocean.init.initial_state.InitialState.__init__"]], "run() (compass.ocean.tests.global_ocean.init.initial_state.initialstate method)": [[373, "compass.ocean.tests.global_ocean.init.initial_state.InitialState.run"]], "setup() (compass.ocean.tests.global_ocean.init.initial_state.initialstate method)": [[374, "compass.ocean.tests.global_ocean.init.initial_state.InitialState.setup"]], "sshadjustment (class in compass.ocean.tests.global_ocean.init.ssh_adjustment)": [[375, "compass.ocean.tests.global_ocean.init.ssh_adjustment.SshAdjustment"]], "__init__() (compass.ocean.tests.global_ocean.init.ssh_adjustment.sshadjustment method)": [[375, "compass.ocean.tests.global_ocean.init.ssh_adjustment.SshAdjustment.__init__"]], "run() (compass.ocean.tests.global_ocean.init.ssh_adjustment.sshadjustment method)": [[376, "compass.ocean.tests.global_ocean.init.ssh_adjustment.SshAdjustment.run"]], "setup() (compass.ocean.tests.global_ocean.init.ssh_adjustment.sshadjustment method)": [[377, "compass.ocean.tests.global_ocean.init.ssh_adjustment.SshAdjustment.setup"]], "mesh (class in compass.ocean.tests.global_ocean.mesh)": [[378, "compass.ocean.tests.global_ocean.mesh.Mesh"]], "__init__() (compass.ocean.tests.global_ocean.mesh.mesh method)": [[378, "compass.ocean.tests.global_ocean.mesh.Mesh.__init__"]], "configure() (compass.ocean.tests.global_ocean.mesh.mesh method)": [[379, "compass.ocean.tests.global_ocean.mesh.Mesh.configure"]], "run() (compass.ocean.tests.global_ocean.mesh.mesh method)": [[380, "compass.ocean.tests.global_ocean.mesh.Mesh.run"]], "ec30to60basemesh (class in compass.ocean.tests.global_ocean.mesh.ec30to60)": [[381, "compass.ocean.tests.global_ocean.mesh.ec30to60.EC30to60BaseMesh"]], "__init__() (compass.ocean.tests.global_ocean.mesh.ec30to60.ec30to60basemesh method)": [[381, "compass.ocean.tests.global_ocean.mesh.ec30to60.EC30to60BaseMesh.__init__"]], "build_cell_width_lat_lon() (compass.ocean.tests.global_ocean.mesh.ec30to60.ec30to60basemesh method)": [[382, "compass.ocean.tests.global_ocean.mesh.ec30to60.EC30to60BaseMesh.build_cell_width_lat_lon"]], "ec30to60dynamicadjustment (class in compass.ocean.tests.global_ocean.mesh.ec30to60.dynamic_adjustment)": [[383, "compass.ocean.tests.global_ocean.mesh.ec30to60.dynamic_adjustment.EC30to60DynamicAdjustment"]], "__init__() (compass.ocean.tests.global_ocean.mesh.ec30to60.dynamic_adjustment.ec30to60dynamicadjustment method)": [[383, "compass.ocean.tests.global_ocean.mesh.ec30to60.dynamic_adjustment.EC30to60DynamicAdjustment.__init__"]], "configure() (compass.ocean.tests.global_ocean.mesh.ec30to60.dynamic_adjustment.ec30to60dynamicadjustment method)": [[384, "compass.ocean.tests.global_ocean.mesh.ec30to60.dynamic_adjustment.EC30to60DynamicAdjustment.configure"]], "run() (compass.ocean.tests.global_ocean.mesh.ec30to60.dynamic_adjustment.ec30to60dynamicadjustment method)": [[385, "compass.ocean.tests.global_ocean.mesh.ec30to60.dynamic_adjustment.EC30to60DynamicAdjustment.run"]], "qu240dynamicadjustment (class in compass.ocean.tests.global_ocean.mesh.qu240.dynamic_adjustment)": [[386, "compass.ocean.tests.global_ocean.mesh.qu240.dynamic_adjustment.QU240DynamicAdjustment"]], "__init__() (compass.ocean.tests.global_ocean.mesh.qu240.dynamic_adjustment.qu240dynamicadjustment method)": [[386, "compass.ocean.tests.global_ocean.mesh.qu240.dynamic_adjustment.QU240DynamicAdjustment.__init__"]], "configure() (compass.ocean.tests.global_ocean.mesh.qu240.dynamic_adjustment.qu240dynamicadjustment method)": [[387, "compass.ocean.tests.global_ocean.mesh.qu240.dynamic_adjustment.QU240DynamicAdjustment.configure"]], "run() (compass.ocean.tests.global_ocean.mesh.qu240.dynamic_adjustment.qu240dynamicadjustment method)": [[388, "compass.ocean.tests.global_ocean.mesh.qu240.dynamic_adjustment.QU240DynamicAdjustment.run"]], "so12to60basemesh (class in compass.ocean.tests.global_ocean.mesh.so12to60)": [[389, "compass.ocean.tests.global_ocean.mesh.so12to60.SO12to60BaseMesh"]], "__init__() (compass.ocean.tests.global_ocean.mesh.so12to60.so12to60basemesh method)": [[389, "compass.ocean.tests.global_ocean.mesh.so12to60.SO12to60BaseMesh.__init__"]], "build_cell_width_lat_lon() (compass.ocean.tests.global_ocean.mesh.so12to60.so12to60basemesh method)": [[390, "compass.ocean.tests.global_ocean.mesh.so12to60.SO12to60BaseMesh.build_cell_width_lat_lon"]], "so12to60dynamicadjustment (class in compass.ocean.tests.global_ocean.mesh.so12to60.dynamic_adjustment)": [[391, "compass.ocean.tests.global_ocean.mesh.so12to60.dynamic_adjustment.SO12to60DynamicAdjustment"]], "__init__() (compass.ocean.tests.global_ocean.mesh.so12to60.dynamic_adjustment.so12to60dynamicadjustment method)": [[391, "compass.ocean.tests.global_ocean.mesh.so12to60.dynamic_adjustment.SO12to60DynamicAdjustment.__init__"]], "configure() (compass.ocean.tests.global_ocean.mesh.so12to60.dynamic_adjustment.so12to60dynamicadjustment method)": [[392, "compass.ocean.tests.global_ocean.mesh.so12to60.dynamic_adjustment.SO12to60DynamicAdjustment.configure"]], "run() (compass.ocean.tests.global_ocean.mesh.so12to60.dynamic_adjustment.so12to60dynamicadjustment method)": [[393, "compass.ocean.tests.global_ocean.mesh.so12to60.dynamic_adjustment.SO12to60DynamicAdjustment.run"]], "wc14basemesh (class in compass.ocean.tests.global_ocean.mesh.wc14)": [[394, "compass.ocean.tests.global_ocean.mesh.wc14.WC14BaseMesh"]], "__init__() (compass.ocean.tests.global_ocean.mesh.wc14.wc14basemesh method)": [[394, "compass.ocean.tests.global_ocean.mesh.wc14.WC14BaseMesh.__init__"]], "build_cell_width_lat_lon() (compass.ocean.tests.global_ocean.mesh.wc14.wc14basemesh method)": [[395, "compass.ocean.tests.global_ocean.mesh.wc14.WC14BaseMesh.build_cell_width_lat_lon"]], "wc14dynamicadjustment (class in compass.ocean.tests.global_ocean.mesh.wc14.dynamic_adjustment)": [[396, "compass.ocean.tests.global_ocean.mesh.wc14.dynamic_adjustment.WC14DynamicAdjustment"]], "__init__() (compass.ocean.tests.global_ocean.mesh.wc14.dynamic_adjustment.wc14dynamicadjustment method)": [[396, "compass.ocean.tests.global_ocean.mesh.wc14.dynamic_adjustment.WC14DynamicAdjustment.__init__"]], "configure() (compass.ocean.tests.global_ocean.mesh.wc14.dynamic_adjustment.wc14dynamicadjustment method)": [[397, "compass.ocean.tests.global_ocean.mesh.wc14.dynamic_adjustment.WC14DynamicAdjustment.configure"]], "run() (compass.ocean.tests.global_ocean.mesh.wc14.dynamic_adjustment.wc14dynamicadjustment method)": [[398, "compass.ocean.tests.global_ocean.mesh.wc14.dynamic_adjustment.WC14DynamicAdjustment.run"]], "add_mesh_and_init_metadata() (in module compass.ocean.tests.global_ocean.metadata)": [[399, "compass.ocean.tests.global_ocean.metadata.add_mesh_and_init_metadata"]], "get_e3sm_mesh_names() (in module compass.ocean.tests.global_ocean.metadata)": [[400, "compass.ocean.tests.global_ocean.metadata.get_e3sm_mesh_names"]], "performancetest (class in compass.ocean.tests.global_ocean.performance_test)": [[401, "compass.ocean.tests.global_ocean.performance_test.PerformanceTest"]], "__init__() (compass.ocean.tests.global_ocean.performance_test.performancetest method)": [[401, "compass.ocean.tests.global_ocean.performance_test.PerformanceTest.__init__"]], "configure() (compass.ocean.tests.global_ocean.performance_test.performancetest method)": [[402, "compass.ocean.tests.global_ocean.performance_test.PerformanceTest.configure"]], "run() (compass.ocean.tests.global_ocean.performance_test.performancetest method)": [[403, "compass.ocean.tests.global_ocean.performance_test.PerformanceTest.run"]], "restarttest (class in compass.ocean.tests.global_ocean.restart_test)": [[404, "compass.ocean.tests.global_ocean.restart_test.RestartTest"]], "__init__() (compass.ocean.tests.global_ocean.restart_test.restarttest method)": [[404, "compass.ocean.tests.global_ocean.restart_test.RestartTest.__init__"]], "configure() (compass.ocean.tests.global_ocean.restart_test.restarttest method)": [[405, "compass.ocean.tests.global_ocean.restart_test.RestartTest.configure"]], "run() (compass.ocean.tests.global_ocean.restart_test.restarttest method)": [[406, "compass.ocean.tests.global_ocean.restart_test.RestartTest.run"]], "threadstest (class in compass.ocean.tests.global_ocean.threads_test)": [[407, "compass.ocean.tests.global_ocean.threads_test.ThreadsTest"]], "__init__() (compass.ocean.tests.global_ocean.threads_test.threadstest method)": [[407, "compass.ocean.tests.global_ocean.threads_test.ThreadsTest.__init__"]], "configure() (compass.ocean.tests.global_ocean.threads_test.threadstest method)": [[408, "compass.ocean.tests.global_ocean.threads_test.ThreadsTest.configure"]], "run() (compass.ocean.tests.global_ocean.threads_test.threadstest method)": [[409, "compass.ocean.tests.global_ocean.threads_test.ThreadsTest.run"]], "gotm (class in compass.ocean.tests.gotm)": [[410, "compass.ocean.tests.gotm.Gotm"]], "__init__() (compass.ocean.tests.gotm.gotm method)": [[410, "compass.ocean.tests.gotm.Gotm.__init__"]], "default (class in compass.ocean.tests.gotm.default)": [[411, "compass.ocean.tests.gotm.default.Default"]], "__init__() (compass.ocean.tests.gotm.default.default method)": [[411, "compass.ocean.tests.gotm.default.Default.__init__"]], "validate() (compass.ocean.tests.gotm.default.default method)": [[412, "compass.ocean.tests.gotm.default.Default.validate"]], "analysis (class in compass.ocean.tests.gotm.default.analysis)": [[413, "compass.ocean.tests.gotm.default.analysis.Analysis"]], "__init__() (compass.ocean.tests.gotm.default.analysis.analysis method)": [[413, "compass.ocean.tests.gotm.default.analysis.Analysis.__init__"]], "run() (compass.ocean.tests.gotm.default.analysis.analysis method)": [[414, "compass.ocean.tests.gotm.default.analysis.Analysis.run"]], "forward (class in compass.ocean.tests.gotm.default.forward)": [[415, "compass.ocean.tests.gotm.default.forward.Forward"]], "__init__() (compass.ocean.tests.gotm.default.forward.forward method)": [[415, "compass.ocean.tests.gotm.default.forward.Forward.__init__"]], "run() (compass.ocean.tests.gotm.default.forward.forward method)": [[416, "compass.ocean.tests.gotm.default.forward.Forward.run"]], "init (class in compass.ocean.tests.gotm.default.init)": [[417, "compass.ocean.tests.gotm.default.init.Init"]], "__init__() (compass.ocean.tests.gotm.default.init.init method)": [[417, "compass.ocean.tests.gotm.default.init.Init.__init__"]], "run() (compass.ocean.tests.gotm.default.init.init method)": [[418, "compass.ocean.tests.gotm.default.init.Init.run"]], "hurricane (class in compass.ocean.tests.hurricane)": [[419, "compass.ocean.tests.hurricane.Hurricane"]], "__init__() (compass.ocean.tests.hurricane.hurricane method)": [[419, "compass.ocean.tests.hurricane.Hurricane.__init__"]], "analysis (class in compass.ocean.tests.hurricane.analysis)": [[420, "compass.ocean.tests.hurricane.analysis.Analysis"]], "__init__() (compass.ocean.tests.hurricane.analysis.analysis method)": [[420, "compass.ocean.tests.hurricane.analysis.Analysis.__init__"]], "read_pointstats() (compass.ocean.tests.hurricane.analysis.analysis method)": [[421, "compass.ocean.tests.hurricane.analysis.Analysis.read_pointstats"]], "read_station_data() (compass.ocean.tests.hurricane.analysis.analysis method)": [[422, "compass.ocean.tests.hurricane.analysis.Analysis.read_station_data"]], "read_station_file() (compass.ocean.tests.hurricane.analysis.analysis method)": [[423, "compass.ocean.tests.hurricane.analysis.Analysis.read_station_file"]], "run() (compass.ocean.tests.hurricane.analysis.analysis method)": [[424, "compass.ocean.tests.hurricane.analysis.Analysis.run"]], "setup() (compass.ocean.tests.hurricane.analysis.analysis method)": [[425, "compass.ocean.tests.hurricane.analysis.Analysis.setup"]], "compass.ocean.tests.hurricane.configure": [[426, "module-compass.ocean.tests.hurricane.configure"]], "forward (class in compass.ocean.tests.hurricane.forward)": [[427, "compass.ocean.tests.hurricane.forward.Forward"]], "__init__() (compass.ocean.tests.hurricane.forward.forward method)": [[427, "compass.ocean.tests.hurricane.forward.Forward.__init__"]], "configure() (compass.ocean.tests.hurricane.forward.forward method)": [[428, "compass.ocean.tests.hurricane.forward.Forward.configure"]], "run() (compass.ocean.tests.hurricane.forward.forward method)": [[429, "compass.ocean.tests.hurricane.forward.Forward.run"]], "forwardstep (class in compass.ocean.tests.hurricane.forward.forward)": [[430, "compass.ocean.tests.hurricane.forward.forward.ForwardStep"]], "__init__() (compass.ocean.tests.hurricane.forward.forward.forwardstep method)": [[430, "compass.ocean.tests.hurricane.forward.forward.ForwardStep.__init__"]], "run() (compass.ocean.tests.hurricane.forward.forward.forwardstep method)": [[431, "compass.ocean.tests.hurricane.forward.forward.ForwardStep.run"]], "setup() (compass.ocean.tests.hurricane.forward.forward.forwardstep method)": [[432, "compass.ocean.tests.hurricane.forward.forward.ForwardStep.setup"]], "init (class in compass.ocean.tests.hurricane.init)": [[433, "compass.ocean.tests.hurricane.init.Init"]], "__init__() (compass.ocean.tests.hurricane.init.init method)": [[433, "compass.ocean.tests.hurricane.init.Init.__init__"]], "configure() (compass.ocean.tests.hurricane.init.init method)": [[434, "compass.ocean.tests.hurricane.init.Init.configure"]], "run() (compass.ocean.tests.hurricane.init.init method)": [[435, "compass.ocean.tests.hurricane.init.Init.run"]], "createpointstatsfile (class in compass.ocean.tests.hurricane.init.create_pointstats_file)": [[436, "compass.ocean.tests.hurricane.init.create_pointstats_file.CreatePointstatsFile"]], "__init__() (compass.ocean.tests.hurricane.init.create_pointstats_file.createpointstatsfile method)": [[436, "compass.ocean.tests.hurricane.init.create_pointstats_file.CreatePointstatsFile.__init__"]], "create_pointstats_file() (compass.ocean.tests.hurricane.init.create_pointstats_file.createpointstatsfile method)": [[437, "compass.ocean.tests.hurricane.init.create_pointstats_file.CreatePointstatsFile.create_pointstats_file"]], "run() (compass.ocean.tests.hurricane.init.create_pointstats_file.createpointstatsfile method)": [[438, "compass.ocean.tests.hurricane.init.create_pointstats_file.CreatePointstatsFile.run"]], "initialstate (class in compass.ocean.tests.hurricane.init.initial_state)": [[439, "compass.ocean.tests.hurricane.init.initial_state.InitialState"]], "__init__() (compass.ocean.tests.hurricane.init.initial_state.initialstate method)": [[439, "compass.ocean.tests.hurricane.init.initial_state.InitialState.__init__"]], "run() (compass.ocean.tests.hurricane.init.initial_state.initialstate method)": [[440, "compass.ocean.tests.hurricane.init.initial_state.InitialState.run"]], "setup() (compass.ocean.tests.hurricane.init.initial_state.initialstate method)": [[441, "compass.ocean.tests.hurricane.init.initial_state.InitialState.setup"]], "interpolateatmforcing (class in compass.ocean.tests.hurricane.init.interpolate_atm_forcing)": [[442, "compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing"]], "__init__() (compass.ocean.tests.hurricane.init.interpolate_atm_forcing.interpolateatmforcing method)": [[442, "compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing.__init__"]], "interpolate_data_to_grid() (compass.ocean.tests.hurricane.init.interpolate_atm_forcing.interpolateatmforcing method)": [[443, "compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing.interpolate_data_to_grid"]], "plot_interp_data() (compass.ocean.tests.hurricane.init.interpolate_atm_forcing.interpolateatmforcing method)": [[444, "compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing.plot_interp_data"]], "run() (compass.ocean.tests.hurricane.init.interpolate_atm_forcing.interpolateatmforcing method)": [[445, "compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing.run"]], "write_to_file() (compass.ocean.tests.hurricane.init.interpolate_atm_forcing.interpolateatmforcing method)": [[446, "compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing.write_to_file"]], "mesh (class in compass.ocean.tests.hurricane.mesh)": [[447, "compass.ocean.tests.hurricane.mesh.Mesh"]], "__init__() (compass.ocean.tests.hurricane.mesh.mesh method)": [[447, "compass.ocean.tests.hurricane.mesh.Mesh.__init__"]], "configure() (compass.ocean.tests.hurricane.mesh.mesh method)": [[448, "compass.ocean.tests.hurricane.mesh.Mesh.configure"]], "run() (compass.ocean.tests.hurricane.mesh.mesh method)": [[449, "compass.ocean.tests.hurricane.mesh.Mesh.run"]], "dequ120at30cr10rr2basemesh (class in compass.ocean.tests.hurricane.mesh.dequ120at30cr10rr2)": [[450, "compass.ocean.tests.hurricane.mesh.dequ120at30cr10rr2.DEQU120at30cr10rr2BaseMesh"]], "__init__() (compass.ocean.tests.hurricane.mesh.dequ120at30cr10rr2.dequ120at30cr10rr2basemesh method)": [[450, "compass.ocean.tests.hurricane.mesh.dequ120at30cr10rr2.DEQU120at30cr10rr2BaseMesh.__init__"]], "build_cell_width_lat_lon() (compass.ocean.tests.hurricane.mesh.dequ120at30cr10rr2.dequ120at30cr10rr2basemesh method)": [[451, "compass.ocean.tests.hurricane.mesh.dequ120at30cr10rr2.DEQU120at30cr10rr2BaseMesh.build_cell_width_lat_lon"]], "iceshelf2d (class in compass.ocean.tests.ice_shelf_2d)": [[452, "compass.ocean.tests.ice_shelf_2d.IceShelf2d"]], "__init__() (compass.ocean.tests.ice_shelf_2d.iceshelf2d method)": [[452, "compass.ocean.tests.ice_shelf_2d.IceShelf2d.__init__"]], "configure() (in module compass.ocean.tests.ice_shelf_2d)": [[453, "compass.ocean.tests.ice_shelf_2d.configure"]], "default (class in compass.ocean.tests.ice_shelf_2d.default)": [[454, "compass.ocean.tests.ice_shelf_2d.default.Default"]], "__init__() (compass.ocean.tests.ice_shelf_2d.default.default method)": [[454, "compass.ocean.tests.ice_shelf_2d.default.Default.__init__"]], "configure() (compass.ocean.tests.ice_shelf_2d.default.default method)": [[455, "compass.ocean.tests.ice_shelf_2d.default.Default.configure"]], "run() (compass.ocean.tests.ice_shelf_2d.default.default method)": [[456, "compass.ocean.tests.ice_shelf_2d.default.Default.run"]], "forward (class in compass.ocean.tests.ice_shelf_2d.forward)": [[457, "compass.ocean.tests.ice_shelf_2d.forward.Forward"]], "__init__() (compass.ocean.tests.ice_shelf_2d.forward.forward method)": [[457, "compass.ocean.tests.ice_shelf_2d.forward.Forward.__init__"]], "run() (compass.ocean.tests.ice_shelf_2d.forward.forward method)": [[458, "compass.ocean.tests.ice_shelf_2d.forward.Forward.run"]], "setup() (compass.ocean.tests.ice_shelf_2d.forward.forward method)": [[459, "compass.ocean.tests.ice_shelf_2d.forward.Forward.setup"]], "initialstate (class in compass.ocean.tests.ice_shelf_2d.initial_state)": [[460, "compass.ocean.tests.ice_shelf_2d.initial_state.InitialState"]], "__init__() (compass.ocean.tests.ice_shelf_2d.initial_state.initialstate method)": [[460, "compass.ocean.tests.ice_shelf_2d.initial_state.InitialState.__init__"]], "run() (compass.ocean.tests.ice_shelf_2d.initial_state.initialstate method)": [[461, "compass.ocean.tests.ice_shelf_2d.initial_state.InitialState.run"]], "restarttest (class in compass.ocean.tests.ice_shelf_2d.restart_test)": [[462, "compass.ocean.tests.ice_shelf_2d.restart_test.RestartTest"]], "__init__() (compass.ocean.tests.ice_shelf_2d.restart_test.restarttest method)": [[462, "compass.ocean.tests.ice_shelf_2d.restart_test.RestartTest.__init__"]], "configure() (compass.ocean.tests.ice_shelf_2d.restart_test.restarttest method)": [[463, "compass.ocean.tests.ice_shelf_2d.restart_test.RestartTest.configure"]], "run() (compass.ocean.tests.ice_shelf_2d.restart_test.restarttest method)": [[464, "compass.ocean.tests.ice_shelf_2d.restart_test.RestartTest.run"]], "sshadjustment (class in compass.ocean.tests.ice_shelf_2d.ssh_adjustment)": [[465, "compass.ocean.tests.ice_shelf_2d.ssh_adjustment.SshAdjustment"]], "__init__() (compass.ocean.tests.ice_shelf_2d.ssh_adjustment.sshadjustment method)": [[465, "compass.ocean.tests.ice_shelf_2d.ssh_adjustment.SshAdjustment.__init__"]], "run() (compass.ocean.tests.ice_shelf_2d.ssh_adjustment.sshadjustment method)": [[466, "compass.ocean.tests.ice_shelf_2d.ssh_adjustment.SshAdjustment.run"]], "setup() (compass.ocean.tests.ice_shelf_2d.ssh_adjustment.sshadjustment method)": [[467, "compass.ocean.tests.ice_shelf_2d.ssh_adjustment.SshAdjustment.setup"]], "viz (class in compass.ocean.tests.ice_shelf_2d.viz)": [[468, "compass.ocean.tests.ice_shelf_2d.viz.Viz"]], "__init__() (compass.ocean.tests.ice_shelf_2d.viz.viz method)": [[468, "compass.ocean.tests.ice_shelf_2d.viz.Viz.__init__"]], "run() (compass.ocean.tests.ice_shelf_2d.viz.viz method)": [[469, "compass.ocean.tests.ice_shelf_2d.viz.Viz.run"]], "internalwave (class in compass.ocean.tests.internal_wave)": [[470, "compass.ocean.tests.internal_wave.InternalWave"]], "__init__() (compass.ocean.tests.internal_wave.internalwave method)": [[470, "compass.ocean.tests.internal_wave.InternalWave.__init__"]], "default (class in compass.ocean.tests.internal_wave.default)": [[471, "compass.ocean.tests.internal_wave.default.Default"]], "__init__() (compass.ocean.tests.internal_wave.default.default method)": [[471, "compass.ocean.tests.internal_wave.default.Default.__init__"]], "validate() (compass.ocean.tests.internal_wave.default.default method)": [[472, "compass.ocean.tests.internal_wave.default.Default.validate"]], "forward (class in compass.ocean.tests.internal_wave.forward)": [[473, "compass.ocean.tests.internal_wave.forward.Forward"]], "__init__() (compass.ocean.tests.internal_wave.forward.forward method)": [[473, "compass.ocean.tests.internal_wave.forward.Forward.__init__"]], "run() (compass.ocean.tests.internal_wave.forward.forward method)": [[474, "compass.ocean.tests.internal_wave.forward.Forward.run"]], "initialstate (class in compass.ocean.tests.internal_wave.initial_state)": [[475, "compass.ocean.tests.internal_wave.initial_state.InitialState"]], "__init__() (compass.ocean.tests.internal_wave.initial_state.initialstate method)": [[475, "compass.ocean.tests.internal_wave.initial_state.InitialState.__init__"]], "run() (compass.ocean.tests.internal_wave.initial_state.initialstate method)": [[476, "compass.ocean.tests.internal_wave.initial_state.InitialState.run"]], "rpetest (class in compass.ocean.tests.internal_wave.rpe_test)": [[477, "compass.ocean.tests.internal_wave.rpe_test.RpeTest"]], "__init__() (compass.ocean.tests.internal_wave.rpe_test.rpetest method)": [[477, "compass.ocean.tests.internal_wave.rpe_test.RpeTest.__init__"]], "analysis (class in compass.ocean.tests.internal_wave.rpe_test.analysis)": [[478, "compass.ocean.tests.internal_wave.rpe_test.analysis.Analysis"]], "__init__() (compass.ocean.tests.internal_wave.rpe_test.analysis.analysis method)": [[478, "compass.ocean.tests.internal_wave.rpe_test.analysis.Analysis.__init__"]], "run() (compass.ocean.tests.internal_wave.rpe_test.analysis.analysis method)": [[479, "compass.ocean.tests.internal_wave.rpe_test.analysis.Analysis.run"]], "tendaytest (class in compass.ocean.tests.internal_wave.ten_day_test)": [[480, "compass.ocean.tests.internal_wave.ten_day_test.TenDayTest"]], "__init__() (compass.ocean.tests.internal_wave.ten_day_test.tendaytest method)": [[480, "compass.ocean.tests.internal_wave.ten_day_test.TenDayTest.__init__"]], "validate() (compass.ocean.tests.internal_wave.ten_day_test.tendaytest method)": [[481, "compass.ocean.tests.internal_wave.ten_day_test.TenDayTest.validate"]], "viz (class in compass.ocean.tests.internal_wave.viz)": [[482, "compass.ocean.tests.internal_wave.viz.Viz"]], "__init__() (compass.ocean.tests.internal_wave.viz.viz method)": [[482, "compass.ocean.tests.internal_wave.viz.Viz.__init__"]], "run() (compass.ocean.tests.internal_wave.viz.viz method)": [[483, "compass.ocean.tests.internal_wave.viz.Viz.run"]], "isomipplus (class in compass.ocean.tests.isomip_plus)": [[484, "compass.ocean.tests.isomip_plus.IsomipPlus"]], "__init__() (compass.ocean.tests.isomip_plus.isomipplus method)": [[484, "compass.ocean.tests.isomip_plus.IsomipPlus.__init__"]], "update_evaporation_flux() (in module compass.ocean.tests.isomip_plus.evap)": [[485, "compass.ocean.tests.isomip_plus.evap.update_evaporation_flux"]], "forward (class in compass.ocean.tests.isomip_plus.forward)": [[486, "compass.ocean.tests.isomip_plus.forward.Forward"]], "__init__() (compass.ocean.tests.isomip_plus.forward.forward method)": [[486, "compass.ocean.tests.isomip_plus.forward.Forward.__init__"]], "run() (compass.ocean.tests.isomip_plus.forward.forward method)": [[487, "compass.ocean.tests.isomip_plus.forward.Forward.run"]], "setup() (compass.ocean.tests.isomip_plus.forward.forward method)": [[488, "compass.ocean.tests.isomip_plus.forward.Forward.setup"]], "interpolate_ocean_mask() (in module compass.ocean.tests.isomip_plus.geom)": [[489, "compass.ocean.tests.isomip_plus.geom.interpolate_ocean_mask"]], "process_input_geometry() (in module compass.ocean.tests.isomip_plus.geom)": [[490, "compass.ocean.tests.isomip_plus.geom.process_input_geometry"]], "initialstate (class in compass.ocean.tests.isomip_plus.initial_state)": [[491, "compass.ocean.tests.isomip_plus.initial_state.InitialState"]], "__init__() (compass.ocean.tests.isomip_plus.initial_state.initialstate method)": [[491, "compass.ocean.tests.isomip_plus.initial_state.InitialState.__init__"]], "run() (compass.ocean.tests.isomip_plus.initial_state.initialstate method)": [[492, "compass.ocean.tests.isomip_plus.initial_state.InitialState.run"]], "misomip (class in compass.ocean.tests.isomip_plus.misomip)": [[493, "compass.ocean.tests.isomip_plus.misomip.Misomip"]], "__init__() (compass.ocean.tests.isomip_plus.misomip.misomip method)": [[493, "compass.ocean.tests.isomip_plus.misomip.Misomip.__init__"]], "run() (compass.ocean.tests.isomip_plus.misomip.misomip method)": [[494, "compass.ocean.tests.isomip_plus.misomip.Misomip.run"]], "oceantest (class in compass.ocean.tests.isomip_plus.ocean_test)": [[495, "compass.ocean.tests.isomip_plus.ocean_test.OceanTest"]], "__init__() (compass.ocean.tests.isomip_plus.ocean_test.oceantest method)": [[495, "compass.ocean.tests.isomip_plus.ocean_test.OceanTest.__init__"]], "configure() (compass.ocean.tests.isomip_plus.ocean_test.oceantest method)": [[496, "compass.ocean.tests.isomip_plus.ocean_test.OceanTest.configure"]], "run() (compass.ocean.tests.isomip_plus.ocean_test.oceantest method)": [[497, "compass.ocean.tests.isomip_plus.ocean_test.OceanTest.run"]], "sshadjustment (class in compass.ocean.tests.isomip_plus.ssh_adjustment)": [[498, "compass.ocean.tests.isomip_plus.ssh_adjustment.SshAdjustment"]], "__init__() (compass.ocean.tests.isomip_plus.ssh_adjustment.sshadjustment method)": [[498, "compass.ocean.tests.isomip_plus.ssh_adjustment.SshAdjustment.__init__"]], "run() (compass.ocean.tests.isomip_plus.ssh_adjustment.sshadjustment method)": [[499, "compass.ocean.tests.isomip_plus.ssh_adjustment.SshAdjustment.run"]], "setup() (compass.ocean.tests.isomip_plus.ssh_adjustment.sshadjustment method)": [[500, "compass.ocean.tests.isomip_plus.ssh_adjustment.SshAdjustment.setup"]], "streamfunction (class in compass.ocean.tests.isomip_plus.streamfunction)": [[501, "compass.ocean.tests.isomip_plus.streamfunction.Streamfunction"]], "__init__() (compass.ocean.tests.isomip_plus.streamfunction.streamfunction method)": [[501, "compass.ocean.tests.isomip_plus.streamfunction.Streamfunction.__init__"]], "run() (compass.ocean.tests.isomip_plus.streamfunction.streamfunction method)": [[502, "compass.ocean.tests.isomip_plus.streamfunction.Streamfunction.run"]], "viz (class in compass.ocean.tests.isomip_plus.viz)": [[503, "compass.ocean.tests.isomip_plus.viz.Viz"]], "__init__() (compass.ocean.tests.isomip_plus.viz.viz method)": [[503, "compass.ocean.tests.isomip_plus.viz.Viz.__init__"]], "run() (compass.ocean.tests.isomip_plus.viz.viz method)": [[504, "compass.ocean.tests.isomip_plus.viz.Viz.run"]], "file_complete() (in module compass.ocean.tests.isomip_plus.viz)": [[505, "compass.ocean.tests.isomip_plus.viz.file_complete"]], "movieplotter (class in compass.ocean.tests.isomip_plus.viz.plot)": [[506, "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter"]], "__init__() (compass.ocean.tests.isomip_plus.viz.plot.movieplotter method)": [[506, "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.__init__"]], "images_to_movies() (compass.ocean.tests.isomip_plus.viz.plot.movieplotter method)": [[507, "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.images_to_movies"]], "plot_3d_field_top_bot_section() (compass.ocean.tests.isomip_plus.viz.plot.movieplotter method)": [[508, "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_3d_field_top_bot_section"]], "plot_barotropic_streamfunction() (compass.ocean.tests.isomip_plus.viz.plot.movieplotter method)": [[509, "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_barotropic_streamfunction"]], "plot_horiz_series() (compass.ocean.tests.isomip_plus.viz.plot.movieplotter method)": [[510, "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_horiz_series"]], "plot_ice_shelf_boundary_variables() (compass.ocean.tests.isomip_plus.viz.plot.movieplotter method)": [[511, "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_ice_shelf_boundary_variables"]], "plot_layer_interfaces() (compass.ocean.tests.isomip_plus.viz.plot.movieplotter method)": [[512, "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_layer_interfaces"]], "plot_melt_rates() (compass.ocean.tests.isomip_plus.viz.plot.movieplotter method)": [[513, "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_melt_rates"]], "plot_overturning_streamfunction() (compass.ocean.tests.isomip_plus.viz.plot.movieplotter method)": [[514, "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_overturning_streamfunction"]], "plot_potential_density() (compass.ocean.tests.isomip_plus.viz.plot.movieplotter method)": [[515, "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_potential_density"]], "plot_salinity() (compass.ocean.tests.isomip_plus.viz.plot.movieplotter method)": [[516, "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_salinity"]], "plot_temperature() (compass.ocean.tests.isomip_plus.viz.plot.movieplotter method)": [[517, "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_temperature"]], "timeseriesplotter (class in compass.ocean.tests.isomip_plus.viz.plot)": [[518, "compass.ocean.tests.isomip_plus.viz.plot.TimeSeriesPlotter"]], "__init__() (compass.ocean.tests.isomip_plus.viz.plot.timeseriesplotter method)": [[518, "compass.ocean.tests.isomip_plus.viz.plot.TimeSeriesPlotter.__init__"]], "plot_melt_time_series() (compass.ocean.tests.isomip_plus.viz.plot.timeseriesplotter method)": [[519, "compass.ocean.tests.isomip_plus.viz.plot.TimeSeriesPlotter.plot_melt_time_series"]], "plot_time_series() (compass.ocean.tests.isomip_plus.viz.plot.timeseriesplotter method)": [[520, "compass.ocean.tests.isomip_plus.viz.plot.TimeSeriesPlotter.plot_time_series"]], "merrygoround (class in compass.ocean.tests.merry_go_round)": [[521, "compass.ocean.tests.merry_go_round.MerryGoRound"]], "__init__() (compass.ocean.tests.merry_go_round.merrygoround method)": [[521, "compass.ocean.tests.merry_go_round.MerryGoRound.__init__"]], "analysis (class in compass.ocean.tests.merry_go_round.convergence_test.analysis)": [[522, "compass.ocean.tests.merry_go_round.convergence_test.analysis.Analysis"]], "__init__() (compass.ocean.tests.merry_go_round.convergence_test.analysis.analysis method)": [[522, "compass.ocean.tests.merry_go_round.convergence_test.analysis.Analysis.__init__"]], "run() (compass.ocean.tests.merry_go_round.convergence_test.analysis.analysis method)": [[523, "compass.ocean.tests.merry_go_round.convergence_test.analysis.Analysis.run"]], "default (class in compass.ocean.tests.merry_go_round.default)": [[524, "compass.ocean.tests.merry_go_round.default.Default"]], "__init__() (compass.ocean.tests.merry_go_round.default.default method)": [[524, "compass.ocean.tests.merry_go_round.default.Default.__init__"]], "validate() (compass.ocean.tests.merry_go_round.default.default method)": [[525, "compass.ocean.tests.merry_go_round.default.Default.validate"]], "forward (class in compass.ocean.tests.merry_go_round.forward)": [[526, "compass.ocean.tests.merry_go_round.forward.Forward"]], "__init__() (compass.ocean.tests.merry_go_round.forward.forward method)": [[526, "compass.ocean.tests.merry_go_round.forward.Forward.__init__"]], "run() (compass.ocean.tests.merry_go_round.forward.forward method)": [[527, "compass.ocean.tests.merry_go_round.forward.Forward.run"]], "initialstate (class in compass.ocean.tests.merry_go_round.initial_state)": [[528, "compass.ocean.tests.merry_go_round.initial_state.InitialState"]], "__init__() (compass.ocean.tests.merry_go_round.initial_state.initialstate method)": [[528, "compass.ocean.tests.merry_go_round.initial_state.InitialState.__init__"]], "run() (compass.ocean.tests.merry_go_round.initial_state.initialstate method)": [[529, "compass.ocean.tests.merry_go_round.initial_state.InitialState.run"]], "viz (class in compass.ocean.tests.merry_go_round.viz)": [[530, "compass.ocean.tests.merry_go_round.viz.Viz"]], "__init__() (compass.ocean.tests.merry_go_round.viz.viz method)": [[530, "compass.ocean.tests.merry_go_round.viz.Viz.__init__"]], "run() (compass.ocean.tests.merry_go_round.viz.viz method)": [[531, "compass.ocean.tests.merry_go_round.viz.Viz.run"]], "planarconvergence (class in compass.ocean.tests.planar_convergence)": [[532, "compass.ocean.tests.planar_convergence.PlanarConvergence"]], "__init__() (compass.ocean.tests.planar_convergence.planarconvergence method)": [[532, "compass.ocean.tests.planar_convergence.PlanarConvergence.__init__"]], "convinit (class in compass.ocean.tests.planar_convergence.conv_init)": [[533, "compass.ocean.tests.planar_convergence.conv_init.ConvInit"]], "__init__() (compass.ocean.tests.planar_convergence.conv_init.convinit method)": [[533, "compass.ocean.tests.planar_convergence.conv_init.ConvInit.__init__"]], "run() (compass.ocean.tests.planar_convergence.conv_init.convinit method)": [[534, "compass.ocean.tests.planar_convergence.conv_init.ConvInit.run"]], "convtestcase (class in compass.ocean.tests.planar_convergence.conv_test_case)": [[535, "compass.ocean.tests.planar_convergence.conv_test_case.ConvTestCase"]], "__init__() (compass.ocean.tests.planar_convergence.conv_test_case.convtestcase method)": [[535, "compass.ocean.tests.planar_convergence.conv_test_case.ConvTestCase.__init__"]], "configure() (compass.ocean.tests.planar_convergence.conv_test_case.convtestcase method)": [[536, "compass.ocean.tests.planar_convergence.conv_test_case.ConvTestCase.configure"]], "run() (compass.ocean.tests.planar_convergence.conv_test_case.convtestcase method)": [[537, "compass.ocean.tests.planar_convergence.conv_test_case.ConvTestCase.run"]], "update_cores() (compass.ocean.tests.planar_convergence.conv_test_case.convtestcase method)": [[538, "compass.ocean.tests.planar_convergence.conv_test_case.ConvTestCase.update_cores"]], "forward (class in compass.ocean.tests.planar_convergence.forward)": [[539, "compass.ocean.tests.planar_convergence.forward.Forward"]], "__init__() (compass.ocean.tests.planar_convergence.forward.forward method)": [[539, "compass.ocean.tests.planar_convergence.forward.Forward.__init__"]], "get_dt_duration() (compass.ocean.tests.planar_convergence.forward.forward method)": [[540, "compass.ocean.tests.planar_convergence.forward.Forward.get_dt_duration"]], "run() (compass.ocean.tests.planar_convergence.forward.forward method)": [[541, "compass.ocean.tests.planar_convergence.forward.Forward.run"]], "setup() (compass.ocean.tests.planar_convergence.forward.forward method)": [[542, "compass.ocean.tests.planar_convergence.forward.Forward.setup"]], "horizontaladvection (class in compass.ocean.tests.planar_convergence.horizontal_advection)": [[543, "compass.ocean.tests.planar_convergence.horizontal_advection.HorizontalAdvection"]], "__init__() (compass.ocean.tests.planar_convergence.horizontal_advection.horizontaladvection method)": [[543, "compass.ocean.tests.planar_convergence.horizontal_advection.HorizontalAdvection.__init__"]], "configure() (compass.ocean.tests.planar_convergence.horizontal_advection.horizontaladvection method)": [[544, "compass.ocean.tests.planar_convergence.horizontal_advection.HorizontalAdvection.configure"]], "run() (compass.ocean.tests.planar_convergence.horizontal_advection.horizontaladvection method)": [[545, "compass.ocean.tests.planar_convergence.horizontal_advection.HorizontalAdvection.run"]], "analysis (class in compass.ocean.tests.planar_convergence.horizontal_advection.analysis)": [[546, "compass.ocean.tests.planar_convergence.horizontal_advection.analysis.Analysis"]], "__init__() (compass.ocean.tests.planar_convergence.horizontal_advection.analysis.analysis method)": [[546, "compass.ocean.tests.planar_convergence.horizontal_advection.analysis.Analysis.__init__"]], "rmse() (compass.ocean.tests.planar_convergence.horizontal_advection.analysis.analysis method)": [[547, "compass.ocean.tests.planar_convergence.horizontal_advection.analysis.Analysis.rmse"]], "run() (compass.ocean.tests.planar_convergence.horizontal_advection.analysis.analysis method)": [[548, "compass.ocean.tests.planar_convergence.horizontal_advection.analysis.Analysis.run"]], "init (class in compass.ocean.tests.planar_convergence.horizontal_advection.init)": [[549, "compass.ocean.tests.planar_convergence.horizontal_advection.init.Init"]], "__init__() (compass.ocean.tests.planar_convergence.horizontal_advection.init.init method)": [[549, "compass.ocean.tests.planar_convergence.horizontal_advection.init.Init.__init__"]], "run() (compass.ocean.tests.planar_convergence.horizontal_advection.init.init method)": [[550, "compass.ocean.tests.planar_convergence.horizontal_advection.init.Init.run"]], "soma (class in compass.ocean.tests.soma)": [[551, "compass.ocean.tests.soma.Soma"]], "__init__() (compass.ocean.tests.soma.soma method)": [[551, "compass.ocean.tests.soma.Soma.__init__"]], "analysis (class in compass.ocean.tests.soma.analysis)": [[552, "compass.ocean.tests.soma.analysis.Analysis"]], "__init__() (compass.ocean.tests.soma.analysis.analysis method)": [[552, "compass.ocean.tests.soma.analysis.Analysis.__init__"]], "run() (compass.ocean.tests.soma.analysis.analysis method)": [[553, "compass.ocean.tests.soma.analysis.Analysis.run"]], "forward (class in compass.ocean.tests.soma.forward)": [[554, "compass.ocean.tests.soma.forward.Forward"]], "__init__() (compass.ocean.tests.soma.forward.forward method)": [[554, "compass.ocean.tests.soma.forward.Forward.__init__"]], "run() (compass.ocean.tests.soma.forward.forward method)": [[555, "compass.ocean.tests.soma.forward.Forward.run"]], "initialstate (class in compass.ocean.tests.soma.initial_state)": [[556, "compass.ocean.tests.soma.initial_state.InitialState"]], "__init__() (compass.ocean.tests.soma.initial_state.initialstate method)": [[556, "compass.ocean.tests.soma.initial_state.InitialState.__init__"]], "run() (compass.ocean.tests.soma.initial_state.initialstate method)": [[557, "compass.ocean.tests.soma.initial_state.InitialState.run"]], "somatestcase (class in compass.ocean.tests.soma.soma_test_case)": [[558, "compass.ocean.tests.soma.soma_test_case.SomaTestCase"]], "__init__() (compass.ocean.tests.soma.soma_test_case.somatestcase method)": [[558, "compass.ocean.tests.soma.soma_test_case.SomaTestCase.__init__"]], "validate() (compass.ocean.tests.soma.soma_test_case.somatestcase method)": [[559, "compass.ocean.tests.soma.soma_test_case.SomaTestCase.validate"]], "spheretransport (class in compass.ocean.tests.sphere_transport)": [[560, "compass.ocean.tests.sphere_transport.SphereTransport"]], "__init__() (compass.ocean.tests.sphere_transport.spheretransport method)": [[560, "compass.ocean.tests.sphere_transport.SphereTransport.__init__"]], "correlatedtracers2d (class in compass.ocean.tests.sphere_transport.correlated_tracers_2d)": [[561, "compass.ocean.tests.sphere_transport.correlated_tracers_2d.CorrelatedTracers2D"]], "__init__() (compass.ocean.tests.sphere_transport.correlated_tracers_2d.correlatedtracers2d method)": [[561, "compass.ocean.tests.sphere_transport.correlated_tracers_2d.CorrelatedTracers2D.__init__"]], "configure() (compass.ocean.tests.sphere_transport.correlated_tracers_2d.correlatedtracers2d method)": [[562, "compass.ocean.tests.sphere_transport.correlated_tracers_2d.CorrelatedTracers2D.configure"]], "run() (compass.ocean.tests.sphere_transport.correlated_tracers_2d.correlatedtracers2d method)": [[563, "compass.ocean.tests.sphere_transport.correlated_tracers_2d.CorrelatedTracers2D.run"]], "analysis (class in compass.ocean.tests.sphere_transport.correlated_tracers_2d.analysis)": [[564, "compass.ocean.tests.sphere_transport.correlated_tracers_2d.analysis.Analysis"]], "__init__() (compass.ocean.tests.sphere_transport.correlated_tracers_2d.analysis.analysis method)": [[564, "compass.ocean.tests.sphere_transport.correlated_tracers_2d.analysis.Analysis.__init__"]], "run() (compass.ocean.tests.sphere_transport.correlated_tracers_2d.analysis.analysis method)": [[565, "compass.ocean.tests.sphere_transport.correlated_tracers_2d.analysis.Analysis.run"]], "forward (class in compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward)": [[566, "compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.Forward"]], "__init__() (compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.forward method)": [[566, "compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.Forward.__init__"]], "get_timestep_str() (compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.forward method)": [[567, "compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.Forward.get_timestep_str"]], "run() (compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.forward method)": [[568, "compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.Forward.run"]], "setup() (compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.forward method)": [[569, "compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.Forward.setup"]], "init (class in compass.ocean.tests.sphere_transport.correlated_tracers_2d.init)": [[570, "compass.ocean.tests.sphere_transport.correlated_tracers_2d.init.Init"]], "__init__() (compass.ocean.tests.sphere_transport.correlated_tracers_2d.init.init method)": [[570, "compass.ocean.tests.sphere_transport.correlated_tracers_2d.init.Init.__init__"]], "run() (compass.ocean.tests.sphere_transport.correlated_tracers_2d.init.init method)": [[571, "compass.ocean.tests.sphere_transport.correlated_tracers_2d.init.Init.run"]], "mesh (class in compass.ocean.tests.sphere_transport.correlated_tracers_2d.mesh)": [[572, "compass.ocean.tests.sphere_transport.correlated_tracers_2d.mesh.Mesh"]], "__init__() (compass.ocean.tests.sphere_transport.correlated_tracers_2d.mesh.mesh method)": [[572, "compass.ocean.tests.sphere_transport.correlated_tracers_2d.mesh.Mesh.__init__"]], "build_cell_width_lat_lon() (compass.ocean.tests.sphere_transport.correlated_tracers_2d.mesh.mesh method)": [[573, "compass.ocean.tests.sphere_transport.correlated_tracers_2d.mesh.Mesh.build_cell_width_lat_lon"]], "run() (compass.ocean.tests.sphere_transport.correlated_tracers_2d.mesh.mesh method)": [[574, "compass.ocean.tests.sphere_transport.correlated_tracers_2d.mesh.Mesh.run"]], "divergent2d (class in compass.ocean.tests.sphere_transport.divergent_2d)": [[575, "compass.ocean.tests.sphere_transport.divergent_2d.Divergent2D"]], "__init__() (compass.ocean.tests.sphere_transport.divergent_2d.divergent2d method)": [[575, "compass.ocean.tests.sphere_transport.divergent_2d.Divergent2D.__init__"]], "configure() (compass.ocean.tests.sphere_transport.divergent_2d.divergent2d method)": [[576, "compass.ocean.tests.sphere_transport.divergent_2d.Divergent2D.configure"]], "run() (compass.ocean.tests.sphere_transport.divergent_2d.divergent2d method)": [[577, "compass.ocean.tests.sphere_transport.divergent_2d.Divergent2D.run"]], "analysis (class in compass.ocean.tests.sphere_transport.divergent_2d.analysis)": [[578, "compass.ocean.tests.sphere_transport.divergent_2d.analysis.Analysis"]], "__init__() (compass.ocean.tests.sphere_transport.divergent_2d.analysis.analysis method)": [[578, "compass.ocean.tests.sphere_transport.divergent_2d.analysis.Analysis.__init__"]], "run() (compass.ocean.tests.sphere_transport.divergent_2d.analysis.analysis method)": [[579, "compass.ocean.tests.sphere_transport.divergent_2d.analysis.Analysis.run"]], "forward (class in compass.ocean.tests.sphere_transport.divergent_2d.forward)": [[580, "compass.ocean.tests.sphere_transport.divergent_2d.forward.Forward"]], "__init__() (compass.ocean.tests.sphere_transport.divergent_2d.forward.forward method)": [[580, "compass.ocean.tests.sphere_transport.divergent_2d.forward.Forward.__init__"]], "get_timestep_str() (compass.ocean.tests.sphere_transport.divergent_2d.forward.forward method)": [[581, "compass.ocean.tests.sphere_transport.divergent_2d.forward.Forward.get_timestep_str"]], "run() (compass.ocean.tests.sphere_transport.divergent_2d.forward.forward method)": [[582, "compass.ocean.tests.sphere_transport.divergent_2d.forward.Forward.run"]], "setup() (compass.ocean.tests.sphere_transport.divergent_2d.forward.forward method)": [[583, "compass.ocean.tests.sphere_transport.divergent_2d.forward.Forward.setup"]], "init (class in compass.ocean.tests.sphere_transport.divergent_2d.init)": [[584, "compass.ocean.tests.sphere_transport.divergent_2d.init.Init"]], "__init__() (compass.ocean.tests.sphere_transport.divergent_2d.init.init method)": [[584, "compass.ocean.tests.sphere_transport.divergent_2d.init.Init.__init__"]], "run() (compass.ocean.tests.sphere_transport.divergent_2d.init.init method)": [[585, "compass.ocean.tests.sphere_transport.divergent_2d.init.Init.run"]], "mesh (class in compass.ocean.tests.sphere_transport.divergent_2d.mesh)": [[586, "compass.ocean.tests.sphere_transport.divergent_2d.mesh.Mesh"]], "__init__() (compass.ocean.tests.sphere_transport.divergent_2d.mesh.mesh method)": [[586, "compass.ocean.tests.sphere_transport.divergent_2d.mesh.Mesh.__init__"]], "build_cell_width_lat_lon() (compass.ocean.tests.sphere_transport.divergent_2d.mesh.mesh method)": [[587, "compass.ocean.tests.sphere_transport.divergent_2d.mesh.Mesh.build_cell_width_lat_lon"]], "run() (compass.ocean.tests.sphere_transport.divergent_2d.mesh.mesh method)": [[588, "compass.ocean.tests.sphere_transport.divergent_2d.mesh.Mesh.run"]], "nondivergent2d (class in compass.ocean.tests.sphere_transport.nondivergent_2d)": [[589, "compass.ocean.tests.sphere_transport.nondivergent_2d.Nondivergent2D"]], "__init__() (compass.ocean.tests.sphere_transport.nondivergent_2d.nondivergent2d method)": [[589, "compass.ocean.tests.sphere_transport.nondivergent_2d.Nondivergent2D.__init__"]], "configure() (compass.ocean.tests.sphere_transport.nondivergent_2d.nondivergent2d method)": [[590, "compass.ocean.tests.sphere_transport.nondivergent_2d.Nondivergent2D.configure"]], "run() (compass.ocean.tests.sphere_transport.nondivergent_2d.nondivergent2d method)": [[591, "compass.ocean.tests.sphere_transport.nondivergent_2d.Nondivergent2D.run"]], "analysis (class in compass.ocean.tests.sphere_transport.nondivergent_2d.analysis)": [[592, "compass.ocean.tests.sphere_transport.nondivergent_2d.analysis.Analysis"]], "__init__() (compass.ocean.tests.sphere_transport.nondivergent_2d.analysis.analysis method)": [[592, "compass.ocean.tests.sphere_transport.nondivergent_2d.analysis.Analysis.__init__"]], "run() (compass.ocean.tests.sphere_transport.nondivergent_2d.analysis.analysis method)": [[593, "compass.ocean.tests.sphere_transport.nondivergent_2d.analysis.Analysis.run"]], "forward (class in compass.ocean.tests.sphere_transport.nondivergent_2d.forward)": [[594, "compass.ocean.tests.sphere_transport.nondivergent_2d.forward.Forward"]], "__init__() (compass.ocean.tests.sphere_transport.nondivergent_2d.forward.forward method)": [[594, "compass.ocean.tests.sphere_transport.nondivergent_2d.forward.Forward.__init__"]], "get_timestep_str() (compass.ocean.tests.sphere_transport.nondivergent_2d.forward.forward method)": [[595, "compass.ocean.tests.sphere_transport.nondivergent_2d.forward.Forward.get_timestep_str"]], "run() (compass.ocean.tests.sphere_transport.nondivergent_2d.forward.forward method)": [[596, "compass.ocean.tests.sphere_transport.nondivergent_2d.forward.Forward.run"]], "setup() (compass.ocean.tests.sphere_transport.nondivergent_2d.forward.forward method)": [[597, "compass.ocean.tests.sphere_transport.nondivergent_2d.forward.Forward.setup"]], "init (class in compass.ocean.tests.sphere_transport.nondivergent_2d.init)": [[598, "compass.ocean.tests.sphere_transport.nondivergent_2d.init.Init"]], "__init__() (compass.ocean.tests.sphere_transport.nondivergent_2d.init.init method)": [[598, "compass.ocean.tests.sphere_transport.nondivergent_2d.init.Init.__init__"]], "run() (compass.ocean.tests.sphere_transport.nondivergent_2d.init.init method)": [[599, "compass.ocean.tests.sphere_transport.nondivergent_2d.init.Init.run"]], "mesh (class in compass.ocean.tests.sphere_transport.nondivergent_2d.mesh)": [[600, "compass.ocean.tests.sphere_transport.nondivergent_2d.mesh.Mesh"]], "__init__() (compass.ocean.tests.sphere_transport.nondivergent_2d.mesh.mesh method)": [[600, "compass.ocean.tests.sphere_transport.nondivergent_2d.mesh.Mesh.__init__"]], "build_cell_width_lat_lon() (compass.ocean.tests.sphere_transport.nondivergent_2d.mesh.mesh method)": [[601, "compass.ocean.tests.sphere_transport.nondivergent_2d.mesh.Mesh.build_cell_width_lat_lon"]], "run() (compass.ocean.tests.sphere_transport.nondivergent_2d.mesh.mesh method)": [[602, "compass.ocean.tests.sphere_transport.nondivergent_2d.mesh.Mesh.run"]], "compute_convergence_rates() (in module compass.ocean.tests.sphere_transport.process_output)": [[603, "compass.ocean.tests.sphere_transport.process_output.compute_convergence_rates"]], "compute_error_from_output_ncfile() (in module compass.ocean.tests.sphere_transport.process_output)": [[604, "compass.ocean.tests.sphere_transport.process_output.compute_error_from_output_ncfile"]], "make_convergence_arrays() (in module compass.ocean.tests.sphere_transport.process_output)": [[605, "compass.ocean.tests.sphere_transport.process_output.make_convergence_arrays"]], "plot_convergence() (in module compass.ocean.tests.sphere_transport.process_output)": [[606, "compass.ocean.tests.sphere_transport.process_output.plot_convergence"]], "plot_filament() (in module compass.ocean.tests.sphere_transport.process_output)": [[607, "compass.ocean.tests.sphere_transport.process_output.plot_filament"]], "plot_over_and_undershoot_errors() (in module compass.ocean.tests.sphere_transport.process_output)": [[608, "compass.ocean.tests.sphere_transport.process_output.plot_over_and_undershoot_errors"]], "plot_sol() (in module compass.ocean.tests.sphere_transport.process_output)": [[609, "compass.ocean.tests.sphere_transport.process_output.plot_sol"]], "print_data_as_csv() (in module compass.ocean.tests.sphere_transport.process_output)": [[610, "compass.ocean.tests.sphere_transport.process_output.print_data_as_csv"]], "print_error_conv_table() (in module compass.ocean.tests.sphere_transport.process_output)": [[611, "compass.ocean.tests.sphere_transport.process_output.print_error_conv_table"]], "read_ncl_rgb_file() (in module compass.ocean.tests.sphere_transport.process_output)": [[612, "compass.ocean.tests.sphere_transport.process_output.read_ncl_rgb_file"]], "rotation2d (class in compass.ocean.tests.sphere_transport.rotation_2d)": [[613, "compass.ocean.tests.sphere_transport.rotation_2d.Rotation2D"]], "__init__() (compass.ocean.tests.sphere_transport.rotation_2d.rotation2d method)": [[613, "compass.ocean.tests.sphere_transport.rotation_2d.Rotation2D.__init__"]], "configure() (compass.ocean.tests.sphere_transport.rotation_2d.rotation2d method)": [[614, "compass.ocean.tests.sphere_transport.rotation_2d.Rotation2D.configure"]], "run() (compass.ocean.tests.sphere_transport.rotation_2d.rotation2d method)": [[615, "compass.ocean.tests.sphere_transport.rotation_2d.Rotation2D.run"]], "analysis (class in compass.ocean.tests.sphere_transport.rotation_2d.analysis)": [[616, "compass.ocean.tests.sphere_transport.rotation_2d.analysis.Analysis"]], "__init__() (compass.ocean.tests.sphere_transport.rotation_2d.analysis.analysis method)": [[616, "compass.ocean.tests.sphere_transport.rotation_2d.analysis.Analysis.__init__"]], "run() (compass.ocean.tests.sphere_transport.rotation_2d.analysis.analysis method)": [[617, "compass.ocean.tests.sphere_transport.rotation_2d.analysis.Analysis.run"]], "forward (class in compass.ocean.tests.sphere_transport.rotation_2d.forward)": [[618, "compass.ocean.tests.sphere_transport.rotation_2d.forward.Forward"]], "__init__() (compass.ocean.tests.sphere_transport.rotation_2d.forward.forward method)": [[618, "compass.ocean.tests.sphere_transport.rotation_2d.forward.Forward.__init__"]], "get_timestep_str() (compass.ocean.tests.sphere_transport.rotation_2d.forward.forward method)": [[619, "compass.ocean.tests.sphere_transport.rotation_2d.forward.Forward.get_timestep_str"]], "run() (compass.ocean.tests.sphere_transport.rotation_2d.forward.forward method)": [[620, "compass.ocean.tests.sphere_transport.rotation_2d.forward.Forward.run"]], "setup() (compass.ocean.tests.sphere_transport.rotation_2d.forward.forward method)": [[621, "compass.ocean.tests.sphere_transport.rotation_2d.forward.Forward.setup"]], "init (class in compass.ocean.tests.sphere_transport.rotation_2d.init)": [[622, "compass.ocean.tests.sphere_transport.rotation_2d.init.Init"]], "__init__() (compass.ocean.tests.sphere_transport.rotation_2d.init.init method)": [[622, "compass.ocean.tests.sphere_transport.rotation_2d.init.Init.__init__"]], "run() (compass.ocean.tests.sphere_transport.rotation_2d.init.init method)": [[623, "compass.ocean.tests.sphere_transport.rotation_2d.init.Init.run"]], "mesh (class in compass.ocean.tests.sphere_transport.rotation_2d.mesh)": [[624, "compass.ocean.tests.sphere_transport.rotation_2d.mesh.Mesh"]], "__init__() (compass.ocean.tests.sphere_transport.rotation_2d.mesh.mesh method)": [[624, "compass.ocean.tests.sphere_transport.rotation_2d.mesh.Mesh.__init__"]], "build_cell_width_lat_lon() (compass.ocean.tests.sphere_transport.rotation_2d.mesh.mesh method)": [[625, "compass.ocean.tests.sphere_transport.rotation_2d.mesh.Mesh.build_cell_width_lat_lon"]], "run() (compass.ocean.tests.sphere_transport.rotation_2d.mesh.mesh method)": [[626, "compass.ocean.tests.sphere_transport.rotation_2d.mesh.Mesh.run"]], "ziso (class in compass.ocean.tests.ziso)": [[627, "compass.ocean.tests.ziso.Ziso"]], "__init__() (compass.ocean.tests.ziso.ziso method)": [[627, "compass.ocean.tests.ziso.Ziso.__init__"]], "zisotestcase (class in compass.ocean.tests.ziso)": [[628, "compass.ocean.tests.ziso.ZisoTestCase"]], "__init__() (compass.ocean.tests.ziso.zisotestcase method)": [[628, "compass.ocean.tests.ziso.ZisoTestCase.__init__"]], "configure() (compass.ocean.tests.ziso.zisotestcase method)": [[629, "compass.ocean.tests.ziso.ZisoTestCase.configure"]], "run() (compass.ocean.tests.ziso.zisotestcase method)": [[630, "compass.ocean.tests.ziso.ZisoTestCase.run"]], "configure() (in module compass.ocean.tests.ziso)": [[631, "compass.ocean.tests.ziso.configure"]], "forward (class in compass.ocean.tests.ziso.forward)": [[632, "compass.ocean.tests.ziso.forward.Forward"]], "__init__() (compass.ocean.tests.ziso.forward.forward method)": [[632, "compass.ocean.tests.ziso.forward.Forward.__init__"]], "run() (compass.ocean.tests.ziso.forward.forward method)": [[633, "compass.ocean.tests.ziso.forward.Forward.run"]], "setup() (compass.ocean.tests.ziso.forward.forward method)": [[634, "compass.ocean.tests.ziso.forward.Forward.setup"]], "initialstate (class in compass.ocean.tests.ziso.initial_state)": [[635, "compass.ocean.tests.ziso.initial_state.InitialState"]], "__init__() (compass.ocean.tests.ziso.initial_state.initialstate method)": [[635, "compass.ocean.tests.ziso.initial_state.InitialState.__init__"]], "run() (compass.ocean.tests.ziso.initial_state.initialstate method)": [[636, "compass.ocean.tests.ziso.initial_state.InitialState.run"]], "withfrazil (class in compass.ocean.tests.ziso.with_frazil)": [[637, "compass.ocean.tests.ziso.with_frazil.WithFrazil"]], "__init__() (compass.ocean.tests.ziso.with_frazil.withfrazil method)": [[637, "compass.ocean.tests.ziso.with_frazil.WithFrazil.__init__"]], "configure() (compass.ocean.tests.ziso.with_frazil.withfrazil method)": [[638, "compass.ocean.tests.ziso.with_frazil.WithFrazil.configure"]], "run() (compass.ocean.tests.ziso.with_frazil.withfrazil method)": [[639, "compass.ocean.tests.ziso.with_frazil.WithFrazil.run"]], "generate_1d_grid() (in module compass.ocean.vertical.grid_1d)": [[640, "compass.ocean.vertical.grid_1d.generate_1d_grid"]], "write_1d_grid() (in module compass.ocean.vertical.grid_1d)": [[641, "compass.ocean.vertical.grid_1d.write_1d_grid"]], "init_vertical_coord() (in module compass.ocean.vertical)": [[642, "compass.ocean.vertical.init_vertical_coord"]], "alter_bottom_depth() (in module compass.ocean.vertical.partial_cells)": [[643, "compass.ocean.vertical.partial_cells.alter_bottom_depth"]], "alter_ssh() (in module compass.ocean.vertical.partial_cells)": [[644, "compass.ocean.vertical.partial_cells.alter_ssh"]], "compute_min_max_level_cell() (in module compass.ocean.vertical.zlevel)": [[645, "compass.ocean.vertical.zlevel.compute_min_max_level_cell"]], "compute_z_level_layer_thickness() (in module compass.ocean.vertical.zlevel)": [[646, "compass.ocean.vertical.zlevel.compute_z_level_layer_thickness"]], "compute_z_level_resting_thickness() (in module compass.ocean.vertical.zlevel)": [[647, "compass.ocean.vertical.zlevel.compute_z_level_resting_thickness"]], "init_z_level_vertical_coord() (in module compass.ocean.vertical.zlevel)": [[648, "compass.ocean.vertical.zlevel.init_z_level_vertical_coord"]], "init_z_star_vertical_coord() (in module compass.ocean.vertical.zstar)": [[649, "compass.ocean.vertical.zstar.init_z_star_vertical_coord"]]}})