Search.setIndex({"docnames": ["design_docs/cached_outputs", "design_docs/compass_package", "design_docs/index", "design_docs/template", "developers_guide/api", "developers_guide/building_docs", "developers_guide/command_line", "developers_guide/docs", "developers_guide/framework", "developers_guide/generated/compass.MpasCore", "developers_guide/generated/compass.MpasCore.add_test_group", "developers_guide/generated/compass.Step", "developers_guide/generated/compass.Step.add_input_file", "developers_guide/generated/compass.Step.add_model_as_input", "developers_guide/generated/compass.Step.add_namelist_file", "developers_guide/generated/compass.Step.add_namelist_options", "developers_guide/generated/compass.Step.add_output_file", "developers_guide/generated/compass.Step.add_streams_file", "developers_guide/generated/compass.Step.constrain_resources", "developers_guide/generated/compass.Step.run", "developers_guide/generated/compass.Step.runtime_setup", "developers_guide/generated/compass.Step.set_resources", "developers_guide/generated/compass.Step.setup", "developers_guide/generated/compass.Step.update_namelist_at_runtime", "developers_guide/generated/compass.Step.update_namelist_pio", "developers_guide/generated/compass.Step.update_streams_at_runtime", "developers_guide/generated/compass.TestCase", "developers_guide/generated/compass.TestCase.add_step", "developers_guide/generated/compass.TestCase.configure", "developers_guide/generated/compass.TestCase.run", "developers_guide/generated/compass.TestCase.validate", "developers_guide/generated/compass.TestGroup", "developers_guide/generated/compass.TestGroup.add_test_case", "developers_guide/generated/compass.__main__.main", "developers_guide/generated/compass.cache.update_cache", "developers_guide/generated/compass.clean.clean_cases", "developers_guide/generated/compass.config.CompassConfigParser", "developers_guide/generated/compass.io.download", "developers_guide/generated/compass.io.package_path", "developers_guide/generated/compass.io.symlink", "developers_guide/generated/compass.list.list_cases", "developers_guide/generated/compass.list.list_machines", "developers_guide/generated/compass.list.list_suites", "developers_guide/generated/compass.logging.log_method_call", "developers_guide/generated/compass.mesh.IcosahedralMeshStep", "developers_guide/generated/compass.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon", "developers_guide/generated/compass.mesh.IcosahedralMeshStep.get_cell_width", "developers_guide/generated/compass.mesh.IcosahedralMeshStep.get_subdivisions", "developers_guide/generated/compass.mesh.IcosahedralMeshStep.make_jigsaw_mesh", "developers_guide/generated/compass.mesh.IcosahedralMeshStep.run", "developers_guide/generated/compass.mesh.IcosahedralMeshStep.setup", "developers_guide/generated/compass.mesh.QuasiUniformSphericalMeshStep", "developers_guide/generated/compass.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon", "developers_guide/generated/compass.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh", "developers_guide/generated/compass.mesh.QuasiUniformSphericalMeshStep.run", "developers_guide/generated/compass.mesh.QuasiUniformSphericalMeshStep.setup", "developers_guide/generated/compass.mesh.spherical.SphericalBaseStep", "developers_guide/generated/compass.mesh.spherical.SphericalBaseStep.run", "developers_guide/generated/compass.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width", "developers_guide/generated/compass.mesh.spherical.SphericalBaseStep.setup", "developers_guide/generated/compass.model.make_graph_file", "developers_guide/generated/compass.model.partition", "developers_guide/generated/compass.model.run_model", "developers_guide/generated/compass.mpas_cores.get_mpas_cores", "developers_guide/generated/compass.parallel.check_parallel_system", "developers_guide/generated/compass.parallel.get_available_cores_and_nodes", "developers_guide/generated/compass.parallel.run_command", "developers_guide/generated/compass.parallel.set_cores_per_node", "developers_guide/generated/compass.provenance.write", "developers_guide/generated/compass.run.serial.run_single_step", "developers_guide/generated/compass.run.serial.run_tests", "developers_guide/generated/compass.setup.setup_case", "developers_guide/generated/compass.setup.setup_cases", "developers_guide/generated/compass.suite.clean_suite", "developers_guide/generated/compass.suite.setup_suite", "developers_guide/generated/compass.validate.compare_timers", "developers_guide/generated/compass.validate.compare_variables", "developers_guide/landice/api", "developers_guide/landice/framework", "developers_guide/landice/generated/compass.landice.Landice", "developers_guide/landice/generated/compass.landice.tests.calving_dt_convergence.CalvingDtConvergence", "developers_guide/landice/generated/compass.landice.tests.calving_dt_convergence.dt_convergence_test.DtConvergenceTest", "developers_guide/landice/generated/compass.landice.tests.calving_dt_convergence.dt_convergence_test.DtConvergenceTest.validate", "developers_guide/landice/generated/compass.landice.tests.calving_dt_convergence.run_model.RunModel", "developers_guide/landice/generated/compass.landice.tests.calving_dt_convergence.run_model.RunModel.run", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.CircularShelf", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.decomposition_test.DecompositionTest", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.decomposition_test.DecompositionTest.run", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.run_model.RunModel", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.run_model.RunModel.run", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.setup_mesh.SetupMesh", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.setup_mesh.SetupMesh.run", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.visualize.Visualize", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.visualize.Visualize.run", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.visualize.visualize_circular_shelf", "developers_guide/landice/generated/compass.landice.tests.dome.Dome", "developers_guide/landice/generated/compass.landice.tests.dome.decomposition_test.DecompositionTest", "developers_guide/landice/generated/compass.landice.tests.dome.decomposition_test.DecompositionTest.run", "developers_guide/landice/generated/compass.landice.tests.dome.restart_test.RestartTest", "developers_guide/landice/generated/compass.landice.tests.dome.restart_test.RestartTest.run", "developers_guide/landice/generated/compass.landice.tests.dome.run_model.RunModel", "developers_guide/landice/generated/compass.landice.tests.dome.run_model.RunModel.run", "developers_guide/landice/generated/compass.landice.tests.dome.run_model.RunModel.setup", "developers_guide/landice/generated/compass.landice.tests.dome.setup_mesh.SetupMesh", "developers_guide/landice/generated/compass.landice.tests.dome.setup_mesh.SetupMesh.run", "developers_guide/landice/generated/compass.landice.tests.dome.smoke_test.SmokeTest", "developers_guide/landice/generated/compass.landice.tests.dome.smoke_test.SmokeTest.run", "developers_guide/landice/generated/compass.landice.tests.dome.visualize.Visualize", "developers_guide/landice/generated/compass.landice.tests.dome.visualize.Visualize.run", "developers_guide/landice/generated/compass.landice.tests.dome.visualize.visualize_dome", "developers_guide/landice/generated/compass.landice.tests.eismint2.Eismint2", "developers_guide/landice/generated/compass.landice.tests.eismint2.decomposition_test.DecompositionTest", "developers_guide/landice/generated/compass.landice.tests.eismint2.decomposition_test.DecompositionTest.run", "developers_guide/landice/generated/compass.landice.tests.eismint2.restart_test.RestartTest", "developers_guide/landice/generated/compass.landice.tests.eismint2.restart_test.RestartTest.run", "developers_guide/landice/generated/compass.landice.tests.eismint2.run_experiment.RunExperiment", "developers_guide/landice/generated/compass.landice.tests.eismint2.run_experiment.RunExperiment.run", "developers_guide/landice/generated/compass.landice.tests.eismint2.run_experiment.RunExperiment.setup", "developers_guide/landice/generated/compass.landice.tests.eismint2.setup_mesh.SetupMesh", "developers_guide/landice/generated/compass.landice.tests.eismint2.setup_mesh.SetupMesh.run", "developers_guide/landice/generated/compass.landice.tests.eismint2.standard_experiments.StandardExperiments", "developers_guide/landice/generated/compass.landice.tests.eismint2.standard_experiments.StandardExperiments.run", "developers_guide/landice/generated/compass.landice.tests.eismint2.standard_experiments.visualize.Visualize", "developers_guide/landice/generated/compass.landice.tests.eismint2.standard_experiments.visualize.Visualize.run", "developers_guide/landice/generated/compass.landice.tests.eismint2.standard_experiments.visualize.visualize_eismint2", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.A.A", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.A.A.configure", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.A.A.run", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.A.visualize.Visualize", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.A.visualize.Visualize.run", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.B.B", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.B.B.configure", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.B.B.run", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.B.visualize.Visualize", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.B.visualize.Visualize.run", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.EnthalpyBenchmark", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.run_model.RunModel", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.run_model.RunModel.run", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.run_model.RunModel.setup", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.setup_mesh.SetupMesh", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.setup_mesh.SetupMesh.run", "developers_guide/landice/generated/compass.landice.tests.greenland.Greenland", "developers_guide/landice/generated/compass.landice.tests.greenland.decomposition_test.DecompositionTest", "developers_guide/landice/generated/compass.landice.tests.greenland.decomposition_test.DecompositionTest.run", "developers_guide/landice/generated/compass.landice.tests.greenland.high_res_mesh.HighResMesh", "developers_guide/landice/generated/compass.landice.tests.greenland.high_res_mesh.HighResMesh.run", "developers_guide/landice/generated/compass.landice.tests.greenland.mesh.Mesh", "developers_guide/landice/generated/compass.landice.tests.greenland.mesh.Mesh.build_cell_width", "developers_guide/landice/generated/compass.landice.tests.greenland.mesh.Mesh.run", "developers_guide/landice/generated/compass.landice.tests.greenland.restart_test.RestartTest", "developers_guide/landice/generated/compass.landice.tests.greenland.restart_test.RestartTest.run", "developers_guide/landice/generated/compass.landice.tests.greenland.run_model.RunModel", "developers_guide/landice/generated/compass.landice.tests.greenland.run_model.RunModel.run", "developers_guide/landice/generated/compass.landice.tests.greenland.run_model.RunModel.setup", "developers_guide/landice/generated/compass.landice.tests.greenland.smoke_test.SmokeTest", "developers_guide/landice/generated/compass.landice.tests.greenland.smoke_test.SmokeTest.run", "developers_guide/landice/generated/compass.landice.tests.humboldt.Humboldt", "developers_guide/landice/generated/compass.landice.tests.humboldt.decomposition_test.DecompositionTest", "developers_guide/landice/generated/compass.landice.tests.humboldt.decomposition_test.DecompositionTest.validate", "developers_guide/landice/generated/compass.landice.tests.humboldt.mesh.Mesh", "developers_guide/landice/generated/compass.landice.tests.humboldt.mesh.Mesh.run", "developers_guide/landice/generated/compass.landice.tests.humboldt.mesh_gen.MeshGen", "developers_guide/landice/generated/compass.landice.tests.humboldt.mesh_gen.MeshGen.run", "developers_guide/landice/generated/compass.landice.tests.humboldt.restart_test.RestartTest", "developers_guide/landice/generated/compass.landice.tests.humboldt.restart_test.RestartTest.validate", "developers_guide/landice/generated/compass.landice.tests.humboldt.run_model.RunModel", "developers_guide/landice/generated/compass.landice.tests.humboldt.run_model.RunModel.run", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.HydroRadial", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.decomposition_test.DecompositionTest", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.decomposition_test.DecompositionTest.run", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.restart_test.RestartTest", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.restart_test.RestartTest.run", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.run_model.RunModel", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.run_model.RunModel.run", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.run_model.RunModel.setup", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.setup_mesh.SetupMesh", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.setup_mesh.SetupMesh.run", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.spinup_test.SpinupTest", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.spinup_test.SpinupTest.run", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.steady_state_drift_test.SteadyStateDriftTest", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.steady_state_drift_test.SteadyStateDriftTest.run", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.visualize.Visualize", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.visualize.Visualize.run", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.visualize.visualize_hydro_radial", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.Ismip6Forcing", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.atmosphere.Atmosphere", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.atmosphere.Atmosphere.configure", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.atmosphere.create_mapfile_smb", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.atmosphere.create_mapfile_smb.build_mapping_file", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.atmosphere.create_mapfile_smb.create_atm_scrip", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.atmosphere.process_smb.ProcessSMB", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.atmosphere.process_smb.ProcessSMB.correct_smb_anomaly_for_climatology", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.atmosphere.process_smb.ProcessSMB.remap_ismip6_smb_to_mali", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.atmosphere.process_smb.ProcessSMB.rename_ismip6_smb_to_mali_vars", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.atmosphere.process_smb.ProcessSMB.run", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.atmosphere.process_smb.ProcessSMB.setup", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.ProcessSmbRacmo", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.ProcessSmbRacmo.correct_smb_anomaly_for_base_smb", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.ProcessSmbRacmo.remap_source_smb_to_mali", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.ProcessSmbRacmo.rename_source_smb_to_mali_vars", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.ProcessSmbRacmo.run", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.ProcessSmbRacmo.setup", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.configure.configure", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.create_mapfile.build_mapping_file", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.ocean_basal.OceanBasal", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.ocean_basal.OceanBasal.configure", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.ProcessBasalMelt", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.ProcessBasalMelt.combine_ismip6_inputfiles", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.ProcessBasalMelt.remap_ismip6_basal_melt_to_mali_vars", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.ProcessBasalMelt.rename_ismip6_basal_melt_to_mali_vars", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.ProcessBasalMelt.run", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.ProcessBasalMelt.setup", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.ocean_thermal.OceanThermal", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.ocean_thermal.OceanThermal.configure", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.ocean_thermal.process_thermal_forcing.ProcessThermalForcing", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.ocean_thermal.process_thermal_forcing.ProcessThermalForcing.remap_ismip6_thermal_forcing_to_mali_vars", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.ocean_thermal.process_thermal_forcing.ProcessThermalForcing.rename_ismip6_thermal_forcing_to_mali_vars", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.ocean_thermal.process_thermal_forcing.ProcessThermalForcing.run", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.ocean_thermal.process_thermal_forcing.ProcessThermalForcing.setup", "developers_guide/landice/generated/compass.landice.tests.kangerlussuaq.Kangerlussuaq", "developers_guide/landice/generated/compass.landice.tests.kangerlussuaq.mesh.Mesh", "developers_guide/landice/generated/compass.landice.tests.kangerlussuaq.mesh.Mesh.run", "developers_guide/landice/generated/compass.landice.tests.kangerlussuaq.mesh_gen.MeshGen", "developers_guide/landice/generated/compass.landice.tests.kangerlussuaq.mesh_gen.MeshGen.run", "developers_guide/landice/generated/compass.landice.tests.koge_bugt_s.KogeBugtS", "developers_guide/landice/generated/compass.landice.tests.koge_bugt_s.mesh.Mesh", "developers_guide/landice/generated/compass.landice.tests.koge_bugt_s.mesh.Mesh.run", "developers_guide/landice/generated/compass.landice.tests.koge_bugt_s.mesh_gen.MeshGen", "developers_guide/landice/generated/compass.landice.tests.koge_bugt_s.mesh_gen.MeshGen.run", "developers_guide/landice/generated/compass.landice.tests.mismipplus.MISMIPplus", "developers_guide/landice/generated/compass.landice.tests.mismipplus.run_model.RunModel", "developers_guide/landice/generated/compass.landice.tests.mismipplus.run_model.RunModel.run", "developers_guide/landice/generated/compass.landice.tests.mismipplus.run_model.RunModel.setup", "developers_guide/landice/generated/compass.landice.tests.mismipplus.smoke_test.SmokeTest", "developers_guide/landice/generated/compass.landice.tests.mismipplus.smoke_test.SmokeTest.run", "developers_guide/landice/generated/compass.landice.tests.thwaites.Thwaites", "developers_guide/landice/generated/compass.landice.tests.thwaites.decomposition_test.DecompositionTest", "developers_guide/landice/generated/compass.landice.tests.thwaites.decomposition_test.DecompositionTest.run", "developers_guide/landice/generated/compass.landice.tests.thwaites.restart_test.RestartTest", "developers_guide/landice/generated/compass.landice.tests.thwaites.restart_test.RestartTest.run", "developers_guide/landice/generated/compass.landice.tests.thwaites.run_model.RunModel", "developers_guide/landice/generated/compass.landice.tests.thwaites.run_model.RunModel.run", "developers_guide/landice/generated/compass.landice.tests.thwaites.run_model.RunModel.setup", "developers_guide/landice/index", "developers_guide/landice/test_groups/calving_dt_convergence", "developers_guide/landice/test_groups/circular_shelf", "developers_guide/landice/test_groups/dome", "developers_guide/landice/test_groups/eismint2", "developers_guide/landice/test_groups/enthalpy_benchmark", "developers_guide/landice/test_groups/greenland", "developers_guide/landice/test_groups/humboldt", "developers_guide/landice/test_groups/hydro_radial", "developers_guide/landice/test_groups/index", "developers_guide/landice/test_groups/ismip6_forcing", "developers_guide/landice/test_groups/kangerlussuaq", "developers_guide/landice/test_groups/koge_bugt_s", "developers_guide/landice/test_groups/mismipplus", "developers_guide/landice/test_groups/thwaites", "developers_guide/machines/anvil", "developers_guide/machines/chrysalis", "developers_guide/machines/compy", "developers_guide/machines/cori", "developers_guide/machines/index", "developers_guide/machines/perlmutter", "developers_guide/ocean/api", "developers_guide/ocean/framework", "developers_guide/ocean/generated/compass.ocean.Ocean", "developers_guide/ocean/generated/compass.ocean.haney.compute_haney_number", "developers_guide/ocean/generated/compass.ocean.iceshelf.adjust_ssh", "developers_guide/ocean/generated/compass.ocean.iceshelf.compute_land_ice_pressure_and_draft", "developers_guide/ocean/generated/compass.ocean.mesh.cull.CullMeshStep", "developers_guide/ocean/generated/compass.ocean.mesh.cull.CullMeshStep.run", "developers_guide/ocean/generated/compass.ocean.mesh.cull.CullMeshStep.setup", "developers_guide/ocean/generated/compass.ocean.mesh.cull.cull_mesh", "developers_guide/ocean/generated/compass.ocean.mesh.floodplain.FloodplainMeshStep", "developers_guide/ocean/generated/compass.ocean.mesh.floodplain.FloodplainMeshStep.run", "developers_guide/ocean/generated/compass.ocean.particles.remap_particles", "developers_guide/ocean/generated/compass.ocean.particles.write", "developers_guide/ocean/generated/compass.ocean.plot.plot_initial_state", "developers_guide/ocean/generated/compass.ocean.plot.plot_vertical_grid", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.BaroclinicChannel", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.configure", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.decomp_test.DecompTest", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.decomp_test.DecompTest.configure", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.decomp_test.DecompTest.run", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.default.Default", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.default.Default.configure", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.default.Default.run", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.forward.Forward", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.forward.Forward.run", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.forward.Forward.setup", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.initial_state.InitialState", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.initial_state.InitialState.run", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.initial_state.InitialState.setup", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.restart_test.RestartTest", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.restart_test.RestartTest.configure", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.restart_test.RestartTest.run", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.rpe_test.RpeTest", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.rpe_test.RpeTest.configure", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.rpe_test.RpeTest.run", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.run", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.setup", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.threads_test.ThreadsTest", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.configure", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.run", "developers_guide/ocean/generated/compass.ocean.tests.dam_break.DamBreak", "developers_guide/ocean/generated/compass.ocean.tests.dam_break.default.Default", "developers_guide/ocean/generated/compass.ocean.tests.dam_break.default.Default.configure", "developers_guide/ocean/generated/compass.ocean.tests.dam_break.forward.Forward", "developers_guide/ocean/generated/compass.ocean.tests.dam_break.forward.Forward.run", "developers_guide/ocean/generated/compass.ocean.tests.dam_break.initial_state.InitialState", "developers_guide/ocean/generated/compass.ocean.tests.dam_break.initial_state.InitialState.run", "developers_guide/ocean/generated/compass.ocean.tests.dam_break.viz.Viz", "developers_guide/ocean/generated/compass.ocean.tests.dam_break.viz.Viz.run", "developers_guide/ocean/generated/compass.ocean.tests.drying_slope.DryingSlope", "developers_guide/ocean/generated/compass.ocean.tests.drying_slope.default.Default", "developers_guide/ocean/generated/compass.ocean.tests.drying_slope.default.Default.configure", "developers_guide/ocean/generated/compass.ocean.tests.drying_slope.forward.Forward", "developers_guide/ocean/generated/compass.ocean.tests.drying_slope.forward.Forward.run", "developers_guide/ocean/generated/compass.ocean.tests.drying_slope.initial_state.InitialState", "developers_guide/ocean/generated/compass.ocean.tests.drying_slope.initial_state.InitialState.run", "developers_guide/ocean/generated/compass.ocean.tests.drying_slope.viz.Viz", "developers_guide/ocean/generated/compass.ocean.tests.drying_slope.viz.Viz.run", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.GlobalConvergence", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.CosineBell", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.CosineBell.configure", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.CosineBell.run", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.analysis.Analysis", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rmse", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.run", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.forward.Forward", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.forward.Forward.get_dt", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.forward.Forward.run", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.forward.Forward.setup", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.init.Init", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.init.Init.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.GlobalOcean", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.analysis_test.AnalysisTest", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.analysis_test.AnalysisTest.configure", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.analysis_test.AnalysisTest.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.configure", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.configure.configure_global_ocean", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.daily_output_test.DailyOutputTest", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.daily_output_test.DailyOutputTest.configure", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.daily_output_test.DailyOutputTest.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.decomp_test.DecompTest", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.decomp_test.DecompTest.configure", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.decomp_test.DecompTest.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.dynamic_adjustment.DynamicAdjustment", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.dynamic_adjustment.DynamicAdjustment.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.FilesForE3SM", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.FilesForE3SM.configure", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.FilesForE3SM.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.diagnostics_files.DiagnosticsFiles", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.diagnostics_files.DiagnosticsFiles.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.ocean_graph_partition.OceanGraphPartition", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.ocean_graph_partition.OceanGraphPartition.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.ocean_initial_condition.OceanInitialCondition", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.ocean_initial_condition.OceanInitialCondition.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.scrip.Scrip", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.scrip.Scrip.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.seaice_initial_condition.SeaiceInitialCondition", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.seaice_initial_condition.SeaiceInitialCondition.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.forward.ForwardStep", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.forward.ForwardStep.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.forward.ForwardStep.setup", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.forward.ForwardTestCase", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.forward.ForwardTestCase.configure", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.forward.ForwardTestCase.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.init.Init", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.init.Init.configure", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.init.Init.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.init.initial_state.InitialState", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.init.initial_state.InitialState.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.init.initial_state.InitialState.setup", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.init.ssh_adjustment.SshAdjustment", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.init.ssh_adjustment.SshAdjustment.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.init.ssh_adjustment.SshAdjustment.setup", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.Mesh", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.Mesh.configure", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.Mesh.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.ec30to60.EC30to60BaseMesh", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.ec30to60.EC30to60BaseMesh.build_cell_width_lat_lon", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.ec30to60.dynamic_adjustment.EC30to60DynamicAdjustment", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.ec30to60.dynamic_adjustment.EC30to60DynamicAdjustment.configure", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.ec30to60.dynamic_adjustment.EC30to60DynamicAdjustment.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.qu240.dynamic_adjustment.QU240DynamicAdjustment", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.qu240.dynamic_adjustment.QU240DynamicAdjustment.configure", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.qu240.dynamic_adjustment.QU240DynamicAdjustment.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.so12to60.SO12to60BaseMesh", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.so12to60.SO12to60BaseMesh.build_cell_width_lat_lon", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.so12to60.dynamic_adjustment.SO12to60DynamicAdjustment", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.so12to60.dynamic_adjustment.SO12to60DynamicAdjustment.configure", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.so12to60.dynamic_adjustment.SO12to60DynamicAdjustment.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.wc14.WC14BaseMesh", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.wc14.WC14BaseMesh.build_cell_width_lat_lon", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.wc14.dynamic_adjustment.WC14DynamicAdjustment", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.wc14.dynamic_adjustment.WC14DynamicAdjustment.configure", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.wc14.dynamic_adjustment.WC14DynamicAdjustment.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.metadata.add_mesh_and_init_metadata", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.metadata.get_e3sm_mesh_names", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.performance_test.PerformanceTest", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.performance_test.PerformanceTest.configure", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.performance_test.PerformanceTest.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.restart_test.RestartTest", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.restart_test.RestartTest.configure", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.restart_test.RestartTest.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.threads_test.ThreadsTest", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.threads_test.ThreadsTest.configure", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.threads_test.ThreadsTest.run", "developers_guide/ocean/generated/compass.ocean.tests.gotm.Gotm", "developers_guide/ocean/generated/compass.ocean.tests.gotm.default.Default", "developers_guide/ocean/generated/compass.ocean.tests.gotm.default.Default.validate", "developers_guide/ocean/generated/compass.ocean.tests.gotm.default.analysis.Analysis", "developers_guide/ocean/generated/compass.ocean.tests.gotm.default.analysis.Analysis.run", "developers_guide/ocean/generated/compass.ocean.tests.gotm.default.forward.Forward", "developers_guide/ocean/generated/compass.ocean.tests.gotm.default.forward.Forward.run", "developers_guide/ocean/generated/compass.ocean.tests.gotm.default.init.Init", "developers_guide/ocean/generated/compass.ocean.tests.gotm.default.init.Init.run", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.Hurricane", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.analysis.Analysis", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.analysis.Analysis.read_pointstats", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.analysis.Analysis.read_station_data", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.analysis.Analysis.read_station_file", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.analysis.Analysis.run", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.analysis.Analysis.setup", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.configure", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.forward.Forward", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.forward.Forward.configure", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.forward.Forward.run", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.forward.forward.ForwardStep", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.forward.forward.ForwardStep.run", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.forward.forward.ForwardStep.setup", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.Init", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.Init.configure", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.Init.run", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.create_pointstats_file.CreatePointstatsFile", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.create_pointstats_file.CreatePointstatsFile.create_pointstats_file", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.create_pointstats_file.CreatePointstatsFile.run", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.initial_state.InitialState", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.initial_state.InitialState.run", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.initial_state.InitialState.setup", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing.interpolate_data_to_grid", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing.plot_interp_data", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing.run", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing.write_to_file", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.mesh.Mesh", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.mesh.Mesh.configure", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.mesh.Mesh.run", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.mesh.dequ120at30cr10rr2.DEQU120at30cr10rr2BaseMesh", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.mesh.dequ120at30cr10rr2.DEQU120at30cr10rr2BaseMesh.build_cell_width_lat_lon", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.IceShelf2d", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.configure", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.default.Default", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.default.Default.configure", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.default.Default.run", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.forward.Forward", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.forward.Forward.run", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.forward.Forward.setup", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.initial_state.InitialState", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.initial_state.InitialState.run", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.restart_test.RestartTest", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.restart_test.RestartTest.configure", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.restart_test.RestartTest.run", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.ssh_adjustment.SshAdjustment", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.ssh_adjustment.SshAdjustment.run", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.ssh_adjustment.SshAdjustment.setup", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.viz.Viz", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.viz.Viz.run", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.InternalWave", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.default.Default", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.default.Default.validate", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.forward.Forward", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.forward.Forward.run", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.initial_state.InitialState", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.initial_state.InitialState.run", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.rpe_test.RpeTest", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.rpe_test.analysis.Analysis", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.rpe_test.analysis.Analysis.run", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.ten_day_test.TenDayTest", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.ten_day_test.TenDayTest.validate", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.viz.Viz", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.viz.Viz.run", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.IsomipPlus", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.evap.update_evaporation_flux", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.forward.Forward", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.forward.Forward.run", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.forward.Forward.setup", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.geom.interpolate_ocean_mask", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.geom.process_input_geometry", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.initial_state.InitialState", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.initial_state.InitialState.run", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.isomip_plus_test.IsomipPlusTest", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.isomip_plus_test.IsomipPlusTest.configure", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.isomip_plus_test.IsomipPlusTest.run", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.misomip.Misomip", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.misomip.Misomip.run", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.ssh_adjustment.SshAdjustment", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.ssh_adjustment.SshAdjustment.run", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.ssh_adjustment.SshAdjustment.setup", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.streamfunction.Streamfunction", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.streamfunction.Streamfunction.run", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.Viz", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.Viz.run", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.file_complete", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.images_to_movies", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_3d_field_top_bot_section", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_barotropic_streamfunction", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_horiz_series", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_ice_shelf_boundary_variables", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_layer_interfaces", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_melt_rates", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_overturning_streamfunction", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_potential_density", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_salinity", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_temperature", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.TimeSeriesPlotter", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.TimeSeriesPlotter.plot_melt_time_series", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.TimeSeriesPlotter.plot_time_series", "developers_guide/ocean/generated/compass.ocean.tests.merry_go_round.MerryGoRound", "developers_guide/ocean/generated/compass.ocean.tests.merry_go_round.convergence_test.analysis.Analysis", "developers_guide/ocean/generated/compass.ocean.tests.merry_go_round.convergence_test.analysis.Analysis.run", "developers_guide/ocean/generated/compass.ocean.tests.merry_go_round.default.Default", "developers_guide/ocean/generated/compass.ocean.tests.merry_go_round.default.Default.validate", "developers_guide/ocean/generated/compass.ocean.tests.merry_go_round.forward.Forward", "developers_guide/ocean/generated/compass.ocean.tests.merry_go_round.forward.Forward.run", "developers_guide/ocean/generated/compass.ocean.tests.merry_go_round.initial_state.InitialState", "developers_guide/ocean/generated/compass.ocean.tests.merry_go_round.initial_state.InitialState.run", "developers_guide/ocean/generated/compass.ocean.tests.merry_go_round.viz.Viz", "developers_guide/ocean/generated/compass.ocean.tests.merry_go_round.viz.Viz.run", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.PlanarConvergence", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.conv_init.ConvInit", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.conv_init.ConvInit.run", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.conv_test_case.ConvTestCase", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.conv_test_case.ConvTestCase.configure", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.conv_test_case.ConvTestCase.run", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.conv_test_case.ConvTestCase.update_cores", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.forward.Forward", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.forward.Forward.get_dt_duration", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.forward.Forward.run", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.forward.Forward.setup", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.horizontal_advection.HorizontalAdvection", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.horizontal_advection.HorizontalAdvection.configure", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.horizontal_advection.HorizontalAdvection.run", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.horizontal_advection.analysis.Analysis", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.horizontal_advection.analysis.Analysis.rmse", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.horizontal_advection.analysis.Analysis.run", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.horizontal_advection.init.Init", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.horizontal_advection.init.Init.run", "developers_guide/ocean/generated/compass.ocean.tests.soma.Soma", "developers_guide/ocean/generated/compass.ocean.tests.soma.analysis.Analysis", "developers_guide/ocean/generated/compass.ocean.tests.soma.analysis.Analysis.run", "developers_guide/ocean/generated/compass.ocean.tests.soma.forward.Forward", "developers_guide/ocean/generated/compass.ocean.tests.soma.forward.Forward.run", "developers_guide/ocean/generated/compass.ocean.tests.soma.initial_state.InitialState", "developers_guide/ocean/generated/compass.ocean.tests.soma.initial_state.InitialState.run", "developers_guide/ocean/generated/compass.ocean.tests.soma.soma_test_case.SomaTestCase", "developers_guide/ocean/generated/compass.ocean.tests.soma.soma_test_case.SomaTestCase.validate", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.SphereTransport", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.CorrelatedTracers2D", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.CorrelatedTracers2D.configure", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.CorrelatedTracers2D.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.analysis.Analysis", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.analysis.Analysis.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.Forward", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.Forward.get_timestep_str", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.Forward.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.Forward.setup", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.init.Init", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.init.Init.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.mesh.Mesh", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.mesh.Mesh.build_cell_width_lat_lon", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.mesh.Mesh.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.Divergent2D", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.Divergent2D.configure", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.Divergent2D.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.analysis.Analysis", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.analysis.Analysis.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.forward.Forward", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.forward.Forward.get_timestep_str", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.forward.Forward.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.forward.Forward.setup", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.init.Init", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.init.Init.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.mesh.Mesh", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.mesh.Mesh.build_cell_width_lat_lon", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.mesh.Mesh.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.Nondivergent2D", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.Nondivergent2D.configure", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.Nondivergent2D.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.analysis.Analysis", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.analysis.Analysis.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.forward.Forward", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.forward.Forward.get_timestep_str", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.forward.Forward.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.forward.Forward.setup", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.init.Init", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.init.Init.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.mesh.Mesh", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.mesh.Mesh.build_cell_width_lat_lon", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.mesh.Mesh.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.compute_convergence_rates", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.compute_error_from_output_ncfile", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.make_convergence_arrays", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.plot_convergence", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.plot_filament", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.plot_over_and_undershoot_errors", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.plot_sol", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.print_data_as_csv", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.print_error_conv_table", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.read_ncl_rgb_file", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.Rotation2D", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.Rotation2D.configure", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.Rotation2D.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.analysis.Analysis", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.analysis.Analysis.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.forward.Forward", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.forward.Forward.get_timestep_str", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.forward.Forward.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.forward.Forward.setup", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.init.Init", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.init.Init.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.mesh.Mesh", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.mesh.Mesh.build_cell_width_lat_lon", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.mesh.Mesh.run", "developers_guide/ocean/generated/compass.ocean.tests.tides.Tides", "developers_guide/ocean/generated/compass.ocean.tests.tides.analysis.Analysis", "developers_guide/ocean/generated/compass.ocean.tests.tides.analysis.Analysis.append_tpxo_data", "developers_guide/ocean/generated/compass.ocean.tests.tides.analysis.Analysis.check_tpxo_data", "developers_guide/ocean/generated/compass.ocean.tests.tides.analysis.Analysis.plot", "developers_guide/ocean/generated/compass.ocean.tests.tides.analysis.Analysis.read_otps2_output", "developers_guide/ocean/generated/compass.ocean.tests.tides.analysis.Analysis.run", "developers_guide/ocean/generated/compass.ocean.tests.tides.analysis.Analysis.run_otps2", "developers_guide/ocean/generated/compass.ocean.tests.tides.analysis.Analysis.setup", "developers_guide/ocean/generated/compass.ocean.tests.tides.analysis.Analysis.setup_otps2", "developers_guide/ocean/generated/compass.ocean.tests.tides.analysis.Analysis.write_coordinate_file", "developers_guide/ocean/generated/compass.ocean.tests.tides.configure", "developers_guide/ocean/generated/compass.ocean.tests.tides.forward.Forward", "developers_guide/ocean/generated/compass.ocean.tests.tides.forward.Forward.configure", "developers_guide/ocean/generated/compass.ocean.tests.tides.forward.Forward.run", "developers_guide/ocean/generated/compass.ocean.tests.tides.forward.forward.ForwardStep", "developers_guide/ocean/generated/compass.ocean.tests.tides.forward.forward.ForwardStep.run", "developers_guide/ocean/generated/compass.ocean.tests.tides.forward.forward.ForwardStep.setup", "developers_guide/ocean/generated/compass.ocean.tests.tides.init.Init", "developers_guide/ocean/generated/compass.ocean.tests.tides.init.Init.configure", "developers_guide/ocean/generated/compass.ocean.tests.tides.init.Init.run", "developers_guide/ocean/generated/compass.ocean.tests.tides.init.initial_state.InitialState", "developers_guide/ocean/generated/compass.ocean.tests.tides.init.initial_state.InitialState.run", "developers_guide/ocean/generated/compass.ocean.tests.tides.init.initial_state.InitialState.setup", "developers_guide/ocean/generated/compass.ocean.tests.tides.init.interpolate_wave_drag.InterpolateWaveDrag", "developers_guide/ocean/generated/compass.ocean.tests.tides.init.interpolate_wave_drag.InterpolateWaveDrag.interpolate_data_to_grid", "developers_guide/ocean/generated/compass.ocean.tests.tides.init.interpolate_wave_drag.InterpolateWaveDrag.plot_interp_data", "developers_guide/ocean/generated/compass.ocean.tests.tides.init.interpolate_wave_drag.InterpolateWaveDrag.run", "developers_guide/ocean/generated/compass.ocean.tests.tides.init.interpolate_wave_drag.InterpolateWaveDrag.write_to_file", "developers_guide/ocean/generated/compass.ocean.tests.tides.init.remap_bathymetry.RemapBathymetry", "developers_guide/ocean/generated/compass.ocean.tests.tides.init.remap_bathymetry.RemapBathymetry.run", "developers_guide/ocean/generated/compass.ocean.tests.tides.mesh.Mesh", "developers_guide/ocean/generated/compass.ocean.tests.tides.mesh.Mesh.configure", "developers_guide/ocean/generated/compass.ocean.tests.tides.mesh.Mesh.run", "developers_guide/ocean/generated/compass.ocean.tests.ziso.Ziso", "developers_guide/ocean/generated/compass.ocean.tests.ziso.ZisoTestCase", "developers_guide/ocean/generated/compass.ocean.tests.ziso.ZisoTestCase.configure", "developers_guide/ocean/generated/compass.ocean.tests.ziso.ZisoTestCase.run", "developers_guide/ocean/generated/compass.ocean.tests.ziso.configure", "developers_guide/ocean/generated/compass.ocean.tests.ziso.forward.Forward", "developers_guide/ocean/generated/compass.ocean.tests.ziso.forward.Forward.run", "developers_guide/ocean/generated/compass.ocean.tests.ziso.forward.Forward.setup", "developers_guide/ocean/generated/compass.ocean.tests.ziso.initial_state.InitialState", "developers_guide/ocean/generated/compass.ocean.tests.ziso.initial_state.InitialState.run", "developers_guide/ocean/generated/compass.ocean.tests.ziso.with_frazil.WithFrazil", "developers_guide/ocean/generated/compass.ocean.tests.ziso.with_frazil.WithFrazil.configure", "developers_guide/ocean/generated/compass.ocean.tests.ziso.with_frazil.WithFrazil.run", "developers_guide/ocean/generated/compass.ocean.vertical.grid_1d.generate_1d_grid", "developers_guide/ocean/generated/compass.ocean.vertical.grid_1d.write_1d_grid", "developers_guide/ocean/generated/compass.ocean.vertical.init_vertical_coord", "developers_guide/ocean/generated/compass.ocean.vertical.partial_cells.alter_bottom_depth", "developers_guide/ocean/generated/compass.ocean.vertical.partial_cells.alter_ssh", "developers_guide/ocean/generated/compass.ocean.vertical.zlevel.compute_min_max_level_cell", "developers_guide/ocean/generated/compass.ocean.vertical.zlevel.compute_z_level_layer_thickness", "developers_guide/ocean/generated/compass.ocean.vertical.zlevel.compute_z_level_resting_thickness", "developers_guide/ocean/generated/compass.ocean.vertical.zlevel.init_z_level_vertical_coord", "developers_guide/ocean/generated/compass.ocean.vertical.zstar.init_z_star_vertical_coord", "developers_guide/ocean/index", "developers_guide/ocean/test_groups/baroclinic_channel", "developers_guide/ocean/test_groups/dam_break", "developers_guide/ocean/test_groups/drying_slope", "developers_guide/ocean/test_groups/global_convergence", "developers_guide/ocean/test_groups/global_ocean", "developers_guide/ocean/test_groups/gotm", "developers_guide/ocean/test_groups/hurricane", "developers_guide/ocean/test_groups/ice_shelf_2d", "developers_guide/ocean/test_groups/index", "developers_guide/ocean/test_groups/internal_wave", "developers_guide/ocean/test_groups/isomip_plus", "developers_guide/ocean/test_groups/merry_go_round", "developers_guide/ocean/test_groups/planar_convergence", "developers_guide/ocean/test_groups/soma", "developers_guide/ocean/test_groups/sphere_transport", "developers_guide/ocean/test_groups/spherical_harmonic_transform", "developers_guide/ocean/test_groups/tides", "developers_guide/ocean/test_groups/ziso", "developers_guide/organization", "developers_guide/overview", "developers_guide/quick_start", "developers_guide/troubleshooting", "glossary", "index", "tutorials/dev_add_param_study", "tutorials/dev_add_test_group", "tutorials/dev_porting_legacy", "users_guide/config_files", "users_guide/landice/framework/index", "users_guide/landice/index", "users_guide/landice/suites", "users_guide/landice/test_groups/calving_dt_convergence", "users_guide/landice/test_groups/circular_shelf", "users_guide/landice/test_groups/dome", "users_guide/landice/test_groups/eismint2", "users_guide/landice/test_groups/enthalpy_benchmark", "users_guide/landice/test_groups/greenland", "users_guide/landice/test_groups/humboldt", "users_guide/landice/test_groups/hydro_radial", "users_guide/landice/test_groups/index", "users_guide/landice/test_groups/ismip6_forcing", "users_guide/landice/test_groups/kangerlussuaq", "users_guide/landice/test_groups/koge_bugt_s", "users_guide/landice/test_groups/mismipplus", "users_guide/landice/test_groups/thwaites", "users_guide/machines/anvil", "users_guide/machines/chrysalis", "users_guide/machines/compy", "users_guide/machines/cori", "users_guide/machines/index", "users_guide/machines/perlmutter", "users_guide/ocean/framework/ice_shelf", "users_guide/ocean/framework/index", "users_guide/ocean/framework/vertical", "users_guide/ocean/index", "users_guide/ocean/suites", "users_guide/ocean/test_groups/baroclinic_channel", "users_guide/ocean/test_groups/dam_break", "users_guide/ocean/test_groups/drying_slope", "users_guide/ocean/test_groups/global_convergence", "users_guide/ocean/test_groups/global_ocean", "users_guide/ocean/test_groups/gotm", "users_guide/ocean/test_groups/hurricane", "users_guide/ocean/test_groups/ice_shelf_2d", "users_guide/ocean/test_groups/index", "users_guide/ocean/test_groups/internal_wave", "users_guide/ocean/test_groups/isomip_plus", "users_guide/ocean/test_groups/merry_go_round", "users_guide/ocean/test_groups/planar_convergence", "users_guide/ocean/test_groups/soma", "users_guide/ocean/test_groups/sphere_transport", "users_guide/ocean/test_groups/spherical_harmonic_transform", "users_guide/ocean/test_groups/tides", "users_guide/ocean/test_groups/ziso", "users_guide/quick_start", "users_guide/test_cases", "users_guide/test_suites", "versions"], "filenames": ["design_docs/cached_outputs.rst", "design_docs/compass_package.rst", "design_docs/index.rst", "design_docs/template.rst", "developers_guide/api.rst", "developers_guide/building_docs.rst", "developers_guide/command_line.rst", "developers_guide/docs.rst", "developers_guide/framework.rst", "developers_guide/generated/compass.MpasCore.rst", "developers_guide/generated/compass.MpasCore.add_test_group.rst", "developers_guide/generated/compass.Step.rst", "developers_guide/generated/compass.Step.add_input_file.rst", "developers_guide/generated/compass.Step.add_model_as_input.rst", "developers_guide/generated/compass.Step.add_namelist_file.rst", "developers_guide/generated/compass.Step.add_namelist_options.rst", "developers_guide/generated/compass.Step.add_output_file.rst", "developers_guide/generated/compass.Step.add_streams_file.rst", "developers_guide/generated/compass.Step.constrain_resources.rst", "developers_guide/generated/compass.Step.run.rst", "developers_guide/generated/compass.Step.runtime_setup.rst", "developers_guide/generated/compass.Step.set_resources.rst", "developers_guide/generated/compass.Step.setup.rst", "developers_guide/generated/compass.Step.update_namelist_at_runtime.rst", "developers_guide/generated/compass.Step.update_namelist_pio.rst", "developers_guide/generated/compass.Step.update_streams_at_runtime.rst", "developers_guide/generated/compass.TestCase.rst", "developers_guide/generated/compass.TestCase.add_step.rst", "developers_guide/generated/compass.TestCase.configure.rst", "developers_guide/generated/compass.TestCase.run.rst", "developers_guide/generated/compass.TestCase.validate.rst", "developers_guide/generated/compass.TestGroup.rst", "developers_guide/generated/compass.TestGroup.add_test_case.rst", "developers_guide/generated/compass.__main__.main.rst", "developers_guide/generated/compass.cache.update_cache.rst", "developers_guide/generated/compass.clean.clean_cases.rst", "developers_guide/generated/compass.config.CompassConfigParser.rst", "developers_guide/generated/compass.io.download.rst", "developers_guide/generated/compass.io.package_path.rst", "developers_guide/generated/compass.io.symlink.rst", "developers_guide/generated/compass.list.list_cases.rst", "developers_guide/generated/compass.list.list_machines.rst", "developers_guide/generated/compass.list.list_suites.rst", "developers_guide/generated/compass.logging.log_method_call.rst", "developers_guide/generated/compass.mesh.IcosahedralMeshStep.rst", "developers_guide/generated/compass.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon.rst", "developers_guide/generated/compass.mesh.IcosahedralMeshStep.get_cell_width.rst", "developers_guide/generated/compass.mesh.IcosahedralMeshStep.get_subdivisions.rst", "developers_guide/generated/compass.mesh.IcosahedralMeshStep.make_jigsaw_mesh.rst", "developers_guide/generated/compass.mesh.IcosahedralMeshStep.run.rst", "developers_guide/generated/compass.mesh.IcosahedralMeshStep.setup.rst", "developers_guide/generated/compass.mesh.QuasiUniformSphericalMeshStep.rst", "developers_guide/generated/compass.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon.rst", "developers_guide/generated/compass.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh.rst", "developers_guide/generated/compass.mesh.QuasiUniformSphericalMeshStep.run.rst", "developers_guide/generated/compass.mesh.QuasiUniformSphericalMeshStep.setup.rst", "developers_guide/generated/compass.mesh.spherical.SphericalBaseStep.rst", "developers_guide/generated/compass.mesh.spherical.SphericalBaseStep.run.rst", "developers_guide/generated/compass.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width.rst", "developers_guide/generated/compass.mesh.spherical.SphericalBaseStep.setup.rst", "developers_guide/generated/compass.model.make_graph_file.rst", "developers_guide/generated/compass.model.partition.rst", "developers_guide/generated/compass.model.run_model.rst", "developers_guide/generated/compass.mpas_cores.get_mpas_cores.rst", "developers_guide/generated/compass.parallel.check_parallel_system.rst", "developers_guide/generated/compass.parallel.get_available_cores_and_nodes.rst", "developers_guide/generated/compass.parallel.run_command.rst", "developers_guide/generated/compass.parallel.set_cores_per_node.rst", "developers_guide/generated/compass.provenance.write.rst", "developers_guide/generated/compass.run.serial.run_single_step.rst", "developers_guide/generated/compass.run.serial.run_tests.rst", "developers_guide/generated/compass.setup.setup_case.rst", "developers_guide/generated/compass.setup.setup_cases.rst", "developers_guide/generated/compass.suite.clean_suite.rst", "developers_guide/generated/compass.suite.setup_suite.rst", "developers_guide/generated/compass.validate.compare_timers.rst", "developers_guide/generated/compass.validate.compare_variables.rst", "developers_guide/landice/api.rst", "developers_guide/landice/framework.rst", "developers_guide/landice/generated/compass.landice.Landice.rst", "developers_guide/landice/generated/compass.landice.tests.calving_dt_convergence.CalvingDtConvergence.rst", "developers_guide/landice/generated/compass.landice.tests.calving_dt_convergence.dt_convergence_test.DtConvergenceTest.rst", "developers_guide/landice/generated/compass.landice.tests.calving_dt_convergence.dt_convergence_test.DtConvergenceTest.validate.rst", "developers_guide/landice/generated/compass.landice.tests.calving_dt_convergence.run_model.RunModel.rst", "developers_guide/landice/generated/compass.landice.tests.calving_dt_convergence.run_model.RunModel.run.rst", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.CircularShelf.rst", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.decomposition_test.DecompositionTest.rst", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.decomposition_test.DecompositionTest.run.rst", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.run_model.RunModel.rst", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.run_model.RunModel.run.rst", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.setup_mesh.SetupMesh.rst", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.setup_mesh.SetupMesh.run.rst", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.visualize.Visualize.rst", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.visualize.Visualize.run.rst", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.visualize.visualize_circular_shelf.rst", "developers_guide/landice/generated/compass.landice.tests.dome.Dome.rst", "developers_guide/landice/generated/compass.landice.tests.dome.decomposition_test.DecompositionTest.rst", "developers_guide/landice/generated/compass.landice.tests.dome.decomposition_test.DecompositionTest.run.rst", "developers_guide/landice/generated/compass.landice.tests.dome.restart_test.RestartTest.rst", "developers_guide/landice/generated/compass.landice.tests.dome.restart_test.RestartTest.run.rst", "developers_guide/landice/generated/compass.landice.tests.dome.run_model.RunModel.rst", "developers_guide/landice/generated/compass.landice.tests.dome.run_model.RunModel.run.rst", "developers_guide/landice/generated/compass.landice.tests.dome.run_model.RunModel.setup.rst", "developers_guide/landice/generated/compass.landice.tests.dome.setup_mesh.SetupMesh.rst", "developers_guide/landice/generated/compass.landice.tests.dome.setup_mesh.SetupMesh.run.rst", "developers_guide/landice/generated/compass.landice.tests.dome.smoke_test.SmokeTest.rst", "developers_guide/landice/generated/compass.landice.tests.dome.smoke_test.SmokeTest.run.rst", "developers_guide/landice/generated/compass.landice.tests.dome.visualize.Visualize.rst", "developers_guide/landice/generated/compass.landice.tests.dome.visualize.Visualize.run.rst", "developers_guide/landice/generated/compass.landice.tests.dome.visualize.visualize_dome.rst", "developers_guide/landice/generated/compass.landice.tests.eismint2.Eismint2.rst", "developers_guide/landice/generated/compass.landice.tests.eismint2.decomposition_test.DecompositionTest.rst", "developers_guide/landice/generated/compass.landice.tests.eismint2.decomposition_test.DecompositionTest.run.rst", "developers_guide/landice/generated/compass.landice.tests.eismint2.restart_test.RestartTest.rst", "developers_guide/landice/generated/compass.landice.tests.eismint2.restart_test.RestartTest.run.rst", "developers_guide/landice/generated/compass.landice.tests.eismint2.run_experiment.RunExperiment.rst", "developers_guide/landice/generated/compass.landice.tests.eismint2.run_experiment.RunExperiment.run.rst", "developers_guide/landice/generated/compass.landice.tests.eismint2.run_experiment.RunExperiment.setup.rst", "developers_guide/landice/generated/compass.landice.tests.eismint2.setup_mesh.SetupMesh.rst", "developers_guide/landice/generated/compass.landice.tests.eismint2.setup_mesh.SetupMesh.run.rst", "developers_guide/landice/generated/compass.landice.tests.eismint2.standard_experiments.StandardExperiments.rst", "developers_guide/landice/generated/compass.landice.tests.eismint2.standard_experiments.StandardExperiments.run.rst", "developers_guide/landice/generated/compass.landice.tests.eismint2.standard_experiments.visualize.Visualize.rst", "developers_guide/landice/generated/compass.landice.tests.eismint2.standard_experiments.visualize.Visualize.run.rst", "developers_guide/landice/generated/compass.landice.tests.eismint2.standard_experiments.visualize.visualize_eismint2.rst", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.A.A.rst", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.A.A.configure.rst", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.A.A.run.rst", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.A.visualize.Visualize.rst", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.A.visualize.Visualize.run.rst", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.B.B.rst", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.B.B.configure.rst", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.B.B.run.rst", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.B.visualize.Visualize.rst", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.B.visualize.Visualize.run.rst", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.EnthalpyBenchmark.rst", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.run_model.RunModel.rst", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.run_model.RunModel.run.rst", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.run_model.RunModel.setup.rst", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.setup_mesh.SetupMesh.rst", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.setup_mesh.SetupMesh.run.rst", "developers_guide/landice/generated/compass.landice.tests.greenland.Greenland.rst", "developers_guide/landice/generated/compass.landice.tests.greenland.decomposition_test.DecompositionTest.rst", "developers_guide/landice/generated/compass.landice.tests.greenland.decomposition_test.DecompositionTest.run.rst", "developers_guide/landice/generated/compass.landice.tests.greenland.high_res_mesh.HighResMesh.rst", "developers_guide/landice/generated/compass.landice.tests.greenland.high_res_mesh.HighResMesh.run.rst", "developers_guide/landice/generated/compass.landice.tests.greenland.mesh.Mesh.rst", "developers_guide/landice/generated/compass.landice.tests.greenland.mesh.Mesh.build_cell_width.rst", "developers_guide/landice/generated/compass.landice.tests.greenland.mesh.Mesh.run.rst", "developers_guide/landice/generated/compass.landice.tests.greenland.restart_test.RestartTest.rst", "developers_guide/landice/generated/compass.landice.tests.greenland.restart_test.RestartTest.run.rst", "developers_guide/landice/generated/compass.landice.tests.greenland.run_model.RunModel.rst", "developers_guide/landice/generated/compass.landice.tests.greenland.run_model.RunModel.run.rst", "developers_guide/landice/generated/compass.landice.tests.greenland.run_model.RunModel.setup.rst", "developers_guide/landice/generated/compass.landice.tests.greenland.smoke_test.SmokeTest.rst", "developers_guide/landice/generated/compass.landice.tests.greenland.smoke_test.SmokeTest.run.rst", "developers_guide/landice/generated/compass.landice.tests.humboldt.Humboldt.rst", "developers_guide/landice/generated/compass.landice.tests.humboldt.decomposition_test.DecompositionTest.rst", "developers_guide/landice/generated/compass.landice.tests.humboldt.decomposition_test.DecompositionTest.validate.rst", "developers_guide/landice/generated/compass.landice.tests.humboldt.mesh.Mesh.rst", "developers_guide/landice/generated/compass.landice.tests.humboldt.mesh.Mesh.run.rst", "developers_guide/landice/generated/compass.landice.tests.humboldt.mesh_gen.MeshGen.rst", "developers_guide/landice/generated/compass.landice.tests.humboldt.mesh_gen.MeshGen.run.rst", "developers_guide/landice/generated/compass.landice.tests.humboldt.restart_test.RestartTest.rst", "developers_guide/landice/generated/compass.landice.tests.humboldt.restart_test.RestartTest.validate.rst", "developers_guide/landice/generated/compass.landice.tests.humboldt.run_model.RunModel.rst", "developers_guide/landice/generated/compass.landice.tests.humboldt.run_model.RunModel.run.rst", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.HydroRadial.rst", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.decomposition_test.DecompositionTest.rst", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.decomposition_test.DecompositionTest.run.rst", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.restart_test.RestartTest.rst", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.restart_test.RestartTest.run.rst", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.run_model.RunModel.rst", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.run_model.RunModel.run.rst", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.run_model.RunModel.setup.rst", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.setup_mesh.SetupMesh.rst", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.setup_mesh.SetupMesh.run.rst", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.spinup_test.SpinupTest.rst", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.spinup_test.SpinupTest.run.rst", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.steady_state_drift_test.SteadyStateDriftTest.rst", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.steady_state_drift_test.SteadyStateDriftTest.run.rst", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.visualize.Visualize.rst", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.visualize.Visualize.run.rst", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.visualize.visualize_hydro_radial.rst", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.Ismip6Forcing.rst", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.atmosphere.Atmosphere.rst", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.atmosphere.Atmosphere.configure.rst", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.atmosphere.create_mapfile_smb.rst", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.atmosphere.create_mapfile_smb.build_mapping_file.rst", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.atmosphere.create_mapfile_smb.create_atm_scrip.rst", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.atmosphere.process_smb.ProcessSMB.rst", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.atmosphere.process_smb.ProcessSMB.correct_smb_anomaly_for_climatology.rst", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.atmosphere.process_smb.ProcessSMB.remap_ismip6_smb_to_mali.rst", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.atmosphere.process_smb.ProcessSMB.rename_ismip6_smb_to_mali_vars.rst", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.atmosphere.process_smb.ProcessSMB.run.rst", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.atmosphere.process_smb.ProcessSMB.setup.rst", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.ProcessSmbRacmo.rst", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.ProcessSmbRacmo.correct_smb_anomaly_for_base_smb.rst", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.ProcessSmbRacmo.remap_source_smb_to_mali.rst", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.ProcessSmbRacmo.rename_source_smb_to_mali_vars.rst", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.ProcessSmbRacmo.run.rst", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.ProcessSmbRacmo.setup.rst", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.configure.configure.rst", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.create_mapfile.build_mapping_file.rst", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.ocean_basal.OceanBasal.rst", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.ocean_basal.OceanBasal.configure.rst", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.ProcessBasalMelt.rst", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.ProcessBasalMelt.combine_ismip6_inputfiles.rst", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.ProcessBasalMelt.remap_ismip6_basal_melt_to_mali_vars.rst", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.ProcessBasalMelt.rename_ismip6_basal_melt_to_mali_vars.rst", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.ProcessBasalMelt.run.rst", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.ProcessBasalMelt.setup.rst", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.ocean_thermal.OceanThermal.rst", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.ocean_thermal.OceanThermal.configure.rst", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.ocean_thermal.process_thermal_forcing.ProcessThermalForcing.rst", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.ocean_thermal.process_thermal_forcing.ProcessThermalForcing.remap_ismip6_thermal_forcing_to_mali_vars.rst", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.ocean_thermal.process_thermal_forcing.ProcessThermalForcing.rename_ismip6_thermal_forcing_to_mali_vars.rst", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.ocean_thermal.process_thermal_forcing.ProcessThermalForcing.run.rst", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.ocean_thermal.process_thermal_forcing.ProcessThermalForcing.setup.rst", "developers_guide/landice/generated/compass.landice.tests.kangerlussuaq.Kangerlussuaq.rst", "developers_guide/landice/generated/compass.landice.tests.kangerlussuaq.mesh.Mesh.rst", "developers_guide/landice/generated/compass.landice.tests.kangerlussuaq.mesh.Mesh.run.rst", "developers_guide/landice/generated/compass.landice.tests.kangerlussuaq.mesh_gen.MeshGen.rst", "developers_guide/landice/generated/compass.landice.tests.kangerlussuaq.mesh_gen.MeshGen.run.rst", "developers_guide/landice/generated/compass.landice.tests.koge_bugt_s.KogeBugtS.rst", "developers_guide/landice/generated/compass.landice.tests.koge_bugt_s.mesh.Mesh.rst", "developers_guide/landice/generated/compass.landice.tests.koge_bugt_s.mesh.Mesh.run.rst", "developers_guide/landice/generated/compass.landice.tests.koge_bugt_s.mesh_gen.MeshGen.rst", "developers_guide/landice/generated/compass.landice.tests.koge_bugt_s.mesh_gen.MeshGen.run.rst", "developers_guide/landice/generated/compass.landice.tests.mismipplus.MISMIPplus.rst", "developers_guide/landice/generated/compass.landice.tests.mismipplus.run_model.RunModel.rst", "developers_guide/landice/generated/compass.landice.tests.mismipplus.run_model.RunModel.run.rst", "developers_guide/landice/generated/compass.landice.tests.mismipplus.run_model.RunModel.setup.rst", "developers_guide/landice/generated/compass.landice.tests.mismipplus.smoke_test.SmokeTest.rst", "developers_guide/landice/generated/compass.landice.tests.mismipplus.smoke_test.SmokeTest.run.rst", "developers_guide/landice/generated/compass.landice.tests.thwaites.Thwaites.rst", "developers_guide/landice/generated/compass.landice.tests.thwaites.decomposition_test.DecompositionTest.rst", "developers_guide/landice/generated/compass.landice.tests.thwaites.decomposition_test.DecompositionTest.run.rst", "developers_guide/landice/generated/compass.landice.tests.thwaites.restart_test.RestartTest.rst", "developers_guide/landice/generated/compass.landice.tests.thwaites.restart_test.RestartTest.run.rst", "developers_guide/landice/generated/compass.landice.tests.thwaites.run_model.RunModel.rst", "developers_guide/landice/generated/compass.landice.tests.thwaites.run_model.RunModel.run.rst", "developers_guide/landice/generated/compass.landice.tests.thwaites.run_model.RunModel.setup.rst", "developers_guide/landice/index.rst", "developers_guide/landice/test_groups/calving_dt_convergence.rst", "developers_guide/landice/test_groups/circular_shelf.rst", "developers_guide/landice/test_groups/dome.rst", "developers_guide/landice/test_groups/eismint2.rst", "developers_guide/landice/test_groups/enthalpy_benchmark.rst", "developers_guide/landice/test_groups/greenland.rst", "developers_guide/landice/test_groups/humboldt.rst", "developers_guide/landice/test_groups/hydro_radial.rst", "developers_guide/landice/test_groups/index.rst", "developers_guide/landice/test_groups/ismip6_forcing.rst", "developers_guide/landice/test_groups/kangerlussuaq.rst", "developers_guide/landice/test_groups/koge_bugt_s.rst", "developers_guide/landice/test_groups/mismipplus.rst", "developers_guide/landice/test_groups/thwaites.rst", "developers_guide/machines/anvil.rst", "developers_guide/machines/chrysalis.rst", "developers_guide/machines/compy.rst", "developers_guide/machines/cori.rst", "developers_guide/machines/index.rst", "developers_guide/machines/perlmutter.rst", "developers_guide/ocean/api.rst", "developers_guide/ocean/framework.rst", "developers_guide/ocean/generated/compass.ocean.Ocean.rst", "developers_guide/ocean/generated/compass.ocean.haney.compute_haney_number.rst", "developers_guide/ocean/generated/compass.ocean.iceshelf.adjust_ssh.rst", "developers_guide/ocean/generated/compass.ocean.iceshelf.compute_land_ice_pressure_and_draft.rst", "developers_guide/ocean/generated/compass.ocean.mesh.cull.CullMeshStep.rst", "developers_guide/ocean/generated/compass.ocean.mesh.cull.CullMeshStep.run.rst", "developers_guide/ocean/generated/compass.ocean.mesh.cull.CullMeshStep.setup.rst", "developers_guide/ocean/generated/compass.ocean.mesh.cull.cull_mesh.rst", "developers_guide/ocean/generated/compass.ocean.mesh.floodplain.FloodplainMeshStep.rst", "developers_guide/ocean/generated/compass.ocean.mesh.floodplain.FloodplainMeshStep.run.rst", "developers_guide/ocean/generated/compass.ocean.particles.remap_particles.rst", "developers_guide/ocean/generated/compass.ocean.particles.write.rst", "developers_guide/ocean/generated/compass.ocean.plot.plot_initial_state.rst", "developers_guide/ocean/generated/compass.ocean.plot.plot_vertical_grid.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.BaroclinicChannel.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.decomp_test.DecompTest.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.decomp_test.DecompTest.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.decomp_test.DecompTest.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.default.Default.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.default.Default.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.default.Default.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.forward.Forward.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.forward.Forward.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.forward.Forward.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.initial_state.InitialState.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.initial_state.InitialState.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.initial_state.InitialState.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.restart_test.RestartTest.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.restart_test.RestartTest.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.restart_test.RestartTest.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.rpe_test.RpeTest.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.rpe_test.RpeTest.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.rpe_test.RpeTest.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.dam_break.DamBreak.rst", "developers_guide/ocean/generated/compass.ocean.tests.dam_break.default.Default.rst", "developers_guide/ocean/generated/compass.ocean.tests.dam_break.default.Default.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.dam_break.forward.Forward.rst", "developers_guide/ocean/generated/compass.ocean.tests.dam_break.forward.Forward.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.dam_break.initial_state.InitialState.rst", "developers_guide/ocean/generated/compass.ocean.tests.dam_break.initial_state.InitialState.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.dam_break.viz.Viz.rst", "developers_guide/ocean/generated/compass.ocean.tests.dam_break.viz.Viz.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.drying_slope.DryingSlope.rst", "developers_guide/ocean/generated/compass.ocean.tests.drying_slope.default.Default.rst", "developers_guide/ocean/generated/compass.ocean.tests.drying_slope.default.Default.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.drying_slope.forward.Forward.rst", "developers_guide/ocean/generated/compass.ocean.tests.drying_slope.forward.Forward.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.drying_slope.initial_state.InitialState.rst", "developers_guide/ocean/generated/compass.ocean.tests.drying_slope.initial_state.InitialState.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.drying_slope.viz.Viz.rst", "developers_guide/ocean/generated/compass.ocean.tests.drying_slope.viz.Viz.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.GlobalConvergence.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.CosineBell.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.CosineBell.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.CosineBell.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rmse.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.forward.Forward.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.forward.Forward.get_dt.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.forward.Forward.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.forward.Forward.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.init.Init.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.init.Init.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.GlobalOcean.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.analysis_test.AnalysisTest.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.analysis_test.AnalysisTest.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.analysis_test.AnalysisTest.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.configure.configure_global_ocean.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.daily_output_test.DailyOutputTest.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.daily_output_test.DailyOutputTest.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.daily_output_test.DailyOutputTest.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.decomp_test.DecompTest.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.decomp_test.DecompTest.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.decomp_test.DecompTest.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.dynamic_adjustment.DynamicAdjustment.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.dynamic_adjustment.DynamicAdjustment.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.FilesForE3SM.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.FilesForE3SM.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.FilesForE3SM.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.diagnostics_files.DiagnosticsFiles.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.diagnostics_files.DiagnosticsFiles.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.ocean_graph_partition.OceanGraphPartition.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.ocean_graph_partition.OceanGraphPartition.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.ocean_initial_condition.OceanInitialCondition.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.ocean_initial_condition.OceanInitialCondition.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.scrip.Scrip.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.scrip.Scrip.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.seaice_initial_condition.SeaiceInitialCondition.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.seaice_initial_condition.SeaiceInitialCondition.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.forward.ForwardStep.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.forward.ForwardStep.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.forward.ForwardStep.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.forward.ForwardTestCase.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.forward.ForwardTestCase.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.forward.ForwardTestCase.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.init.Init.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.init.Init.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.init.Init.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.init.initial_state.InitialState.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.init.initial_state.InitialState.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.init.initial_state.InitialState.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.init.ssh_adjustment.SshAdjustment.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.init.ssh_adjustment.SshAdjustment.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.init.ssh_adjustment.SshAdjustment.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.Mesh.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.Mesh.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.Mesh.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.ec30to60.EC30to60BaseMesh.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.ec30to60.EC30to60BaseMesh.build_cell_width_lat_lon.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.ec30to60.dynamic_adjustment.EC30to60DynamicAdjustment.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.ec30to60.dynamic_adjustment.EC30to60DynamicAdjustment.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.ec30to60.dynamic_adjustment.EC30to60DynamicAdjustment.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.qu240.dynamic_adjustment.QU240DynamicAdjustment.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.qu240.dynamic_adjustment.QU240DynamicAdjustment.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.qu240.dynamic_adjustment.QU240DynamicAdjustment.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.so12to60.SO12to60BaseMesh.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.so12to60.SO12to60BaseMesh.build_cell_width_lat_lon.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.so12to60.dynamic_adjustment.SO12to60DynamicAdjustment.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.so12to60.dynamic_adjustment.SO12to60DynamicAdjustment.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.so12to60.dynamic_adjustment.SO12to60DynamicAdjustment.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.wc14.WC14BaseMesh.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.wc14.WC14BaseMesh.build_cell_width_lat_lon.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.wc14.dynamic_adjustment.WC14DynamicAdjustment.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.wc14.dynamic_adjustment.WC14DynamicAdjustment.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.wc14.dynamic_adjustment.WC14DynamicAdjustment.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.metadata.add_mesh_and_init_metadata.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.metadata.get_e3sm_mesh_names.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.performance_test.PerformanceTest.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.performance_test.PerformanceTest.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.performance_test.PerformanceTest.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.restart_test.RestartTest.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.restart_test.RestartTest.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.restart_test.RestartTest.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.threads_test.ThreadsTest.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.threads_test.ThreadsTest.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.threads_test.ThreadsTest.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.gotm.Gotm.rst", "developers_guide/ocean/generated/compass.ocean.tests.gotm.default.Default.rst", "developers_guide/ocean/generated/compass.ocean.tests.gotm.default.Default.validate.rst", "developers_guide/ocean/generated/compass.ocean.tests.gotm.default.analysis.Analysis.rst", "developers_guide/ocean/generated/compass.ocean.tests.gotm.default.analysis.Analysis.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.gotm.default.forward.Forward.rst", "developers_guide/ocean/generated/compass.ocean.tests.gotm.default.forward.Forward.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.gotm.default.init.Init.rst", "developers_guide/ocean/generated/compass.ocean.tests.gotm.default.init.Init.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.Hurricane.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.analysis.Analysis.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.analysis.Analysis.read_pointstats.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.analysis.Analysis.read_station_data.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.analysis.Analysis.read_station_file.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.analysis.Analysis.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.analysis.Analysis.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.forward.Forward.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.forward.Forward.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.forward.Forward.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.forward.forward.ForwardStep.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.forward.forward.ForwardStep.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.forward.forward.ForwardStep.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.Init.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.Init.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.Init.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.create_pointstats_file.CreatePointstatsFile.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.create_pointstats_file.CreatePointstatsFile.create_pointstats_file.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.create_pointstats_file.CreatePointstatsFile.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.initial_state.InitialState.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.initial_state.InitialState.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.initial_state.InitialState.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing.interpolate_data_to_grid.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing.plot_interp_data.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing.write_to_file.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.mesh.Mesh.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.mesh.Mesh.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.mesh.Mesh.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.mesh.dequ120at30cr10rr2.DEQU120at30cr10rr2BaseMesh.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.mesh.dequ120at30cr10rr2.DEQU120at30cr10rr2BaseMesh.build_cell_width_lat_lon.rst", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.IceShelf2d.rst", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.default.Default.rst", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.default.Default.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.default.Default.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.forward.Forward.rst", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.forward.Forward.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.forward.Forward.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.initial_state.InitialState.rst", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.initial_state.InitialState.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.restart_test.RestartTest.rst", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.restart_test.RestartTest.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.restart_test.RestartTest.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.ssh_adjustment.SshAdjustment.rst", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.ssh_adjustment.SshAdjustment.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.ssh_adjustment.SshAdjustment.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.viz.Viz.rst", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.viz.Viz.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.InternalWave.rst", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.default.Default.rst", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.default.Default.validate.rst", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.forward.Forward.rst", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.forward.Forward.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.initial_state.InitialState.rst", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.initial_state.InitialState.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.rpe_test.RpeTest.rst", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.rpe_test.analysis.Analysis.rst", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.rpe_test.analysis.Analysis.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.ten_day_test.TenDayTest.rst", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.ten_day_test.TenDayTest.validate.rst", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.viz.Viz.rst", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.viz.Viz.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.IsomipPlus.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.evap.update_evaporation_flux.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.forward.Forward.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.forward.Forward.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.forward.Forward.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.geom.interpolate_ocean_mask.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.geom.process_input_geometry.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.initial_state.InitialState.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.initial_state.InitialState.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.isomip_plus_test.IsomipPlusTest.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.isomip_plus_test.IsomipPlusTest.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.isomip_plus_test.IsomipPlusTest.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.misomip.Misomip.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.misomip.Misomip.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.ssh_adjustment.SshAdjustment.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.ssh_adjustment.SshAdjustment.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.ssh_adjustment.SshAdjustment.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.streamfunction.Streamfunction.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.streamfunction.Streamfunction.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.Viz.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.Viz.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.file_complete.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.images_to_movies.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_3d_field_top_bot_section.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_barotropic_streamfunction.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_horiz_series.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_ice_shelf_boundary_variables.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_layer_interfaces.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_melt_rates.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_overturning_streamfunction.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_potential_density.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_salinity.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_temperature.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.TimeSeriesPlotter.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.TimeSeriesPlotter.plot_melt_time_series.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.TimeSeriesPlotter.plot_time_series.rst", "developers_guide/ocean/generated/compass.ocean.tests.merry_go_round.MerryGoRound.rst", "developers_guide/ocean/generated/compass.ocean.tests.merry_go_round.convergence_test.analysis.Analysis.rst", "developers_guide/ocean/generated/compass.ocean.tests.merry_go_round.convergence_test.analysis.Analysis.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.merry_go_round.default.Default.rst", "developers_guide/ocean/generated/compass.ocean.tests.merry_go_round.default.Default.validate.rst", "developers_guide/ocean/generated/compass.ocean.tests.merry_go_round.forward.Forward.rst", "developers_guide/ocean/generated/compass.ocean.tests.merry_go_round.forward.Forward.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.merry_go_round.initial_state.InitialState.rst", "developers_guide/ocean/generated/compass.ocean.tests.merry_go_round.initial_state.InitialState.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.merry_go_round.viz.Viz.rst", "developers_guide/ocean/generated/compass.ocean.tests.merry_go_round.viz.Viz.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.PlanarConvergence.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.conv_init.ConvInit.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.conv_init.ConvInit.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.conv_test_case.ConvTestCase.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.conv_test_case.ConvTestCase.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.conv_test_case.ConvTestCase.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.conv_test_case.ConvTestCase.update_cores.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.forward.Forward.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.forward.Forward.get_dt_duration.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.forward.Forward.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.forward.Forward.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.horizontal_advection.HorizontalAdvection.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.horizontal_advection.HorizontalAdvection.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.horizontal_advection.HorizontalAdvection.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.horizontal_advection.analysis.Analysis.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.horizontal_advection.analysis.Analysis.rmse.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.horizontal_advection.analysis.Analysis.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.horizontal_advection.init.Init.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.horizontal_advection.init.Init.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.soma.Soma.rst", "developers_guide/ocean/generated/compass.ocean.tests.soma.analysis.Analysis.rst", "developers_guide/ocean/generated/compass.ocean.tests.soma.analysis.Analysis.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.soma.forward.Forward.rst", "developers_guide/ocean/generated/compass.ocean.tests.soma.forward.Forward.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.soma.initial_state.InitialState.rst", "developers_guide/ocean/generated/compass.ocean.tests.soma.initial_state.InitialState.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.soma.soma_test_case.SomaTestCase.rst", "developers_guide/ocean/generated/compass.ocean.tests.soma.soma_test_case.SomaTestCase.validate.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.SphereTransport.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.CorrelatedTracers2D.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.CorrelatedTracers2D.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.CorrelatedTracers2D.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.analysis.Analysis.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.analysis.Analysis.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.Forward.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.Forward.get_timestep_str.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.Forward.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.Forward.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.init.Init.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.init.Init.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.mesh.Mesh.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.mesh.Mesh.build_cell_width_lat_lon.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.mesh.Mesh.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.Divergent2D.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.Divergent2D.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.Divergent2D.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.analysis.Analysis.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.analysis.Analysis.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.forward.Forward.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.forward.Forward.get_timestep_str.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.forward.Forward.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.forward.Forward.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.init.Init.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.init.Init.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.mesh.Mesh.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.mesh.Mesh.build_cell_width_lat_lon.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.mesh.Mesh.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.Nondivergent2D.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.Nondivergent2D.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.Nondivergent2D.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.analysis.Analysis.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.analysis.Analysis.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.forward.Forward.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.forward.Forward.get_timestep_str.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.forward.Forward.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.forward.Forward.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.init.Init.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.init.Init.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.mesh.Mesh.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.mesh.Mesh.build_cell_width_lat_lon.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.mesh.Mesh.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.compute_convergence_rates.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.compute_error_from_output_ncfile.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.make_convergence_arrays.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.plot_convergence.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.plot_filament.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.plot_over_and_undershoot_errors.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.plot_sol.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.print_data_as_csv.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.print_error_conv_table.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.read_ncl_rgb_file.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.Rotation2D.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.Rotation2D.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.Rotation2D.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.analysis.Analysis.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.analysis.Analysis.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.forward.Forward.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.forward.Forward.get_timestep_str.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.forward.Forward.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.forward.Forward.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.init.Init.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.init.Init.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.mesh.Mesh.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.mesh.Mesh.build_cell_width_lat_lon.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.mesh.Mesh.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.tides.Tides.rst", "developers_guide/ocean/generated/compass.ocean.tests.tides.analysis.Analysis.rst", "developers_guide/ocean/generated/compass.ocean.tests.tides.analysis.Analysis.append_tpxo_data.rst", "developers_guide/ocean/generated/compass.ocean.tests.tides.analysis.Analysis.check_tpxo_data.rst", "developers_guide/ocean/generated/compass.ocean.tests.tides.analysis.Analysis.plot.rst", "developers_guide/ocean/generated/compass.ocean.tests.tides.analysis.Analysis.read_otps2_output.rst", "developers_guide/ocean/generated/compass.ocean.tests.tides.analysis.Analysis.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.tides.analysis.Analysis.run_otps2.rst", "developers_guide/ocean/generated/compass.ocean.tests.tides.analysis.Analysis.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.tides.analysis.Analysis.setup_otps2.rst", "developers_guide/ocean/generated/compass.ocean.tests.tides.analysis.Analysis.write_coordinate_file.rst", "developers_guide/ocean/generated/compass.ocean.tests.tides.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.tides.forward.Forward.rst", "developers_guide/ocean/generated/compass.ocean.tests.tides.forward.Forward.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.tides.forward.Forward.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.tides.forward.forward.ForwardStep.rst", "developers_guide/ocean/generated/compass.ocean.tests.tides.forward.forward.ForwardStep.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.tides.forward.forward.ForwardStep.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.tides.init.Init.rst", "developers_guide/ocean/generated/compass.ocean.tests.tides.init.Init.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.tides.init.Init.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.tides.init.initial_state.InitialState.rst", "developers_guide/ocean/generated/compass.ocean.tests.tides.init.initial_state.InitialState.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.tides.init.initial_state.InitialState.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.tides.init.interpolate_wave_drag.InterpolateWaveDrag.rst", "developers_guide/ocean/generated/compass.ocean.tests.tides.init.interpolate_wave_drag.InterpolateWaveDrag.interpolate_data_to_grid.rst", "developers_guide/ocean/generated/compass.ocean.tests.tides.init.interpolate_wave_drag.InterpolateWaveDrag.plot_interp_data.rst", "developers_guide/ocean/generated/compass.ocean.tests.tides.init.interpolate_wave_drag.InterpolateWaveDrag.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.tides.init.interpolate_wave_drag.InterpolateWaveDrag.write_to_file.rst", "developers_guide/ocean/generated/compass.ocean.tests.tides.init.remap_bathymetry.RemapBathymetry.rst", "developers_guide/ocean/generated/compass.ocean.tests.tides.init.remap_bathymetry.RemapBathymetry.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.tides.mesh.Mesh.rst", "developers_guide/ocean/generated/compass.ocean.tests.tides.mesh.Mesh.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.tides.mesh.Mesh.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.ziso.Ziso.rst", "developers_guide/ocean/generated/compass.ocean.tests.ziso.ZisoTestCase.rst", "developers_guide/ocean/generated/compass.ocean.tests.ziso.ZisoTestCase.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.ziso.ZisoTestCase.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.ziso.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.ziso.forward.Forward.rst", "developers_guide/ocean/generated/compass.ocean.tests.ziso.forward.Forward.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.ziso.forward.Forward.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.ziso.initial_state.InitialState.rst", "developers_guide/ocean/generated/compass.ocean.tests.ziso.initial_state.InitialState.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.ziso.with_frazil.WithFrazil.rst", "developers_guide/ocean/generated/compass.ocean.tests.ziso.with_frazil.WithFrazil.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.ziso.with_frazil.WithFrazil.run.rst", "developers_guide/ocean/generated/compass.ocean.vertical.grid_1d.generate_1d_grid.rst", "developers_guide/ocean/generated/compass.ocean.vertical.grid_1d.write_1d_grid.rst", "developers_guide/ocean/generated/compass.ocean.vertical.init_vertical_coord.rst", "developers_guide/ocean/generated/compass.ocean.vertical.partial_cells.alter_bottom_depth.rst", "developers_guide/ocean/generated/compass.ocean.vertical.partial_cells.alter_ssh.rst", "developers_guide/ocean/generated/compass.ocean.vertical.zlevel.compute_min_max_level_cell.rst", "developers_guide/ocean/generated/compass.ocean.vertical.zlevel.compute_z_level_layer_thickness.rst", "developers_guide/ocean/generated/compass.ocean.vertical.zlevel.compute_z_level_resting_thickness.rst", "developers_guide/ocean/generated/compass.ocean.vertical.zlevel.init_z_level_vertical_coord.rst", "developers_guide/ocean/generated/compass.ocean.vertical.zstar.init_z_star_vertical_coord.rst", "developers_guide/ocean/index.rst", "developers_guide/ocean/test_groups/baroclinic_channel.rst", "developers_guide/ocean/test_groups/dam_break.rst", "developers_guide/ocean/test_groups/drying_slope.rst", "developers_guide/ocean/test_groups/global_convergence.rst", "developers_guide/ocean/test_groups/global_ocean.rst", "developers_guide/ocean/test_groups/gotm.rst", "developers_guide/ocean/test_groups/hurricane.rst", "developers_guide/ocean/test_groups/ice_shelf_2d.rst", "developers_guide/ocean/test_groups/index.rst", "developers_guide/ocean/test_groups/internal_wave.rst", "developers_guide/ocean/test_groups/isomip_plus.rst", "developers_guide/ocean/test_groups/merry_go_round.rst", "developers_guide/ocean/test_groups/planar_convergence.rst", "developers_guide/ocean/test_groups/soma.rst", "developers_guide/ocean/test_groups/sphere_transport.rst", "developers_guide/ocean/test_groups/spherical_harmonic_transform.rst", "developers_guide/ocean/test_groups/tides.rst", "developers_guide/ocean/test_groups/ziso.rst", "developers_guide/organization.rst", "developers_guide/overview.rst", "developers_guide/quick_start.rst", "developers_guide/troubleshooting.rst", "glossary.rst", "index.rst", "tutorials/dev_add_param_study.rst", "tutorials/dev_add_test_group.rst", "tutorials/dev_porting_legacy.rst", "users_guide/config_files.rst", "users_guide/landice/framework/index.rst", "users_guide/landice/index.rst", "users_guide/landice/suites.rst", "users_guide/landice/test_groups/calving_dt_convergence.rst", "users_guide/landice/test_groups/circular_shelf.rst", "users_guide/landice/test_groups/dome.rst", "users_guide/landice/test_groups/eismint2.rst", "users_guide/landice/test_groups/enthalpy_benchmark.rst", "users_guide/landice/test_groups/greenland.rst", "users_guide/landice/test_groups/humboldt.rst", "users_guide/landice/test_groups/hydro_radial.rst", "users_guide/landice/test_groups/index.rst", "users_guide/landice/test_groups/ismip6_forcing.rst", "users_guide/landice/test_groups/kangerlussuaq.rst", "users_guide/landice/test_groups/koge_bugt_s.rst", "users_guide/landice/test_groups/mismipplus.rst", "users_guide/landice/test_groups/thwaites.rst", "users_guide/machines/anvil.rst", "users_guide/machines/chrysalis.rst", "users_guide/machines/compy.rst", "users_guide/machines/cori.rst", "users_guide/machines/index.rst", "users_guide/machines/perlmutter.rst", "users_guide/ocean/framework/ice_shelf.rst", "users_guide/ocean/framework/index.rst", "users_guide/ocean/framework/vertical.rst", "users_guide/ocean/index.rst", "users_guide/ocean/suites.rst", "users_guide/ocean/test_groups/baroclinic_channel.rst", "users_guide/ocean/test_groups/dam_break.rst", "users_guide/ocean/test_groups/drying_slope.rst", "users_guide/ocean/test_groups/global_convergence.rst", "users_guide/ocean/test_groups/global_ocean.rst", "users_guide/ocean/test_groups/gotm.rst", "users_guide/ocean/test_groups/hurricane.rst", "users_guide/ocean/test_groups/ice_shelf_2d.rst", "users_guide/ocean/test_groups/index.rst", "users_guide/ocean/test_groups/internal_wave.rst", "users_guide/ocean/test_groups/isomip_plus.rst", "users_guide/ocean/test_groups/merry_go_round.rst", "users_guide/ocean/test_groups/planar_convergence.rst", "users_guide/ocean/test_groups/soma.rst", "users_guide/ocean/test_groups/sphere_transport.rst", "users_guide/ocean/test_groups/spherical_harmonic_transform.rst", "users_guide/ocean/test_groups/tides.rst", "users_guide/ocean/test_groups/ziso.rst", "users_guide/quick_start.rst", "users_guide/test_cases.rst", "users_guide/test_suites.rst", "versions.rst"], "titles": ["Caching outputs from compass steps", "compass python package", "Design Documents", "Template", "API reference", "Building the Documentation", "Command-line interface", "Documentation", "Framework", "compass.MpasCore", "compass.MpasCore.add_test_group", "compass.Step", "compass.Step.add_input_file", "compass.Step.add_model_as_input", "compass.Step.add_namelist_file", "compass.Step.add_namelist_options", "compass.Step.add_output_file", "compass.Step.add_streams_file", "compass.Step.constrain_resources", "compass.Step.run", "compass.Step.runtime_setup", "compass.Step.set_resources", "compass.Step.setup", "compass.Step.update_namelist_at_runtime", "compass.Step.update_namelist_pio", "compass.Step.update_streams_at_runtime", "compass.TestCase", "compass.TestCase.add_step", "compass.TestCase.configure", "compass.TestCase.run", "compass.TestCase.validate", "compass.TestGroup", "compass.TestGroup.add_test_case", "compass.__main__.main", "compass.cache.update_cache", "compass.clean.clean_cases", "compass.config.CompassConfigParser", "compass.io.download", "compass.io.package_path", "compass.io.symlink", "compass.list.list_cases", "compass.list.list_machines", "compass.list.list_suites", "compass.logging.log_method_call", "compass.mesh.IcosahedralMeshStep", "compass.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon", "compass.mesh.IcosahedralMeshStep.get_cell_width", "compass.mesh.IcosahedralMeshStep.get_subdivisions", "compass.mesh.IcosahedralMeshStep.make_jigsaw_mesh", "compass.mesh.IcosahedralMeshStep.run", "compass.mesh.IcosahedralMeshStep.setup", "compass.mesh.QuasiUniformSphericalMeshStep", "compass.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon", "compass.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh", "compass.mesh.QuasiUniformSphericalMeshStep.run", "compass.mesh.QuasiUniformSphericalMeshStep.setup", "compass.mesh.spherical.SphericalBaseStep", "compass.mesh.spherical.SphericalBaseStep.run", "compass.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width", "compass.mesh.spherical.SphericalBaseStep.setup", "compass.model.make_graph_file", "compass.model.partition", "compass.model.run_model", "compass.mpas_cores.get_mpas_cores", "compass.parallel.check_parallel_system", "compass.parallel.get_available_cores_and_nodes", "compass.parallel.run_command", "compass.parallel.set_cores_per_node", "compass.provenance.write", "compass.run.serial.run_single_step", "compass.run.serial.run_tests", "compass.setup.setup_case", "compass.setup.setup_cases", "compass.suite.clean_suite", "compass.suite.setup_suite", "compass.validate.compare_timers", "compass.validate.compare_variables", "landice", "Land-ice Framework", "compass.landice.Landice", "compass.landice.tests.calving_dt_convergence.CalvingDtConvergence", "compass.landice.tests.calving_dt_convergence.dt_convergence_test.DtConvergenceTest", "compass.landice.tests.calving_dt_convergence.dt_convergence_test.DtConvergenceTest.validate", "compass.landice.tests.calving_dt_convergence.run_model.RunModel", "compass.landice.tests.calving_dt_convergence.run_model.RunModel.run", "compass.landice.tests.circular_shelf.CircularShelf", "compass.landice.tests.circular_shelf.decomposition_test.DecompositionTest", "compass.landice.tests.circular_shelf.decomposition_test.DecompositionTest.run", "compass.landice.tests.circular_shelf.run_model.RunModel", "compass.landice.tests.circular_shelf.run_model.RunModel.run", "compass.landice.tests.circular_shelf.setup_mesh.SetupMesh", "compass.landice.tests.circular_shelf.setup_mesh.SetupMesh.run", "compass.landice.tests.circular_shelf.visualize.Visualize", "compass.landice.tests.circular_shelf.visualize.Visualize.run", "compass.landice.tests.circular_shelf.visualize.visualize_circular_shelf", "compass.landice.tests.dome.Dome", "compass.landice.tests.dome.decomposition_test.DecompositionTest", "compass.landice.tests.dome.decomposition_test.DecompositionTest.run", "compass.landice.tests.dome.restart_test.RestartTest", "compass.landice.tests.dome.restart_test.RestartTest.run", "compass.landice.tests.dome.run_model.RunModel", "compass.landice.tests.dome.run_model.RunModel.run", "compass.landice.tests.dome.run_model.RunModel.setup", "compass.landice.tests.dome.setup_mesh.SetupMesh", "compass.landice.tests.dome.setup_mesh.SetupMesh.run", "compass.landice.tests.dome.smoke_test.SmokeTest", "compass.landice.tests.dome.smoke_test.SmokeTest.run", "compass.landice.tests.dome.visualize.Visualize", "compass.landice.tests.dome.visualize.Visualize.run", "compass.landice.tests.dome.visualize.visualize_dome", "compass.landice.tests.eismint2.Eismint2", "compass.landice.tests.eismint2.decomposition_test.DecompositionTest", "compass.landice.tests.eismint2.decomposition_test.DecompositionTest.run", "compass.landice.tests.eismint2.restart_test.RestartTest", "compass.landice.tests.eismint2.restart_test.RestartTest.run", "compass.landice.tests.eismint2.run_experiment.RunExperiment", "compass.landice.tests.eismint2.run_experiment.RunExperiment.run", "compass.landice.tests.eismint2.run_experiment.RunExperiment.setup", "compass.landice.tests.eismint2.setup_mesh.SetupMesh", "compass.landice.tests.eismint2.setup_mesh.SetupMesh.run", "compass.landice.tests.eismint2.standard_experiments.StandardExperiments", "compass.landice.tests.eismint2.standard_experiments.StandardExperiments.run", "compass.landice.tests.eismint2.standard_experiments.visualize.Visualize", "compass.landice.tests.eismint2.standard_experiments.visualize.Visualize.run", "compass.landice.tests.eismint2.standard_experiments.visualize.visualize_eismint2", "compass.landice.tests.enthalpy_benchmark.A.A", "compass.landice.tests.enthalpy_benchmark.A.A.configure", "compass.landice.tests.enthalpy_benchmark.A.A.run", "compass.landice.tests.enthalpy_benchmark.A.visualize.Visualize", "compass.landice.tests.enthalpy_benchmark.A.visualize.Visualize.run", "compass.landice.tests.enthalpy_benchmark.B.B", "compass.landice.tests.enthalpy_benchmark.B.B.configure", "compass.landice.tests.enthalpy_benchmark.B.B.run", "compass.landice.tests.enthalpy_benchmark.B.visualize.Visualize", "compass.landice.tests.enthalpy_benchmark.B.visualize.Visualize.run", "compass.landice.tests.enthalpy_benchmark.EnthalpyBenchmark", "compass.landice.tests.enthalpy_benchmark.run_model.RunModel", "compass.landice.tests.enthalpy_benchmark.run_model.RunModel.run", "compass.landice.tests.enthalpy_benchmark.run_model.RunModel.setup", "compass.landice.tests.enthalpy_benchmark.setup_mesh.SetupMesh", "compass.landice.tests.enthalpy_benchmark.setup_mesh.SetupMesh.run", "compass.landice.tests.greenland.Greenland", "compass.landice.tests.greenland.decomposition_test.DecompositionTest", "compass.landice.tests.greenland.decomposition_test.DecompositionTest.run", "compass.landice.tests.greenland.high_res_mesh.HighResMesh", "compass.landice.tests.greenland.high_res_mesh.HighResMesh.run", "compass.landice.tests.greenland.mesh.Mesh", "compass.landice.tests.greenland.mesh.Mesh.build_cell_width", "compass.landice.tests.greenland.mesh.Mesh.run", "compass.landice.tests.greenland.restart_test.RestartTest", "compass.landice.tests.greenland.restart_test.RestartTest.run", "compass.landice.tests.greenland.run_model.RunModel", "compass.landice.tests.greenland.run_model.RunModel.run", "compass.landice.tests.greenland.run_model.RunModel.setup", "compass.landice.tests.greenland.smoke_test.SmokeTest", "compass.landice.tests.greenland.smoke_test.SmokeTest.run", "compass.landice.tests.humboldt.Humboldt", "compass.landice.tests.humboldt.decomposition_test.DecompositionTest", "compass.landice.tests.humboldt.decomposition_test.DecompositionTest.validate", "compass.landice.tests.humboldt.mesh.Mesh", "compass.landice.tests.humboldt.mesh.Mesh.run", "compass.landice.tests.humboldt.mesh_gen.MeshGen", "compass.landice.tests.humboldt.mesh_gen.MeshGen.run", "compass.landice.tests.humboldt.restart_test.RestartTest", "compass.landice.tests.humboldt.restart_test.RestartTest.validate", "compass.landice.tests.humboldt.run_model.RunModel", "compass.landice.tests.humboldt.run_model.RunModel.run", "compass.landice.tests.hydro_radial.HydroRadial", "compass.landice.tests.hydro_radial.decomposition_test.DecompositionTest", "compass.landice.tests.hydro_radial.decomposition_test.DecompositionTest.run", "compass.landice.tests.hydro_radial.restart_test.RestartTest", "compass.landice.tests.hydro_radial.restart_test.RestartTest.run", "compass.landice.tests.hydro_radial.run_model.RunModel", "compass.landice.tests.hydro_radial.run_model.RunModel.run", "compass.landice.tests.hydro_radial.run_model.RunModel.setup", "compass.landice.tests.hydro_radial.setup_mesh.SetupMesh", "compass.landice.tests.hydro_radial.setup_mesh.SetupMesh.run", "compass.landice.tests.hydro_radial.spinup_test.SpinupTest", "compass.landice.tests.hydro_radial.spinup_test.SpinupTest.run", "compass.landice.tests.hydro_radial.steady_state_drift_test.SteadyStateDriftTest", "compass.landice.tests.hydro_radial.steady_state_drift_test.SteadyStateDriftTest.run", "compass.landice.tests.hydro_radial.visualize.Visualize", "compass.landice.tests.hydro_radial.visualize.Visualize.run", "compass.landice.tests.hydro_radial.visualize.visualize_hydro_radial", "compass.landice.tests.ismip6_forcing.Ismip6Forcing", "compass.landice.tests.ismip6_forcing.atmosphere.Atmosphere", "compass.landice.tests.ismip6_forcing.atmosphere.Atmosphere.configure", "compass.landice.tests.ismip6_forcing.atmosphere.create_mapfile_smb", "compass.landice.tests.ismip6_forcing.atmosphere.create_mapfile_smb.build_mapping_file", "compass.landice.tests.ismip6_forcing.atmosphere.create_mapfile_smb.create_atm_scrip", "compass.landice.tests.ismip6_forcing.atmosphere.process_smb.ProcessSMB", "compass.landice.tests.ismip6_forcing.atmosphere.process_smb.ProcessSMB.correct_smb_anomaly_for_climatology", "compass.landice.tests.ismip6_forcing.atmosphere.process_smb.ProcessSMB.remap_ismip6_smb_to_mali", "compass.landice.tests.ismip6_forcing.atmosphere.process_smb.ProcessSMB.rename_ismip6_smb_to_mali_vars", "compass.landice.tests.ismip6_forcing.atmosphere.process_smb.ProcessSMB.run", "compass.landice.tests.ismip6_forcing.atmosphere.process_smb.ProcessSMB.setup", "compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.ProcessSmbRacmo", "compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.ProcessSmbRacmo.correct_smb_anomaly_for_base_smb", "compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.ProcessSmbRacmo.remap_source_smb_to_mali", "compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.ProcessSmbRacmo.rename_source_smb_to_mali_vars", "compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.ProcessSmbRacmo.run", "compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.ProcessSmbRacmo.setup", "compass.landice.tests.ismip6_forcing.configure.configure", "compass.landice.tests.ismip6_forcing.create_mapfile.build_mapping_file", "compass.landice.tests.ismip6_forcing.ocean_basal.OceanBasal", "compass.landice.tests.ismip6_forcing.ocean_basal.OceanBasal.configure", "compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.ProcessBasalMelt", "compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.ProcessBasalMelt.combine_ismip6_inputfiles", "compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.ProcessBasalMelt.remap_ismip6_basal_melt_to_mali_vars", "compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.ProcessBasalMelt.rename_ismip6_basal_melt_to_mali_vars", "compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.ProcessBasalMelt.run", "compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.ProcessBasalMelt.setup", "compass.landice.tests.ismip6_forcing.ocean_thermal.OceanThermal", "compass.landice.tests.ismip6_forcing.ocean_thermal.OceanThermal.configure", "compass.landice.tests.ismip6_forcing.ocean_thermal.process_thermal_forcing.ProcessThermalForcing", "compass.landice.tests.ismip6_forcing.ocean_thermal.process_thermal_forcing.ProcessThermalForcing.remap_ismip6_thermal_forcing_to_mali_vars", "compass.landice.tests.ismip6_forcing.ocean_thermal.process_thermal_forcing.ProcessThermalForcing.rename_ismip6_thermal_forcing_to_mali_vars", "compass.landice.tests.ismip6_forcing.ocean_thermal.process_thermal_forcing.ProcessThermalForcing.run", "compass.landice.tests.ismip6_forcing.ocean_thermal.process_thermal_forcing.ProcessThermalForcing.setup", "compass.landice.tests.kangerlussuaq.Kangerlussuaq", "compass.landice.tests.kangerlussuaq.mesh.Mesh", "compass.landice.tests.kangerlussuaq.mesh.Mesh.run", "compass.landice.tests.kangerlussuaq.mesh_gen.MeshGen", "compass.landice.tests.kangerlussuaq.mesh_gen.MeshGen.run", "compass.landice.tests.koge_bugt_s.KogeBugtS", "compass.landice.tests.koge_bugt_s.mesh.Mesh", "compass.landice.tests.koge_bugt_s.mesh.Mesh.run", "compass.landice.tests.koge_bugt_s.mesh_gen.MeshGen", "compass.landice.tests.koge_bugt_s.mesh_gen.MeshGen.run", "compass.landice.tests.mismipplus.MISMIPplus", "compass.landice.tests.mismipplus.run_model.RunModel", "compass.landice.tests.mismipplus.run_model.RunModel.run", "compass.landice.tests.mismipplus.run_model.RunModel.setup", "compass.landice.tests.mismipplus.smoke_test.SmokeTest", "compass.landice.tests.mismipplus.smoke_test.SmokeTest.run", "compass.landice.tests.thwaites.Thwaites", "compass.landice.tests.thwaites.decomposition_test.DecompositionTest", "compass.landice.tests.thwaites.decomposition_test.DecompositionTest.run", "compass.landice.tests.thwaites.restart_test.RestartTest", "compass.landice.tests.thwaites.restart_test.RestartTest.run", "compass.landice.tests.thwaites.run_model.RunModel", "compass.landice.tests.thwaites.run_model.RunModel.run", "compass.landice.tests.thwaites.run_model.RunModel.setup", "Landice core", "calving_dt_convergence", "circular_shelf", "dome", "eismint2", "enthalpy_benchmark", "greenland", "humboldt", "hydro_radial", "Test groups", "ismip6_forcing", "kangerlussuaq", "koge_bugt_s", "mismipplus", "thwaites", "Anvil", "Chrysalis", "CompyMcNodeFace", "Cori", "Machines", "Perlmutter", "ocean", "Ocean framework", "compass.ocean.Ocean", "compass.ocean.haney.compute_haney_number", "compass.ocean.iceshelf.adjust_ssh", "compass.ocean.iceshelf.compute_land_ice_pressure_and_draft", "compass.ocean.mesh.cull.CullMeshStep", "compass.ocean.mesh.cull.CullMeshStep.run", "compass.ocean.mesh.cull.CullMeshStep.setup", "compass.ocean.mesh.cull.cull_mesh", "compass.ocean.mesh.floodplain.FloodplainMeshStep", "compass.ocean.mesh.floodplain.FloodplainMeshStep.run", "compass.ocean.particles.remap_particles", "compass.ocean.particles.write", "compass.ocean.plot.plot_initial_state", "compass.ocean.plot.plot_vertical_grid", "compass.ocean.tests.baroclinic_channel.BaroclinicChannel", "compass.ocean.tests.baroclinic_channel.configure", "compass.ocean.tests.baroclinic_channel.decomp_test.DecompTest", "compass.ocean.tests.baroclinic_channel.decomp_test.DecompTest.configure", "compass.ocean.tests.baroclinic_channel.decomp_test.DecompTest.run", "compass.ocean.tests.baroclinic_channel.default.Default", "compass.ocean.tests.baroclinic_channel.default.Default.configure", "compass.ocean.tests.baroclinic_channel.default.Default.run", "compass.ocean.tests.baroclinic_channel.forward.Forward", "compass.ocean.tests.baroclinic_channel.forward.Forward.run", "compass.ocean.tests.baroclinic_channel.forward.Forward.setup", "compass.ocean.tests.baroclinic_channel.initial_state.InitialState", "compass.ocean.tests.baroclinic_channel.initial_state.InitialState.run", "compass.ocean.tests.baroclinic_channel.initial_state.InitialState.setup", "compass.ocean.tests.baroclinic_channel.restart_test.RestartTest", "compass.ocean.tests.baroclinic_channel.restart_test.RestartTest.configure", "compass.ocean.tests.baroclinic_channel.restart_test.RestartTest.run", "compass.ocean.tests.baroclinic_channel.rpe_test.RpeTest", "compass.ocean.tests.baroclinic_channel.rpe_test.RpeTest.configure", "compass.ocean.tests.baroclinic_channel.rpe_test.RpeTest.run", "compass.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis", "compass.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.run", "compass.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.setup", "compass.ocean.tests.baroclinic_channel.threads_test.ThreadsTest", "compass.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.configure", "compass.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.run", "compass.ocean.tests.dam_break.DamBreak", "compass.ocean.tests.dam_break.default.Default", "compass.ocean.tests.dam_break.default.Default.configure", "compass.ocean.tests.dam_break.forward.Forward", "compass.ocean.tests.dam_break.forward.Forward.run", "compass.ocean.tests.dam_break.initial_state.InitialState", "compass.ocean.tests.dam_break.initial_state.InitialState.run", "compass.ocean.tests.dam_break.viz.Viz", "compass.ocean.tests.dam_break.viz.Viz.run", "compass.ocean.tests.drying_slope.DryingSlope", "compass.ocean.tests.drying_slope.default.Default", "compass.ocean.tests.drying_slope.default.Default.configure", "compass.ocean.tests.drying_slope.forward.Forward", "compass.ocean.tests.drying_slope.forward.Forward.run", "compass.ocean.tests.drying_slope.initial_state.InitialState", "compass.ocean.tests.drying_slope.initial_state.InitialState.run", "compass.ocean.tests.drying_slope.viz.Viz", "compass.ocean.tests.drying_slope.viz.Viz.run", "compass.ocean.tests.global_convergence.GlobalConvergence", "compass.ocean.tests.global_convergence.cosine_bell.CosineBell", "compass.ocean.tests.global_convergence.cosine_bell.CosineBell.configure", "compass.ocean.tests.global_convergence.cosine_bell.CosineBell.run", "compass.ocean.tests.global_convergence.cosine_bell.analysis.Analysis", "compass.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rmse", "compass.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.run", "compass.ocean.tests.global_convergence.cosine_bell.forward.Forward", "compass.ocean.tests.global_convergence.cosine_bell.forward.Forward.get_dt", "compass.ocean.tests.global_convergence.cosine_bell.forward.Forward.run", "compass.ocean.tests.global_convergence.cosine_bell.forward.Forward.setup", "compass.ocean.tests.global_convergence.cosine_bell.init.Init", "compass.ocean.tests.global_convergence.cosine_bell.init.Init.run", "compass.ocean.tests.global_ocean.GlobalOcean", "compass.ocean.tests.global_ocean.analysis_test.AnalysisTest", "compass.ocean.tests.global_ocean.analysis_test.AnalysisTest.configure", "compass.ocean.tests.global_ocean.analysis_test.AnalysisTest.run", "compass.ocean.tests.global_ocean.configure", "compass.ocean.tests.global_ocean.configure.configure_global_ocean", "compass.ocean.tests.global_ocean.daily_output_test.DailyOutputTest", "compass.ocean.tests.global_ocean.daily_output_test.DailyOutputTest.configure", "compass.ocean.tests.global_ocean.daily_output_test.DailyOutputTest.run", "compass.ocean.tests.global_ocean.decomp_test.DecompTest", "compass.ocean.tests.global_ocean.decomp_test.DecompTest.configure", "compass.ocean.tests.global_ocean.decomp_test.DecompTest.run", "compass.ocean.tests.global_ocean.dynamic_adjustment.DynamicAdjustment", "compass.ocean.tests.global_ocean.dynamic_adjustment.DynamicAdjustment.run", "compass.ocean.tests.global_ocean.files_for_e3sm.FilesForE3SM", "compass.ocean.tests.global_ocean.files_for_e3sm.FilesForE3SM.configure", "compass.ocean.tests.global_ocean.files_for_e3sm.FilesForE3SM.run", "compass.ocean.tests.global_ocean.files_for_e3sm.diagnostics_files.DiagnosticsFiles", "compass.ocean.tests.global_ocean.files_for_e3sm.diagnostics_files.DiagnosticsFiles.run", "compass.ocean.tests.global_ocean.files_for_e3sm.ocean_graph_partition.OceanGraphPartition", "compass.ocean.tests.global_ocean.files_for_e3sm.ocean_graph_partition.OceanGraphPartition.run", "compass.ocean.tests.global_ocean.files_for_e3sm.ocean_initial_condition.OceanInitialCondition", "compass.ocean.tests.global_ocean.files_for_e3sm.ocean_initial_condition.OceanInitialCondition.run", "compass.ocean.tests.global_ocean.files_for_e3sm.scrip.Scrip", "compass.ocean.tests.global_ocean.files_for_e3sm.scrip.Scrip.run", "compass.ocean.tests.global_ocean.files_for_e3sm.seaice_initial_condition.SeaiceInitialCondition", "compass.ocean.tests.global_ocean.files_for_e3sm.seaice_initial_condition.SeaiceInitialCondition.run", "compass.ocean.tests.global_ocean.forward.ForwardStep", "compass.ocean.tests.global_ocean.forward.ForwardStep.run", "compass.ocean.tests.global_ocean.forward.ForwardStep.setup", "compass.ocean.tests.global_ocean.forward.ForwardTestCase", "compass.ocean.tests.global_ocean.forward.ForwardTestCase.configure", "compass.ocean.tests.global_ocean.forward.ForwardTestCase.run", "compass.ocean.tests.global_ocean.init.Init", "compass.ocean.tests.global_ocean.init.Init.configure", "compass.ocean.tests.global_ocean.init.Init.run", "compass.ocean.tests.global_ocean.init.initial_state.InitialState", "compass.ocean.tests.global_ocean.init.initial_state.InitialState.run", "compass.ocean.tests.global_ocean.init.initial_state.InitialState.setup", "compass.ocean.tests.global_ocean.init.ssh_adjustment.SshAdjustment", "compass.ocean.tests.global_ocean.init.ssh_adjustment.SshAdjustment.run", "compass.ocean.tests.global_ocean.init.ssh_adjustment.SshAdjustment.setup", "compass.ocean.tests.global_ocean.mesh.Mesh", "compass.ocean.tests.global_ocean.mesh.Mesh.configure", "compass.ocean.tests.global_ocean.mesh.Mesh.run", "compass.ocean.tests.global_ocean.mesh.ec30to60.EC30to60BaseMesh", "compass.ocean.tests.global_ocean.mesh.ec30to60.EC30to60BaseMesh.build_cell_width_lat_lon", "compass.ocean.tests.global_ocean.mesh.ec30to60.dynamic_adjustment.EC30to60DynamicAdjustment", "compass.ocean.tests.global_ocean.mesh.ec30to60.dynamic_adjustment.EC30to60DynamicAdjustment.configure", "compass.ocean.tests.global_ocean.mesh.ec30to60.dynamic_adjustment.EC30to60DynamicAdjustment.run", "compass.ocean.tests.global_ocean.mesh.qu240.dynamic_adjustment.QU240DynamicAdjustment", "compass.ocean.tests.global_ocean.mesh.qu240.dynamic_adjustment.QU240DynamicAdjustment.configure", "compass.ocean.tests.global_ocean.mesh.qu240.dynamic_adjustment.QU240DynamicAdjustment.run", "compass.ocean.tests.global_ocean.mesh.so12to60.SO12to60BaseMesh", "compass.ocean.tests.global_ocean.mesh.so12to60.SO12to60BaseMesh.build_cell_width_lat_lon", "compass.ocean.tests.global_ocean.mesh.so12to60.dynamic_adjustment.SO12to60DynamicAdjustment", "compass.ocean.tests.global_ocean.mesh.so12to60.dynamic_adjustment.SO12to60DynamicAdjustment.configure", "compass.ocean.tests.global_ocean.mesh.so12to60.dynamic_adjustment.SO12to60DynamicAdjustment.run", "compass.ocean.tests.global_ocean.mesh.wc14.WC14BaseMesh", "compass.ocean.tests.global_ocean.mesh.wc14.WC14BaseMesh.build_cell_width_lat_lon", "compass.ocean.tests.global_ocean.mesh.wc14.dynamic_adjustment.WC14DynamicAdjustment", "compass.ocean.tests.global_ocean.mesh.wc14.dynamic_adjustment.WC14DynamicAdjustment.configure", "compass.ocean.tests.global_ocean.mesh.wc14.dynamic_adjustment.WC14DynamicAdjustment.run", "compass.ocean.tests.global_ocean.metadata.add_mesh_and_init_metadata", "compass.ocean.tests.global_ocean.metadata.get_e3sm_mesh_names", "compass.ocean.tests.global_ocean.performance_test.PerformanceTest", "compass.ocean.tests.global_ocean.performance_test.PerformanceTest.configure", "compass.ocean.tests.global_ocean.performance_test.PerformanceTest.run", "compass.ocean.tests.global_ocean.restart_test.RestartTest", "compass.ocean.tests.global_ocean.restart_test.RestartTest.configure", "compass.ocean.tests.global_ocean.restart_test.RestartTest.run", "compass.ocean.tests.global_ocean.threads_test.ThreadsTest", "compass.ocean.tests.global_ocean.threads_test.ThreadsTest.configure", "compass.ocean.tests.global_ocean.threads_test.ThreadsTest.run", "compass.ocean.tests.gotm.Gotm", "compass.ocean.tests.gotm.default.Default", "compass.ocean.tests.gotm.default.Default.validate", "compass.ocean.tests.gotm.default.analysis.Analysis", "compass.ocean.tests.gotm.default.analysis.Analysis.run", "compass.ocean.tests.gotm.default.forward.Forward", "compass.ocean.tests.gotm.default.forward.Forward.run", "compass.ocean.tests.gotm.default.init.Init", "compass.ocean.tests.gotm.default.init.Init.run", "compass.ocean.tests.hurricane.Hurricane", "compass.ocean.tests.hurricane.analysis.Analysis", "compass.ocean.tests.hurricane.analysis.Analysis.read_pointstats", "compass.ocean.tests.hurricane.analysis.Analysis.read_station_data", "compass.ocean.tests.hurricane.analysis.Analysis.read_station_file", "compass.ocean.tests.hurricane.analysis.Analysis.run", "compass.ocean.tests.hurricane.analysis.Analysis.setup", "compass.ocean.tests.hurricane.configure", "compass.ocean.tests.hurricane.forward.Forward", "compass.ocean.tests.hurricane.forward.Forward.configure", "compass.ocean.tests.hurricane.forward.Forward.run", "compass.ocean.tests.hurricane.forward.forward.ForwardStep", "compass.ocean.tests.hurricane.forward.forward.ForwardStep.run", "compass.ocean.tests.hurricane.forward.forward.ForwardStep.setup", "compass.ocean.tests.hurricane.init.Init", "compass.ocean.tests.hurricane.init.Init.configure", "compass.ocean.tests.hurricane.init.Init.run", "compass.ocean.tests.hurricane.init.create_pointstats_file.CreatePointstatsFile", "compass.ocean.tests.hurricane.init.create_pointstats_file.CreatePointstatsFile.create_pointstats_file", "compass.ocean.tests.hurricane.init.create_pointstats_file.CreatePointstatsFile.run", "compass.ocean.tests.hurricane.init.initial_state.InitialState", "compass.ocean.tests.hurricane.init.initial_state.InitialState.run", "compass.ocean.tests.hurricane.init.initial_state.InitialState.setup", "compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing", "compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing.interpolate_data_to_grid", "compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing.plot_interp_data", "compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing.run", "compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing.write_to_file", "compass.ocean.tests.hurricane.mesh.Mesh", "compass.ocean.tests.hurricane.mesh.Mesh.configure", "compass.ocean.tests.hurricane.mesh.Mesh.run", "compass.ocean.tests.hurricane.mesh.dequ120at30cr10rr2.DEQU120at30cr10rr2BaseMesh", "compass.ocean.tests.hurricane.mesh.dequ120at30cr10rr2.DEQU120at30cr10rr2BaseMesh.build_cell_width_lat_lon", "compass.ocean.tests.ice_shelf_2d.IceShelf2d", "compass.ocean.tests.ice_shelf_2d.configure", "compass.ocean.tests.ice_shelf_2d.default.Default", "compass.ocean.tests.ice_shelf_2d.default.Default.configure", "compass.ocean.tests.ice_shelf_2d.default.Default.run", "compass.ocean.tests.ice_shelf_2d.forward.Forward", "compass.ocean.tests.ice_shelf_2d.forward.Forward.run", "compass.ocean.tests.ice_shelf_2d.forward.Forward.setup", "compass.ocean.tests.ice_shelf_2d.initial_state.InitialState", "compass.ocean.tests.ice_shelf_2d.initial_state.InitialState.run", "compass.ocean.tests.ice_shelf_2d.restart_test.RestartTest", "compass.ocean.tests.ice_shelf_2d.restart_test.RestartTest.configure", "compass.ocean.tests.ice_shelf_2d.restart_test.RestartTest.run", "compass.ocean.tests.ice_shelf_2d.ssh_adjustment.SshAdjustment", "compass.ocean.tests.ice_shelf_2d.ssh_adjustment.SshAdjustment.run", "compass.ocean.tests.ice_shelf_2d.ssh_adjustment.SshAdjustment.setup", "compass.ocean.tests.ice_shelf_2d.viz.Viz", "compass.ocean.tests.ice_shelf_2d.viz.Viz.run", "compass.ocean.tests.internal_wave.InternalWave", "compass.ocean.tests.internal_wave.default.Default", "compass.ocean.tests.internal_wave.default.Default.validate", "compass.ocean.tests.internal_wave.forward.Forward", "compass.ocean.tests.internal_wave.forward.Forward.run", "compass.ocean.tests.internal_wave.initial_state.InitialState", "compass.ocean.tests.internal_wave.initial_state.InitialState.run", "compass.ocean.tests.internal_wave.rpe_test.RpeTest", "compass.ocean.tests.internal_wave.rpe_test.analysis.Analysis", "compass.ocean.tests.internal_wave.rpe_test.analysis.Analysis.run", "compass.ocean.tests.internal_wave.ten_day_test.TenDayTest", "compass.ocean.tests.internal_wave.ten_day_test.TenDayTest.validate", "compass.ocean.tests.internal_wave.viz.Viz", "compass.ocean.tests.internal_wave.viz.Viz.run", "compass.ocean.tests.isomip_plus.IsomipPlus", "compass.ocean.tests.isomip_plus.evap.update_evaporation_flux", "compass.ocean.tests.isomip_plus.forward.Forward", "compass.ocean.tests.isomip_plus.forward.Forward.run", "compass.ocean.tests.isomip_plus.forward.Forward.setup", "compass.ocean.tests.isomip_plus.geom.interpolate_ocean_mask", "compass.ocean.tests.isomip_plus.geom.process_input_geometry", "compass.ocean.tests.isomip_plus.initial_state.InitialState", "compass.ocean.tests.isomip_plus.initial_state.InitialState.run", "compass.ocean.tests.isomip_plus.isomip_plus_test.IsomipPlusTest", "compass.ocean.tests.isomip_plus.isomip_plus_test.IsomipPlusTest.configure", "compass.ocean.tests.isomip_plus.isomip_plus_test.IsomipPlusTest.run", "compass.ocean.tests.isomip_plus.misomip.Misomip", "compass.ocean.tests.isomip_plus.misomip.Misomip.run", "compass.ocean.tests.isomip_plus.ssh_adjustment.SshAdjustment", "compass.ocean.tests.isomip_plus.ssh_adjustment.SshAdjustment.run", "compass.ocean.tests.isomip_plus.ssh_adjustment.SshAdjustment.setup", "compass.ocean.tests.isomip_plus.streamfunction.Streamfunction", "compass.ocean.tests.isomip_plus.streamfunction.Streamfunction.run", "compass.ocean.tests.isomip_plus.viz.Viz", "compass.ocean.tests.isomip_plus.viz.Viz.run", "compass.ocean.tests.isomip_plus.viz.file_complete", "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter", "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.images_to_movies", "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_3d_field_top_bot_section", "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_barotropic_streamfunction", "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_horiz_series", "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_ice_shelf_boundary_variables", "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_layer_interfaces", "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_melt_rates", "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_overturning_streamfunction", "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_potential_density", "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_salinity", "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_temperature", "compass.ocean.tests.isomip_plus.viz.plot.TimeSeriesPlotter", "compass.ocean.tests.isomip_plus.viz.plot.TimeSeriesPlotter.plot_melt_time_series", "compass.ocean.tests.isomip_plus.viz.plot.TimeSeriesPlotter.plot_time_series", "compass.ocean.tests.merry_go_round.MerryGoRound", "compass.ocean.tests.merry_go_round.convergence_test.analysis.Analysis", "compass.ocean.tests.merry_go_round.convergence_test.analysis.Analysis.run", "compass.ocean.tests.merry_go_round.default.Default", "compass.ocean.tests.merry_go_round.default.Default.validate", "compass.ocean.tests.merry_go_round.forward.Forward", "compass.ocean.tests.merry_go_round.forward.Forward.run", "compass.ocean.tests.merry_go_round.initial_state.InitialState", "compass.ocean.tests.merry_go_round.initial_state.InitialState.run", "compass.ocean.tests.merry_go_round.viz.Viz", "compass.ocean.tests.merry_go_round.viz.Viz.run", "compass.ocean.tests.planar_convergence.PlanarConvergence", "compass.ocean.tests.planar_convergence.conv_init.ConvInit", "compass.ocean.tests.planar_convergence.conv_init.ConvInit.run", "compass.ocean.tests.planar_convergence.conv_test_case.ConvTestCase", "compass.ocean.tests.planar_convergence.conv_test_case.ConvTestCase.configure", "compass.ocean.tests.planar_convergence.conv_test_case.ConvTestCase.run", "compass.ocean.tests.planar_convergence.conv_test_case.ConvTestCase.update_cores", "compass.ocean.tests.planar_convergence.forward.Forward", "compass.ocean.tests.planar_convergence.forward.Forward.get_dt_duration", "compass.ocean.tests.planar_convergence.forward.Forward.run", "compass.ocean.tests.planar_convergence.forward.Forward.setup", "compass.ocean.tests.planar_convergence.horizontal_advection.HorizontalAdvection", "compass.ocean.tests.planar_convergence.horizontal_advection.HorizontalAdvection.configure", "compass.ocean.tests.planar_convergence.horizontal_advection.HorizontalAdvection.run", "compass.ocean.tests.planar_convergence.horizontal_advection.analysis.Analysis", "compass.ocean.tests.planar_convergence.horizontal_advection.analysis.Analysis.rmse", "compass.ocean.tests.planar_convergence.horizontal_advection.analysis.Analysis.run", "compass.ocean.tests.planar_convergence.horizontal_advection.init.Init", "compass.ocean.tests.planar_convergence.horizontal_advection.init.Init.run", "compass.ocean.tests.soma.Soma", "compass.ocean.tests.soma.analysis.Analysis", "compass.ocean.tests.soma.analysis.Analysis.run", "compass.ocean.tests.soma.forward.Forward", "compass.ocean.tests.soma.forward.Forward.run", "compass.ocean.tests.soma.initial_state.InitialState", "compass.ocean.tests.soma.initial_state.InitialState.run", "compass.ocean.tests.soma.soma_test_case.SomaTestCase", "compass.ocean.tests.soma.soma_test_case.SomaTestCase.validate", "compass.ocean.tests.sphere_transport.SphereTransport", "compass.ocean.tests.sphere_transport.correlated_tracers_2d.CorrelatedTracers2D", "compass.ocean.tests.sphere_transport.correlated_tracers_2d.CorrelatedTracers2D.configure", "compass.ocean.tests.sphere_transport.correlated_tracers_2d.CorrelatedTracers2D.run", "compass.ocean.tests.sphere_transport.correlated_tracers_2d.analysis.Analysis", "compass.ocean.tests.sphere_transport.correlated_tracers_2d.analysis.Analysis.run", "compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.Forward", "compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.Forward.get_timestep_str", "compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.Forward.run", "compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.Forward.setup", "compass.ocean.tests.sphere_transport.correlated_tracers_2d.init.Init", "compass.ocean.tests.sphere_transport.correlated_tracers_2d.init.Init.run", "compass.ocean.tests.sphere_transport.correlated_tracers_2d.mesh.Mesh", "compass.ocean.tests.sphere_transport.correlated_tracers_2d.mesh.Mesh.build_cell_width_lat_lon", "compass.ocean.tests.sphere_transport.correlated_tracers_2d.mesh.Mesh.run", "compass.ocean.tests.sphere_transport.divergent_2d.Divergent2D", "compass.ocean.tests.sphere_transport.divergent_2d.Divergent2D.configure", "compass.ocean.tests.sphere_transport.divergent_2d.Divergent2D.run", "compass.ocean.tests.sphere_transport.divergent_2d.analysis.Analysis", "compass.ocean.tests.sphere_transport.divergent_2d.analysis.Analysis.run", "compass.ocean.tests.sphere_transport.divergent_2d.forward.Forward", "compass.ocean.tests.sphere_transport.divergent_2d.forward.Forward.get_timestep_str", "compass.ocean.tests.sphere_transport.divergent_2d.forward.Forward.run", "compass.ocean.tests.sphere_transport.divergent_2d.forward.Forward.setup", "compass.ocean.tests.sphere_transport.divergent_2d.init.Init", "compass.ocean.tests.sphere_transport.divergent_2d.init.Init.run", "compass.ocean.tests.sphere_transport.divergent_2d.mesh.Mesh", "compass.ocean.tests.sphere_transport.divergent_2d.mesh.Mesh.build_cell_width_lat_lon", "compass.ocean.tests.sphere_transport.divergent_2d.mesh.Mesh.run", "compass.ocean.tests.sphere_transport.nondivergent_2d.Nondivergent2D", "compass.ocean.tests.sphere_transport.nondivergent_2d.Nondivergent2D.configure", "compass.ocean.tests.sphere_transport.nondivergent_2d.Nondivergent2D.run", "compass.ocean.tests.sphere_transport.nondivergent_2d.analysis.Analysis", "compass.ocean.tests.sphere_transport.nondivergent_2d.analysis.Analysis.run", "compass.ocean.tests.sphere_transport.nondivergent_2d.forward.Forward", "compass.ocean.tests.sphere_transport.nondivergent_2d.forward.Forward.get_timestep_str", "compass.ocean.tests.sphere_transport.nondivergent_2d.forward.Forward.run", "compass.ocean.tests.sphere_transport.nondivergent_2d.forward.Forward.setup", "compass.ocean.tests.sphere_transport.nondivergent_2d.init.Init", "compass.ocean.tests.sphere_transport.nondivergent_2d.init.Init.run", "compass.ocean.tests.sphere_transport.nondivergent_2d.mesh.Mesh", "compass.ocean.tests.sphere_transport.nondivergent_2d.mesh.Mesh.build_cell_width_lat_lon", "compass.ocean.tests.sphere_transport.nondivergent_2d.mesh.Mesh.run", "compass.ocean.tests.sphere_transport.process_output.compute_convergence_rates", "compass.ocean.tests.sphere_transport.process_output.compute_error_from_output_ncfile", "compass.ocean.tests.sphere_transport.process_output.make_convergence_arrays", "compass.ocean.tests.sphere_transport.process_output.plot_convergence", "compass.ocean.tests.sphere_transport.process_output.plot_filament", "compass.ocean.tests.sphere_transport.process_output.plot_over_and_undershoot_errors", "compass.ocean.tests.sphere_transport.process_output.plot_sol", "compass.ocean.tests.sphere_transport.process_output.print_data_as_csv", "compass.ocean.tests.sphere_transport.process_output.print_error_conv_table", "compass.ocean.tests.sphere_transport.process_output.read_ncl_rgb_file", "compass.ocean.tests.sphere_transport.rotation_2d.Rotation2D", "compass.ocean.tests.sphere_transport.rotation_2d.Rotation2D.configure", "compass.ocean.tests.sphere_transport.rotation_2d.Rotation2D.run", "compass.ocean.tests.sphere_transport.rotation_2d.analysis.Analysis", "compass.ocean.tests.sphere_transport.rotation_2d.analysis.Analysis.run", "compass.ocean.tests.sphere_transport.rotation_2d.forward.Forward", "compass.ocean.tests.sphere_transport.rotation_2d.forward.Forward.get_timestep_str", "compass.ocean.tests.sphere_transport.rotation_2d.forward.Forward.run", "compass.ocean.tests.sphere_transport.rotation_2d.forward.Forward.setup", "compass.ocean.tests.sphere_transport.rotation_2d.init.Init", "compass.ocean.tests.sphere_transport.rotation_2d.init.Init.run", "compass.ocean.tests.sphere_transport.rotation_2d.mesh.Mesh", "compass.ocean.tests.sphere_transport.rotation_2d.mesh.Mesh.build_cell_width_lat_lon", "compass.ocean.tests.sphere_transport.rotation_2d.mesh.Mesh.run", "compass.ocean.tests.tides.Tides", "compass.ocean.tests.tides.analysis.Analysis", "compass.ocean.tests.tides.analysis.Analysis.append_tpxo_data", "compass.ocean.tests.tides.analysis.Analysis.check_tpxo_data", "compass.ocean.tests.tides.analysis.Analysis.plot", "compass.ocean.tests.tides.analysis.Analysis.read_otps2_output", "compass.ocean.tests.tides.analysis.Analysis.run", "compass.ocean.tests.tides.analysis.Analysis.run_otps2", "compass.ocean.tests.tides.analysis.Analysis.setup", "compass.ocean.tests.tides.analysis.Analysis.setup_otps2", "compass.ocean.tests.tides.analysis.Analysis.write_coordinate_file", "compass.ocean.tests.tides.configure", "compass.ocean.tests.tides.forward.Forward", "compass.ocean.tests.tides.forward.Forward.configure", "compass.ocean.tests.tides.forward.Forward.run", "compass.ocean.tests.tides.forward.forward.ForwardStep", "compass.ocean.tests.tides.forward.forward.ForwardStep.run", "compass.ocean.tests.tides.forward.forward.ForwardStep.setup", "compass.ocean.tests.tides.init.Init", "compass.ocean.tests.tides.init.Init.configure", "compass.ocean.tests.tides.init.Init.run", "compass.ocean.tests.tides.init.initial_state.InitialState", "compass.ocean.tests.tides.init.initial_state.InitialState.run", "compass.ocean.tests.tides.init.initial_state.InitialState.setup", "compass.ocean.tests.tides.init.interpolate_wave_drag.InterpolateWaveDrag", "compass.ocean.tests.tides.init.interpolate_wave_drag.InterpolateWaveDrag.interpolate_data_to_grid", "compass.ocean.tests.tides.init.interpolate_wave_drag.InterpolateWaveDrag.plot_interp_data", "compass.ocean.tests.tides.init.interpolate_wave_drag.InterpolateWaveDrag.run", "compass.ocean.tests.tides.init.interpolate_wave_drag.InterpolateWaveDrag.write_to_file", "compass.ocean.tests.tides.init.remap_bathymetry.RemapBathymetry", "compass.ocean.tests.tides.init.remap_bathymetry.RemapBathymetry.run", "compass.ocean.tests.tides.mesh.Mesh", "compass.ocean.tests.tides.mesh.Mesh.configure", "compass.ocean.tests.tides.mesh.Mesh.run", "compass.ocean.tests.ziso.Ziso", "compass.ocean.tests.ziso.ZisoTestCase", "compass.ocean.tests.ziso.ZisoTestCase.configure", "compass.ocean.tests.ziso.ZisoTestCase.run", "compass.ocean.tests.ziso.configure", "compass.ocean.tests.ziso.forward.Forward", "compass.ocean.tests.ziso.forward.Forward.run", "compass.ocean.tests.ziso.forward.Forward.setup", "compass.ocean.tests.ziso.initial_state.InitialState", "compass.ocean.tests.ziso.initial_state.InitialState.run", "compass.ocean.tests.ziso.with_frazil.WithFrazil", "compass.ocean.tests.ziso.with_frazil.WithFrazil.configure", "compass.ocean.tests.ziso.with_frazil.WithFrazil.run", "compass.ocean.vertical.grid_1d.generate_1d_grid", "compass.ocean.vertical.grid_1d.write_1d_grid", "compass.ocean.vertical.init_vertical_coord", "compass.ocean.vertical.partial_cells.alter_bottom_depth", "compass.ocean.vertical.partial_cells.alter_ssh", "compass.ocean.vertical.zlevel.compute_min_max_level_cell", "compass.ocean.vertical.zlevel.compute_z_level_layer_thickness", "compass.ocean.vertical.zlevel.compute_z_level_resting_thickness", "compass.ocean.vertical.zlevel.init_z_level_vertical_coord", "compass.ocean.vertical.zstar.init_z_star_vertical_coord", "Ocean core", "baroclinic_channel", "dam_break", "drying_slope", "global_convergence", "global_ocean", "gotm", "hurricane", "ice_shelf_2d", "Test groups", "internal_wave", "isomip_plus", "merry_go_round", "planar_convergence", "soma", "sphere_transport", "spherical_harmonic_transform", "tides", "ziso", "Organization of Tests", "Overview", "Quick Start for Developers", "Troubleshooting", "Glossary", "compass", "Developer Tutorial: Adding a parameter study", "Developer Tutorial: Adding a new test group", "Developer Tutorial: Porting a legacy COMPASS test group", "Config Files", "Framework", "Landice core", "Test suites", "calving_dt_convergence", "circular_shelf", "dome", "eismint2", "enthalpy_benchmark", "greenland", "humboldt", "hydro_radial", "Test Groups", "ismip6_forcing", "kangerlussuaq", "koge_bugt_s", "mismipplus", "thwaites", "Anvil", "Chrysalis", "CompyMcNodeFace", "Cori", "Machines", "Perlmutter", "Ice shelf-cavities", "Framework", "Vertical coordinate", "Ocean core", "Test suites", "baroclinic_channel", "dam_break", "drying_slope", "global_convergence", "global_ocean", "gotm", "hurricane", "ice_shelf_2d", "Test groups", "internal_wave", "isomip_plus", "merry_go_round", "planar_convergence", "soma", "sphere_transport", "spherical_harmonic_transform", "tides", "ziso", "Quick Start for Users", "Test Cases", "Test Suites", "Code and Documentation Versions"], "terms": {"date": [0, 1, 3, 6, 34, 243, 685, 690, 706, 713, 746, 752], "2021": [0, 1], "07": 0, "30": [0, 1, 8, 46, 508, 690, 701, 703, 704, 719, 722, 734, 736, 744, 745, 746, 749, 752, 753, 757, 759], "contributor": [0, 1, 3], "xylar": [0, 1, 8, 711, 713, 735, 746], "asai": [0, 1, 713, 746, 752], "davi": [0, 1, 713, 746, 752], "we": [0, 1, 3, 7, 8, 64, 202, 212, 214, 244, 245, 246, 247, 249, 250, 251, 253, 256, 257, 260, 262, 265, 276, 686, 687, 688, 693, 695, 696, 697, 699, 703, 704, 705, 706, 709, 710, 711, 712, 713, 726, 733, 734, 735, 736, 737, 739, 746, 749, 750, 755, 756, 757, 760, 762], "would": [0, 1, 3, 6, 8, 11, 21, 23, 27, 66, 76, 83, 88, 100, 115, 136, 151, 165, 172, 230, 240, 288, 309, 318, 364, 458, 466, 474, 527, 704, 705, 706, 707, 711, 712, 718, 735, 737, 739, 746, 753, 760], "like": [0, 1, 3, 6, 7, 8, 265, 690, 703, 704, 705, 706, 707, 709, 710, 711, 712, 713, 735, 745, 746, 754, 757, 760, 761], "have": [0, 1, 3, 5, 6, 7, 8, 25, 35, 64, 83, 88, 100, 115, 151, 165, 172, 189, 230, 240, 244, 250, 260, 262, 265, 328, 349, 547, 565, 579, 593, 617, 687, 690, 692, 696, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 719, 721, 723, 726, 730, 731, 732, 733, 734, 735, 736, 737, 739, 742, 745, 746, 749, 750, 751, 752, 753, 754, 755, 759, 760, 761, 762], "wai": [0, 1, 6, 7, 11, 48, 53, 262, 265, 491, 696, 704, 705, 706, 707, 709, 710, 711, 712, 723, 735, 739, 746, 752], "download": [0, 1, 6, 11, 12, 22, 102, 117, 138, 153, 154, 174, 232, 242, 243, 246, 249, 256, 257, 272, 290, 293, 302, 366, 378, 426, 433, 442, 460, 468, 489, 501, 613, 636, 645, 669, 685, 699, 705, 706, 713, 715, 723, 726, 760, 762], "file": [0, 6, 7, 9, 11, 12, 14, 15, 16, 17, 20, 22, 23, 24, 25, 26, 28, 34, 37, 38, 39, 43, 59, 60, 61, 62, 68, 71, 72, 73, 74, 75, 76, 80, 83, 88, 92, 94, 100, 102, 107, 109, 115, 117, 136, 138, 151, 153, 165, 172, 174, 175, 181, 185, 188, 189, 190, 191, 192, 196, 197, 198, 203, 204, 207, 208, 212, 215, 229, 230, 232, 235, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 256, 257, 262, 270, 273, 276, 277, 278, 279, 290, 293, 302, 338, 349, 351, 354, 356, 358, 360, 362, 379, 384, 392, 397, 400, 401, 424, 437, 438, 443, 447, 460, 468, 486, 491, 506, 507, 509, 511, 548, 605, 610, 613, 629, 630, 631, 637, 652, 656, 669, 676, 685, 686, 687, 688, 690, 692, 693, 695, 696, 697, 699, 701, 703, 705, 706, 707, 708, 709, 710, 712, 716, 718, 719, 720, 721, 722, 723, 724, 726, 727, 728, 730, 734, 735, 736, 739, 741, 742, 745, 746, 749, 752, 754, 756, 757, 758, 760, 761], "an": [0, 3, 4, 6, 7, 8, 11, 12, 16, 23, 39, 44, 46, 47, 64, 75, 76, 113, 124, 179, 244, 246, 247, 249, 251, 256, 257, 262, 265, 277, 335, 338, 349, 351, 354, 356, 358, 360, 362, 384, 387, 392, 397, 400, 401, 402, 412, 490, 494, 497, 504, 509, 516, 517, 518, 534, 550, 559, 568, 571, 582, 585, 596, 599, 605, 606, 607, 610, 613, 620, 623, 686, 687, 688, 690, 691, 693, 695, 696, 697, 701, 702, 703, 706, 707, 708, 709, 712, 713, 716, 718, 719, 721, 723, 726, 729, 730, 735, 737, 739, 741, 744, 746, 751, 752, 753, 755, 756, 757, 758, 759, 760, 761, 762], "onlin": [0, 713, 746], "instead": [0, 1, 6, 8, 29, 70, 87, 97, 99, 106, 112, 114, 121, 127, 132, 143, 145, 150, 155, 162, 169, 171, 178, 180, 223, 228, 234, 237, 239, 258, 262, 273, 284, 287, 296, 299, 305, 327, 340, 343, 345, 348, 350, 353, 369, 372, 381, 386, 389, 394, 399, 404, 407, 410, 430, 436, 450, 457, 465, 496, 538, 546, 564, 578, 592, 616, 642, 648, 661, 665, 674, 704, 705, 710, 711, 712, 716, 718, 723, 731, 755, 756, 757, 760, 762], "gener": [0, 1, 3, 4, 5, 7, 8, 14, 15, 17, 22, 51, 76, 102, 117, 138, 153, 174, 189, 208, 232, 242, 243, 250, 265, 277, 290, 293, 302, 411, 412, 414, 416, 418, 460, 468, 471, 669, 675, 685, 686, 687, 688, 689, 690, 691, 692, 693, 695, 696, 697, 699, 703, 704, 705, 710, 711, 712, 713, 716, 717, 718, 719, 722, 723, 725, 726, 727, 728, 729, 730, 735, 744, 745, 746, 747, 748, 754, 756, 757, 760], "them": [0, 1, 7, 8, 24, 62, 189, 248, 262, 689, 690, 691, 698, 704, 705, 706, 708, 710, 711, 712, 716, 733, 735, 741, 746, 748, 760, 761], "each": [0, 1, 3, 6, 7, 8, 20, 26, 40, 46, 47, 72, 244, 245, 246, 247, 248, 249, 250, 251, 253, 257, 262, 265, 267, 268, 277, 338, 349, 384, 392, 397, 512, 520, 539, 604, 605, 606, 610, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 693, 695, 696, 697, 698, 699, 700, 701, 703, 704, 705, 706, 708, 710, 711, 712, 713, 716, 717, 720, 722, 723, 726, 735, 739, 740, 742, 744, 745, 746, 748, 749, 751, 752, 753, 754, 755, 756, 757, 758, 760, 762], "time": [0, 1, 6, 7, 8, 11, 26, 83, 88, 100, 115, 151, 165, 172, 230, 240, 244, 246, 247, 248, 249, 251, 256, 257, 265, 277, 297, 322, 332, 338, 343, 346, 349, 364, 367, 384, 387, 392, 397, 402, 405, 408, 421, 443, 444, 445, 478, 487, 492, 494, 506, 507, 509, 511, 519, 523, 541, 567, 568, 581, 582, 595, 596, 605, 609, 610, 619, 620, 653, 686, 687, 688, 689, 690, 691, 692, 693, 695, 696, 697, 698, 700, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 717, 718, 719, 720, 721, 722, 723, 724, 726, 730, 734, 736, 737, 741, 742, 743, 746, 748, 749, 750, 751, 752, 753, 755, 759, 760, 762], "run": [0, 5, 7, 11, 14, 15, 16, 17, 20, 21, 25, 26, 27, 34, 43, 61, 62, 65, 66, 71, 72, 73, 74, 76, 81, 83, 86, 88, 96, 98, 100, 105, 111, 113, 115, 136, 142, 149, 151, 154, 157, 163, 165, 168, 170, 172, 177, 230, 233, 236, 238, 240, 243, 244, 245, 246, 247, 248, 249, 250, 251, 256, 257, 260, 262, 265, 268, 285, 288, 294, 300, 309, 318, 322, 328, 331, 338, 342, 343, 346, 349, 351, 364, 367, 384, 387, 392, 397, 402, 405, 408, 416, 422, 428, 431, 434, 443, 455, 458, 463, 466, 474, 479, 487, 492, 494, 527, 540, 541, 547, 555, 559, 565, 567, 579, 581, 593, 595, 606, 617, 619, 640, 643, 663, 667, 672, 685, 686, 687, 688, 689, 690, 691, 692, 693, 695, 696, 697, 698, 699, 700, 701, 702, 703, 705, 707, 708, 709, 710, 713, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 741, 742, 743, 744, 745, 746, 748, 749, 751, 753, 754, 755, 756, 757, 758, 759, 761, 762], "The": [0, 1, 3, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 18, 20, 22, 23, 24, 25, 26, 27, 31, 32, 34, 35, 36, 37, 38, 39, 40, 43, 44, 45, 46, 47, 48, 51, 52, 56, 60, 61, 62, 65, 66, 68, 70, 71, 72, 73, 74, 75, 76, 79, 81, 83, 86, 88, 90, 92, 96, 98, 100, 102, 103, 105, 107, 111, 113, 115, 117, 118, 120, 122, 124, 125, 128, 130, 133, 136, 138, 139, 142, 144, 146, 149, 151, 153, 154, 157, 159, 161, 163, 165, 168, 170, 172, 174, 175, 177, 179, 181, 185, 188, 190, 192, 196, 198, 203, 204, 206, 208, 212, 214, 215, 220, 222, 225, 227, 230, 232, 233, 236, 238, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 262, 265, 266, 268, 269, 270, 273, 274, 276, 278, 279, 281, 282, 285, 288, 290, 291, 293, 294, 297, 300, 302, 303, 307, 309, 311, 313, 316, 318, 320, 322, 325, 328, 329, 331, 335, 338, 342, 343, 346, 349, 351, 354, 356, 358, 360, 362, 364, 367, 370, 373, 376, 379, 382, 384, 387, 390, 392, 395, 397, 400, 401, 402, 405, 408, 412, 414, 416, 418, 421, 428, 431, 434, 437, 440, 443, 448, 451, 454, 455, 458, 460, 461, 463, 466, 468, 469, 472, 474, 476, 478, 479, 481, 483, 486, 487, 490, 491, 492, 494, 497, 499, 502, 504, 507, 509, 510, 511, 513, 514, 515, 519, 523, 525, 527, 529, 531, 534, 536, 540, 544, 547, 548, 550, 553, 555, 557, 559, 562, 565, 567, 571, 573, 576, 579, 581, 585, 587, 590, 593, 595, 599, 601, 607, 614, 617, 619, 623, 625, 629, 640, 643, 646, 649, 652, 657, 659, 663, 666, 667, 669, 670, 672, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 713, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761], "primari": [0, 3, 6, 8, 762], "motiv": 0, "thi": [0, 1, 3, 4, 6, 7, 8, 11, 12, 16, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 34, 36, 43, 44, 45, 48, 49, 51, 52, 53, 54, 56, 57, 61, 64, 66, 68, 70, 75, 76, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 189, 190, 194, 195, 196, 200, 201, 204, 206, 210, 211, 212, 214, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 270, 271, 273, 274, 275, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 330, 331, 333, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 425, 428, 429, 430, 431, 432, 434, 435, 436, 437, 439, 440, 441, 443, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 522, 523, 524, 525, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 538, 540, 542, 544, 546, 547, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 578, 579, 580, 581, 582, 583, 585, 586, 587, 588, 589, 590, 592, 593, 594, 595, 596, 597, 599, 600, 601, 602, 603, 604, 605, 614, 616, 617, 618, 619, 620, 621, 623, 624, 625, 626, 627, 628, 629, 634, 640, 641, 642, 643, 644, 646, 647, 648, 649, 650, 652, 655, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 685, 686, 687, 688, 689, 690, 692, 693, 695, 696, 697, 699, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 716, 717, 718, 719, 720, 721, 722, 723, 726, 727, 728, 729, 730, 734, 735, 736, 737, 739, 741, 743, 744, 745, 746, 748, 749, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 762], "i": [0, 3, 6, 7, 8, 11, 12, 20, 21, 26, 29, 34, 37, 39, 51, 52, 56, 61, 62, 66, 69, 70, 71, 75, 76, 83, 87, 88, 92, 97, 99, 100, 106, 107, 112, 114, 115, 121, 127, 132, 136, 143, 145, 150, 151, 155, 157, 162, 165, 169, 171, 172, 177, 178, 179, 180, 181, 188, 203, 223, 228, 230, 234, 237, 239, 240, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 269, 270, 274, 276, 277, 284, 287, 288, 296, 299, 305, 309, 318, 322, 327, 338, 340, 343, 345, 348, 349, 350, 353, 364, 369, 372, 381, 386, 389, 394, 399, 404, 407, 410, 430, 431, 436, 445, 450, 451, 457, 458, 465, 466, 474, 487, 490, 491, 494, 496, 507, 511, 527, 538, 546, 555, 557, 559, 564, 578, 592, 610, 616, 642, 643, 648, 661, 665, 667, 670, 674, 677, 683, 684, 685, 686, 687, 688, 689, 690, 692, 693, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 716, 717, 718, 719, 720, 721, 722, 723, 724, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 744, 745, 746, 747, 748, 749, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762], "option": [0, 6, 7, 11, 12, 14, 15, 17, 21, 23, 24, 25, 26, 27, 28, 34, 35, 36, 37, 39, 40, 44, 50, 51, 52, 55, 56, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 80, 83, 88, 92, 94, 100, 107, 109, 115, 124, 126, 131, 136, 151, 165, 172, 181, 183, 188, 192, 198, 202, 203, 208, 215, 230, 240, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 262, 265, 267, 270, 273, 274, 277, 278, 279, 281, 283, 286, 288, 295, 298, 304, 308, 309, 317, 318, 326, 334, 339, 342, 344, 347, 352, 364, 368, 371, 375, 380, 382, 385, 388, 390, 393, 395, 398, 400, 401, 403, 406, 409, 429, 431, 435, 449, 451, 454, 456, 458, 464, 466, 474, 487, 494, 495, 509, 510, 511, 513, 514, 515, 519, 527, 537, 541, 543, 545, 555, 563, 570, 577, 584, 591, 598, 605, 615, 622, 641, 643, 647, 651, 660, 664, 666, 667, 673, 675, 677, 678, 679, 683, 684, 685, 686, 687, 688, 689, 690, 691, 693, 695, 696, 697, 698, 699, 700, 701, 703, 707, 709, 710, 713, 716, 729, 739, 741, 760, 761], "avoid": [0, 1, 6, 704, 711, 712, 748, 758], "consum": [0, 8, 704, 710, 711, 741, 746, 762], "mesh": [0, 1, 6, 11, 60, 80, 81, 83, 86, 90, 92, 96, 98, 100, 103, 105, 107, 118, 120, 139, 144, 154, 157, 161, 163, 165, 175, 177, 185, 188, 192, 193, 197, 198, 199, 203, 204, 207, 208, 209, 212, 214, 215, 216, 222, 227, 229, 235, 244, 245, 246, 247, 248, 251, 253, 256, 267, 276, 277, 285, 291, 311, 320, 325, 328, 329, 331, 335, 338, 342, 343, 346, 349, 351, 354, 356, 360, 362, 364, 367, 370, 373, 400, 401, 402, 405, 408, 418, 428, 431, 434, 437, 440, 443, 444, 461, 476, 490, 492, 507, 519, 529, 534, 536, 540, 544, 547, 548, 557, 559, 562, 565, 567, 571, 576, 579, 581, 585, 590, 593, 595, 599, 604, 606, 607, 612, 614, 617, 619, 623, 629, 638, 640, 643, 646, 649, 652, 653, 657, 663, 670, 672, 677, 683, 684, 686, 687, 688, 691, 693, 695, 696, 697, 698, 699, 702, 703, 704, 705, 706, 708, 709, 712, 713, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 739, 741, 742, 743, 744, 745, 747, 749, 751, 752, 753, 754, 755, 756, 757, 759, 760, 762], "initi": [0, 7, 8, 11, 90, 103, 105, 118, 139, 144, 146, 154, 159, 161, 175, 177, 179, 197, 214, 220, 222, 225, 227, 245, 246, 247, 248, 249, 251, 256, 257, 265, 269, 273, 277, 278, 285, 291, 311, 320, 324, 335, 337, 338, 342, 343, 346, 349, 351, 354, 356, 358, 360, 362, 364, 367, 370, 373, 384, 387, 392, 397, 400, 401, 402, 405, 408, 412, 418, 428, 431, 434, 440, 461, 476, 486, 492, 529, 534, 553, 557, 559, 571, 585, 599, 605, 610, 623, 640, 643, 646, 649, 663, 670, 672, 686, 687, 688, 689, 690, 691, 693, 695, 696, 697, 698, 699, 700, 703, 704, 705, 707, 708, 709, 710, 712, 713, 716, 718, 719, 720, 721, 723, 724, 725, 729, 730, 737, 739, 741, 742, 743, 744, 745, 746, 749, 751, 752, 753, 755, 759, 761], "condit": [0, 11, 90, 103, 105, 118, 139, 144, 146, 154, 159, 161, 175, 177, 179, 214, 220, 222, 225, 227, 245, 246, 247, 248, 249, 251, 256, 257, 265, 277, 278, 285, 291, 311, 320, 324, 335, 337, 338, 342, 343, 346, 349, 351, 354, 356, 358, 360, 362, 364, 367, 370, 373, 384, 387, 392, 397, 400, 401, 402, 405, 408, 412, 418, 428, 431, 434, 440, 461, 476, 492, 529, 534, 557, 559, 571, 585, 599, 605, 623, 640, 643, 646, 649, 663, 670, 672, 686, 687, 688, 689, 690, 691, 693, 695, 696, 697, 698, 699, 700, 703, 704, 705, 708, 709, 710, 712, 713, 716, 718, 719, 720, 721, 722, 723, 724, 725, 729, 730, 737, 741, 742, 743, 744, 746, 748, 749, 751, 752, 753, 755, 758, 759, 761], "faster": [0, 8, 706, 723], "regress": [0, 1, 3, 324, 337, 686, 690, 695, 696, 697, 704, 708, 709, 711, 712, 716, 718, 720, 725, 741, 742, 746, 751, 752, 753, 755, 759, 760, 762], "mpa": [0, 6, 7, 9, 10, 11, 12, 26, 31, 43, 60, 63, 68, 71, 72, 73, 74, 80, 85, 95, 110, 135, 141, 147, 156, 167, 184, 219, 224, 229, 235, 243, 245, 246, 247, 248, 251, 258, 259, 260, 261, 262, 263, 265, 266, 267, 270, 274, 280, 288, 306, 309, 315, 318, 322, 324, 325, 331, 337, 338, 349, 351, 354, 360, 362, 364, 367, 370, 379, 384, 387, 392, 397, 400, 402, 411, 416, 420, 422, 431, 434, 443, 444, 448, 453, 458, 471, 474, 485, 487, 490, 507, 519, 522, 527, 533, 536, 540, 544, 552, 555, 561, 562, 567, 568, 576, 581, 582, 590, 595, 596, 605, 610, 614, 619, 620, 628, 629, 643, 646, 652, 653, 657, 659, 662, 667, 676, 685, 686, 687, 688, 689, 690, 691, 692, 693, 695, 696, 697, 698, 699, 700, 701, 702, 703, 708, 709, 710, 711, 712, 713, 715, 731, 732, 733, 734, 735, 736, 737, 739, 740, 741, 742, 743, 746, 747, 748, 751, 752, 756, 757, 758, 759, 761, 762], "compon": [0, 6, 243, 685, 690, 704, 705, 709, 711, 712, 713, 735, 737, 748], "forward": [0, 1, 8, 11, 14, 15, 17, 83, 88, 100, 105, 115, 136, 151, 154, 165, 172, 177, 230, 240, 243, 249, 253, 257, 265, 285, 297, 322, 338, 343, 346, 349, 384, 387, 392, 397, 402, 405, 408, 421, 443, 455, 478, 539, 559, 629, 663, 672, 685, 704, 705, 713, 718, 719, 720, 721, 722, 724, 730, 737, 742, 743, 744, 745, 749, 751, 752, 753, 754, 755, 757, 759], "mode": [0, 1, 6, 14, 15, 17, 687, 688, 690, 692, 699, 702, 704, 706, 711, 712, 713, 743, 746, 748, 752, 757, 758, 760], "potenti": [0, 277, 297, 478, 690, 696, 704, 711, 742, 746, 751, 752, 755, 758], "other": [0, 1, 3, 6, 7, 8, 11, 16, 36, 245, 258, 490, 689, 696, 698, 700, 704, 705, 706, 707, 708, 709, 710, 713, 716, 722, 725, 726, 730, 731, 741, 746, 754, 756, 761], "could": [0, 1, 244, 704, 705, 706, 710, 711, 712, 713, 729, 746, 752], "includ": [0, 1, 3, 6, 7, 8, 12, 22, 26, 37, 70, 102, 117, 138, 147, 153, 157, 163, 165, 174, 232, 242, 244, 248, 250, 253, 262, 270, 272, 273, 274, 290, 293, 302, 354, 360, 362, 366, 370, 373, 378, 379, 433, 442, 451, 458, 460, 468, 487, 489, 491, 492, 494, 501, 509, 511, 555, 557, 559, 645, 663, 667, 669, 670, 672, 686, 690, 693, 695, 696, 697, 699, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762], "result": [0, 1, 6, 8, 37, 47, 75, 76, 86, 96, 98, 111, 113, 142, 149, 157, 163, 168, 170, 236, 238, 244, 245, 246, 247, 248, 251, 262, 265, 282, 294, 300, 303, 313, 322, 346, 356, 358, 402, 405, 408, 414, 463, 479, 502, 507, 519, 531, 605, 613, 686, 689, 690, 695, 696, 698, 699, 700, 703, 704, 705, 706, 708, 710, 711, 712, 713, 716, 717, 718, 719, 720, 721, 722, 723, 724, 730, 741, 742, 745, 746, 747, 748, 751, 752, 753, 754, 755, 756, 759, 762], "baselin": [0, 1, 6, 8, 26, 71, 72, 74, 75, 76, 245, 246, 247, 249, 251, 256, 257, 338, 349, 413, 473, 482, 526, 686, 690, 693, 696, 697, 699, 703, 705, 708, 712, 716, 729, 741, 749, 752, 760], "valid": [0, 1, 6, 26, 83, 165, 244, 246, 247, 249, 251, 256, 338, 421, 507, 629, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 690, 691, 692, 695, 697, 699, 703, 705, 706, 709, 711, 719, 739, 742, 743, 744, 746, 747, 748, 749, 751, 753, 755, 758, 759, 760], "A": [0, 1, 6, 7, 8, 9, 11, 12, 15, 17, 23, 25, 26, 31, 36, 38, 40, 44, 45, 48, 51, 52, 53, 56, 61, 63, 66, 68, 70, 71, 72, 73, 74, 75, 76, 80, 81, 83, 85, 86, 88, 90, 92, 94, 95, 96, 98, 100, 103, 107, 109, 110, 111, 113, 115, 118, 120, 122, 124, 133, 135, 136, 139, 141, 142, 146, 149, 151, 156, 157, 159, 163, 165, 167, 168, 170, 172, 175, 177, 181, 183, 184, 185, 188, 190, 196, 202, 203, 204, 206, 212, 214, 219, 220, 224, 225, 229, 230, 233, 235, 236, 238, 240, 245, 246, 247, 251, 265, 267, 268, 269, 270, 273, 274, 280, 282, 288, 291, 294, 300, 303, 306, 309, 311, 313, 315, 318, 320, 322, 324, 325, 328, 331, 335, 337, 338, 343, 346, 349, 351, 354, 356, 358, 360, 362, 364, 367, 370, 373, 376, 379, 382, 384, 387, 390, 392, 395, 397, 400, 402, 405, 408, 411, 414, 416, 418, 420, 421, 428, 431, 434, 437, 440, 443, 448, 451, 453, 458, 461, 463, 466, 469, 471, 474, 476, 479, 483, 485, 486, 487, 490, 491, 492, 497, 499, 502, 504, 507, 509, 511, 519, 522, 523, 527, 529, 531, 533, 534, 536, 540, 544, 547, 550, 552, 553, 555, 557, 561, 562, 565, 567, 571, 573, 576, 579, 581, 585, 587, 590, 593, 595, 599, 601, 607, 610, 614, 617, 619, 623, 625, 628, 629, 640, 643, 646, 649, 652, 657, 659, 662, 667, 670, 675, 676, 677, 678, 679, 680, 681, 683, 684, 686, 687, 690, 693, 695, 696, 697, 699, 703, 704, 705, 706, 708, 709, 710, 711, 712, 716, 720, 731, 732, 733, 734, 735, 736, 741, 745, 746, 748, 752, 755, 756, 758, 760], "challeng": [0, 1, 3], "capabl": [0, 1, 3, 262, 265, 705, 735, 757, 759, 760], "provid": [0, 1, 3, 4, 6, 8, 12, 75, 76, 243, 245, 246, 247, 249, 251, 257, 265, 338, 613, 685, 686, 688, 690, 692, 693, 695, 696, 697, 699, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 716, 718, 726, 729, 730, 734, 735, 737, 746, 749, 752, 755, 756, 759, 760], "easi": [0, 7, 12, 705, 712], "both": [0, 1, 6, 7, 8, 76, 253, 265, 686, 688, 690, 692, 693, 696, 701, 704, 706, 709, 710, 711, 712, 713, 718, 719, 721, 724, 726, 737, 741, 746, 748, 749, 752, 753, 754, 755, 759], "develop": [0, 6, 7, 8, 243, 262, 704, 705, 707, 713, 735, 746, 760], "user": [0, 6, 7, 8, 11, 25, 26, 27, 36, 68, 76, 147, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 262, 686, 687, 688, 690, 692, 693, 695, 696, 697, 699, 700, 701, 702, 703, 704, 707, 708, 710, 711, 712, 715, 719, 726, 734, 735, 736, 740, 745, 746, 752, 754, 756, 757], "control": [0, 1, 245, 246, 247, 265, 486, 704, 709, 713, 726, 745, 747, 752, 754, 755, 756, 759, 760], "which": [0, 1, 3, 6, 7, 8, 12, 17, 31, 71, 72, 74, 76, 197, 246, 247, 249, 251, 257, 277, 282, 294, 303, 322, 455, 463, 490, 491, 686, 687, 688, 690, 691, 692, 696, 704, 705, 706, 710, 711, 712, 713, 716, 718, 719, 721, 722, 723, 724, 726, 727, 728, 730, 735, 737, 739, 741, 742, 744, 745, 746, 748, 749, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762], "case": [0, 6, 7, 8, 9, 11, 16, 17, 21, 22, 26, 27, 28, 30, 31, 32, 34, 35, 40, 44, 49, 51, 54, 56, 61, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 113, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 146, 148, 149, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 170, 172, 173, 174, 175, 176, 177, 179, 181, 182, 183, 185, 186, 188, 190, 194, 195, 196, 200, 201, 202, 203, 204, 205, 206, 210, 211, 212, 213, 214, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 229, 230, 231, 232, 233, 235, 236, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 262, 265, 266, 270, 271, 272, 274, 275, 280, 281, 282, 283, 285, 286, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 328, 330, 331, 335, 338, 339, 342, 343, 344, 346, 347, 349, 351, 352, 354, 356, 358, 360, 362, 364, 366, 367, 368, 370, 371, 373, 376, 378, 379, 380, 382, 384, 385, 387, 388, 390, 392, 393, 395, 397, 398, 400, 401, 402, 403, 405, 406, 408, 409, 411, 412, 414, 415, 416, 417, 418, 419, 421, 425, 426, 428, 429, 431, 433, 434, 435, 437, 440, 442, 443, 446, 448, 449, 451, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 472, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 487, 488, 489, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 505, 522, 523, 524, 525, 527, 528, 529, 530, 531, 532, 534, 535, 536, 537, 540, 544, 545, 547, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 563, 565, 566, 567, 571, 573, 575, 576, 577, 579, 580, 581, 585, 587, 589, 590, 591, 593, 594, 595, 599, 601, 603, 605, 606, 607, 610, 611, 612, 614, 615, 617, 618, 619, 623, 625, 627, 629, 634, 636, 640, 641, 643, 645, 646, 647, 649, 652, 655, 657, 658, 659, 660, 662, 663, 664, 666, 667, 668, 669, 670, 671, 672, 673, 675, 685, 686, 687, 688, 689, 691, 692, 693, 695, 696, 697, 698, 699, 700, 701, 702, 703, 706, 708, 709, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 739, 740, 741, 742, 743, 744, 745, 747, 749, 750, 751, 752, 753, 754, 755, 756, 757, 759, 762], "suit": [0, 1, 3, 7, 11, 26, 35, 40, 69, 70, 72, 262, 690, 706, 708, 709, 710, 711, 712, 713, 715, 723, 731, 732, 733, 734, 736, 740, 746, 750], "ar": [0, 1, 3, 6, 7, 8, 9, 11, 12, 20, 21, 23, 26, 31, 36, 64, 66, 70, 72, 76, 83, 86, 88, 96, 98, 100, 111, 113, 115, 136, 142, 149, 151, 157, 163, 165, 168, 170, 172, 212, 214, 230, 236, 238, 240, 243, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 262, 265, 268, 288, 309, 318, 346, 364, 405, 408, 458, 466, 474, 486, 507, 510, 527, 553, 559, 604, 606, 611, 663, 667, 677, 680, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 715, 716, 717, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762], "last": [0, 1, 3, 706, 716, 745, 760], "modifi": [0, 3, 8, 24, 28, 62, 126, 131, 281, 283, 286, 295, 298, 304, 308, 317, 339, 342, 344, 347, 352, 368, 371, 380, 385, 388, 393, 398, 403, 406, 409, 429, 435, 449, 454, 456, 464, 495, 641, 647, 660, 664, 666, 673, 688, 690, 696, 697, 704, 709, 710, 711, 712, 713, 719, 737, 746, 748, 749, 752, 758, 760], "defin": [0, 1, 7, 8, 11, 26, 51, 71, 72, 74, 147, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 255, 256, 257, 262, 265, 273, 276, 685, 686, 687, 688, 689, 690, 691, 692, 693, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 708, 709, 713, 718, 719, 721, 724, 726, 735, 739, 742, 743, 744, 745, 746, 748, 749, 751, 752, 753, 755, 756, 758, 759, 761, 762], "its": [0, 1, 6, 7, 8, 11, 28, 73, 192, 198, 215, 248, 253, 494, 610, 690, 697, 698, 704, 705, 706, 708, 710, 711, 712, 713, 718, 719, 720, 724, 726, 731, 745, 746, 752, 754, 760, 761], "attribut": [0, 1, 8, 20, 247, 249, 251, 257, 265, 690, 696, 710, 711, 712], "For": [0, 1, 3, 4, 6, 7, 8, 64, 72, 246, 247, 249, 251, 257, 258, 688, 690, 696, 704, 705, 706, 708, 710, 711, 712, 713, 715, 716, 720, 726, 731, 740, 744, 745, 746, 750, 752, 753, 755, 756, 757, 760, 761], "see": [0, 1, 6, 7, 8, 244, 245, 246, 247, 248, 249, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 606, 686, 689, 690, 691, 693, 696, 698, 699, 700, 701, 703, 704, 706, 707, 710, 711, 712, 713, 715, 717, 719, 726, 729, 735, 740, 741, 745, 746, 749, 752, 754, 756, 759, 760, 761, 762], "mechan": [0, 1, 704], "comput": [0, 1, 7, 64, 262, 265, 267, 269, 329, 502, 507, 548, 604, 605, 612, 680, 681, 682, 686, 689, 690, 693, 695, 696, 697, 698, 699, 702, 703, 704, 706, 711, 723, 727, 728, 729, 732, 734, 735, 736, 737, 746, 752, 757, 758, 760], "There": [0, 1, 6, 249, 256, 257, 265, 677, 683, 684, 686, 690, 696, 704, 705, 706, 707, 711, 712, 713, 715, 717, 718, 719, 722, 723, 726, 727, 728, 729, 730, 736, 751, 752], "need": [0, 1, 3, 5, 6, 7, 8, 27, 36, 52, 64, 243, 274, 351, 354, 490, 507, 519, 685, 690, 696, 699, 704, 705, 706, 707, 709, 710, 711, 712, 713, 721, 726, 729, 731, 734, 735, 736, 737, 739, 741, 745, 746, 752, 754, 756, 757, 760, 762], "practic": [0, 1, 704, 705, 711, 737], "should": [0, 1, 3, 6, 7, 8, 12, 22, 26, 28, 37, 52, 61, 71, 72, 76, 102, 117, 138, 153, 174, 232, 242, 243, 256, 258, 259, 260, 261, 262, 263, 265, 273, 290, 293, 302, 460, 468, 534, 669, 685, 690, 696, 704, 706, 707, 710, 711, 712, 713, 716, 717, 723, 726, 741, 742, 746, 749, 751, 752, 760], "overli": [0, 7, 265, 269, 737, 746, 749, 752], "tediou": [0, 1], "manual": [0, 1, 6, 8, 26, 27, 244, 245, 246, 247, 251, 704, 710, 726, 749, 752, 761], "e": [0, 1, 7, 8, 11, 28, 31, 43, 253, 262, 265, 507, 607, 690, 704, 705, 706, 707, 708, 710, 711, 712, 713, 720, 726, 734, 736, 739, 742, 744, 746, 749, 751, 752, 753, 754, 755, 759, 760, 761, 762], "g": [0, 1, 7, 8, 11, 28, 31, 43, 115, 124, 247, 262, 607, 690, 704, 705, 706, 707, 708, 710, 711, 712, 713, 720, 726, 739, 742, 744, 746, 749, 751, 752, 753, 754, 759, 760, 762], "set": [0, 1, 5, 6, 7, 8, 11, 12, 14, 15, 17, 22, 35, 52, 67, 68, 71, 72, 74, 75, 76, 83, 100, 102, 117, 138, 153, 165, 174, 175, 195, 201, 211, 218, 232, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 258, 259, 260, 261, 262, 263, 265, 272, 290, 293, 302, 324, 326, 334, 337, 366, 378, 433, 442, 460, 468, 489, 501, 506, 507, 537, 543, 545, 563, 570, 577, 584, 591, 598, 604, 606, 615, 622, 645, 669, 677, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 695, 696, 697, 698, 699, 700, 702, 703, 704, 705, 707, 708, 709, 713, 717, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 730, 731, 732, 733, 734, 735, 736, 741, 742, 744, 745, 746, 747, 748, 749, 751, 752, 753, 754, 755, 756, 757, 758, 762], "flag": [0, 1, 6, 704, 705, 707, 708, 711, 712, 713, 715, 740, 742, 751, 760], "document": [0, 4, 8, 613, 690, 704, 705, 709, 713, 746, 751], "process": [0, 1, 3, 8, 66, 184, 185, 190, 196, 204, 206, 212, 214, 248, 250, 253, 265, 356, 358, 408, 491, 690, 704, 705, 706, 708, 709, 710, 711, 712, 726, 746, 748, 749], "creat": [0, 6, 8, 9, 11, 12, 20, 26, 31, 39, 44, 45, 51, 52, 56, 71, 72, 73, 74, 81, 83, 86, 88, 90, 92, 96, 98, 100, 103, 105, 107, 111, 113, 115, 118, 120, 122, 125, 128, 130, 133, 136, 139, 142, 144, 146, 149, 151, 154, 157, 159, 161, 163, 165, 168, 170, 172, 175, 177, 179, 181, 184, 185, 189, 190, 196, 204, 206, 212, 214, 220, 222, 225, 227, 230, 233, 236, 238, 240, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 257, 262, 265, 270, 273, 274, 278, 282, 285, 288, 291, 294, 297, 300, 303, 307, 309, 311, 313, 316, 318, 320, 322, 325, 328, 331, 335, 338, 343, 346, 349, 351, 354, 356, 358, 360, 362, 364, 367, 370, 373, 376, 379, 382, 383, 384, 387, 390, 391, 392, 395, 396, 397, 402, 405, 408, 412, 414, 416, 418, 421, 428, 431, 434, 437, 438, 440, 443, 448, 451, 452, 455, 458, 461, 463, 466, 469, 472, 474, 476, 478, 479, 481, 483, 487, 492, 494, 497, 499, 502, 504, 507, 519, 523, 525, 527, 529, 531, 534, 536, 540, 544, 547, 550, 553, 555, 557, 559, 562, 565, 567, 571, 573, 574, 576, 579, 581, 585, 587, 588, 590, 593, 595, 599, 601, 602, 607, 614, 617, 619, 623, 625, 626, 629, 640, 643, 646, 649, 652, 657, 659, 663, 667, 670, 672, 677, 683, 684, 688, 689, 690, 691, 692, 693, 696, 699, 704, 705, 707, 708, 709, 710, 712, 713, 716, 722, 723, 726, 727, 728, 730, 731, 732, 733, 734, 735, 736, 741, 745, 746, 752, 754, 756, 757, 758, 760], "upload": [0, 746], "give": [0, 6, 8, 704, 705, 706, 710, 711, 712, 713, 720, 756, 757, 760], "stamp": [0, 1, 6], "given": [0, 1, 6, 7, 8, 9, 25, 37, 46, 64, 66, 70, 75, 76, 244, 297, 329, 400, 401, 423, 478, 509, 511, 534, 548, 604, 605, 680, 686, 688, 690, 695, 700, 704, 707, 710, 711, 713, 719, 721, 722, 724, 726, 730, 737, 742, 746, 748, 751, 752, 759, 760, 762], "git": [0, 3, 8, 68, 243, 685, 706, 711, 712, 713, 760], "hash": 0, "releas": [0, 1, 705, 709, 715, 735, 736, 740, 760], "know": [0, 1, 8, 704, 705, 706, 711, 712, 737, 746], "older": [0, 6], "retain": [0, 6, 696, 712, 713, 746, 758], "so": [0, 1, 6, 7, 8, 24, 62, 78, 157, 243, 262, 270, 677, 683, 684, 685, 687, 690, 693, 696, 703, 704, 705, 706, 708, 710, 711, 712, 713, 714, 735, 736, 737, 739, 741, 745, 746, 752, 754, 756, 759, 760, 762], "can": [0, 3, 5, 6, 7, 8, 11, 12, 21, 26, 30, 48, 51, 53, 71, 72, 74, 76, 82, 158, 164, 243, 244, 245, 246, 248, 249, 251, 253, 257, 258, 259, 260, 261, 262, 263, 265, 269, 270, 349, 490, 560, 685, 690, 696, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 716, 717, 719, 720, 722, 723, 726, 730, 731, 732, 733, 734, 735, 736, 737, 741, 745, 746, 748, 749, 752, 754, 755, 756, 757, 759, 760, 761, 762], "still": [0, 1, 712, 723, 752], "It": [0, 1, 3, 6, 11, 20, 244, 245, 246, 247, 249, 250, 251, 257, 265, 686, 687, 688, 690, 691, 692, 693, 695, 697, 704, 705, 706, 708, 710, 711, 712, 713, 723, 726, 729, 735, 746, 755, 756], "mai": [0, 1, 6, 7, 8, 16, 20, 25, 243, 248, 262, 273, 685, 688, 690, 696, 704, 706, 707, 708, 711, 712, 713, 716, 726, 729, 730, 734, 736, 746, 748, 752, 756, 758, 760, 761], "worthwhil": 0, "deprec": [0, 29, 38, 87, 97, 99, 106, 112, 114, 121, 127, 132, 143, 145, 150, 155, 162, 169, 171, 178, 180, 223, 228, 234, 237, 239, 284, 287, 296, 299, 305, 327, 340, 345, 348, 350, 353, 369, 372, 381, 386, 389, 394, 399, 404, 407, 410, 430, 436, 450, 457, 465, 496, 538, 546, 564, 578, 592, 616, 642, 648, 661, 665, 674, 704], "delet": [0, 6, 8, 705, 706, 707, 760], "old": [0, 6, 708, 710], "do": [0, 1, 3, 6, 8, 189, 250, 690, 704, 706, 707, 708, 709, 710, 711, 712, 722, 723, 726, 727, 728, 730, 735, 741, 746, 752, 755, 760], "abil": [0, 7, 756], "up": [0, 1, 5, 6, 7, 8, 11, 14, 15, 17, 22, 26, 35, 57, 68, 71, 72, 73, 74, 75, 76, 102, 117, 138, 153, 174, 175, 177, 195, 201, 211, 218, 232, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 258, 259, 260, 261, 262, 263, 265, 272, 290, 293, 302, 324, 337, 366, 378, 433, 442, 460, 468, 489, 501, 645, 669, 685, 686, 687, 688, 689, 690, 691, 692, 693, 695, 696, 697, 698, 699, 700, 702, 703, 704, 705, 707, 708, 709, 710, 713, 719, 723, 724, 725, 726, 731, 732, 733, 734, 736, 741, 745, 746, 748, 754, 756, 757, 758, 761], "same": [0, 1, 6, 7, 8, 12, 26, 75, 76, 81, 250, 506, 690, 696, 700, 704, 705, 706, 708, 710, 711, 712, 713, 716, 719, 720, 721, 722, 724, 726, 730, 731, 732, 733, 734, 735, 736, 737, 739, 741, 742, 746, 751, 752, 753, 754, 760, 761, 762], "within": [0, 6, 7, 8, 11, 12, 16, 21, 26, 38, 73, 74, 75, 76, 92, 107, 181, 245, 248, 276, 370, 686, 690, 691, 693, 700, 704, 706, 708, 710, 711, 712, 713, 722, 723, 726, 727, 728, 730, 731, 732, 733, 734, 735, 736, 746, 747, 749, 752], "If": [0, 1, 3, 6, 7, 8, 11, 12, 21, 27, 28, 39, 62, 64, 66, 67, 71, 75, 76, 83, 88, 100, 115, 136, 151, 165, 172, 230, 240, 258, 259, 260, 261, 262, 263, 288, 309, 318, 364, 458, 466, 474, 494, 527, 686, 688, 690, 693, 695, 696, 697, 699, 703, 704, 705, 706, 707, 708, 710, 711, 712, 713, 734, 735, 736, 739, 745, 754, 756, 757, 760], "place": [0, 1, 6, 8, 690, 704, 711, 712, 735, 745, 754, 755, 756], "import": [0, 1, 8, 253, 704, 705, 706, 708, 710, 711, 712, 737], "constraint": [0, 734, 736, 760], "solut": [0, 1, 8, 175, 179, 251, 260, 322, 523, 610, 611, 688, 689, 691, 698, 700, 707, 710, 712, 718, 719, 722, 724, 730, 743, 744, 747, 755, 756, 758], "support": [0, 6, 8, 11, 246, 247, 249, 251, 257, 265, 677, 683, 684, 686, 688, 689, 699, 703, 704, 705, 709, 710, 711, 712, 713, 716, 717, 723, 726, 731, 732, 733, 734, 736, 737, 739, 742, 746, 748, 749, 752, 758, 761], "databas": [0, 1, 6, 8, 9, 11, 12, 246, 629, 699, 702, 704, 713, 726, 735, 758, 760], "input": [0, 6, 8, 11, 12, 13, 16, 22, 60, 92, 102, 107, 117, 138, 153, 174, 181, 189, 192, 193, 198, 199, 207, 208, 209, 215, 216, 232, 242, 244, 245, 246, 247, 248, 249, 251, 256, 257, 270, 276, 290, 293, 302, 437, 460, 468, 491, 507, 568, 582, 596, 620, 637, 669, 686, 687, 688, 690, 692, 693, 695, 696, 697, 710, 711, 712, 716, 726, 748], "data": [0, 6, 8, 12, 184, 185, 189, 190, 192, 193, 196, 197, 198, 199, 204, 206, 208, 209, 212, 214, 215, 216, 253, 256, 262, 267, 270, 313, 322, 421, 422, 423, 426, 443, 444, 445, 447, 506, 507, 509, 511, 606, 611, 630, 631, 636, 652, 653, 654, 656, 657, 677, 683, 684, 687, 688, 690, 692, 696, 702, 704, 706, 709, 710, 713, 716, 726, 729, 730, 731, 732, 733, 735, 743, 746, 748, 756, 758, 760, 761, 762], "e3sm": [0, 1, 6, 8, 11, 343, 351, 354, 356, 358, 360, 362, 401, 685, 690, 704, 706, 709, 711, 712, 713, 731, 732, 733, 734, 735, 736, 737, 739, 741, 746], "lcrc": [0, 1, 6, 8, 34, 246, 704, 705, 713, 731, 732, 735, 760], "server": [0, 1, 6, 8, 12, 34, 243, 246, 256, 685, 704, 705, 713, 734, 736, 746], "store": [0, 1, 8, 28, 690, 696, 704, 710, 711, 712, 746, 760], "new": [0, 1, 3, 6, 9, 11, 15, 23, 26, 31, 36, 39, 44, 51, 56, 83, 88, 100, 115, 136, 151, 165, 172, 230, 240, 265, 270, 274, 276, 288, 309, 318, 331, 356, 358, 360, 362, 364, 382, 390, 395, 414, 416, 431, 451, 458, 474, 486, 487, 527, 540, 555, 567, 573, 581, 587, 595, 601, 619, 625, 643, 667, 677, 683, 684, 696, 704, 705, 706, 707, 708, 709, 729, 730, 746, 752, 760], "compass_cach": [0, 6, 8, 9, 704], "core": [0, 6, 7, 8, 9, 10, 11, 12, 14, 15, 17, 18, 20, 21, 23, 24, 25, 26, 31, 42, 63, 65, 66, 68, 73, 74, 78, 79, 80, 85, 86, 94, 95, 96, 105, 109, 110, 111, 124, 135, 141, 142, 154, 156, 157, 167, 168, 177, 183, 184, 188, 203, 219, 224, 229, 235, 236, 245, 246, 247, 249, 250, 251, 257, 265, 266, 273, 277, 280, 282, 285, 306, 315, 324, 337, 346, 411, 420, 453, 471, 485, 522, 533, 539, 552, 561, 628, 662, 686, 687, 688, 690, 693, 695, 697, 699, 703, 708, 709, 710, 711, 712, 713, 714, 716, 720, 722, 723, 724, 726, 730, 731, 732, 733, 734, 735, 736, 738, 741, 746, 748, 757, 758, 760, 761, 762], "": [0, 1, 6, 7, 8, 11, 12, 16, 26, 28, 34, 57, 69, 73, 74, 76, 245, 246, 247, 248, 250, 251, 253, 254, 255, 686, 687, 688, 689, 690, 691, 692, 693, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 710, 711, 712, 713, 715, 719, 726, 728, 731, 732, 733, 734, 735, 736, 740, 745, 746, 748, 752, 754, 756, 757, 759, 760], "space": [0, 1, 6, 7, 8, 704, 706, 712, 722, 723, 727, 728, 730, 735, 755, 760], "appropri": [0, 1, 3, 6, 64, 243, 244, 245, 262, 534, 685, 686, 687, 688, 690, 693, 695, 696, 697, 699, 703, 704, 706, 709, 711, 712, 713, 716, 718, 731, 732, 733, 734, 735, 736, 741, 746, 752, 755, 760], "ad": [0, 1, 3, 6, 7, 8, 12, 22, 28, 36, 76, 102, 117, 138, 153, 174, 232, 242, 245, 246, 251, 265, 290, 293, 302, 460, 468, 669, 677, 683, 684, 686, 690, 693, 695, 706, 709, 729, 730, 731, 732, 733, 734, 736, 738, 746, 752, 758, 760], "where": [0, 1, 6, 7, 8, 11, 12, 26, 35, 37, 68, 71, 72, 74, 243, 265, 269, 507, 519, 677, 680, 683, 684, 685, 690, 693, 696, 704, 706, 708, 709, 710, 711, 712, 713, 719, 720, 722, 724, 726, 730, 731, 732, 733, 734, 735, 736, 737, 739, 745, 746, 748, 749, 752, 758, 759, 760, 762], "target": [0, 1, 8, 12, 39, 246, 262, 690, 704, 710, 711, 712, 746], "local": [0, 1, 6, 8, 11, 12, 26, 243, 253, 685, 704, 706, 707, 713, 726, 734, 735, 736, 739, 746, 757], "futur": [0, 1, 20, 265, 690, 703, 704, 705, 706, 708, 709, 711, 729, 730, 737, 746, 748, 758, 761], "filenam": [0, 1, 12, 16, 76, 94, 109, 246, 447, 506, 690, 704, 706, 710, 711, 712], "correspond": [0, 1, 3, 7, 8, 75, 76, 185, 204, 212, 243, 276, 604, 610, 685, 690, 693, 696, 704, 706, 726, 747], "via": [0, 1, 3, 6, 704, 712, 735, 737], "python": [0, 2, 6, 7, 8, 20, 28, 38, 379, 686, 687, 704, 705, 706, 708, 709, 710, 711, 712, 713, 734, 735, 736, 746, 760], "dictionari": [0, 1, 8, 9, 11, 15, 17, 23, 25, 26, 31, 36, 68, 72, 76, 338, 421, 605, 606, 611, 686, 703, 704, 705, 711, 712], "describ": [0, 1, 6, 7, 68, 75, 76, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 262, 265, 686, 687, 688, 689, 690, 692, 693, 695, 696, 697, 699, 702, 703, 704, 705, 706, 707, 710, 711, 712, 713, 716, 721, 726, 731, 732, 733, 734, 735, 736, 739, 745, 746, 749, 752, 755, 760], "08": [0, 711, 742, 751], "03": [0, 703], "indic": [0, 1, 7, 8, 72, 76, 265, 507, 680, 704, 707, 711, 713, 717, 726, 739, 746], "two": [0, 1, 6, 8, 86, 96, 98, 111, 113, 142, 149, 157, 163, 168, 170, 236, 238, 245, 246, 247, 249, 250, 251, 253, 257, 265, 294, 346, 405, 408, 463, 686, 688, 689, 690, 693, 704, 705, 706, 711, 712, 719, 720, 722, 723, 724, 726, 730, 741, 742, 744, 746, 747, 749, 751, 752, 757, 759, 761], "all": [0, 1, 6, 7, 8, 9, 11, 21, 26, 63, 66, 68, 71, 72, 79, 83, 88, 100, 115, 136, 151, 165, 172, 202, 207, 208, 230, 240, 243, 244, 247, 253, 265, 266, 273, 276, 277, 288, 309, 318, 338, 364, 370, 458, 466, 474, 507, 508, 527, 559, 677, 683, 684, 685, 690, 696, 699, 704, 705, 706, 708, 709, 710, 711, 712, 713, 715, 716, 717, 719, 720, 721, 724, 726, 735, 739, 740, 741, 742, 744, 746, 748, 751, 753, 754, 755, 756, 758, 759, 760, 761], "follow": [0, 1, 5, 6, 7, 8, 43, 243, 248, 250, 262, 265, 677, 683, 684, 685, 690, 693, 696, 704, 706, 707, 710, 711, 712, 713, 716, 718, 723, 726, 727, 728, 734, 735, 736, 737, 739, 741, 745, 746, 747, 748, 749, 752, 754, 755, 758, 759, 760], "notat": [0, 704], "ocean": [0, 4, 6, 7, 8, 9, 12, 31, 73, 74, 184, 204, 212, 243, 253, 686, 687, 688, 689, 690, 691, 692, 693, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 708, 709, 710, 711, 712, 713, 726, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 744, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 757, 758, 759, 760, 761, 762], "global_ocean": [0, 1, 6, 8, 270, 428, 431, 437, 443, 640, 643, 685, 692, 694, 704, 705, 706, 708, 709, 711, 712, 713, 737, 740, 741, 748, 750, 758, 760, 761, 762], "qu240": [0, 1, 6, 607, 612, 704, 705, 706, 710, 713, 741, 760, 762], "phc": [0, 1, 6, 370, 373, 690, 704, 705, 739, 741, 746, 762], "init": [0, 1, 6, 14, 15, 17, 21, 243, 276, 277, 338, 342, 343, 346, 349, 351, 364, 367, 384, 387, 392, 397, 402, 405, 408, 428, 431, 640, 643, 685, 687, 688, 692, 699, 702, 703, 704, 705, 706, 711, 713, 741, 757, 760, 762], "onli": [0, 1, 6, 7, 8, 23, 26, 189, 243, 244, 256, 257, 262, 494, 507, 511, 555, 557, 559, 685, 689, 690, 696, 698, 704, 705, 709, 710, 711, 712, 713, 718, 719, 723, 726, 727, 728, 729, 730, 734, 735, 736, 739, 742, 745, 746, 749, 752, 754, 755, 756, 759, 760], "some": [0, 1, 6, 8, 26, 244, 507, 519, 690, 696, 699, 703, 704, 705, 706, 707, 710, 711, 712, 713, 715, 723, 726, 731, 732, 733, 734, 735, 736, 739, 740, 746, 760, 761, 762], "thei": [0, 1, 3, 6, 7, 8, 12, 28, 36, 51, 70, 247, 338, 685, 686, 690, 693, 695, 696, 704, 705, 708, 709, 710, 711, 712, 713, 716, 719, 720, 722, 724, 726, 730, 735, 737, 739, 741, 742, 745, 746, 749, 752, 755, 759, 760, 762], "list": [0, 1, 3, 7, 11, 26, 27, 34, 35, 63, 66, 70, 71, 72, 73, 74, 75, 76, 83, 88, 100, 115, 151, 157, 165, 172, 230, 240, 244, 246, 247, 249, 251, 257, 300, 322, 325, 328, 349, 384, 392, 397, 400, 479, 523, 536, 547, 562, 565, 576, 579, 590, 593, 606, 612, 614, 617, 629, 686, 704, 705, 706, 708, 709, 710, 711, 712, 713, 715, 716, 720, 722, 730, 734, 735, 736, 745, 752, 754, 756, 757, 760, 761, 762], "explicitli": [0, 6, 7, 8, 690, 704, 711, 712, 713, 746, 748, 758, 760], "initial_st": [0, 1, 6, 278, 689, 690, 698, 700, 704, 705, 710, 713, 742, 743, 744, 746, 748, 749, 751, 752, 753, 755, 758, 759], "similarli": [0, 1, 6, 8, 704, 706, 710, 711, 712, 735, 741, 760], "ha": [0, 1, 6, 8, 11, 16, 21, 26, 28, 67, 71, 72, 74, 76, 78, 83, 88, 100, 115, 136, 151, 165, 172, 207, 208, 230, 240, 243, 244, 245, 246, 247, 248, 249, 251, 253, 256, 257, 258, 259, 260, 261, 265, 288, 309, 318, 364, 458, 466, 474, 506, 527, 685, 686, 687, 688, 690, 693, 695, 696, 697, 699, 703, 704, 705, 706, 708, 709, 710, 711, 712, 713, 714, 718, 719, 720, 722, 723, 724, 726, 736, 737, 739, 742, 743, 744, 745, 746, 749, 751, 752, 754, 755, 756, 758, 759, 760], "specifi": [0, 6, 8, 12, 165, 244, 250, 270, 692, 696, 704, 706, 710, 711, 712, 713, 717, 723, 726, 734, 736, 745, 746, 748, 752, 754, 756, 757, 759, 760], "suffix": [0, 12, 72, 83, 88, 100, 115, 151, 165, 172, 230, 240, 246, 247, 249, 250, 251, 257, 704, 746], "c": [0, 1, 6, 72, 115, 124, 247, 262, 265, 704, 706, 716, 720, 731, 732, 733, 734, 735, 736, 741, 752, 754, 756, 760, 762], "number": [0, 1, 6, 8, 11, 18, 20, 21, 23, 24, 35, 40, 44, 45, 46, 47, 48, 61, 62, 65, 66, 72, 83, 88, 100, 115, 136, 151, 165, 172, 188, 203, 207, 230, 240, 244, 248, 250, 253, 267, 268, 273, 277, 288, 309, 318, 329, 364, 400, 401, 443, 458, 466, 474, 506, 527, 539, 548, 685, 686, 690, 693, 696, 699, 703, 704, 705, 708, 711, 712, 713, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 726, 727, 728, 730, 735, 737, 739, 741, 742, 743, 744, 745, 746, 747, 748, 749, 751, 752, 753, 754, 755, 756, 757, 758, 760], "setup": [0, 11, 21, 23, 26, 86, 96, 98, 111, 113, 142, 149, 157, 163, 168, 170, 236, 238, 245, 246, 247, 249, 251, 257, 443, 686, 687, 690, 693, 695, 696, 699, 703, 705, 706, 708, 709, 710, 711, 712, 713, 745, 748, 754, 756, 757, 758, 760, 761], "n": [0, 1, 6, 45, 52, 53, 58, 383, 391, 396, 452, 574, 588, 602, 626, 704, 734, 735, 736, 755, 757, 760], "90c": [0, 704], "91c": [0, 704], "92": [0, 704, 739, 757], "approach": [0, 1, 704, 705, 706, 707, 710, 711, 712, 737, 739, 752], "effici": [0, 1, 343, 690, 704, 746], "doe": [0, 1, 3, 8, 188, 192, 198, 203, 208, 215, 265, 693, 704, 709, 711, 712, 716, 726, 735, 746, 749, 755, 757, 759], "ani": [0, 1, 6, 7, 8, 22, 71, 72, 102, 117, 138, 153, 174, 232, 242, 246, 247, 249, 251, 272, 290, 293, 302, 366, 378, 433, 442, 460, 468, 489, 501, 645, 669, 686, 687, 688, 690, 695, 696, 697, 704, 705, 706, 709, 710, 711, 712, 713, 716, 726, 734, 735, 741, 742, 746, 752, 760], "much": [0, 1, 6, 8, 244, 486, 704, 710, 711, 712, 741, 746, 749, 752, 759], "more": [0, 4, 6, 8, 26, 34, 35, 52, 71, 72, 248, 686, 687, 688, 689, 690, 691, 693, 698, 700, 701, 703, 704, 705, 706, 708, 710, 711, 712, 715, 717, 722, 723, 725, 726, 729, 730, 735, 737, 738, 740, 741, 746, 748, 749, 750, 755, 758, 759, 760, 761], "verbos": [0, 6, 40, 42, 704, 710, 762], "must": [0, 1, 6, 7, 8, 11, 16, 17, 19, 73, 74, 276, 567, 581, 595, 619, 690, 704, 706, 711, 726, 739, 746, 757, 761], "own": [0, 1, 7, 8, 11, 248, 610, 690, 704, 705, 706, 708, 710, 711, 712, 713, 745, 746, 754, 756, 757, 760, 761], "t": [0, 1, 6, 7, 8, 246, 247, 249, 251, 606, 610, 686, 687, 688, 690, 695, 697, 699, 704, 705, 706, 707, 710, 711, 712, 713, 716, 733, 734, 735, 741, 745, 746, 754, 756, 757, 760, 761, 762], "These": [0, 1, 6, 8, 9, 11, 243, 568, 582, 596, 604, 620, 685, 686, 690, 695, 702, 704, 705, 706, 709, 711, 713, 716, 719, 735, 741, 743, 746, 747, 748, 752, 757, 758, 759, 760, 761, 762], "assum": [0, 28, 276, 277, 349, 704, 711, 712, 713, 734, 736, 737], "alwai": [0, 1, 7, 8, 36, 243, 685, 690, 704, 705, 706, 710, 711, 712, 713, 726, 746], "free": [0, 1, 700, 710, 711, 712, 713, 737], "choos": [0, 1, 6, 704, 705, 711, 726, 731, 732, 733, 734, 736, 761], "between": [0, 1, 3, 6, 8, 12, 24, 45, 52, 53, 58, 62, 75, 76, 185, 204, 212, 245, 265, 294, 383, 391, 396, 443, 452, 463, 574, 588, 602, 626, 677, 683, 684, 687, 688, 689, 690, 692, 696, 698, 699, 700, 704, 705, 706, 711, 719, 720, 722, 724, 729, 730, 735, 737, 739, 742, 746, 749, 751, 752, 755], "long": [0, 1, 5, 11, 21, 66, 83, 88, 100, 115, 136, 151, 165, 172, 177, 230, 240, 244, 288, 309, 318, 364, 401, 458, 466, 474, 527, 555, 559, 663, 667, 690, 699, 703, 704, 705, 711, 716, 726, 741, 749, 752, 760], "been": [0, 1, 6, 8, 11, 26, 28, 35, 71, 72, 74, 243, 258, 259, 260, 261, 328, 547, 565, 579, 593, 617, 685, 690, 696, 704, 705, 706, 707, 709, 710, 711, 712, 713, 726, 731, 732, 733, 734, 735, 736, 739, 742, 746, 750, 751, 760], "cached_fil": [0, 6, 9, 704], "json": [0, 6, 8, 9, 34, 704, 734, 736], "command": [0, 1, 8, 20, 66, 68, 613, 704, 705, 706, 708, 709, 710, 711, 712, 734, 735, 736, 741, 760], "line": [0, 1, 7, 8, 66, 696, 704, 705, 706, 709, 710, 711, 712, 720, 730, 752, 760], "tool": [0, 1, 6, 8, 243, 245, 246, 247, 248, 251, 265, 685, 704, 706, 709, 710, 711, 712, 713, 716, 741, 746], "avail": [0, 1, 5, 6, 8, 11, 16, 18, 21, 40, 63, 65, 66, 83, 88, 100, 115, 136, 151, 165, 172, 230, 240, 244, 273, 288, 309, 318, 322, 364, 458, 466, 474, 527, 696, 704, 705, 706, 711, 715, 719, 723, 726, 731, 732, 733, 734, 736, 740, 742, 743, 744, 745, 746, 752, 754, 756, 760, 762], "chrysali": [0, 1, 6, 262, 704, 711, 712, 713, 735, 760], "anvil": [0, 1, 6, 262, 704, 713, 735, 760], "machin": [0, 6, 8, 11, 12, 26, 68, 71, 72, 74, 94, 109, 124, 183, 243, 685, 690, 704, 705, 709, 711, 712, 713, 726, 731, 732, 733, 734, 736], "work": [0, 1, 3, 6, 8, 11, 12, 16, 19, 22, 26, 34, 35, 68, 69, 71, 72, 74, 102, 117, 138, 153, 174, 232, 242, 246, 247, 249, 250, 251, 257, 260, 262, 272, 290, 293, 302, 366, 378, 433, 442, 460, 468, 489, 501, 645, 669, 704, 705, 706, 707, 708, 711, 712, 713, 735, 741, 745, 752, 754, 755, 756, 757, 759, 760, 761], "directori": [0, 6, 8, 11, 12, 16, 22, 26, 34, 35, 39, 68, 69, 71, 72, 73, 74, 75, 76, 92, 102, 107, 117, 138, 153, 174, 181, 232, 242, 243, 262, 272, 290, 293, 302, 366, 378, 433, 442, 460, 468, 489, 501, 645, 669, 685, 686, 690, 693, 696, 705, 706, 708, 709, 711, 712, 713, 719, 726, 731, 732, 733, 734, 735, 736, 745, 746, 752, 754, 756, 757, 760, 761], "copi": [0, 6, 8, 12, 34, 71, 72, 74, 249, 486, 711, 712, 760], "map": [0, 8, 9, 51, 52, 185, 188, 192, 198, 203, 204, 208, 212, 215, 253, 509, 511, 690, 706, 713, 726, 746], "those": [0, 1, 8, 23, 26, 75, 76, 262, 690, 703, 704, 705, 706, 708, 709, 710, 711, 712, 726, 745, 746, 749, 750, 752, 762], "exampl": [0, 1, 3, 4, 6, 7, 8, 265, 690, 704, 705, 706, 707, 708, 710, 711, 712, 713, 717, 719, 726, 739, 740, 746, 758, 760, 761, 762], "name": [0, 1, 6, 7, 8, 9, 11, 12, 14, 15, 17, 23, 24, 25, 26, 28, 31, 35, 37, 39, 40, 44, 51, 56, 60, 61, 62, 70, 71, 72, 73, 74, 75, 76, 81, 83, 88, 92, 100, 107, 115, 124, 136, 151, 165, 172, 181, 190, 192, 196, 198, 208, 215, 230, 240, 270, 273, 274, 279, 288, 309, 318, 329, 331, 335, 364, 367, 379, 382, 390, 395, 400, 401, 421, 424, 428, 431, 434, 437, 443, 448, 451, 458, 474, 487, 491, 507, 509, 511, 519, 523, 527, 529, 531, 536, 548, 607, 610, 611, 612, 613, 629, 643, 652, 659, 666, 667, 676, 686, 690, 695, 704, 705, 706, 708, 710, 711, 712, 713, 717, 719, 720, 721, 722, 724, 726, 730, 734, 736, 742, 746, 751, 760, 762], "culled_mesh": [0, 1, 6, 704, 711, 712], "nc": [0, 1, 6, 8, 92, 107, 181, 246, 249, 257, 265, 278, 349, 605, 610, 690, 696, 699, 703, 704, 705, 710, 711, 712, 726, 746], "becom": [0, 1, 7, 244, 265, 421, 704, 711, 712, 718, 737], "20210730": 0, "when": [0, 1, 6, 8, 14, 15, 17, 20, 26, 27, 36, 37, 39, 40, 69, 75, 76, 157, 244, 245, 246, 247, 249, 250, 251, 257, 262, 682, 686, 690, 693, 695, 696, 699, 703, 704, 705, 706, 709, 710, 711, 712, 716, 717, 718, 719, 720, 724, 726, 731, 732, 733, 734, 736, 739, 741, 746, 752, 760, 761], "call": [0, 1, 6, 8, 11, 20, 26, 27, 28, 43, 61, 69, 245, 246, 247, 249, 250, 251, 254, 255, 257, 262, 265, 349, 686, 690, 693, 696, 699, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 726, 734, 735, 736, 741, 746, 760], "default": [0, 1, 6, 7, 8, 11, 12, 14, 15, 17, 23, 24, 25, 26, 34, 52, 56, 62, 68, 70, 83, 88, 92, 94, 100, 105, 107, 109, 115, 124, 136, 151, 154, 165, 172, 181, 183, 222, 227, 230, 240, 243, 245, 246, 247, 249, 251, 254, 255, 257, 258, 259, 260, 261, 270, 273, 274, 288, 309, 311, 318, 320, 364, 431, 451, 458, 474, 481, 487, 494, 510, 527, 553, 643, 663, 667, 685, 689, 690, 696, 698, 699, 700, 701, 703, 704, 706, 709, 710, 712, 713, 718, 719, 720, 721, 722, 723, 724, 726, 727, 728, 730, 731, 732, 733, 734, 735, 736, 739, 741, 745, 746, 752, 754, 760, 761, 762], "being": [0, 1, 8, 11, 26, 69, 72, 76, 165, 265, 690, 693, 696, 704, 705, 706, 709, 710, 726, 739, 746, 750], "made": [0, 3, 6, 11, 16, 26, 76, 80, 229, 235, 690, 704, 705, 708, 710, 712, 724, 737, 761], "overridden": [0, 704], "contain": [0, 1, 3, 6, 7, 8, 9, 14, 17, 25, 63, 246, 247, 248, 249, 251, 265, 270, 279, 424, 437, 490, 491, 605, 629, 677, 683, 684, 686, 687, 688, 690, 695, 697, 704, 705, 706, 708, 710, 711, 712, 713, 715, 726, 735, 740, 746, 748, 752, 760], "210803": [0, 6], "culled_graph": [0, 1, 6, 704, 711], "info": [0, 1, 6, 8, 60, 61, 62, 276, 277, 507, 519, 690, 699, 703, 704, 711, 712], "critical_passages_mask_fin": [0, 6], "init_mode_forcing_data": [0, 6, 704], "prototyp": [0, 1], "had": [0, 262, 704, 705], "separ": [0, 1, 6, 7, 8, 144, 244, 490, 704, 711, 712, 717, 720, 722, 723, 726, 730, 744, 745, 746, 754, 756, 757, 760], "depend": [0, 1, 6, 8, 22, 102, 117, 138, 153, 174, 232, 242, 253, 272, 290, 293, 302, 366, 378, 433, 442, 460, 468, 489, 501, 510, 645, 669, 687, 689, 690, 693, 704, 706, 708, 710, 711, 712, 713, 734, 735, 736, 739, 745, 746, 747, 760, 761], "earlier": [0, 1], "turn": [0, 1, 11, 704, 707, 711, 752, 753, 758], "out": [0, 1, 8, 14, 15, 17, 23, 24, 25, 67, 265, 491, 506, 509, 511, 690, 696, 704, 705, 706, 711, 712, 713, 719, 739, 746, 751, 752, 755, 760], "veri": [0, 1, 251, 491, 693, 704, 705, 706, 711, 712, 724, 726, 749, 752, 755, 759], "cumbersom": [0, 1], "mani": [0, 1, 6, 8, 704, 705, 706, 708, 709, 710, 711, 712, 717, 719, 721, 724, 740, 742, 745, 746, 750, 751, 754, 756], "subdirectori": [0, 1, 6, 8, 11, 12, 26, 40, 44, 51, 56, 83, 88, 92, 100, 107, 115, 136, 151, 165, 172, 181, 230, 240, 246, 270, 274, 288, 309, 318, 364, 370, 382, 390, 395, 431, 451, 458, 474, 487, 527, 643, 667, 704, 705, 710, 711, 712, 726, 746, 760, 761], "predetermin": 0, "allow": [0, 1, 3, 8, 11, 21, 36, 76, 256, 265, 690, 696, 704, 708, 711, 712, 713, 716, 717, 735, 737, 739, 743, 745, 746, 748, 752, 754, 756, 758, 761], "But": [0, 1, 262, 704, 705, 710, 711, 712, 713, 735], "did": [0, 1, 8, 76], "therefor": [0, 1, 262, 691, 704, 706, 708, 709, 711, 712, 716, 745, 746, 754, 756, 760], "propos": [0, 1, 3], "previou": [0, 6, 8, 248, 265, 402, 690, 704, 710, 712, 713, 726, 741, 755, 760, 762], "section": [0, 1, 3, 4, 7, 8, 52, 62, 243, 245, 246, 247, 251, 265, 469, 483, 507, 509, 513, 516, 517, 518, 675, 677, 683, 684, 685, 690, 691, 696, 699, 703, 704, 706, 707, 710, 711, 712, 713, 718, 719, 720, 726, 731, 732, 733, 734, 735, 736, 739, 745, 747, 751, 752, 753, 754, 756, 757, 760], "far": [0, 1, 78, 677, 683, 684, 693, 705, 711, 712, 714, 752], "flexibl": [0, 8, 689, 704, 706, 709], "about": [0, 1, 6, 7, 8, 11, 704, 705, 710, 711, 712, 713, 716, 717, 726, 752, 756], "clear": [0, 1, 3, 705, 710, 712], "me": [0, 1], "how": [0, 1, 3, 6, 8, 51, 265, 696, 704, 705, 710, 711, 712, 713, 726, 734, 735, 736, 737, 745, 752, 754, 755, 756, 759], "achiev": [0, 47, 712, 737], "without": [0, 1, 6, 8, 12, 246, 405, 663, 690, 703, 704, 705, 706, 713, 719, 722, 723, 733, 735, 746, 752, 760], "branch": [0, 1, 3, 6, 71, 72, 74, 243, 262, 685, 704, 706, 709, 710, 711, 712, 713, 760], "04": [0, 1, 703], "boolean": [0, 8, 680], "fals": [0, 1, 8, 11, 12, 27, 34, 40, 42, 69, 70, 72, 74, 76, 157, 163, 165, 245, 246, 251, 267, 270, 273, 277, 487, 491, 494, 499, 504, 511, 667, 696, 699, 703, 704, 711, 712, 713, 718, 719, 721, 722, 723, 726, 727, 728, 733, 736, 742, 744, 746, 751, 757], "true": [0, 1, 7, 8, 27, 37, 39, 62, 76, 258, 259, 260, 261, 263, 265, 273, 274, 277, 451, 458, 494, 508, 511, 521, 690, 693, 696, 704, 711, 712, 713, 718, 719, 720, 722, 723, 724, 726, 727, 728, 730, 731, 732, 733, 734, 735, 736, 746, 752, 754, 757, 760, 761], "usual": [0, 704, 706, 711, 760], "ignor": 0, "namelist": [0, 1, 7, 11, 14, 15, 22, 23, 24, 62, 83, 88, 100, 102, 115, 117, 138, 151, 153, 165, 172, 174, 230, 232, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 256, 257, 290, 293, 302, 334, 460, 468, 541, 543, 570, 584, 598, 622, 669, 685, 686, 687, 688, 689, 690, 693, 695, 696, 697, 698, 699, 700, 703, 705, 709, 710, 713, 719, 721, 742, 746, 749, 751, 759], "steam": 0, "also": [0, 1, 3, 6, 7, 8, 20, 36, 75, 76, 248, 256, 265, 677, 683, 684, 686, 690, 696, 699, 701, 703, 704, 705, 706, 711, 712, 713, 721, 723, 726, 734, 735, 736, 737, 739, 741, 742, 744, 746, 751, 752, 753, 755, 756, 758, 759, 760, 761], "along": [0, 1, 507, 686, 690, 693, 695, 696, 703, 704, 709, 711, 712, 737, 746, 752, 758], "path": [0, 1, 6, 8, 11, 12, 16, 26, 34, 35, 36, 37, 38, 39, 40, 43, 68, 71, 72, 73, 74, 75, 76, 243, 246, 276, 277, 278, 685, 704, 705, 706, 708, 711, 713, 726, 731, 732, 733, 734, 735, 736, 746, 760, 761], "By": [0, 1, 6, 8, 12, 243, 685, 696, 704, 711, 712, 713, 720, 742, 743, 744, 745, 749, 751, 752, 754], "empti": [0, 36, 704, 705, 708, 711, 712], "onc": [0, 1, 8, 245, 246, 247, 249, 251, 257, 686, 687, 690, 693, 696, 706, 713, 726, 737, 745, 746, 752, 760], "white": [0, 730], "strip": [0, 705], "awai": [0, 3, 179, 704, 712], "accomplish": [0, 1, 6, 705, 712], "special": [0, 1, 6, 708], "_all": [0, 71, 72], "first": [0, 1, 8, 71, 72, 246, 247, 248, 249, 251, 257, 273, 686, 687, 688, 690, 693, 695, 696, 697, 699, 703, 704, 705, 706, 707, 710, 711, 712, 719, 720, 721, 722, 724, 730, 731, 732, 733, 734, 735, 736, 745, 746, 748, 749, 752, 757, 760], "start": [0, 1, 6, 7, 8, 322, 686, 693, 696, 704, 705, 709, 715, 724, 726, 734, 735, 736, 737, 740, 746, 748, 752, 758], "after": [0, 1, 7, 11, 12, 16, 57, 62, 243, 262, 490, 678, 679, 685, 690, 691, 696, 704, 710, 713, 719, 734, 736, 746, 751, 760], "remaind": [0, 712], "append": [0, 6, 12, 690], "conveni": [0, 1, 6, 677, 683, 684, 704, 708, 711, 712, 713, 729, 741, 746, 752, 760], "multipl": [0, 1, 6, 7, 8, 246, 247, 248, 249, 251, 257, 690, 704, 705, 710, 711, 712, 719, 720, 721, 722, 724, 730, 735, 742, 746, 751, 760], "global_converg": [0, 567, 581, 595, 599, 619, 623, 685, 694, 710, 711, 712, 740, 750, 756], "cosine_bel": [0, 536, 544, 711, 712], "qu60_mesh": 0, "qu60_init": 0, "qu90_mesh": 0, "qu90_init": 0, "qu120_mesh": 0, "qu120_init": 0, "qu150_mesh": 0, "qu150_init": 0, "qu180_mesh": 0, "qu180_init": 0, "qu210_mesh": 0, "qu210_init": 0, "qu240_mesh": 0, "qu240_init": 0, "individu": [0, 1, 8, 76, 704, 705, 711, 716, 717, 734, 735, 736, 760, 761], "while": [0, 1, 8, 246, 247, 249, 251, 257, 686, 690, 693, 704, 707, 708, 711, 712, 719, 746, 749, 752], "singl": [0, 1, 6, 8, 494, 691, 692, 702, 704, 705, 708, 710, 711, 712, 717, 718, 726, 727, 728, 729, 735, 741, 745, 747, 748, 752, 754, 756, 757, 758], "featur": [0, 1, 705, 708, 711, 712, 713, 741, 742, 751, 752, 755], "too": [0, 1, 11, 21, 66, 693, 704, 705, 711, 712, 737, 745, 746, 754, 756], "broadli": [0, 705], "probabl": [0, 1, 507, 711, 712, 735], "want": [0, 1, 3, 6, 8, 28, 704, 706, 707, 710, 711, 712, 713, 722, 723, 726, 727, 728, 730, 734, 735, 736, 760, 761], "cosin": [0, 328, 331, 335, 571, 585, 599, 623, 689, 698, 700, 745, 756], "bell": [0, 328, 331, 335, 571, 585, 599, 623, 689, 698, 700, 745, 756], "abov": [0, 1, 6, 7, 8, 208, 265, 273, 486, 507, 690, 696, 704, 705, 706, 711, 712, 713, 722, 730, 745, 746, 748, 752, 754, 760, 762], "modul": [0, 1, 5, 6, 14, 17, 25, 43, 258, 259, 260, 261, 262, 265, 690, 704, 707, 708, 709, 710, 711, 712, 713, 731, 732, 733, 734, 735, 736, 760], "take": [0, 1, 6, 7, 8, 36, 244, 246, 690, 704, 706, 709, 710, 711, 712, 716, 723, 727, 728, 752, 762], "dry_run": [0, 6, 34], "doesn": [0, 1, 8, 246, 247, 249, 251, 686, 687, 688, 695, 697, 704, 705, 710, 711, 712, 735, 746], "date_str": [0, 6, 34], "let": [0, 6, 690, 706, 708, 711, 712, 713, 734, 736], "suppli": [0, 1, 6, 7, 8, 273, 704, 706, 711, 726, 752], "yymmdd": [0, 34, 690, 713, 746], "than": [0, 1, 6, 8, 11, 12, 21, 36, 83, 88, 100, 115, 136, 151, 165, 172, 212, 214, 230, 240, 262, 288, 309, 318, 364, 458, 466, 474, 527, 686, 693, 704, 705, 706, 707, 710, 711, 712, 717, 723, 726, 727, 728, 737, 739, 742, 746, 749, 751, 752, 756, 759, 762], "todai": [0, 6, 34], "As": [0, 1, 5, 6, 8, 46, 690, 704, 705, 706, 711, 712, 713, 717, 718, 739, 746, 755, 759, 762], "state": [0, 1, 64, 177, 251, 265, 278, 686, 687, 688, 689, 690, 691, 693, 695, 696, 697, 698, 699, 700, 703, 711, 724, 752, 759], "To": [0, 1, 3, 6, 8, 76, 243, 246, 247, 248, 249, 251, 257, 262, 265, 685, 704, 705, 706, 710, 711, 712, 723, 726, 731, 732, 733, 734, 735, 736, 739, 745, 754, 756, 757, 760], "produc": [0, 1, 8, 11, 16, 34, 83, 88, 100, 115, 151, 165, 172, 230, 240, 245, 246, 248, 251, 282, 294, 303, 338, 342, 343, 346, 349, 351, 364, 367, 384, 387, 392, 397, 402, 405, 408, 421, 428, 431, 443, 463, 490, 629, 640, 643, 652, 657, 686, 687, 688, 689, 690, 691, 693, 695, 696, 697, 698, 699, 700, 701, 703, 704, 705, 706, 711, 712, 716, 741, 744, 746, 752, 753, 758, 759, 760], "mpas_cor": [0, 1, 8, 11, 26, 31, 62, 73, 74, 80, 85, 95, 110, 135, 141, 156, 167, 184, 219, 224, 229, 235, 280, 306, 315, 324, 337, 411, 420, 453, 471, 485, 522, 533, 552, 561, 628, 662, 704, 705, 711, 712], "_cached_fil": [0, 8, 704], "base": [0, 1, 6, 8, 9, 11, 12, 18, 25, 26, 31, 34, 35, 50, 55, 56, 71, 72, 73, 74, 147, 191, 197, 243, 247, 249, 253, 262, 265, 270, 273, 334, 491, 543, 570, 584, 598, 622, 677, 678, 679, 680, 681, 682, 683, 684, 685, 689, 690, 692, 696, 698, 699, 703, 704, 705, 706, 708, 710, 712, 713, 722, 723, 726, 727, 728, 730, 731, 732, 733, 734, 735, 736, 739, 746, 748, 752, 758, 761], "alreadi": [0, 1, 5, 8, 28, 39, 506, 704, 705, 706, 711, 712, 713, 726, 729, 730, 735, 739, 745, 746, 754, 756, 757, 760], "exist": [0, 1, 7, 8, 11, 16, 23, 39, 73, 74, 188, 192, 197, 198, 203, 208, 215, 253, 631, 686, 704, 705, 706, 707, 710, 711, 712, 726, 735, 746, 752, 762], "befor": [0, 1, 6, 8, 20, 25, 207, 245, 246, 247, 248, 251, 490, 690, 696, 704, 705, 706, 707, 710, 711, 712, 726, 736, 739, 745, 746, 752, 754, 756, 757, 760], "inform": [0, 1, 6, 7, 8, 11, 76, 437, 629, 704, 706, 713, 715, 726, 740, 746, 760], "yet": [0, 1, 260, 690, 704, 705, 706, 710, 711, 712, 736, 746], "point": [0, 1, 6, 33, 39, 243, 246, 265, 273, 438, 486, 685, 704, 705, 706, 711, 712, 713, 721, 723, 727, 728, 735, 752, 760], "yesterdai": 0, "8": [0, 1, 8, 46, 346, 686, 690, 703, 704, 706, 711, 713, 726, 730, 742, 745, 746, 748, 752, 754, 756, 758, 759, 760], "3": [0, 1, 8, 46, 246, 247, 248, 249, 251, 253, 257, 265, 515, 555, 557, 559, 605, 606, 663, 667, 686, 690, 695, 696, 700, 703, 704, 706, 707, 710, 711, 712, 713, 716, 718, 719, 720, 721, 722, 723, 724, 726, 730, 734, 735, 736, 739, 741, 742, 743, 745, 751, 752, 753, 754, 755, 756, 757, 759, 760], "qu60": 0, "qu90": 0, "qu120": [0, 607], "qu150": 0, "qu180": 0, "qu210": 0, "done": [0, 1, 21, 704, 711, 712, 760], "wa": [0, 1, 8, 37, 75, 76, 262, 690, 704, 705, 706, 707, 710, 711, 712, 713, 717, 739, 744, 746, 749, 760], "ocean_cached_fil": [0, 6], "graph": [0, 1, 20, 60, 61, 62, 245, 246, 247, 248, 251, 276, 277, 686, 690, 693, 695, 696, 697, 699, 703, 704, 711, 712, 713, 746], "back": [0, 7, 248, 698, 711, 712, 721, 751, 757, 760], "repo": [0, 1, 3, 6, 243, 685, 709, 711, 712], "commit": [0, 1, 705, 706], "master": [0, 7, 685, 706, 711, 712, 763], "pull": [0, 1, 7, 690, 705, 711, 712, 713, 716, 746], "request": [0, 1, 7, 61, 62, 678, 679, 690, 704, 705, 707, 711, 712, 713, 716, 745, 746, 754, 756, 757], "string": [0, 1, 6, 8, 12, 568, 582, 596, 620, 704], "end": [0, 1, 246, 247, 249, 251, 257, 351, 354, 356, 358, 360, 362, 421, 686, 690, 693, 696, 704, 705, 706, 708, 711, 726, 744, 745], "desir": [0, 1, 8, 76, 256, 265, 690, 704, 706, 711, 712, 713, 746, 760], "lean": 0, "heavili": [0, 1], "assumpt": 0, "part": [0, 1, 4, 6, 7, 8, 11, 26, 83, 88, 100, 115, 136, 151, 165, 172, 230, 240, 244, 276, 277, 288, 309, 318, 331, 364, 376, 416, 431, 458, 466, 474, 487, 499, 527, 540, 555, 567, 581, 595, 619, 643, 667, 696, 699, 703, 704, 705, 706, 709, 710, 711, 712, 716, 722, 730, 739, 746, 749], "nevertheless": 0, "were": [0, 1, 262, 507, 704, 705, 708, 710, 711, 712, 713, 733, 739], "necessari": [0, 7, 704, 711, 712, 726, 748], "make": [0, 5, 6, 12, 13, 36, 45, 46, 48, 60, 76, 243, 258, 259, 260, 261, 262, 263, 276, 282, 294, 303, 338, 346, 405, 408, 455, 463, 677, 683, 684, 685, 686, 690, 693, 695, 696, 697, 704, 705, 706, 708, 713, 718, 719, 720, 722, 723, 724, 730, 731, 732, 733, 734, 735, 736, 737, 742, 745, 746, 748, 749, 752, 760, 762], "symlink": [0, 1, 6, 11, 12, 486, 690, 705, 706, 711, 712, 746], "locat": [0, 1, 6, 8, 26, 71, 72, 74, 243, 265, 276, 424, 437, 507, 685, 692, 693, 696, 698, 704, 706, 708, 711, 713, 726, 735, 739, 742, 745, 748, 751, 754, 758, 760], "uncach": [0, 34], "group": [0, 8, 9, 10, 11, 26, 31, 32, 80, 81, 85, 86, 95, 96, 98, 105, 110, 111, 113, 120, 125, 130, 135, 141, 142, 144, 149, 154, 156, 157, 161, 163, 167, 168, 170, 177, 179, 184, 185, 204, 212, 219, 222, 224, 227, 229, 233, 235, 236, 238, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 265, 280, 282, 285, 288, 294, 297, 300, 303, 306, 307, 315, 316, 324, 325, 337, 338, 343, 346, 349, 351, 367, 370, 379, 384, 387, 392, 397, 402, 405, 408, 411, 412, 420, 428, 434, 448, 453, 455, 463, 471, 472, 474, 478, 479, 481, 485, 494, 522, 523, 525, 531, 533, 536, 544, 552, 559, 561, 562, 576, 590, 605, 607, 610, 614, 628, 640, 646, 659, 662, 663, 672, 685, 686, 687, 688, 689, 690, 691, 692, 693, 695, 696, 697, 698, 699, 700, 701, 702, 703, 708, 709, 713, 715, 717, 718, 719, 720, 721, 722, 723, 724, 726, 727, 728, 729, 730, 731, 732, 734, 735, 736, 738, 739, 740, 742, 743, 744, 745, 746, 747, 748, 749, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762], "public_html": [0, 1, 731, 732, 735], "mpas_standalonedata": [0, 1, 8, 704, 713, 731, 732, 733, 734, 735, 736, 760], "constructor": [0, 8, 246, 686, 688, 690, 695, 697, 711, 712], "construct": [0, 1, 79, 245, 246, 247, 248, 251, 266, 675, 677, 678, 679, 683, 684, 690, 704, 711, 712, 746], "quwisc240": [0, 1, 704, 705, 760, 762], "ssh_adjust": [0, 1, 685, 690, 704, 713, 749, 752], "ec30to60": [0, 1, 760, 762], "wc14": [0, 760, 762], "ecwisc30to60": [0, 1, 382, 760, 762], "sowisc12to60": [0, 704, 760, 762], "togeth": [0, 704, 708, 710, 711, 762], "performance_test": [0, 1, 704, 741, 762], "global": [0, 8, 31, 265, 270, 273, 274, 324, 325, 337, 338, 343, 346, 349, 351, 364, 367, 370, 379, 384, 387, 392, 397, 402, 405, 408, 434, 448, 536, 544, 562, 573, 576, 587, 590, 601, 614, 625, 646, 659, 689, 690, 692, 700, 701, 704, 709, 710, 713, 734, 736, 746, 748, 755, 758, 759, 760], "ran": [0, 1, 712], "successfulli": [0, 1, 244, 338], "bit": [0, 1, 157, 250, 704, 705, 708, 712, 716, 718, 719, 720, 722, 723, 724, 730, 737, 741, 742, 749, 760], "nightli": [0, 1, 3, 706, 746, 750, 760, 762], "cosine_bell_cached_init": [0, 760, 762], "fro": 0, "resolut": [0, 8, 44, 47, 51, 52, 86, 90, 92, 96, 98, 100, 103, 105, 107, 120, 144, 146, 157, 159, 163, 165, 220, 225, 246, 247, 249, 250, 251, 254, 255, 257, 274, 281, 282, 285, 288, 291, 294, 297, 300, 303, 307, 309, 316, 318, 325, 328, 329, 331, 382, 390, 395, 451, 454, 455, 458, 461, 463, 478, 479, 487, 492, 494, 497, 499, 502, 504, 523, 527, 529, 531, 534, 536, 540, 547, 548, 550, 553, 555, 557, 559, 562, 565, 567, 571, 573, 576, 579, 581, 585, 587, 590, 593, 595, 599, 601, 606, 607, 611, 612, 614, 617, 619, 623, 625, 663, 666, 667, 670, 672, 686, 687, 688, 689, 690, 691, 692, 693, 695, 696, 697, 698, 699, 700, 701, 703, 704, 710, 713, 716, 718, 719, 720, 721, 722, 723, 724, 726, 727, 728, 729, 730, 737, 742, 743, 744, 746, 747, 748, 749, 751, 752, 753, 755, 758, 759, 761], "remain": [0, 1, 490, 696, 710, 720, 737, 749, 752], "mention": [0, 1, 705], "40c": 0, "41c": 0, "42": [0, 1], "60c": 0, "61c": 0, "62": 0, "80c": 0, "81c": 0, "82": 0, "85c": 0, "86c": 0, "87": 0, "95c": 0, "96c": 0, "97": 0, "sere": 0, "expect": [0, 1, 3, 8, 157, 250, 265, 349, 568, 582, 596, 620, 690, 696, 704, 706, 709, 711, 716, 737, 738, 741, 746, 750, 756, 759], "basenam": 0, "extens": [0, 508, 712, 713], "altern": [0, 1, 6, 8, 711, 760], "No": [0, 1, 8, 709], "perform": [0, 1, 3, 6, 8, 19, 20, 22, 30, 44, 75, 76, 82, 83, 86, 88, 96, 98, 100, 102, 105, 111, 113, 115, 117, 120, 136, 138, 142, 149, 151, 153, 154, 157, 158, 163, 164, 165, 168, 170, 172, 174, 177, 230, 232, 236, 238, 240, 242, 245, 246, 247, 249, 250, 251, 253, 256, 257, 265, 268, 285, 288, 290, 293, 297, 302, 309, 318, 324, 331, 337, 338, 346, 349, 351, 364, 384, 387, 392, 397, 402, 405, 408, 412, 416, 428, 431, 455, 458, 460, 468, 474, 478, 487, 527, 540, 555, 559, 560, 567, 581, 595, 619, 635, 640, 643, 663, 667, 669, 672, 685, 686, 687, 688, 689, 690, 693, 695, 696, 697, 698, 700, 701, 702, 703, 704, 708, 709, 710, 711, 712, 713, 719, 720, 721, 722, 724, 726, 730, 735, 737, 741, 742, 743, 744, 746, 748, 749, 751, 753, 755, 756, 757, 758, 759, 762], "ensur": [0, 1, 3, 8, 36, 245, 246, 247, 249, 250, 251, 257, 686, 690, 693, 699, 703, 704, 705, 706, 712, 716, 741, 746], "don": [0, 1, 7, 8, 704, 705, 706, 710, 711, 712, 733, 734, 746, 761], "forese": 0, "problem": [0, 1, 8, 244, 704, 707, 711, 716, 741], "requr": 0, "howev": [0, 1, 704, 710, 737, 746], "relax": [0, 719], "outlin": 0, "author": [1, 690, 713, 746, 748, 758], "2020": [1, 691, 746, 747, 752], "11": [1, 8, 46, 277, 755, 759], "16": [1, 690, 704, 711, 712, 713, 723, 730, 746, 754, 755, 756, 760], "infrastructur": [1, 705, 746], "serv": [1, 71, 72, 73, 74, 687, 688, 704, 711], "u": [1, 690, 704, 712, 734, 735, 736, 746], "well": [1, 3, 8, 245, 246, 247, 249, 251, 257, 265, 313, 322, 351, 680, 686, 687, 688, 690, 693, 695, 696, 697, 703, 704, 708, 710, 711, 712, 713, 716, 717, 726, 741, 744, 758, 760, 761], "sever": [1, 8, 247, 248, 251, 512, 520, 690, 692, 699, 703, 704, 705, 706, 708, 711, 712, 716, 740, 741, 746, 752, 760, 762], "shortcom": 1, "emerg": 1, "over": [1, 6, 8, 36, 157, 262, 491, 494, 609, 696, 704, 705, 709, 710, 711, 712, 717, 735, 737, 739, 742, 746, 748, 749, 751, 752, 755, 756, 759, 760], "year": [1, 245, 246, 247, 248, 251, 256, 494, 555, 559, 663, 667, 690, 709, 719, 720, 721, 722, 723, 724, 726, 729, 746, 752, 755], "found": [1, 8, 690, 704, 705, 706, 709, 711, 712, 713, 731, 732, 733, 734, 735, 736, 737, 760], "current": [1, 3, 6, 8, 11, 21, 75, 76, 243, 262, 265, 685, 689, 690, 696, 698, 699, 703, 704, 705, 706, 708, 709, 711, 712, 713, 716, 717, 723, 735, 737, 739, 740, 741, 742, 745, 746, 748, 749, 752, 754, 758, 759, 760, 761, 762], "system": [1, 5, 6, 11, 21, 64, 66, 67, 83, 88, 100, 115, 136, 151, 165, 172, 230, 240, 258, 259, 260, 261, 262, 288, 309, 318, 364, 458, 466, 474, 527, 704, 707, 709, 711, 712, 713, 726, 731, 732, 733, 734, 735, 736, 748, 758, 760], "xml": [1, 704, 705, 708, 709, 712], "pars": [1, 8, 14, 15, 17, 704, 705, 710], "script": [1, 5, 6, 8, 33, 73, 245, 246, 247, 248, 251, 262, 263, 705, 708, 709, 712, 713, 719, 734, 735, 752], "stream": [1, 7, 8, 11, 17, 22, 25, 62, 83, 88, 100, 102, 115, 117, 138, 151, 153, 165, 172, 174, 230, 232, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 256, 257, 290, 293, 302, 460, 468, 669, 685, 686, 687, 688, 690, 693, 695, 696, 697, 699, 703, 705, 709, 713, 746], "intuit": 1, "second": [1, 8, 83, 88, 100, 115, 151, 165, 172, 230, 240, 703, 704, 705, 711, 712, 717, 719, 720, 722, 724, 730, 742, 744, 746, 749, 752, 756, 757], "lend": 1, "themselv": [1, 696, 704, 705, 709, 712, 746], "reus": [1, 704, 705, 709, 711, 712], "lead": [1, 265, 752], "config": [1, 6, 7, 11, 12, 25, 26, 28, 37, 50, 52, 55, 61, 62, 64, 65, 66, 67, 68, 71, 72, 74, 76, 94, 109, 124, 183, 188, 202, 203, 243, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 262, 265, 279, 281, 326, 334, 364, 375, 379, 400, 401, 454, 537, 541, 543, 545, 563, 570, 577, 584, 591, 598, 615, 622, 651, 666, 675, 677, 678, 679, 683, 684, 685, 686, 687, 688, 689, 690, 691, 693, 695, 696, 697, 698, 699, 700, 701, 703, 704, 705, 706, 707, 709, 710, 729, 739, 760, 761], "third": [1, 712, 717, 752], "edit": [1, 6, 7, 76, 706, 711, 712, 746, 752, 760], "step": [1, 2, 6, 7, 8, 26, 27, 29, 34, 44, 49, 51, 54, 56, 57, 61, 62, 65, 66, 68, 69, 70, 71, 72, 76, 83, 84, 87, 88, 89, 90, 91, 92, 93, 94, 97, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 112, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 127, 128, 129, 132, 133, 134, 136, 137, 138, 139, 140, 143, 145, 146, 148, 150, 151, 152, 153, 155, 159, 160, 162, 165, 166, 169, 171, 172, 173, 174, 175, 176, 178, 180, 181, 182, 183, 188, 190, 194, 195, 196, 200, 201, 203, 206, 210, 211, 214, 217, 218, 220, 221, 223, 225, 226, 228, 230, 231, 232, 234, 237, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 265, 268, 270, 271, 273, 274, 275, 284, 287, 288, 289, 290, 291, 292, 293, 296, 299, 300, 301, 302, 305, 309, 310, 311, 312, 313, 314, 318, 319, 320, 321, 322, 323, 327, 328, 330, 331, 332, 333, 335, 336, 340, 345, 348, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 369, 372, 373, 374, 376, 377, 381, 382, 384, 386, 389, 390, 392, 394, 395, 397, 399, 400, 404, 407, 410, 414, 415, 416, 417, 418, 419, 421, 425, 430, 431, 432, 436, 437, 439, 440, 441, 443, 446, 450, 451, 457, 458, 459, 460, 461, 462, 465, 466, 467, 468, 469, 470, 474, 475, 476, 477, 479, 480, 483, 484, 487, 488, 492, 493, 496, 497, 498, 499, 500, 502, 503, 504, 505, 523, 524, 527, 528, 529, 530, 531, 532, 534, 535, 538, 539, 540, 541, 542, 546, 547, 549, 550, 551, 553, 554, 555, 556, 557, 558, 559, 564, 565, 566, 567, 568, 569, 571, 572, 573, 575, 578, 579, 580, 581, 582, 583, 585, 586, 587, 589, 592, 593, 594, 595, 596, 597, 599, 600, 601, 603, 605, 616, 617, 618, 619, 620, 621, 623, 624, 625, 627, 629, 634, 642, 643, 644, 648, 649, 650, 652, 655, 657, 658, 661, 665, 667, 668, 669, 670, 671, 674, 686, 687, 688, 689, 691, 692, 693, 695, 696, 697, 698, 699, 700, 701, 702, 703, 705, 706, 708, 709, 713, 717, 718, 719, 720, 721, 722, 723, 724, 726, 727, 728, 730, 734, 736, 739, 742, 743, 744, 749, 751, 752, 753, 755, 757, 759, 761, 762], "fourth": [1, 712, 722], "easili": [1, 711], "constrain": [1, 18, 265, 277], "us": [1, 6, 7, 8, 11, 12, 20, 21, 23, 25, 26, 29, 34, 37, 52, 60, 61, 64, 66, 69, 76, 80, 83, 87, 88, 96, 97, 98, 99, 100, 105, 106, 111, 112, 113, 114, 115, 121, 127, 132, 136, 142, 143, 145, 149, 150, 151, 154, 155, 157, 162, 163, 165, 169, 171, 172, 175, 178, 180, 188, 189, 192, 193, 198, 199, 203, 208, 209, 215, 216, 223, 228, 229, 230, 234, 235, 237, 239, 240, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 262, 265, 270, 273, 277, 284, 287, 288, 296, 299, 305, 309, 318, 322, 325, 327, 328, 338, 340, 343, 345, 346, 348, 349, 350, 351, 353, 354, 356, 358, 360, 362, 364, 367, 369, 370, 372, 373, 381, 384, 386, 387, 389, 392, 394, 397, 399, 402, 404, 405, 407, 408, 410, 430, 434, 436, 437, 440, 443, 450, 457, 458, 465, 466, 474, 486, 490, 496, 509, 511, 527, 538, 546, 555, 557, 559, 564, 568, 578, 582, 592, 596, 606, 613, 616, 620, 629, 642, 646, 648, 649, 652, 657, 661, 665, 674, 675, 677, 678, 679, 683, 684, 685, 686, 687, 688, 690, 692, 693, 695, 696, 697, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 716, 717, 718, 719, 720, 722, 723, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 739, 741, 742, 743, 744, 745, 746, 748, 749, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762], "hard": [1, 688, 705, 711, 712, 737], "fifth": [1, 755], "better": [1, 8, 262, 710, 760], "autom": [1, 248, 709], "sixth": 1, "impos": 1, "test_group": [1, 8, 9, 10, 11, 26, 81, 86, 96, 98, 105, 111, 113, 120, 125, 130, 142, 144, 149, 154, 157, 161, 163, 168, 170, 177, 179, 185, 204, 212, 222, 227, 233, 236, 238, 282, 285, 294, 297, 303, 307, 316, 325, 338, 343, 346, 349, 351, 367, 370, 379, 384, 387, 392, 397, 402, 405, 408, 412, 428, 434, 448, 455, 463, 472, 478, 481, 494, 525, 536, 544, 559, 562, 576, 590, 614, 640, 646, 659, 663, 672, 690, 704, 710, 711, 712], "resoltuion": 1, "test_cas": [1, 6, 8, 11, 31, 32, 44, 51, 56, 68, 71, 72, 75, 76, 83, 88, 90, 92, 100, 103, 107, 115, 118, 122, 128, 133, 136, 139, 146, 151, 159, 165, 172, 175, 181, 190, 196, 206, 214, 220, 225, 230, 240, 245, 246, 251, 270, 274, 288, 291, 300, 309, 311, 313, 318, 320, 322, 328, 331, 335, 342, 354, 356, 358, 360, 362, 364, 373, 376, 382, 390, 395, 414, 416, 418, 421, 431, 437, 440, 443, 451, 458, 461, 466, 469, 474, 476, 479, 483, 487, 492, 497, 499, 502, 504, 523, 527, 529, 531, 534, 540, 547, 550, 553, 555, 557, 565, 567, 571, 573, 579, 581, 585, 587, 593, 595, 599, 601, 617, 619, 623, 625, 629, 643, 649, 652, 657, 667, 670, 686, 690, 695, 704, 710, 711, 712, 713, 752, 760], "rigid": [1, 756], "applic": [1, 705, 746], "final": [1, 3, 7, 191, 245, 246, 248, 251, 265, 273, 349, 605, 686, 690, 693, 695, 696, 697, 699, 703, 704, 710, 711, 712, 717, 721, 723, 746, 748, 752, 757], "help": [1, 6, 704, 709, 711, 712, 715, 735, 740, 746], "either": [1, 6, 7, 8, 46, 246, 693, 704, 706, 708, 710, 711, 712, 713, 719, 720, 722, 723, 726, 739, 746, 760], "interest": [1, 711, 712, 746, 752], "address": [1, 713], "hope": [1, 705], "significantli": [1, 8, 703, 717, 739, 746, 752], "easier": [1, 704, 705, 706, 711, 712, 713, 746, 760, 762], "12": [1, 8, 46, 521, 687, 688, 690, 691, 700, 703, 719, 746, 753, 756], "luke": 1, "van": 1, "roekel": 1, "written": [1, 7, 8, 11, 26, 507, 519, 690, 704, 711, 756], "primarili": [1, 716], "model": [1, 3, 6, 11, 12, 13, 14, 15, 17, 71, 72, 74, 83, 88, 100, 115, 151, 165, 172, 179, 202, 212, 214, 230, 240, 243, 245, 246, 247, 248, 249, 251, 253, 257, 258, 259, 260, 261, 262, 263, 265, 268, 282, 294, 297, 303, 411, 412, 414, 416, 418, 463, 471, 478, 685, 686, 690, 691, 692, 695, 706, 707, 708, 709, 711, 712, 713, 715, 716, 718, 719, 721, 722, 723, 724, 725, 726, 727, 728, 730, 731, 732, 733, 734, 735, 736, 737, 740, 741, 742, 743, 744, 746, 747, 748, 749, 751, 752, 753, 755, 758, 759, 760], "get": [1, 7, 8, 11, 14, 15, 17, 26, 27, 46, 61, 63, 65, 69, 262, 332, 364, 375, 400, 401, 541, 651, 704, 705, 706, 708, 713, 726, 739, 760], "direct": [1, 8, 686, 687, 688, 693, 695, 697, 703, 704, 711, 734, 736, 742, 749, 751, 752, 759], "common": [1, 7, 8, 20, 26, 31, 246, 248, 249, 256, 257, 686, 687, 688, 693, 695, 696, 697, 704, 705, 707, 708, 713, 734, 735, 736, 760, 761, 762], "languag": [1, 613, 734, 736], "rather": [1, 3, 8, 11, 12, 36, 212, 214, 262, 686, 693, 704, 707, 711, 712, 737, 739, 746], "custom": [1, 6, 8, 35, 36, 37, 71, 72, 74, 243, 685, 704, 710, 712, 713, 734, 736, 760], "tag": [1, 704, 709], "importantli": 1, "possibl": [1, 3, 8, 47, 265, 690, 693, 704, 705, 710, 711, 712, 739, 746, 748], "balanc": [1, 190, 196, 253, 690, 693, 696, 726, 746, 749, 752], "readabl": [1, 705, 712], "reusabl": 1, "risk": [1, 706, 749], "redesign": 1, "difficult": [1, 262, 704, 705, 735, 737], "contribut": [1, 705], "go": [1, 8, 522, 523, 525, 527, 529, 531, 697, 704, 705, 706, 710, 711, 712, 734, 736, 746, 753], "best": [1, 704], "reusibl": 1, "In": [1, 3, 7, 8, 11, 246, 248, 253, 265, 343, 689, 690, 699, 704, 706, 709, 710, 711, 712, 713, 716, 726, 729, 730, 735, 737, 739, 746, 748, 749, 752, 755, 756, 757, 758, 759, 760, 761, 762], "extern": [1, 11, 243, 685, 704, 705, 713, 715, 740], "often": [1, 11, 704, 705, 708, 710, 711, 713, 761, 762], "mpas_tool": [1, 8, 245, 246, 247, 248, 251, 265, 686, 687, 688, 692, 693, 695, 696, 697, 700, 701, 703, 704, 705, 711, 712, 746], "outsid": [1, 144, 704, 723, 727, 728, 752], "prefer": [1, 3, 704, 711, 712, 713, 716], "itself": [1, 7, 8, 11, 256, 704, 710, 711, 712, 760], "attempt": [1, 262, 709, 735, 737], "led": [1, 705], "frequent": [1, 243, 685], "unintend": 1, "consequ": 1, "link": [1, 3, 7, 8, 12, 13, 39, 262, 613, 690, 693, 696, 704, 705, 706, 711, 712, 715, 735, 740, 746, 760], "chang": [1, 6, 8, 25, 51, 243, 265, 685, 696, 704, 705, 706, 708, 710, 711, 712, 713, 716, 720, 721, 734, 736, 737, 739, 741, 746, 749, 752, 753, 755, 756, 759, 760, 762], "one": [1, 3, 6, 7, 8, 12, 24, 26, 34, 35, 39, 62, 71, 72, 74, 76, 86, 96, 98, 111, 113, 142, 149, 157, 163, 168, 170, 238, 245, 246, 247, 249, 250, 251, 253, 257, 268, 281, 294, 338, 405, 463, 494, 685, 686, 687, 688, 690, 693, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 716, 717, 722, 726, 730, 734, 735, 736, 737, 739, 744, 745, 746, 748, 749, 752, 754, 755, 756, 757, 760, 761, 762], "sophist": [1, 704], "method": [1, 8, 9, 11, 19, 20, 26, 27, 28, 29, 30, 31, 36, 43, 44, 48, 51, 52, 53, 56, 57, 79, 80, 81, 82, 83, 85, 86, 87, 88, 90, 92, 95, 96, 97, 98, 99, 100, 103, 105, 106, 107, 110, 111, 112, 113, 114, 115, 118, 120, 121, 122, 125, 127, 128, 130, 132, 133, 135, 136, 139, 141, 142, 143, 144, 145, 146, 149, 150, 151, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 175, 177, 178, 179, 180, 181, 184, 185, 188, 190, 192, 196, 198, 203, 204, 206, 208, 212, 214, 215, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 233, 234, 235, 236, 237, 238, 239, 240, 244, 253, 265, 266, 270, 274, 277, 280, 282, 284, 285, 287, 288, 291, 294, 296, 297, 299, 300, 303, 305, 306, 307, 309, 311, 313, 315, 316, 318, 320, 322, 324, 325, 327, 328, 331, 335, 337, 338, 340, 343, 345, 346, 348, 349, 350, 351, 353, 354, 356, 358, 360, 362, 364, 367, 369, 370, 372, 373, 376, 379, 381, 382, 384, 386, 387, 389, 390, 392, 394, 395, 397, 399, 402, 404, 405, 407, 408, 410, 411, 412, 414, 416, 418, 420, 421, 428, 430, 431, 434, 436, 437, 440, 443, 448, 450, 451, 453, 455, 457, 458, 461, 463, 465, 466, 469, 471, 472, 474, 476, 478, 479, 481, 483, 485, 487, 492, 494, 496, 497, 499, 502, 504, 507, 519, 522, 523, 525, 527, 529, 531, 533, 534, 536, 538, 540, 544, 546, 547, 550, 552, 553, 555, 557, 559, 560, 561, 562, 564, 565, 567, 571, 573, 576, 578, 579, 581, 585, 587, 590, 592, 593, 595, 599, 601, 614, 616, 617, 619, 623, 625, 628, 629, 640, 642, 643, 646, 648, 649, 652, 657, 659, 661, 662, 663, 665, 667, 670, 672, 674, 690, 692, 704, 705, 710, 717, 726, 746], "beyond": [1, 699, 718], "isol": 1, "read": [1, 8, 9, 11, 14, 17, 26, 422, 423, 424, 491, 613, 633, 690, 704, 705, 711, 712, 748, 757], "larg": [1, 8, 265, 690, 693, 696, 704, 718, 731, 737, 746, 749, 756], "unavail": 1, "files_for_e3sm": [1, 8, 704, 713, 741], "dedic": 1, "again": [1, 6, 260, 265, 704, 706, 707, 710, 711, 712, 746, 760], "from": [1, 2, 3, 6, 7, 8, 9, 11, 12, 14, 17, 26, 28, 34, 35, 37, 39, 60, 61, 62, 66, 70, 72, 75, 76, 92, 94, 107, 109, 122, 124, 128, 133, 136, 175, 179, 181, 183, 188, 203, 245, 246, 247, 248, 249, 251, 253, 256, 257, 262, 265, 269, 270, 273, 288, 328, 349, 351, 354, 356, 358, 360, 362, 364, 375, 376, 384, 387, 392, 397, 400, 401, 422, 455, 466, 474, 486, 490, 491, 494, 497, 499, 502, 504, 507, 512, 519, 541, 547, 553, 565, 579, 593, 605, 606, 607, 613, 617, 629, 651, 681, 686, 687, 688, 689, 690, 691, 692, 693, 695, 696, 697, 698, 699, 700, 702, 703, 705, 707, 708, 709, 710, 711, 712, 713, 716, 719, 720, 721, 722, 723, 724, 726, 727, 728, 730, 731, 732, 733, 734, 736, 737, 739, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 754, 755, 756, 757, 758, 759, 760, 761, 762], "awkward": [1, 711], "involv": [1, 8, 76, 690, 704, 708, 757], "pio": [1, 24, 62, 686, 690, 693, 695, 696, 697, 699, 703, 704], "task": [1, 8, 11, 20, 21, 24, 61, 62, 66, 83, 88, 100, 115, 136, 151, 165, 172, 230, 240, 288, 309, 318, 364, 458, 466, 474, 527, 704, 705, 711, 712, 731, 732, 733, 734, 735, 736, 748], "node": [1, 8, 11, 21, 23, 24, 62, 64, 65, 66, 262, 705, 706, 713, 731, 732, 733, 734, 735, 736, 746, 760], "exacerb": 1, "even": [1, 8, 12, 36, 262, 704, 705, 706, 711, 712, 713, 726, 735, 746, 760], "processor": [1, 157, 690, 704, 712, 716, 718, 719, 742, 745, 754, 756], "overrid": [1, 6, 8, 19, 20, 22, 28, 30, 36, 48, 51, 52, 53, 82, 102, 117, 138, 153, 158, 164, 174, 232, 242, 290, 293, 302, 460, 468, 560, 669, 704, 705, 712, 713, 736, 760], "stride": [1, 24, 62, 704], "updat": [1, 6, 7, 11, 14, 20, 21, 23, 25, 243, 248, 260, 265, 276, 486, 539, 541, 685, 686, 687, 690, 692, 693, 695, 696, 697, 699, 703, 707, 709, 710, 711, 746, 748, 752, 760], "automat": [1, 7, 8, 690, 704, 705, 706, 711, 712, 713, 726, 731, 732, 733, 734, 735, 736, 746, 760], "accommod": [1, 11, 21, 66, 696, 711], "dataset": [1, 267, 370, 373, 490, 507, 519, 605, 610, 677, 683, 684, 704, 711, 712, 746], "load": [1, 262, 263, 276, 706, 711, 712, 713, 731, 732, 733, 734, 735, 736, 757, 758, 760], "conda": [1, 5, 6, 8, 68, 243, 258, 259, 260, 261, 262, 685, 690, 704, 705, 709, 711, 712, 713, 731, 732, 733, 734, 736], "environ": [1, 5, 6, 64, 243, 258, 259, 260, 261, 262, 685, 690, 704, 705, 709, 711, 712, 713, 731, 732, 733, 734, 735, 736, 746], "per": [1, 8, 11, 21, 24, 62, 66, 207, 408, 704, 713, 726, 731, 732, 733, 734, 735, 736, 742, 744, 745, 752, 754, 756, 760], "advantag": [1, 8, 262, 690, 705, 735], "aspect": [1, 744], "unnecessarili": 1, "redund": [1, 6, 677, 683, 684, 743], "converg": [1, 80, 81, 83, 244, 523, 534, 536, 540, 547, 550, 604, 606, 607, 612, 689, 698, 700, 701, 704, 709, 710, 716, 717, 745, 753, 754, 757], "sort": [1, 704], "anoth": [1, 3, 6, 7, 8, 12, 75, 76, 248, 268, 685, 688, 693, 696, 704, 705, 706, 708, 710, 711, 712, 713, 719, 721, 724, 737, 742, 746, 749, 751, 752, 760, 761, 762], "properti": [1, 8, 704, 712, 735, 745, 754], "besid": [1, 712], "uniqu": [1, 704, 705, 710, 711, 712], "overwrit": [1, 39, 508, 521], "activ": [1, 262, 552, 690, 699, 734, 735, 736, 746, 752, 755, 760], "build": [1, 6, 8, 48, 53, 185, 188, 192, 198, 203, 204, 208, 212, 215, 243, 249, 256, 257, 258, 259, 260, 261, 262, 263, 685, 689, 700, 701, 704, 705, 707, 709, 711, 712, 713, 719, 722, 726, 730, 731, 732, 733, 734, 735, 736], "queu": [1, 64], "10": [1, 8, 46, 246, 247, 248, 250, 251, 254, 265, 277, 494, 685, 686, 687, 690, 691, 693, 695, 696, 697, 703, 704, 711, 712, 713, 719, 720, 722, 723, 724, 727, 728, 730, 739, 742, 744, 746, 748, 749, 751, 752, 753, 759, 761], "matt": 1, "hoffman": [1, 715], "longer": [1, 294, 463, 686, 690, 695, 696, 711, 720, 742, 745, 746, 749, 752, 754, 755, 759, 762], "term": [1, 11, 697, 708, 709, 710, 711, 712, 753], "ot": [1, 7, 711], "add": [1, 3, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 27, 28, 32, 50, 55, 59, 249, 265, 273, 277, 400, 690, 704, 705, 706, 708, 710, 711, 712, 713, 719, 735, 736, 745, 746, 752, 754, 756, 757, 760], "reduc": [1, 265, 494, 704, 737, 749], "wall": [1, 759, 760], "clock": [1, 760], "differ": [1, 8, 36, 48, 53, 76, 236, 243, 244, 246, 247, 249, 250, 251, 257, 262, 288, 297, 474, 478, 606, 685, 686, 687, 688, 690, 692, 695, 697, 703, 704, 705, 706, 708, 710, 711, 712, 713, 716, 717, 718, 723, 726, 729, 730, 734, 736, 741, 742, 744, 745, 746, 751, 752, 753, 754, 755, 756, 757, 759], "viscos": [1, 288, 297, 300, 412, 474, 478, 479, 686, 687, 691, 693, 695, 704, 705, 711, 712, 742, 747, 751], "baroclin": [1, 31, 280, 281, 282, 285, 288, 291, 294, 297, 300, 303, 373, 686, 704, 711, 712, 742], "channel": [1, 31, 280, 282, 285, 288, 291, 294, 297, 300, 303, 373, 688, 704, 707, 711, 712, 735, 742, 744, 760], "rpe": [1, 297, 300, 478, 479, 704, 711, 742, 751], "full": [1, 8, 11, 70, 98, 113, 149, 163, 170, 238, 250, 494, 511, 678, 679, 686, 689, 690, 693, 698, 704, 706, 709, 711, 712, 719, 720, 722, 723, 724, 730, 735, 739, 742, 745, 746, 748, 749, 751, 752, 753, 754, 756, 758, 759, 760], "choic": [1, 690, 710, 717], "mind": [1, 3, 6], "addit": [1, 3, 7, 8, 11, 23, 273, 690, 704, 705, 706, 711, 712, 715, 716, 721, 723, 726, 729, 730, 741, 746, 752], "minim": [1, 687, 719], "modif": [1, 3, 7, 248, 704, 712], "particularli": [1, 8, 704, 707, 710, 711, 746, 749], "mark": [1, 706], "petersen": [1, 706, 711, 742, 751], "build_base_mesh": 1, "py": [1, 8, 38, 43, 245, 246, 247, 248, 251, 262, 704, 705, 706, 708, 709, 710, 711, 712, 713], "complex": [1, 8, 52, 704, 705, 712, 737], "dx": 1, "min": [1, 704, 711, 722, 723, 727, 728, 730, 742, 749, 751, 753, 759], "max": [1, 704, 710, 711, 722, 723, 727, 728, 730, 745], "linear": [1, 277, 511, 696, 703, 711, 742, 744, 751, 755, 756, 759], "log": [1, 11, 26, 61, 66, 76, 94, 109, 124, 183, 188, 203, 273, 277, 511, 704, 706, 709, 712, 756, 757, 760], "someth": [1, 6, 7, 706], "fundament": [1, 704], "soft": [1, 731, 732, 735, 760], "add_initial_condit": 1, "quickli": [1, 8, 718, 749], "iter": [1, 265, 268, 376, 455, 466, 499, 685, 693, 696, 713, 737, 746, 749, 752], "until": [1, 177, 704, 705], "peopl": [1, 713], "workflow": [1, 704, 706], "ideal": [1, 11, 21, 66, 83, 88, 100, 115, 136, 151, 165, 172, 230, 240, 288, 309, 318, 364, 458, 466, 474, 527, 703, 704, 705, 709, 710, 711, 713, 729, 737, 752, 755, 759, 761], "possibli": [1, 8, 248, 704, 706, 711, 712], "cach": [1, 2, 9, 11, 12, 71, 72, 709, 713, 726, 735, 760, 762], "version": [1, 6, 8, 36, 68, 75, 76, 243, 629, 685, 686, 690, 696, 704, 705, 706, 708, 711, 712, 713, 719, 722, 723, 729, 730, 734, 735, 736, 740, 742, 743, 744, 746, 751, 752, 753, 755, 758, 759, 760], "submit": [1, 735], "job": [1, 64, 262, 709, 716, 731, 732, 733, 734, 736, 752], "13": [1, 8, 46, 711, 742, 746, 751], "write": [1, 8, 14, 15, 17, 23, 24, 25, 265, 279, 447, 491, 637, 638, 656, 676, 690, 691, 696, 703, 704, 706, 711, 712], "function": [1, 7, 8, 22, 45, 52, 61, 102, 117, 138, 147, 153, 157, 174, 187, 189, 202, 208, 232, 242, 245, 246, 247, 248, 249, 251, 253, 257, 262, 265, 290, 293, 302, 341, 427, 460, 468, 568, 582, 596, 604, 605, 609, 620, 639, 669, 690, 692, 696, 701, 704, 705, 709, 710, 711, 712, 722, 723, 727, 728, 730, 741, 745, 746, 748, 751, 754, 756, 757, 759, 761], "class": [1, 8, 9, 11, 19, 26, 31, 36, 43, 44, 51, 56, 79, 80, 81, 83, 85, 86, 88, 90, 92, 95, 96, 98, 100, 103, 105, 107, 110, 111, 113, 115, 118, 120, 122, 125, 128, 130, 133, 135, 136, 139, 141, 142, 144, 146, 149, 151, 154, 156, 157, 159, 161, 163, 165, 167, 168, 170, 172, 175, 177, 179, 181, 184, 185, 190, 196, 204, 206, 212, 214, 219, 220, 222, 224, 225, 227, 229, 230, 233, 235, 236, 238, 240, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 255, 256, 257, 265, 266, 270, 274, 280, 282, 285, 288, 291, 294, 297, 300, 303, 306, 307, 309, 311, 313, 315, 316, 318, 320, 322, 324, 325, 328, 331, 335, 337, 338, 343, 346, 349, 351, 354, 356, 358, 360, 362, 364, 367, 370, 373, 376, 379, 382, 384, 387, 390, 392, 395, 397, 402, 405, 408, 411, 412, 414, 416, 418, 420, 421, 428, 431, 434, 437, 440, 443, 448, 451, 453, 455, 458, 461, 463, 466, 469, 471, 472, 474, 476, 478, 479, 481, 483, 485, 487, 492, 494, 497, 499, 502, 504, 507, 519, 522, 523, 525, 527, 529, 531, 533, 534, 536, 540, 544, 547, 550, 552, 553, 555, 557, 559, 561, 562, 565, 567, 571, 573, 576, 579, 581, 585, 587, 590, 593, 595, 599, 601, 614, 617, 619, 623, 625, 628, 629, 640, 643, 646, 649, 652, 657, 659, 662, 663, 667, 670, 672, 685, 686, 687, 688, 689, 691, 692, 693, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 710, 711, 712], "larger": [1, 244, 723, 727, 728], "descend": [1, 265, 690, 704, 705, 711, 712], "testcas": [1, 6, 8, 11, 32, 44, 51, 56, 71, 72, 75, 76, 83, 88, 90, 92, 100, 103, 107, 115, 118, 128, 133, 136, 139, 146, 151, 159, 165, 172, 175, 181, 220, 225, 230, 240, 274, 288, 291, 300, 309, 313, 318, 322, 333, 336, 342, 355, 357, 359, 361, 363, 364, 365, 374, 377, 382, 390, 395, 432, 439, 441, 451, 458, 461, 466, 469, 474, 476, 479, 483, 487, 492, 497, 499, 502, 504, 523, 527, 529, 531, 534, 542, 547, 550, 555, 557, 569, 572, 583, 586, 597, 600, 621, 624, 644, 650, 667, 670, 690, 703, 705, 710, 711, 712, 713, 726, 742, 746, 748, 749, 751, 753, 755, 758, 759, 760], "equival": [1, 704, 706, 712, 726, 731], "config_driv": [1, 712], "config_": [1, 712], "collect": [1, 7, 8, 31, 63, 79, 266, 606, 704, 708, 711, 712, 716], "struck": 1, "improv": [1, 690, 746], "jinja2": [1, 17, 25, 690, 704], "templat": [1, 2, 17, 25, 244, 265, 690, 696, 709, 712, 713], "manipul": [1, 705], "usr": [1, 43], "bin": [1, 706, 734, 736, 760], "env": [1, 706, 734, 736], "pickl": [1, 6, 8, 760], "configpars": [1, 8, 66, 704, 710, 711], "loggingcontext": [1, 8], "def": [1, 3, 7, 8, 690, 704, 705, 710, 711, 712], "main": [1, 4, 8, 19, 262, 690, 704, 705, 706, 711, 712, 716, 741, 746, 761], "open": [1, 5, 273, 491, 696, 711, 712, 746, 752], "test_case_": 1, "rb": 1, "handl": [1, 8, 244, 490, 696, 704, 711, 712, 735, 745, 754, 756], "steps_to_run": [1, 6, 8, 26, 70, 76, 704, 710, 713], "new_step_log_fil": [1, 26], "interpol": [1, 185, 188, 203, 204, 212, 267, 270, 443, 444, 445, 490, 497, 553, 652, 653, 654, 692, 696, 702, 710, 711, 713, 726, 749, 752, 757], "extendedinterpol": [1, 710], "config_filenam": [1, 11, 26, 704], "stdout": [1, 6, 8, 11, 26, 273, 704, 712], "stderr": [1, 8, 11, 26, 704], "test_nam": 1, "replac": [1, 7, 8, 14, 15, 17, 23, 25, 26, 38, 39, 491, 690, 704, 705, 710, 711, 712, 713, 746, 760], "_": [1, 690, 704, 706, 711, 726], "logger": [1, 8, 11, 26, 43, 61, 66, 94, 109, 124, 183, 188, 203, 273, 699, 703, 704, 711, 712], "__name__": 1, "__main__": 1, "curli": 1, "brace": 1, "element": [1, 677, 683, 684], "variabl": [1, 3, 6, 9, 11, 26, 30, 31, 44, 51, 56, 60, 64, 75, 76, 81, 82, 83, 86, 88, 90, 92, 96, 98, 100, 103, 105, 107, 115, 136, 146, 151, 157, 158, 159, 163, 164, 165, 175, 185, 193, 199, 204, 207, 208, 209, 212, 214, 216, 220, 225, 230, 240, 246, 249, 250, 253, 254, 255, 257, 262, 265, 268, 270, 274, 282, 285, 288, 291, 294, 297, 300, 303, 307, 316, 322, 325, 328, 331, 338, 349, 351, 354, 362, 364, 367, 370, 373, 379, 384, 392, 397, 413, 421, 428, 431, 434, 437, 440, 443, 455, 458, 461, 463, 473, 479, 482, 487, 492, 494, 497, 502, 504, 507, 509, 511, 512, 519, 520, 523, 526, 527, 529, 531, 534, 536, 540, 548, 553, 555, 557, 559, 560, 562, 565, 567, 573, 576, 579, 581, 587, 590, 593, 595, 601, 614, 617, 619, 625, 629, 640, 643, 646, 649, 652, 657, 663, 667, 670, 672, 677, 683, 684, 690, 693, 696, 697, 699, 703, 704, 705, 706, 707, 711, 712, 715, 716, 719, 720, 722, 723, 724, 726, 727, 728, 730, 731, 732, 733, 734, 735, 736, 737, 740, 741, 742, 746, 749, 751, 752, 753, 755, 759, 760], "valu": [1, 7, 8, 15, 23, 76, 81, 83, 157, 165, 244, 265, 277, 297, 318, 478, 507, 509, 510, 511, 514, 515, 604, 605, 606, 607, 611, 612, 686, 688, 690, 695, 696, 699, 702, 703, 704, 705, 709, 710, 711, 712, 713, 717, 722, 723, 726, 727, 728, 730, 739, 742, 744, 746, 747, 748, 751, 752, 753, 755, 756, 757, 758, 759], "content": [1, 6, 8, 704, 705, 711, 712, 760], "normal": [1, 704, 706, 735, 752], "contrast": [1, 8, 710, 737, 746, 755], "seri": [1, 80, 81, 244, 265, 268, 300, 479, 507, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 689, 690, 696, 698, 700, 701, 704, 709, 711, 716, 717, 723, 741, 743, 749, 752], "format": [1, 7, 8, 253, 421, 458, 568, 582, 596, 611, 620, 667, 670, 672, 690, 693, 696, 699, 703, 704, 705, 710, 711, 712, 713, 741, 744, 746, 749, 752, 756], "statement": [1, 3, 8, 704, 708, 712], "syntax": [1, 3, 705, 712], "immutable_stream": [1, 690, 704, 711, 712], "filename_templ": [1, 690, 704, 711, 712], "restart": [1, 26, 98, 113, 136, 149, 163, 170, 238, 244, 245, 246, 247, 248, 249, 250, 251, 256, 257, 294, 349, 351, 354, 356, 358, 360, 362, 384, 392, 397, 401, 405, 463, 686, 688, 690, 693, 695, 696, 697, 704, 705, 708, 711, 716, 719, 720, 722, 723, 724, 730, 741, 742, 746, 749], "type": [1, 7, 90, 92, 96, 98, 100, 103, 105, 107, 120, 144, 146, 157, 159, 163, 165, 175, 220, 225, 265, 277, 316, 454, 455, 463, 492, 494, 688, 690, 699, 703, 704, 705, 707, 708, 710, 711, 712, 713, 719, 724, 742, 744, 745, 746, 749, 751, 752, 753, 754, 758, 759, 762], "output_interv": [1, 690, 704, 711, 712], "0000_00": [1, 703, 704, 711, 712], "00": [1, 8, 703, 704, 711, 712, 734, 736, 752, 760], "01": [1, 688, 703, 704, 711, 712, 744, 752], "clobber_mod": [1, 704, 711, 712], "truncat": [1, 701, 704, 711, 712, 757], "var_struct": [1, 704, 711], "tracer": [1, 265, 522, 561, 605, 610, 686, 689, 690, 695, 697, 698, 700, 704, 711, 745, 746, 753, 754, 756], "var": [1, 444, 447, 704, 711, 712], "xtime": [1, 447, 690, 704, 711, 712], "normalveloc": [1, 8, 245, 246, 249, 686, 690, 697, 704, 711, 712], "layerthick": [1, 8, 265, 677, 681, 682, 683, 684, 686, 690, 699, 703, 704, 711, 712], "basic": [1, 6, 7, 706, 713, 735, 760], "config_write_output_on_startup": [1, 704, 711], "config_run_dur": [1, 704, 711, 712], "15": [1, 8, 46, 248, 455, 686, 690, 691, 693, 695, 696, 704, 711, 712, 716, 720, 721, 742, 745, 747, 749, 751, 752, 754, 760], "config_use_mom_del2": [1, 704, 711], "config_implicit_bottom_drag_coeff": [1, 704, 711, 712], "1": [1, 6, 7, 8, 11, 46, 83, 88, 100, 115, 136, 151, 165, 172, 230, 240, 245, 246, 247, 248, 249, 250, 251, 254, 256, 257, 265, 269, 273, 282, 288, 303, 309, 318, 408, 458, 466, 474, 491, 494, 527, 567, 581, 595, 605, 619, 677, 683, 684, 686, 687, 688, 690, 691, 695, 696, 699, 703, 704, 707, 710, 711, 712, 713, 717, 718, 719, 720, 722, 723, 724, 726, 727, 728, 730, 734, 735, 736, 737, 739, 742, 743, 744, 745, 746, 747, 748, 749, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 763], "0e": [1, 704, 711, 712], "2": [1, 3, 8, 246, 247, 248, 249, 251, 257, 263, 265, 303, 408, 606, 610, 686, 690, 691, 693, 697, 698, 703, 704, 710, 711, 712, 713, 716, 719, 720, 721, 722, 723, 724, 726, 727, 728, 730, 734, 735, 736, 739, 742, 744, 745, 746, 749, 751, 752, 753, 754, 756, 757, 759, 760], "config_use_cvmix_background": [1, 704, 711], "config_cvmix_background_diffus": [1, 704, 711], "0": [1, 3, 6, 7, 8, 46, 76, 248, 258, 259, 260, 261, 262, 263, 265, 269, 273, 277, 491, 514, 515, 610, 677, 682, 683, 684, 688, 690, 693, 703, 704, 705, 707, 711, 712, 713, 715, 717, 718, 719, 720, 721, 722, 723, 724, 726, 727, 728, 730, 735, 736, 739, 740, 742, 743, 744, 745, 746, 747, 748, 749, 751, 752, 753, 754, 755, 756, 759, 760, 763], "config_cvmix_background_viscos": [1, 704, 711], "4": [1, 7, 8, 105, 177, 235, 245, 246, 247, 249, 251, 257, 282, 285, 346, 412, 686, 688, 690, 691, 693, 695, 697, 699, 700, 703, 704, 705, 709, 710, 711, 712, 713, 718, 719, 720, 722, 723, 724, 726, 728, 730, 735, 740, 741, 742, 744, 745, 746, 747, 749, 751, 752, 753, 754, 755, 756, 759, 760], "regard": [1, 3], "whole": [1, 26, 704, 705, 711, 749, 752, 760], "degre": [1, 45, 52, 53, 58, 383, 391, 396, 452, 574, 588, 602, 626, 690, 713, 742, 746, 749, 751, 752, 753], "left": [1, 6, 265, 711, 717, 739, 745, 753, 759], "across": [1, 7, 8, 157, 247, 265, 277, 686, 688, 693, 698, 704, 705, 708, 709, 711, 712, 738, 746], "increas": [1, 494, 606, 690, 705, 710, 717, 721, 752], "simpler": [1, 706, 711, 712, 737], "perhap": [1, 16, 704], "less": [1, 325, 328, 704, 717, 726, 739, 746], "creation": [1, 690, 713, 746], "comment": [1, 7, 704, 710, 713, 720], "certain": [1, 8, 36, 277, 421, 704, 706, 713, 757], "familiar": [1, 711, 712], "somewher": 1, "recommend": [1, 6, 7, 8, 704, 705, 706, 735], "With": [1, 706, 711, 712, 752], "essenti": [1, 6, 704], "inevit": 1, "minimum": [1, 8, 277, 490, 491, 509, 510, 511, 514, 515, 690, 704, 710, 711, 712, 713, 722, 723, 727, 728, 730, 739, 742, 743, 744, 745, 746, 748, 749, 751, 752, 753, 754, 756, 758, 759], "level": [1, 3, 8, 248, 265, 277, 400, 401, 454, 455, 463, 486, 492, 494, 605, 677, 678, 679, 680, 681, 682, 683, 684, 686, 690, 693, 696, 704, 705, 711, 712, 713, 718, 719, 720, 721, 722, 723, 724, 727, 728, 730, 742, 743, 744, 746, 747, 749, 751, 752, 753, 754, 759, 762], "learn": [1, 705], "curv": [1, 705, 755], "skill": [1, 705], "pai": 1, "off": [1, 6, 277, 687, 706, 707, 726, 729, 753], "cannot": [1, 8, 244, 704, 711], "organ": [1, 709], "greatli": 1, "simplifi": [1, 8, 693, 749], "cfg": [1, 8, 28, 704, 705, 706, 710, 711, 712, 713, 746, 752, 760], "mpas_core_framework_modul": 1, "mpas_core_framework_packag": 1, "shared_step": 1, "test_group_shared_modul": 1, "framework_modul": 1, "framework_packag": 1, "slightli": [1, 8, 704], "convent": [1, 690, 711, 712, 746], "mpascor": [1, 11, 26, 31, 63, 280, 306, 315, 337, 411, 453, 471, 522, 552, 662, 704, 705, 711, 712], "now": [1, 704, 706, 711, 712, 713, 735, 755], "dynam": [1, 265, 268, 324, 337, 349, 351, 354, 356, 358, 360, 362, 384, 387, 392, 397, 491, 685, 690, 693, 704, 708, 709, 713, 719, 737, 746, 749, 752, 755, 759, 761], "landic": [1, 4, 6, 8, 9, 12, 43, 73, 74, 78, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 704, 706, 708, 709, 711, 712, 713, 714, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 760, 761, 762], "testgroup": [1, 10, 11, 26, 704, 705, 711, 712], "legaci": [1, 6, 262, 265, 690, 704, 705, 708, 710, 711, 713, 715, 735, 740, 746, 750, 759, 763], "mismip3d": 1, "least": [1, 8, 704, 706, 746], "reason": [1, 20, 704, 705, 710, 711, 712, 746, 762], "next": [1, 7, 248, 704, 711, 712, 721, 726, 739, 746, 748, 749, 752, 760], "hierarchi": 1, "rel": [1, 3, 6, 8, 12, 16, 34, 35, 36, 71, 72, 74, 75, 76, 243, 246, 604, 605, 685, 704, 705, 706, 708, 711, 713, 742, 746, 749, 751, 752, 760, 761], "distinguish": [1, 490, 719, 721, 722, 724, 730, 742, 751], "variant": [1, 34, 245, 246, 247, 248, 251, 686, 687, 688, 690, 695, 696, 697, 699, 703, 704, 706, 711, 712, 717, 719, 720, 721, 722, 723, 724, 730, 735, 739, 742, 745, 746, 752, 755, 759], "vari": [1, 443, 487, 492, 494, 689, 690, 692, 696, 698, 700, 701, 704, 707, 710, 735, 739, 745, 746, 748, 749, 752, 754, 755], "characterist": 1, "base_mesh": [1, 8, 44, 51, 274, 382, 390, 395, 451, 704, 711], "refer": [1, 7, 11, 265, 269, 297, 478, 677, 680, 683, 684, 704, 705, 706, 708, 709, 710, 711, 712, 739, 742, 751, 759], "confus": [1, 6, 704, 705, 706, 709, 710, 711, 712], "tri": [1, 705], "clearer": 1, "distinct": [1, 705], "clean": [1, 3, 73, 704, 706, 709], "what": [1, 3, 8, 262, 690, 705, 711, 712, 734, 736, 760], "here": [1, 8, 244, 245, 246, 247, 249, 250, 251, 256, 257, 686, 687, 688, 690, 693, 695, 696, 697, 699, 703, 704, 705, 706, 710, 711, 712, 713, 720, 721, 724, 726, 731, 732, 733, 734, 735, 736, 746, 747, 756, 757, 760, 762], "combin": [1, 11, 12, 26, 36, 68, 94, 109, 124, 183, 206, 207, 208, 253, 265, 273, 699, 703, 704, 707, 710, 713, 716, 723, 726, 746, 760], "self": [1, 8, 28, 58, 245, 246, 251, 265, 443, 686, 690, 693, 695, 699, 703, 704, 705, 710, 711, 712, 713, 757, 758], "add_input_fil": [1, 8, 246, 704, 710, 711, 712], "run_model": [1, 8, 92, 107, 115, 181, 244, 245, 246, 699, 703, 704, 711, 712, 718, 719, 721, 722, 724, 730], "str": [1, 8, 9, 11, 12, 14, 15, 16, 17, 23, 24, 25, 26, 31, 34, 35, 37, 39, 40, 44, 51, 56, 60, 61, 62, 66, 68, 70, 71, 72, 73, 74, 75, 76, 81, 83, 86, 88, 90, 92, 94, 96, 98, 100, 103, 105, 107, 109, 115, 120, 136, 146, 151, 157, 159, 163, 165, 172, 181, 188, 189, 191, 192, 193, 197, 198, 199, 203, 207, 208, 209, 215, 216, 220, 225, 230, 240, 270, 273, 274, 276, 277, 278, 279, 281, 282, 285, 288, 291, 294, 297, 300, 303, 309, 316, 318, 322, 329, 331, 332, 335, 349, 351, 354, 356, 358, 360, 362, 364, 367, 370, 379, 382, 384, 390, 392, 395, 397, 400, 401, 421, 428, 431, 434, 437, 443, 448, 451, 454, 455, 458, 461, 463, 474, 479, 486, 487, 491, 492, 494, 507, 509, 511, 519, 523, 527, 529, 531, 536, 548, 553, 555, 557, 559, 607, 610, 611, 612, 613, 629, 643, 652, 659, 663, 666, 667, 670, 672, 676, 704, 710, 711, 712], "__init__": [1, 8, 9, 11, 26, 31, 36, 43, 44, 51, 56, 79, 80, 81, 83, 85, 86, 88, 90, 92, 95, 96, 98, 100, 103, 105, 107, 110, 111, 113, 115, 118, 120, 122, 125, 128, 130, 133, 135, 136, 139, 141, 142, 144, 146, 149, 151, 154, 156, 157, 159, 161, 163, 165, 167, 168, 170, 172, 175, 177, 179, 181, 184, 185, 190, 196, 204, 206, 212, 214, 219, 220, 222, 224, 225, 227, 229, 230, 233, 235, 236, 238, 240, 266, 270, 274, 280, 282, 285, 288, 291, 294, 297, 300, 303, 306, 307, 309, 311, 313, 315, 316, 318, 320, 322, 324, 325, 328, 331, 335, 337, 338, 343, 346, 349, 351, 354, 356, 358, 360, 362, 364, 367, 370, 373, 376, 379, 382, 384, 387, 390, 392, 395, 397, 402, 405, 408, 411, 412, 414, 416, 418, 420, 421, 428, 431, 434, 437, 440, 443, 448, 451, 453, 455, 458, 461, 463, 466, 469, 471, 472, 474, 476, 478, 479, 481, 483, 485, 487, 492, 494, 497, 499, 502, 504, 507, 519, 522, 523, 525, 527, 529, 531, 533, 534, 536, 540, 544, 547, 550, 552, 553, 555, 557, 559, 561, 562, 565, 567, 571, 573, 576, 579, 581, 585, 587, 590, 593, 595, 599, 601, 614, 617, 619, 623, 625, 628, 629, 640, 643, 646, 649, 652, 657, 659, 662, 663, 667, 670, 672, 690, 704, 705, 708, 710, 711, 712], "subdir": [1, 6, 11, 26, 44, 51, 56, 83, 88, 92, 100, 107, 115, 136, 151, 165, 172, 181, 230, 240, 270, 274, 288, 309, 318, 364, 382, 390, 395, 431, 451, 458, 474, 487, 527, 643, 667, 686, 695, 704, 710, 711, 712], "none": [1, 7, 8, 11, 12, 14, 15, 17, 21, 23, 24, 25, 26, 34, 35, 37, 40, 42, 44, 51, 56, 60, 62, 68, 70, 72, 73, 74, 75, 76, 83, 88, 92, 100, 107, 115, 136, 151, 157, 163, 165, 172, 181, 188, 190, 196, 203, 230, 240, 270, 273, 274, 277, 288, 309, 318, 322, 342, 364, 382, 390, 395, 431, 451, 458, 466, 474, 487, 494, 509, 510, 511, 519, 520, 521, 527, 643, 667, 704, 710, 711, 716, 717, 734, 739, 742, 749, 751, 752, 753, 754, 759], "min_cor": 1, "thread": [1, 8, 11, 20, 21, 26, 62, 66, 83, 88, 100, 115, 136, 151, 165, 172, 230, 240, 288, 303, 309, 318, 364, 408, 458, 466, 474, 527, 686, 690, 704, 708, 710, 711, 712, 713, 736, 741, 742, 746, 748, 758], "nu": [1, 288, 300, 474, 479, 686, 695, 704, 711, 712], "belong": [1, 8, 11, 21, 26, 31, 35, 44, 51, 56, 80, 81, 83, 85, 86, 88, 90, 92, 95, 96, 98, 100, 103, 105, 107, 110, 111, 113, 115, 118, 120, 122, 125, 128, 130, 133, 135, 136, 139, 141, 142, 144, 146, 149, 151, 154, 156, 157, 159, 161, 163, 165, 167, 168, 170, 172, 175, 177, 179, 181, 184, 185, 190, 196, 204, 206, 212, 214, 219, 220, 222, 224, 225, 227, 229, 230, 233, 235, 236, 238, 240, 270, 274, 280, 282, 285, 288, 291, 294, 297, 300, 303, 306, 307, 309, 311, 313, 315, 316, 318, 320, 322, 324, 325, 328, 331, 335, 337, 338, 343, 346, 349, 351, 354, 356, 358, 360, 362, 364, 367, 370, 373, 376, 379, 382, 384, 387, 390, 392, 395, 397, 402, 405, 408, 411, 412, 414, 416, 418, 420, 421, 428, 431, 434, 437, 440, 443, 448, 451, 453, 455, 458, 461, 463, 466, 469, 471, 472, 474, 476, 478, 479, 481, 483, 485, 487, 492, 494, 497, 499, 502, 504, 522, 523, 525, 527, 529, 531, 533, 534, 536, 540, 544, 547, 550, 552, 553, 555, 557, 559, 561, 562, 565, 567, 571, 573, 576, 579, 581, 585, 587, 590, 593, 595, 599, 601, 614, 617, 619, 623, 625, 628, 629, 640, 643, 646, 649, 652, 657, 659, 662, 663, 667, 670, 672, 690, 704, 705, 710, 711, 712, 762], "int": [1, 11, 18, 21, 35, 40, 44, 45, 46, 47, 48, 61, 65, 66, 83, 88, 100, 115, 136, 151, 165, 172, 188, 203, 230, 240, 268, 273, 277, 288, 309, 318, 325, 328, 329, 331, 364, 401, 443, 458, 466, 474, 527, 534, 536, 540, 547, 548, 550, 562, 565, 567, 571, 573, 576, 579, 581, 585, 587, 590, 593, 595, 599, 601, 605, 614, 617, 619, 623, 625, 690, 704, 710, 711], "fewer": [1, 11, 21, 66, 83, 88, 100, 115, 136, 151, 165, 172, 230, 240, 288, 309, 318, 364, 458, 466, 474, 527, 693, 704, 711, 749, 760], "below": [1, 6, 11, 21, 66, 83, 88, 100, 115, 136, 151, 165, 172, 230, 240, 248, 253, 262, 288, 309, 318, 364, 458, 466, 474, 490, 491, 492, 494, 527, 685, 690, 693, 704, 706, 710, 711, 712, 713, 715, 717, 722, 726, 730, 735, 737, 739, 745, 746, 748, 749, 752, 754, 756, 757, 758, 760], "fail": [1, 8, 11, 21, 26, 37, 76, 83, 88, 100, 115, 136, 151, 165, 172, 230, 240, 288, 309, 318, 364, 458, 466, 474, 527, 690, 704, 709, 711, 712, 713, 745, 746, 748, 754, 756, 758], "float": [1, 7, 8, 44, 46, 47, 51, 76, 83, 165, 269, 274, 277, 288, 300, 307, 316, 318, 322, 329, 382, 390, 395, 451, 474, 479, 487, 490, 491, 492, 494, 497, 499, 502, 504, 507, 509, 510, 511, 514, 515, 548, 686, 695, 696, 704, 711, 716, 718, 737], "super": [1, 690, 704, 705, 710, 711, 712], "add_namelist_fil": [1, 11, 690, 704, 711, 712], "baroclinic_channel": [1, 7, 8, 685, 694, 704, 705, 708, 711, 712, 740, 741, 750, 760, 761, 762], "config_mom_del2": [1, 686, 695, 704, 711], "add_namelist_opt": [1, 11, 693, 704, 711, 712], "add_streams_fil": [1, 11, 690, 693, 704, 711, 712], "add_output_fil": [1, 8, 690, 704, 711, 712], "add_model_as_input": [1, 8, 704, 711, 712], "popul": 1, "dure": [1, 8, 11, 23, 25, 26, 686, 687, 688, 690, 693, 695, 704, 705, 710, 713, 737, 746, 758, 759, 760, 761, 762], "phase": [1, 25, 248, 752, 758], "idea": [1, 8, 711, 712, 756], "runtim": [1, 8, 20, 23, 245, 246, 247, 248, 251, 693, 699, 703], "hopefulli": [1, 713], "tedium": 1, "later": [1, 8, 11, 21, 36, 76, 686, 695, 696, 704, 710, 711, 712, 713, 729, 746, 752], "order": [1, 6, 8, 690, 699, 701, 704, 706, 711, 712, 716, 726, 737, 746, 748, 752, 756, 757, 760], "top": [1, 265, 509, 677, 678, 679, 680, 681, 682, 683, 684, 693, 696, 704, 717, 737, 739, 751, 752], "partit": [1, 20, 60, 62, 245, 246, 247, 248, 251, 265, 276, 277, 686, 690, 693, 695, 696, 697, 699, 703, 704, 712, 713, 731, 732, 733, 734, 736, 746, 760], "execut": [1, 6, 8, 13, 61, 62, 71, 72, 74, 243, 685, 693, 696, 704, 706, 711, 712, 713, 731, 732, 733, 734, 735, 736, 760], "pass": [1, 6, 8, 26, 76, 690, 704, 705, 706, 708, 710, 711, 712, 716, 760], "directli": [1, 8, 11, 704, 705, 708, 709, 711, 712, 723, 746, 757, 758], "tread": 1, "maximum": [1, 8, 76, 277, 400, 509, 510, 511, 514, 515, 690, 713, 722, 723, 727, 728, 730, 739, 745, 746, 748, 754, 756, 758, 759], "memori": [1, 11, 21, 690, 704, 713, 746, 748, 757, 758], "amount": [1, 11, 21, 265, 690, 704, 705, 723, 727, 728, 738, 752], "disk": [1, 706, 713, 734, 736, 746], "workerqueu": 1, "explain": [1, 704, 705], "total": [1, 18, 65, 250, 520, 691, 693, 696, 704, 705, 717], "determin": [1, 8, 12, 20, 26, 62, 64, 147, 265, 686, 689, 690, 696, 698, 700, 704, 710, 711, 712, 716, 727, 728, 737, 739, 741, 742, 745, 746, 751, 752, 753, 754, 756, 758], "slurm": [1, 64, 67, 709, 713, 731, 732, 733, 734, 736, 760], "error": [1, 8, 11, 26, 244, 265, 329, 548, 604, 605, 606, 607, 609, 612, 629, 632, 689, 697, 698, 701, 702, 704, 705, 706, 709, 710, 711, 718, 756, 757, 758], "rais": [1, 7, 8, 11, 16, 37, 39, 64, 76, 686, 704, 711, 712, 756], "few": [1, 6, 11, 21, 66, 246, 249, 256, 257, 262, 686, 687, 688, 690, 693, 695, 696, 697, 704, 705, 711, 712, 713, 735, 740, 745, 746, 752, 754, 756], "particular": [1, 262, 690, 704, 706, 709, 710, 711, 712, 735, 746, 760], "otherwis": [1, 8, 494, 690, 704, 711, 731, 732, 733, 734, 735, 736, 755, 759], "mean": [1, 6, 8, 64, 175, 251, 329, 506, 507, 520, 548, 689, 696, 697, 698, 706, 711, 712, 737, 739, 741, 742, 746, 751, 759, 762], "non": [1, 8, 699, 703, 718, 746, 752, 759], "known": [1, 23, 689, 698, 700, 704, 710, 711, 712, 718, 746], "strategi": [1, 8], "happen": [1, 8, 76, 704, 711, 712, 723, 727, 728, 736, 745, 754, 756, 757], "care": [1, 8, 690, 704, 706, 712], "suffici": [1, 276], "worri": [1, 704], "globalocean": [1, 325, 338, 343, 346, 349, 351, 367, 370, 379, 384, 387, 392, 397, 402, 405, 408, 536, 544, 690, 704, 705, 710, 711, 712], "getint": [1, 699, 704, 710, 711, 712], "init_cor": [1, 713, 758], "init_min_cor": [1, 713, 758], "init_thread": [1, 713, 746, 748, 758], "forward_cor": [1, 713], "forward_min_cor": [1, 713], "forward_thread": [1, 713, 746, 748, 758], "ref_": 1, "alg_machine_data": 1, "root": [1, 12, 71, 72, 74, 243, 329, 548, 685, 689, 697, 698, 704, 705, 706, 708, 713, 726, 731, 732, 733, 734, 735, 736, 739, 760], "mesh_databas": [1, 713], "initial_condition_databas": [1, 713], "bathymetry_databas": [1, 8, 265, 704, 713], "ocean_database_root": [1, 713], "project": [1, 3, 6, 43, 685, 706, 711, 712, 713, 726, 731, 735, 752], "regionalclim": 1, "common_mpa": 1, "grid": [1, 45, 52, 58, 185, 188, 189, 192, 198, 203, 204, 207, 212, 215, 245, 246, 247, 248, 251, 253, 265, 276, 279, 383, 391, 396, 412, 438, 444, 445, 452, 490, 497, 574, 588, 602, 626, 653, 654, 675, 676, 677, 678, 679, 680, 683, 684, 686, 688, 690, 691, 693, 695, 696, 697, 699, 703, 704, 711, 712, 713, 718, 726, 727, 728, 742, 743, 744, 745, 746, 747, 749, 751, 752, 753, 754, 757, 759], "mali": [1, 6, 79, 83, 86, 88, 96, 98, 100, 111, 113, 115, 136, 142, 149, 151, 157, 163, 165, 168, 170, 172, 185, 188, 191, 192, 193, 197, 198, 199, 203, 204, 207, 208, 209, 212, 215, 216, 230, 236, 238, 240, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 256, 257, 262, 704, 706, 708, 709, 713, 715, 716, 717, 719, 721, 722, 723, 726, 729, 730, 737, 760, 761], "landice_database_root": [1, 713], "albani": [1, 6, 243, 249, 256, 257, 258, 259, 261, 262, 704, 713, 715, 716, 718, 719, 722, 730, 731, 732, 734, 736, 760], "compass_env": [1, 731, 732, 733, 734, 735, 736], "climat": [1, 43, 726, 731, 732, 735, 746, 755, 760], "shared_clim": 1, "anaconda_env": 1, "single_nod": [1, 713, 731, 732, 733, 734, 735, 736, 760], "whether": [1, 6, 8, 11, 12, 26, 27, 34, 37, 39, 40, 62, 64, 69, 70, 71, 72, 74, 76, 157, 163, 165, 202, 212, 214, 265, 267, 270, 273, 274, 325, 328, 354, 360, 362, 364, 370, 373, 379, 443, 451, 458, 487, 491, 492, 494, 507, 511, 555, 557, 559, 652, 657, 663, 667, 670, 690, 704, 706, 707, 711, 712, 713, 718, 719, 720, 721, 724, 726, 731, 732, 733, 734, 735, 736, 739, 742, 744, 746, 749, 751, 752, 753, 754, 756, 758, 759, 760], "mpirun": [1, 707, 713, 731, 732, 733, 734, 735, 736, 760], "srun": [1, 707, 713, 731, 732, 733, 734, 735, 736, 760], "parallel_execut": [1, 707, 713, 731, 732, 733, 734, 735, 736, 760], "cores_per_nod": [1, 713, 731, 732, 733, 734, 735, 736, 760], "36": [1, 154, 686, 690, 696, 703, 704, 711, 731, 735, 746, 748, 752, 758, 760], "account": [1, 716, 731, 733, 734, 735, 736, 760], "multiprocess": [1, 704, 705, 710, 713], "dask": [1, 713], "18": [1, 703, 713, 746, 748, 757, 758], "variou": [1, 80, 536, 690, 696, 700, 701, 704, 706, 752], "find": [1, 7, 37, 47, 67, 438, 506, 705, 706, 707, 711, 713, 748, 760], "compil": [1, 5, 6, 258, 259, 260, 261, 262, 263, 704, 707, 709, 711, 712, 716, 731, 732, 733, 734, 735, 736, 757, 760], "mpi": [1, 8, 258, 260, 262, 408, 704, 706, 707, 709, 710, 711, 712, 731, 732, 733, 734, 736, 748, 757, 760], "explor": [1, 696, 704, 711, 739, 752, 756], "intend": [1, 3, 8, 248, 688, 690, 696, 712, 713, 746, 761], "incorpor": [1, 253, 704, 746], "come": [1, 12, 690, 696, 704, 706, 711, 712, 716, 731, 732, 733, 734, 735, 736, 738, 746, 750, 759, 760], "placehold": [1, 11, 21, 704, 760], "conceptu": [1, 704, 705, 711, 712, 749, 752], "most": [1, 8, 20, 83, 88, 100, 115, 151, 165, 172, 230, 240, 243, 251, 262, 685, 690, 703, 704, 705, 706, 708, 710, 711, 713, 723, 726, 729, 735, 736, 737, 739, 740, 746, 755, 756, 761], "stick": [1, 711, 712], "inde": 1, "seemingli": 1, "unrel": 1, "argument": [1, 6, 7, 8, 66, 246, 249, 686, 687, 688, 690, 695, 697, 704, 705, 706, 710, 711, 712, 762], "taken": [1, 62, 401, 689, 698, 700, 704, 712, 734, 736, 752, 760], "restart_test": [1, 83, 88, 100, 115, 151, 165, 172, 230, 240, 246, 704, 711, 716, 741, 760, 762], "sinc": [1, 6, 8, 322, 686, 690, 693, 704, 705, 706, 710, 711, 712, 713, 741, 745, 746, 748, 751, 757], "identifi": [1, 761], "sphinx": [1, 7], "readthedoc": 1, "built": [1, 6, 71, 72, 74, 243, 685, 704, 706, 712, 713, 735, 760], "manner": [1, 711], "similar": [1, 3, 6, 8, 262, 263, 265, 688, 704, 705, 706, 710, 711, 712, 717, 746, 752, 755, 756, 760], "geometric_featur": [1, 265, 273, 690, 746], "pyremap": 1, "analysi": [1, 244, 338, 343, 351, 354, 437, 559, 606, 663, 667, 686, 690, 695, 696, 697, 703, 704, 705, 713, 741, 745, 746, 753, 754, 755, 756, 757, 761], "guid": [1, 7, 245, 246, 247, 248, 250, 251, 253, 254, 255, 686, 687, 688, 690, 692, 693, 695, 696, 697, 699, 700, 701, 702, 703, 704, 705, 706, 710, 711, 712, 715, 719, 735, 740, 746], "detail": [1, 3, 4, 6, 7, 8, 40, 76, 689, 690, 691, 698, 700, 701, 704, 705, 706, 707, 710, 711, 712, 726, 729, 737, 759, 760], "instruct": [1, 706, 711, 712, 726], "quick": [1, 265, 693, 709, 711, 715, 726, 740, 749, 762], "overview": [1, 7, 709, 734, 736], "philosophi": [1, 705], "subsect": 1, "sub": [1, 507, 737, 746, 749], "descript": [1, 6, 7, 690, 696, 710, 711, 712, 713, 715, 720, 721, 724, 729, 740, 746], "manag": [1, 3, 707, 735], "api": [1, 7, 8, 709, 711, 712], "docstr": [1, 705, 709, 711], "eventu": [1, 752], "tutori": [1, 705], "plan": [1, 3, 243, 685, 687, 704, 708, 752, 761], "parsl": 1, "begin": [1, 7, 8, 246, 247, 249, 251, 257, 421, 686, 693, 704, 706, 709, 711, 712, 719, 720, 722, 724, 730, 735, 745, 748, 749, 752, 755, 758], "seem": [1, 704, 710, 711, 712, 736], "workqueueexecutor": 1, "enough": [1, 8, 686, 695, 697, 704, 705, 712, 745, 746, 749, 752, 754, 756, 759], "consid": [1, 705, 752], "beta": 1, "latest": [1, 243, 685, 696, 706, 715, 740, 752, 760, 763], "v1": [1, 8, 709, 736, 739, 746], "prematur": 1, "settl": [1, 711, 712], "except": [1, 8, 11, 16, 37, 76, 690, 696, 704, 705, 710, 711, 726, 746, 751, 752, 755, 756], "accordingli": [1, 67, 249, 265, 688], "accur": [1, 717, 723, 729, 737, 753], "race": 1, "unnecessari": [1, 712, 746], "block": [1, 3, 704, 711, 746], "prerequisit": [1, 613], "subsequ": [1, 704, 708, 730, 746, 762], "associ": [1, 8, 604, 605, 677, 683, 684, 686, 688, 690, 695, 704, 708, 711, 726, 746, 749], "datafutur": 1, "usag": [1, 244, 690, 713, 716, 723, 727, 728, 734, 736, 746, 748, 758], "arbitrari": 1, "1gb": 1, "calibr": 1, "actual": [1, 3, 6, 8, 704, 706, 711, 717], "approxim": [1, 8, 44, 46, 47, 51, 274, 382, 390, 395, 451, 604, 612, 701, 706, 716, 719, 720, 724, 726, 745, 746, 752, 754, 756, 757], "debug": [1, 8, 258, 259, 260, 261, 263, 605, 697, 731, 732, 733, 734, 736, 753], "flesh": [1, 711, 712], "further": [1, 7, 690, 704, 720, 721, 724, 726, 734, 736], "restrict": [1, 8, 711, 712], "facilit": 1, "m": [1, 6, 45, 52, 53, 58, 246, 248, 307, 383, 391, 396, 452, 574, 588, 602, 626, 686, 687, 690, 691, 693, 695, 696, 697, 703, 704, 706, 712, 718, 719, 720, 721, 723, 724, 726, 727, 728, 731, 732, 733, 734, 736, 739, 742, 743, 745, 747, 749, 751, 752, 753, 755, 759, 760], "oppos": [1, 325, 328, 752], "origin": [1, 8, 34, 253, 445, 486, 490, 491, 654, 698, 701, 706, 710, 711, 712, 726, 744, 754, 759, 760], "simpli": [1, 8, 36, 105, 144, 154, 161, 222, 227, 285, 663, 672, 691, 704, 706, 711, 712, 719, 739, 760, 762], "anyth": [1, 711], "discuss": [1, 3, 8, 704, 705, 711, 712, 745, 746, 756], "decid": [1, 710, 712, 746], "misunderstood": 1, "select": [1, 6, 8, 704, 706], "skip": [1, 6, 8, 76, 704, 762], "latter": [1, 6, 26, 246, 247, 249, 251, 257, 262, 752], "suggest": [1, 707, 752], "put": [1, 706, 711, 712, 755], "under": [1, 3, 75, 262, 486, 494, 512, 609, 690, 696, 706, 709, 719, 726, 739, 741, 749, 752, 756, 761], "break": [1, 306, 309, 311, 313, 687, 743, 759], "backward": 1, "compat": [1, 243, 276, 685, 706, 707, 709, 746, 749], "scope": 1, "hinder": 1, "effort": [1, 746], "14": [1, 257, 690, 707, 730, 746], "scratch": [1, 6, 706, 710, 711, 734, 736, 760], "simper": 1, "underwai": 1, "aid": [1, 6], "compass_1": 1, "http": [1, 6, 7, 8, 38, 39, 613, 690, 704, 705, 706, 707, 709, 712, 713, 715, 734, 736, 740, 746, 760], "github": [1, 6, 7, 38, 690, 705, 706, 709, 711, 712, 713, 715, 740, 746, 760, 763], "com": [1, 6, 7, 38, 39, 690, 705, 706, 709, 711, 712, 713, 746, 760], "dev": [1, 6, 7, 243, 690, 704, 705, 706, 709, 711, 712, 713, 715, 740, 746, 760], "28": [1, 713, 746], "somewhat": 1, "conflict": 1, "tend": [1, 265], "child": [1, 19, 534, 704, 705], "just": [1, 6, 11, 21, 40, 83, 88, 100, 115, 151, 165, 172, 230, 240, 246, 247, 249, 251, 257, 262, 704, 705, 706, 708, 709, 710, 711, 712, 734, 736, 752], "instanti": 1, "becaus": [1, 7, 8, 244, 490, 704, 705, 706, 710, 711, 712, 718, 722, 723, 726, 727, 728, 730, 733, 736, 737, 746, 748, 752, 754, 760], "parent": [1, 349, 367, 690, 704], "object": [1, 8, 14, 17, 25, 75, 76, 507, 519, 690, 704, 705, 711, 712, 737, 746], "respect": [1, 3, 8, 265, 697, 704, 705, 711, 726, 744, 746, 752, 759], "baroclinicchannel": [1, 282, 285, 294, 297, 303, 686, 704, 705, 711, 712], "short": [1, 6, 105, 154, 177, 249, 250, 256, 257, 265, 268, 285, 338, 346, 401, 402, 408, 412, 455, 663, 672, 690, 704, 705, 711, 712, 716, 717, 719, 722, 724, 730, 737, 741, 742, 744, 746, 751, 753, 755, 759], "add_step": [1, 245, 246, 251, 686, 690, 695, 704, 710, 711, 712], "initialst": [1, 686, 687, 688, 690, 692, 693, 695, 696, 697, 699, 702, 703, 704, 711], "And": [1, 7, 704, 706], "save": [1, 8, 37, 58, 686, 693, 704, 718, 719, 720, 722, 724, 726, 730, 735, 742, 746, 749], "res_param": [1, 686, 703, 704, 711, 712], "10km": [1, 8, 686, 703, 704, 711, 712, 723, 727, 741, 742, 760, 761, 762], "nx": [1, 704, 711, 712, 718, 719, 720, 721, 724, 744, 747, 749, 751], "ny": [1, 704, 711, 712, 718, 719, 720, 721, 724, 747, 749, 751], "50": [1, 248, 686, 697, 703, 704, 711, 712, 721, 724, 742, 749, 751, 753, 754], "dc": [1, 704, 711, 712, 718, 719, 720, 721, 724, 747, 749, 751], "10e3": [1, 704, 711, 712], "4km": [1, 255, 257, 686, 704, 711, 712, 728, 742, 755, 760], "40": [1, 687, 696, 704, 711, 712, 718, 733, 743, 752, 757], "126": [1, 704, 711, 712], "4e3": [1, 704, 711, 712], "1km": [1, 6, 157, 163, 165, 686, 704, 711, 712, 742, 744, 760], "160": [1, 704, 711, 712, 758], "500": [1, 690, 699, 703, 704, 711, 712, 713, 739, 749, 753, 759], "1e3": [1, 704, 711, 712], "valueerror": [1, 8, 64, 686, 704, 711, 712], "unsupport": [1, 686, 704, 711, 712], "param": [1, 144, 204, 686, 690, 704, 711, 712], "recip": [1, 704], "elsewher": [1, 690, 706, 712, 737], "might": [1, 3, 8, 265, 704, 711, 712, 713, 726, 735, 759, 760], "you": [1, 3, 5, 6, 7, 8, 243, 258, 259, 260, 261, 262, 263, 265, 685, 696, 704, 705, 706, 707, 708, 710, 711, 712, 713, 722, 723, 727, 728, 730, 731, 732, 733, 734, 735, 736, 745, 746, 749, 752, 754, 756, 757, 760, 761, 762], "kei": [1, 9, 26, 31, 72, 421, 606, 611, 704, 723], "config_time_integr": [1, 712], "split_explicit": [1, 338, 343, 346, 349, 364, 367, 384, 387, 392, 397, 402, 405, 408, 690, 712, 746, 756], "config_dt": [1, 697, 711, 712], "02": 1, "config_btr_dt": [1, 711, 712], "06": [1, 703, 747], "0000_06": 1, "config_hmix_use_ref_cell_width": 1, "config_use_debugtrac": 1, "Such": 1, "forwardstep": [1, 690, 692, 702, 704], "time_integr": [1, 338, 343, 346, 349, 364, 367, 384, 387, 392, 397, 402, 405, 408, 690, 756], "with_ice_shelf_cav": [1, 270, 354, 360, 362, 379, 690, 704, 746], "wisc": [1, 690, 746], "littl": [1, 8, 705, 706, 709, 710, 711, 712], "trickier": 1, "typic": [1, 6, 7, 8, 11, 23, 70, 265, 401, 690, 704, 706, 708, 710, 711, 712, 713, 716, 718, 719, 720, 723, 724, 727, 728, 735, 737, 739, 746, 755, 760, 761], "look": [1, 6, 7, 8, 690, 704, 705, 710, 711, 712, 713, 757], "forcing_data": [1, 696, 704], "mixedlayerdepthsoutput": 1, "var_arrai": [1, 704], "constant": [1, 8, 44, 51, 52, 274, 382, 390, 395, 451, 688, 699, 703, 712, 718, 721, 742, 744, 745, 749, 751, 752, 753, 754, 756, 759], "remov": [1, 6, 8, 70, 73, 491, 686, 687, 688, 693, 695, 696, 697, 699, 703, 704, 710, 746, 752, 758], "etc": [1, 8, 73, 74, 316, 454, 455, 463, 492, 494, 690, 704, 742, 746, 751], "rare": [1, 706], "One": [1, 8, 262, 687, 688, 705, 710, 712, 735, 741, 746, 760, 762], "add_config": [1, 710], "io": [1, 704, 705, 709, 711, 712, 713, 715, 740], "enthalpy_benchmark": [1, 243, 252, 704, 715, 716, 725], "readm": [1, 8, 248, 704, 721], "work_dir": [1, 6, 8, 11, 26, 35, 68, 71, 72, 73, 74, 75, 76, 704], "visual": [1, 8, 248, 313, 322, 328, 469, 483, 504, 547, 565, 579, 593, 617, 687, 688, 693, 696, 704, 708, 718, 719, 720, 721, 722, 724, 730, 743, 744, 751, 752, 753], "eismint2_viz": [1, 247, 720], "experi": [1, 115, 120, 124, 247, 262, 486, 487, 492, 494, 497, 502, 504, 507, 519, 696, 705, 720, 739, 752], "b": [1, 3, 6, 115, 124, 247, 706, 708, 720, 760], "d": [1, 115, 124, 247, 506, 507, 519, 677, 683, 684, 704, 711, 712, 720, 744], "f": [1, 6, 8, 115, 124, 247, 686, 704, 706, 710, 711, 713, 720, 726, 734, 736, 749, 760], "unchang": [1, 746], "eismint2": [1, 31, 243, 252, 715, 716, 725], "whichev": [1, 243, 685, 739], "sens": [1, 709, 711], "appli": [1, 7, 8, 40, 191, 197, 277, 486, 494, 696, 704, 711, 716, 717, 726, 736, 737, 744, 746, 749, 752, 759], "shown": [1, 704, 730, 755, 759], "oper": [1, 8, 22, 102, 117, 138, 153, 174, 232, 242, 290, 293, 302, 460, 468, 669, 704, 716, 741, 762], "explicit": [1, 8, 688, 690, 705, 711, 712, 730, 741, 744, 746, 756], "neither": 1, "timer": [1, 6, 26, 30, 75, 82, 158, 164, 690, 699, 703, 704, 705], "compare_vari": [1, 8, 704, 712], "mesh_step": [1, 704], "mesh_cor": [1, 713], "mesh_min_cor": [1, 713], "xcell": [1, 690, 704, 711], "ycell": [1, 690, 704, 711], "zcell": [1, 690], "filename1": [1, 8, 76, 704, 712], "purpos": [1, 3, 31, 687, 688, 704, 705, 708, 711, 712, 718, 729, 730, 746, 761], "meti": [1, 60, 712], "split": [1, 690, 705, 710, 711, 712, 741, 746, 756], "domain": [1, 61, 62, 250, 254, 255, 265, 276, 469, 491, 507, 687, 690, 696, 704, 711, 712, 716, 719, 720, 721, 724, 737, 742, 743, 744, 745, 746, 748, 749, 751, 752, 753, 754, 755, 758, 759, 761], "trivial": 1, "quit": [1, 3, 690, 704, 749], "compar": [1, 6, 8, 26, 71, 72, 74, 75, 76, 248, 256, 349, 402, 605, 687, 688, 689, 690, 691, 692, 697, 698, 700, 701, 703, 705, 708, 710, 711, 712, 716, 719, 720, 722, 723, 724, 730, 741, 742, 743, 746, 747, 748, 749, 752, 755, 757, 758, 760, 762], "signific": [1, 704, 705, 717, 752], "dynamic_adjust": [1, 351, 704, 713, 741], "rk4": [1, 338, 343, 346, 349, 364, 367, 384, 387, 392, 397, 402, 405, 408, 690, 705, 711, 712, 741, 746, 756, 762], "intermedi": [1, 746], "meshstep": [1, 373, 440, 649, 692, 704], "build_cell_width_lat_lon": [1, 8, 51, 692], "numpi": [1, 8, 45, 52, 53, 58, 383, 391, 396, 452, 507, 574, 588, 602, 604, 607, 612, 626, 675, 676, 704, 711, 712], "np": [1, 699, 711, 712], "qu240mesh": 1, "mesh_nam": [1, 329, 331, 335, 379, 448, 659, 690, 746], "bool": [1, 11, 12, 26, 27, 34, 37, 39, 40, 62, 69, 70, 71, 72, 74, 76, 157, 163, 165, 202, 212, 214, 265, 267, 270, 273, 274, 277, 325, 328, 354, 360, 362, 364, 370, 373, 379, 443, 451, 458, 487, 491, 492, 494, 507, 511, 555, 557, 559, 652, 657, 663, 667, 670], "ic": [1, 7, 142, 147, 149, 175, 243, 248, 249, 251, 253, 268, 269, 270, 273, 354, 360, 362, 376, 379, 401, 453, 455, 458, 461, 463, 466, 469, 485, 487, 490, 491, 492, 494, 499, 507, 509, 512, 516, 517, 518, 520, 685, 690, 693, 696, 703, 705, 706, 709, 711, 712, 713, 715, 716, 718, 719, 720, 721, 722, 723, 724, 726, 727, 728, 729, 730, 738, 739, 740, 741, 749, 752, 758, 759, 761], "shelf": [1, 7, 85, 86, 269, 270, 273, 354, 360, 362, 376, 379, 453, 455, 458, 461, 463, 466, 469, 485, 487, 494, 499, 507, 512, 520, 555, 557, 559, 690, 693, 696, 704, 705, 711, 712, 713, 718, 719, 729, 730, 738, 739, 740, 741, 749, 752, 755, 759], "caviti": [1, 270, 273, 354, 360, 362, 379, 507, 511, 690, 693, 696, 705, 711, 712, 713, 738, 739, 740, 741, 749, 752], "__module__": [1, 690, 710], "mesh_config_filenam": [1, 379, 690], "cell": [1, 8, 44, 45, 46, 47, 51, 52, 53, 58, 147, 265, 267, 270, 273, 274, 276, 277, 329, 382, 383, 390, 391, 395, 396, 412, 451, 452, 490, 507, 548, 574, 588, 602, 626, 677, 678, 679, 680, 683, 684, 687, 690, 691, 696, 699, 704, 710, 711, 712, 718, 719, 720, 721, 722, 723, 724, 727, 728, 730, 739, 742, 744, 745, 746, 747, 748, 749, 751, 752, 753, 754, 755, 756, 758, 759], "width": [1, 8, 44, 45, 46, 51, 52, 53, 58, 274, 382, 383, 390, 391, 395, 396, 451, 452, 574, 588, 602, 626, 711, 742, 744, 749, 751, 754, 755, 759], "arrai": [1, 8, 45, 52, 53, 58, 267, 383, 391, 396, 452, 509, 511, 574, 588, 602, 606, 607, 626, 675, 676, 678, 679, 680, 681], "regular": [1, 6, 40, 45, 52, 325, 328, 383, 391, 396, 452, 574, 588, 602, 626, 711, 731, 733, 734, 735, 736, 741, 760], "latitud": [1, 45, 52, 383, 391, 396, 452, 574, 588, 602, 626, 690, 745, 746, 755, 757], "longitud": [1, 45, 52, 53, 58, 383, 391, 396, 452, 574, 588, 602, 626, 690, 745, 755], "return": [1, 3, 7, 37, 45, 46, 47, 52, 63, 65, 72, 267, 269, 329, 332, 383, 391, 396, 401, 452, 490, 541, 548, 574, 588, 602, 604, 605, 606, 613, 626, 675, 678, 679, 680, 681, 682, 705, 710, 711, 712, 745, 754, 757], "cellwidth": [1, 383, 391, 396, 452, 574, 588, 602, 626], "x": [1, 45, 52, 53, 58, 189, 383, 391, 396, 412, 452, 507, 509, 516, 517, 518, 574, 588, 602, 626, 687, 690, 691, 693, 697, 704, 711, 712, 744, 747, 749, 751, 754], "km": [1, 8, 44, 45, 46, 47, 51, 52, 53, 58, 247, 249, 250, 251, 254, 257, 274, 307, 316, 331, 382, 383, 390, 391, 395, 396, 451, 452, 487, 491, 492, 494, 497, 499, 502, 504, 540, 548, 567, 571, 573, 574, 581, 585, 587, 588, 595, 599, 601, 602, 619, 623, 625, 626, 686, 689, 690, 691, 696, 698, 699, 700, 701, 703, 710, 711, 712, 713, 716, 720, 722, 723, 724, 727, 728, 730, 737, 742, 744, 745, 746, 749, 751, 752, 754, 755, 756, 757, 759, 761], "lon": [1, 8, 45, 51, 52, 53, 58, 189, 383, 391, 396, 452, 574, 588, 602, 626, 713, 746], "length": [1, 45, 52, 53, 58, 383, 391, 396, 452, 574, 588, 602, 626, 690, 703, 744, 747, 759], "180": [1, 45, 52, 53, 58, 383, 391, 396, 452, 574, 588, 602, 626, 745, 748, 756, 758], "lat": [1, 8, 45, 51, 52, 53, 58, 189, 383, 391, 396, 452, 574, 588, 602, 626, 713, 746], "90": [1, 45, 52, 53, 58, 383, 391, 396, 452, 574, 588, 602, 626, 703, 704, 745, 756], "dlon": 1, "dlat": 1, "constantcellwidth": 1, "240": [1, 8, 46, 607, 612, 689, 690, 700, 713, 737, 745, 746, 752, 756], "nlat": [1, 757], "nlon": 1, "360": 1, "linspac": [1, 8, 699], "ones": [1, 6, 193, 199, 209, 216, 507, 677, 683, 684, 705, 710], "size": [1, 3, 8, 46, 47, 147, 513, 567, 581, 595, 604, 606, 607, 612, 619, 704, 711, 712, 713, 718, 719, 720, 721, 724, 745, 746, 747, 749, 751, 754], "integr": [1, 8, 297, 338, 343, 346, 349, 364, 367, 384, 387, 392, 397, 402, 405, 408, 478, 686, 690, 695, 696, 702, 704, 705, 711, 712, 716, 717, 719, 720, 721, 722, 723, 724, 725, 727, 728, 730, 741, 742, 745, 746, 749, 751, 752, 753, 754, 755, 756, 758, 759], "0000_01": 1, "1000": [1, 248, 690, 711, 713, 721, 724, 739, 742, 746, 748, 751, 758, 759], "config_mom_del4": 1, "2e11": 1, "config_hmix_scalewithmesh": 1, "config_use_gm": 1, "vertic": [1, 246, 247, 251, 277, 279, 316, 400, 401, 412, 454, 455, 463, 492, 494, 555, 557, 559, 605, 686, 688, 690, 691, 692, 693, 695, 696, 697, 699, 702, 703, 704, 710, 712, 713, 718, 719, 720, 721, 724, 737, 738, 740, 742, 743, 744, 746, 747, 748, 749, 751, 752, 753, 754, 755, 758, 759], "layer": [1, 246, 247, 251, 265, 267, 513, 555, 557, 559, 675, 676, 677, 681, 682, 683, 684, 686, 690, 691, 692, 693, 695, 696, 697, 699, 702, 703, 711, 713, 718, 719, 720, 724, 737, 739, 741, 742, 743, 744, 746, 747, 748, 749, 751, 752, 753, 754, 755, 758, 759], "metadata": [1, 713], "vertical_grid": [1, 265, 279, 675, 677, 683, 684, 690, 704, 711, 713, 739, 742, 743, 744, 749, 751, 752, 753, 754, 758, 759], "grid_typ": [1, 690, 711, 713, 739, 742, 749, 751, 752, 753, 754, 758, 759], "60layerphc": [1, 690, 746], "mb": [1, 11, 21, 690, 713, 746, 748, 758], "init_max_memori": [1, 690, 713, 746, 748, 758], "init_max_disk": [1, 713], "128": [1, 690, 732, 736], "forward_max_memori": [1, 690, 713, 746, 748, 758], "forward_max_disk": [1, 713], "prefix": [1, 12, 509, 511, 521, 690, 704, 706, 713, 746], "qu": [1, 689, 690, 710, 713, 745, 746, 757], "ec": [1, 690, 713, 746], "wc": [1, 690, 713, 746], "mesh_descript": [1, 690, 713, 746], "eddi": [1, 686, 690, 742, 746, 755], "closur": [1, 690, 746, 747], "e3sm_vers": [1, 690, 713, 746], "enhanc": [1, 690], "around": [1, 277, 687, 689, 690, 700, 711, 712, 713, 737, 742, 745, 746, 751, 755], "equat": [1, 265, 690, 693, 711, 719, 745, 746, 747], "south": [1, 690], "pole": [1, 198, 690, 726, 746], "35": [1, 690, 711, 742, 744, 745, 746, 751, 753, 754, 757, 760], "greenland": [1, 31, 243, 252, 255, 690, 704, 708, 715, 716, 723, 725, 727, 728, 761], "min_r": [1, 690, 713, 746], "max_r": [1, 690, 713, 746], "mid": [1, 265, 690, 696, 746], "revis": [1, 6, 690, 713, 746], "increment": [1, 690, 713, 746], "mesh_revis": [1, 690, 713, 746], "finest": [1, 690, 713, 745, 746, 754, 756], "coarsest": [1, 690, 711, 713, 746], "60": [1, 8, 46, 265, 273, 567, 581, 595, 619, 689, 690, 700, 701, 704, 739, 745, 746, 749, 755, 756, 757], "url": [1, 8, 12, 37, 690, 704, 707, 713, 746], "pull_request": [1, 690, 713, 746], "miss": [1, 8, 690, 704, 713, 746], "dynamical_adjust": 1, "spin": [1, 177, 704, 724, 741, 746], "kind": [1, 710, 711], "dynamicaladjust": 1, "dynamicadjust": [1, 351, 690], "qu240dynamicadjust": [1, 690, 704], "adjust": [1, 249, 265, 268, 324, 337, 349, 351, 354, 356, 358, 360, 362, 376, 384, 387, 392, 397, 455, 466, 499, 685, 690, 693, 696, 704, 713, 723, 727, 728, 729, 741, 746, 749, 752, 756], "dissip": [1, 349, 351, 356, 358, 384, 387, 392, 397, 690, 711, 742, 746, 751], "fast": [1, 349, 351, 356, 358, 384, 387, 392, 397, 690, 723, 746, 757], "move": [1, 244, 265, 349, 351, 384, 387, 392, 397, 690, 704, 705, 711, 752], "wave": [1, 349, 351, 356, 358, 384, 387, 392, 397, 472, 474, 476, 478, 479, 481, 483, 652, 690, 695, 702, 704, 711, 742, 746, 751], "restart_tim": 1, "0001": [1, 752], "02_00": 1, "03_00": 1, "restart_filenam": [1, 136, 349, 351, 354, 356, 358, 360, 362, 384, 392, 397, 690], "rst": [1, 7, 83, 88, 100, 115, 151, 165, 172, 230, 240, 246, 247, 249, 250, 251, 257, 690, 704, 711, 712], "step_nam": 1, "damped_adjustment_1": [1, 690], "namelist_opt": 1, "01_00": [1, 704, 752], "config_rayleigh_frict": 1, "config_rayleigh_damping_coeff": [1, 688], "stream_replac": [1, 704], "restart_interv": [1, 690, 704], "template_replac": [1, 17, 25, 704], "simul": [1, 250, 253, 313, 322, 349, 412, 420, 458, 497, 502, 504, 507, 519, 552, 555, 557, 559, 628, 663, 667, 670, 690, 693, 696, 699, 700, 704, 708, 710, 711, 712, 723, 726, 737, 742, 744, 746, 747, 748, 749, 755, 757, 758, 759, 760], "config_do_restart": 1, "config_start_tim": 1, "whew": 1, "That": [1, 704, 705, 708, 711, 712, 726, 760], "lot": [1, 8, 704, 705, 712], "thank": 1, "bear": [1, 712], "myriad": 1, "highlight": 1, "roughli": [1, 705, 711, 745, 754, 756], "broken": [1, 98, 113, 149, 163, 170, 238, 704, 705], "ident": [1, 3, 6, 8, 86, 96, 98, 111, 113, 142, 149, 157, 163, 168, 170, 236, 238, 246, 247, 249, 250, 251, 257, 282, 294, 303, 338, 346, 405, 408, 463, 686, 690, 693, 699, 703, 705, 711, 712, 716, 719, 720, 722, 723, 724, 730, 742, 746, 749, 751, 752, 755, 756, 759], "analog": [1, 705], "get_available_cores_and_nod": [1, 705], "abl": [1, 6, 258, 259, 260, 261, 263, 704, 705, 706, 711, 712, 735], "unless": [1, 39, 70, 696, 705, 706, 711, 712], "am": 1, "theoret": [1, 705], "my": 1, "ambit": 1, "gradual": [1, 690, 753], "sea": [1, 7, 265, 267, 268, 269, 362, 376, 401, 455, 466, 486, 499, 509, 513, 516, 517, 518, 679, 680, 681, 682, 685, 690, 692, 693, 696, 712, 713, 739, 741, 743, 744, 746, 747, 749, 752], "surfac": [1, 7, 190, 196, 248, 253, 265, 267, 268, 269, 277, 376, 455, 466, 486, 499, 509, 513, 516, 517, 518, 555, 557, 559, 679, 680, 681, 682, 685, 690, 692, 693, 696, 711, 713, 721, 726, 739, 741, 742, 743, 744, 746, 749, 751, 752, 754, 755, 759], "height": [1, 7, 265, 267, 268, 269, 376, 455, 466, 499, 513, 679, 680, 681, 682, 685, 690, 692, 693, 696, 713, 739, 741, 743, 744, 746, 749, 752], "frazil": [1, 265, 458, 663, 667, 670, 672, 693, 703, 741, 749, 759], "land": [1, 7, 243, 265, 268, 269, 270, 273, 274, 451, 487, 490, 492, 494, 685, 690, 693, 696, 699, 709, 712, 713, 715, 716, 739, 746, 748, 749, 752, 755, 758, 761], "flux": [1, 248, 265, 486, 512, 520, 690, 693, 696, 717, 721, 741, 746, 749, 752], "1d": [1, 265, 675, 676, 677, 678, 679, 680, 681, 683, 684, 693, 696], "coordin": [1, 188, 189, 203, 316, 454, 455, 463, 492, 494, 507, 638, 677, 683, 684, 688, 690, 693, 696, 710, 737, 738, 740, 742, 744, 746, 749, 751, 752, 753, 754, 759], "3d": [1, 277, 509], "z": [1, 265, 273, 454, 455, 463, 487, 492, 494, 499, 507, 509, 516, 517, 518, 678, 679, 680, 681, 682, 683, 684, 693, 696, 711, 712, 737, 742, 744, 749, 751, 752, 753, 754, 756, 759, 762], "iceshelf": [1, 265], "pressur": [1, 7, 265, 268, 269, 376, 443, 455, 466, 494, 499, 685, 690, 692, 693, 696, 713, 737, 746, 748, 749, 752], "match": [1, 376, 455, 466, 499, 613, 687, 688, 693, 696, 706, 726, 753], "particl": [1, 553, 555, 559, 663, 667, 699, 703, 741], "plot": [1, 8, 58, 94, 109, 124, 183, 244, 245, 246, 247, 248, 251, 300, 412, 414, 421, 443, 445, 479, 523, 531, 605, 606, 607, 608, 609, 610, 611, 629, 652, 654, 657, 686, 687, 688, 689, 691, 692, 695, 696, 697, 698, 699, 700, 701, 702, 710, 711, 712, 717, 718, 719, 720, 721, 724, 743, 744, 745, 748, 749, 752, 753, 754, 756, 757, 758, 761], "nearli": [1, 175, 251, 338, 690, 704, 705, 708, 709, 711, 712, 724, 737, 746, 756], "netcdf": [1, 276, 277, 278, 279, 400, 447, 656, 690, 711, 713, 731, 732, 733, 734, 735, 736, 746], "maintain": [1, 265, 756, 760], "hundr": 1, "en4": [1, 690, 705, 746], "1900": [1, 690, 705, 746], "bgc": [1, 370, 373, 690, 705], "overkil": [1, 704], "never": [1, 704, 708], "note": [1, 7, 8, 189, 244, 276, 709, 711, 722, 723, 726, 729, 730, 734, 736, 746, 748, 758], "show": [1, 3, 7, 8, 267, 507, 509, 687, 688, 704, 711, 712, 717, 721, 734, 735, 736, 742, 745, 746, 751, 752, 754], "recent": [1, 740], "issu": [1, 3, 696, 704, 745, 754, 758], "777": 1, "aren": [1, 8, 690, 704, 705, 706, 710, 711, 712, 745, 754, 756, 762], "occur": [1, 144, 244, 696, 707], "rpe_test": [1, 704, 705, 760], "5": [1, 6, 8, 46, 247, 249, 256, 257, 277, 297, 478, 513, 608, 686, 690, 691, 693, 695, 699, 703, 704, 705, 707, 711, 712, 713, 718, 720, 722, 723, 726, 727, 728, 729, 730, 741, 742, 744, 746, 747, 749, 751, 752, 753, 755, 758, 759, 760], "sourc": [1, 3, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 100, 101, 103, 104, 105, 107, 108, 109, 110, 111, 113, 115, 116, 118, 119, 120, 122, 123, 124, 125, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 139, 140, 141, 142, 144, 146, 147, 148, 149, 151, 152, 154, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 170, 172, 173, 175, 176, 177, 179, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 229, 230, 231, 233, 235, 236, 238, 240, 241, 253, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 288, 289, 291, 292, 294, 295, 297, 298, 300, 301, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 342, 343, 346, 349, 351, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 387, 390, 391, 392, 395, 396, 397, 400, 401, 402, 405, 408, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 458, 459, 461, 462, 463, 464, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 539, 540, 541, 542, 543, 544, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 640, 641, 643, 644, 645, 646, 647, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 662, 663, 664, 666, 667, 668, 670, 671, 672, 673, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 704, 706, 711, 712, 713, 726, 729, 730, 731, 732, 733, 734, 735, 736, 753, 760], "major": [1, 262, 704, 712, 735, 737, 746, 755, 758], "assembl": [1, 351], "check": [1, 6, 8, 64, 76, 81, 202, 250, 265, 338, 631, 693, 696, 706, 708, 710, 711, 712, 713, 734, 736, 741, 759, 760, 762], "extend": [1, 713, 752, 755], "opiton": 1, "mpas_model": [1, 6, 243, 685, 704, 713], "ocean_model": [1, 685, 706, 712, 713], "previous": [1, 704, 710], "resourc": [1, 8, 21, 38, 66, 375, 651, 686, 695, 697, 704, 711, 723, 727, 728, 746], "Then": [1, 5, 7, 8, 243, 248, 258, 259, 260, 261, 262, 263, 685, 686, 687, 688, 690, 693, 695, 696, 697, 699, 703, 704, 710, 712, 719, 720, 722, 724, 726, 730, 735, 742, 746, 749, 752, 760], "configure_global_ocean": [1, 690, 704], "initial_condit": [1, 175, 370, 373, 550, 705], "polar": [1, 690, 713, 739, 746], "scienc": [1, 690, 739, 746], "center": [1, 265, 267, 276, 277, 690, 704, 711, 718, 719, 720, 724, 739, 742, 746, 748, 749, 751, 752, 753, 754, 758, 759], "hydrograph": [1, 690, 739, 746], "climatologi": [1, 191, 253, 690, 726, 739, 746], "en4_1900": [1, 370, 373, 690, 741, 746], "met": [1, 3], "offic": 1, "hadlei": 1, "centr": 1, "init_descript": [1, 690, 713, 746], "bathymetri": [1, 8, 265, 270, 491, 507, 690, 704, 713, 746, 748, 759], "bathy_descript": [1, 690, 713, 746], "gebco": [1, 713, 746], "2019": 1, "bedmachin": [1, 273, 713, 746], "antarctica": [1, 273, 690, 713, 737, 746], "with_bgc": [1, 370, 373, 704], "todo": 1, "fill": [1, 244, 265, 273, 696, 746], "bgc_descript": 1, "wisc_descript": 1, "shelv": [1, 685, 690, 693, 713, 726, 737, 739, 741, 746, 749, 752, 758], "although": [1, 8, 710], "config_fil": [1, 6, 71, 72, 74], "commandlin": 1, "w": [1, 6, 248, 706, 708, 721, 755, 760], "test_baroclinic_channel": 1, "test_nightli": 1, "check_siz": [1, 713], "verifi": [1, 8, 86, 96, 98, 111, 113, 142, 149, 157, 163, 168, 170, 236, 238, 553, 688, 713, 758], "home": [1, 8, 706, 711, 712, 713, 734, 735, 736], "default_input": [1, 243, 685, 704, 713], "mesh_max_memori": [1, 713], "mesh_max_disk": [1, 713], "add_metadata": [1, 690, 713, 746], "quasi": [1, 8, 51, 177, 179, 555, 559, 663, 667, 690, 710, 713, 724, 746, 749, 752, 756, 757], "uniform": [1, 8, 51, 207, 246, 251, 331, 540, 548, 567, 571, 573, 581, 585, 587, 595, 599, 601, 619, 623, 625, 686, 689, 690, 693, 695, 699, 700, 701, 703, 704, 710, 711, 712, 713, 718, 719, 720, 724, 742, 746, 749, 751, 752, 753, 754, 756, 757, 758, 759], "max_depth": [1, 690, 713, 746], "autodetect": [1, 690, 713, 746, 748, 758], "creation_d": [1, 690, 713, 746], "email": [1, 690, 713, 746, 748, 758], "lanl": [1, 709, 713, 746], "gov": [1, 8, 704, 707, 713, 734, 736, 746], "enable_ocean_initial_condit": [1, 713, 746], "enable_ocean_graph_partit": [1, 713, 746], "enable_seaice_initial_condit": [1, 713, 746], "enable_scrip": [1, 713, 746], "enable_diagnostics_fil": [1, 713, 746], "comparisonlatresolut": [1, 713, 746], "comparisonlonresolut": [1, 713, 746], "comparisonantarcticstereowidth": [1, 713, 746], "6000": [1, 690, 713, 739, 746, 758], "comparisonantarcticstereoresolut": [1, 713, 746], "comparisonarcticstereowidth": [1, 713, 746], "comparisonarcticstereoresolut": [1, 713, 746], "tanh_dz": [1, 690, 713, 746], "vert_level": [1, 690, 704, 711, 712, 713, 739, 742, 743, 744, 747, 749, 751, 752, 753, 754, 758], "bottom_depth": [1, 690, 704, 711, 712, 713, 739, 742, 747, 749, 751, 752, 753, 754, 755, 758, 759], "3000": [1, 690, 710, 713, 745, 746, 754, 756], "min_layer_thick": [1, 690, 713, 739, 752], "max_layer_thick": [1, 690, 713, 739], "unfortun": 1, "lost": 1, "standard": [1, 120, 273, 690, 696, 700, 705, 706, 746, 756, 760], "search": [1, 6, 40, 276], "through": [1, 3, 72, 469, 483, 690, 696, 705, 712, 715, 723, 727, 728, 737, 740, 743, 744, 751, 752, 753], "our": [1, 705, 710, 711, 712, 734, 760], "preserv": [1, 273, 274, 760], "lower": [1, 8, 704, 711, 726, 742, 751, 753], "hpc": [1, 706, 735], "laptop": [1, 706, 711, 712, 713], "desktop": [1, 711, 712, 726], "varieti": [1, 725], "straightforward": [1, 704], "Or": [1, 6, 713], "late": 1, "run_step": [1, 704, 719], "subset": [1, 6, 696], "run_by_default": [1, 27, 245, 246, 251, 704], "mesh_typ": [1, 86, 90, 92, 96, 98, 100, 103, 105, 107, 120, 146, 157, 159, 163, 165, 220, 225, 245, 246, 704], "dome": [1, 8, 43, 86, 128, 133, 136, 170, 175, 181, 214, 243, 252, 704, 708, 715, 716, 725, 760, 761], "tye": [1, 86], "smoke_test": [1, 246, 704], "setupmesh": [1, 8, 247, 248, 251, 704], "runmodel": [1, 248, 249, 250, 251, 256, 257, 704], "unifi": [1, 706, 734, 736], "detect": [1, 265, 690, 704, 713, 731, 732, 733, 735, 746, 748, 756, 758, 760], "fulli": [1, 696], "cori": [1, 262, 726, 735, 760], "haswel": [1, 262, 760], "compi": [1, 262, 733, 760], "nest": [1, 711, 712], "27": 1, "29": [1, 757], "31": 1, "decomp_test": [1, 7, 711, 741, 760, 762], "32": [1, 698, 699, 703, 723, 730, 734, 754, 756, 760], "threads_test": [1, 8, 711, 741, 760, 762], "33": [1, 713, 746, 751, 752, 760], "analysis_test": [1, 741, 762], "34": [1, 704, 719, 749, 752, 755, 759, 760], "daily_output_test": 1, "37": [1, 690, 760], "38": [1, 760], "39": 1, "41": 1, "43": 1, "44": [1, 749], "45": [1, 690, 746], "phc_bgc": [1, 741, 746], "46": [1, 718], "cull": [1, 8, 490, 686, 687, 688, 690, 693, 695, 696, 697, 699, 703, 704, 711, 712, 720, 722, 723, 727, 728, 730, 746, 748, 755, 758], "switch": [1, 706, 711, 713, 759], "treat": [1, 704, 705], "progress": [1, 70, 267, 273, 509, 511], "intermix": 1, "continu": [1, 3, 136, 704, 710, 711, 716, 741, 746, 752], "azur": 1, "pipelin": 1, "doc": [1, 5, 7, 704, 711, 712, 734, 736, 763], "renam": [1, 185, 191, 193, 197, 199, 204, 206, 209, 212, 216, 253, 705, 726], "titl": [1, 509, 511], "tabl": [1, 8, 612, 706, 735, 760], "tree": [1, 7, 709, 712], "0_doc": 1, "brows": [1, 711, 712], "index": [1, 5, 8, 265, 677, 678, 679, 680, 681, 682, 683, 684, 704, 711, 712, 718, 719, 724], "html": [1, 5, 715, 740], "keep": [1, 3, 6, 8, 11, 36, 486, 690, 704, 706, 712, 713, 726, 752], "track": [1, 8, 11, 690, 704, 706, 755, 759], "thorough": 1, "absolut": [1, 6, 8, 11, 12, 36, 71, 72, 74, 243, 685, 704, 706, 713, 760], "sure": [1, 6, 8, 76, 243, 262, 282, 294, 303, 338, 346, 405, 408, 463, 685, 686, 690, 693, 696, 704, 705, 706, 708, 711, 712, 713, 718, 719, 720, 722, 723, 724, 730, 734, 735, 736, 742, 745, 746, 749], "present": [1, 265, 273, 494, 690, 706, 710, 711, 712, 744], "figur": [1, 8, 513, 608, 610, 704, 712, 713, 718, 719, 720, 724], "implicitli": 1, "repositori": [1, 704, 709, 711, 712, 760], "affect": [1, 8, 704, 716, 737, 741], "immedi": [1, 43, 704, 706, 711, 712], "noth": [1, 8, 690, 707, 726, 745, 754, 756, 757], "preclud": 1, "wouldn": 1, "limit": [1, 706, 709, 717], "review": 1, "agre": 1, "column": [1, 610, 691, 696, 706, 712, 721, 737, 747, 749, 752, 760], "eas": [1, 711], "shallow": [1, 9, 706, 716, 719, 756, 758], "water": [1, 9, 690, 696, 711, 737, 742, 743, 744, 746, 749, 751, 752, 755], "he": 1, "down": [1, 677, 678, 679, 680, 681, 682, 683, 684, 693, 696, 739], "road": 1, "86": 1, "higher": [1, 690, 711, 746, 759], "subject": 1, "thing": [1, 6, 258, 259, 261, 262, 263, 704, 705, 709, 711, 712], "proof": 1, "concept": [1, 704, 705, 708, 761], "250": [1, 690, 691, 712, 739, 747, 759], "thick": [1, 175, 246, 247, 248, 249, 257, 265, 267, 486, 491, 494, 677, 681, 682, 683, 684, 686, 690, 691, 693, 695, 696, 697, 713, 716, 718, 721, 723, 727, 728, 739, 741, 742, 743, 744, 746, 747, 749, 751, 752], "245": 1, "imposs": 1, "effect": [1, 752, 758], "ask": [1, 717, 746], "evolv": [1, 265, 709, 737, 739, 752], "declar": [1, 3, 7], "good": [1, 8, 11, 704, 706, 710, 711, 712], "merg": 1, "intent": [1, 8], "ongo": 1, "basi": [1, 351, 354, 356, 358, 360, 362, 741], "demonstr": [1, 704, 711, 712, 753, 759], "compass": [2, 3, 5, 7, 8, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 685, 686, 687, 688, 689, 690, 691, 692, 693, 695, 696, 697, 698, 699, 700, 701, 702, 703, 707, 708, 710, 711, 713, 715, 716, 719, 723, 727, 728, 731, 732, 733, 734, 735, 736, 740, 741, 746, 747, 750, 752, 755, 759, 761, 762], "packag": [2, 5, 6, 7, 8, 12, 14, 17, 25, 28, 38, 68, 73, 74, 262, 265, 379, 690, 704, 706, 707, 708, 709, 710, 711, 712, 726, 731, 732, 733, 734, 735, 736, 746, 750, 760], "output": [2, 6, 7, 8, 9, 11, 16, 22, 26, 34, 59, 60, 61, 66, 70, 76, 92, 94, 102, 107, 109, 117, 122, 124, 128, 133, 138, 153, 174, 181, 183, 188, 189, 203, 207, 208, 232, 242, 244, 245, 246, 247, 248, 249, 251, 256, 257, 265, 273, 276, 277, 278, 290, 293, 302, 313, 328, 338, 343, 349, 400, 421, 437, 443, 460, 468, 497, 504, 507, 519, 547, 548, 565, 579, 593, 605, 610, 617, 633, 652, 669, 676, 686, 687, 688, 690, 691, 693, 695, 696, 697, 699, 703, 708, 709, 710, 712, 713, 723, 726, 734, 736, 743, 746, 748, 758, 760, 762], "yyyi": 3, "mm": [3, 332, 568, 582, 596, 620], "dd": 3, "summar": [3, 716], "code": [3, 6, 7, 8, 11, 243, 248, 265, 685, 688, 704, 706, 708, 709, 711, 712, 713, 716, 721, 725, 738, 741, 756, 760], "softwar": [3, 60, 734, 736, 760], "success": [3, 37, 243, 685, 704, 713], "your": [3, 5, 6, 8, 243, 262, 685, 705, 706, 707, 710, 711, 712, 713, 731, 734, 735, 736, 745, 746, 754, 756, 757, 760], "appear": [3, 262, 696, 704], "head": 3, "technic": [3, 7], "focu": [3, 710], "extent": [3, 147, 759], "independ": [3, 6, 704, 708, 726], "thu": [3, 7, 704, 711, 726, 746, 752], "meet": [3, 751], "pde": 3, "solver": [3, 96, 98, 100, 105, 142, 149, 151, 154, 157, 163, 165, 244, 247, 248, 249, 256, 257, 704, 706, 709, 716, 717, 718, 719, 720, 722, 723, 730, 760], "steer": [3, 726], "low": [3, 151, 235, 509, 511, 746, 752, 753], "interfac": [3, 8, 265, 267, 509, 512, 513, 516, 517, 518, 520, 675, 676, 677, 683, 684, 693, 696, 704, 705, 706, 709, 711, 712, 737, 739], "sequenc": [3, 246, 247, 249, 251, 257, 508, 690, 704, 705, 708, 760, 761, 762], "math": 3, "almost": [3, 8, 710], "latex": 3, "2ab": 3, "imag": [3, 7, 278, 279, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 704, 711, 716, 718, 719, 720, 724, 746, 757], "small": [3, 8, 20, 245, 265, 691, 704, 716, 717, 718, 719, 723, 731, 738, 739, 749, 752, 756, 760], "jpeg": 3, "png": [3, 8, 278, 279, 689, 698, 701, 711, 712, 716, 718, 719, 721, 724], "okai": [3, 704, 712], "centric": 3, "pseudo": 3, "item": 3, "timelin": 3, "staf": 3, "example_funct": 3, "foo": [3, 705], "configur": [3, 6, 7, 8, 11, 21, 26, 37, 61, 64, 65, 66, 67, 68, 71, 72, 74, 81, 94, 109, 124, 183, 188, 203, 233, 250, 262, 279, 400, 401, 675, 677, 678, 679, 683, 684, 687, 688, 701, 705, 709, 710, 711, 712, 713, 719, 723, 726, 729, 734, 735, 736, 737, 739, 741, 746, 748, 752, 755, 758, 759, 760, 761], "properli": [3, 258, 259, 260, 261, 711, 713, 741, 757, 760], "page": [4, 7, 613, 731], "auto": 4, "summari": [4, 244, 717, 726], "relev": [4, 7, 8, 250, 494, 711, 712, 726, 731, 732, 733, 734, 735, 736, 760], "procedur": [5, 244, 262, 265, 706, 710, 734, 736], "export": [5, 707], "docs_vers": 5, "test": [5, 6, 7, 8, 9, 10, 11, 16, 21, 22, 26, 27, 28, 30, 31, 32, 34, 35, 40, 43, 44, 49, 51, 54, 56, 61, 63, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 79, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 262, 265, 266, 270, 271, 272, 274, 275, 675, 685, 686, 687, 688, 689, 691, 692, 693, 695, 696, 697, 698, 699, 700, 701, 702, 703, 706, 707, 708, 709, 715, 717, 718, 719, 720, 721, 722, 723, 724, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 742, 743, 744, 745, 747, 749, 751, 752, 753, 754, 755, 756, 757, 759], "cd": [5, 243, 685, 706, 711, 712, 760], "rm": [5, 758], "rf": 5, "developers_guid": [5, 711, 712], "_build": 5, "view": [5, 687, 706], "act": [6, 486, 705, 712, 739], "instal": [6, 706, 711, 734, 735, 736, 760], "reflect": [6, 687, 706], "h": [6, 690, 704, 712, 759], "v": [6, 265, 706, 746, 762], "example_compact": [6, 243, 685, 704, 713], "test1": 6, "test2": 6, "displai": [6, 8, 273, 734, 736], "messag": [6, 8, 704, 707, 734, 736], "test_expr": [6, 40], "substr": 6, "express": [6, 40], "think": [6, 711], "tempat": 6, "step1": 6, "step2": 6, "underli": 6, "framework": [6, 7, 26, 69, 76, 243, 685, 704, 708, 709, 711, 715, 740, 755, 759], "standalon": [6, 260, 704, 713, 731, 732, 733, 734, 735, 736, 737, 760], "num": 6, "mach": [6, 11, 731, 732, 733, 734, 735, 736, 760], "p": [6, 706, 711, 713, 760], "suite_nam": [6, 8, 35, 70, 72, 73, 74, 760], "case_numb": 6, "comma": [6, 8, 720, 745, 754, 756, 757], "requir": [6, 8, 11, 21, 83, 88, 100, 115, 136, 151, 165, 172, 230, 240, 243, 248, 249, 256, 257, 288, 309, 318, 364, 458, 466, 474, 527, 568, 582, 596, 620, 685, 690, 699, 703, 704, 705, 706, 707, 709, 710, 711, 712, 713, 715, 716, 719, 721, 722, 723, 726, 727, 728, 730, 735, 739, 740, 746, 760, 761], "piec": [6, 704, 711], "r": [6, 690, 734, 736, 745], "tell": [6, 706], "re": [6, 151, 235, 686, 688, 690, 703, 704, 705, 706, 708, 710, 711, 712, 713, 734, 735, 736, 745, 748, 752, 754, 756, 757], "leav": [6, 270, 704, 713, 726, 749, 752], "unknown": [6, 262, 735], "temp": 6, "baseline_dir": [6, 26, 71, 72, 74], "predefin": [6, 755], "afther": 6, "behind": [6, 705, 711], "fresh": [6, 710], "resid": [6, 12], "test_suit": [6, 704], "proven": [6, 36, 709, 713, 746], "entir": [6, 710, 711, 742, 749, 751, 752, 762], "complet": [6, 8, 14, 17, 244, 265, 706, 711, 712, 716, 746, 760], "comparison": [6, 8, 26, 75, 76, 313, 322, 688, 690, 704, 713, 744, 746, 749, 752], "against": [6, 8, 76, 256, 349, 413, 473, 482, 526, 690, 691, 699, 703, 704, 712, 716, 719, 741, 743, 744], "no_step": 6, "wherea": [6, 8, 704, 749, 759, 761], "clone": [6, 243, 685, 704, 706, 711, 712, 760], "tab": [6, 760], "full_run": [6, 690, 719, 720, 722, 724, 730, 742, 746, 749], "restart_run": [6, 83, 88, 100, 115, 151, 165, 172, 230, 240, 690, 719, 720, 722, 724, 730, 742, 746, 749], "preced": [6, 36], "serial": [6, 20, 701, 704, 757], "structur": [6, 8, 709, 712, 726, 746], "onto": [6, 192, 198, 207, 208, 215, 253, 265, 276, 443, 652, 657, 692, 702, 706, 726, 748, 757, 758], "whose": [6, 606, 610, 611, 704], "pr": [6, 760, 762], "saniti": [6, 265], "print": [6, 8, 40, 76, 611, 612, 704, 705, 712, 762], "restructuredtext": 7, "label": [7, 712, 735, 760], "_ocean": 7, "dev_": 7, "prepend": 7, "_dev_ocean": 7, "_ocean_baroclinic_channel": 7, "_ocean_baroclinic_channel_default": 7, "_dev_ocean_baroclinic_channel": 7, "_dev_ocean_baroclinic_channel_default": 7, "who": [7, 706, 711, 712, 713, 734, 736], "citat": 7, "brief": [7, 711, 712], "awar": [7, 262, 704, 711, 712, 726, 735], "wish": [7, 8, 265, 704, 706, 710, 711, 746, 760, 762], "specif": [7, 8, 28, 243, 262, 685, 688, 690, 703, 704, 706, 709, 710, 711, 712, 713, 726, 729, 735, 746, 760, 762], "share": [7, 78, 202, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 265, 685, 686, 687, 688, 690, 693, 695, 696, 697, 699, 703, 704, 706, 709, 711, 712, 713, 714, 719, 720, 721, 724, 726, 731, 732, 733, 734, 735, 736, 738, 742, 751, 753, 760], "public": [7, 8, 704, 713, 726], "underscor": [7, 711, 712], "currentmodul": 7, "autosummari": 7, "toctre": 7, "numpydoc": 7, "compute_land_ice_pressure_and_draft": [7, 265], "ssh": [7, 265, 267, 268, 269, 421, 423, 677, 679, 680, 681, 682, 683, 684, 685, 687, 688, 690, 693, 696, 704, 711, 713, 734, 736, 737, 743, 744, 746, 748, 749, 752], "modifysshmask": 7, "ref_dens": [7, 269], "draft": [7, 269, 491, 693, 696, 737, 739, 746, 752], "paramet": [7, 9, 10, 11, 12, 14, 15, 16, 17, 18, 21, 23, 24, 25, 26, 27, 31, 32, 34, 35, 37, 38, 39, 40, 43, 44, 46, 47, 48, 51, 56, 58, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 81, 83, 86, 88, 90, 92, 94, 96, 98, 100, 103, 105, 107, 109, 111, 113, 115, 118, 120, 122, 124, 125, 128, 130, 133, 136, 139, 142, 146, 149, 151, 154, 157, 159, 161, 163, 165, 168, 170, 172, 175, 177, 179, 181, 183, 184, 185, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 202, 203, 204, 206, 207, 208, 209, 212, 214, 215, 216, 220, 222, 225, 227, 230, 233, 236, 238, 240, 267, 268, 269, 270, 273, 274, 276, 277, 278, 279, 281, 282, 285, 288, 291, 294, 297, 300, 303, 307, 309, 311, 313, 316, 318, 320, 322, 325, 328, 329, 331, 335, 338, 342, 343, 346, 349, 351, 354, 356, 358, 360, 362, 364, 367, 370, 373, 376, 379, 382, 384, 387, 390, 392, 395, 397, 400, 401, 402, 405, 408, 412, 414, 416, 418, 421, 428, 431, 434, 437, 440, 443, 448, 451, 454, 455, 458, 461, 463, 466, 469, 472, 474, 476, 478, 479, 481, 483, 486, 487, 490, 491, 492, 494, 497, 499, 502, 504, 507, 509, 510, 511, 513, 514, 515, 519, 523, 525, 527, 529, 531, 534, 536, 540, 544, 547, 548, 550, 553, 555, 557, 559, 562, 565, 567, 571, 573, 576, 579, 581, 585, 587, 590, 593, 595, 599, 601, 604, 605, 606, 607, 610, 611, 612, 613, 614, 617, 619, 623, 625, 629, 640, 643, 646, 649, 652, 657, 659, 663, 666, 667, 670, 672, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 690, 699, 703, 704, 709, 722, 723, 726, 727, 728, 730, 742, 746, 749, 751, 752, 755, 759], "xarrai": [7, 267, 269, 490, 507, 509, 511, 519, 677, 678, 679, 680, 681, 682, 683, 684, 704, 711, 712], "dataarrai": [7, 267, 269, 509, 511, 678, 679, 680, 681, 682, 704], "mask": [7, 265, 269, 273, 490, 507, 677, 680, 683, 684, 690, 696, 704, 711, 713, 739, 746, 748], "landicepressur": [7, 265, 268, 269, 690, 696, 704, 737, 746, 749, 752], "deviat": [7, 269], "densiti": [7, 8, 147, 265, 269, 277, 711, 722, 723, 727, 728, 730, 737, 752, 755], "seawat": [7, 269, 752], "displac": [7, 269, 737], "landicedraft": [7, 265, 269, 696, 752], "equal": [7, 250, 269, 705, 743], "entri": [7, 33, 71, 72, 696, 752], "side": [7, 753], "colon": 7, "doubl": [7, 494, 704, 755], "quot": 7, "interfer": 7, "keyword": [7, 8, 704, 712], "arg": [7, 8, 66], "On": [7, 8, 712, 735, 763], "indent": [7, 704], "obviou": [7, 704, 711], "els": [7, 8, 704, 711], "meant": [8, 705, 712, 713, 716, 718, 719, 723, 729, 741], "list_cas": 8, "list_machin": [8, 705], "list_suit": 8, "anywher": [8, 706], "setup_cas": 8, "clean_cas": 8, "setup_suit": 8, "clean_suit": 8, "product": [8, 421, 703, 748], "ntask": [8, 11, 18, 21, 61, 66, 83, 88, 100, 115, 136, 151, 165, 172, 230, 240, 288, 309, 318, 364, 458, 466, 474, 527, 686, 690, 695, 704, 710, 711, 712], "cpus_per_task": [8, 11, 18, 21, 66, 704], "caveat": 8, "sit": 8, "idl": 8, "fraction": [8, 83, 244, 490, 491, 696, 711, 717, 739, 742, 749, 751, 752, 753, 754, 755, 759], "min_task": [8, 11, 21, 66, 83, 88, 100, 115, 136, 151, 165, 172, 230, 240, 288, 309, 318, 364, 458, 466, 474, 527, 539, 686, 690, 703, 704, 710, 711, 712], "min_cpus_per_task": [8, 11, 21, 66, 704], "fewest": 8, "run_test": [8, 704, 712], "run_single_step": 8, "cpu": [8, 262, 704, 760], "retriev": [8, 707], "text": [8, 745], "txt": [8, 73, 74, 704, 707], "case_output": 8, "implement": [8, 244, 245, 246, 247, 248, 251, 265, 491, 686, 687, 688, 689, 691, 692, 693, 695, 696, 697, 698, 699, 700, 701, 702, 703, 705, 711, 712, 716, 717, 718, 719, 720, 721, 724, 737, 742, 745, 746, 747, 754, 755, 756, 757, 759], "termin": [8, 704, 712], "window": [8, 718, 719, 721, 724], "update_cach": 8, "enabl": [8, 667, 690, 699, 703, 704, 707, 713, 716, 734, 736, 746, 759], "parser": [8, 36], "mpasconfigpars": 8, "compassconfigpars": [8, 11, 26, 37, 61, 64, 65, 67, 68, 94, 109, 124, 183, 188, 202, 203, 279, 281, 400, 401, 454, 666, 675, 677, 678, 679, 683, 684], "convert": [8, 508, 568, 582, 596, 620, 704, 710, 711, 712], "add_from_packag": 8, "make_diagnostics_fil": [8, 746], "makediagnosticsfil": 8, "behavior": [8, 70, 494, 704, 710, 711, 716, 719, 741, 752], "getinteg": 8, "getfloat": [8, 699, 704, 710, 711, 712], "getboolean": [8, 704, 711], "getlist": 8, "integ": [8, 607], "getexpress": 8, "tupl": [8, 513], "rang": [8, 265, 509, 511, 690, 723, 737, 755], "arang": 8, "check_cal": [8, 704], "won": [8, 705, 710, 711, 712, 713], "captur": [8, 712], "insid": [8, 704, 705, 711, 752], "subprocess": [8, 11, 66, 69, 704, 705, 707, 712], "trick": [8, 246, 704], "snippet": [8, 711], "setup_mesh": [8, 245, 246, 704, 718, 719, 721, 724], "create_landice_grid_from_generic_mpas_grid": [8, 245, 246, 247, 248, 251], "mpas_grid": [8, 246, 704], "o": [8, 629, 690, 702, 705, 706, 712, 713, 758, 760], "landice_grid": [8, 704], "l": [8, 76, 734, 736], "relat": [8, 23, 80, 243, 246, 249, 251, 256, 257, 265, 512, 520, 685, 686, 687, 688, 690, 693, 695, 696, 697, 699, 703, 704, 705, 706, 707, 711, 713, 716, 718, 719, 720, 721, 724, 731, 732, 733, 734, 735, 736, 737, 739, 742, 743, 744, 746, 748, 749, 751, 752, 753, 754, 755, 757, 758, 759, 760], "intern": [8, 11, 26, 472, 474, 476, 478, 479, 481, 483, 695, 704, 707, 751], "importlib": [8, 38, 704], "though": [8, 11, 704, 705, 711, 712, 746], "whenev": [8, 704, 711, 712], "step_dir": 8, "database_root": [8, 704, 713, 726, 731, 732, 733, 734, 735, 736, 760], "download_path": 8, "join": 8, "remote_filenam": 8, "bedmachineantarctica_and_gebco_2019_0": 8, "05_degre": 8, "200128": 8, "local_filenam": 8, "topographi": [8, 265, 490, 491, 513, 680, 690, 696, 704, 711, 737, 739, 742, 748, 749, 751, 752, 753, 754, 755, 759, 761], "file_nam": 8, "web": [8, 613, 704, 713], "anl": [8, 704, 713], "dest_path": [8, 37], "remot": [8, 12, 706], "quasiuniformsphericalmeshstep": [8, 265, 689, 690], "icosahedralmeshstep": [8, 689, 690], "jigsaw": [8, 44, 48, 50, 51, 53, 55, 56, 325, 328, 704, 722, 730, 746], "opt": [8, 56], "make_jigsaw_mesh": [8, 51], "icosahedr": [8, 44, 46, 325, 328, 690, 745, 758], "smooth": [8, 491, 696, 737, 752], "hand": [8, 705], "subdivis": [8, 44, 45, 46, 47, 48, 758], "icosahedron": [8, 45, 46, 47, 48], "6": [8, 46, 247, 521, 690, 691, 697, 703, 704, 711, 712, 720, 723, 726, 740, 743, 744, 753, 759, 760], "120": [8, 46, 607, 690, 703, 743, 745, 756], "7": [8, 46, 696, 703, 718, 726, 734, 736, 745, 746, 749, 752, 758, 759, 760], "9": [8, 46, 513, 690, 703, 712, 735, 746, 752, 754, 760], "94": [8, 46], "spherical_mesh": [8, 52, 265, 746, 748, 758], "cell_width": [8, 44, 45, 46, 47, 51, 52, 53, 58, 274, 382, 390, 395, 451, 758], "icosahedral_method": [8, 758], "jigsaw_mesh_filenam": 8, "msh": 8, "jigsaw_geom_filenam": 8, "geom": 8, "jigsaw_jcfg_filenam": 8, "jig": 8, "jigsaw_hfun_filenam": 8, "spac": 8, "triangles_filenam": 8, "mesh_triangl": 8, "mpas_mesh_filenam": 8, "plot_cell_width": 8, "cell_width_filenam": [8, 58], "cellwidthvslatlon": 8, "cell_width_image_filenam": 8, "cellwidthglob": 8, "cell_width_colormap": 8, "3wbgy5": 8, "add_mesh_dens": 8, "vtk": 8, "convert_to_vtk": 8, "vtk_dir": 8, "base_mesh_vtk": 8, "extract": [8, 629, 633, 635, 637, 638, 690, 702, 758], "sphere": [8, 561, 562, 576, 590, 614, 689, 698, 700, 701, 745, 756, 757], "vtk_lat_lon": 8, "librari": [8, 249, 256, 257, 258, 262, 706, 711, 712, 716, 731, 732, 733, 734, 735, 736, 747, 757, 760], "moment": 8, "openmp_thread": [8, 11, 21, 66, 83, 88, 100, 115, 136, 151, 165, 172, 230, 240, 288, 309, 318, 364, 458, 466, 474, 527, 690, 695, 704, 711, 712], "gpmeti": [8, 713, 746], "divid": [8, 567, 581, 595, 619, 691, 712, 717, 739, 743], "partition_graph": [8, 62, 699, 703], "circumst": [8, 737], "wast": 8, "update_namelist_pio": 8, "config_pio_num_iotask": [8, 704], "config_pio_strid": [8, 704], "v2": [8, 690, 709, 713, 739, 746], "feel": [8, 704, 710, 711, 712], "safe": [8, 704, 706], "update_pio": [8, 62], "yourself": [8, 711, 735], "fact": [8, 11, 711], "culler": [8, 712], "make_graph_fil": [8, 704], "field": [8, 58, 60, 191, 197, 253, 256, 265, 273, 276, 444, 445, 486, 490, 653, 654, 677, 683, 684, 686, 690, 693, 695, 696, 697, 699, 700, 703, 711, 716, 723, 726, 737, 742, 744, 745, 746, 748, 749, 751, 752, 753, 754, 755, 756, 758, 759], "weight": [8, 60, 188, 203, 265, 376, 455, 466, 499, 677, 683, 684, 719, 737, 739, 746], "weight_field": [8, 60], "critic": [8, 265, 273, 710, 711, 746], "filename2": [8, 76], "simpl": [8, 491, 696, 705, 711, 712, 752, 760], "temperatur": [8, 111, 113, 207, 247, 248, 265, 518, 553, 686, 688, 690, 691, 693, 695, 696, 697, 699, 703, 704, 711, 720, 721, 726, 741, 742, 744, 745, 746, 749, 751, 752, 753, 754, 755, 759], "salin": [8, 265, 516, 517, 553, 686, 688, 690, 691, 693, 695, 696, 697, 699, 703, 704, 711, 726, 741, 742, 744, 745, 746, 749, 751, 752, 753, 754, 755, 759], "prognost": [8, 690, 693, 696, 716, 719, 720, 722, 723, 724, 730, 741, 742, 746, 749, 751, 753, 755, 759], "4proc": [8, 742, 746], "8proc": [8, 742, 746], "alter": [8, 486, 678, 679, 696, 704, 709, 711, 739, 742, 745, 746, 749, 751, 752, 753, 754, 755, 756, 757, 759], "skip_if_step_not_run": [8, 76, 704], "forc": [8, 165, 184, 185, 188, 189, 190, 192, 196, 198, 202, 203, 204, 212, 215, 253, 265, 443, 486, 487, 492, 494, 688, 692, 696, 699, 726, 752, 755, 757, 758, 759, 761], "failur": 8, "quiet": [8, 70, 76, 712], "report": 8, "threshold": [8, 265, 491, 696, 723, 745, 746, 748, 752, 754], "l1": [8, 76], "00000000000000e": 8, "l2": [8, 76, 604, 605, 606, 607, 612], "l_infin": 8, "linf": [8, 76, 604, 605, 606, 607, 612], "test_nightly_latest": 8, "1thread": [8, 742, 746], "2thread": [8, 742, 746], "test_20210616": 8, "further_valid": 8, "disabl": [8, 697, 716, 723, 746, 761], "check_output": [8, 76], "unlik": [8, 711, 712, 713, 726, 755, 759], "zero": [8, 175, 251, 486, 494, 678, 679, 680, 681, 682, 686, 691, 693, 695, 696, 703, 710, 712, 720, 724, 749, 752], "l1_norm": [8, 76], "l2_norm": [8, 76], "linf_norm": [8, 76], "nonzero": [8, 76, 700, 756], "easiest": [8, 711], "clobber": 8, "qualit": [8, 704], "judgment": 8, "compare_tim": 8, "rundir1": [8, 75], "92264": 8, "82317": 8, "percent": 8, "781019682649793": 8, "speedup": 8, "1208377370409515": 8, "hous": [9, 746], "sw": 9, "dict": [9, 11, 15, 17, 23, 25, 26, 31, 68, 72, 338, 421, 541, 605, 606, 611, 704, 710, 712], "max_memori": [11, 21], "run_as_subprocess": [11, 704], "smallest": [11, 704, 708, 739, 761], "unit": [11, 509, 511, 521, 568, 582, 596, 620, 704, 708, 742, 744, 751, 753, 761], "necessarili": [11, 12, 708, 746], "openmp": [11, 21, 66, 83, 88, 100, 115, 136, 151, 165, 172, 230, 240, 258, 259, 260, 261, 288, 318, 364, 458, 466, 474, 527, 704, 711, 731, 732, 733, 734, 736, 757], "parallel": [11, 20, 21, 701, 704, 705, 706, 707, 708, 711, 713, 731, 732, 733, 734, 735, 736, 757, 760, 761], "input_data": 11, "namelist_data": 11, "streams_data": 11, "machine_info": 11, "machineinfo": 11, "base_work_dir": [11, 26, 704], "log_filenam": [11, 26, 704], "At": [11, 26, 690, 704, 711, 712, 723, 727, 728, 752], "redirect": [11, 704], "database_compon": [12, 704], "work_dir_target": [12, 704], "seaic": [12, 351, 690, 704, 746, 760], "_database_root": 12, "out_nam": [14, 15, 17, 23, 24, 25, 704], "render": [17, 25, 704, 712], "available_cor": 18, "everi": [19, 686, 693, 704, 705, 706, 707, 708, 710, 711, 712, 742, 749], "subtask": 21, "runtime_setup": [21, 29, 87, 97, 99, 106, 112, 114, 121, 127, 132, 143, 145, 150, 155, 162, 169, 171, 178, 180, 223, 228, 234, 237, 239, 284, 287, 296, 299, 305, 327, 340, 345, 348, 350, 353, 369, 372, 381, 386, 389, 394, 399, 404, 407, 410, 430, 436, 450, 457, 465, 496, 538, 546, 564, 578, 592, 616, 642, 648, 661, 665, 674], "consist": [24, 62, 268, 553, 685, 693, 704, 711, 712, 713, 718, 737, 749, 752], "decomposit": [26, 157, 265, 276, 282, 708, 716, 718, 720, 722, 723, 730], "stdout_logg": 26, "goe": [26, 704, 711, 712], "regardless": [26, 690], "statu": 26, "prior": [28, 704], "constrain_resourc": [29, 87, 97, 99, 106, 112, 114, 121, 127, 132, 143, 145, 150, 155, 162, 169, 171, 178, 180, 223, 228, 234, 237, 239, 284, 287, 296, 299, 305, 327, 340, 345, 348, 350, 353, 369, 372, 381, 386, 389, 394, 399, 404, 407, 410, 430, 436, 450, 457, 465, 496, 538, 546, 564, 578, 592, 616, 642, 648, 661, 665, 674], "step_path": 34, "datestamp": 34, "dry": [34, 306, 315, 318, 320, 322, 687, 688, 696, 744, 748, 752, 758], "meta": 36, "importlib_resourc": 38, "blob": [38, 689, 698, 754], "7e9020a1b84726fdc6ba71ee2893119d1ee61e02": 38, "_legaci": 38, "link_nam": 39, "stackoverflow": 39, "55742015": 39, "7728169": 39, "symbol": [39, 704], "fileexistserror": 39, "try": [39, 704, 705, 706, 707, 711, 712, 713, 736, 746, 760], "isadirectoryerror": 39, "decomposition_test": [43, 245, 246, 704, 716, 760], "decompositiontest": [43, 247, 249, 250, 251, 257, 704], "turquois": 43, "mhoffman": 43, "ndarrai": [45, 52, 53, 58, 507, 604, 607, 612, 675, 676], "static": [46, 47, 712], "rule": 46, "thumb": 46, "close": [47, 157, 273, 693, 709, 745], "subclass": [48, 51, 52, 53, 57], "jigsawpi": [56, 704], "jigsaw_jig_t": 56, "finish": 57, "mesh_filenam": [60, 746], "graph_filenam": [60, 276, 277, 703], "graph_fil": [61, 62], "interact": [64, 690, 734, 735, 736, 760], "batch": 64, "slurm_job_id": 64, "substep": 66, "cpus_per_nod": 67, "step_is_subprocess": 69, "is_test_cas": 70, "steps_not_to_run": 70, "mpas_model_path": [71, 72, 74], "cached_step": 71, "copy_execut": [71, 72, 74, 760], "rundir2": 75, "norm": [76, 606, 608, 756], "infin": [76, 756], "toler": [76, 245, 716, 723], "exclud": [76, 746, 760], "assess": [80, 179, 244, 402, 690, 717, 725], "timestep": [80, 244, 716, 717], "calv": [80, 81, 83, 157, 163, 165, 244, 249, 257, 491, 696, 716, 717, 723, 752], "pre": [80, 229, 235, 250, 717, 722, 723, 730], "veloc": [80, 83, 96, 98, 100, 105, 142, 149, 151, 154, 157, 163, 165, 244, 256, 257, 412, 443, 512, 520, 686, 690, 691, 693, 695, 696, 697, 703, 704, 706, 712, 716, 717, 718, 719, 722, 723, 730, 741, 745, 746, 747, 749, 754, 756, 759, 760], "velo": [81, 83, 716], "config_adaptive_timestep_calvingcfl_fract": [81, 244], "calvingdtconverg": [81, 244], "calv_dt_frac": 83, "dt": [83, 332, 703, 717, 745, 754], "mesh_fil": [83, 165, 437, 438, 726], "twice": [83, 88, 100, 115, 151, 165, 172, 230, 240], "mismip": [83, 229, 230, 233, 256, 716, 729, 752], "humboldt": [83, 243, 252, 715, 716, 717, 725], "thwait": [83, 243, 252, 715, 716, 725], "specified_calving_veloc": [83, 165, 716, 717], "eigencalv": [83, 165, 716], "von_mises_stress": [83, 165, 716], "fo": [83, 96, 98, 100, 105, 142, 149, 151, 154, 157, 163, 165, 244, 249, 256, 257, 704, 716, 718, 719, 722, 723, 730], "circular": [85, 86, 718, 755], "four": [86, 96, 111, 157, 253, 265, 704, 726, 752, 755], "input_dir": [92, 107, 181], "velo_solv": [96, 98, 100, 105, 142, 149, 151, 154, 157, 163, 165, 249, 704], "sia": [96, 98, 100, 105, 142, 149, 151, 154, 157, 163, 165, 249, 704, 706, 716, 719, 722], "segment": [98, 113, 149, 163, 170, 238, 690], "thermal_solv": [111, 113], "enthalpi": [111, 113, 125, 130, 135, 139, 247, 248, 720, 721], "formul": [111, 113], "thermodynam": [111, 113, 716], "standardexperi": [122, 247], "kleiner": [125, 130, 248, 721], "benchmark": [125, 130, 135, 139, 248, 721], "enthalpybenchmark": [125, 130, 248], "sheet": [142, 149, 248, 249, 251, 253, 490, 696, 719, 720, 721, 722, 724, 726, 737, 746, 752], "eight": 142, "high": [144, 705, 732, 735, 746, 752, 753, 755, 759], "basal": [144, 208, 248, 253, 718, 720, 721, 722, 723, 726, 727, 728, 730], "friction": [144, 512, 520, 690, 718, 722, 723, 727, 728, 730, 746], "optim": [144, 722, 723, 727, 728, 730], "definit": [147, 704, 710, 711, 712], "region": [147, 196, 250, 254, 255, 687, 690, 692, 709, 713, 743, 746, 748, 749, 752, 759], "observ": [147, 212, 214, 253, 421, 423, 437, 438, 692, 709, 726, 727, 728, 748], "flow": [147, 700, 719, 743, 744, 745, 752, 754, 756], "speed": [147, 722, 723, 727, 728, 730], "distanc": [147, 491, 696, 711, 722, 723, 727, 728, 730, 742, 751, 759], "margin": [147, 722, 723, 727, 728, 730], "20km": [151, 703, 741, 759, 762], "calving_law": [157, 163, 165], "damag": [157, 163, 165, 723], "face_melt": [157, 163, 165], "law": [157, 163, 165, 716, 717, 723], "face": [157, 163, 165], "melt": [157, 163, 165, 207, 208, 253, 514, 520, 690, 696, 726, 737, 746, 749, 752], "proc_list": 157, "pair": [157, 606, 723, 756], "count": [157, 236, 690, 710, 746], "3km": [157, 163, 165], "forcing_fil": [165, 443], "damagecalv": [165, 716], "ismip6_retreat": [165, 716], "radial": [167, 168, 170, 172, 177, 251, 718, 719, 724], "symmetr": [167, 168, 170, 172, 177, 251, 718, 719, 720, 724, 751], "hydrologi": [167, 251, 704, 719], "hydrolog": [168, 170, 172, 177, 251, 724], "three": [168, 277, 697, 711, 712, 722, 725, 726, 730, 735, 746, 753, 756], "hydroradi": [168, 177, 179, 251], "exact": [175, 179, 251, 689, 698, 700, 705, 724], "precomput": 175, "steadi": [177, 251, 724, 752], "reach": [177, 752], "drift": 179, "ismip6": [184, 185, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 202, 203, 204, 206, 207, 208, 209, 212, 215, 216, 253, 690, 726], "atmospher": [184, 443, 652, 690, 692, 758], "8km": [185, 192, 204, 212, 215, 726, 755], "polarstereo": [185, 192, 204, 212, 215, 253, 726], "regrid": [185, 204, 207, 212, 253, 726], "ismip6forc": [185, 204, 212, 253], "ismip6_grid_fil": [188, 203], "mapping_fil": [188, 203], "mali_mesh_fil": [188, 192, 197, 198, 203, 208, 215, 726], "method_remap": [188, 192, 198, 203, 208, 215, 726], "remap": [188, 191, 192, 193, 197, 198, 199, 203, 206, 208, 209, 215, 216, 253, 265, 276, 657, 702, 726], "polarstero": [188, 203], "unstructur": [188, 203, 253, 726, 757], "esmf_regridweightgen": [188, 203], "source_grid_fil": 189, "source_grid_scripfil": 189, "scripfil": 189, "y": [189, 507, 513, 686, 687, 688, 690, 693, 695, 696, 703, 704, 711, 712, 734, 736, 742, 744, 747, 749, 751, 752, 754, 759], "dimens": [189, 744, 753], "smb": [189, 191, 192, 197, 198, 253, 726], "scrip": [189, 253, 690, 712, 713, 746], "input_fil": [190, 192, 196, 198, 208, 215], "mass": [190, 196, 253, 726, 737, 756], "racmo_clim_fil": 191, "output_clim_ismip6_fil": 191, "output_file_fin": 191, "anomali": [191, 197, 253, 726, 759], "racmo": [191, 196, 198, 726], "1995": [191, 726], "2017": [191, 726, 739], "correct": [191, 207, 253, 265, 706, 726], "output_fil": [192, 193, 197, 198, 199, 208, 209, 215, 216, 704], "mali_mesh_nam": [192, 198, 208, 215, 726], "nativ": [192, 198, 215, 253, 726], "remapped_file_temp": [193, 199, 209, 216], "temporari": [193, 199, 207, 208, 209, 216], "rotat": [198, 700, 726, 745, 756], "check_model_opt": 202, "scenario": [202, 726], "period_endyear": [202, 726], "basalmelt": [204, 206], "coeff": 204, "oceanbas": [206, 253], "basin_fil": 207, "coeff_gamma0_deltat_fil": 207, "combined_file_temp": [207, 208], "imbie2": [207, 253, 726], "basin": [207, 253, 690, 699, 726, 755], "rate": [207, 514, 520, 604, 612, 689, 696, 698, 700, 720, 737, 745, 746, 752, 754, 756], "coeffici": [207, 253, 318, 322, 688, 703, 712, 726, 744, 747, 755, 759], "gamma0": 207, "process_ob": [212, 214], "thermal": [212, 215, 247, 248, 253, 512, 520, 720, 726, 755], "cmip": [212, 214, 253], "oceantherm": [214, 253], "kogebugt": [227, 255], "smoke": [233, 256, 690, 729, 730], "14km": [235, 730], "landice_model": [243, 704, 706, 713], "core_path": [243, 246, 685, 704, 713], "submodul": [243, 685, 704, 706, 711, 712, 760], "guarante": [243, 685, 706], "recurs": [243, 685, 705, 706, 711, 712, 760], "calving_dt_converg": [243, 252, 715, 725], "circular_shelf": [243, 252, 715, 716, 725, 760], "hydro_radi": [243, 252, 715, 716, 725, 761], "ismip6_forc": [243, 252, 715, 725], "kangerlussuaq": [243, 252, 715, 725], "koge_bugt_": [243, 252, 715, 725], "mismipplu": [243, 252, 715, 725], "physic": [244, 711, 716, 717, 723, 725, 754], "addition": [244, 245, 246, 247, 248, 251, 686, 687, 688, 690, 693, 695, 696, 697, 699, 703, 723, 726, 731, 732, 733, 734, 736], "globalstat": [244, 746], "hardcod": 244, "smaller": [244, 265, 690, 760], "cost": [244, 729], "analyz": [244, 548, 699, 710, 756], "annoy": 244, "occasion": 244, "fine": [244, 688, 704, 711, 712], "logic": [244, 711, 742, 751], "circularshelf": 245, "horizont": [245, 246, 247, 248, 251, 265, 455, 487, 492, 494, 497, 499, 502, 504, 533, 544, 686, 690, 691, 693, 695, 696, 710, 712, 719, 720, 724, 737, 742, 743, 744, 746, 747, 748, 749, 751, 752, 753, 754, 758, 759], "planar_hex": [245, 246, 247, 248, 251, 686, 687, 688, 693, 695, 696, 697, 703, 704, 711, 712], "make_planar_hex_mesh": [245, 246, 247, 248, 251, 686, 687, 688, 693, 695, 696, 697, 703, 704, 711, 712], "privat": [245, 246, 247, 248, 251, 710], "_setup_circular_shelf_initial_condit": 245, "circular_shelf_viz": [245, 718], "200": [245, 246, 247, 248, 703, 704, 711, 719, 720, 721, 752], "ureconstructx": 245, "ureconstructi": 245, "2000": [246, 693, 704, 719, 720, 749, 752, 759], "durat": [246, 248, 249, 250, 251, 256, 257, 487, 541, 686, 687, 688, 690, 693, 695, 696, 697, 704, 719, 746, 751, 754], "dome_varres_grid": [246, 704], "server_base_url": [246, 713], "_setup_dome_initial_condit": [246, 248], "dome_viz": [246, 704, 719], "former": [246, 247, 249, 251, 257], "25": [247, 248, 691, 695, 712, 720, 744, 751, 753, 755], "globalstatsoutput": [247, 693, 696], "runexperi": 247, "letter": [247, 711, 712, 726], "_setup_eismint2_initial_condit": 247, "000": [247, 248, 251, 712, 720, 721, 724], "basaltemperatur": 247, "heatdissip": 247, "restarttest": [247, 249, 250, 251, 257, 686, 690, 693, 704], "et": [248, 251, 313, 711, 715, 719, 720, 721, 724, 739, 742, 743, 744, 745, 751, 752, 755, 756, 759], "al": [248, 251, 313, 711, 715, 719, 720, 721, 724, 739, 742, 743, 744, 745, 751, 752, 755, 756, 759], "2015": [248, 251, 711, 721, 724, 742, 751, 755, 759], "air": [248, 720, 721], "temper": 248, "heat": [248, 486, 512, 721, 749, 752], "basal_heat_flux": [248, 721], "042": [248, 721], "k": [248, 265, 712, 720, 721, 739, 747], "surface_air_temperatur": [248, 721], "243": [248, 721], "100": [248, 514, 690, 693, 699, 703, 711, 712, 716, 720, 721, 739, 752, 755, 759], "phase1_surface_air_temperatur": [248, 721], "phase2_surface_air_temperatur": [248, 721], "268": [248, 721], "150": [248, 721, 745, 755, 756], "phase3_surface_air_temperatur": [248, 721], "analyt": [248, 322, 688, 691, 701, 712, 718, 719, 744, 747, 755, 757, 761], "mat": [248, 704], "400": [248, 721], "270": [248, 721], "dai": [249, 257, 297, 322, 478, 567, 581, 595, 619, 686, 689, 690, 695, 698, 700, 704, 711, 722, 730, 742, 744, 745, 746, 751, 752, 758, 759], "coars": [249, 257, 722, 730, 746, 752], "20": [249, 297, 478, 686, 690, 693, 695, 696, 703, 704, 711, 722, 742, 744, 749, 751, 752, 753, 755, 756, 759], "albany_input": [249, 256], "yaml": [249, 256, 736], "gis20km": 249, "210608": [249, 257], "smoketest": [249, 256, 704], "highresmesh": [249, 257], "glacier": [250, 254, 257, 716, 723, 727, 729, 730], "meshgen": [250, 254, 255], "restartn_test": 250, "plu": [250, 708, 723], "_setup_hydro_radial_initial_condit": 251, "thin": [251, 265, 491, 492, 494, 696, 724, 746, 748, 752], "numer": [251, 265, 704, 737], "bueler": [251, 719, 724], "iscontrol": 251, "hydro_radial_viz": [251, 724], "spinuptest": 251, "steadystatedrifttest": 251, "month": [251, 696, 720, 723, 724, 738, 746, 750, 752, 759], "waterthick": 251, "waterpressur": 251, "ismip6_": 253, "intercomparison": [253, 726, 752], "cmip6": [253, 726], "protocol": [253, 726, 752], "ocean_thermal_ob": 253, "process_smb": [253, 726], "process_smb_racmo": [253, 726], "process_basal_melt": [253, 726], "process_thermal_forc": [253, 726], "build_mapping_fil": 253, "destin": 253, "parameter": [253, 726, 746, 749, 758], "util": [253, 705, 726], "500m": [255, 728], "koge": [255, 728], "bugt": [255, 728], "surfacespe": 257, "load_dev_compass_1": [258, 259, 260, 261, 262, 263, 711, 712], "0_anvil_intel_impi": [258, 262], "sh": [258, 259, 260, 261, 262, 263, 706, 707, 711, 712, 731, 732, 733, 734, 736, 760], "openmpi": [258, 262, 706, 709, 731, 732, 733, 760], "mvapich": [258, 262, 731], "impi": [258, 262, 731, 733], "ifort": [258, 259, 262, 731, 732], "ve": [258, 259, 261, 263, 704, 711], "0_anvil_gnu_openmpi": 258, "gfortran": [258, 259, 262, 706, 731, 732], "0_chrysalis_intel_openmpi": 259, "0_chrysalis_gnu_openmpi": 259, "soon": [260, 726, 760], "0_compy_intel_impi": 260, "architectur": 261, "0_cori": 261, "haswell_intel_mpt": 261, "nersc": [261, 262, 263, 734, 736], "haswell_gnu_mpt": 261, "load_compass_env": [262, 706, 760], "right": [262, 265, 690, 704, 706, 711, 712, 713, 717, 739, 745, 753, 759, 760], "gnu": [262, 706, 733, 735, 760], "lib": 262, "intel": [262, 706, 711, 712, 735], "mpt": [262, 734], "pm": [262, 736, 760], "mpich": [262, 706, 709, 736, 760], "compymcnodefac": [262, 735], "perlmutt": [262, 735, 760], "pretti": [262, 704, 705, 711, 713], "forg": [262, 709, 760], "linux": [262, 706, 735], "configure_compass_env": [262, 706, 707, 711, 712], "conda_path": [262, 706], "osx": [262, 735], "clang": [262, 706], "0_": 262, "alpha": 263, "2_pm": 263, "cpu_gnu_mpich": 263, "expand": [265, 739], "grid_1d": 265, "generate_1d_grid": 265, "star": [265, 454, 455, 463, 487, 492, 494, 499, 682, 684, 693, 696, 711, 742, 744, 749, 751, 752, 753, 754, 759, 762], "init_vertical_coord": [265, 711], "minlevelcel": [265, 677, 679, 680, 681, 682, 683, 684], "maxlevelcel": [265, 677, 678, 679, 680, 681, 682, 683, 684, 704, 712], "cellmask": [265, 677, 680, 683, 684], "zmid": [265, 677, 683, 684], "restingthick": [265, 677, 682, 683, 684, 704, 712], "bottomdepth": [265, 677, 678, 680, 681, 682, 683, 684, 704, 711, 712], "spheric": [265, 270, 689, 690, 701, 745, 746, 748, 757, 758], "cullmeshstep": [265, 690], "cull_mesh": [265, 270], "natur": [265, 273, 746], "earth": [265, 273, 746], "coverag": [265, 273, 716, 758], "north": [265, 273, 690, 742, 746], "antarct": [265, 273, 690, 713, 726, 737, 746, 752], "ground": [265, 273, 490, 491, 492, 494, 696, 718, 730, 746, 752], "bedmachineantarctica": [265, 273, 746], "transect": [265, 273, 507, 690, 713, 746], "passag": [265, 273, 746], "with_critical_passag": [265, 273], "seed": [265, 273, 277], "flood": [265, 273, 687, 746], "lock": [265, 273], "floodplainmeshstep": 265, "preserve_floodplain": [265, 270, 273, 274, 451], "srtm15_plus_earth_relief_15": 265, "elev": [265, 273, 677, 683, 684, 696, 739, 746, 748], "floodplain_elev": [265, 746, 748], "inject_bathymetri": 265, "inject_preserve_floodplain": 265, "compute_haney_numb": 265, "1991": [265, 737], "measur": [265, 746, 755], "gradient": [265, 711, 737, 742, 751, 755, 759], "tilt": 265, "r_": 265, "x1": 265, "frac": [265, 704, 711, 739, 759], "z_": [265, 739], "textrm": 265, "c_2": 265, "c_1": 265, "edg": [265, 267, 746, 749, 753], "adjac": [265, 739, 749], "middl": [265, 677, 683, 684, 696, 752], "boussinesq": 265, "adjust_ssh": 265, "imbal": 265, "period": [265, 412, 421, 494, 536, 544, 686, 687, 688, 691, 693, 695, 697, 698, 703, 704, 711, 712, 717, 726, 742, 744, 748, 749, 751, 754, 758, 759], "hour": [265, 688, 690, 691, 696, 697, 704, 734, 736, 737, 752, 753, 754, 760], "translat": 265, "compens": [265, 737], "repeat": [265, 726], "fix": [265, 277, 513, 689, 696, 704, 749, 752], "elimin": 265, "substanti": [265, 706, 711], "prevent": [265, 486, 696, 704, 737, 752, 758], "caus": [265, 706, 736, 739], "instabl": 265, "agnost": 265, "light": [265, 755, 759], "buoyanc": [265, 277, 703], "isopycn": [265, 277], "passiv": [265, 277, 561], "remap_particl": 265, "plot_initial_st": 265, "histogram": [265, 278], "bottom": [265, 513, 677, 678, 679, 680, 681, 682, 683, 684, 688, 690, 696, 703, 711, 713, 739, 742, 744, 747, 749, 751, 752, 753, 754, 755, 759], "depth": [265, 400, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 690, 691, 696, 703, 711, 712, 713, 739, 742, 746, 747, 749, 751, 752, 753, 754, 755, 758, 759], "distribut": [265, 689, 698, 699, 700, 703, 746, 755, 757, 759], "plot_vertical_grid": 265, "bound": [265, 759], "ds_mesh": 267, "layer_thick": 267, "show_progress": 267, "rx1": 267, "bar": [267, 273, 509, 511], "haney_edg": 267, "haney_cel": 267, "iteration_count": 268, "modify_mask": 269, "base_mesh_step": 270, "do_inject_bathymetri": 270, "sphericalbasestep": [270, 690], "criteria": 270, "with_cav": 273, "custom_critical_passag": 273, "custom_land_blockag": 273, "use_progress_bar": 273, "process_count": 273, "blockag": [273, 746], "geojson": [273, 712], "cellseedmask": 273, "floodplain": [273, 687, 743, 748], "problemat": [273, 704], "init_filenam": [276, 277, 400, 703], "particle_filenam": [276, 277, 703], "posit": [276, 277, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 696, 730, 739, 759], "goal": 276, "currentblock": 276, "compli": 276, "nearest": [276, 438, 745], "neighbor": [276, 746], "form": [276, 277, 705, 712, 759, 761], "n_vert_level": 277, "vert_seed_typ": 277, "n_buoy_surf": 277, "pot_dens_min": 277, "1028": [277, 755], "pot_dens_max": 277, "1030": [277, 755], "spatial_filt": 277, "downsampl": 277, "seed_cent": 277, "seed_vertex": 277, "add_nois": 277, "cfl_min": 277, "005": 277, "densecent": 277, "southernoceanplanar": 277, "southernoceanxyz": 277, "spatial": [277, 758], "filter": 277, "amg": 277, "epsilon": [277, 747], "vertex": 277, "gaussian": [277, 698, 754, 757], "nois": 277, "cfl": [277, 717], "perturb": [277, 742, 745, 751, 752], "input_file_nam": 278, "output_file_nam": 278, "grid_filenam": 279, "out_filenam": [279, 676], "shorter": [294, 463, 716, 720, 741], "energi": [297, 478, 704, 711, 742, 751], "dam": [306, 309, 311, 313, 687, 743], "wet": [306, 315, 687, 696, 748, 752, 758], "dambreak": [307, 687], "experiment": [313, 687, 726, 743], "rom": [313, 322, 687, 688, 743, 744], "warner": [313, 743, 744], "2013": [313, 743, 744, 759], "slope": [315, 318, 320, 322, 688, 737, 744, 749, 755, 756, 759], "coord_typ": [316, 318, 320, 454, 455, 463, 688, 711, 739, 742, 744, 749, 751, 752, 753, 754, 759], "sigma": [316, 318, 320, 688, 744, 752], "single_lay": [316, 688, 744, 752], "dryingslop": [316, 688], "damping_coeff": [318, 322, 688], "rayleigh": [318, 322, 688, 690, 744, 746], "damp": [318, 322, 688, 690, 744, 746], "datatyp": 322, "cosinebel": [328, 331, 335, 689, 710], "rmsevalu": 329, "squar": [329, 548, 689, 697, 698, 754], "ncell": [329, 548, 690, 704, 711, 712], "hh": [332, 568, 582, 596, 620], "ss": [332, 568, 582, 596, 620], "member": [338, 343, 351, 354, 437, 559, 663, 667, 690, 692, 696, 699, 703, 712, 713, 741, 746, 748], "timeseriesstatmonthli": 343, "daili": [343, 746], "stage": [349, 704, 746, 752], "diagnost": [351, 354, 690, 713, 718, 731, 733, 734, 735, 736, 746, 760], "meridion": [351, 354, 690, 742, 751, 753, 759], "overturn": [351, 354, 502, 515, 690, 696, 752], "circul": [351, 354, 690, 752], "filesfore3sm": [354, 356, 358, 360, 362, 690, 704], "resources_from_config": 364, "biogeochemistri": [370, 373, 690, 711, 712], "init_subdir": 370, "2d": [376, 453, 455, 458, 461, 463, 466, 469, 485, 487, 499, 562, 576, 590, 614, 749], "output_filenam": 400, "short_mesh_nam": [401, 690], "long_mesh_nam": [401, 690], "turbul": [411, 412, 414, 416, 418, 471, 691, 711, 712, 747], "doubli": [412, 536, 544, 691, 712, 754], "storm": [421, 428, 434, 437, 443, 748], "station": [421, 423, 424, 437, 438, 692, 748, 758], "frmt": 421, "datetim": [421, 704], "min_dat": [421, 423], "max_data": 421, "pointstats_fil": [421, 422, 437], "pointwisestat": [421, 422, 437, 438, 692, 748], "labl": 421, "legend": [421, 712], "obs_fil": 423, "obs_typ": 423, "max_dat": 423, "timeseri": [423, 692, 748, 758], "station_fil": [424, 437], "contiain": 437, "pointstat": 437, "stations_fil": 438, "wind": [443, 690, 692, 699, 748, 755, 759], "plot_interv": 443, "snap": [443, 444, 653], "wind_fil": 443, "pres_fil": 443, "grid_fil": [443, 444, 629, 652, 653], "data_fil": [444, 653], "orig_data": [445, 654], "interp_data": [445, 654], "var_label": 445, "var_abrev": 445, "iceshelf2d": [455, 463, 693, 704, 705, 711, 712], "with_frazil": [458, 667, 670, 693, 741, 762], "cross": [469, 483, 507, 513, 696, 718, 751, 752, 753], "gotm": [471, 685, 694, 711, 712, 740, 750], "internalwav": [472, 478, 481, 695], "in_forcing_fil": 486, "out_forcing_fil": 486, "out_forcing_link": 486, "evapor": [486, 696, 752], "isomip": [486, 487, 491, 492, 494, 497, 502, 504, 507, 519, 696, 752], "evaporationflux": 486, "seaicesalinityflux": 486, "seaiceheatflux": 486, "salt": 486, "northern": [486, 690, 696, 711, 742, 749, 751, 752, 759], "boundari": [486, 687, 688, 690, 696, 698, 709, 722, 737, 742, 749, 751, 752, 753, 759, 761], "spillwai": [486, 687, 696], "rise": [486, 696, 749, 752], "run_dur": [487, 703], "vertical_coordin": [487, 492, 494, 499], "tidal_forc": [487, 494, 504], "time_varying_forc": [487, 492, 494], "thin_film_pres": [487, 491, 492, 494, 499, 696], "ocean0": [487, 492, 494, 497, 502, 504, 507, 519, 696], "ocean1": [487, 492, 494, 497, 502, 504, 507, 519, 696], "ocean2": [487, 492, 494, 497, 502, 504, 507, 519, 696], "dsmesh": [490, 507, 519, 704, 711, 712], "dsgeom": 490, "min_ocean_fract": [490, 752], "bisicl": [490, 491, 696, 752], "process_input_geometri": [490, 696], "dsmask": 490, "regioncellmask": 490, "infilenam": 491, "outfilenam": 491, "filtersigma": 491, "minicethick": 491, "scale": [491, 696, 703, 709, 746, 747, 752, 755, 756, 759, 760], "geometri": [491, 687, 696, 749, 752, 759], "scheme": [491, 696, 700, 702, 726, 748, 752, 753, 756], "film": [491, 492, 494, 696, 752], "time_varying_load": 494, "isomipplu": [494, 696], "decreas": [494, 721, 752], "grow": [494, 738], "tidal": [494, 628, 640, 649, 688, 696, 702, 744, 752, 758], "misomip1": 497, "barotrop": [502, 510, 692, 696, 702, 748, 752, 758], "slice": 506, "monthli": 506, "infold": [507, 519], "streamfunctionfold": 507, "outfold": [507, 508, 519], "expt": [507, 510, 519, 720], "sectioni": 507, "showprogress": 507, "plotter": [507, 519], "hold": [507, 519], "folder": [507, 519], "streamfunct": [507, 510, 515, 752], "axi": [507, 704, 711, 717, 756], "plane": 507, "montli": 507, "oceanmask": 507, "cavitymask": 507, "oceanpatch": 507, "patchcollect": 507, "polygon": 507, "cover": [507, 696, 726, 741, 746], "cavitypatch": 507, "horiz": 507, "vert": 507, "sectionmask": 507, "progressbar": 507, "framespersecond": 508, "mp4": [508, 744, 752], "movi": [508, 688, 696, 744, 752], "ffmpeg": 508, "da": [509, 511, 521], "nameintitl": [509, 511, 521], "vmin": [509, 510, 511, 514, 515], "vmax": [509, 510, 511, 514, 515], "cmap": [509, 511], "cmap_set_und": [509, 511], "floor": [509, 516, 517, 518, 712, 739, 747, 749, 752], "nae": [509, 511], "subfold": [509, 511], "colorbar": [509, 510, 511, 514, 515], "colormap": [509, 511, 613], "color": [509, 511, 521], "chosen": [510, 704, 726], "oceandomain": 511, "cmap_scal": 511, "logarithm": 511, "drive": [512, 520, 688, 752], "halin": 512, "figsiz": [513, 521], "sshmax": 520, "advect": [522, 533, 544, 547, 550, 561, 689, 698, 700, 716, 741, 745, 753, 754], "merri": [522, 523, 525, 527, 529, 531, 697, 753], "round": [522, 523, 525, 527, 529, 531, 697, 710, 745, 753], "merrygoround": [525, 697], "5m": [527, 753], "planar": [534, 536, 540, 544, 711, 754], "convergence_test_cas": 540, "convergencetestcas": 540, "rms_error": 548, "mesoscal": [552, 699, 746, 755], "profil": [553, 688, 690, 691, 693, 696, 699, 703, 707, 747, 752, 755, 759], "with_particl": [555, 559, 663, 667, 699, 703], "with_surface_restor": [555, 557, 559], "three_lay": [555, 557, 559, 699], "lagrangian": [555, 741, 755, 759], "restor": [555, 557, 559, 696, 752, 755, 759], "equilibrium": [555, 559, 663, 667, 720, 755], "continent": [555, 557, 559, 690, 746, 752, 755], "algorithm": [561, 696, 704, 737, 752, 757], "transport": [562, 576, 590, 614, 690, 700, 745, 756], "spheretransport": [562, 576, 590, 614], "correlatedtracers2d": [565, 567, 571, 573, 700, 756], "dt_minut": [567, 581, 595, 619], "minut": [567, 568, 581, 582, 595, 596, 619, 620, 686, 687, 690, 691, 693, 695, 704, 711, 716, 726, 742, 749, 756, 762], "24": [567, 581, 595, 619, 689, 690, 696, 698, 745, 752, 754, 756], "divergent2d": [579, 581, 585, 587, 700], "nondivergent2d": [593, 595, 599, 601, 700], "dlambda": [604, 606, 607, 612], "compute_error_from_output_ncfil": [604, 612], "tracer1": [604, 606, 607, 612, 697, 753, 756], "linfrat": [604, 612], "l2rate": [604, 612], "lev": 605, "netcdf4": [605, 610, 711, 713], "tcdata": [606, 611], "appx": [606, 612], "linf1": [606, 607], "linf2": [606, 607], "tracer2": [606, 607, 753, 756], "linf3": [606, 607], "tracer3": [606, 607, 753, 756], "l21": [606, 607], "l22": [606, 607], "l23": [606, 607], "filament": [606, 608, 756], "sec": [606, 745, 759], "lspt2012": [606, 608], "ax": [607, 608, 609], "tcname": [607, 608, 609, 610, 611, 612], "resval": [607, 608, 609, 612], "matplotlib": [607, 610, 613, 711, 712], "instanc": [607, 610, 711, 712], "u1": [609, 734, 736], "o1": 609, "u2": 609, "o2": [609, 704], "u3": 609, "o3": 609, "shoot": [609, 756], "fig": [610, 704], "row": 610, "csv": [611, 756], "consol": 612, "compute_convergence_r": 612, "cmap_filenam": 613, "rgb": 613, "ncar": 613, "ncl": 613, "www": 613, "ucar": 613, "edu": 613, "graphic": 613, "color_table_galleri": 613, "shtml": 613, "usabl": 613, "rotation2d": [617, 619, 623, 625, 700, 756], "tos": 619, "harmon": [629, 630, 631, 701, 702, 757, 758], "constitu": [629, 702, 758], "harmonic_analysis_fil": 629, "constit": 629, "tpxo": [629, 630, 631, 633, 635, 637, 638, 702, 758], "tpxo_vers": [629, 758], "inject": 630, "calcul": [632, 704, 726], "consititu": 632, "idx": [633, 638], "hurrican": [640, 685, 694, 740, 750], "topograph": [652, 702, 746, 758], "drag": [652, 688, 702, 712, 744, 747], "rinv_fil": 652, "rinv": 652, "wave_drag_fil": 652, "bathymetr": [657, 758], "zonal": [662, 703, 742, 746, 751, 753, 759], "invari": [662, 693, 746], "southern": [662, 690, 703, 711, 742, 746, 751, 752, 759], "with_analysi": 667, "meter": [675, 676, 722, 723, 727, 728, 730, 749], "stretch": [677, 683, 684, 739], "midpoint": [677, 683, 684], "reftopdepth": [677, 680, 681, 683, 684], "ref": [677, 683, 684, 690, 726, 746], "refzmid": [677, 683, 684, 704, 711], "refbottomdepth": [677, 678, 679, 680, 681, 683, 684, 704, 711, 712], "refinterfac": [677, 683, 684], "nvertlevel": [677, 683, 684, 704, 711, 739], "vertcoordmovementweight": [677, 683, 684, 704, 712], "movement": [677, 683, 684], "consider": [677, 683, 684], "sometim": [677, 683, 684, 704, 708, 712, 746], "partial": [678, 679, 711, 739, 742, 749, 751, 752, 753, 754, 759], "seafloor": [678, 680, 681, 682, 739], "rest": [682, 710, 712, 739, 746], "unstretch": 682, "dam_break": [685, 694, 740, 750], "drying_slop": [685, 694, 740, 750], "ice_shelf_2d": [685, 694, 704, 711, 712, 737, 740, 741, 750, 762], "internal_wav": [685, 694, 740, 750], "isomip_plu": [685, 694, 740, 750], "merry_go_round": [685, 694, 740, 750], "planar_converg": [685, 694, 704, 740, 750], "soma": [685, 694, 740, 750], "sphere_transport": [685, 694, 740, 750], "spherical_harmonic_transform": [685, 694, 740, 750], "tide": [685, 694, 740, 748, 750, 757], "ziso": [685, 694, 704, 705, 711, 712, 739, 740, 741, 750, 761, 762], "momentum": [686, 695], "diffus": [686, 695, 716, 719, 741, 753, 755], "decomptest": [686, 690], "threadstest": [686, 690], "frequenc": [686, 693], "rpetest": [686, 695, 704, 711], "144": [686, 690, 704, 711], "intens": [686, 695, 697], "cullcel": 687, "tailor": [687, 688], "multipanel": 687, "evolut": [687, 688, 696, 719, 743], "site": [687, 707, 743], "subplot": 687, "accept": [687, 688], "plain": 687, "coord": [688, 752], "plug": 688, "background": [688, 705, 712, 745, 751, 753, 754], "emploi": [688, 704], "0025": [688, 744], "grain": 688, "interv": [688, 692, 704, 748], "globalconverg": [689, 711, 712], "studi": [689, 698, 709, 711, 712, 745, 746, 754, 755, 756], "globe": [689, 698, 745, 746, 756], "ico": [689, 745], "shape": [689, 698, 700, 745], "dt_per_km": [689, 745], "rmse": [689, 698], "realist": [690, 704, 709, 730, 737, 746, 748, 749, 755, 758, 761], "gitconfig": [690, 713, 746, 748, 758], "enter": [690, 713, 746, 748, 758], "get_e3sm_mesh_nam": 690, "mesh_prefix": 690, "kml": 690, "e3smv": 690, "qu240e2r1": [690, 746], "qu240kml16e3smv2r1": [690, 746], "forwardtestcas": 690, "performancetest": 690, "land_ice_flux": [690, 696], "forward_": [690, 746], "focus": [690, 746, 755], "init_ntask": [690, 746, 748], "init_min_task": [690, 746, 748], "forward_ntask": [690, 746, 748, 758], "forward_min_task": [690, 746, 748, 758], "subdivid": 690, "asid": 690, "pure": 690, "ec30to60mesh": 690, "refin": [690, 692, 697, 746, 748, 753], "atlant": [690, 746], "pacif": [690, 746], "arctic": [690, 713, 746], "so12to60": 690, "so12to60mesh": 690, "1296": 690, "band": 690, "cycl": [690, 746], "gulf": 690, "wc14mesh": 690, "720": [690, 752], "america": 690, "628": 690, "uk": [690, 746], "metoffic": [690, 746], "estim": [690, 737, 746], "biogeochemsitri": 690, "stress": [690, 737, 759], "shortwav": 690, "ecosystem": [690, 731, 746], "sshadjust": [690, 693, 696], "closer": [690, 710], "clearli": 690, "wrong": 690, "half": [690, 711, 742, 749, 751, 752, 759], "analysistest": 690, "dailyoutputtest": 690, "timeseriesstatsdaili": [690, 746], "timeseriesstatsmonthli": [690, 746], "averag": [690, 696, 737, 746, 752], "rapid": [690, 716], "artifici": 690, "global_ocean_mesh": 690, "d_": [690, 704], "strong": [690, 711, 751, 752], "1e": [690, 712, 759], "jinja": 690, "ec30to60dynamicadjust": 690, "so12to60dynamicadjust": 690, "damped_adjustment_3": 690, "weaken": 690, "4e": 690, "wc14dynamicadjust": 690, "damped_adjustment_6": 690, "prepar": [690, 746, 748, 758], "assembled_fil": [690, 746], "ocean_initial_condit": 690, "oceaninitialcondit": 690, "inputdata": 690, "ocn": 690, "mesh_short_nam": 690, "_no_xtim": 690, "ocean_graph_partit": 690, "oceangraphpartit": 690, "wide": [690, 707, 749, 753, 755], "min_graph_s": 690, "max_graph_s": 690, "power": [690, 754], "1200": [690, 703, 719], "core_count": 690, "seaice_initial_condit": 690, "seaiceinitialcondit": 690, "keep_var": 690, "areacel": 690, "cellsoncel": 690, "edgesoncel": 690, "fcell": [690, 704, 711], "indextocellid": 690, "latcel": 690, "loncel": 690, "meshdens": 690, "nedgesoncel": 690, "verticesoncel": 690, "angleedg": 690, "cellsonedg": 690, "dcedg": 690, "dvedg": 690, "edgesonedg": 690, "fedg": [690, 704, 711], "indextoedgeid": 690, "latedg": 690, "lonedg": 690, "nedgesonedg": 690, "verticesonedg": 690, "weightsonedg": 690, "xedg": [690, 704, 711], "yedg": 690, "zedg": 690, "areatriangl": 690, "cellsonvertex": 690, "edgesonvertex": 690, "fvertex": [690, 704, 711], "indextovertexid": 690, "kiteareasonvertex": 690, "latvertex": 690, "lonvertex": 690, "xvertex": [690, 704, 711], "yvertex": 690, "zvertex": 690, "landicemask": [690, 752], "cice": 690, "coupl": [690, 707, 709, 720, 737, 746], "nomask": 690, "diagnostics_fil": 690, "diagnosticsfil": 690, "aggreg": 690, "get_aggregator_by_nam": 690, "region_group": 690, "subbasin": 690, "mpas_analysi": 690, "region_mask": 690, "ref_dat": 690, "moc": 690, "repres": [690, 711, 712, 726, 739, 745, 746, 749], "_moc_masks_and_transect": 690, "stereograph": [690, 713, 746], "map_": 690, "_to_0": 690, "5x0": 690, "5degree_bilinear": 690, "_to_6000": 690, "0x6000": 690, "0km_10": 690, "0km_antarctic_stereo_bilinear": 690, "0km_arctic_stereo_bilinear": 690, "k\u00e4rn\u00e4": [691, 747], "cm": [691, 743], "ever": [691, 705], "tropic": [692, 748], "cyclon": [692, 748], "dequ120at30cr10rr2": 692, "dequ120at30cr10rr2mesh": 692, "inherit": [692, 705], "coastal_tool": 692, "coastal_refined_mesh": 692, "interpolateatmforc": 692, "cfsv2": [692, 748], "reanalysi": [692, 748], "hourli": [692, 748], "createpointstatsfil": 692, "noaa": [692, 748], "usg": [692, 748], "squash": [693, 696, 703, 739, 752], "config_use_frazil_ice_form": 693, "config_frazil_maximum_depth": 693, "dirti": 693, "cut": 693, "tendaytest": 695, "timeseriesstatsmonthlyoutput": 696, "update_evaporation_flux": 696, "mimic": [696, 710], "indefinit": 696, "due": [696, 717, 752], "freshwat": [696, 741, 746, 749], "factor": [696, 744, 753, 755, 758], "interpolate_ocean_mask": 696, "interpolate_geom": 696, "geometr": 696, "bottomdepthobserv": 696, "bedrock": 696, "oceanfracobserv": 696, "landicefract": 696, "smootheddraftmask": 696, "reli": [696, 704, 711], "nx_thin_film": 696, "runawai": 696, "incom": 696, "meltwat": [696, 752], "landicepressureforc": 696, "landicedraftforc": 696, "isomip_plus_forc": [696, 752], "time_varying_ocean0": 696, "consecut": 696, "land_ice_forc": 696, "motion": [696, 752], "front": [696, 759], "held": [696, 704], "landicefractionforc": 696, "presur": 696, "readi": [696, 704, 711, 712, 734, 736], "fuller": 696, "repeatedli": [696, 717, 752], "plot_streamfunct": [696, 752], "isomip_plus_viz": [696, 752], "frame": [696, 744, 752], "deepest": [696, 703, 739], "timeseriesbelow300m": 696, "correctli": 696, "resolv": [696, 748], "isomipplustest": 696, "tendenc": 697, "convergencetest": 697, "concomitt": 697, "covergence_test": 697, "conveg": 697, "planarconverg": 698, "horizontaladvect": 698, "dt_1km": [698, 754], "surface_restor": 699, "radiu": [699, 720, 745], "accord": [699, 703, 746, 760], "100layere3smv1": [699, 703, 746, 759], "32km": [699, 755], "min_den": 699, "min_particle_dens": [699, 755], "max_den": 699, "max_particle_dens": [699, 755], "nsurf": 699, "surface_count": [699, 755], "build_particle_simpl": 699, "f_grid": 699, "f_name": 699, "f_decomp": 699, "buoysurf": 699, "somatestcas": 699, "solid": [700, 742, 745, 749, 751, 753], "bodi": [700, 745], "build_mesh": [700, 701], "build_spherical_mesh": [700, 701], "timestep_munut": 700, "rotation_2d_converg": 700, "pdf": 700, "_sol": 700, "diverg": [700, 756], "nondivergent2d_converg": 700, "divergent2d_converg": 700, "correlatedtracers2d_triplot": 700, "quconverg": 701, "transform": [701, 757], "implemnt": 701, "runnin": 701, "test_sht": 701, "interpolatewavedrag": 702, "hycom": [702, 758], "remapbathymetri": 702, "bathyetri": 702, "ey": 703, "toward": 703, "2500": [703, 712, 739, 747, 755, 759], "cores_with_particl": 703, "min_cores_with_particl": 703, "btr_dt": 703, "mom_del4": 703, "0e10": 703, "80": 703, "130": 703, "25e9": 703, "5km": [703, 712, 741, 749, 752, 762], "300": [703, 710, 745, 754, 755, 756, 759], "09": 703, "8e8": 703, "2100": [703, 726], "900": 703, "8e7": 703, "zisotestcas": 703, "withfrazil": 703, "initial_temp_t1": [703, 759], "tanh": [703, 739, 759], "initial_temp_t2": [703, 759], "initial_temp_h1": [703, 759], "initial_temp_mt": [703, 759], "green": 704, "blue": [704, 731, 760], "orang": 704, "red": 704, "laid": 704, "among": [704, 706, 711, 712, 726], "organiz": 704, "encompass": 704, "perspect": 704, "add_test_group": [704, 705, 711, 712], "univers": 704, "mix": [704, 746, 751], "2000m": [704, 716, 719, 722, 760], "halfar": [704, 719], "cism": [704, 719], "dome_typ": [704, 719], "closest": [704, 719, 748], "put_origin_on_a_cel": [704, 719], "hydro": [704, 719], "time_slic": [704, 718, 719, 724], "save_imag": [704, 718, 719, 720, 724], "hide": [704, 718, 719, 720, 724], "hide_fig": [704, 718, 719, 720, 724], "add_test_cas": [704, 711, 712], "variable_resolut": [704, 716, 760], "talk": 704, "complic": [704, 705, 706, 711, 712], "access": [704, 705, 706, 711, 712, 726, 731, 734, 735, 736], "0200": 704, "00_00": [704, 712], "enumer": [704, 711], "rpe_test_": [704, 711], "_nu_": [704, 711], "deliber": 704, "fairli": [704, 705, 706, 711, 749, 752], "clumsi": [704, 705, 710], "rpe_test_1_nu_1": [704, 742, 751], "rpe_test_2_nu_5": [704, 742, 751], "po4": 704, "no3": 704, "sio3": 704, "nh4": 704, "fe": 704, "dic": 704, "dic_alt_co2": 704, "alk": 704, "dofe": 704, "dop": 704, "dopr": 704, "donr": 704, "zooc": 704, "spchl": 704, "spc": 704, "spfe": 704, "spcaco3": 704, "diatchl": 704, "diatc": 704, "diatf": 704, "diatsi": 704, "diazchl": 704, "diazc": 704, "diazf": 704, "phaeochl": 704, "phaeoc": 704, "phaeof": 704, "dm": 704, "dmsp": 704, "prot": 704, "poli": 704, "lip": 704, "adjusted_init": 704, "unwant": 704, "outer": 704, "inner": [704, 711, 712], "question": [704, 713], "neglig": [704, 737, 749], "precis": 704, "mesh_cpus_per_task": 704, "mesh_min_cpus_per_task": 704, "write_netcdf": [704, 711, 712], "convers": [704, 711, 712], "generate_grid": 704, "nonperiodic_x": [704, 711, 712], "nonperiodic_i": [704, 711, 712], "graphinfofilenam": [704, 711, 712], "use_dist": [704, 711, 742, 751], "gradient_width_dist": [704, 711, 742, 751], "gradient_width_frac": [704, 711, 742, 751], "bottom_temperatur": [704, 711, 742, 751], "surface_temperatur": [704, 711, 742, 751, 755], "temperature_differ": [704, 711, 742, 751], "coriolis_paramet": [704, 711, 742, 751, 752], "len": 704, "ones_lik": [704, 711], "xmin": [704, 711], "xmax": [704, 711], "ymin": [704, 711], "ymax": [704, 711], "ymid": [704, 711], "xperturbmin": [704, 711], "xperturbmax": [704, 711], "perturbationwidth": [704, 711], "yoffset": [704, 711], "sin": [704, 711, 742, 744, 751], "pi": [704, 711, 739, 744, 745], "temp_vert": [704, 711], "logical_and": [704, 711], "transpos": [704, 711], "3rd": [704, 711, 756], "crest": [704, 711], "expand_dim": [704, 711], "dim": [704, 711], "broadcast": [704, 711], "zeros_lik": [704, 711, 712], "nedg": [704, 711], "dtype": 704, "harm": 704, "likewis": [704, 711], "arisen": 704, "omit": [704, 712, 760], "open_dataset": [704, 712], "isn": [704, 705, 711, 712], "mesh_path": 704, "initial_state_target": 704, "entha_analy_result": 704, "ourselv": 704, "firewal": 704, "bedmachineantarctica_v2_and_gebco_2022_0": 704, "05_degree_20220729": 704, "slate": 704, "icepresent_qu60km_polar": 704, "commonli": [704, 729], "expens": [704, 719], "word": 704, "clariti": 704, "ff": 704, "91": 704, "transfer": 704, "design": [704, 705, 709, 710, 735, 746, 754, 755], "substitut": 704, "beforehand": 704, "update_namelist_at_runtim": [704, 712], "pio_num_iotask": 704, "pio_strid": 704, "mostli": [704, 711, 712, 746], "synchron": [704, 709], "update_streams_at_runtim": 704, "timedelta": 704, "3600": 704, "delta": [704, 739], "03d": 704, "02d": 704, "forgotten": 704, "dig": [705, 713], "adher": [705, 711, 712], "strictli": [705, 711], "pep8": 705, "bot": [705, 739], "violat": 705, "pleas": [705, 706, 710, 711], "editor": 705, "pycharm": [705, 711, 712], "spyder": 705, "linter": 705, "flake8": 705, "discourag": 705, "reformat": 705, "autopep8": 705, "undesir": 705, "lint": 705, "wildcard": 705, "vim": [705, 711, 712], "plugin": 705, "id": 705, "why": [705, 712, 716], "sound": 705, "subpackag": 705, "understand": [705, 713], "downstream": 705, "clu": 705, "intro": 705, "hidden": 705, "shortcut": [705, 760], "referenc": [705, 710, 711], "ll": [705, 711, 712, 726, 734, 736], "dot": 705, "charact": 705, "unix": [705, 709], "mayb": 705, "machine_config": 705, "endswith": 705, "splitext": 705, "exactli": [705, 706, 711, 712, 716, 726, 739, 741], "visa": 705, "versa": 705, "comfort": [705, 711, 712], "orient": 705, "program": [705, 713], "felt": 705, "hesit": 705, "harder": 705, "outcom": 705, "augment": 705, "compos": [705, 749, 752], "dens": 705, "worth": [705, 711], "endeavor": 705, "took": 705, "138": 705, "bash": [706, 707, 760], "ksh": 706, "mac": [706, 709], "csh": 706, "tcsh": 706, "temporarili": 706, "obtain": [706, 726], "recogn": 706, "miniconda3": [706, 711, 712, 735, 760], "permiss": 706, "anyon": 706, "person": [706, 707], "base_path_to_install_or_update_conda": 706, "with_albani": 706, "with_netlib_lapack": 706, "with_petsc": 706, "flavor": 706, "login": [706, 734, 736], "troubl": 706, "recognit": 706, "trilino": 706, "spack": [706, 731, 732, 733, 734, 735, 736], "downsid": 706, "unneed": 706, "workstat": 706, "deploy": 706, "touch": 706, "miniconda": [706, 735, 760], "update_speck": 706, "reinstal": 706, "scorpio": [706, 735, 760], "esmf": [706, 734, 760], "load_": 706, "encod": 706, "load_dev_compass_": 706, "dev_compass_": [706, 707], "safest": 706, "rerun": 706, "load_dev_compass": 706, "echo": 706, "rememb": 706, "recreat": [706, 707], "incorrect": 706, "unus": 706, "pip": 706, "extra": [706, 755], "wih": 706, "env_onli": 706, "mpas_make_target": [706, 760], "scientif": [706, 746, 755, 759, 760], "situat": [706, 711, 712, 760], "platform": [706, 760], "wiki": [706, 760], "workdir": [706, 760], "es3m": 706, "mkdir": 706, "fetch": [706, 711], "new_branch_nam": 706, "respons": [706, 748, 757, 758], "simplest": [706, 756], "your_new_branch": 706, "checkout": 706, "encount": 707, "solv": [707, 718, 719, 739], "geo": 707, "cartopi": 707, "np110py27_4": 707, "calledprocesserror": 707, "spec": [707, 734, 736], "vpn": 707, "shell": [707, 709], "honor": 707, "spawn": 707, "usernam": [707, 711, 734, 736], "proxy_en": 707, "all_proxi": 707, "proxyout": 707, "8080": 707, "no_proxi": 707, "localhost": [707, 713, 734, 735, 736, 760], "127": 707, "proxy_dis": 707, "unset": 707, "anytim": 707, "fatal": 707, "mpi_init": 707, "stack": 707, "mpir_init_thread": 707, "159": 707, "mpid_init": 707, "164": 707, "mpidi_ch3_init": 707, "95": 707, "mpid_nem_init": 707, "314": 707, "mpid_nem_tcp_init": 707, "173": 707, "mpid_nem_tcp_get_business_card": 707, "395": 707, "getsockinterfaceaddr": 707, "369": 707, "pn2034311": 707, "errno": 707, "host": [707, 713, 735, 760], "unexpect": [708, 711, 712, 716, 741], "Of": 709, "predict": 709, "kept": [709, 746], "expert": [709, 723, 727, 728, 746], "team": [709, 746], "launch": 709, "benefit": 709, "queue": 709, "beginn": [709, 711, 712], "worktre": [709, 711, 712], "advanc": [709, 711, 712], "style": [709, 711, 712], "troubleshoot": 709, "proxi": 709, "gethostbynam": 709, "port": [709, 710, 711, 734, 736, 746, 750, 759], "list_testcas": 709, "setup_testcas": 709, "clean_testcas": 709, "manage_regression_suit": 709, "strict": [709, 711, 735, 760], "experienc": 709, "seriou": 709, "anticip": [709, 711, 746], "persist": 709, "medium": [709, 731], "glossari": [710, 711, 712], "rapidli": [710, 752], "companion": 710, "liber": 710, "add_cosine_bel": 710, "add_baroclinic_channel": [710, 711], "fit": [710, 713, 756], "camel": 710, "welcom": 710, "_mesh": 710, "bring": 710, "_namelist": 710, "_init": 710, "_output": 710, "wasn": 710, "becam": 710, "didn": [710, 712], "_setup_step": 710, "haven": [710, 711, 712], "_ntask": 710, "heurist": 710, "refus": 710, "update_cor": 710, "goal_cells_per_cor": [710, 745, 754, 756], "max_cells_per_cor": [710, 745, 754, 756], "qu30": 710, "65275": 710, "10383": 710, "approx_cel": 710, "6e8": 710, "pinch": 710, "_forward": 710, "_min_task": 710, "consult": [711, 712, 746], "0_chrysalis_intel_impi": [711, 712], "fork": 711, "push": 711, "lowercas": [711, 712], "hyphen": 711, "realli": [711, 712, 734, 736], "nice": [711, 712, 734, 736], "supercomput": [711, 712], "highli": [711, 712], "camelcas": [711, 712], "capit": [711, 712], "cap": [711, 712], "promot": 711, "pattern": [711, 712], "seen": [711, 717], "seldom": 711, "outweigh": 711, "equip": 711, "hexagon": 711, "variat": [711, 752], "pain": 711, "pick": [711, 712], "partial_cell_typ": [711, 739, 742, 749, 751, 752, 753, 754, 759], "min_pc_fract": [711, 739, 742, 749, 751, 752, 753, 754, 759], "halv": [711, 742, 751], "500km": [711, 742, 751], "40e3": [711, 742, 751, 752], "corioli": [711, 742, 749, 751, 752, 759], "2e": [711, 742, 751], "connect": [711, 734, 736, 746], "handi": 711, "05": [711, 755, 759], "techiniqu": 711, "input_interv": [711, 712], "initial_onli": [711, 712], "__init": 711, "spuriou": [711, 742, 751], "pop": [711, 742, 751], "mom": [711, 742, 751], "mitgcm": [711, 742, 751], "heavi": 711, "context": 711, "analogi": 711, "tet": 711, "20_00": 711, "0000": [711, 712], "dayssincestartofsim": 711, "relativevort": 711, "pyplot": [711, 712], "plt": [711, 712], "cmocean": 711, "output_": 711, "sections_baroclinic_channel_": 711, "_plot": 711, "compact": 711, "anymor": 711, "bc_configur": 711, "users_guid": [711, 712], "alphabet": [711, 712], "daunt": [711, 712], "tini": 712, "add_gotm": 712, "driver": 712, "Its": 712, "driver_script": 712, "pre_messag": 712, "post_messag": 712, "config_init": 712, "add_execut": 712, "dest": 712, "config_init_configur": 712, "periodic_planar": 712, "config_vert_level": 712, "config_periodic_planar_vert_level": 712, "config_periodic_planar_bottom_depth": 712, "config_periodic_planar_velocity_strength": 712, "config_ocean_run_mod": 712, "config_write_cull_cell_mask": 712, "config_vertical_grid": 712, "immut": 712, "input_init": 712, "output_init": 712, "add_cont": 712, "edgemask": 712, "run_script": 712, "mpascellcul": 712, "mpasmeshconvert": 712, "model_run": 712, "proc": 712, "gotmturb": 712, "nml": 712, "plot_profil": 712, "jump": 712, "encourag": 712, "plai": 712, "role": 712, "barotropic_channel": 712, "excerpt": 712, "slight": 712, "hasn": 712, "real": 712, "deep": [712, 755, 758], "uniformli": 712, "wrapper": 712, "conform": 712, "add_link": 712, "copy_fil": 712, "source_path": 712, "script_test_dir": 712, "0000_12": 712, "config_zonal_ssh_grad": 712, "config_pressure_gradient_typ": 712, "constant_forc": 712, "config_use_cvmix": 712, "config_use_gotm": 712, "config_gotm_namelist_fil": 712, "config_gotm_constant_bottom_drag_coeff": 712, "73e": 712, "config_use_implicit_bottom_drag": 712, "velocityzon": 712, "velocitymeridion": 712, "vertvisctopofcel": 712, "nor": 712, "velocity_profil": 712, "viscosity_profil": 712, "xr": 712, "switch_backend": 712, "agg": 712, "kappa": 712, "z0b": 712, "5e": [712, 759], "gssh": 712, "81": 712, "isel": 712, "zi": 712, "ustarb": 712, "sqrt": [712, 746], "u_a": 712, "nu_a": 712, "infer": [712, 747], "c_d": 712, "4g": 712, "xlabel": 712, "ylabel": 712, "savefig": 712, "introduc": 712, "got": 712, "newli": 712, "mpas_mod": 713, "explanatori": 713, "wherev": 713, "my_machin": 713, "customize_config_pars": 713, "inej": 713, "ssl": 713, "certif": 713, "partition_execut": 713, "netcdf4_class": 713, "netcdf3_64bit": 713, "netcdf3_class": 713, "engin": 713, "scipi": 713, "2022": [713, 746], "contact": [713, 726], "temperaturemax": [713, 746], "statist": [713, 746], "temperature_max": [713, 746], "offlin": [713, 746], "coarser": [713, 745, 746, 754], "finer": [713, 746, 759], "2018": 715, "websit": [715, 740], "v6": 715, "land_ic": 715, "sia_restart_test": [716, 760], "sia_decomposition_test": [716, 760], "enthalpy_decomposition_test": 716, "enthalpy_restart_test": 716, "expos": [716, 741], "fo_decomposition_test": [716, 760], "fo_restart_test": [716, 760], "3km_restart_test": 716, "fo_calv": 716, "von_mises_stress_damag": 716, "threshold_facemelt": 716, "3km_decomposition_test": 716, "none_calv": 716, "adp": 717, "timestepp": [717, 729], "ratio": [717, 744], "warn": [717, 745, 754], "greater": [717, 719], "panel": 717, "cumul": 717, "adapt": [717, 729], "lag": 717, "trigger": 717, "routin": [717, 725], "unabl": 717, "volum": 717, "unground": 718, "iceberg": 718, "presenc": 718, "1250": [718, 759], "dirichlet": 718, "bed": 718, "use_mu": 718, "area": [718, 746], "use_7cel": 718, "1proc_run": [718, 719, 720, 722, 724], "4proc_run": [718, 719, 720, 722], "1983": 719, "2005": [719, 744, 746], "rectangular": [719, 720, 724, 743, 755], "circularli": [719, 720], "accumul": [719, 720], "ablat": 719, "16700": 719, "varr": 719, "payn": 720, "750": 720, "exmapl": [720, 724], "25000m": 720, "64": [720, 739, 757], "74": 720, "25000": 720, "thermomechan": 720, "warm": [720, 752, 759], "altitud": 720, "cooler": [720, 742, 759], "slip": [720, 722, 759], "throughout": [720, 742, 744, 751, 752, 753], "exismint2_viz": 720, "enthalpy_benchmark_viz": 721, "display_imag": 721, "prescrib": [721, 752, 755], "paraview": [722, 730], "cull_dist": [722, 723, 727, 728, 730], "min_spac": [722, 723, 727, 728, 730], "e3": [722, 723, 727, 728, 730], "max_spac": [722, 723, 727, 728, 730], "log10": [722, 723, 727, 728, 730], "high_log_spe": [722, 723, 727, 728, 730], "low_log_spe": [722, 723, 727, 728, 730], "75": [722, 723, 727, 728, 730, 749, 752], "high_dist": [722, 723, 727, 728, 730], "e5": [722, 723, 727, 728, 730], "low_dist": [722, 723, 727, 728, 730], "e4": [722, 723, 727, 728, 730], "use_spe": [722, 723, 727, 728, 730], "use_dist_to_grounding_lin": [722, 723, 727, 728, 730], "use_dist_to_edg": [722, 723, 727, 728, 730], "newer": [722, 730], "notabl": 723, "slower": 723, "humboldt_mesh": 723, "yr": [723, 727, 728, 752], "16proc_run": [723, 730], "32proc_run": [723, 730], "fot": 723, "bfb": 723, "von": 723, "mise": 723, "marin": [723, 752], "facemelt": 723, "exercis": [723, 746], "widest": 723, "1000m": 724, "58": 724, "3proc_run": 724, "specialti": 725, "carefulli": 725, "2300": 726, "ob": 726, "overal": 726, "publicli": 726, "process_racmo_smb": 726, "harmless": 726, "six": 726, "modern": 726, "committe": 726, "globu": 726, "base_path_ismip6": 726, "ghub": 726, "endpoint": 726, "ce": 726, "ssp585": 726, "ukesm1": 726, "ai": [726, 746], "atmosphere_forc": 726, "regridded_8km": 726, "ll_anomaly_ssp585_1995": 726, "2100_8km": 726, "ocean_forc": 726, "ll_ssp585": 726, "ll_ssp585_thermal_forcing_8km_x_60m": 726, "atmospheric_forc": 726, "ccsm4": 726, "rcp85": 726, "rcp26": 726, "racmo2": 726, "3p2_ant27_smb_yearly_1979_2018": 726, "obs_thermal_forcing_1995": 726, "2017_8km_x_60m": 726, "ocean_f": 726, "orc": 726, "climatology_from_obs_1995": 726, "imbie2_basin_numbers_8km": 726, "coeff_gamma0_deltat_quadratic_loc": 726, "underneath": 726, "landice_ismip6_forcing_config": 726, "basal_melt": 726, "ocean_thermal_forc": 726, "ismip6_ai": 726, "ismip6_ais_atmospher": 726, "ismip6_ais_ocean_therm": 726, "ismip6_ais_ocean_bas": 726, "bilinear": 726, "neareststod": 726, "conserv": [726, 756], "hollyhan": 726, "research": 726, "ismip6_2300_protocol": 726, "base_path_mali": 726, "output_base_path": 726, "process_forcing_testcas": 726, "cesm2": 726, "cnrm_cm6": 726, "cnrm_esm2": 726, "csiro": 726, "mk3": 726, "hadgem2": 726, "ipsl": 726, "cm5a": 726, "mr": 726, "miroc": 726, "esm": 726, "chem": 726, "noresm1": 726, "waccm": 726, "ssp126": 726, "ssp585v1": 726, "ssp585v2": 726, "map_ismip6_8km_to_": 726, "antarctica_8to30km": 726, "antarctic_8to80km_20220407": 726, "ais_8to30km_r01_20220607": 726, "process_obs_data": 726, "rcp2": 726, "80km": 726, "atmosphereprocess_smb_racmo": 726, "notavail": 726, "high_res_kangerlussuaq_mesh": 727, "high_res_kogebugts_mesh": 728, "e2": 728, "2km": [729, 752], "paper": [729, 755, 759, 760], "trade": 729, "accuraci": 729, "includess": 730, "gain": [731, 746], "confluenc": 731, "deploi": [731, 732, 733, 734, 735, 736, 755], "mpi_intel": [731, 732, 733, 734, 735], "mpi_gnu": [731, 732, 733, 734, 735, 736], "hdf5": [731, 732, 733, 734, 735, 736], "fortran": [731, 732, 733, 734, 735, 736], "pnetcdf": [731, 732, 733, 734, 735, 736], "use_e3sm_hdf5_netcdf": [731, 732, 733, 734, 735, 736], "cobalt": [731, 732, 733, 734, 735, 736], "condo": [731, 760], "acm": [731, 734, 760], "qualiti": [731, 733, 734, 735, 736, 760], "servic": [731, 733, 734, 735, 736, 760], "qo": [731, 733, 734, 735, 736, 760], "acme_high": 731, "load_latest_compass_intel_impi": [731, 733], "load_latest_compass_gnu_mvapich": 731, "load_latest_compass_intel_openmpi": 732, "load_latest_compass_gnu_openmpi": [732, 760], "compyf": 733, "app": [733, 760], "conda_env": [733, 760], "pmi2": 733, "my_usernam": [734, 735, 736], "salloc": [734, 735, 736], "knl": 734, "nim": 734, "filesystem": [734, 736], "cscratch1": 734, "sd": 734, "myquota": [734, 736], "prjquota": [734, 736], "projectid": [734, 736], "m2833": 734, "archiv": [734, 736], "hpss": [734, 736], "hsi": [734, 736], "htar": [734, 736], "zstash": [734, 736], "cf": [734, 736, 746, 760], "cdir": [734, 736, 760], "premium": [734, 736], "load_latest_compass_intel_mpt": 734, "load_latest_compass_gnu_mpt": 734, "8844": [734, 736], "monik": [734, 736], "browser": [734, 736], "grab": [734, 736], "logon": [734, 736], "kernel": [734, 736], "myenv": [734, 736], "ipykernel": [734, 736], "kernelspec": [734, 736], "Be": [734, 736], "interpret": [734, 736], "argv": [734, 736], "ipykernel_launch": [734, 736], "connection_fil": [734, 736], "display_nam": [734, 736], "sai": [735, 752], "workload": 735, "sbatch": [735, 760], "squeue": 735, "scancel": 735, "jobid": 735, "cancel": 735, "emtpi": 735, "channel_prior": [735, 760], "mpi_mpich": [735, 760], "mpi_openmpi": [735, 760], "nompi": [735, 760], "p1": 736, "gpu": 736, "iri": 736, "m1795": 736, "hyperthread": 736, "hang": 736, "threads_per_cor": 736, "256": 736, "modules_befor": 736, "modules_aft": 736, "crai": 736, "cray_compil": 736, "load_latest_compass_gnu_mpich": 736, "inclus": [737, 746], "cryospher": [737, 746], "campaign": [737, 746], "loss": 737, "depress": [737, 739, 749, 752], "thicker": 737, "hanei": [737, 752], "stationari": 737, "freeli": 737, "guess": 737, "robust": [737, 752], "stewart": [739, 759], "z_2": 739, "z_1": 739, "mathrm": [739, 759], "rightarrow": 739, "infti": 739, "z_k": 739, "z_0": 739, "finder": 739, "n_z": 739, "h_": [739, 759], "210": [739, 745], "5500": 739, "renorm": [739, 759], "51": 739, "221": 739, "63": 739, "flat": 739, "collaps": 739, "adcroft": 739, "campin": 739, "2004": 739, "absenc": 739, "proport": [739, 745, 754, 756], "watercolumn": 739, "press": 739, "batymetri": 739, "stair": 739, "release_6": 740, "unexpectedli": 741, "proper": [741, 746], "equilibr": 741, "ilicak": [742, 751], "2012": [742, 751, 756], "psu": [742, 744, 749, 751, 752, 753, 754, 755, 759], "sinusoid": [742, 744, 751], "warmer": [742, 751], "mk": [742, 744, 751, 753], "celsiu": [742, 749, 751, 752, 753], "reproduc": [743, 744, 746], "box": 743, "viz": [743, 744, 749, 751, 752, 753], "config_dam_break_vert_level": 743, "40cm": 743, "inspect": [743, 744], "oei": 744, "6km": 744, "seaward": [744, 752], "oscil": 744, "zeta_": 744, "east": 744, "5t": 744, "degc": [744, 753], "rough": 744, "250m": 744, "coordiant": 744, "ouptut": [744, 752], "drying_slope_viz": 744, "generate_movi": 744, "frames_per_second": [744, 752], "movie_format": [744, 752], "12h": 744, "williamson": 745, "1992": 745, "3a": 745, "skamarock": 745, "gassmann": 745, "psi": 745, "psi_0": 745, "co": [745, 746], "ge": 745, "equatori": 745, "u_0": 745, "aim": [745, 746, 754, 756], "central": 745, "rad": 745, "lat_cent": 745, "lon_cent": 745, "14159265": 745, "2123666": 745, "6667": 745, "hill": 745, "psi0": 745, "transit": [745, 746, 752, 753], "vel_pd": 745, "qu_conv_thresh": 745, "qu_conv_max": 745, "icos_conv_thresh": 745, "icos_conv_max": 745, "480": 745, "multipli": [745, 754], "alloc": [745, 754, 756], "cull_mesh_cpus_per_task": [746, 748, 758], "cull_mesh_min_cpus_per_task": [746, 748, 758], "cull_mesh_max_memori": [746, 748, 758], "cull_mesh_": 746, "init_": 746, "april": 746, "mpas_mesh_short_nam": 746, "mpas_mesh_long_nam": 746, "mpas_mesh_prefix": 746, "mpas_mesh_e3sm_vers": 746, "mpas_mesh_pull_request": 746, "mpas_mesh_qu_revis": 746, "mpas_mesh_qu_version_author": 746, "mpas_mesh_qu_version_author_": 746, "mail": 746, "mpas_mesh_qu_version_creation_d": 746, "210116": 746, "mpas_mesh_qu_minimum_resolution_km": 746, "mpas_mesh_qu_maximum_resolution_km": 746, "mpas_mesh_qu_maximum_depth_m": 746, "mpas_mesh_qu_number_of_level": 746, "mpas_mesh_descript": 746, "mpas_mesh_bathymetri": 746, "mpas_initial_condit": 746, "mpas_mesh_compass_vers": 746, "mpas_mesh_jigsaw_vers": 746, "mpas_mesh_jigsaw": 746, "python_vers": 746, "mpas_mesh_mpa": 746, "tools_vers": 746, "mpas_mesh_nco_vers": 746, "mpas_mesh_esmf_vers": 746, "mpas_mesh_geometric_features_vers": 746, "mpas_mesh_metis_vers": 746, "mpas_mesh_pyremap_vers": 746, "lowest": 746, "everywher": 746, "impli": 746, "treatment": 746, "gent": 746, "mcwilliam": 746, "doi": 746, "org": 746, "1175": 746, "1520": 746, "0485": 746, "1990": [746, 749, 752], "020": 746, "0150": 746, "imiocm": 746, "a_c": 746, "smoothli": 746, "sorrm": 746, "taper": 746, "attach": 746, "global_ocean_dynamic_adjust": 746, "coastlin": [746, 755], "portion": 746, "gibraltar": 746, "mediterranean": 746, "contigu": 746, "peninsula": 746, "deriv": 746, "en4_1900_bgc": 746, "thought": 746, "explict": 746, "higdon": 746, "4th": [746, 756], "rung": [746, 756], "kutta": [746, 756], "infeas": 746, "surfaceareaweightedaverag": 746, "watermasscensu": 746, "layervolumeweightedaverag": 746, "zonalmean": 746, "okuboweiss": 746, "meridionalheattransport": 746, "highfrequencyoutput": 746, "eliassenpalm": 746, "mixedlayerdepth": 746, "debugdiagnost": 746, "eddyproductvari": 746, "oceanheatcont": 746, "mixedlayerheatbudget": 746, "sync": 746, "confid": 746, "complianc": 746, "cfconvent": 746, "transient": [746, 749], "amplitud": [746, 758], "aggress": 746, "gentli": 746, "global_ocean_mesh_quwisc240": 746, "global_ocean_mesh_ecwisc30to60": 746, "qu240_for_e3sm": [746, 760, 762], "quwisc240_for_e3sm": [746, 760, 762], "mocstreamfunct": 746, "weren": 746, "ofr": 746, "wcatl12to45e2r4": 746, "210318": 746, "gl": 747, "umlauf": 747, "burchard": 747, "2003": 747, "67": 747, "69": 747, "0173": 747, "event": 748, "coastal": 748, "estuari": 748, "surg": 748, "inund": 748, "strm15": 748, "carri": 748, "vector": 748, "recor": 748, "spinup": [748, 758], "ramp": [748, 758], "shock": [748, 758], "dimension": 749, "linearli": [749, 752, 755], "bui": [749, 752], "1490": [749, 752], "abruptli": [749, 752], "occupi": [749, 752], "cavity_thick": 749, "slope_height": 749, "angl": 749, "edge_width": 749, "0e3": 749, "y1": 749, "y2": 749, "surface_salin": [749, 755], "bottom_salin": 749, "5e3": 749, "strenuou": 749, "live": [749, 760], "induc": [751, 753], "propag": [751, 752], "stratif": [751, 755], "5000": 751, "amplitude_width_frac": 751, "amplitude_width_dist": 751, "50e3": 751, "2016": [752, 759], "sheetmodel": 752, "cornford": 752, "ocean3": 752, "ocean4": 752, "inflow": 752, "misomip": 752, "topo_smooth": 752, "min_ice_thick": 752, "scalar": 752, "draft_scal": 752, "minimum_level": 752, "min_column_thick": 752, "min_smoothed_draft_mask": 752, "min_land_ice_fract": 752, "init_top_temp": 752, "init_bot_temp": 752, "init_top_s": 752, "init_bot_s": 752, "restore_top_temp": 752, "restore_bot_temp": 752, "restore_top_s": 752, "restore_bot_s": 752, "restore_r": 752, "restore_evap_r": 752, "restore_xmin": 752, "790e3": 752, "restore_xmax": 752, "800e3": 752, "409e": 752, "kg": 752, "effective_dens": 752, "1026": 752, "0002": 752, "0003": 752, "isomip_plus_streamfunct": 752, "osf_dx": 752, "2e3": 752, "osf_dz": 752, "plot_hanei": 752, "section_i": 752, "warmest": 752, "amundsen": 752, "bellingshausen": 752, "vigor": 752, "rigor": 752, "cold": [752, 759], "weddel": 752, "ross": 752, "weak": 752, "decad": 752, "opposit": 752, "misimp": 752, "undergon": 752, "retreat": 752, "exponenti": 752, "cours": 752, "stai": 752, "monoton": 752, "thin_film_time_varying_ocean0": 752, "thin_film_wetting_ocean0": 752, "thin_film_drying_ocean0": 752, "landward": 752, "computation": 752, "inexpens": 752, "setup_to_run": 752, "loop": 752, "convect": 753, "perod": 753, "concentr": 753, "contour": 753, "streamlin": 753, "temperature_right": 753, "temperature_left": 753, "salinity_background": 753, "tracer2_background": 753, "tracer3_background": 753, "6h": 753, "stagger": 754, "hex": 754, "nx_1km": 754, "512": 754, "ny_1km": 754, "640": 754, "deg": 754, "x_center": 754, "y_center": 754, "gaussian_width": 754, "advect_x": 754, "advect_i": 754, "conv_thresh": 754, "conv_max": 754, "wolfram": [755, 759], "investig": 755, "midlatitud": 755, "21": 755, "48": 755, "gyre": 755, "appendix": 755, "16km": 755, "expans": 755, "eos_linear_alpha": 755, "density_differ": 755, "salinity_gradi": 755, "0008": 755, "thermocline_depth": 755, "density_difference_linear": 755, "phi": 755, "shelf_depth": [755, 759], "unequ": 755, "trajectori": 755, "situ": [755, 759], "lauritzen": 756, "debugtrac": 756, "discontinu": 756, "slot": 756, "cylind": 756, "offset": 756, "timestep_minut": 756, "tracer1_conv_thresh": 756, "tracer2_conv_thresh": 756, "tracer3_conv_thresh": 756, "appreci": 756, "degrad": 756, "revers": 756, "deform": 756, "nonlinearli": 756, "correl": 756, "invers": 757, "attract": [757, 758], "guassian": 757, "shperic": 757, "shtn": 757, "dosen": 757, "gather": 757, "rank": 757, "scatter": 757, "impliment": 757, "algoritm": 757, "all_reduc": 757, "use_shtn": 757, "analyit": 757, "sprial": 757, "harmoic": 757, "26": 757, "220": 757, "980": 757, "spherial": 757, "decompos": 758, "icosaher": 758, "tpxo9": 758, "beneath": 758, "timescal": 758, "125": 758, "ringler": 759, "span": 759, "l_x": 759, "l_y": 759, "y_": 759, "w_": 759, "easterli": 759, "wind_transition_posit": 759, "800000": 759, "antarctic_shelf_front_width": 759, "600000": 759, "wind_stress_shelf_front_max": 759, "meridional_ext": 759, "0e6": 759, "slope_half_width": 759, "0e5": 759, "slope_center_posit": 759, "reference_corioli": 759, "coriolis_gradi": 759, "wind_stress_max": 759, "mean_restoring_temp": 759, "restoring_temp_dev_ta": 759, "restoring_temp_dev_tb": 759, "interior": 759, "restoring_temp_tau": 759, "piston": 759, "restoring_temp_piston_vel": 759, "93e": 759, "fold": 759, "restoring_temp_z": 759, "spong": 759, "restoring_sponge_l": 759, "0e4": 759, "frazil_temperature_anomali": 759, "load_latest_compass": 760, "minu": 760, "create_compass_load_script": 760, "load_compass_1": 760, "0_mpich": 760, "sia_smoke_test": 760, "fo_smoke_test": 760, "grep": 760, "mpas_path": 760, "17": 760, "210131_test_new_branch": 760, "fall": 760, "previous_workdir": 760, "recompil": 760, "safer": 760, "test_subdir": 760, "whatev": 760, "job_script": 760, "j": 760, "exclus": 760, "job_nam": 760, "wall_tim": 760, "fo_integr": [760, 762], "full_integr": [760, 762], "sia_integr": [760, 762], "suitenam": 760, "prohibit": 762}, "objects": {"compass": [[9, 0, 1, "", "MpasCore"], [11, 0, 1, "", "Step"], [26, 0, 1, "", "TestCase"], [31, 0, 1, "", "TestGroup"]], "compass.MpasCore": [[9, 1, 1, "", "__init__"], [10, 1, 1, "", "add_test_group"]], "compass.Step": [[11, 1, 1, "", "__init__"], [12, 1, 1, "", "add_input_file"], [13, 1, 1, "", "add_model_as_input"], [14, 1, 1, "", "add_namelist_file"], [15, 1, 1, "", "add_namelist_options"], [16, 1, 1, "", "add_output_file"], [17, 1, 1, "", "add_streams_file"], [18, 1, 1, "", "constrain_resources"], [19, 1, 1, "", "run"], [20, 1, 1, "", "runtime_setup"], [21, 1, 1, "", "set_resources"], [22, 1, 1, "", "setup"], [23, 1, 1, "", "update_namelist_at_runtime"], [24, 1, 1, "", "update_namelist_pio"], [25, 1, 1, "", "update_streams_at_runtime"]], "compass.TestCase": [[26, 1, 1, "", "__init__"], [27, 1, 1, "", "add_step"], [28, 1, 1, "", "configure"], [29, 1, 1, "", "run"], [30, 1, 1, "", "validate"]], "compass.TestGroup": [[31, 1, 1, "", "__init__"], [32, 1, 1, "", "add_test_case"]], "compass.__main__": [[33, 2, 1, "", "main"]], "compass.cache": [[34, 2, 1, "", "update_cache"]], "compass.clean": [[35, 2, 1, "", "clean_cases"]], "compass.config": [[36, 0, 1, "", "CompassConfigParser"]], "compass.config.CompassConfigParser": [[36, 1, 1, "", "__init__"]], "compass.io": [[37, 2, 1, "", "download"], [38, 2, 1, "", "package_path"], [39, 2, 1, "", "symlink"]], "compass.landice": [[79, 0, 1, "", "Landice"]], "compass.landice.Landice": [[79, 1, 1, "", "__init__"]], "compass.landice.tests.calving_dt_convergence": [[80, 0, 1, "", "CalvingDtConvergence"]], "compass.landice.tests.calving_dt_convergence.CalvingDtConvergence": [[80, 1, 1, "", "__init__"]], "compass.landice.tests.calving_dt_convergence.dt_convergence_test": [[81, 0, 1, "", "DtConvergenceTest"]], "compass.landice.tests.calving_dt_convergence.dt_convergence_test.DtConvergenceTest": [[81, 1, 1, "", "__init__"], [82, 1, 1, "", "validate"]], "compass.landice.tests.calving_dt_convergence.run_model": [[83, 0, 1, "", "RunModel"]], "compass.landice.tests.calving_dt_convergence.run_model.RunModel": [[83, 1, 1, "", "__init__"], [84, 1, 1, "", "run"]], "compass.landice.tests.circular_shelf": [[85, 0, 1, "", "CircularShelf"]], "compass.landice.tests.circular_shelf.CircularShelf": [[85, 1, 1, "", "__init__"]], "compass.landice.tests.circular_shelf.decomposition_test": [[86, 0, 1, "", "DecompositionTest"]], "compass.landice.tests.circular_shelf.decomposition_test.DecompositionTest": [[86, 1, 1, "", "__init__"], [87, 1, 1, "", "run"]], "compass.landice.tests.circular_shelf.run_model": [[88, 0, 1, "", "RunModel"]], "compass.landice.tests.circular_shelf.run_model.RunModel": [[88, 1, 1, "", "__init__"], [89, 1, 1, "", "run"]], "compass.landice.tests.circular_shelf.setup_mesh": [[90, 0, 1, "", "SetupMesh"]], "compass.landice.tests.circular_shelf.setup_mesh.SetupMesh": [[90, 1, 1, "", "__init__"], [91, 1, 1, "", "run"]], "compass.landice.tests.circular_shelf.visualize": [[92, 0, 1, "", "Visualize"], [94, 2, 1, "", "visualize_circular_shelf"]], "compass.landice.tests.circular_shelf.visualize.Visualize": [[92, 1, 1, "", "__init__"], [93, 1, 1, "", "run"]], "compass.landice.tests.dome": [[95, 0, 1, "", "Dome"]], "compass.landice.tests.dome.Dome": [[95, 1, 1, "", "__init__"]], "compass.landice.tests.dome.decomposition_test": [[96, 0, 1, "", "DecompositionTest"]], "compass.landice.tests.dome.decomposition_test.DecompositionTest": [[96, 1, 1, "", "__init__"], [97, 1, 1, "", "run"]], "compass.landice.tests.dome.restart_test": [[98, 0, 1, "", "RestartTest"]], "compass.landice.tests.dome.restart_test.RestartTest": [[98, 1, 1, "", "__init__"], [99, 1, 1, "", "run"]], "compass.landice.tests.dome.run_model": [[100, 0, 1, "", "RunModel"]], "compass.landice.tests.dome.run_model.RunModel": [[100, 1, 1, "", "__init__"], [101, 1, 1, "", "run"], [102, 1, 1, "", "setup"]], "compass.landice.tests.dome.setup_mesh": [[103, 0, 1, "", "SetupMesh"]], "compass.landice.tests.dome.setup_mesh.SetupMesh": [[103, 1, 1, "", "__init__"], [104, 1, 1, "", "run"]], "compass.landice.tests.dome.smoke_test": [[105, 0, 1, "", "SmokeTest"]], "compass.landice.tests.dome.smoke_test.SmokeTest": [[105, 1, 1, "", "__init__"], [106, 1, 1, "", "run"]], "compass.landice.tests.dome.visualize": [[107, 0, 1, "", "Visualize"], [109, 2, 1, "", "visualize_dome"]], "compass.landice.tests.dome.visualize.Visualize": [[107, 1, 1, "", "__init__"], [108, 1, 1, "", "run"]], "compass.landice.tests.eismint2": [[110, 0, 1, "", "Eismint2"]], "compass.landice.tests.eismint2.Eismint2": [[110, 1, 1, "", "__init__"]], "compass.landice.tests.eismint2.decomposition_test": [[111, 0, 1, "", "DecompositionTest"]], "compass.landice.tests.eismint2.decomposition_test.DecompositionTest": [[111, 1, 1, "", "__init__"], [112, 1, 1, "", "run"]], "compass.landice.tests.eismint2.restart_test": [[113, 0, 1, "", "RestartTest"]], "compass.landice.tests.eismint2.restart_test.RestartTest": [[113, 1, 1, "", "__init__"], [114, 1, 1, "", "run"]], "compass.landice.tests.eismint2.run_experiment": [[115, 0, 1, "", "RunExperiment"]], "compass.landice.tests.eismint2.run_experiment.RunExperiment": [[115, 1, 1, "", "__init__"], [116, 1, 1, "", "run"], [117, 1, 1, "", "setup"]], "compass.landice.tests.eismint2.setup_mesh": [[118, 0, 1, "", "SetupMesh"]], "compass.landice.tests.eismint2.setup_mesh.SetupMesh": [[118, 1, 1, "", "__init__"], [119, 1, 1, "", "run"]], "compass.landice.tests.eismint2.standard_experiments": [[120, 0, 1, "", "StandardExperiments"]], "compass.landice.tests.eismint2.standard_experiments.StandardExperiments": [[120, 1, 1, "", "__init__"], [121, 1, 1, "", "run"]], "compass.landice.tests.eismint2.standard_experiments.visualize": [[122, 0, 1, "", "Visualize"], [124, 2, 1, "", "visualize_eismint2"]], "compass.landice.tests.eismint2.standard_experiments.visualize.Visualize": [[122, 1, 1, "", "__init__"], [123, 1, 1, "", "run"]], "compass.landice.tests.enthalpy_benchmark.A": [[125, 0, 1, "", "A"]], "compass.landice.tests.enthalpy_benchmark.A.A": [[125, 1, 1, "", "__init__"], [126, 1, 1, "", "configure"], [127, 1, 1, "", "run"]], "compass.landice.tests.enthalpy_benchmark.A.visualize": [[128, 0, 1, "", "Visualize"]], "compass.landice.tests.enthalpy_benchmark.A.visualize.Visualize": [[128, 1, 1, "", "__init__"], [129, 1, 1, "", "run"]], "compass.landice.tests.enthalpy_benchmark.B": [[130, 0, 1, "", "B"]], "compass.landice.tests.enthalpy_benchmark.B.B": [[130, 1, 1, "", "__init__"], [131, 1, 1, "", "configure"], [132, 1, 1, "", "run"]], "compass.landice.tests.enthalpy_benchmark.B.visualize": [[133, 0, 1, "", "Visualize"]], "compass.landice.tests.enthalpy_benchmark.B.visualize.Visualize": [[133, 1, 1, "", "__init__"], [134, 1, 1, "", "run"]], "compass.landice.tests.enthalpy_benchmark": [[135, 0, 1, "", "EnthalpyBenchmark"]], "compass.landice.tests.enthalpy_benchmark.EnthalpyBenchmark": [[135, 1, 1, "", "__init__"]], "compass.landice.tests.enthalpy_benchmark.run_model": [[136, 0, 1, "", "RunModel"]], "compass.landice.tests.enthalpy_benchmark.run_model.RunModel": [[136, 1, 1, "", "__init__"], [137, 1, 1, "", "run"], [138, 1, 1, "", "setup"]], "compass.landice.tests.enthalpy_benchmark.setup_mesh": [[139, 0, 1, "", "SetupMesh"]], "compass.landice.tests.enthalpy_benchmark.setup_mesh.SetupMesh": [[139, 1, 1, "", "__init__"], [140, 1, 1, "", "run"]], "compass.landice.tests.greenland": [[141, 0, 1, "", "Greenland"]], "compass.landice.tests.greenland.Greenland": [[141, 1, 1, "", "__init__"]], "compass.landice.tests.greenland.decomposition_test": [[142, 0, 1, "", "DecompositionTest"]], "compass.landice.tests.greenland.decomposition_test.DecompositionTest": [[142, 1, 1, "", "__init__"], [143, 1, 1, "", "run"]], "compass.landice.tests.greenland.high_res_mesh": [[144, 0, 1, "", "HighResMesh"]], "compass.landice.tests.greenland.high_res_mesh.HighResMesh": [[144, 1, 1, "", "__init__"], [145, 1, 1, "", "run"]], "compass.landice.tests.greenland.mesh": [[146, 0, 1, "", "Mesh"]], "compass.landice.tests.greenland.mesh.Mesh": [[146, 1, 1, "", "__init__"], [147, 1, 1, "", "build_cell_width"], [148, 1, 1, "", "run"]], "compass.landice.tests.greenland.restart_test": [[149, 0, 1, "", "RestartTest"]], "compass.landice.tests.greenland.restart_test.RestartTest": [[149, 1, 1, "", "__init__"], [150, 1, 1, "", "run"]], "compass.landice.tests.greenland.run_model": [[151, 0, 1, "", "RunModel"]], "compass.landice.tests.greenland.run_model.RunModel": [[151, 1, 1, "", "__init__"], [152, 1, 1, "", "run"], [153, 1, 1, "", "setup"]], "compass.landice.tests.greenland.smoke_test": [[154, 0, 1, "", "SmokeTest"]], "compass.landice.tests.greenland.smoke_test.SmokeTest": [[154, 1, 1, "", "__init__"], [155, 1, 1, "", "run"]], "compass.landice.tests.humboldt": [[156, 0, 1, "", "Humboldt"]], "compass.landice.tests.humboldt.Humboldt": [[156, 1, 1, "", "__init__"]], "compass.landice.tests.humboldt.decomposition_test": [[157, 0, 1, "", "DecompositionTest"]], "compass.landice.tests.humboldt.decomposition_test.DecompositionTest": [[157, 1, 1, "", "__init__"], [158, 1, 1, "", "validate"]], "compass.landice.tests.humboldt.mesh": [[159, 0, 1, "", "Mesh"]], "compass.landice.tests.humboldt.mesh.Mesh": [[159, 1, 1, "", "__init__"], [160, 1, 1, "", "run"]], "compass.landice.tests.humboldt.mesh_gen": [[161, 0, 1, "", "MeshGen"]], "compass.landice.tests.humboldt.mesh_gen.MeshGen": [[161, 1, 1, "", "__init__"], [162, 1, 1, "", "run"]], "compass.landice.tests.humboldt.restart_test": [[163, 0, 1, "", "RestartTest"]], "compass.landice.tests.humboldt.restart_test.RestartTest": [[163, 1, 1, "", "__init__"], [164, 1, 1, "", "validate"]], "compass.landice.tests.humboldt.run_model": [[165, 0, 1, "", "RunModel"]], "compass.landice.tests.humboldt.run_model.RunModel": [[165, 1, 1, "", "__init__"], [166, 1, 1, "", "run"]], "compass.landice.tests.hydro_radial": [[167, 0, 1, "", "HydroRadial"]], "compass.landice.tests.hydro_radial.HydroRadial": [[167, 1, 1, "", "__init__"]], "compass.landice.tests.hydro_radial.decomposition_test": [[168, 0, 1, "", "DecompositionTest"]], "compass.landice.tests.hydro_radial.decomposition_test.DecompositionTest": [[168, 1, 1, "", "__init__"], [169, 1, 1, "", "run"]], "compass.landice.tests.hydro_radial.restart_test": [[170, 0, 1, "", "RestartTest"]], "compass.landice.tests.hydro_radial.restart_test.RestartTest": [[170, 1, 1, "", "__init__"], [171, 1, 1, "", "run"]], "compass.landice.tests.hydro_radial.run_model": [[172, 0, 1, "", "RunModel"]], "compass.landice.tests.hydro_radial.run_model.RunModel": [[172, 1, 1, "", "__init__"], [173, 1, 1, "", "run"], [174, 1, 1, "", "setup"]], "compass.landice.tests.hydro_radial.setup_mesh": [[175, 0, 1, "", "SetupMesh"]], "compass.landice.tests.hydro_radial.setup_mesh.SetupMesh": [[175, 1, 1, "", "__init__"], [176, 1, 1, "", "run"]], "compass.landice.tests.hydro_radial.spinup_test": [[177, 0, 1, "", "SpinupTest"]], "compass.landice.tests.hydro_radial.spinup_test.SpinupTest": [[177, 1, 1, "", "__init__"], [178, 1, 1, "", "run"]], "compass.landice.tests.hydro_radial.steady_state_drift_test": [[179, 0, 1, "", "SteadyStateDriftTest"]], "compass.landice.tests.hydro_radial.steady_state_drift_test.SteadyStateDriftTest": [[179, 1, 1, "", "__init__"], [180, 1, 1, "", "run"]], "compass.landice.tests.hydro_radial.visualize": [[181, 0, 1, "", "Visualize"], [183, 2, 1, "", "visualize_hydro_radial"]], "compass.landice.tests.hydro_radial.visualize.Visualize": [[181, 1, 1, "", "__init__"], [182, 1, 1, "", "run"]], "compass.landice.tests.ismip6_forcing": [[184, 0, 1, "", "Ismip6Forcing"]], "compass.landice.tests.ismip6_forcing.Ismip6Forcing": [[184, 1, 1, "", "__init__"]], "compass.landice.tests.ismip6_forcing.atmosphere": [[185, 0, 1, "", "Atmosphere"], [187, 3, 0, "-", "create_mapfile_smb"]], "compass.landice.tests.ismip6_forcing.atmosphere.Atmosphere": [[185, 1, 1, "", "__init__"], [186, 1, 1, "", "configure"]], "compass.landice.tests.ismip6_forcing.atmosphere.create_mapfile_smb": [[188, 2, 1, "", "build_mapping_file"], [189, 2, 1, "", "create_atm_scrip"]], "compass.landice.tests.ismip6_forcing.atmosphere.process_smb": [[190, 0, 1, "", "ProcessSMB"]], "compass.landice.tests.ismip6_forcing.atmosphere.process_smb.ProcessSMB": [[190, 1, 1, "", "__init__"], [191, 1, 1, "", "correct_smb_anomaly_for_climatology"], [192, 1, 1, "", "remap_ismip6_smb_to_mali"], [193, 1, 1, "", "rename_ismip6_smb_to_mali_vars"], [194, 1, 1, "", "run"], [195, 1, 1, "", "setup"]], "compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo": [[196, 0, 1, "", "ProcessSmbRacmo"]], "compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.ProcessSmbRacmo": [[196, 1, 1, "", "__init__"], [197, 1, 1, "", "correct_smb_anomaly_for_base_smb"], [198, 1, 1, "", "remap_source_smb_to_mali"], [199, 1, 1, "", "rename_source_smb_to_mali_vars"], [200, 1, 1, "", "run"], [201, 1, 1, "", "setup"]], "compass.landice.tests.ismip6_forcing.configure": [[202, 2, 1, "", "configure"]], "compass.landice.tests.ismip6_forcing.create_mapfile": [[203, 2, 1, "", "build_mapping_file"]], "compass.landice.tests.ismip6_forcing.ocean_basal": [[204, 0, 1, "", "OceanBasal"]], "compass.landice.tests.ismip6_forcing.ocean_basal.OceanBasal": [[204, 1, 1, "", "__init__"], [205, 1, 1, "", "configure"]], "compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt": [[206, 0, 1, "", "ProcessBasalMelt"]], "compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.ProcessBasalMelt": [[206, 1, 1, "", "__init__"], [207, 1, 1, "", "combine_ismip6_inputfiles"], [208, 1, 1, "", "remap_ismip6_basal_melt_to_mali_vars"], [209, 1, 1, "", "rename_ismip6_basal_melt_to_mali_vars"], [210, 1, 1, "", "run"], [211, 1, 1, "", "setup"]], "compass.landice.tests.ismip6_forcing.ocean_thermal": [[212, 0, 1, "", "OceanThermal"]], "compass.landice.tests.ismip6_forcing.ocean_thermal.OceanThermal": [[212, 1, 1, "", "__init__"], [213, 1, 1, "", "configure"]], "compass.landice.tests.ismip6_forcing.ocean_thermal.process_thermal_forcing": [[214, 0, 1, "", "ProcessThermalForcing"]], "compass.landice.tests.ismip6_forcing.ocean_thermal.process_thermal_forcing.ProcessThermalForcing": [[214, 1, 1, "", "__init__"], [215, 1, 1, "", "remap_ismip6_thermal_forcing_to_mali_vars"], [216, 1, 1, "", "rename_ismip6_thermal_forcing_to_mali_vars"], [217, 1, 1, "", "run"], [218, 1, 1, "", "setup"]], "compass.landice.tests.kangerlussuaq": [[219, 0, 1, "", "Kangerlussuaq"]], "compass.landice.tests.kangerlussuaq.Kangerlussuaq": [[219, 1, 1, "", "__init__"]], "compass.landice.tests.kangerlussuaq.mesh": [[220, 0, 1, "", "Mesh"]], "compass.landice.tests.kangerlussuaq.mesh.Mesh": [[220, 1, 1, "", "__init__"], [221, 1, 1, "", "run"]], "compass.landice.tests.kangerlussuaq.mesh_gen": [[222, 0, 1, "", "MeshGen"]], "compass.landice.tests.kangerlussuaq.mesh_gen.MeshGen": [[222, 1, 1, "", "__init__"], [223, 1, 1, "", "run"]], "compass.landice.tests.koge_bugt_s": [[224, 0, 1, "", "KogeBugtS"]], "compass.landice.tests.koge_bugt_s.KogeBugtS": [[224, 1, 1, "", "__init__"]], "compass.landice.tests.koge_bugt_s.mesh": [[225, 0, 1, "", "Mesh"]], "compass.landice.tests.koge_bugt_s.mesh.Mesh": [[225, 1, 1, "", "__init__"], [226, 1, 1, "", "run"]], "compass.landice.tests.koge_bugt_s.mesh_gen": [[227, 0, 1, "", "MeshGen"]], "compass.landice.tests.koge_bugt_s.mesh_gen.MeshGen": [[227, 1, 1, "", "__init__"], [228, 1, 1, "", "run"]], "compass.landice.tests.mismipplus": [[229, 0, 1, "", "MISMIPplus"]], "compass.landice.tests.mismipplus.MISMIPplus": [[229, 1, 1, "", "__init__"]], "compass.landice.tests.mismipplus.run_model": [[230, 0, 1, "", "RunModel"]], "compass.landice.tests.mismipplus.run_model.RunModel": [[230, 1, 1, "", "__init__"], [231, 1, 1, "", "run"], [232, 1, 1, "", "setup"]], "compass.landice.tests.mismipplus.smoke_test": [[233, 0, 1, "", "SmokeTest"]], "compass.landice.tests.mismipplus.smoke_test.SmokeTest": [[233, 1, 1, "", "__init__"], [234, 1, 1, "", "run"]], "compass.landice.tests.thwaites": [[235, 0, 1, "", "Thwaites"]], "compass.landice.tests.thwaites.Thwaites": [[235, 1, 1, "", "__init__"]], "compass.landice.tests.thwaites.decomposition_test": [[236, 0, 1, "", "DecompositionTest"]], "compass.landice.tests.thwaites.decomposition_test.DecompositionTest": [[236, 1, 1, "", "__init__"], [237, 1, 1, "", "run"]], "compass.landice.tests.thwaites.restart_test": [[238, 0, 1, "", "RestartTest"]], "compass.landice.tests.thwaites.restart_test.RestartTest": [[238, 1, 1, "", "__init__"], [239, 1, 1, "", "run"]], "compass.landice.tests.thwaites.run_model": [[240, 0, 1, "", "RunModel"]], "compass.landice.tests.thwaites.run_model.RunModel": [[240, 1, 1, "", "__init__"], [241, 1, 1, "", "run"], [242, 1, 1, "", "setup"]], "compass.list": [[40, 2, 1, "", "list_cases"], [41, 2, 1, "", "list_machines"], [42, 2, 1, "", "list_suites"]], "compass.logging": [[43, 2, 1, "", "log_method_call"]], "compass.mesh": [[44, 0, 1, "", "IcosahedralMeshStep"], [51, 0, 1, "", "QuasiUniformSphericalMeshStep"]], "compass.mesh.IcosahedralMeshStep": [[44, 1, 1, "", "__init__"], [45, 1, 1, "", "build_subdivisions_cell_width_lat_lon"], [46, 1, 1, "", "get_cell_width"], [47, 1, 1, "", "get_subdivisions"], [48, 1, 1, "", "make_jigsaw_mesh"], [49, 1, 1, "", "run"], [50, 1, 1, "", "setup"]], "compass.mesh.QuasiUniformSphericalMeshStep": [[51, 1, 1, "", "__init__"], [52, 1, 1, "", "build_cell_width_lat_lon"], [53, 1, 1, "", "make_jigsaw_mesh"], [54, 1, 1, "", "run"], [55, 1, 1, "", "setup"]], "compass.mesh.spherical": [[56, 0, 1, "", "SphericalBaseStep"]], "compass.mesh.spherical.SphericalBaseStep": [[56, 1, 1, "", "__init__"], [57, 1, 1, "", "run"], [58, 1, 1, "", "save_and_plot_cell_width"], [59, 1, 1, "", "setup"]], "compass.model": [[60, 2, 1, "", "make_graph_file"], [61, 2, 1, "", "partition"], [62, 2, 1, "", "run_model"]], "compass.mpas_cores": [[63, 2, 1, "", "get_mpas_cores"]], "compass.ocean": [[266, 0, 1, "", "Ocean"]], "compass.ocean.Ocean": [[266, 1, 1, "", "__init__"]], "compass.ocean.haney": [[267, 2, 1, "", "compute_haney_number"]], "compass.ocean.iceshelf": [[268, 2, 1, "", "adjust_ssh"], [269, 2, 1, "", "compute_land_ice_pressure_and_draft"]], "compass.ocean.mesh.cull": [[270, 0, 1, "", "CullMeshStep"], [273, 2, 1, "", "cull_mesh"]], "compass.ocean.mesh.cull.CullMeshStep": [[270, 1, 1, "", "__init__"], [271, 1, 1, "", "run"], [272, 1, 1, "", "setup"]], "compass.ocean.mesh.floodplain": [[274, 0, 1, "", "FloodplainMeshStep"]], "compass.ocean.mesh.floodplain.FloodplainMeshStep": [[274, 1, 1, "", "__init__"], [275, 1, 1, "", "run"]], "compass.ocean.particles": [[276, 2, 1, "", "remap_particles"], [277, 2, 1, "", "write"]], "compass.ocean.plot": [[278, 2, 1, "", "plot_initial_state"], [279, 2, 1, "", "plot_vertical_grid"]], "compass.ocean.tests.baroclinic_channel": [[280, 0, 1, "", "BaroclinicChannel"], [281, 2, 1, "", "configure"]], "compass.ocean.tests.baroclinic_channel.BaroclinicChannel": [[280, 1, 1, "", "__init__"]], "compass.ocean.tests.baroclinic_channel.decomp_test": [[282, 0, 1, "", "DecompTest"]], "compass.ocean.tests.baroclinic_channel.decomp_test.DecompTest": [[282, 1, 1, "", "__init__"], [283, 1, 1, "", "configure"], [284, 1, 1, "", "run"]], "compass.ocean.tests.baroclinic_channel.default": [[285, 0, 1, "", "Default"]], "compass.ocean.tests.baroclinic_channel.default.Default": [[285, 1, 1, "", "__init__"], [286, 1, 1, "", "configure"], [287, 1, 1, "", "run"]], "compass.ocean.tests.baroclinic_channel.forward": [[288, 0, 1, "", "Forward"]], "compass.ocean.tests.baroclinic_channel.forward.Forward": [[288, 1, 1, "", "__init__"], [289, 1, 1, "", "run"], [290, 1, 1, "", "setup"]], "compass.ocean.tests.baroclinic_channel.initial_state": [[291, 0, 1, "", "InitialState"]], "compass.ocean.tests.baroclinic_channel.initial_state.InitialState": [[291, 1, 1, "", "__init__"], [292, 1, 1, "", "run"], [293, 1, 1, "", "setup"]], "compass.ocean.tests.baroclinic_channel.restart_test": [[294, 0, 1, "", "RestartTest"]], "compass.ocean.tests.baroclinic_channel.restart_test.RestartTest": [[294, 1, 1, "", "__init__"], [295, 1, 1, "", "configure"], [296, 1, 1, "", "run"]], "compass.ocean.tests.baroclinic_channel.rpe_test": [[297, 0, 1, "", "RpeTest"]], "compass.ocean.tests.baroclinic_channel.rpe_test.RpeTest": [[297, 1, 1, "", "__init__"], [298, 1, 1, "", "configure"], [299, 1, 1, "", "run"]], "compass.ocean.tests.baroclinic_channel.rpe_test.analysis": [[300, 0, 1, "", "Analysis"]], "compass.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis": [[300, 1, 1, "", "__init__"], [301, 1, 1, "", "run"], [302, 1, 1, "", "setup"]], "compass.ocean.tests.baroclinic_channel.threads_test": [[303, 0, 1, "", "ThreadsTest"]], "compass.ocean.tests.baroclinic_channel.threads_test.ThreadsTest": [[303, 1, 1, "", "__init__"], [304, 1, 1, "", "configure"], [305, 1, 1, "", "run"]], "compass.ocean.tests.dam_break": [[306, 0, 1, "", "DamBreak"]], "compass.ocean.tests.dam_break.DamBreak": [[306, 1, 1, "", "__init__"]], "compass.ocean.tests.dam_break.default": [[307, 0, 1, "", "Default"]], "compass.ocean.tests.dam_break.default.Default": [[307, 1, 1, "", "__init__"], [308, 1, 1, "", "configure"]], "compass.ocean.tests.dam_break.forward": [[309, 0, 1, "", "Forward"]], "compass.ocean.tests.dam_break.forward.Forward": [[309, 1, 1, "", "__init__"], [310, 1, 1, "", "run"]], "compass.ocean.tests.dam_break.initial_state": [[311, 0, 1, "", "InitialState"]], "compass.ocean.tests.dam_break.initial_state.InitialState": [[311, 1, 1, "", "__init__"], [312, 1, 1, "", "run"]], "compass.ocean.tests.dam_break.viz": [[313, 0, 1, "", "Viz"]], "compass.ocean.tests.dam_break.viz.Viz": [[313, 1, 1, "", "__init__"], [314, 1, 1, "", "run"]], "compass.ocean.tests.drying_slope": [[315, 0, 1, "", "DryingSlope"]], "compass.ocean.tests.drying_slope.DryingSlope": [[315, 1, 1, "", "__init__"]], "compass.ocean.tests.drying_slope.default": [[316, 0, 1, "", "Default"]], "compass.ocean.tests.drying_slope.default.Default": [[316, 1, 1, "", "__init__"], [317, 1, 1, "", "configure"]], "compass.ocean.tests.drying_slope.forward": [[318, 0, 1, "", "Forward"]], "compass.ocean.tests.drying_slope.forward.Forward": [[318, 1, 1, "", "__init__"], [319, 1, 1, "", "run"]], "compass.ocean.tests.drying_slope.initial_state": [[320, 0, 1, "", "InitialState"]], "compass.ocean.tests.drying_slope.initial_state.InitialState": [[320, 1, 1, "", "__init__"], [321, 1, 1, "", "run"]], "compass.ocean.tests.drying_slope.viz": [[322, 0, 1, "", "Viz"]], "compass.ocean.tests.drying_slope.viz.Viz": [[322, 1, 1, "", "__init__"], [323, 1, 1, "", "run"]], "compass.ocean.tests.global_convergence": [[324, 0, 1, "", "GlobalConvergence"]], "compass.ocean.tests.global_convergence.GlobalConvergence": [[324, 1, 1, "", "__init__"]], "compass.ocean.tests.global_convergence.cosine_bell": [[325, 0, 1, "", "CosineBell"]], "compass.ocean.tests.global_convergence.cosine_bell.CosineBell": [[325, 1, 1, "", "__init__"], [326, 1, 1, "", "configure"], [327, 1, 1, "", "run"]], "compass.ocean.tests.global_convergence.cosine_bell.analysis": [[328, 0, 1, "", "Analysis"]], "compass.ocean.tests.global_convergence.cosine_bell.analysis.Analysis": [[328, 1, 1, "", "__init__"], [329, 1, 1, "", "rmse"], [330, 1, 1, "", "run"]], "compass.ocean.tests.global_convergence.cosine_bell.forward": [[331, 0, 1, "", "Forward"]], "compass.ocean.tests.global_convergence.cosine_bell.forward.Forward": [[331, 1, 1, "", "__init__"], [332, 1, 1, "", "get_dt"], [333, 1, 1, "", "run"], [334, 1, 1, "", "setup"]], "compass.ocean.tests.global_convergence.cosine_bell.init": [[335, 0, 1, "", "Init"]], "compass.ocean.tests.global_convergence.cosine_bell.init.Init": [[335, 1, 1, "", "__init__"], [336, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean": [[337, 0, 1, "", "GlobalOcean"], [341, 3, 0, "-", "configure"]], "compass.ocean.tests.global_ocean.GlobalOcean": [[337, 1, 1, "", "__init__"]], "compass.ocean.tests.global_ocean.analysis_test": [[338, 0, 1, "", "AnalysisTest"]], "compass.ocean.tests.global_ocean.analysis_test.AnalysisTest": [[338, 1, 1, "", "__init__"], [339, 1, 1, "", "configure"], [340, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.configure": [[342, 2, 1, "", "configure_global_ocean"]], "compass.ocean.tests.global_ocean.daily_output_test": [[343, 0, 1, "", "DailyOutputTest"]], "compass.ocean.tests.global_ocean.daily_output_test.DailyOutputTest": [[343, 1, 1, "", "__init__"], [344, 1, 1, "", "configure"], [345, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.decomp_test": [[346, 0, 1, "", "DecompTest"]], "compass.ocean.tests.global_ocean.decomp_test.DecompTest": [[346, 1, 1, "", "__init__"], [347, 1, 1, "", "configure"], [348, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.dynamic_adjustment": [[349, 0, 1, "", "DynamicAdjustment"]], "compass.ocean.tests.global_ocean.dynamic_adjustment.DynamicAdjustment": [[349, 1, 1, "", "__init__"], [350, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.files_for_e3sm": [[351, 0, 1, "", "FilesForE3SM"]], "compass.ocean.tests.global_ocean.files_for_e3sm.FilesForE3SM": [[351, 1, 1, "", "__init__"], [352, 1, 1, "", "configure"], [353, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.files_for_e3sm.diagnostics_files": [[354, 0, 1, "", "DiagnosticsFiles"]], "compass.ocean.tests.global_ocean.files_for_e3sm.diagnostics_files.DiagnosticsFiles": [[354, 1, 1, "", "__init__"], [355, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.files_for_e3sm.ocean_graph_partition": [[356, 0, 1, "", "OceanGraphPartition"]], "compass.ocean.tests.global_ocean.files_for_e3sm.ocean_graph_partition.OceanGraphPartition": [[356, 1, 1, "", "__init__"], [357, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.files_for_e3sm.ocean_initial_condition": [[358, 0, 1, "", "OceanInitialCondition"]], "compass.ocean.tests.global_ocean.files_for_e3sm.ocean_initial_condition.OceanInitialCondition": [[358, 1, 1, "", "__init__"], [359, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.files_for_e3sm.scrip": [[360, 0, 1, "", "Scrip"]], "compass.ocean.tests.global_ocean.files_for_e3sm.scrip.Scrip": [[360, 1, 1, "", "__init__"], [361, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.files_for_e3sm.seaice_initial_condition": [[362, 0, 1, "", "SeaiceInitialCondition"]], "compass.ocean.tests.global_ocean.files_for_e3sm.seaice_initial_condition.SeaiceInitialCondition": [[362, 1, 1, "", "__init__"], [363, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.forward": [[364, 0, 1, "", "ForwardStep"], [367, 0, 1, "", "ForwardTestCase"]], "compass.ocean.tests.global_ocean.forward.ForwardStep": [[364, 1, 1, "", "__init__"], [365, 1, 1, "", "run"], [366, 1, 1, "", "setup"]], "compass.ocean.tests.global_ocean.forward.ForwardTestCase": [[367, 1, 1, "", "__init__"], [368, 1, 1, "", "configure"], [369, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.init": [[370, 0, 1, "", "Init"]], "compass.ocean.tests.global_ocean.init.Init": [[370, 1, 1, "", "__init__"], [371, 1, 1, "", "configure"], [372, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.init.initial_state": [[373, 0, 1, "", "InitialState"]], "compass.ocean.tests.global_ocean.init.initial_state.InitialState": [[373, 1, 1, "", "__init__"], [374, 1, 1, "", "run"], [375, 1, 1, "", "setup"]], "compass.ocean.tests.global_ocean.init.ssh_adjustment": [[376, 0, 1, "", "SshAdjustment"]], "compass.ocean.tests.global_ocean.init.ssh_adjustment.SshAdjustment": [[376, 1, 1, "", "__init__"], [377, 1, 1, "", "run"], [378, 1, 1, "", "setup"]], "compass.ocean.tests.global_ocean.mesh": [[379, 0, 1, "", "Mesh"]], "compass.ocean.tests.global_ocean.mesh.Mesh": [[379, 1, 1, "", "__init__"], [380, 1, 1, "", "configure"], [381, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.mesh.ec30to60": [[382, 0, 1, "", "EC30to60BaseMesh"]], "compass.ocean.tests.global_ocean.mesh.ec30to60.EC30to60BaseMesh": [[382, 1, 1, "", "__init__"], [383, 1, 1, "", "build_cell_width_lat_lon"]], "compass.ocean.tests.global_ocean.mesh.ec30to60.dynamic_adjustment": [[384, 0, 1, "", "EC30to60DynamicAdjustment"]], "compass.ocean.tests.global_ocean.mesh.ec30to60.dynamic_adjustment.EC30to60DynamicAdjustment": [[384, 1, 1, "", "__init__"], [385, 1, 1, "", "configure"], [386, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.mesh.qu240.dynamic_adjustment": [[387, 0, 1, "", "QU240DynamicAdjustment"]], "compass.ocean.tests.global_ocean.mesh.qu240.dynamic_adjustment.QU240DynamicAdjustment": [[387, 1, 1, "", "__init__"], [388, 1, 1, "", "configure"], [389, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.mesh.so12to60": [[390, 0, 1, "", "SO12to60BaseMesh"]], "compass.ocean.tests.global_ocean.mesh.so12to60.SO12to60BaseMesh": [[390, 1, 1, "", "__init__"], [391, 1, 1, "", "build_cell_width_lat_lon"]], "compass.ocean.tests.global_ocean.mesh.so12to60.dynamic_adjustment": [[392, 0, 1, "", "SO12to60DynamicAdjustment"]], "compass.ocean.tests.global_ocean.mesh.so12to60.dynamic_adjustment.SO12to60DynamicAdjustment": [[392, 1, 1, "", "__init__"], [393, 1, 1, "", "configure"], [394, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.mesh.wc14": [[395, 0, 1, "", "WC14BaseMesh"]], "compass.ocean.tests.global_ocean.mesh.wc14.WC14BaseMesh": [[395, 1, 1, "", "__init__"], [396, 1, 1, "", "build_cell_width_lat_lon"]], "compass.ocean.tests.global_ocean.mesh.wc14.dynamic_adjustment": [[397, 0, 1, "", "WC14DynamicAdjustment"]], "compass.ocean.tests.global_ocean.mesh.wc14.dynamic_adjustment.WC14DynamicAdjustment": [[397, 1, 1, "", "__init__"], [398, 1, 1, "", "configure"], [399, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.metadata": [[400, 2, 1, "", "add_mesh_and_init_metadata"], [401, 2, 1, "", "get_e3sm_mesh_names"]], "compass.ocean.tests.global_ocean.performance_test": [[402, 0, 1, "", "PerformanceTest"]], "compass.ocean.tests.global_ocean.performance_test.PerformanceTest": [[402, 1, 1, "", "__init__"], [403, 1, 1, "", "configure"], [404, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.restart_test": [[405, 0, 1, "", "RestartTest"]], "compass.ocean.tests.global_ocean.restart_test.RestartTest": [[405, 1, 1, "", "__init__"], [406, 1, 1, "", "configure"], [407, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.threads_test": [[408, 0, 1, "", "ThreadsTest"]], "compass.ocean.tests.global_ocean.threads_test.ThreadsTest": [[408, 1, 1, "", "__init__"], [409, 1, 1, "", "configure"], [410, 1, 1, "", "run"]], "compass.ocean.tests.gotm": [[411, 0, 1, "", "Gotm"]], "compass.ocean.tests.gotm.Gotm": [[411, 1, 1, "", "__init__"]], "compass.ocean.tests.gotm.default": [[412, 0, 1, "", "Default"]], "compass.ocean.tests.gotm.default.Default": [[412, 1, 1, "", "__init__"], [413, 1, 1, "", "validate"]], "compass.ocean.tests.gotm.default.analysis": [[414, 0, 1, "", "Analysis"]], "compass.ocean.tests.gotm.default.analysis.Analysis": [[414, 1, 1, "", "__init__"], [415, 1, 1, "", "run"]], "compass.ocean.tests.gotm.default.forward": [[416, 0, 1, "", "Forward"]], "compass.ocean.tests.gotm.default.forward.Forward": [[416, 1, 1, "", "__init__"], [417, 1, 1, "", "run"]], "compass.ocean.tests.gotm.default.init": [[418, 0, 1, "", "Init"]], "compass.ocean.tests.gotm.default.init.Init": [[418, 1, 1, "", "__init__"], [419, 1, 1, "", "run"]], "compass.ocean.tests.hurricane": [[420, 0, 1, "", "Hurricane"], [427, 3, 0, "-", "configure"]], "compass.ocean.tests.hurricane.Hurricane": [[420, 1, 1, "", "__init__"]], "compass.ocean.tests.hurricane.analysis": [[421, 0, 1, "", "Analysis"]], "compass.ocean.tests.hurricane.analysis.Analysis": [[421, 1, 1, "", "__init__"], [422, 1, 1, "", "read_pointstats"], [423, 1, 1, "", "read_station_data"], [424, 1, 1, "", "read_station_file"], [425, 1, 1, "", "run"], [426, 1, 1, "", "setup"]], "compass.ocean.tests.hurricane.forward": [[428, 0, 1, "", "Forward"]], "compass.ocean.tests.hurricane.forward.Forward": [[428, 1, 1, "", "__init__"], [429, 1, 1, "", "configure"], [430, 1, 1, "", "run"]], "compass.ocean.tests.hurricane.forward.forward": [[431, 0, 1, "", "ForwardStep"]], "compass.ocean.tests.hurricane.forward.forward.ForwardStep": [[431, 1, 1, "", "__init__"], [432, 1, 1, "", "run"], [433, 1, 1, "", "setup"]], "compass.ocean.tests.hurricane.init": [[434, 0, 1, "", "Init"]], "compass.ocean.tests.hurricane.init.Init": [[434, 1, 1, "", "__init__"], [435, 1, 1, "", "configure"], [436, 1, 1, "", "run"]], "compass.ocean.tests.hurricane.init.create_pointstats_file": [[437, 0, 1, "", "CreatePointstatsFile"]], "compass.ocean.tests.hurricane.init.create_pointstats_file.CreatePointstatsFile": [[437, 1, 1, "", "__init__"], [438, 1, 1, "", "create_pointstats_file"], [439, 1, 1, "", "run"]], "compass.ocean.tests.hurricane.init.initial_state": [[440, 0, 1, "", "InitialState"]], "compass.ocean.tests.hurricane.init.initial_state.InitialState": [[440, 1, 1, "", "__init__"], [441, 1, 1, "", "run"], [442, 1, 1, "", "setup"]], "compass.ocean.tests.hurricane.init.interpolate_atm_forcing": [[443, 0, 1, "", "InterpolateAtmForcing"]], "compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing": [[443, 1, 1, "", "__init__"], [444, 1, 1, "", "interpolate_data_to_grid"], [445, 1, 1, "", "plot_interp_data"], [446, 1, 1, "", "run"], [447, 1, 1, "", "write_to_file"]], "compass.ocean.tests.hurricane.mesh": [[448, 0, 1, "", "Mesh"]], "compass.ocean.tests.hurricane.mesh.Mesh": [[448, 1, 1, "", "__init__"], [449, 1, 1, "", "configure"], [450, 1, 1, "", "run"]], "compass.ocean.tests.hurricane.mesh.dequ120at30cr10rr2": [[451, 0, 1, "", "DEQU120at30cr10rr2BaseMesh"]], "compass.ocean.tests.hurricane.mesh.dequ120at30cr10rr2.DEQU120at30cr10rr2BaseMesh": [[451, 1, 1, "", "__init__"], [452, 1, 1, "", "build_cell_width_lat_lon"]], "compass.ocean.tests.ice_shelf_2d": [[453, 0, 1, "", "IceShelf2d"], [454, 2, 1, "", "configure"]], "compass.ocean.tests.ice_shelf_2d.IceShelf2d": [[453, 1, 1, "", "__init__"]], "compass.ocean.tests.ice_shelf_2d.default": [[455, 0, 1, "", "Default"]], "compass.ocean.tests.ice_shelf_2d.default.Default": [[455, 1, 1, "", "__init__"], [456, 1, 1, "", "configure"], [457, 1, 1, "", "run"]], "compass.ocean.tests.ice_shelf_2d.forward": [[458, 0, 1, "", "Forward"]], "compass.ocean.tests.ice_shelf_2d.forward.Forward": [[458, 1, 1, "", "__init__"], [459, 1, 1, "", "run"], [460, 1, 1, "", "setup"]], "compass.ocean.tests.ice_shelf_2d.initial_state": [[461, 0, 1, "", "InitialState"]], "compass.ocean.tests.ice_shelf_2d.initial_state.InitialState": [[461, 1, 1, "", "__init__"], [462, 1, 1, "", "run"]], "compass.ocean.tests.ice_shelf_2d.restart_test": [[463, 0, 1, "", "RestartTest"]], "compass.ocean.tests.ice_shelf_2d.restart_test.RestartTest": [[463, 1, 1, "", "__init__"], [464, 1, 1, "", "configure"], [465, 1, 1, "", "run"]], "compass.ocean.tests.ice_shelf_2d.ssh_adjustment": [[466, 0, 1, "", "SshAdjustment"]], "compass.ocean.tests.ice_shelf_2d.ssh_adjustment.SshAdjustment": [[466, 1, 1, "", "__init__"], [467, 1, 1, "", "run"], [468, 1, 1, "", "setup"]], "compass.ocean.tests.ice_shelf_2d.viz": [[469, 0, 1, "", "Viz"]], "compass.ocean.tests.ice_shelf_2d.viz.Viz": [[469, 1, 1, "", "__init__"], [470, 1, 1, "", "run"]], "compass.ocean.tests.internal_wave": [[471, 0, 1, "", "InternalWave"]], "compass.ocean.tests.internal_wave.InternalWave": [[471, 1, 1, "", "__init__"]], "compass.ocean.tests.internal_wave.default": [[472, 0, 1, "", "Default"]], "compass.ocean.tests.internal_wave.default.Default": [[472, 1, 1, "", "__init__"], [473, 1, 1, "", "validate"]], "compass.ocean.tests.internal_wave.forward": [[474, 0, 1, "", "Forward"]], "compass.ocean.tests.internal_wave.forward.Forward": [[474, 1, 1, "", "__init__"], [475, 1, 1, "", "run"]], "compass.ocean.tests.internal_wave.initial_state": [[476, 0, 1, "", "InitialState"]], "compass.ocean.tests.internal_wave.initial_state.InitialState": [[476, 1, 1, "", "__init__"], [477, 1, 1, "", "run"]], "compass.ocean.tests.internal_wave.rpe_test": [[478, 0, 1, "", "RpeTest"]], "compass.ocean.tests.internal_wave.rpe_test.RpeTest": [[478, 1, 1, "", "__init__"]], "compass.ocean.tests.internal_wave.rpe_test.analysis": [[479, 0, 1, "", "Analysis"]], "compass.ocean.tests.internal_wave.rpe_test.analysis.Analysis": [[479, 1, 1, "", "__init__"], [480, 1, 1, "", "run"]], "compass.ocean.tests.internal_wave.ten_day_test": [[481, 0, 1, "", "TenDayTest"]], "compass.ocean.tests.internal_wave.ten_day_test.TenDayTest": [[481, 1, 1, "", "__init__"], [482, 1, 1, "", "validate"]], "compass.ocean.tests.internal_wave.viz": [[483, 0, 1, "", "Viz"]], "compass.ocean.tests.internal_wave.viz.Viz": [[483, 1, 1, "", "__init__"], [484, 1, 1, "", "run"]], "compass.ocean.tests.isomip_plus": [[485, 0, 1, "", "IsomipPlus"]], "compass.ocean.tests.isomip_plus.IsomipPlus": [[485, 1, 1, "", "__init__"]], "compass.ocean.tests.isomip_plus.evap": [[486, 2, 1, "", "update_evaporation_flux"]], "compass.ocean.tests.isomip_plus.forward": [[487, 0, 1, "", "Forward"]], "compass.ocean.tests.isomip_plus.forward.Forward": [[487, 1, 1, "", "__init__"], [488, 1, 1, "", "run"], [489, 1, 1, "", "setup"]], "compass.ocean.tests.isomip_plus.geom": [[490, 2, 1, "", "interpolate_ocean_mask"], [491, 2, 1, "", "process_input_geometry"]], "compass.ocean.tests.isomip_plus.initial_state": [[492, 0, 1, "", "InitialState"]], "compass.ocean.tests.isomip_plus.initial_state.InitialState": [[492, 1, 1, "", "__init__"], [493, 1, 1, "", "run"]], "compass.ocean.tests.isomip_plus.isomip_plus_test": [[494, 0, 1, "", "IsomipPlusTest"]], "compass.ocean.tests.isomip_plus.isomip_plus_test.IsomipPlusTest": [[494, 1, 1, "", "__init__"], [495, 1, 1, "", "configure"], [496, 1, 1, "", "run"]], "compass.ocean.tests.isomip_plus.misomip": [[497, 0, 1, "", "Misomip"]], "compass.ocean.tests.isomip_plus.misomip.Misomip": [[497, 1, 1, "", "__init__"], [498, 1, 1, "", "run"]], "compass.ocean.tests.isomip_plus.ssh_adjustment": [[499, 0, 1, "", "SshAdjustment"]], "compass.ocean.tests.isomip_plus.ssh_adjustment.SshAdjustment": [[499, 1, 1, "", "__init__"], [500, 1, 1, "", "run"], [501, 1, 1, "", "setup"]], "compass.ocean.tests.isomip_plus.streamfunction": [[502, 0, 1, "", "Streamfunction"]], "compass.ocean.tests.isomip_plus.streamfunction.Streamfunction": [[502, 1, 1, "", "__init__"], [503, 1, 1, "", "run"]], "compass.ocean.tests.isomip_plus.viz": [[504, 0, 1, "", "Viz"], [506, 2, 1, "", "file_complete"]], "compass.ocean.tests.isomip_plus.viz.Viz": [[504, 1, 1, "", "__init__"], [505, 1, 1, "", "run"]], "compass.ocean.tests.isomip_plus.viz.plot": [[507, 0, 1, "", "MoviePlotter"], [519, 0, 1, "", "TimeSeriesPlotter"]], "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter": [[507, 1, 1, "", "__init__"], [508, 1, 1, "", "images_to_movies"], [509, 1, 1, "", "plot_3d_field_top_bot_section"], [510, 1, 1, "", "plot_barotropic_streamfunction"], [511, 1, 1, "", "plot_horiz_series"], [512, 1, 1, "", "plot_ice_shelf_boundary_variables"], [513, 1, 1, "", "plot_layer_interfaces"], [514, 1, 1, "", "plot_melt_rates"], [515, 1, 1, "", "plot_overturning_streamfunction"], [516, 1, 1, "", "plot_potential_density"], [517, 1, 1, "", "plot_salinity"], [518, 1, 1, "", "plot_temperature"]], "compass.ocean.tests.isomip_plus.viz.plot.TimeSeriesPlotter": [[519, 1, 1, "", "__init__"], [520, 1, 1, "", "plot_melt_time_series"], [521, 1, 1, "", "plot_time_series"]], "compass.ocean.tests.merry_go_round": [[522, 0, 1, "", "MerryGoRound"]], "compass.ocean.tests.merry_go_round.MerryGoRound": [[522, 1, 1, "", "__init__"]], "compass.ocean.tests.merry_go_round.convergence_test.analysis": [[523, 0, 1, "", "Analysis"]], "compass.ocean.tests.merry_go_round.convergence_test.analysis.Analysis": [[523, 1, 1, "", "__init__"], [524, 1, 1, "", "run"]], "compass.ocean.tests.merry_go_round.default": [[525, 0, 1, "", "Default"]], "compass.ocean.tests.merry_go_round.default.Default": [[525, 1, 1, "", "__init__"], [526, 1, 1, "", "validate"]], "compass.ocean.tests.merry_go_round.forward": [[527, 0, 1, "", "Forward"]], "compass.ocean.tests.merry_go_round.forward.Forward": [[527, 1, 1, "", "__init__"], [528, 1, 1, "", "run"]], "compass.ocean.tests.merry_go_round.initial_state": [[529, 0, 1, "", "InitialState"]], "compass.ocean.tests.merry_go_round.initial_state.InitialState": [[529, 1, 1, "", "__init__"], [530, 1, 1, "", "run"]], "compass.ocean.tests.merry_go_round.viz": [[531, 0, 1, "", "Viz"]], "compass.ocean.tests.merry_go_round.viz.Viz": [[531, 1, 1, "", "__init__"], [532, 1, 1, "", "run"]], "compass.ocean.tests.planar_convergence": [[533, 0, 1, "", "PlanarConvergence"]], "compass.ocean.tests.planar_convergence.PlanarConvergence": [[533, 1, 1, "", "__init__"]], "compass.ocean.tests.planar_convergence.conv_init": [[534, 0, 1, "", "ConvInit"]], "compass.ocean.tests.planar_convergence.conv_init.ConvInit": [[534, 1, 1, "", "__init__"], [535, 1, 1, "", "run"]], "compass.ocean.tests.planar_convergence.conv_test_case": [[536, 0, 1, "", "ConvTestCase"]], "compass.ocean.tests.planar_convergence.conv_test_case.ConvTestCase": [[536, 1, 1, "", "__init__"], [537, 1, 1, "", "configure"], [538, 1, 1, "", "run"], [539, 1, 1, "", "update_cores"]], "compass.ocean.tests.planar_convergence.forward": [[540, 0, 1, "", "Forward"]], "compass.ocean.tests.planar_convergence.forward.Forward": [[540, 1, 1, "", "__init__"], [541, 1, 1, "", "get_dt_duration"], [542, 1, 1, "", "run"], [543, 1, 1, "", "setup"]], "compass.ocean.tests.planar_convergence.horizontal_advection": [[544, 0, 1, "", "HorizontalAdvection"]], "compass.ocean.tests.planar_convergence.horizontal_advection.HorizontalAdvection": [[544, 1, 1, "", "__init__"], [545, 1, 1, "", "configure"], [546, 1, 1, "", "run"]], "compass.ocean.tests.planar_convergence.horizontal_advection.analysis": [[547, 0, 1, "", "Analysis"]], "compass.ocean.tests.planar_convergence.horizontal_advection.analysis.Analysis": [[547, 1, 1, "", "__init__"], [548, 1, 1, "", "rmse"], [549, 1, 1, "", "run"]], "compass.ocean.tests.planar_convergence.horizontal_advection.init": [[550, 0, 1, "", "Init"]], "compass.ocean.tests.planar_convergence.horizontal_advection.init.Init": [[550, 1, 1, "", "__init__"], [551, 1, 1, "", "run"]], "compass.ocean.tests.soma": [[552, 0, 1, "", "Soma"]], "compass.ocean.tests.soma.Soma": [[552, 1, 1, "", "__init__"]], "compass.ocean.tests.soma.analysis": [[553, 0, 1, "", "Analysis"]], "compass.ocean.tests.soma.analysis.Analysis": [[553, 1, 1, "", "__init__"], [554, 1, 1, "", "run"]], "compass.ocean.tests.soma.forward": [[555, 0, 1, "", "Forward"]], "compass.ocean.tests.soma.forward.Forward": [[555, 1, 1, "", "__init__"], [556, 1, 1, "", "run"]], "compass.ocean.tests.soma.initial_state": [[557, 0, 1, "", "InitialState"]], "compass.ocean.tests.soma.initial_state.InitialState": [[557, 1, 1, "", "__init__"], [558, 1, 1, "", "run"]], "compass.ocean.tests.soma.soma_test_case": [[559, 0, 1, "", "SomaTestCase"]], "compass.ocean.tests.soma.soma_test_case.SomaTestCase": [[559, 1, 1, "", "__init__"], [560, 1, 1, "", "validate"]], "compass.ocean.tests.sphere_transport": [[561, 0, 1, "", "SphereTransport"]], "compass.ocean.tests.sphere_transport.SphereTransport": [[561, 1, 1, "", "__init__"]], "compass.ocean.tests.sphere_transport.correlated_tracers_2d": [[562, 0, 1, "", "CorrelatedTracers2D"]], "compass.ocean.tests.sphere_transport.correlated_tracers_2d.CorrelatedTracers2D": [[562, 1, 1, "", "__init__"], [563, 1, 1, "", "configure"], [564, 1, 1, "", "run"]], "compass.ocean.tests.sphere_transport.correlated_tracers_2d.analysis": [[565, 0, 1, "", "Analysis"]], "compass.ocean.tests.sphere_transport.correlated_tracers_2d.analysis.Analysis": [[565, 1, 1, "", "__init__"], [566, 1, 1, "", "run"]], "compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward": [[567, 0, 1, "", "Forward"]], "compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.Forward": [[567, 1, 1, "", "__init__"], [568, 1, 1, "", "get_timestep_str"], [569, 1, 1, "", "run"], [570, 1, 1, "", "setup"]], "compass.ocean.tests.sphere_transport.correlated_tracers_2d.init": [[571, 0, 1, "", "Init"]], "compass.ocean.tests.sphere_transport.correlated_tracers_2d.init.Init": [[571, 1, 1, "", "__init__"], [572, 1, 1, "", "run"]], "compass.ocean.tests.sphere_transport.correlated_tracers_2d.mesh": [[573, 0, 1, "", "Mesh"]], "compass.ocean.tests.sphere_transport.correlated_tracers_2d.mesh.Mesh": [[573, 1, 1, "", "__init__"], [574, 1, 1, "", "build_cell_width_lat_lon"], [575, 1, 1, "", "run"]], "compass.ocean.tests.sphere_transport.divergent_2d": [[576, 0, 1, "", "Divergent2D"]], "compass.ocean.tests.sphere_transport.divergent_2d.Divergent2D": [[576, 1, 1, "", "__init__"], [577, 1, 1, "", "configure"], [578, 1, 1, "", "run"]], "compass.ocean.tests.sphere_transport.divergent_2d.analysis": [[579, 0, 1, "", "Analysis"]], "compass.ocean.tests.sphere_transport.divergent_2d.analysis.Analysis": [[579, 1, 1, "", "__init__"], [580, 1, 1, "", "run"]], "compass.ocean.tests.sphere_transport.divergent_2d.forward": [[581, 0, 1, "", "Forward"]], "compass.ocean.tests.sphere_transport.divergent_2d.forward.Forward": [[581, 1, 1, "", "__init__"], [582, 1, 1, "", "get_timestep_str"], [583, 1, 1, "", "run"], [584, 1, 1, "", "setup"]], "compass.ocean.tests.sphere_transport.divergent_2d.init": [[585, 0, 1, "", "Init"]], "compass.ocean.tests.sphere_transport.divergent_2d.init.Init": [[585, 1, 1, "", "__init__"], [586, 1, 1, "", "run"]], "compass.ocean.tests.sphere_transport.divergent_2d.mesh": [[587, 0, 1, "", "Mesh"]], "compass.ocean.tests.sphere_transport.divergent_2d.mesh.Mesh": [[587, 1, 1, "", "__init__"], [588, 1, 1, "", "build_cell_width_lat_lon"], [589, 1, 1, "", "run"]], "compass.ocean.tests.sphere_transport.nondivergent_2d": [[590, 0, 1, "", "Nondivergent2D"]], "compass.ocean.tests.sphere_transport.nondivergent_2d.Nondivergent2D": [[590, 1, 1, "", "__init__"], [591, 1, 1, "", "configure"], [592, 1, 1, "", "run"]], "compass.ocean.tests.sphere_transport.nondivergent_2d.analysis": [[593, 0, 1, "", "Analysis"]], "compass.ocean.tests.sphere_transport.nondivergent_2d.analysis.Analysis": [[593, 1, 1, "", "__init__"], [594, 1, 1, "", "run"]], "compass.ocean.tests.sphere_transport.nondivergent_2d.forward": [[595, 0, 1, "", "Forward"]], "compass.ocean.tests.sphere_transport.nondivergent_2d.forward.Forward": [[595, 1, 1, "", "__init__"], [596, 1, 1, "", "get_timestep_str"], [597, 1, 1, "", "run"], [598, 1, 1, "", "setup"]], "compass.ocean.tests.sphere_transport.nondivergent_2d.init": [[599, 0, 1, "", "Init"]], "compass.ocean.tests.sphere_transport.nondivergent_2d.init.Init": [[599, 1, 1, "", "__init__"], [600, 1, 1, "", "run"]], "compass.ocean.tests.sphere_transport.nondivergent_2d.mesh": [[601, 0, 1, "", "Mesh"]], "compass.ocean.tests.sphere_transport.nondivergent_2d.mesh.Mesh": [[601, 1, 1, "", "__init__"], [602, 1, 1, "", "build_cell_width_lat_lon"], [603, 1, 1, "", "run"]], "compass.ocean.tests.sphere_transport.process_output": [[604, 2, 1, "", "compute_convergence_rates"], [605, 2, 1, "", "compute_error_from_output_ncfile"], [606, 2, 1, "", "make_convergence_arrays"], [607, 2, 1, "", "plot_convergence"], [608, 2, 1, "", "plot_filament"], [609, 2, 1, "", "plot_over_and_undershoot_errors"], [610, 2, 1, "", "plot_sol"], [611, 2, 1, "", "print_data_as_csv"], [612, 2, 1, "", "print_error_conv_table"], [613, 2, 1, "", "read_ncl_rgb_file"]], "compass.ocean.tests.sphere_transport.rotation_2d": [[614, 0, 1, "", "Rotation2D"]], "compass.ocean.tests.sphere_transport.rotation_2d.Rotation2D": [[614, 1, 1, "", "__init__"], [615, 1, 1, "", "configure"], [616, 1, 1, "", "run"]], "compass.ocean.tests.sphere_transport.rotation_2d.analysis": [[617, 0, 1, "", "Analysis"]], "compass.ocean.tests.sphere_transport.rotation_2d.analysis.Analysis": [[617, 1, 1, "", "__init__"], [618, 1, 1, "", "run"]], "compass.ocean.tests.sphere_transport.rotation_2d.forward": [[619, 0, 1, "", "Forward"]], "compass.ocean.tests.sphere_transport.rotation_2d.forward.Forward": [[619, 1, 1, "", "__init__"], [620, 1, 1, "", "get_timestep_str"], [621, 1, 1, "", "run"], [622, 1, 1, "", "setup"]], "compass.ocean.tests.sphere_transport.rotation_2d.init": [[623, 0, 1, "", "Init"]], "compass.ocean.tests.sphere_transport.rotation_2d.init.Init": [[623, 1, 1, "", "__init__"], [624, 1, 1, "", "run"]], "compass.ocean.tests.sphere_transport.rotation_2d.mesh": [[625, 0, 1, "", "Mesh"]], "compass.ocean.tests.sphere_transport.rotation_2d.mesh.Mesh": [[625, 1, 1, "", "__init__"], [626, 1, 1, "", "build_cell_width_lat_lon"], [627, 1, 1, "", "run"]], "compass.ocean.tests.tides": [[628, 0, 1, "", "Tides"], [639, 3, 0, "-", "configure"]], "compass.ocean.tests.tides.Tides": [[628, 1, 1, "", "__init__"]], "compass.ocean.tests.tides.analysis": [[629, 0, 1, "", "Analysis"]], "compass.ocean.tests.tides.analysis.Analysis": [[629, 1, 1, "", "__init__"], [630, 1, 1, "", "append_tpxo_data"], [631, 1, 1, "", "check_tpxo_data"], [632, 1, 1, "", "plot"], [633, 1, 1, "", "read_otps2_output"], [634, 1, 1, "", "run"], [635, 1, 1, "", "run_otps2"], [636, 1, 1, "", "setup"], [637, 1, 1, "", "setup_otps2"], [638, 1, 1, "", "write_coordinate_file"]], "compass.ocean.tests.tides.forward": [[640, 0, 1, "", "Forward"]], "compass.ocean.tests.tides.forward.Forward": [[640, 1, 1, "", "__init__"], [641, 1, 1, "", "configure"], [642, 1, 1, "", "run"]], "compass.ocean.tests.tides.forward.forward": [[643, 0, 1, "", "ForwardStep"]], "compass.ocean.tests.tides.forward.forward.ForwardStep": [[643, 1, 1, "", "__init__"], [644, 1, 1, "", "run"], [645, 1, 1, "", "setup"]], "compass.ocean.tests.tides.init": [[646, 0, 1, "", "Init"]], "compass.ocean.tests.tides.init.Init": [[646, 1, 1, "", "__init__"], [647, 1, 1, "", "configure"], [648, 1, 1, "", "run"]], "compass.ocean.tests.tides.init.initial_state": [[649, 0, 1, "", "InitialState"]], "compass.ocean.tests.tides.init.initial_state.InitialState": [[649, 1, 1, "", "__init__"], [650, 1, 1, "", "run"], [651, 1, 1, "", "setup"]], "compass.ocean.tests.tides.init.interpolate_wave_drag": [[652, 0, 1, "", "InterpolateWaveDrag"]], "compass.ocean.tests.tides.init.interpolate_wave_drag.InterpolateWaveDrag": [[652, 1, 1, "", "__init__"], [653, 1, 1, "", "interpolate_data_to_grid"], [654, 1, 1, "", "plot_interp_data"], [655, 1, 1, "", "run"], [656, 1, 1, "", "write_to_file"]], "compass.ocean.tests.tides.init.remap_bathymetry": [[657, 0, 1, "", "RemapBathymetry"]], "compass.ocean.tests.tides.init.remap_bathymetry.RemapBathymetry": [[657, 1, 1, "", "__init__"], [658, 1, 1, "", "run"]], "compass.ocean.tests.tides.mesh": [[659, 0, 1, "", "Mesh"]], "compass.ocean.tests.tides.mesh.Mesh": [[659, 1, 1, "", "__init__"], [660, 1, 1, "", "configure"], [661, 1, 1, "", "run"]], "compass.ocean.tests.ziso": [[662, 0, 1, "", "Ziso"], [663, 0, 1, "", "ZisoTestCase"], [666, 2, 1, "", "configure"]], "compass.ocean.tests.ziso.Ziso": [[662, 1, 1, "", "__init__"]], "compass.ocean.tests.ziso.ZisoTestCase": [[663, 1, 1, "", "__init__"], [664, 1, 1, "", "configure"], [665, 1, 1, "", "run"]], "compass.ocean.tests.ziso.forward": [[667, 0, 1, "", "Forward"]], "compass.ocean.tests.ziso.forward.Forward": [[667, 1, 1, "", "__init__"], [668, 1, 1, "", "run"], [669, 1, 1, "", "setup"]], "compass.ocean.tests.ziso.initial_state": [[670, 0, 1, "", "InitialState"]], "compass.ocean.tests.ziso.initial_state.InitialState": [[670, 1, 1, "", "__init__"], [671, 1, 1, "", "run"]], "compass.ocean.tests.ziso.with_frazil": [[672, 0, 1, "", "WithFrazil"]], "compass.ocean.tests.ziso.with_frazil.WithFrazil": [[672, 1, 1, "", "__init__"], [673, 1, 1, "", "configure"], [674, 1, 1, "", "run"]], "compass.ocean.vertical.grid_1d": [[675, 2, 1, "", "generate_1d_grid"], [676, 2, 1, "", "write_1d_grid"]], "compass.ocean.vertical": [[677, 2, 1, "", "init_vertical_coord"]], "compass.ocean.vertical.partial_cells": [[678, 2, 1, "", "alter_bottom_depth"], [679, 2, 1, "", "alter_ssh"]], "compass.ocean.vertical.zlevel": [[680, 2, 1, "", "compute_min_max_level_cell"], [681, 2, 1, "", "compute_z_level_layer_thickness"], [682, 2, 1, "", "compute_z_level_resting_thickness"], [683, 2, 1, "", "init_z_level_vertical_coord"]], "compass.ocean.vertical.zstar": [[684, 2, 1, "", "init_z_star_vertical_coord"]], "compass.parallel": [[64, 2, 1, "", "check_parallel_system"], [65, 2, 1, "", "get_available_cores_and_nodes"], [66, 2, 1, "", "run_command"], [67, 2, 1, "", "set_cores_per_node"]], "compass.provenance": [[68, 2, 1, "", "write"]], "compass.run.serial": [[69, 2, 1, "", "run_single_step"], [70, 2, 1, "", "run_tests"]], "compass.setup": [[71, 2, 1, "", "setup_case"], [72, 2, 1, "", "setup_cases"]], "compass.suite": [[73, 2, 1, "", "clean_suite"], [74, 2, 1, "", "setup_suite"]], "compass.validate": [[75, 2, 1, "", "compare_timers"], [76, 2, 1, "", "compare_variables"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:module"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "module", "Python module"]}, "titleterms": {"cach": [0, 4, 6, 8, 34, 704], "output": [0, 1, 704, 711], "from": [0, 704, 706, 735], "compass": [0, 1, 4, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 704, 705, 706, 709, 712, 760], "step": [0, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 264, 690, 704, 710, 711, 712, 745, 746, 748, 754, 756, 758], "summari": [0, 1, 3], "requir": [0, 1, 3], "select": 0, "whether": 0, "us": 0, "updat": [0, 8, 704, 706, 712], "uniqu": 0, "identifi": 0, "either": 0, "normal": 0, "version": [0, 709, 763], "design": [0, 1, 2, 3], "implement": [0, 1, 3], "test": [0, 1, 3, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 252, 264, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 690, 694, 704, 705, 710, 711, 712, 713, 716, 725, 741, 746, 748, 750, 758, 760, 761, 762], "python": 1, "packag": [1, 705], "make": [1, 8, 710, 711, 712], "case": [1, 264, 690, 704, 705, 710, 711, 712, 713, 746, 748, 758, 760, 761], "easi": 1, "understand": 1, "modifi": 1, "creat": [1, 706, 711, 748], "share": [1, 705, 746, 748, 749, 752, 754, 755, 758, 759], "code": [1, 705, 763], "configur": [1, 28, 126, 131, 186, 202, 205, 213, 281, 283, 286, 295, 298, 304, 308, 317, 326, 339, 341, 342, 344, 347, 352, 368, 371, 380, 385, 388, 393, 398, 403, 406, 409, 427, 429, 435, 449, 454, 456, 464, 495, 537, 545, 563, 577, 591, 615, 639, 641, 647, 660, 664, 666, 673, 690, 704, 707], "option": [1, 3, 8, 704, 706, 711, 712, 717, 718, 719, 720, 721, 722, 723, 724, 726, 727, 728, 730, 731, 732, 733, 734, 735, 736, 742, 743, 744, 745, 746, 747, 748, 749, 751, 752, 753, 754, 755, 756, 757, 758, 759], "abil": 1, "specifi": 1, "core": [1, 4, 243, 685, 704, 705, 715, 740, 745, 754, 756], "count": 1, "machin": [1, 262, 706, 735, 760], "specif": 1, "data": [1, 734, 736], "looser": 1, "more": 1, "flexibl": 1, "directori": [1, 704], "structur": [1, 704], "user": [1, 706, 709, 713, 760], "develop": [1, 706, 709, 710, 711, 712], "friendli": 1, "document": [1, 2, 5, 7, 710, 711, 712, 763], "consider": 1, "relat": 1, "run": [1, 4, 6, 8, 19, 29, 49, 54, 57, 69, 70, 84, 87, 89, 91, 93, 97, 99, 101, 104, 106, 108, 112, 114, 116, 119, 121, 123, 127, 129, 132, 134, 137, 140, 143, 145, 148, 150, 152, 155, 160, 162, 166, 169, 171, 173, 176, 178, 180, 182, 194, 200, 210, 217, 221, 223, 226, 228, 231, 234, 237, 239, 241, 271, 275, 284, 287, 289, 292, 296, 299, 301, 305, 310, 312, 314, 319, 321, 323, 327, 330, 333, 336, 340, 345, 348, 350, 353, 355, 357, 359, 361, 363, 365, 369, 372, 374, 377, 381, 386, 389, 394, 399, 404, 407, 410, 415, 417, 419, 425, 430, 432, 436, 439, 441, 446, 450, 457, 459, 462, 465, 467, 470, 475, 477, 480, 484, 488, 493, 496, 498, 500, 503, 505, 524, 528, 530, 532, 535, 538, 542, 546, 549, 551, 554, 556, 558, 564, 566, 569, 572, 575, 578, 580, 583, 586, 589, 592, 594, 597, 600, 603, 616, 618, 621, 624, 627, 634, 642, 644, 648, 650, 655, 658, 661, 665, 668, 671, 674, 704, 706, 711, 712, 752, 760], "parallel": [1, 4, 64, 65, 66, 67], "resolut": [1, 711, 712, 745, 754, 756, 757], "can": 1, "paramet": [1, 710, 711, 712], "i": 1, "alter": 1, "rerun": 1, "support": [1, 262, 706, 735, 760], "pre": 1, "made": 1, "initi": [1, 711, 748, 758], "condit": [1, 711], "file": [1, 8, 265, 704, 711, 713, 748], "batch": 1, "submiss": 1, "algorithm": [1, 3], "constructor": [1, 704], "setup": [1, 4, 6, 8, 22, 50, 55, 59, 71, 72, 102, 117, 138, 153, 174, 195, 201, 211, 218, 232, 242, 272, 290, 293, 302, 334, 366, 375, 378, 426, 433, 442, 460, 468, 489, 501, 543, 570, 584, 598, 622, 636, 645, 651, 669, 704], "global": 1, "ocean": [1, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 740], "group": [1, 77, 252, 264, 694, 704, 705, 710, 711, 712, 725, 750], "framework": [1, 4, 8, 78, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 264, 265, 686, 687, 688, 690, 693, 695, 696, 697, 699, 703, 705, 714, 738], "within": [1, 705], "an": [1, 704, 705, 710, 711], "mpa": [1, 4, 8, 704, 705, 706, 760], "max_memori": 1, "max_disk": 1, "input": [1, 704], "templat": [3, 704], "name": 3, "topic": 3, "here": 3, "same": 3, "valid": [3, 4, 8, 30, 75, 76, 82, 158, 164, 413, 473, 482, 526, 560, 704, 712], "api": 4, "refer": 4, "command": [4, 6], "line": [4, 6], "interfac": [4, 6], "list": [4, 6, 8, 40, 41, 42], "clean": [4, 6, 8, 35], "suit": [4, 6, 8, 73, 74, 704, 716, 741, 760, 762], "base": [4, 711], "class": [4, 690, 705], "mpas_cor": [4, 63], "testgroup": [4, 31, 32], "testcas": [4, 26, 27, 28, 29, 30, 704], "config": [4, 8, 36, 711, 712, 713, 717, 718, 719, 720, 721, 722, 723, 724, 726, 727, 728, 730, 731, 732, 733, 734, 735, 736, 742, 743, 744, 745, 746, 747, 748, 749, 751, 752, 753, 754, 755, 756, 757, 758, 759], "io": [4, 8, 37, 38, 39], "log": [4, 8, 43], "mesh": [4, 8, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 146, 147, 148, 159, 160, 220, 221, 225, 226, 249, 250, 254, 255, 257, 265, 270, 271, 272, 273, 274, 275, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 448, 449, 450, 451, 452, 573, 574, 575, 587, 588, 589, 601, 602, 603, 625, 626, 627, 659, 660, 661, 689, 690, 692, 700, 701, 710, 711, 746, 748, 758], "model": [4, 8, 60, 61, 62, 704], "proven": [4, 8, 68], "build": [5, 706, 760], "docstr": 7, "modul": [8, 705, 706], "serial": [8, 69, 70], "comment": 8, "symlink": [8, 39, 704], "download": [8, 37, 704], "spheric": [8, 56, 57, 58, 59], "partit": [8, 61], "pio": 8, "namelist": [8, 265, 704, 711, 712], "graph": 8, "variabl": 8, "norm": 8, "timer": 8, "mpascor": [9, 10], "add_test_group": 10, "add_input_fil": 12, "add_model_as_input": 13, "add_namelist_fil": 14, "add_namelist_opt": 15, "add_output_fil": 16, "add_streams_fil": 17, "constrain_resourc": [18, 704], "runtime_setup": [20, 704], "set_resourc": 21, "update_namelist_at_runtim": 23, "update_namelist_pio": 24, "update_streams_at_runtim": 25, "add_step": 27, "add_test_cas": 32, "__main__": 33, "main": 33, "update_cach": 34, "clean_cas": 35, "compassconfigpars": 36, "package_path": 38, "list_cas": 40, "list_machin": 41, "list_suit": 42, "log_method_cal": 43, "icosahedralmeshstep": [44, 45, 46, 47, 48, 49, 50], "build_subdivisions_cell_width_lat_lon": 45, "get_cell_width": 46, "get_subdivis": 47, "make_jigsaw_mesh": [48, 53], "quasiuniformsphericalmeshstep": [51, 52, 53, 54, 55], "build_cell_width_lat_lon": [52, 383, 391, 396, 452, 574, 588, 602, 626], "sphericalbasestep": [56, 57, 58, 59], "save_and_plot_cell_width": 58, "make_graph_fil": 60, "run_model": [62, 83, 84, 88, 89, 100, 101, 102, 136, 137, 138, 151, 152, 153, 165, 166, 172, 173, 174, 230, 231, 232, 240, 241, 242, 248, 249, 250, 251, 256, 257], "get_mpas_cor": 63, "check_parallel_system": 64, "get_available_cores_and_nod": 65, "run_command": 66, "set_cores_per_nod": 67, "write": [68, 277], "run_single_step": 69, "run_test": 70, "setup_cas": [71, 72], "clean_suit": 73, "setup_suit": 74, "compare_tim": 75, "compare_vari": 76, "landic": [77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 715], "calving_dt_converg": [77, 80, 81, 82, 83, 84, 244, 716, 717], "circular_shelf": [77, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 245, 718], "dome": [77, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 246, 719], "enthalpy_benchmark": [77, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 248, 721], "eismint2": [77, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 247, 720], "greenland": [77, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 249, 722], "humboldt": [77, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 250, 723], "hydro_radi": [77, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 251, 724], "ismip6_forc": [77, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 253, 726], "kangerlussuaq": [77, 219, 220, 221, 222, 223, 254, 727], "koge_bugt_": [77, 224, 225, 226, 227, 228, 255, 728], "mismipplu": [77, 229, 230, 231, 232, 233, 234, 256, 729], "thwait": [77, 235, 236, 237, 238, 239, 240, 241, 242, 257, 730], "land": 78, "ic": [78, 265, 737, 746], "calvingdtconverg": 80, "dt_convergence_test": [81, 82, 717], "dtconvergencetest": [81, 82, 244], "runmodel": [83, 84, 88, 89, 100, 101, 102, 136, 137, 138, 151, 152, 153, 165, 166, 172, 173, 174, 230, 231, 232, 240, 241, 242, 244, 245, 246], "circularshelf": 85, "decomposition_test": [86, 87, 96, 97, 111, 112, 142, 143, 157, 158, 168, 169, 236, 237, 247, 249, 250, 251, 257, 718, 719, 720, 722, 723, 724, 730], "decompositiontest": [86, 87, 96, 97, 111, 112, 142, 143, 157, 158, 168, 169, 236, 237, 245, 246], "setup_mesh": [90, 91, 103, 104, 118, 119, 139, 140, 175, 176, 247, 248, 251], "setupmesh": [90, 91, 103, 104, 118, 119, 139, 140, 175, 176, 245, 246], "visual": [92, 93, 94, 107, 108, 109, 122, 123, 124, 128, 129, 133, 134, 181, 182, 183, 245, 246, 247, 251], "visualize_circular_shelf": 94, "restart_test": [98, 99, 113, 114, 149, 150, 163, 164, 170, 171, 238, 239, 247, 249, 250, 251, 257, 294, 295, 296, 405, 406, 407, 463, 464, 465, 686, 690, 693, 719, 720, 722, 723, 724, 730, 742, 746, 749], "restarttest": [98, 99, 113, 114, 149, 150, 163, 164, 170, 171, 238, 239, 246, 294, 295, 296, 405, 406, 407, 463, 464, 465], "smoke_test": [105, 106, 154, 155, 233, 234, 249, 256, 719, 722, 729], "smoketest": [105, 106, 154, 155, 233, 234, 246], "visualize_dom": 109, "run_experi": [115, 116, 117, 247], "runexperi": [115, 116, 117], "standard_experi": [120, 121, 122, 123, 124, 247, 720], "standardexperi": [120, 121], "visualize_eismint2": 124, "A": [125, 126, 127, 128, 129, 248, 713, 721], "b": [130, 131, 132, 133, 134, 248, 721], "enthalpybenchmark": 135, "high_res_mesh": [144, 145, 249, 257, 722, 730], "highresmesh": [144, 145], "build_cell_width": 147, "mesh_gen": [161, 162, 222, 223, 227, 228, 250, 254, 255, 723, 727, 728], "meshgen": [161, 162, 222, 223, 227, 228], "hydroradi": 167, "spinup_test": [177, 178, 251, 724], "spinuptest": [177, 178], "steady_state_drift_test": [179, 180, 251, 724], "steadystatedrifttest": [179, 180], "visualize_hydro_radi": 183, "ismip6forc": 184, "atmospher": [185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 253, 726, 748], "create_mapfile_smb": [187, 188, 189], "build_mapping_fil": [188, 203], "create_atm_scrip": 189, "process_smb": [190, 191, 192, 193, 194, 195], "processsmb": [190, 191, 192, 193, 194, 195], "correct_smb_anomaly_for_climatologi": 191, "remap_ismip6_smb_to_mali": 192, "rename_ismip6_smb_to_mali_var": 193, "process_smb_racmo": [196, 197, 198, 199, 200, 201], "processsmbracmo": [196, 197, 198, 199, 200, 201], "correct_smb_anomaly_for_base_smb": 197, "remap_source_smb_to_mali": 198, "rename_source_smb_to_mali_var": 199, "create_mapfil": 203, "ocean_bas": [204, 205, 206, 207, 208, 209, 210, 211, 253, 726], "oceanbas": [204, 205], "process_basal_melt": [206, 207, 208, 209, 210, 211], "processbasalmelt": [206, 207, 208, 209, 210, 211], "combine_ismip6_inputfil": 207, "remap_ismip6_basal_melt_to_mali_var": 208, "rename_ismip6_basal_melt_to_mali_var": 209, "ocean_therm": [212, 213, 214, 215, 216, 217, 218, 253, 726], "oceantherm": [212, 213], "process_thermal_forc": [214, 215, 216, 217, 218], "processthermalforc": [214, 215, 216, 217, 218], "remap_ismip6_thermal_forcing_to_mali_var": 215, "rename_ismip6_thermal_forcing_to_mali_var": 216, "kogebugt": 224, "enthalpy_decomposition_test": [247, 720], "enthalpy_restart_test": [247, 720], "anvil": [258, 731], "intel": [258, 259, 260, 261, 731, 732, 733, 734], "gnu": [258, 259, 261, 263, 731, 732, 734, 736], "chrysali": [259, 732], "compymcnodefac": [260, 733], "cori": [261, 734], "haswel": [261, 734], "other": [262, 711, 712, 735, 760], "perlmutt": [263, 736], "pm": 263, "cpu": [263, 710, 736], "baroclinic_channel": [264, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 686, 742], "dam_break": [264, 306, 307, 308, 309, 310, 311, 312, 313, 314, 687, 743], "drying_slop": [264, 315, 316, 317, 318, 319, 320, 321, 322, 323, 688, 744], "global_converg": [264, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 689, 745], "cosine_bel": [264, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 689, 710, 745], "global_ocean": [264, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 690, 746], "gotm": [264, 411, 412, 413, 414, 415, 416, 417, 418, 419, 691, 747], "default": [264, 285, 286, 287, 307, 308, 316, 317, 412, 413, 414, 415, 416, 417, 418, 419, 455, 456, 457, 472, 473, 525, 526, 686, 687, 688, 691, 693, 695, 697, 711, 742, 743, 744, 747, 749, 751, 753, 755, 759], "hurrican": [264, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 692, 748], "ice_shelf_2d": [264, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 693, 749], "internal_wav": [264, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 695, 751], "isomip_plu": [264, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 696, 752], "merry_go_round": [264, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 697, 753], "planar_converg": [264, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 698, 754], "horizontal_advect": [264, 544, 545, 546, 547, 548, 549, 550, 551, 698, 754], "soma": [264, 552, 553, 554, 555, 556, 557, 558, 559, 560, 699, 755], "sphere_transport": [264, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 700, 756], "correlated_tracers_2d": [264, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 700, 756], "divergent_2d": [264, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 700, 756], "nondivergent_2d": [264, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 700, 756], "rotation_2d": [264, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 700, 756], "tide": [264, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 702, 758], "ziso": [264, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 703, 759], "replac": 265, "stream": [265, 704, 711, 712], "vertic": [265, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 711, 739], "coordin": [265, 711, 739], "cull": [265, 270, 271, 272, 273], "includ": 265, "floodplain": [265, 274, 275], "hanei": [265, 267], "number": [265, 710], "shelf": [265, 737, 746], "caviti": [265, 737, 746], "particl": [265, 276, 277, 755, 759], "plot": [265, 278, 279, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 632], "compute_haney_numb": 267, "iceshelf": [268, 269], "adjust_ssh": 268, "compute_land_ice_pressure_and_draft": 269, "cullmeshstep": [270, 271, 272], "cull_mesh": 273, "floodplainmeshstep": [274, 275], "remap_particl": 276, "plot_initial_st": 278, "plot_vertical_grid": 279, "baroclinicchannel": 280, "decomp_test": [282, 283, 284, 346, 347, 348, 686, 690, 742, 746], "decomptest": [282, 283, 284, 346, 347, 348], "forward": [288, 289, 290, 309, 310, 318, 319, 331, 332, 333, 334, 364, 365, 366, 367, 368, 369, 416, 417, 428, 429, 430, 431, 432, 433, 458, 459, 460, 474, 475, 487, 488, 489, 527, 528, 540, 541, 542, 543, 555, 556, 567, 568, 569, 570, 581, 582, 583, 584, 595, 596, 597, 598, 619, 620, 621, 622, 640, 641, 642, 643, 644, 645, 667, 668, 669, 686, 687, 688, 689, 690, 691, 692, 693, 695, 696, 697, 698, 699, 700, 702, 703, 710, 711, 712, 746, 748, 758], "initial_st": [291, 292, 293, 311, 312, 320, 321, 373, 374, 375, 440, 441, 442, 461, 462, 476, 477, 492, 493, 529, 530, 557, 558, 649, 650, 651, 670, 671, 686, 687, 688, 692, 693, 695, 696, 697, 699, 702, 703, 711], "initialst": [291, 292, 293, 311, 312, 320, 321, 373, 374, 375, 440, 441, 442, 461, 462, 476, 477, 492, 493, 529, 530, 557, 558, 649, 650, 651, 670, 671], "rpe_test": [297, 298, 299, 300, 301, 302, 478, 479, 480, 686, 695, 711, 742, 751], "rpetest": [297, 298, 299, 478], "analysi": [300, 301, 302, 328, 329, 330, 414, 415, 421, 422, 423, 424, 425, 426, 479, 480, 523, 524, 547, 548, 549, 553, 554, 565, 566, 579, 580, 593, 594, 617, 618, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 689, 691, 692, 698, 699, 700, 701, 702, 710, 711, 712, 748, 758], "threads_test": [303, 304, 305, 408, 409, 410, 686, 690, 746], "threadstest": [303, 304, 305, 408, 409, 410], "dambreak": 306, "viz": [313, 314, 322, 323, 469, 470, 483, 484, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 531, 532, 687, 688, 693, 696], "dryingslop": 315, "globalconverg": 324, "cosinebel": [325, 326, 327], "rmse": [329, 548], "get_dt": 332, "init": [335, 336, 370, 371, 372, 373, 374, 375, 376, 377, 378, 418, 419, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 550, 551, 571, 572, 585, 586, 599, 600, 623, 624, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 689, 690, 691, 698, 700, 701, 710, 712, 746, 748, 758], "globalocean": 337, "analysis_test": [338, 339, 340, 690, 746], "analysistest": [338, 339, 340], "configure_global_ocean": 342, "daily_output_test": [343, 344, 345, 690, 746], "dailyoutputtest": [343, 344, 345], "dynamic_adjust": [349, 350, 384, 385, 386, 387, 388, 389, 392, 393, 394, 397, 398, 399, 690, 746], "dynamicadjust": [349, 350], "files_for_e3sm": [351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 690, 746], "filesfore3sm": [351, 352, 353], "diagnostics_fil": [354, 355], "diagnosticsfil": [354, 355], "ocean_graph_partit": [356, 357], "oceangraphpartit": [356, 357], "ocean_initial_condit": [358, 359], "oceaninitialcondit": [358, 359], "scrip": [360, 361], "seaice_initial_condit": [362, 363], "seaiceinitialcondit": [362, 363], "forwardstep": [364, 365, 366, 431, 432, 433, 643, 644, 645], "forwardtestcas": [367, 368, 369], "ssh_adjust": [376, 377, 378, 466, 467, 468, 499, 500, 501, 693, 696], "sshadjust": [376, 377, 378, 466, 467, 468, 499, 500, 501], "ec30to60": [382, 383, 384, 385, 386, 690, 741, 746], "ec30to60basemesh": [382, 383], "ec30to60dynamicadjust": [384, 385, 386], "qu240": [387, 388, 389, 690, 746], "qu240dynamicadjust": [387, 388, 389], "so12to60": [390, 391, 392, 393, 394], "so12to60basemesh": [390, 391], "so12to60dynamicadjust": [392, 393, 394], "wc14": [395, 396, 397, 398, 399, 690, 746], "wc14basemesh": [395, 396], "wc14dynamicadjust": [397, 398, 399], "metadata": [400, 401, 690, 746], "add_mesh_and_init_metadata": 400, "get_e3sm_mesh_nam": 401, "performance_test": [402, 403, 404, 690, 746], "performancetest": [402, 403, 404], "read_pointstat": 422, "read_station_data": 423, "read_station_fil": 424, "create_pointstats_fil": [437, 438, 439, 692], "createpointstatsfil": [437, 438, 439], "interpolate_atm_forc": [443, 444, 445, 446, 447, 692], "interpolateatmforc": [443, 444, 445, 446, 447], "interpolate_data_to_grid": [444, 653], "plot_interp_data": [445, 654], "write_to_fil": [447, 656], "dequ120at30cr10rr2": [451, 452], "dequ120at30cr10rr2basemesh": [451, 452], "iceshelf2d": 453, "internalwav": 471, "ten_day_test": [481, 482, 695, 751], "tendaytest": [481, 482], "isomipplu": 485, "evap": [486, 696], "update_evaporation_flux": 486, "geom": [490, 491, 696], "interpolate_ocean_mask": 490, "process_input_geometri": 491, "isomip_plus_test": [494, 495, 496, 696], "isomipplustest": [494, 495, 496], "misomip": [497, 498, 696], "streamfunct": [502, 503, 696], "file_complet": 506, "movieplott": [507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518], "images_to_movi": 508, "plot_3d_field_top_bot_sect": 509, "plot_barotropic_streamfunct": 510, "plot_horiz_seri": 511, "plot_ice_shelf_boundary_vari": 512, "plot_layer_interfac": 513, "plot_melt_r": 514, "plot_overturning_streamfunct": 515, "plot_potential_dens": 516, "plot_salin": 517, "plot_temperatur": 518, "timeseriesplott": [519, 520, 521], "plot_melt_time_seri": 520, "plot_time_seri": 521, "merrygoround": 522, "convergence_test": [523, 524, 697, 753], "planarconverg": 533, "conv_init": [534, 535], "convinit": [534, 535], "conv_test_cas": [536, 537, 538, 539], "convtestcas": [536, 537, 538, 539], "update_cor": 539, "get_dt_dur": 541, "horizontaladvect": [544, 545, 546], "soma_test_cas": [559, 560, 699], "somatestcas": [559, 560], "spheretransport": 561, "correlatedtracers2d": [562, 563, 564], "get_timestep_str": [568, 582, 596, 620], "divergent2d": [576, 577, 578], "nondivergent2d": [590, 591, 592], "process_output": [604, 605, 606, 607, 608, 609, 610, 611, 612, 613], "compute_convergence_r": 604, "compute_error_from_output_ncfil": 605, "make_convergence_arrai": 606, "plot_converg": 607, "plot_fila": 608, "plot_over_and_undershoot_error": 609, "plot_sol": 610, "print_data_as_csv": 611, "print_error_conv_t": 612, "read_ncl_rgb_fil": 613, "rotation2d": [614, 615, 616], "append_tpxo_data": 630, "check_tpxo_data": 631, "read_otps2_output": 633, "run_otps2": 635, "setup_otps2": 637, "write_coordinate_fil": 638, "interpolate_wave_drag": [652, 653, 654, 655, 656, 702], "interpolatewavedrag": [652, 653, 654, 655, 656], "remap_bathymetri": [657, 658, 702], "remapbathymetri": [657, 658], "zisotestcas": [663, 664, 665], "with_frazil": [672, 673, 674, 703, 759], "withfrazil": [672, 673, 674], "grid_1d": [675, 676], "generate_1d_grid": 675, "write_1d_grid": 676, "init_vertical_coord": 677, "partial_cel": [678, 679], "alter_bottom_depth": 678, "alter_ssh": 679, "zlevel": [680, 681, 682, 683], "compute_min_max_level_cel": 680, "compute_z_level_layer_thick": 681, "compute_z_level_resting_thick": 682, "init_z_level_vertical_coord": 683, "zstar": 684, "init_z_star_vertical_coord": 684, "type": [689, 739], "quwisc240": [690, 741, 746], "icos240": 690, "icoswisc240": 690, "ecwisc30to60": [690, 741, 746], "sowisc12to60": [690, 746], "child": 690, "spherical_harmonic_transform": [701, 757], "qu_converg": [701, 757], "ziso_test_cas": 703, "organ": 704, "attribut": 704, "copi": 704, "ad": [704, 710, 711, 712], "runtim": 704, "overview": 705, "style": 705, "In": 705, "quick": [706, 760], "start": [706, 710, 711, 712, 760], "unix": 706, "shell": 706, "set": [706, 710, 711, 712, 760], "up": [706, 711, 712, 760], "repositori": 706, "beginn": 706, "conda": [706, 707, 735, 760], "environ": [706, 707, 760], "compil": 706, "system": 706, "albani": 706, "petsc": 706, "netlib": 706, "lapack": 706, "unknown": 706, "what": 706, "script": [706, 760], "doe": 706, "flag": 706, "activ": 706, "troubleshoot": [706, 707], "onli": 706, "compon": [706, 760], "repo": 706, "worktre": 706, "advanc": 706, "solver": 707, "error": 707, "when": 707, "proxi": 707, "lanl": 707, "mac": 707, "gethostbynam": 707, "fail": 707, "glossari": [708, 709], "": 709, "guid": 709, "tutori": [709, 710, 711, 712], "legaci": [709, 712], "studi": 710, "get": [710, 711, 712], "new": [710, 711, 712], "task": 710, "per": 710, "vari": [711, 712], "horizont": 711, "defin": [711, 712], "method": [711, 712], "port": 712, "The": 712, "sia_integr": 716, "fo_integr": 716, "full_integr": 716, "humboldt_calving_test": 716, "humboldt_calving_tests_fo": 716, "ocean_thermal_ob": 726, "jupyt": [734, 736], "notebook": [734, 736], "remot": [734, 736], "slurm": 735, "job": [735, 760], "queue": 735, "mpich": 735, "openmpi": 735, "No": 735, "mpi": 735, "forg": 735, "sea": 737, "surfac": 737, "height": 737, "adjust": 737, "1d": 739, "grid": 739, "uniform": 739, "tanh_dz": 739, "60layerphc": 739, "100layere3smv1": 739, "3d": 739, "z": 739, "star": 739, "level": 739, "nightli": 741, "qu240_for_e3sm": 741, "quwisc240_for_e3sm": 741, "thread_test": 742, "time": [745, 754, 756], "biogeochemsitri": 746, "make_diagnostic_fil": 746, "state": [748, 758], "interpol": [748, 758], "forc": 748, "pointstat": 748, "sandi": 748, "ocean0": 752, "ocean1": 752, "ocean2": 752, "time_varying_ocean0": 752, "thin_film_ocean0": 752, "thin_film_tidal_forcing_ocean0": 752, "perform": 752, "simul": 752, "long": [755, 759], "surface_restor": 755, "three_lay": 755, "converg": 756, "threshold": 756, "parallel_n": 757, "serial_nlat": 757, "remap": 758, "bathymetri": 758, "wave": 758, "drag": 758, "e3sm": 760}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Caching outputs from compass steps": [[0, "caching-outputs-from-compass-steps"]], "Summary": [[0, "summary"], [1, "summary"], [3, "summary"]], "Requirements": [[0, "requirements"], [1, "requirements"], [3, "requirements"]], "Requirement: cached outputs": [[0, "requirement-cached-outputs"]], "Requirement: selecting whether to use cached outputs": [[0, "requirement-selecting-whether-to-use-cached-outputs"]], "Requirement: updating cached outputs": [[0, "requirement-updating-cached-outputs"]], "Requirement: unique identifier for cached outputs": [[0, "requirement-unique-identifier-for-cached-outputs"]], "Requirement: either \u201cnormal\u201d or \u201ccached\u201d versions of a step": [[0, "requirement-either-normal-or-cached-versions-of-a-step"]], "Design": [[0, "design"]], "Design: cached outputs": [[0, "design-cached-outputs"]], "Design: selecting whether to use cached outputs": [[0, "design-selecting-whether-to-use-cached-outputs"]], "Design: updating cached outputs": [[0, "design-updating-cached-outputs"]], "Design: unique identifier for cached outputs": [[0, "design-unique-identifier-for-cached-outputs"]], "Design: either \u201cnormal\u201d or \u201ccached\u201d versions of a step": [[0, "design-either-normal-or-cached-versions-of-a-step"]], "Implementation": [[0, "implementation"], [1, "implementation"], [3, "implementation"]], "Implementation: cached outputs": [[0, "implementation-cached-outputs"]], "Implementation: selecting whether to use cached outputs": [[0, "implementation-selecting-whether-to-use-cached-outputs"]], "Implementation: updating cached outputs": [[0, "implementation-updating-cached-outputs"]], "Implementation: unique identifier for cached outputs": [[0, "implementation-unique-identifier-for-cached-outputs"]], "Implementation: either \u201cnormal\u201d or \u201ccached\u201d versions of a step": [[0, "implementation-either-normal-or-cached-versions-of-a-step"]], "Testing": [[0, "testing"], [1, "testing"], [3, "testing"]], "Testing: cached outputs": [[0, "testing-cached-outputs"]], "Testing: selecting whether to use cached outputs": [[0, "testing-selecting-whether-to-use-cached-outputs"]], "Testing: updating cached outputs": [[0, "testing-updating-cached-outputs"]], "Testing: unique identifier for cached outputs": [[0, "testing-unique-identifier-for-cached-outputs"]], "Testing: either \u201cnormal\u201d or \u201ccached\u201d versions of a step": [[0, "testing-either-normal-or-cached-versions-of-a-step"]], "compass python package": [[1, "compass-python-package"]], "Requirement: Make test cases easy to understand, modify and create": [[1, "requirement-make-test-cases-easy-to-understand-modify-and-create"]], "Requirement: Shared code": [[1, "requirement-shared-code"]], "Requirement: Shared configuration options": [[1, "requirement-shared-configuration-options"]], "Requirement: Ability specify/modify core counts": [[1, "requirement-ability-specify-modify-core-counts"]], "Requirement: Machine-specific data": [[1, "requirement-machine-specific-data"]], "Requirement: Looser, more flexible directory structure": [[1, "requirement-looser-more-flexible-directory-structure"]], "Requirement: User- and developer-friendly documentation": [[1, "requirement-user-and-developer-friendly-documentation"]], "Requirement: Considerations related to running test cases in parallel": [[1, "requirement-considerations-related-to-running-test-cases-in-parallel"]], "Requirement: Resolution can be a test case parameter": [[1, "requirement-resolution-can-be-a-test-case-parameter"]], "Requirement: Test case code is easy to alter and rerun": [[1, "requirement-test-case-code-is-easy-to-alter-and-rerun"]], "Requirement: Support for pre-made initial condition files": [[1, "requirement-support-for-pre-made-initial-condition-files"]], "Requirement: Easy batch submission": [[1, "requirement-easy-batch-submission"]], "Algorithm Design": [[1, "algorithm-design"]], "Algorithm design: Make test cases easy to understand, modify and  and create": [[1, "algorithm-design-make-test-cases-easy-to-understand-modify-and-and-create"]], "Algorithm design: Shared code": [[1, "algorithm-design-shared-code"]], "Algorithm design: Shared configuration options": [[1, "algorithm-design-shared-configuration-options"]], "Algorithm design: Ability specify/modify core counts": [[1, "algorithm-design-ability-specify-modify-core-counts"]], "Algorithm design: Machine-specific data": [[1, "algorithm-design-machine-specific-data"]], "Algorithm design: Looser, more flexible directory structure": [[1, "algorithm-design-looser-more-flexible-directory-structure"]], "Algorithm design: User- and developer-friendly documentation": [[1, "algorithm-design-user-and-developer-friendly-documentation"]], "Algorithm design: Considerations related to running test cases in parallel": [[1, "algorithm-design-considerations-related-to-running-test-cases-in-parallel"]], "Algorithm design: Resolution can be a test case parameter": [[1, "algorithm-design-resolution-can-be-a-test-case-parameter"]], "Algorithm design: Test case code is easy to alter and rerun": [[1, "algorithm-design-test-case-code-is-easy-to-alter-and-rerun"]], "Algorithm design: Support for pre-made initial condition files": [[1, "algorithm-design-support-for-pre-made-initial-condition-files"]], "Algorithm design: Easy batch submission": [[1, "algorithm-design-easy-batch-submission"]], "Implementation: Make test cases easy to understand, modify and  and create": [[1, "implementation-make-test-cases-easy-to-understand-modify-and-and-create"]], "constructors": [[1, "constructors"]], "configure()": [[1, "configure"], [704, "configure"]], "setup()": [[1, "setup"], [704, "setup"]], "run": [[1, "run"], [4, "run"]], "global ocean test group": [[1, "global-ocean-test-group"]], "Implementation: Shared code": [[1, "implementation-shared-code"]], "compass framework": [[1, "compass-framework"], [4, "compass-framework"]], "within an MPAS core": [[1, "within-an-mpas-core"]], "within a test group": [[1, "within-a-test-group"]], "within a test case": [[1, "within-a-test-case"]], "Implementation: Shared configuration options": [[1, "implementation-shared-configuration-options"]], "Implementation: Ability specify/modify core counts": [[1, "implementation-ability-specify-modify-core-counts"]], "Implementation: Machine-specific data": [[1, "implementation-machine-specific-data"]], "Implementation: Looser, more flexible directory structure": [[1, "implementation-looser-more-flexible-directory-structure"]], "Implementation: User- and developer-friendly documentation": [[1, "implementation-user-and-developer-friendly-documentation"]], "Implementation: Considerations related to running test cases in parallel": [[1, "implementation-considerations-related-to-running-test-cases-in-parallel"]], "cores, max_memory and max_disk": [[1, "cores-max-memory-and-max-disk"]], "inputs and outputs": [[1, "inputs-and-outputs"], [704, "inputs-and-outputs"]], "Implementation: Resolution can be a test case parameter": [[1, "implementation-resolution-can-be-a-test-case-parameter"]], "Implementation: Test case code is easy to alter and rerun": [[1, "implementation-test-case-code-is-easy-to-alter-and-rerun"]], "Implementation: Support for pre-made initial condition files": [[1, "implementation-support-for-pre-made-initial-condition-files"]], "Implementation: Easy batch submission": [[1, "implementation-easy-batch-submission"]], "Testing: Make test cases easy to understand, modify and create": [[1, "testing-make-test-cases-easy-to-understand-modify-and-create"]], "Testing: Shared code": [[1, "testing-shared-code"]], "Testing: Shared configuration options": [[1, "testing-shared-configuration-options"]], "Testing: Ability specify/modify core counts": [[1, "testing-ability-specify-modify-core-counts"]], "Testing: Machine-specific data": [[1, "testing-machine-specific-data"]], "Testing: Looser, more flexible directory structure": [[1, "testing-looser-more-flexible-directory-structure"]], "Testing: User- and developer-friendly documentation": [[1, "testing-user-and-developer-friendly-documentation"]], "Testing: Considerations related to running test cases in parallel": [[1, "testing-considerations-related-to-running-test-cases-in-parallel"]], "Testing: Resolution can be a test case parameter": [[1, "testing-resolution-can-be-a-test-case-parameter"]], "Testing: Test case code is easy to alter and rerun": [[1, "testing-test-case-code-is-easy-to-alter-and-rerun"]], "Testing: Support for pre-made initial condition files": [[1, "testing-support-for-pre-made-initial-condition-files"]], "Testing: Easy batch submission": [[1, "testing-easy-batch-submission"]], "Design Documents": [[2, "design-documents"]], "Template": [[3, "template"]], "Requirement: name-of-topic-here": [[3, "requirement-name-of-topic-here"]], "Algorithm Design (optional)": [[3, "algorithm-design-optional"]], "Algorithm Design: name-of-topic-here (same as Requirement)": [[3, "algorithm-design-name-of-topic-here-same-as-requirement"]], "Implementation: name-of-topic-here (same as Requirement)": [[3, "implementation-name-of-topic-here-same-as-requirement"]], "Testing and Validation: name-of-topic-here (same as Requirement)": [[3, "testing-and-validation-name-of-topic-here-same-as-requirement"]], "API reference": [[4, "api-reference"]], "MPAS Cores": [[4, "mpas-cores"], [704, "mpas-cores"]], "Command-line interface": [[4, "command-line-interface"], [6, "command-line-interface"]], "list": [[4, "list"]], "setup": [[4, "setup"]], "clean": [[4, "clean"]], "suite": [[4, "suite"]], "cache": [[4, "cache"]], "Base Classes": [[4, "base-classes"]], "mpas_core": [[4, "mpas-core"]], "testgroup": [[4, "testgroup"]], "testcase": [[4, "testcase"]], "step": [[4, "step"]], "config": [[4, "config"]], "io": [[4, "io"]], "logging": [[4, "logging"]], "mesh": [[4, "mesh"], [249, "mesh"], [250, "mesh"], [254, "mesh"], [255, "mesh"], [257, "mesh"], [689, "mesh"], [692, "mesh"], [700, "mesh"], [700, "id1"], [700, "id5"], [700, "id9"], [701, "mesh"]], "model": [[4, "model"]], "mpas_cores": [[4, "id1"]], "parallel": [[4, "parallel"]], "provenance": [[4, "provenance"]], "validate": [[4, "validate"]], "Building the Documentation": [[5, "building-the-documentation"]], "compass list": [[6, "compass-list"]], "compass setup": [[6, "compass-setup"]], "compass clean": [[6, "compass-clean"]], "compass suite": [[6, "compass-suite"]], "compass run": [[6, "compass-run"]], "compass cache": [[6, "compass-cache"]], "Documentation": [[7, "documentation"], [710, "documentation"], [711, "documentation"], [712, "documentation"]], "Docstrings": [[7, "docstrings"]], "Framework": [[8, "framework"], [690, "framework"], [714, "framework"], [738, "framework"]], "list module": [[8, "list-module"]], "setup module": [[8, "setup-module"]], "clean module": [[8, "clean-module"]], "suite module": [[8, "suite-module"]], "run.serial module": [[8, "run-serial-module"]], "cache module": [[8, "cache-module"]], "Config files": [[8, "config-files"]], "Comments in config files": [[8, "comments-in-config-files"]], "Logging": [[8, "logging"]], "IO": [[8, "io"]], "Symlinks": [[8, "symlinks"]], "Download": [[8, "download"]], "Mesh": [[8, "mesh"], [265, "mesh"]], "Spherical Meshes": [[8, "spherical-meshes"]], "Model": [[8, "model"]], "Running MPAS": [[8, "running-mpas"]], "Partitioning the mesh": [[8, "partitioning-the-mesh"]], "Updating PIO namelist options": [[8, "updating-pio-namelist-options"]], "Making a graph file": [[8, "making-a-graph-file"]], "Validation": [[8, "validation"]], "Validating variables": [[8, "validating-variables"]], "Norms": [[8, "norms"]], "Validating timers": [[8, "validating-timers"]], "Provenance": [[8, "provenance"]], "compass.MpasCore": [[9, "compass-mpascore"]], "compass.MpasCore.add_test_group": [[10, "compass-mpascore-add-test-group"]], "compass.Step": [[11, "compass-step"]], "compass.Step.add_input_file": [[12, "compass-step-add-input-file"]], "compass.Step.add_model_as_input": [[13, "compass-step-add-model-as-input"]], "compass.Step.add_namelist_file": [[14, "compass-step-add-namelist-file"]], "compass.Step.add_namelist_options": [[15, "compass-step-add-namelist-options"]], "compass.Step.add_output_file": [[16, "compass-step-add-output-file"]], "compass.Step.add_streams_file": [[17, "compass-step-add-streams-file"]], "compass.Step.constrain_resources": [[18, "compass-step-constrain-resources"]], "compass.Step.run": [[19, "compass-step-run"]], "compass.Step.runtime_setup": [[20, "compass-step-runtime-setup"]], "compass.Step.set_resources": [[21, "compass-step-set-resources"]], "compass.Step.setup": [[22, "compass-step-setup"]], "compass.Step.update_namelist_at_runtime": [[23, "compass-step-update-namelist-at-runtime"]], "compass.Step.update_namelist_pio": [[24, "compass-step-update-namelist-pio"]], "compass.Step.update_streams_at_runtime": [[25, "compass-step-update-streams-at-runtime"]], "compass.TestCase": [[26, "compass-testcase"]], "compass.TestCase.add_step": [[27, "compass-testcase-add-step"]], "compass.TestCase.configure": [[28, "compass-testcase-configure"]], "compass.TestCase.run": [[29, "compass-testcase-run"]], "compass.TestCase.validate": [[30, "compass-testcase-validate"]], "compass.TestGroup": [[31, "compass-testgroup"]], "compass.TestGroup.add_test_case": [[32, "compass-testgroup-add-test-case"]], "compass.__main__.main": [[33, "compass-main-main"]], "compass.cache.update_cache": [[34, "compass-cache-update-cache"]], "compass.clean.clean_cases": [[35, "compass-clean-clean-cases"]], "compass.config.CompassConfigParser": [[36, "compass-config-compassconfigparser"]], "compass.io.download": [[37, "compass-io-download"]], "compass.io.package_path": [[38, "compass-io-package-path"]], "compass.io.symlink": [[39, "compass-io-symlink"]], "compass.list.list_cases": [[40, "compass-list-list-cases"]], "compass.list.list_machines": [[41, "compass-list-list-machines"]], "compass.list.list_suites": [[42, "compass-list-list-suites"]], "compass.logging.log_method_call": [[43, "compass-logging-log-method-call"]], "compass.mesh.IcosahedralMeshStep": [[44, "compass-mesh-icosahedralmeshstep"]], "compass.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon": [[45, "compass-mesh-icosahedralmeshstep-build-subdivisions-cell-width-lat-lon"]], "compass.mesh.IcosahedralMeshStep.get_cell_width": [[46, "compass-mesh-icosahedralmeshstep-get-cell-width"]], "compass.mesh.IcosahedralMeshStep.get_subdivisions": [[47, "compass-mesh-icosahedralmeshstep-get-subdivisions"]], "compass.mesh.IcosahedralMeshStep.make_jigsaw_mesh": [[48, "compass-mesh-icosahedralmeshstep-make-jigsaw-mesh"]], "compass.mesh.IcosahedralMeshStep.run": [[49, "compass-mesh-icosahedralmeshstep-run"]], "compass.mesh.IcosahedralMeshStep.setup": [[50, "compass-mesh-icosahedralmeshstep-setup"]], "compass.mesh.QuasiUniformSphericalMeshStep": [[51, "compass-mesh-quasiuniformsphericalmeshstep"]], "compass.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon": [[52, "compass-mesh-quasiuniformsphericalmeshstep-build-cell-width-lat-lon"]], "compass.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh": [[53, "compass-mesh-quasiuniformsphericalmeshstep-make-jigsaw-mesh"]], "compass.mesh.QuasiUniformSphericalMeshStep.run": [[54, "compass-mesh-quasiuniformsphericalmeshstep-run"]], "compass.mesh.QuasiUniformSphericalMeshStep.setup": [[55, "compass-mesh-quasiuniformsphericalmeshstep-setup"]], "compass.mesh.spherical.SphericalBaseStep": [[56, "compass-mesh-spherical-sphericalbasestep"]], "compass.mesh.spherical.SphericalBaseStep.run": [[57, "compass-mesh-spherical-sphericalbasestep-run"]], "compass.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width": [[58, "compass-mesh-spherical-sphericalbasestep-save-and-plot-cell-width"]], "compass.mesh.spherical.SphericalBaseStep.setup": [[59, "compass-mesh-spherical-sphericalbasestep-setup"]], "compass.model.make_graph_file": [[60, "compass-model-make-graph-file"]], "compass.model.partition": [[61, "compass-model-partition"]], "compass.model.run_model": [[62, "compass-model-run-model"]], "compass.mpas_cores.get_mpas_cores": [[63, "compass-mpas-cores-get-mpas-cores"]], "compass.parallel.check_parallel_system": [[64, "compass-parallel-check-parallel-system"]], "compass.parallel.get_available_cores_and_nodes": [[65, "compass-parallel-get-available-cores-and-nodes"]], "compass.parallel.run_command": [[66, "compass-parallel-run-command"]], "compass.parallel.set_cores_per_node": [[67, "compass-parallel-set-cores-per-node"]], "compass.provenance.write": [[68, "compass-provenance-write"]], "compass.run.serial.run_single_step": [[69, "compass-run-serial-run-single-step"]], "compass.run.serial.run_tests": [[70, "compass-run-serial-run-tests"]], "compass.setup.setup_case": [[71, "compass-setup-setup-case"]], "compass.setup.setup_cases": [[72, "compass-setup-setup-cases"]], "compass.suite.clean_suite": [[73, "compass-suite-clean-suite"]], "compass.suite.setup_suite": [[74, "compass-suite-setup-suite"]], "compass.validate.compare_timers": [[75, "compass-validate-compare-timers"]], "compass.validate.compare_variables": [[76, "compass-validate-compare-variables"]], "landice": [[77, "landice"]], "Test Groups": [[77, "test-groups"], [264, "test-groups"], [704, "test-groups"], [725, "test-groups"]], "calving_dt_convergence": [[77, "calving-dt-convergence"], [244, "calving-dt-convergence"], [716, "calving-dt-convergence"], [717, "calving-dt-convergence"]], "circular_shelf": [[77, "circular-shelf"], [245, "circular-shelf"], [718, "circular-shelf"]], "dome": [[77, "dome"], [246, "dome"], [719, "dome"]], "enthalpy_benchmark": [[77, "enthalpy-benchmark"], [248, "enthalpy-benchmark"], [721, "enthalpy-benchmark"]], "eismint2": [[77, "eismint2"], [247, "eismint2"], [720, "eismint2"]], "greenland": [[77, "greenland"], [249, "greenland"], [722, "greenland"]], "humboldt": [[77, "humboldt"], [250, "humboldt"], [723, "humboldt"]], "hydro_radial": [[77, "hydro-radial"], [251, "hydro-radial"], [724, "hydro-radial"]], "ismip6_forcing": [[77, "ismip6-forcing"], [253, "ismip6-forcing"], [726, "ismip6-forcing"]], "kangerlussuaq": [[77, "kangerlussuaq"], [254, "kangerlussuaq"], [727, "kangerlussuaq"]], "koge_bugt_s": [[77, "koge-bugt-s"], [255, "koge-bugt-s"], [728, "koge-bugt-s"]], "mismipplus": [[77, "mismipplus"], [256, "mismipplus"], [729, "mismipplus"]], "thwaites": [[77, "thwaites"], [257, "thwaites"], [730, "thwaites"]], "Land-ice Framework": [[78, "land-ice-framework"]], "compass.landice.Landice": [[79, "compass-landice-landice"]], "compass.landice.tests.calving_dt_convergence.CalvingDtConvergence": [[80, "compass-landice-tests-calving-dt-convergence-calvingdtconvergence"]], "compass.landice.tests.calving_dt_convergence.dt_convergence_test.DtConvergenceTest": [[81, "compass-landice-tests-calving-dt-convergence-dt-convergence-test-dtconvergencetest"]], "compass.landice.tests.calving_dt_convergence.dt_convergence_test.DtConvergenceTest.validate": [[82, "compass-landice-tests-calving-dt-convergence-dt-convergence-test-dtconvergencetest-validate"]], "compass.landice.tests.calving_dt_convergence.run_model.RunModel": [[83, "compass-landice-tests-calving-dt-convergence-run-model-runmodel"]], "compass.landice.tests.calving_dt_convergence.run_model.RunModel.run": [[84, "compass-landice-tests-calving-dt-convergence-run-model-runmodel-run"]], "compass.landice.tests.circular_shelf.CircularShelf": [[85, "compass-landice-tests-circular-shelf-circularshelf"]], "compass.landice.tests.circular_shelf.decomposition_test.DecompositionTest": [[86, "compass-landice-tests-circular-shelf-decomposition-test-decompositiontest"]], "compass.landice.tests.circular_shelf.decomposition_test.DecompositionTest.run": [[87, "compass-landice-tests-circular-shelf-decomposition-test-decompositiontest-run"]], "compass.landice.tests.circular_shelf.run_model.RunModel": [[88, "compass-landice-tests-circular-shelf-run-model-runmodel"]], "compass.landice.tests.circular_shelf.run_model.RunModel.run": [[89, "compass-landice-tests-circular-shelf-run-model-runmodel-run"]], "compass.landice.tests.circular_shelf.setup_mesh.SetupMesh": [[90, "compass-landice-tests-circular-shelf-setup-mesh-setupmesh"]], "compass.landice.tests.circular_shelf.setup_mesh.SetupMesh.run": [[91, "compass-landice-tests-circular-shelf-setup-mesh-setupmesh-run"]], "compass.landice.tests.circular_shelf.visualize.Visualize": [[92, "compass-landice-tests-circular-shelf-visualize-visualize"]], "compass.landice.tests.circular_shelf.visualize.Visualize.run": [[93, "compass-landice-tests-circular-shelf-visualize-visualize-run"]], "compass.landice.tests.circular_shelf.visualize.visualize_circular_shelf": [[94, "compass-landice-tests-circular-shelf-visualize-visualize-circular-shelf"]], "compass.landice.tests.dome.Dome": [[95, "compass-landice-tests-dome-dome"]], "compass.landice.tests.dome.decomposition_test.DecompositionTest": [[96, "compass-landice-tests-dome-decomposition-test-decompositiontest"]], "compass.landice.tests.dome.decomposition_test.DecompositionTest.run": [[97, "compass-landice-tests-dome-decomposition-test-decompositiontest-run"]], "compass.landice.tests.dome.restart_test.RestartTest": [[98, "compass-landice-tests-dome-restart-test-restarttest"]], "compass.landice.tests.dome.restart_test.RestartTest.run": [[99, "compass-landice-tests-dome-restart-test-restarttest-run"]], "compass.landice.tests.dome.run_model.RunModel": [[100, "compass-landice-tests-dome-run-model-runmodel"]], "compass.landice.tests.dome.run_model.RunModel.run": [[101, "compass-landice-tests-dome-run-model-runmodel-run"]], "compass.landice.tests.dome.run_model.RunModel.setup": [[102, "compass-landice-tests-dome-run-model-runmodel-setup"]], "compass.landice.tests.dome.setup_mesh.SetupMesh": [[103, "compass-landice-tests-dome-setup-mesh-setupmesh"]], "compass.landice.tests.dome.setup_mesh.SetupMesh.run": [[104, "compass-landice-tests-dome-setup-mesh-setupmesh-run"]], "compass.landice.tests.dome.smoke_test.SmokeTest": [[105, "compass-landice-tests-dome-smoke-test-smoketest"]], "compass.landice.tests.dome.smoke_test.SmokeTest.run": [[106, "compass-landice-tests-dome-smoke-test-smoketest-run"]], "compass.landice.tests.dome.visualize.Visualize": [[107, "compass-landice-tests-dome-visualize-visualize"]], "compass.landice.tests.dome.visualize.Visualize.run": [[108, "compass-landice-tests-dome-visualize-visualize-run"]], "compass.landice.tests.dome.visualize.visualize_dome": [[109, "compass-landice-tests-dome-visualize-visualize-dome"]], "compass.landice.tests.eismint2.Eismint2": [[110, "compass-landice-tests-eismint2-eismint2"]], "compass.landice.tests.eismint2.decomposition_test.DecompositionTest": [[111, "compass-landice-tests-eismint2-decomposition-test-decompositiontest"]], "compass.landice.tests.eismint2.decomposition_test.DecompositionTest.run": [[112, "compass-landice-tests-eismint2-decomposition-test-decompositiontest-run"]], "compass.landice.tests.eismint2.restart_test.RestartTest": [[113, "compass-landice-tests-eismint2-restart-test-restarttest"]], "compass.landice.tests.eismint2.restart_test.RestartTest.run": [[114, "compass-landice-tests-eismint2-restart-test-restarttest-run"]], "compass.landice.tests.eismint2.run_experiment.RunExperiment": [[115, "compass-landice-tests-eismint2-run-experiment-runexperiment"]], "compass.landice.tests.eismint2.run_experiment.RunExperiment.run": [[116, "compass-landice-tests-eismint2-run-experiment-runexperiment-run"]], "compass.landice.tests.eismint2.run_experiment.RunExperiment.setup": [[117, "compass-landice-tests-eismint2-run-experiment-runexperiment-setup"]], "compass.landice.tests.eismint2.setup_mesh.SetupMesh": [[118, "compass-landice-tests-eismint2-setup-mesh-setupmesh"]], "compass.landice.tests.eismint2.setup_mesh.SetupMesh.run": [[119, "compass-landice-tests-eismint2-setup-mesh-setupmesh-run"]], "compass.landice.tests.eismint2.standard_experiments.StandardExperiments": [[120, "compass-landice-tests-eismint2-standard-experiments-standardexperiments"]], "compass.landice.tests.eismint2.standard_experiments.StandardExperiments.run": [[121, "compass-landice-tests-eismint2-standard-experiments-standardexperiments-run"]], "compass.landice.tests.eismint2.standard_experiments.visualize.Visualize": [[122, "compass-landice-tests-eismint2-standard-experiments-visualize-visualize"]], "compass.landice.tests.eismint2.standard_experiments.visualize.Visualize.run": [[123, "compass-landice-tests-eismint2-standard-experiments-visualize-visualize-run"]], "compass.landice.tests.eismint2.standard_experiments.visualize.visualize_eismint2": [[124, "compass-landice-tests-eismint2-standard-experiments-visualize-visualize-eismint2"]], "compass.landice.tests.enthalpy_benchmark.A.A": [[125, "compass-landice-tests-enthalpy-benchmark-a-a"]], "compass.landice.tests.enthalpy_benchmark.A.A.configure": [[126, "compass-landice-tests-enthalpy-benchmark-a-a-configure"]], "compass.landice.tests.enthalpy_benchmark.A.A.run": [[127, "compass-landice-tests-enthalpy-benchmark-a-a-run"]], "compass.landice.tests.enthalpy_benchmark.A.visualize.Visualize": [[128, "compass-landice-tests-enthalpy-benchmark-a-visualize-visualize"]], "compass.landice.tests.enthalpy_benchmark.A.visualize.Visualize.run": [[129, "compass-landice-tests-enthalpy-benchmark-a-visualize-visualize-run"]], "compass.landice.tests.enthalpy_benchmark.B.B": [[130, "compass-landice-tests-enthalpy-benchmark-b-b"]], "compass.landice.tests.enthalpy_benchmark.B.B.configure": [[131, "compass-landice-tests-enthalpy-benchmark-b-b-configure"]], "compass.landice.tests.enthalpy_benchmark.B.B.run": [[132, "compass-landice-tests-enthalpy-benchmark-b-b-run"]], "compass.landice.tests.enthalpy_benchmark.B.visualize.Visualize": [[133, "compass-landice-tests-enthalpy-benchmark-b-visualize-visualize"]], "compass.landice.tests.enthalpy_benchmark.B.visualize.Visualize.run": [[134, "compass-landice-tests-enthalpy-benchmark-b-visualize-visualize-run"]], "compass.landice.tests.enthalpy_benchmark.EnthalpyBenchmark": [[135, "compass-landice-tests-enthalpy-benchmark-enthalpybenchmark"]], "compass.landice.tests.enthalpy_benchmark.run_model.RunModel": [[136, "compass-landice-tests-enthalpy-benchmark-run-model-runmodel"]], "compass.landice.tests.enthalpy_benchmark.run_model.RunModel.run": [[137, "compass-landice-tests-enthalpy-benchmark-run-model-runmodel-run"]], "compass.landice.tests.enthalpy_benchmark.run_model.RunModel.setup": [[138, "compass-landice-tests-enthalpy-benchmark-run-model-runmodel-setup"]], "compass.landice.tests.enthalpy_benchmark.setup_mesh.SetupMesh": [[139, "compass-landice-tests-enthalpy-benchmark-setup-mesh-setupmesh"]], "compass.landice.tests.enthalpy_benchmark.setup_mesh.SetupMesh.run": [[140, "compass-landice-tests-enthalpy-benchmark-setup-mesh-setupmesh-run"]], "compass.landice.tests.greenland.Greenland": [[141, "compass-landice-tests-greenland-greenland"]], "compass.landice.tests.greenland.decomposition_test.DecompositionTest": [[142, "compass-landice-tests-greenland-decomposition-test-decompositiontest"]], "compass.landice.tests.greenland.decomposition_test.DecompositionTest.run": [[143, "compass-landice-tests-greenland-decomposition-test-decompositiontest-run"]], "compass.landice.tests.greenland.high_res_mesh.HighResMesh": [[144, "compass-landice-tests-greenland-high-res-mesh-highresmesh"]], "compass.landice.tests.greenland.high_res_mesh.HighResMesh.run": [[145, "compass-landice-tests-greenland-high-res-mesh-highresmesh-run"]], "compass.landice.tests.greenland.mesh.Mesh": [[146, "compass-landice-tests-greenland-mesh-mesh"]], "compass.landice.tests.greenland.mesh.Mesh.build_cell_width": [[147, "compass-landice-tests-greenland-mesh-mesh-build-cell-width"]], "compass.landice.tests.greenland.mesh.Mesh.run": [[148, "compass-landice-tests-greenland-mesh-mesh-run"]], "compass.landice.tests.greenland.restart_test.RestartTest": [[149, "compass-landice-tests-greenland-restart-test-restarttest"]], "compass.landice.tests.greenland.restart_test.RestartTest.run": [[150, "compass-landice-tests-greenland-restart-test-restarttest-run"]], "compass.landice.tests.greenland.run_model.RunModel": [[151, "compass-landice-tests-greenland-run-model-runmodel"]], "compass.landice.tests.greenland.run_model.RunModel.run": [[152, "compass-landice-tests-greenland-run-model-runmodel-run"]], "compass.landice.tests.greenland.run_model.RunModel.setup": [[153, "compass-landice-tests-greenland-run-model-runmodel-setup"]], "compass.landice.tests.greenland.smoke_test.SmokeTest": [[154, "compass-landice-tests-greenland-smoke-test-smoketest"]], "compass.landice.tests.greenland.smoke_test.SmokeTest.run": [[155, "compass-landice-tests-greenland-smoke-test-smoketest-run"]], "compass.landice.tests.humboldt.Humboldt": [[156, "compass-landice-tests-humboldt-humboldt"]], "compass.landice.tests.humboldt.decomposition_test.DecompositionTest": [[157, "compass-landice-tests-humboldt-decomposition-test-decompositiontest"]], "compass.landice.tests.humboldt.decomposition_test.DecompositionTest.validate": [[158, "compass-landice-tests-humboldt-decomposition-test-decompositiontest-validate"]], "compass.landice.tests.humboldt.mesh.Mesh": [[159, "compass-landice-tests-humboldt-mesh-mesh"]], "compass.landice.tests.humboldt.mesh.Mesh.run": [[160, "compass-landice-tests-humboldt-mesh-mesh-run"]], "compass.landice.tests.humboldt.mesh_gen.MeshGen": [[161, "compass-landice-tests-humboldt-mesh-gen-meshgen"]], "compass.landice.tests.humboldt.mesh_gen.MeshGen.run": [[162, "compass-landice-tests-humboldt-mesh-gen-meshgen-run"]], "compass.landice.tests.humboldt.restart_test.RestartTest": [[163, "compass-landice-tests-humboldt-restart-test-restarttest"]], "compass.landice.tests.humboldt.restart_test.RestartTest.validate": [[164, "compass-landice-tests-humboldt-restart-test-restarttest-validate"]], "compass.landice.tests.humboldt.run_model.RunModel": [[165, "compass-landice-tests-humboldt-run-model-runmodel"]], "compass.landice.tests.humboldt.run_model.RunModel.run": [[166, "compass-landice-tests-humboldt-run-model-runmodel-run"]], "compass.landice.tests.hydro_radial.HydroRadial": [[167, "compass-landice-tests-hydro-radial-hydroradial"]], "compass.landice.tests.hydro_radial.decomposition_test.DecompositionTest": [[168, "compass-landice-tests-hydro-radial-decomposition-test-decompositiontest"]], "compass.landice.tests.hydro_radial.decomposition_test.DecompositionTest.run": [[169, "compass-landice-tests-hydro-radial-decomposition-test-decompositiontest-run"]], "compass.landice.tests.hydro_radial.restart_test.RestartTest": [[170, "compass-landice-tests-hydro-radial-restart-test-restarttest"]], "compass.landice.tests.hydro_radial.restart_test.RestartTest.run": [[171, "compass-landice-tests-hydro-radial-restart-test-restarttest-run"]], "compass.landice.tests.hydro_radial.run_model.RunModel": [[172, "compass-landice-tests-hydro-radial-run-model-runmodel"]], "compass.landice.tests.hydro_radial.run_model.RunModel.run": [[173, "compass-landice-tests-hydro-radial-run-model-runmodel-run"]], "compass.landice.tests.hydro_radial.run_model.RunModel.setup": [[174, "compass-landice-tests-hydro-radial-run-model-runmodel-setup"]], "compass.landice.tests.hydro_radial.setup_mesh.SetupMesh": [[175, "compass-landice-tests-hydro-radial-setup-mesh-setupmesh"]], "compass.landice.tests.hydro_radial.setup_mesh.SetupMesh.run": [[176, "compass-landice-tests-hydro-radial-setup-mesh-setupmesh-run"]], "compass.landice.tests.hydro_radial.spinup_test.SpinupTest": [[177, "compass-landice-tests-hydro-radial-spinup-test-spinuptest"]], "compass.landice.tests.hydro_radial.spinup_test.SpinupTest.run": [[178, "compass-landice-tests-hydro-radial-spinup-test-spinuptest-run"]], "compass.landice.tests.hydro_radial.steady_state_drift_test.SteadyStateDriftTest": [[179, "compass-landice-tests-hydro-radial-steady-state-drift-test-steadystatedrifttest"]], "compass.landice.tests.hydro_radial.steady_state_drift_test.SteadyStateDriftTest.run": [[180, "compass-landice-tests-hydro-radial-steady-state-drift-test-steadystatedrifttest-run"]], "compass.landice.tests.hydro_radial.visualize.Visualize": [[181, "compass-landice-tests-hydro-radial-visualize-visualize"]], "compass.landice.tests.hydro_radial.visualize.Visualize.run": [[182, "compass-landice-tests-hydro-radial-visualize-visualize-run"]], "compass.landice.tests.hydro_radial.visualize.visualize_hydro_radial": [[183, "compass-landice-tests-hydro-radial-visualize-visualize-hydro-radial"]], "compass.landice.tests.ismip6_forcing.Ismip6Forcing": [[184, "compass-landice-tests-ismip6-forcing-ismip6forcing"]], "compass.landice.tests.ismip6_forcing.atmosphere.Atmosphere": [[185, "compass-landice-tests-ismip6-forcing-atmosphere-atmosphere"]], "compass.landice.tests.ismip6_forcing.atmosphere.Atmosphere.configure": [[186, "compass-landice-tests-ismip6-forcing-atmosphere-atmosphere-configure"]], "compass.landice.tests.ismip6_forcing.atmosphere.create_mapfile_smb": [[187, "module-compass.landice.tests.ismip6_forcing.atmosphere.create_mapfile_smb"]], "compass.landice.tests.ismip6_forcing.atmosphere.create_mapfile_smb.build_mapping_file": [[188, "compass-landice-tests-ismip6-forcing-atmosphere-create-mapfile-smb-build-mapping-file"]], "compass.landice.tests.ismip6_forcing.atmosphere.create_mapfile_smb.create_atm_scrip": [[189, "compass-landice-tests-ismip6-forcing-atmosphere-create-mapfile-smb-create-atm-scrip"]], "compass.landice.tests.ismip6_forcing.atmosphere.process_smb.ProcessSMB": [[190, "compass-landice-tests-ismip6-forcing-atmosphere-process-smb-processsmb"]], "compass.landice.tests.ismip6_forcing.atmosphere.process_smb.ProcessSMB.correct_smb_anomaly_for_climatology": [[191, "compass-landice-tests-ismip6-forcing-atmosphere-process-smb-processsmb-correct-smb-anomaly-for-climatology"]], "compass.landice.tests.ismip6_forcing.atmosphere.process_smb.ProcessSMB.remap_ismip6_smb_to_mali": [[192, "compass-landice-tests-ismip6-forcing-atmosphere-process-smb-processsmb-remap-ismip6-smb-to-mali"]], "compass.landice.tests.ismip6_forcing.atmosphere.process_smb.ProcessSMB.rename_ismip6_smb_to_mali_vars": [[193, "compass-landice-tests-ismip6-forcing-atmosphere-process-smb-processsmb-rename-ismip6-smb-to-mali-vars"]], "compass.landice.tests.ismip6_forcing.atmosphere.process_smb.ProcessSMB.run": [[194, "compass-landice-tests-ismip6-forcing-atmosphere-process-smb-processsmb-run"]], "compass.landice.tests.ismip6_forcing.atmosphere.process_smb.ProcessSMB.setup": [[195, "compass-landice-tests-ismip6-forcing-atmosphere-process-smb-processsmb-setup"]], "compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.ProcessSmbRacmo": [[196, "compass-landice-tests-ismip6-forcing-atmosphere-process-smb-racmo-processsmbracmo"]], "compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.ProcessSmbRacmo.correct_smb_anomaly_for_base_smb": [[197, "compass-landice-tests-ismip6-forcing-atmosphere-process-smb-racmo-processsmbracmo-correct-smb-anomaly-for-base-smb"]], "compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.ProcessSmbRacmo.remap_source_smb_to_mali": [[198, "compass-landice-tests-ismip6-forcing-atmosphere-process-smb-racmo-processsmbracmo-remap-source-smb-to-mali"]], "compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.ProcessSmbRacmo.rename_source_smb_to_mali_vars": [[199, "compass-landice-tests-ismip6-forcing-atmosphere-process-smb-racmo-processsmbracmo-rename-source-smb-to-mali-vars"]], "compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.ProcessSmbRacmo.run": [[200, "compass-landice-tests-ismip6-forcing-atmosphere-process-smb-racmo-processsmbracmo-run"]], "compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.ProcessSmbRacmo.setup": [[201, "compass-landice-tests-ismip6-forcing-atmosphere-process-smb-racmo-processsmbracmo-setup"]], "compass.landice.tests.ismip6_forcing.configure.configure": [[202, "compass-landice-tests-ismip6-forcing-configure-configure"]], "compass.landice.tests.ismip6_forcing.create_mapfile.build_mapping_file": [[203, "compass-landice-tests-ismip6-forcing-create-mapfile-build-mapping-file"]], "compass.landice.tests.ismip6_forcing.ocean_basal.OceanBasal": [[204, "compass-landice-tests-ismip6-forcing-ocean-basal-oceanbasal"]], "compass.landice.tests.ismip6_forcing.ocean_basal.OceanBasal.configure": [[205, "compass-landice-tests-ismip6-forcing-ocean-basal-oceanbasal-configure"]], "compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.ProcessBasalMelt": [[206, "compass-landice-tests-ismip6-forcing-ocean-basal-process-basal-melt-processbasalmelt"]], "compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.ProcessBasalMelt.combine_ismip6_inputfiles": [[207, "compass-landice-tests-ismip6-forcing-ocean-basal-process-basal-melt-processbasalmelt-combine-ismip6-inputfiles"]], "compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.ProcessBasalMelt.remap_ismip6_basal_melt_to_mali_vars": [[208, "compass-landice-tests-ismip6-forcing-ocean-basal-process-basal-melt-processbasalmelt-remap-ismip6-basal-melt-to-mali-vars"]], "compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.ProcessBasalMelt.rename_ismip6_basal_melt_to_mali_vars": [[209, "compass-landice-tests-ismip6-forcing-ocean-basal-process-basal-melt-processbasalmelt-rename-ismip6-basal-melt-to-mali-vars"]], "compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.ProcessBasalMelt.run": [[210, "compass-landice-tests-ismip6-forcing-ocean-basal-process-basal-melt-processbasalmelt-run"]], "compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.ProcessBasalMelt.setup": [[211, "compass-landice-tests-ismip6-forcing-ocean-basal-process-basal-melt-processbasalmelt-setup"]], "compass.landice.tests.ismip6_forcing.ocean_thermal.OceanThermal": [[212, "compass-landice-tests-ismip6-forcing-ocean-thermal-oceanthermal"]], "compass.landice.tests.ismip6_forcing.ocean_thermal.OceanThermal.configure": [[213, "compass-landice-tests-ismip6-forcing-ocean-thermal-oceanthermal-configure"]], "compass.landice.tests.ismip6_forcing.ocean_thermal.process_thermal_forcing.ProcessThermalForcing": [[214, "compass-landice-tests-ismip6-forcing-ocean-thermal-process-thermal-forcing-processthermalforcing"]], "compass.landice.tests.ismip6_forcing.ocean_thermal.process_thermal_forcing.ProcessThermalForcing.remap_ismip6_thermal_forcing_to_mali_vars": [[215, "compass-landice-tests-ismip6-forcing-ocean-thermal-process-thermal-forcing-processthermalforcing-remap-ismip6-thermal-forcing-to-mali-vars"]], "compass.landice.tests.ismip6_forcing.ocean_thermal.process_thermal_forcing.ProcessThermalForcing.rename_ismip6_thermal_forcing_to_mali_vars": [[216, "compass-landice-tests-ismip6-forcing-ocean-thermal-process-thermal-forcing-processthermalforcing-rename-ismip6-thermal-forcing-to-mali-vars"]], "compass.landice.tests.ismip6_forcing.ocean_thermal.process_thermal_forcing.ProcessThermalForcing.run": [[217, "compass-landice-tests-ismip6-forcing-ocean-thermal-process-thermal-forcing-processthermalforcing-run"]], "compass.landice.tests.ismip6_forcing.ocean_thermal.process_thermal_forcing.ProcessThermalForcing.setup": [[218, "compass-landice-tests-ismip6-forcing-ocean-thermal-process-thermal-forcing-processthermalforcing-setup"]], "compass.landice.tests.kangerlussuaq.Kangerlussuaq": [[219, "compass-landice-tests-kangerlussuaq-kangerlussuaq"]], "compass.landice.tests.kangerlussuaq.mesh.Mesh": [[220, "compass-landice-tests-kangerlussuaq-mesh-mesh"]], "compass.landice.tests.kangerlussuaq.mesh.Mesh.run": [[221, "compass-landice-tests-kangerlussuaq-mesh-mesh-run"]], "compass.landice.tests.kangerlussuaq.mesh_gen.MeshGen": [[222, "compass-landice-tests-kangerlussuaq-mesh-gen-meshgen"]], "compass.landice.tests.kangerlussuaq.mesh_gen.MeshGen.run": [[223, "compass-landice-tests-kangerlussuaq-mesh-gen-meshgen-run"]], "compass.landice.tests.koge_bugt_s.KogeBugtS": [[224, "compass-landice-tests-koge-bugt-s-kogebugts"]], "compass.landice.tests.koge_bugt_s.mesh.Mesh": [[225, "compass-landice-tests-koge-bugt-s-mesh-mesh"]], "compass.landice.tests.koge_bugt_s.mesh.Mesh.run": [[226, "compass-landice-tests-koge-bugt-s-mesh-mesh-run"]], "compass.landice.tests.koge_bugt_s.mesh_gen.MeshGen": [[227, "compass-landice-tests-koge-bugt-s-mesh-gen-meshgen"]], "compass.landice.tests.koge_bugt_s.mesh_gen.MeshGen.run": [[228, "compass-landice-tests-koge-bugt-s-mesh-gen-meshgen-run"]], "compass.landice.tests.mismipplus.MISMIPplus": [[229, "compass-landice-tests-mismipplus-mismipplus"]], "compass.landice.tests.mismipplus.run_model.RunModel": [[230, "compass-landice-tests-mismipplus-run-model-runmodel"]], "compass.landice.tests.mismipplus.run_model.RunModel.run": [[231, "compass-landice-tests-mismipplus-run-model-runmodel-run"]], "compass.landice.tests.mismipplus.run_model.RunModel.setup": [[232, "compass-landice-tests-mismipplus-run-model-runmodel-setup"]], "compass.landice.tests.mismipplus.smoke_test.SmokeTest": [[233, "compass-landice-tests-mismipplus-smoke-test-smoketest"]], "compass.landice.tests.mismipplus.smoke_test.SmokeTest.run": [[234, "compass-landice-tests-mismipplus-smoke-test-smoketest-run"]], "compass.landice.tests.thwaites.Thwaites": [[235, "compass-landice-tests-thwaites-thwaites"]], "compass.landice.tests.thwaites.decomposition_test.DecompositionTest": [[236, "compass-landice-tests-thwaites-decomposition-test-decompositiontest"]], "compass.landice.tests.thwaites.decomposition_test.DecompositionTest.run": [[237, "compass-landice-tests-thwaites-decomposition-test-decompositiontest-run"]], "compass.landice.tests.thwaites.restart_test.RestartTest": [[238, "compass-landice-tests-thwaites-restart-test-restarttest"]], "compass.landice.tests.thwaites.restart_test.RestartTest.run": [[239, "compass-landice-tests-thwaites-restart-test-restarttest-run"]], "compass.landice.tests.thwaites.run_model.RunModel": [[240, "compass-landice-tests-thwaites-run-model-runmodel"]], "compass.landice.tests.thwaites.run_model.RunModel.run": [[241, "compass-landice-tests-thwaites-run-model-runmodel-run"]], "compass.landice.tests.thwaites.run_model.RunModel.setup": [[242, "compass-landice-tests-thwaites-run-model-runmodel-setup"]], "Landice core": [[243, "landice-core"], [715, "landice-core"]], "framework": [[244, "framework"], [245, "framework"], [246, "framework"], [247, "framework"], [248, "framework"], [249, "framework"], [250, "framework"], [251, "framework"], [253, "framework"], [254, "framework"], [255, "framework"], [256, "framework"], [257, "framework"], [686, "framework"], [687, "framework"], [688, "framework"], [693, "framework"], [695, "framework"], [696, "framework"], [697, "framework"], [699, "framework"], [703, "framework"]], "DtConvergenceTest": [[244, "dtconvergencetest"]], "RunModel": [[244, "runmodel"], [245, "runmodel"], [246, "runmodel"]], "SetupMesh": [[245, "setupmesh"], [246, "setupmesh"]], "Visualize": [[245, "visualize"], [246, "visualize"]], "DecompositionTest": [[245, "decompositiontest"], [246, "decompositiontest"]], "SmokeTest": [[246, "smoketest"]], "RestartTest": [[246, "restarttest"]], "setup_mesh": [[247, "setup-mesh"], [248, "setup-mesh"], [251, "setup-mesh"]], "run_experiment": [[247, "run-experiment"]], "standard_experiments": [[247, "standard-experiments"], [720, "standard-experiments"]], "visualize": [[247, "visualize"], [251, "visualize"]], "decomposition_test and enthalpy_decomposition_test": [[247, "decomposition-test-and-enthalpy-decomposition-test"], [720, "decomposition-test-and-enthalpy-decomposition-test"]], "restart_test and enthalpy_restart_test": [[247, "restart-test-and-enthalpy-restart-test"], [720, "restart-test-and-enthalpy-restart-test"]], "run_model": [[248, "run-model"], [249, "run-model"], [250, "run-model"], [251, "run-model"], [256, "run-model"], [257, "run-model"]], "A": [[248, "a"], [721, "a"]], "B": [[248, "b"], [721, "b"]], "smoke_test": [[249, "smoke-test"], [256, "smoke-test"], [719, "smoke-test"], [722, "smoke-test"], [729, "smoke-test"]], "decomposition_test": [[249, "decomposition-test"], [250, "decomposition-test"], [251, "decomposition-test"], [257, "decomposition-test"], [718, "decomposition-test"], [719, "decomposition-test"], [722, "decomposition-test"], [724, "decomposition-test"], [730, "decomposition-test"]], "restart_test": [[249, "restart-test"], [250, "restart-test"], [251, "restart-test"], [257, "restart-test"], [686, "restart-test"], [693, "restart-test"], [719, "restart-test"], [722, "restart-test"], [724, "restart-test"], [730, "restart-test"], [742, "restart-test"], [749, "restart-test"]], "high_res_mesh": [[249, "high-res-mesh"], [257, "high-res-mesh"], [722, "high-res-mesh"], [730, "high-res-mesh"]], "mesh_gen": [[250, "mesh-gen"], [254, "mesh-gen"], [255, "mesh-gen"], [723, "mesh-gen"], [727, "mesh-gen"], [728, "mesh-gen"]], "spinup_test": [[251, "spinup-test"], [724, "spinup-test"]], "steady_state_drift_test": [[251, "steady-state-drift-test"], [724, "steady-state-drift-test"]], "Test groups": [[252, "test-groups"], [694, "test-groups"], [750, "test-groups"]], "atmosphere": [[253, "atmosphere"], [726, "atmosphere"]], "ocean_basal": [[253, "ocean-basal"], [726, "ocean-basal"]], "ocean_thermal": [[253, "ocean-thermal"], [726, "ocean-thermal"]], "Anvil": [[258, "anvil"], [731, "anvil"]], "intel": [[258, "intel"], [259, "intel"], [260, "intel"]], "gnu": [[258, "gnu"], [259, "gnu"]], "Chrysalis": [[259, "chrysalis"], [732, "chrysalis"]], "CompyMcNodeFace": [[260, "compymcnodeface"], [733, "compymcnodeface"]], "Cori": [[261, "cori"], [734, "cori"]], "cori-haswell, intel": [[261, "cori-haswell-intel"]], "cori-haswell, gnu": [[261, "cori-haswell-gnu"]], "Machines": [[262, "machines"], [735, "machines"]], "Supported Machines": [[262, "supported-machines"], [735, "supported-machines"]], "Other Machines": [[262, "other-machines"], [735, "other-machines"]], "Perlmutter": [[263, "perlmutter"], [736, "perlmutter"]], "pm-cpu, gnu": [[263, "pm-cpu-gnu"]], "ocean": [[264, "ocean"]], "baroclinic_channel": [[264, "baroclinic-channel"], [686, "baroclinic-channel"], [742, "baroclinic-channel"]], "dam_break": [[264, "dam-break"], [687, "dam-break"], [743, "dam-break"]], "drying_slope": [[264, "drying-slope"], [688, "drying-slope"], [744, "drying-slope"]], "global_convergence": [[264, "global-convergence"], [689, "global-convergence"], [745, "global-convergence"]], "cosine_bell": [[264, "cosine-bell"], [689, "cosine-bell"], [745, "cosine-bell"]], "global_ocean": [[264, "global-ocean"], [690, "global-ocean"], [746, "global-ocean"]], "test cases and steps": [[264, "test-cases-and-steps"], [264, "id1"], [264, "id2"]], "global_ocean framework": [[264, "global-ocean-framework"]], "gotm": [[264, "gotm"], [691, "gotm"], [747, "gotm"]], "default": [[264, "default"], [686, "default"], [687, "default"], [688, "default"], [691, "default"], [693, "default"], [695, "default"], [697, "default"], [742, "default"], [743, "default"], [744, "default"], [747, "default"], [749, "default"], [751, "default"], [753, "default"], [755, "default"], [759, "default"]], "hurricane": [[264, "hurricane"], [692, "hurricane"], [748, "hurricane"]], "ice_shelf_2d": [[264, "ice-shelf-2d"], [693, "ice-shelf-2d"], [749, "ice-shelf-2d"]], "internal_wave": [[264, "internal-wave"], [695, "internal-wave"], [751, "internal-wave"]], "isomip_plus": [[264, "isomip-plus"], [696, "isomip-plus"], [752, "isomip-plus"]], "merry_go_round": [[264, "merry-go-round"], [697, "merry-go-round"], [753, "merry-go-round"]], "planar_convergence": [[264, "planar-convergence"], [698, "planar-convergence"], [754, "planar-convergence"]], "horizontal_advection": [[264, "horizontal-advection"], [698, "horizontal-advection"], [754, "horizontal-advection"]], "soma": [[264, "soma"], [699, "soma"], [755, "soma"]], "sphere_transport": [[264, "sphere-transport"], [700, "sphere-transport"], [756, "sphere-transport"]], "correlated_tracers_2d": [[264, "correlated-tracers-2d"], [700, "correlated-tracers-2d"], [756, "correlated-tracers-2d"]], "divergent_2d": [[264, "divergent-2d"], [700, "divergent-2d"], [756, "divergent-2d"]], "nondivergent_2d": [[264, "nondivergent-2d"], [700, "nondivergent-2d"], [756, "nondivergent-2d"]], "rotation_2d": [[264, "rotation-2d"], [700, "rotation-2d"], [756, "rotation-2d"]], "sphere_transport framework": [[264, "sphere-transport-framework"]], "tides": [[264, "tides"], [702, "tides"], [758, "tides"]], "ziso": [[264, "ziso"], [703, "ziso"], [759, "ziso"]], "ocean framework": [[264, "ocean-framework"]], "Ocean framework": [[265, "ocean-framework"]], "Namelist replacements and streams files": [[265, "namelist-replacements-and-streams-files"]], "Vertical coordinate": [[265, "vertical-coordinate"], [739, "vertical-coordinate"]], "Culling Meshes": [[265, "culling-meshes"]], "Including a Floodplain": [[265, "including-a-floodplain"]], "Haney number": [[265, "haney-number"]], "Ice-shelf cavities": [[265, "ice-shelf-cavities"], [746, "ice-shelf-cavities"]], "Particles": [[265, "particles"]], "Plotting": [[265, "plotting"]], "compass.ocean.Ocean": [[266, "compass-ocean-ocean"]], "compass.ocean.haney.compute_haney_number": [[267, "compass-ocean-haney-compute-haney-number"]], "compass.ocean.iceshelf.adjust_ssh": [[268, "compass-ocean-iceshelf-adjust-ssh"]], "compass.ocean.iceshelf.compute_land_ice_pressure_and_draft": [[269, "compass-ocean-iceshelf-compute-land-ice-pressure-and-draft"]], "compass.ocean.mesh.cull.CullMeshStep": [[270, "compass-ocean-mesh-cull-cullmeshstep"]], "compass.ocean.mesh.cull.CullMeshStep.run": [[271, "compass-ocean-mesh-cull-cullmeshstep-run"]], "compass.ocean.mesh.cull.CullMeshStep.setup": [[272, "compass-ocean-mesh-cull-cullmeshstep-setup"]], "compass.ocean.mesh.cull.cull_mesh": [[273, "compass-ocean-mesh-cull-cull-mesh"]], "compass.ocean.mesh.floodplain.FloodplainMeshStep": [[274, "compass-ocean-mesh-floodplain-floodplainmeshstep"]], "compass.ocean.mesh.floodplain.FloodplainMeshStep.run": [[275, "compass-ocean-mesh-floodplain-floodplainmeshstep-run"]], "compass.ocean.particles.remap_particles": [[276, "compass-ocean-particles-remap-particles"]], "compass.ocean.particles.write": [[277, "compass-ocean-particles-write"]], "compass.ocean.plot.plot_initial_state": [[278, "compass-ocean-plot-plot-initial-state"]], "compass.ocean.plot.plot_vertical_grid": [[279, "compass-ocean-plot-plot-vertical-grid"]], "compass.ocean.tests.baroclinic_channel.BaroclinicChannel": [[280, "compass-ocean-tests-baroclinic-channel-baroclinicchannel"]], "compass.ocean.tests.baroclinic_channel.configure": [[281, "compass-ocean-tests-baroclinic-channel-configure"]], "compass.ocean.tests.baroclinic_channel.decomp_test.DecompTest": [[282, "compass-ocean-tests-baroclinic-channel-decomp-test-decomptest"]], "compass.ocean.tests.baroclinic_channel.decomp_test.DecompTest.configure": [[283, "compass-ocean-tests-baroclinic-channel-decomp-test-decomptest-configure"]], "compass.ocean.tests.baroclinic_channel.decomp_test.DecompTest.run": [[284, "compass-ocean-tests-baroclinic-channel-decomp-test-decomptest-run"]], "compass.ocean.tests.baroclinic_channel.default.Default": [[285, "compass-ocean-tests-baroclinic-channel-default-default"]], "compass.ocean.tests.baroclinic_channel.default.Default.configure": [[286, "compass-ocean-tests-baroclinic-channel-default-default-configure"]], "compass.ocean.tests.baroclinic_channel.default.Default.run": [[287, "compass-ocean-tests-baroclinic-channel-default-default-run"]], "compass.ocean.tests.baroclinic_channel.forward.Forward": [[288, "compass-ocean-tests-baroclinic-channel-forward-forward"]], "compass.ocean.tests.baroclinic_channel.forward.Forward.run": [[289, "compass-ocean-tests-baroclinic-channel-forward-forward-run"]], "compass.ocean.tests.baroclinic_channel.forward.Forward.setup": [[290, "compass-ocean-tests-baroclinic-channel-forward-forward-setup"]], "compass.ocean.tests.baroclinic_channel.initial_state.InitialState": [[291, "compass-ocean-tests-baroclinic-channel-initial-state-initialstate"]], "compass.ocean.tests.baroclinic_channel.initial_state.InitialState.run": [[292, "compass-ocean-tests-baroclinic-channel-initial-state-initialstate-run"]], "compass.ocean.tests.baroclinic_channel.initial_state.InitialState.setup": [[293, "compass-ocean-tests-baroclinic-channel-initial-state-initialstate-setup"]], "compass.ocean.tests.baroclinic_channel.restart_test.RestartTest": [[294, "compass-ocean-tests-baroclinic-channel-restart-test-restarttest"]], "compass.ocean.tests.baroclinic_channel.restart_test.RestartTest.configure": [[295, "compass-ocean-tests-baroclinic-channel-restart-test-restarttest-configure"]], "compass.ocean.tests.baroclinic_channel.restart_test.RestartTest.run": [[296, "compass-ocean-tests-baroclinic-channel-restart-test-restarttest-run"]], "compass.ocean.tests.baroclinic_channel.rpe_test.RpeTest": [[297, "compass-ocean-tests-baroclinic-channel-rpe-test-rpetest"]], "compass.ocean.tests.baroclinic_channel.rpe_test.RpeTest.configure": [[298, "compass-ocean-tests-baroclinic-channel-rpe-test-rpetest-configure"]], "compass.ocean.tests.baroclinic_channel.rpe_test.RpeTest.run": [[299, "compass-ocean-tests-baroclinic-channel-rpe-test-rpetest-run"]], "compass.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis": [[300, "compass-ocean-tests-baroclinic-channel-rpe-test-analysis-analysis"]], "compass.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.run": [[301, "compass-ocean-tests-baroclinic-channel-rpe-test-analysis-analysis-run"]], "compass.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.setup": [[302, "compass-ocean-tests-baroclinic-channel-rpe-test-analysis-analysis-setup"]], "compass.ocean.tests.baroclinic_channel.threads_test.ThreadsTest": [[303, "compass-ocean-tests-baroclinic-channel-threads-test-threadstest"]], "compass.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.configure": [[304, "compass-ocean-tests-baroclinic-channel-threads-test-threadstest-configure"]], "compass.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.run": [[305, "compass-ocean-tests-baroclinic-channel-threads-test-threadstest-run"]], "compass.ocean.tests.dam_break.DamBreak": [[306, "compass-ocean-tests-dam-break-dambreak"]], "compass.ocean.tests.dam_break.default.Default": [[307, "compass-ocean-tests-dam-break-default-default"]], "compass.ocean.tests.dam_break.default.Default.configure": [[308, "compass-ocean-tests-dam-break-default-default-configure"]], "compass.ocean.tests.dam_break.forward.Forward": [[309, "compass-ocean-tests-dam-break-forward-forward"]], "compass.ocean.tests.dam_break.forward.Forward.run": [[310, "compass-ocean-tests-dam-break-forward-forward-run"]], "compass.ocean.tests.dam_break.initial_state.InitialState": [[311, "compass-ocean-tests-dam-break-initial-state-initialstate"]], "compass.ocean.tests.dam_break.initial_state.InitialState.run": [[312, "compass-ocean-tests-dam-break-initial-state-initialstate-run"]], "compass.ocean.tests.dam_break.viz.Viz": [[313, "compass-ocean-tests-dam-break-viz-viz"]], "compass.ocean.tests.dam_break.viz.Viz.run": [[314, "compass-ocean-tests-dam-break-viz-viz-run"]], "compass.ocean.tests.drying_slope.DryingSlope": [[315, "compass-ocean-tests-drying-slope-dryingslope"]], "compass.ocean.tests.drying_slope.default.Default": [[316, "compass-ocean-tests-drying-slope-default-default"]], "compass.ocean.tests.drying_slope.default.Default.configure": [[317, "compass-ocean-tests-drying-slope-default-default-configure"]], "compass.ocean.tests.drying_slope.forward.Forward": [[318, "compass-ocean-tests-drying-slope-forward-forward"]], "compass.ocean.tests.drying_slope.forward.Forward.run": [[319, "compass-ocean-tests-drying-slope-forward-forward-run"]], "compass.ocean.tests.drying_slope.initial_state.InitialState": [[320, "compass-ocean-tests-drying-slope-initial-state-initialstate"]], "compass.ocean.tests.drying_slope.initial_state.InitialState.run": [[321, "compass-ocean-tests-drying-slope-initial-state-initialstate-run"]], "compass.ocean.tests.drying_slope.viz.Viz": [[322, "compass-ocean-tests-drying-slope-viz-viz"]], "compass.ocean.tests.drying_slope.viz.Viz.run": [[323, "compass-ocean-tests-drying-slope-viz-viz-run"]], "compass.ocean.tests.global_convergence.GlobalConvergence": [[324, "compass-ocean-tests-global-convergence-globalconvergence"]], "compass.ocean.tests.global_convergence.cosine_bell.CosineBell": [[325, "compass-ocean-tests-global-convergence-cosine-bell-cosinebell"]], "compass.ocean.tests.global_convergence.cosine_bell.CosineBell.configure": [[326, "compass-ocean-tests-global-convergence-cosine-bell-cosinebell-configure"]], "compass.ocean.tests.global_convergence.cosine_bell.CosineBell.run": [[327, "compass-ocean-tests-global-convergence-cosine-bell-cosinebell-run"]], "compass.ocean.tests.global_convergence.cosine_bell.analysis.Analysis": [[328, "compass-ocean-tests-global-convergence-cosine-bell-analysis-analysis"]], "compass.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rmse": [[329, "compass-ocean-tests-global-convergence-cosine-bell-analysis-analysis-rmse"]], "compass.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.run": [[330, "compass-ocean-tests-global-convergence-cosine-bell-analysis-analysis-run"]], "compass.ocean.tests.global_convergence.cosine_bell.forward.Forward": [[331, "compass-ocean-tests-global-convergence-cosine-bell-forward-forward"]], "compass.ocean.tests.global_convergence.cosine_bell.forward.Forward.get_dt": [[332, "compass-ocean-tests-global-convergence-cosine-bell-forward-forward-get-dt"]], "compass.ocean.tests.global_convergence.cosine_bell.forward.Forward.run": [[333, "compass-ocean-tests-global-convergence-cosine-bell-forward-forward-run"]], "compass.ocean.tests.global_convergence.cosine_bell.forward.Forward.setup": [[334, "compass-ocean-tests-global-convergence-cosine-bell-forward-forward-setup"]], "compass.ocean.tests.global_convergence.cosine_bell.init.Init": [[335, "compass-ocean-tests-global-convergence-cosine-bell-init-init"]], "compass.ocean.tests.global_convergence.cosine_bell.init.Init.run": [[336, "compass-ocean-tests-global-convergence-cosine-bell-init-init-run"]], "compass.ocean.tests.global_ocean.GlobalOcean": [[337, "compass-ocean-tests-global-ocean-globalocean"]], "compass.ocean.tests.global_ocean.analysis_test.AnalysisTest": [[338, "compass-ocean-tests-global-ocean-analysis-test-analysistest"]], "compass.ocean.tests.global_ocean.analysis_test.AnalysisTest.configure": [[339, "compass-ocean-tests-global-ocean-analysis-test-analysistest-configure"]], "compass.ocean.tests.global_ocean.analysis_test.AnalysisTest.run": [[340, "compass-ocean-tests-global-ocean-analysis-test-analysistest-run"]], "compass.ocean.tests.global_ocean.configure": [[341, "module-compass.ocean.tests.global_ocean.configure"]], "compass.ocean.tests.global_ocean.configure.configure_global_ocean": [[342, "compass-ocean-tests-global-ocean-configure-configure-global-ocean"]], "compass.ocean.tests.global_ocean.daily_output_test.DailyOutputTest": [[343, "compass-ocean-tests-global-ocean-daily-output-test-dailyoutputtest"]], "compass.ocean.tests.global_ocean.daily_output_test.DailyOutputTest.configure": [[344, "compass-ocean-tests-global-ocean-daily-output-test-dailyoutputtest-configure"]], "compass.ocean.tests.global_ocean.daily_output_test.DailyOutputTest.run": [[345, "compass-ocean-tests-global-ocean-daily-output-test-dailyoutputtest-run"]], "compass.ocean.tests.global_ocean.decomp_test.DecompTest": [[346, "compass-ocean-tests-global-ocean-decomp-test-decomptest"]], "compass.ocean.tests.global_ocean.decomp_test.DecompTest.configure": [[347, "compass-ocean-tests-global-ocean-decomp-test-decomptest-configure"]], "compass.ocean.tests.global_ocean.decomp_test.DecompTest.run": [[348, "compass-ocean-tests-global-ocean-decomp-test-decomptest-run"]], "compass.ocean.tests.global_ocean.dynamic_adjustment.DynamicAdjustment": [[349, "compass-ocean-tests-global-ocean-dynamic-adjustment-dynamicadjustment"]], "compass.ocean.tests.global_ocean.dynamic_adjustment.DynamicAdjustment.run": [[350, "compass-ocean-tests-global-ocean-dynamic-adjustment-dynamicadjustment-run"]], "compass.ocean.tests.global_ocean.files_for_e3sm.FilesForE3SM": [[351, "compass-ocean-tests-global-ocean-files-for-e3sm-filesfore3sm"]], "compass.ocean.tests.global_ocean.files_for_e3sm.FilesForE3SM.configure": [[352, "compass-ocean-tests-global-ocean-files-for-e3sm-filesfore3sm-configure"]], "compass.ocean.tests.global_ocean.files_for_e3sm.FilesForE3SM.run": [[353, "compass-ocean-tests-global-ocean-files-for-e3sm-filesfore3sm-run"]], "compass.ocean.tests.global_ocean.files_for_e3sm.diagnostics_files.DiagnosticsFiles": [[354, "compass-ocean-tests-global-ocean-files-for-e3sm-diagnostics-files-diagnosticsfiles"]], "compass.ocean.tests.global_ocean.files_for_e3sm.diagnostics_files.DiagnosticsFiles.run": [[355, "compass-ocean-tests-global-ocean-files-for-e3sm-diagnostics-files-diagnosticsfiles-run"]], "compass.ocean.tests.global_ocean.files_for_e3sm.ocean_graph_partition.OceanGraphPartition": [[356, "compass-ocean-tests-global-ocean-files-for-e3sm-ocean-graph-partition-oceangraphpartition"]], "compass.ocean.tests.global_ocean.files_for_e3sm.ocean_graph_partition.OceanGraphPartition.run": [[357, "compass-ocean-tests-global-ocean-files-for-e3sm-ocean-graph-partition-oceangraphpartition-run"]], "compass.ocean.tests.global_ocean.files_for_e3sm.ocean_initial_condition.OceanInitialCondition": [[358, "compass-ocean-tests-global-ocean-files-for-e3sm-ocean-initial-condition-oceaninitialcondition"]], "compass.ocean.tests.global_ocean.files_for_e3sm.ocean_initial_condition.OceanInitialCondition.run": [[359, "compass-ocean-tests-global-ocean-files-for-e3sm-ocean-initial-condition-oceaninitialcondition-run"]], "compass.ocean.tests.global_ocean.files_for_e3sm.scrip.Scrip": [[360, "compass-ocean-tests-global-ocean-files-for-e3sm-scrip-scrip"]], "compass.ocean.tests.global_ocean.files_for_e3sm.scrip.Scrip.run": [[361, "compass-ocean-tests-global-ocean-files-for-e3sm-scrip-scrip-run"]], "compass.ocean.tests.global_ocean.files_for_e3sm.seaice_initial_condition.SeaiceInitialCondition": [[362, "compass-ocean-tests-global-ocean-files-for-e3sm-seaice-initial-condition-seaiceinitialcondition"]], "compass.ocean.tests.global_ocean.files_for_e3sm.seaice_initial_condition.SeaiceInitialCondition.run": [[363, "compass-ocean-tests-global-ocean-files-for-e3sm-seaice-initial-condition-seaiceinitialcondition-run"]], "compass.ocean.tests.global_ocean.forward.ForwardStep": [[364, "compass-ocean-tests-global-ocean-forward-forwardstep"]], "compass.ocean.tests.global_ocean.forward.ForwardStep.run": [[365, "compass-ocean-tests-global-ocean-forward-forwardstep-run"]], "compass.ocean.tests.global_ocean.forward.ForwardStep.setup": [[366, "compass-ocean-tests-global-ocean-forward-forwardstep-setup"]], "compass.ocean.tests.global_ocean.forward.ForwardTestCase": [[367, "compass-ocean-tests-global-ocean-forward-forwardtestcase"]], "compass.ocean.tests.global_ocean.forward.ForwardTestCase.configure": [[368, "compass-ocean-tests-global-ocean-forward-forwardtestcase-configure"]], "compass.ocean.tests.global_ocean.forward.ForwardTestCase.run": [[369, "compass-ocean-tests-global-ocean-forward-forwardtestcase-run"]], "compass.ocean.tests.global_ocean.init.Init": [[370, "compass-ocean-tests-global-ocean-init-init"]], "compass.ocean.tests.global_ocean.init.Init.configure": [[371, "compass-ocean-tests-global-ocean-init-init-configure"]], "compass.ocean.tests.global_ocean.init.Init.run": [[372, "compass-ocean-tests-global-ocean-init-init-run"]], "compass.ocean.tests.global_ocean.init.initial_state.InitialState": [[373, "compass-ocean-tests-global-ocean-init-initial-state-initialstate"]], "compass.ocean.tests.global_ocean.init.initial_state.InitialState.run": [[374, "compass-ocean-tests-global-ocean-init-initial-state-initialstate-run"]], "compass.ocean.tests.global_ocean.init.initial_state.InitialState.setup": [[375, "compass-ocean-tests-global-ocean-init-initial-state-initialstate-setup"]], "compass.ocean.tests.global_ocean.init.ssh_adjustment.SshAdjustment": [[376, "compass-ocean-tests-global-ocean-init-ssh-adjustment-sshadjustment"]], "compass.ocean.tests.global_ocean.init.ssh_adjustment.SshAdjustment.run": [[377, "compass-ocean-tests-global-ocean-init-ssh-adjustment-sshadjustment-run"]], "compass.ocean.tests.global_ocean.init.ssh_adjustment.SshAdjustment.setup": [[378, "compass-ocean-tests-global-ocean-init-ssh-adjustment-sshadjustment-setup"]], "compass.ocean.tests.global_ocean.mesh.Mesh": [[379, "compass-ocean-tests-global-ocean-mesh-mesh"]], "compass.ocean.tests.global_ocean.mesh.Mesh.configure": [[380, "compass-ocean-tests-global-ocean-mesh-mesh-configure"]], "compass.ocean.tests.global_ocean.mesh.Mesh.run": [[381, "compass-ocean-tests-global-ocean-mesh-mesh-run"]], "compass.ocean.tests.global_ocean.mesh.ec30to60.EC30to60BaseMesh": [[382, "compass-ocean-tests-global-ocean-mesh-ec30to60-ec30to60basemesh"]], "compass.ocean.tests.global_ocean.mesh.ec30to60.EC30to60BaseMesh.build_cell_width_lat_lon": [[383, "compass-ocean-tests-global-ocean-mesh-ec30to60-ec30to60basemesh-build-cell-width-lat-lon"]], "compass.ocean.tests.global_ocean.mesh.ec30to60.dynamic_adjustment.EC30to60DynamicAdjustment": [[384, "compass-ocean-tests-global-ocean-mesh-ec30to60-dynamic-adjustment-ec30to60dynamicadjustment"]], "compass.ocean.tests.global_ocean.mesh.ec30to60.dynamic_adjustment.EC30to60DynamicAdjustment.configure": [[385, "compass-ocean-tests-global-ocean-mesh-ec30to60-dynamic-adjustment-ec30to60dynamicadjustment-configure"]], "compass.ocean.tests.global_ocean.mesh.ec30to60.dynamic_adjustment.EC30to60DynamicAdjustment.run": [[386, "compass-ocean-tests-global-ocean-mesh-ec30to60-dynamic-adjustment-ec30to60dynamicadjustment-run"]], "compass.ocean.tests.global_ocean.mesh.qu240.dynamic_adjustment.QU240DynamicAdjustment": [[387, "compass-ocean-tests-global-ocean-mesh-qu240-dynamic-adjustment-qu240dynamicadjustment"]], "compass.ocean.tests.global_ocean.mesh.qu240.dynamic_adjustment.QU240DynamicAdjustment.configure": [[388, "compass-ocean-tests-global-ocean-mesh-qu240-dynamic-adjustment-qu240dynamicadjustment-configure"]], "compass.ocean.tests.global_ocean.mesh.qu240.dynamic_adjustment.QU240DynamicAdjustment.run": [[389, "compass-ocean-tests-global-ocean-mesh-qu240-dynamic-adjustment-qu240dynamicadjustment-run"]], "compass.ocean.tests.global_ocean.mesh.so12to60.SO12to60BaseMesh": [[390, "compass-ocean-tests-global-ocean-mesh-so12to60-so12to60basemesh"]], "compass.ocean.tests.global_ocean.mesh.so12to60.SO12to60BaseMesh.build_cell_width_lat_lon": [[391, "compass-ocean-tests-global-ocean-mesh-so12to60-so12to60basemesh-build-cell-width-lat-lon"]], "compass.ocean.tests.global_ocean.mesh.so12to60.dynamic_adjustment.SO12to60DynamicAdjustment": [[392, "compass-ocean-tests-global-ocean-mesh-so12to60-dynamic-adjustment-so12to60dynamicadjustment"]], "compass.ocean.tests.global_ocean.mesh.so12to60.dynamic_adjustment.SO12to60DynamicAdjustment.configure": [[393, "compass-ocean-tests-global-ocean-mesh-so12to60-dynamic-adjustment-so12to60dynamicadjustment-configure"]], "compass.ocean.tests.global_ocean.mesh.so12to60.dynamic_adjustment.SO12to60DynamicAdjustment.run": [[394, "compass-ocean-tests-global-ocean-mesh-so12to60-dynamic-adjustment-so12to60dynamicadjustment-run"]], "compass.ocean.tests.global_ocean.mesh.wc14.WC14BaseMesh": [[395, "compass-ocean-tests-global-ocean-mesh-wc14-wc14basemesh"]], "compass.ocean.tests.global_ocean.mesh.wc14.WC14BaseMesh.build_cell_width_lat_lon": [[396, "compass-ocean-tests-global-ocean-mesh-wc14-wc14basemesh-build-cell-width-lat-lon"]], "compass.ocean.tests.global_ocean.mesh.wc14.dynamic_adjustment.WC14DynamicAdjustment": [[397, "compass-ocean-tests-global-ocean-mesh-wc14-dynamic-adjustment-wc14dynamicadjustment"]], "compass.ocean.tests.global_ocean.mesh.wc14.dynamic_adjustment.WC14DynamicAdjustment.configure": [[398, "compass-ocean-tests-global-ocean-mesh-wc14-dynamic-adjustment-wc14dynamicadjustment-configure"]], "compass.ocean.tests.global_ocean.mesh.wc14.dynamic_adjustment.WC14DynamicAdjustment.run": [[399, "compass-ocean-tests-global-ocean-mesh-wc14-dynamic-adjustment-wc14dynamicadjustment-run"]], "compass.ocean.tests.global_ocean.metadata.add_mesh_and_init_metadata": [[400, "compass-ocean-tests-global-ocean-metadata-add-mesh-and-init-metadata"]], "compass.ocean.tests.global_ocean.metadata.get_e3sm_mesh_names": [[401, "compass-ocean-tests-global-ocean-metadata-get-e3sm-mesh-names"]], "compass.ocean.tests.global_ocean.performance_test.PerformanceTest": [[402, "compass-ocean-tests-global-ocean-performance-test-performancetest"]], "compass.ocean.tests.global_ocean.performance_test.PerformanceTest.configure": [[403, "compass-ocean-tests-global-ocean-performance-test-performancetest-configure"]], "compass.ocean.tests.global_ocean.performance_test.PerformanceTest.run": [[404, "compass-ocean-tests-global-ocean-performance-test-performancetest-run"]], "compass.ocean.tests.global_ocean.restart_test.RestartTest": [[405, "compass-ocean-tests-global-ocean-restart-test-restarttest"]], "compass.ocean.tests.global_ocean.restart_test.RestartTest.configure": [[406, "compass-ocean-tests-global-ocean-restart-test-restarttest-configure"]], "compass.ocean.tests.global_ocean.restart_test.RestartTest.run": [[407, "compass-ocean-tests-global-ocean-restart-test-restarttest-run"]], "compass.ocean.tests.global_ocean.threads_test.ThreadsTest": [[408, "compass-ocean-tests-global-ocean-threads-test-threadstest"]], "compass.ocean.tests.global_ocean.threads_test.ThreadsTest.configure": [[409, "compass-ocean-tests-global-ocean-threads-test-threadstest-configure"]], "compass.ocean.tests.global_ocean.threads_test.ThreadsTest.run": [[410, "compass-ocean-tests-global-ocean-threads-test-threadstest-run"]], "compass.ocean.tests.gotm.Gotm": [[411, "compass-ocean-tests-gotm-gotm"]], "compass.ocean.tests.gotm.default.Default": [[412, "compass-ocean-tests-gotm-default-default"]], "compass.ocean.tests.gotm.default.Default.validate": [[413, "compass-ocean-tests-gotm-default-default-validate"]], "compass.ocean.tests.gotm.default.analysis.Analysis": [[414, "compass-ocean-tests-gotm-default-analysis-analysis"]], "compass.ocean.tests.gotm.default.analysis.Analysis.run": [[415, "compass-ocean-tests-gotm-default-analysis-analysis-run"]], "compass.ocean.tests.gotm.default.forward.Forward": [[416, "compass-ocean-tests-gotm-default-forward-forward"]], "compass.ocean.tests.gotm.default.forward.Forward.run": [[417, "compass-ocean-tests-gotm-default-forward-forward-run"]], "compass.ocean.tests.gotm.default.init.Init": [[418, "compass-ocean-tests-gotm-default-init-init"]], "compass.ocean.tests.gotm.default.init.Init.run": [[419, "compass-ocean-tests-gotm-default-init-init-run"]], "compass.ocean.tests.hurricane.Hurricane": [[420, "compass-ocean-tests-hurricane-hurricane"]], "compass.ocean.tests.hurricane.analysis.Analysis": [[421, "compass-ocean-tests-hurricane-analysis-analysis"]], "compass.ocean.tests.hurricane.analysis.Analysis.read_pointstats": [[422, "compass-ocean-tests-hurricane-analysis-analysis-read-pointstats"]], "compass.ocean.tests.hurricane.analysis.Analysis.read_station_data": [[423, "compass-ocean-tests-hurricane-analysis-analysis-read-station-data"]], "compass.ocean.tests.hurricane.analysis.Analysis.read_station_file": [[424, "compass-ocean-tests-hurricane-analysis-analysis-read-station-file"]], "compass.ocean.tests.hurricane.analysis.Analysis.run": [[425, "compass-ocean-tests-hurricane-analysis-analysis-run"]], "compass.ocean.tests.hurricane.analysis.Analysis.setup": [[426, "compass-ocean-tests-hurricane-analysis-analysis-setup"]], "compass.ocean.tests.hurricane.configure": [[427, "module-compass.ocean.tests.hurricane.configure"]], "compass.ocean.tests.hurricane.forward.Forward": [[428, "compass-ocean-tests-hurricane-forward-forward"]], "compass.ocean.tests.hurricane.forward.Forward.configure": [[429, "compass-ocean-tests-hurricane-forward-forward-configure"]], "compass.ocean.tests.hurricane.forward.Forward.run": [[430, "compass-ocean-tests-hurricane-forward-forward-run"]], "compass.ocean.tests.hurricane.forward.forward.ForwardStep": [[431, "compass-ocean-tests-hurricane-forward-forward-forwardstep"]], "compass.ocean.tests.hurricane.forward.forward.ForwardStep.run": [[432, "compass-ocean-tests-hurricane-forward-forward-forwardstep-run"]], "compass.ocean.tests.hurricane.forward.forward.ForwardStep.setup": [[433, "compass-ocean-tests-hurricane-forward-forward-forwardstep-setup"]], "compass.ocean.tests.hurricane.init.Init": [[434, "compass-ocean-tests-hurricane-init-init"]], "compass.ocean.tests.hurricane.init.Init.configure": [[435, "compass-ocean-tests-hurricane-init-init-configure"]], "compass.ocean.tests.hurricane.init.Init.run": [[436, "compass-ocean-tests-hurricane-init-init-run"]], "compass.ocean.tests.hurricane.init.create_pointstats_file.CreatePointstatsFile": [[437, "compass-ocean-tests-hurricane-init-create-pointstats-file-createpointstatsfile"]], "compass.ocean.tests.hurricane.init.create_pointstats_file.CreatePointstatsFile.create_pointstats_file": [[438, "compass-ocean-tests-hurricane-init-create-pointstats-file-createpointstatsfile-create-pointstats-file"]], "compass.ocean.tests.hurricane.init.create_pointstats_file.CreatePointstatsFile.run": [[439, "compass-ocean-tests-hurricane-init-create-pointstats-file-createpointstatsfile-run"]], "compass.ocean.tests.hurricane.init.initial_state.InitialState": [[440, "compass-ocean-tests-hurricane-init-initial-state-initialstate"]], "compass.ocean.tests.hurricane.init.initial_state.InitialState.run": [[441, "compass-ocean-tests-hurricane-init-initial-state-initialstate-run"]], "compass.ocean.tests.hurricane.init.initial_state.InitialState.setup": [[442, "compass-ocean-tests-hurricane-init-initial-state-initialstate-setup"]], "compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing": [[443, "compass-ocean-tests-hurricane-init-interpolate-atm-forcing-interpolateatmforcing"]], "compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing.interpolate_data_to_grid": [[444, "compass-ocean-tests-hurricane-init-interpolate-atm-forcing-interpolateatmforcing-interpolate-data-to-grid"]], "compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing.plot_interp_data": [[445, "compass-ocean-tests-hurricane-init-interpolate-atm-forcing-interpolateatmforcing-plot-interp-data"]], "compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing.run": [[446, "compass-ocean-tests-hurricane-init-interpolate-atm-forcing-interpolateatmforcing-run"]], "compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing.write_to_file": [[447, "compass-ocean-tests-hurricane-init-interpolate-atm-forcing-interpolateatmforcing-write-to-file"]], "compass.ocean.tests.hurricane.mesh.Mesh": [[448, "compass-ocean-tests-hurricane-mesh-mesh"]], "compass.ocean.tests.hurricane.mesh.Mesh.configure": [[449, "compass-ocean-tests-hurricane-mesh-mesh-configure"]], "compass.ocean.tests.hurricane.mesh.Mesh.run": [[450, "compass-ocean-tests-hurricane-mesh-mesh-run"]], "compass.ocean.tests.hurricane.mesh.dequ120at30cr10rr2.DEQU120at30cr10rr2BaseMesh": [[451, "compass-ocean-tests-hurricane-mesh-dequ120at30cr10rr2-dequ120at30cr10rr2basemesh"]], "compass.ocean.tests.hurricane.mesh.dequ120at30cr10rr2.DEQU120at30cr10rr2BaseMesh.build_cell_width_lat_lon": [[452, "compass-ocean-tests-hurricane-mesh-dequ120at30cr10rr2-dequ120at30cr10rr2basemesh-build-cell-width-lat-lon"]], "compass.ocean.tests.ice_shelf_2d.IceShelf2d": [[453, "compass-ocean-tests-ice-shelf-2d-iceshelf2d"]], "compass.ocean.tests.ice_shelf_2d.configure": [[454, "compass-ocean-tests-ice-shelf-2d-configure"]], "compass.ocean.tests.ice_shelf_2d.default.Default": [[455, "compass-ocean-tests-ice-shelf-2d-default-default"]], "compass.ocean.tests.ice_shelf_2d.default.Default.configure": [[456, "compass-ocean-tests-ice-shelf-2d-default-default-configure"]], "compass.ocean.tests.ice_shelf_2d.default.Default.run": [[457, "compass-ocean-tests-ice-shelf-2d-default-default-run"]], "compass.ocean.tests.ice_shelf_2d.forward.Forward": [[458, "compass-ocean-tests-ice-shelf-2d-forward-forward"]], "compass.ocean.tests.ice_shelf_2d.forward.Forward.run": [[459, "compass-ocean-tests-ice-shelf-2d-forward-forward-run"]], "compass.ocean.tests.ice_shelf_2d.forward.Forward.setup": [[460, "compass-ocean-tests-ice-shelf-2d-forward-forward-setup"]], "compass.ocean.tests.ice_shelf_2d.initial_state.InitialState": [[461, "compass-ocean-tests-ice-shelf-2d-initial-state-initialstate"]], "compass.ocean.tests.ice_shelf_2d.initial_state.InitialState.run": [[462, "compass-ocean-tests-ice-shelf-2d-initial-state-initialstate-run"]], "compass.ocean.tests.ice_shelf_2d.restart_test.RestartTest": [[463, "compass-ocean-tests-ice-shelf-2d-restart-test-restarttest"]], "compass.ocean.tests.ice_shelf_2d.restart_test.RestartTest.configure": [[464, "compass-ocean-tests-ice-shelf-2d-restart-test-restarttest-configure"]], "compass.ocean.tests.ice_shelf_2d.restart_test.RestartTest.run": [[465, "compass-ocean-tests-ice-shelf-2d-restart-test-restarttest-run"]], "compass.ocean.tests.ice_shelf_2d.ssh_adjustment.SshAdjustment": [[466, "compass-ocean-tests-ice-shelf-2d-ssh-adjustment-sshadjustment"]], "compass.ocean.tests.ice_shelf_2d.ssh_adjustment.SshAdjustment.run": [[467, "compass-ocean-tests-ice-shelf-2d-ssh-adjustment-sshadjustment-run"]], "compass.ocean.tests.ice_shelf_2d.ssh_adjustment.SshAdjustment.setup": [[468, "compass-ocean-tests-ice-shelf-2d-ssh-adjustment-sshadjustment-setup"]], "compass.ocean.tests.ice_shelf_2d.viz.Viz": [[469, "compass-ocean-tests-ice-shelf-2d-viz-viz"]], "compass.ocean.tests.ice_shelf_2d.viz.Viz.run": [[470, "compass-ocean-tests-ice-shelf-2d-viz-viz-run"]], "compass.ocean.tests.internal_wave.InternalWave": [[471, "compass-ocean-tests-internal-wave-internalwave"]], "compass.ocean.tests.internal_wave.default.Default": [[472, "compass-ocean-tests-internal-wave-default-default"]], "compass.ocean.tests.internal_wave.default.Default.validate": [[473, "compass-ocean-tests-internal-wave-default-default-validate"]], "compass.ocean.tests.internal_wave.forward.Forward": [[474, "compass-ocean-tests-internal-wave-forward-forward"]], "compass.ocean.tests.internal_wave.forward.Forward.run": [[475, "compass-ocean-tests-internal-wave-forward-forward-run"]], "compass.ocean.tests.internal_wave.initial_state.InitialState": [[476, "compass-ocean-tests-internal-wave-initial-state-initialstate"]], "compass.ocean.tests.internal_wave.initial_state.InitialState.run": [[477, "compass-ocean-tests-internal-wave-initial-state-initialstate-run"]], "compass.ocean.tests.internal_wave.rpe_test.RpeTest": [[478, "compass-ocean-tests-internal-wave-rpe-test-rpetest"]], "compass.ocean.tests.internal_wave.rpe_test.analysis.Analysis": [[479, "compass-ocean-tests-internal-wave-rpe-test-analysis-analysis"]], "compass.ocean.tests.internal_wave.rpe_test.analysis.Analysis.run": [[480, "compass-ocean-tests-internal-wave-rpe-test-analysis-analysis-run"]], "compass.ocean.tests.internal_wave.ten_day_test.TenDayTest": [[481, "compass-ocean-tests-internal-wave-ten-day-test-tendaytest"]], "compass.ocean.tests.internal_wave.ten_day_test.TenDayTest.validate": [[482, "compass-ocean-tests-internal-wave-ten-day-test-tendaytest-validate"]], "compass.ocean.tests.internal_wave.viz.Viz": [[483, "compass-ocean-tests-internal-wave-viz-viz"]], "compass.ocean.tests.internal_wave.viz.Viz.run": [[484, "compass-ocean-tests-internal-wave-viz-viz-run"]], "compass.ocean.tests.isomip_plus.IsomipPlus": [[485, "compass-ocean-tests-isomip-plus-isomipplus"]], "compass.ocean.tests.isomip_plus.evap.update_evaporation_flux": [[486, "compass-ocean-tests-isomip-plus-evap-update-evaporation-flux"]], "compass.ocean.tests.isomip_plus.forward.Forward": [[487, "compass-ocean-tests-isomip-plus-forward-forward"]], "compass.ocean.tests.isomip_plus.forward.Forward.run": [[488, "compass-ocean-tests-isomip-plus-forward-forward-run"]], "compass.ocean.tests.isomip_plus.forward.Forward.setup": [[489, "compass-ocean-tests-isomip-plus-forward-forward-setup"]], "compass.ocean.tests.isomip_plus.geom.interpolate_ocean_mask": [[490, "compass-ocean-tests-isomip-plus-geom-interpolate-ocean-mask"]], "compass.ocean.tests.isomip_plus.geom.process_input_geometry": [[491, "compass-ocean-tests-isomip-plus-geom-process-input-geometry"]], "compass.ocean.tests.isomip_plus.initial_state.InitialState": [[492, "compass-ocean-tests-isomip-plus-initial-state-initialstate"]], "compass.ocean.tests.isomip_plus.initial_state.InitialState.run": [[493, "compass-ocean-tests-isomip-plus-initial-state-initialstate-run"]], "compass.ocean.tests.isomip_plus.isomip_plus_test.IsomipPlusTest": [[494, "compass-ocean-tests-isomip-plus-isomip-plus-test-isomipplustest"]], "compass.ocean.tests.isomip_plus.isomip_plus_test.IsomipPlusTest.configure": [[495, "compass-ocean-tests-isomip-plus-isomip-plus-test-isomipplustest-configure"]], "compass.ocean.tests.isomip_plus.isomip_plus_test.IsomipPlusTest.run": [[496, "compass-ocean-tests-isomip-plus-isomip-plus-test-isomipplustest-run"]], "compass.ocean.tests.isomip_plus.misomip.Misomip": [[497, "compass-ocean-tests-isomip-plus-misomip-misomip"]], "compass.ocean.tests.isomip_plus.misomip.Misomip.run": [[498, "compass-ocean-tests-isomip-plus-misomip-misomip-run"]], "compass.ocean.tests.isomip_plus.ssh_adjustment.SshAdjustment": [[499, "compass-ocean-tests-isomip-plus-ssh-adjustment-sshadjustment"]], "compass.ocean.tests.isomip_plus.ssh_adjustment.SshAdjustment.run": [[500, "compass-ocean-tests-isomip-plus-ssh-adjustment-sshadjustment-run"]], "compass.ocean.tests.isomip_plus.ssh_adjustment.SshAdjustment.setup": [[501, "compass-ocean-tests-isomip-plus-ssh-adjustment-sshadjustment-setup"]], "compass.ocean.tests.isomip_plus.streamfunction.Streamfunction": [[502, "compass-ocean-tests-isomip-plus-streamfunction-streamfunction"]], "compass.ocean.tests.isomip_plus.streamfunction.Streamfunction.run": [[503, "compass-ocean-tests-isomip-plus-streamfunction-streamfunction-run"]], "compass.ocean.tests.isomip_plus.viz.Viz": [[504, "compass-ocean-tests-isomip-plus-viz-viz"]], "compass.ocean.tests.isomip_plus.viz.Viz.run": [[505, "compass-ocean-tests-isomip-plus-viz-viz-run"]], "compass.ocean.tests.isomip_plus.viz.file_complete": [[506, "compass-ocean-tests-isomip-plus-viz-file-complete"]], "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter": [[507, "compass-ocean-tests-isomip-plus-viz-plot-movieplotter"]], "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.images_to_movies": [[508, "compass-ocean-tests-isomip-plus-viz-plot-movieplotter-images-to-movies"]], "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_3d_field_top_bot_section": [[509, "compass-ocean-tests-isomip-plus-viz-plot-movieplotter-plot-3d-field-top-bot-section"]], "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_barotropic_streamfunction": [[510, "compass-ocean-tests-isomip-plus-viz-plot-movieplotter-plot-barotropic-streamfunction"]], "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_horiz_series": [[511, "compass-ocean-tests-isomip-plus-viz-plot-movieplotter-plot-horiz-series"]], "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_ice_shelf_boundary_variables": [[512, "compass-ocean-tests-isomip-plus-viz-plot-movieplotter-plot-ice-shelf-boundary-variables"]], "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_layer_interfaces": [[513, "compass-ocean-tests-isomip-plus-viz-plot-movieplotter-plot-layer-interfaces"]], "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_melt_rates": [[514, "compass-ocean-tests-isomip-plus-viz-plot-movieplotter-plot-melt-rates"]], "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_overturning_streamfunction": [[515, "compass-ocean-tests-isomip-plus-viz-plot-movieplotter-plot-overturning-streamfunction"]], "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_potential_density": [[516, "compass-ocean-tests-isomip-plus-viz-plot-movieplotter-plot-potential-density"]], "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_salinity": [[517, "compass-ocean-tests-isomip-plus-viz-plot-movieplotter-plot-salinity"]], "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_temperature": [[518, "compass-ocean-tests-isomip-plus-viz-plot-movieplotter-plot-temperature"]], "compass.ocean.tests.isomip_plus.viz.plot.TimeSeriesPlotter": [[519, "compass-ocean-tests-isomip-plus-viz-plot-timeseriesplotter"]], "compass.ocean.tests.isomip_plus.viz.plot.TimeSeriesPlotter.plot_melt_time_series": [[520, "compass-ocean-tests-isomip-plus-viz-plot-timeseriesplotter-plot-melt-time-series"]], "compass.ocean.tests.isomip_plus.viz.plot.TimeSeriesPlotter.plot_time_series": [[521, "compass-ocean-tests-isomip-plus-viz-plot-timeseriesplotter-plot-time-series"]], "compass.ocean.tests.merry_go_round.MerryGoRound": [[522, "compass-ocean-tests-merry-go-round-merrygoround"]], "compass.ocean.tests.merry_go_round.convergence_test.analysis.Analysis": [[523, "compass-ocean-tests-merry-go-round-convergence-test-analysis-analysis"]], "compass.ocean.tests.merry_go_round.convergence_test.analysis.Analysis.run": [[524, "compass-ocean-tests-merry-go-round-convergence-test-analysis-analysis-run"]], "compass.ocean.tests.merry_go_round.default.Default": [[525, "compass-ocean-tests-merry-go-round-default-default"]], "compass.ocean.tests.merry_go_round.default.Default.validate": [[526, "compass-ocean-tests-merry-go-round-default-default-validate"]], "compass.ocean.tests.merry_go_round.forward.Forward": [[527, "compass-ocean-tests-merry-go-round-forward-forward"]], "compass.ocean.tests.merry_go_round.forward.Forward.run": [[528, "compass-ocean-tests-merry-go-round-forward-forward-run"]], "compass.ocean.tests.merry_go_round.initial_state.InitialState": [[529, "compass-ocean-tests-merry-go-round-initial-state-initialstate"]], "compass.ocean.tests.merry_go_round.initial_state.InitialState.run": [[530, "compass-ocean-tests-merry-go-round-initial-state-initialstate-run"]], "compass.ocean.tests.merry_go_round.viz.Viz": [[531, "compass-ocean-tests-merry-go-round-viz-viz"]], "compass.ocean.tests.merry_go_round.viz.Viz.run": [[532, "compass-ocean-tests-merry-go-round-viz-viz-run"]], "compass.ocean.tests.planar_convergence.PlanarConvergence": [[533, "compass-ocean-tests-planar-convergence-planarconvergence"]], "compass.ocean.tests.planar_convergence.conv_init.ConvInit": [[534, "compass-ocean-tests-planar-convergence-conv-init-convinit"]], "compass.ocean.tests.planar_convergence.conv_init.ConvInit.run": [[535, "compass-ocean-tests-planar-convergence-conv-init-convinit-run"]], "compass.ocean.tests.planar_convergence.conv_test_case.ConvTestCase": [[536, "compass-ocean-tests-planar-convergence-conv-test-case-convtestcase"]], "compass.ocean.tests.planar_convergence.conv_test_case.ConvTestCase.configure": [[537, "compass-ocean-tests-planar-convergence-conv-test-case-convtestcase-configure"]], "compass.ocean.tests.planar_convergence.conv_test_case.ConvTestCase.run": [[538, "compass-ocean-tests-planar-convergence-conv-test-case-convtestcase-run"]], "compass.ocean.tests.planar_convergence.conv_test_case.ConvTestCase.update_cores": [[539, "compass-ocean-tests-planar-convergence-conv-test-case-convtestcase-update-cores"]], "compass.ocean.tests.planar_convergence.forward.Forward": [[540, "compass-ocean-tests-planar-convergence-forward-forward"]], "compass.ocean.tests.planar_convergence.forward.Forward.get_dt_duration": [[541, "compass-ocean-tests-planar-convergence-forward-forward-get-dt-duration"]], "compass.ocean.tests.planar_convergence.forward.Forward.run": [[542, "compass-ocean-tests-planar-convergence-forward-forward-run"]], "compass.ocean.tests.planar_convergence.forward.Forward.setup": [[543, "compass-ocean-tests-planar-convergence-forward-forward-setup"]], "compass.ocean.tests.planar_convergence.horizontal_advection.HorizontalAdvection": [[544, "compass-ocean-tests-planar-convergence-horizontal-advection-horizontaladvection"]], "compass.ocean.tests.planar_convergence.horizontal_advection.HorizontalAdvection.configure": [[545, "compass-ocean-tests-planar-convergence-horizontal-advection-horizontaladvection-configure"]], "compass.ocean.tests.planar_convergence.horizontal_advection.HorizontalAdvection.run": [[546, "compass-ocean-tests-planar-convergence-horizontal-advection-horizontaladvection-run"]], "compass.ocean.tests.planar_convergence.horizontal_advection.analysis.Analysis": [[547, "compass-ocean-tests-planar-convergence-horizontal-advection-analysis-analysis"]], "compass.ocean.tests.planar_convergence.horizontal_advection.analysis.Analysis.rmse": [[548, "compass-ocean-tests-planar-convergence-horizontal-advection-analysis-analysis-rmse"]], "compass.ocean.tests.planar_convergence.horizontal_advection.analysis.Analysis.run": [[549, "compass-ocean-tests-planar-convergence-horizontal-advection-analysis-analysis-run"]], "compass.ocean.tests.planar_convergence.horizontal_advection.init.Init": [[550, "compass-ocean-tests-planar-convergence-horizontal-advection-init-init"]], "compass.ocean.tests.planar_convergence.horizontal_advection.init.Init.run": [[551, "compass-ocean-tests-planar-convergence-horizontal-advection-init-init-run"]], "compass.ocean.tests.soma.Soma": [[552, "compass-ocean-tests-soma-soma"]], "compass.ocean.tests.soma.analysis.Analysis": [[553, "compass-ocean-tests-soma-analysis-analysis"]], "compass.ocean.tests.soma.analysis.Analysis.run": [[554, "compass-ocean-tests-soma-analysis-analysis-run"]], "compass.ocean.tests.soma.forward.Forward": [[555, "compass-ocean-tests-soma-forward-forward"]], "compass.ocean.tests.soma.forward.Forward.run": [[556, "compass-ocean-tests-soma-forward-forward-run"]], "compass.ocean.tests.soma.initial_state.InitialState": [[557, "compass-ocean-tests-soma-initial-state-initialstate"]], "compass.ocean.tests.soma.initial_state.InitialState.run": [[558, "compass-ocean-tests-soma-initial-state-initialstate-run"]], "compass.ocean.tests.soma.soma_test_case.SomaTestCase": [[559, "compass-ocean-tests-soma-soma-test-case-somatestcase"]], "compass.ocean.tests.soma.soma_test_case.SomaTestCase.validate": [[560, "compass-ocean-tests-soma-soma-test-case-somatestcase-validate"]], "compass.ocean.tests.sphere_transport.SphereTransport": [[561, "compass-ocean-tests-sphere-transport-spheretransport"]], "compass.ocean.tests.sphere_transport.correlated_tracers_2d.CorrelatedTracers2D": [[562, "compass-ocean-tests-sphere-transport-correlated-tracers-2d-correlatedtracers2d"]], "compass.ocean.tests.sphere_transport.correlated_tracers_2d.CorrelatedTracers2D.configure": [[563, "compass-ocean-tests-sphere-transport-correlated-tracers-2d-correlatedtracers2d-configure"]], "compass.ocean.tests.sphere_transport.correlated_tracers_2d.CorrelatedTracers2D.run": [[564, "compass-ocean-tests-sphere-transport-correlated-tracers-2d-correlatedtracers2d-run"]], "compass.ocean.tests.sphere_transport.correlated_tracers_2d.analysis.Analysis": [[565, "compass-ocean-tests-sphere-transport-correlated-tracers-2d-analysis-analysis"]], "compass.ocean.tests.sphere_transport.correlated_tracers_2d.analysis.Analysis.run": [[566, "compass-ocean-tests-sphere-transport-correlated-tracers-2d-analysis-analysis-run"]], "compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.Forward": [[567, "compass-ocean-tests-sphere-transport-correlated-tracers-2d-forward-forward"]], "compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.Forward.get_timestep_str": [[568, "compass-ocean-tests-sphere-transport-correlated-tracers-2d-forward-forward-get-timestep-str"]], "compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.Forward.run": [[569, "compass-ocean-tests-sphere-transport-correlated-tracers-2d-forward-forward-run"]], "compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.Forward.setup": [[570, "compass-ocean-tests-sphere-transport-correlated-tracers-2d-forward-forward-setup"]], "compass.ocean.tests.sphere_transport.correlated_tracers_2d.init.Init": [[571, "compass-ocean-tests-sphere-transport-correlated-tracers-2d-init-init"]], "compass.ocean.tests.sphere_transport.correlated_tracers_2d.init.Init.run": [[572, "compass-ocean-tests-sphere-transport-correlated-tracers-2d-init-init-run"]], "compass.ocean.tests.sphere_transport.correlated_tracers_2d.mesh.Mesh": [[573, "compass-ocean-tests-sphere-transport-correlated-tracers-2d-mesh-mesh"]], "compass.ocean.tests.sphere_transport.correlated_tracers_2d.mesh.Mesh.build_cell_width_lat_lon": [[574, "compass-ocean-tests-sphere-transport-correlated-tracers-2d-mesh-mesh-build-cell-width-lat-lon"]], "compass.ocean.tests.sphere_transport.correlated_tracers_2d.mesh.Mesh.run": [[575, "compass-ocean-tests-sphere-transport-correlated-tracers-2d-mesh-mesh-run"]], "compass.ocean.tests.sphere_transport.divergent_2d.Divergent2D": [[576, "compass-ocean-tests-sphere-transport-divergent-2d-divergent2d"]], "compass.ocean.tests.sphere_transport.divergent_2d.Divergent2D.configure": [[577, "compass-ocean-tests-sphere-transport-divergent-2d-divergent2d-configure"]], "compass.ocean.tests.sphere_transport.divergent_2d.Divergent2D.run": [[578, "compass-ocean-tests-sphere-transport-divergent-2d-divergent2d-run"]], "compass.ocean.tests.sphere_transport.divergent_2d.analysis.Analysis": [[579, "compass-ocean-tests-sphere-transport-divergent-2d-analysis-analysis"]], "compass.ocean.tests.sphere_transport.divergent_2d.analysis.Analysis.run": [[580, "compass-ocean-tests-sphere-transport-divergent-2d-analysis-analysis-run"]], "compass.ocean.tests.sphere_transport.divergent_2d.forward.Forward": [[581, "compass-ocean-tests-sphere-transport-divergent-2d-forward-forward"]], "compass.ocean.tests.sphere_transport.divergent_2d.forward.Forward.get_timestep_str": [[582, "compass-ocean-tests-sphere-transport-divergent-2d-forward-forward-get-timestep-str"]], "compass.ocean.tests.sphere_transport.divergent_2d.forward.Forward.run": [[583, "compass-ocean-tests-sphere-transport-divergent-2d-forward-forward-run"]], "compass.ocean.tests.sphere_transport.divergent_2d.forward.Forward.setup": [[584, "compass-ocean-tests-sphere-transport-divergent-2d-forward-forward-setup"]], "compass.ocean.tests.sphere_transport.divergent_2d.init.Init": [[585, "compass-ocean-tests-sphere-transport-divergent-2d-init-init"]], "compass.ocean.tests.sphere_transport.divergent_2d.init.Init.run": [[586, "compass-ocean-tests-sphere-transport-divergent-2d-init-init-run"]], "compass.ocean.tests.sphere_transport.divergent_2d.mesh.Mesh": [[587, "compass-ocean-tests-sphere-transport-divergent-2d-mesh-mesh"]], "compass.ocean.tests.sphere_transport.divergent_2d.mesh.Mesh.build_cell_width_lat_lon": [[588, "compass-ocean-tests-sphere-transport-divergent-2d-mesh-mesh-build-cell-width-lat-lon"]], "compass.ocean.tests.sphere_transport.divergent_2d.mesh.Mesh.run": [[589, "compass-ocean-tests-sphere-transport-divergent-2d-mesh-mesh-run"]], "compass.ocean.tests.sphere_transport.nondivergent_2d.Nondivergent2D": [[590, "compass-ocean-tests-sphere-transport-nondivergent-2d-nondivergent2d"]], "compass.ocean.tests.sphere_transport.nondivergent_2d.Nondivergent2D.configure": [[591, "compass-ocean-tests-sphere-transport-nondivergent-2d-nondivergent2d-configure"]], "compass.ocean.tests.sphere_transport.nondivergent_2d.Nondivergent2D.run": [[592, "compass-ocean-tests-sphere-transport-nondivergent-2d-nondivergent2d-run"]], "compass.ocean.tests.sphere_transport.nondivergent_2d.analysis.Analysis": [[593, "compass-ocean-tests-sphere-transport-nondivergent-2d-analysis-analysis"]], "compass.ocean.tests.sphere_transport.nondivergent_2d.analysis.Analysis.run": [[594, "compass-ocean-tests-sphere-transport-nondivergent-2d-analysis-analysis-run"]], "compass.ocean.tests.sphere_transport.nondivergent_2d.forward.Forward": [[595, "compass-ocean-tests-sphere-transport-nondivergent-2d-forward-forward"]], "compass.ocean.tests.sphere_transport.nondivergent_2d.forward.Forward.get_timestep_str": [[596, "compass-ocean-tests-sphere-transport-nondivergent-2d-forward-forward-get-timestep-str"]], "compass.ocean.tests.sphere_transport.nondivergent_2d.forward.Forward.run": [[597, "compass-ocean-tests-sphere-transport-nondivergent-2d-forward-forward-run"]], "compass.ocean.tests.sphere_transport.nondivergent_2d.forward.Forward.setup": [[598, "compass-ocean-tests-sphere-transport-nondivergent-2d-forward-forward-setup"]], "compass.ocean.tests.sphere_transport.nondivergent_2d.init.Init": [[599, "compass-ocean-tests-sphere-transport-nondivergent-2d-init-init"]], "compass.ocean.tests.sphere_transport.nondivergent_2d.init.Init.run": [[600, "compass-ocean-tests-sphere-transport-nondivergent-2d-init-init-run"]], "compass.ocean.tests.sphere_transport.nondivergent_2d.mesh.Mesh": [[601, "compass-ocean-tests-sphere-transport-nondivergent-2d-mesh-mesh"]], "compass.ocean.tests.sphere_transport.nondivergent_2d.mesh.Mesh.build_cell_width_lat_lon": [[602, "compass-ocean-tests-sphere-transport-nondivergent-2d-mesh-mesh-build-cell-width-lat-lon"]], "compass.ocean.tests.sphere_transport.nondivergent_2d.mesh.Mesh.run": [[603, "compass-ocean-tests-sphere-transport-nondivergent-2d-mesh-mesh-run"]], "compass.ocean.tests.sphere_transport.process_output.compute_convergence_rates": [[604, "compass-ocean-tests-sphere-transport-process-output-compute-convergence-rates"]], "compass.ocean.tests.sphere_transport.process_output.compute_error_from_output_ncfile": [[605, "compass-ocean-tests-sphere-transport-process-output-compute-error-from-output-ncfile"]], "compass.ocean.tests.sphere_transport.process_output.make_convergence_arrays": [[606, "compass-ocean-tests-sphere-transport-process-output-make-convergence-arrays"]], "compass.ocean.tests.sphere_transport.process_output.plot_convergence": [[607, "compass-ocean-tests-sphere-transport-process-output-plot-convergence"]], "compass.ocean.tests.sphere_transport.process_output.plot_filament": [[608, "compass-ocean-tests-sphere-transport-process-output-plot-filament"]], "compass.ocean.tests.sphere_transport.process_output.plot_over_and_undershoot_errors": [[609, "compass-ocean-tests-sphere-transport-process-output-plot-over-and-undershoot-errors"]], "compass.ocean.tests.sphere_transport.process_output.plot_sol": [[610, "compass-ocean-tests-sphere-transport-process-output-plot-sol"]], "compass.ocean.tests.sphere_transport.process_output.print_data_as_csv": [[611, "compass-ocean-tests-sphere-transport-process-output-print-data-as-csv"]], "compass.ocean.tests.sphere_transport.process_output.print_error_conv_table": [[612, "compass-ocean-tests-sphere-transport-process-output-print-error-conv-table"]], "compass.ocean.tests.sphere_transport.process_output.read_ncl_rgb_file": [[613, "compass-ocean-tests-sphere-transport-process-output-read-ncl-rgb-file"]], "compass.ocean.tests.sphere_transport.rotation_2d.Rotation2D": [[614, "compass-ocean-tests-sphere-transport-rotation-2d-rotation2d"]], "compass.ocean.tests.sphere_transport.rotation_2d.Rotation2D.configure": [[615, "compass-ocean-tests-sphere-transport-rotation-2d-rotation2d-configure"]], "compass.ocean.tests.sphere_transport.rotation_2d.Rotation2D.run": [[616, "compass-ocean-tests-sphere-transport-rotation-2d-rotation2d-run"]], "compass.ocean.tests.sphere_transport.rotation_2d.analysis.Analysis": [[617, "compass-ocean-tests-sphere-transport-rotation-2d-analysis-analysis"]], "compass.ocean.tests.sphere_transport.rotation_2d.analysis.Analysis.run": [[618, "compass-ocean-tests-sphere-transport-rotation-2d-analysis-analysis-run"]], "compass.ocean.tests.sphere_transport.rotation_2d.forward.Forward": [[619, "compass-ocean-tests-sphere-transport-rotation-2d-forward-forward"]], "compass.ocean.tests.sphere_transport.rotation_2d.forward.Forward.get_timestep_str": [[620, "compass-ocean-tests-sphere-transport-rotation-2d-forward-forward-get-timestep-str"]], "compass.ocean.tests.sphere_transport.rotation_2d.forward.Forward.run": [[621, "compass-ocean-tests-sphere-transport-rotation-2d-forward-forward-run"]], "compass.ocean.tests.sphere_transport.rotation_2d.forward.Forward.setup": [[622, "compass-ocean-tests-sphere-transport-rotation-2d-forward-forward-setup"]], "compass.ocean.tests.sphere_transport.rotation_2d.init.Init": [[623, "compass-ocean-tests-sphere-transport-rotation-2d-init-init"]], "compass.ocean.tests.sphere_transport.rotation_2d.init.Init.run": [[624, "compass-ocean-tests-sphere-transport-rotation-2d-init-init-run"]], "compass.ocean.tests.sphere_transport.rotation_2d.mesh.Mesh": [[625, "compass-ocean-tests-sphere-transport-rotation-2d-mesh-mesh"]], "compass.ocean.tests.sphere_transport.rotation_2d.mesh.Mesh.build_cell_width_lat_lon": [[626, "compass-ocean-tests-sphere-transport-rotation-2d-mesh-mesh-build-cell-width-lat-lon"]], "compass.ocean.tests.sphere_transport.rotation_2d.mesh.Mesh.run": [[627, "compass-ocean-tests-sphere-transport-rotation-2d-mesh-mesh-run"]], "compass.ocean.tests.tides.Tides": [[628, "compass-ocean-tests-tides-tides"]], "compass.ocean.tests.tides.analysis.Analysis": [[629, "compass-ocean-tests-tides-analysis-analysis"]], "compass.ocean.tests.tides.analysis.Analysis.append_tpxo_data": [[630, "compass-ocean-tests-tides-analysis-analysis-append-tpxo-data"]], "compass.ocean.tests.tides.analysis.Analysis.check_tpxo_data": [[631, "compass-ocean-tests-tides-analysis-analysis-check-tpxo-data"]], "compass.ocean.tests.tides.analysis.Analysis.plot": [[632, "compass-ocean-tests-tides-analysis-analysis-plot"]], "compass.ocean.tests.tides.analysis.Analysis.read_otps2_output": [[633, "compass-ocean-tests-tides-analysis-analysis-read-otps2-output"]], "compass.ocean.tests.tides.analysis.Analysis.run": [[634, "compass-ocean-tests-tides-analysis-analysis-run"]], "compass.ocean.tests.tides.analysis.Analysis.run_otps2": [[635, "compass-ocean-tests-tides-analysis-analysis-run-otps2"]], "compass.ocean.tests.tides.analysis.Analysis.setup": [[636, "compass-ocean-tests-tides-analysis-analysis-setup"]], "compass.ocean.tests.tides.analysis.Analysis.setup_otps2": [[637, "compass-ocean-tests-tides-analysis-analysis-setup-otps2"]], "compass.ocean.tests.tides.analysis.Analysis.write_coordinate_file": [[638, "compass-ocean-tests-tides-analysis-analysis-write-coordinate-file"]], "compass.ocean.tests.tides.configure": [[639, "module-compass.ocean.tests.tides.configure"]], "compass.ocean.tests.tides.forward.Forward": [[640, "compass-ocean-tests-tides-forward-forward"]], "compass.ocean.tests.tides.forward.Forward.configure": [[641, "compass-ocean-tests-tides-forward-forward-configure"]], "compass.ocean.tests.tides.forward.Forward.run": [[642, "compass-ocean-tests-tides-forward-forward-run"]], "compass.ocean.tests.tides.forward.forward.ForwardStep": [[643, "compass-ocean-tests-tides-forward-forward-forwardstep"]], "compass.ocean.tests.tides.forward.forward.ForwardStep.run": [[644, "compass-ocean-tests-tides-forward-forward-forwardstep-run"]], "compass.ocean.tests.tides.forward.forward.ForwardStep.setup": [[645, "compass-ocean-tests-tides-forward-forward-forwardstep-setup"]], "compass.ocean.tests.tides.init.Init": [[646, "compass-ocean-tests-tides-init-init"]], "compass.ocean.tests.tides.init.Init.configure": [[647, "compass-ocean-tests-tides-init-init-configure"]], "compass.ocean.tests.tides.init.Init.run": [[648, "compass-ocean-tests-tides-init-init-run"]], "compass.ocean.tests.tides.init.initial_state.InitialState": [[649, "compass-ocean-tests-tides-init-initial-state-initialstate"]], "compass.ocean.tests.tides.init.initial_state.InitialState.run": [[650, "compass-ocean-tests-tides-init-initial-state-initialstate-run"]], "compass.ocean.tests.tides.init.initial_state.InitialState.setup": [[651, "compass-ocean-tests-tides-init-initial-state-initialstate-setup"]], "compass.ocean.tests.tides.init.interpolate_wave_drag.InterpolateWaveDrag": [[652, "compass-ocean-tests-tides-init-interpolate-wave-drag-interpolatewavedrag"]], "compass.ocean.tests.tides.init.interpolate_wave_drag.InterpolateWaveDrag.interpolate_data_to_grid": [[653, "compass-ocean-tests-tides-init-interpolate-wave-drag-interpolatewavedrag-interpolate-data-to-grid"]], "compass.ocean.tests.tides.init.interpolate_wave_drag.InterpolateWaveDrag.plot_interp_data": [[654, "compass-ocean-tests-tides-init-interpolate-wave-drag-interpolatewavedrag-plot-interp-data"]], "compass.ocean.tests.tides.init.interpolate_wave_drag.InterpolateWaveDrag.run": [[655, "compass-ocean-tests-tides-init-interpolate-wave-drag-interpolatewavedrag-run"]], "compass.ocean.tests.tides.init.interpolate_wave_drag.InterpolateWaveDrag.write_to_file": [[656, "compass-ocean-tests-tides-init-interpolate-wave-drag-interpolatewavedrag-write-to-file"]], "compass.ocean.tests.tides.init.remap_bathymetry.RemapBathymetry": [[657, "compass-ocean-tests-tides-init-remap-bathymetry-remapbathymetry"]], "compass.ocean.tests.tides.init.remap_bathymetry.RemapBathymetry.run": [[658, "compass-ocean-tests-tides-init-remap-bathymetry-remapbathymetry-run"]], "compass.ocean.tests.tides.mesh.Mesh": [[659, "compass-ocean-tests-tides-mesh-mesh"]], "compass.ocean.tests.tides.mesh.Mesh.configure": [[660, "compass-ocean-tests-tides-mesh-mesh-configure"]], "compass.ocean.tests.tides.mesh.Mesh.run": [[661, "compass-ocean-tests-tides-mesh-mesh-run"]], "compass.ocean.tests.ziso.Ziso": [[662, "compass-ocean-tests-ziso-ziso"]], "compass.ocean.tests.ziso.ZisoTestCase": [[663, "compass-ocean-tests-ziso-zisotestcase"]], "compass.ocean.tests.ziso.ZisoTestCase.configure": [[664, "compass-ocean-tests-ziso-zisotestcase-configure"]], "compass.ocean.tests.ziso.ZisoTestCase.run": [[665, "compass-ocean-tests-ziso-zisotestcase-run"]], "compass.ocean.tests.ziso.configure": [[666, "compass-ocean-tests-ziso-configure"]], "compass.ocean.tests.ziso.forward.Forward": [[667, "compass-ocean-tests-ziso-forward-forward"]], "compass.ocean.tests.ziso.forward.Forward.run": [[668, "compass-ocean-tests-ziso-forward-forward-run"]], "compass.ocean.tests.ziso.forward.Forward.setup": [[669, "compass-ocean-tests-ziso-forward-forward-setup"]], "compass.ocean.tests.ziso.initial_state.InitialState": [[670, "compass-ocean-tests-ziso-initial-state-initialstate"]], "compass.ocean.tests.ziso.initial_state.InitialState.run": [[671, "compass-ocean-tests-ziso-initial-state-initialstate-run"]], "compass.ocean.tests.ziso.with_frazil.WithFrazil": [[672, "compass-ocean-tests-ziso-with-frazil-withfrazil"]], "compass.ocean.tests.ziso.with_frazil.WithFrazil.configure": [[673, "compass-ocean-tests-ziso-with-frazil-withfrazil-configure"]], "compass.ocean.tests.ziso.with_frazil.WithFrazil.run": [[674, "compass-ocean-tests-ziso-with-frazil-withfrazil-run"]], "compass.ocean.vertical.grid_1d.generate_1d_grid": [[675, "compass-ocean-vertical-grid-1d-generate-1d-grid"]], "compass.ocean.vertical.grid_1d.write_1d_grid": [[676, "compass-ocean-vertical-grid-1d-write-1d-grid"]], "compass.ocean.vertical.init_vertical_coord": [[677, "compass-ocean-vertical-init-vertical-coord"]], "compass.ocean.vertical.partial_cells.alter_bottom_depth": [[678, "compass-ocean-vertical-partial-cells-alter-bottom-depth"]], "compass.ocean.vertical.partial_cells.alter_ssh": [[679, "compass-ocean-vertical-partial-cells-alter-ssh"]], "compass.ocean.vertical.zlevel.compute_min_max_level_cell": [[680, "compass-ocean-vertical-zlevel-compute-min-max-level-cell"]], "compass.ocean.vertical.zlevel.compute_z_level_layer_thickness": [[681, "compass-ocean-vertical-zlevel-compute-z-level-layer-thickness"]], "compass.ocean.vertical.zlevel.compute_z_level_resting_thickness": [[682, "compass-ocean-vertical-zlevel-compute-z-level-resting-thickness"]], "compass.ocean.vertical.zlevel.init_z_level_vertical_coord": [[683, "compass-ocean-vertical-zlevel-init-z-level-vertical-coord"]], "compass.ocean.vertical.zstar.init_z_star_vertical_coord": [[684, "compass-ocean-vertical-zstar-init-z-star-vertical-coord"]], "Ocean core": [[685, "ocean-core"], [740, "ocean-core"]], "initial_state": [[686, "initial-state"], [687, "initial-state"], [688, "initial-state"], [692, "initial-state"], [693, "initial-state"], [695, "initial-state"], [696, "initial-state"], [697, "initial-state"], [699, "initial-state"], [702, "initial-state"], [703, "initial-state"]], "forward": [[686, "forward"], [687, "forward"], [688, "forward"], [689, "forward"], [691, "forward"], [692, "forward"], [693, "forward"], [695, "forward"], [696, "forward"], [697, "forward"], [698, "forward"], [699, "forward"], [700, "forward"], [700, "id3"], [700, "id7"], [700, "id11"], [702, "forward"], [703, "forward"]], "decomp_test": [[686, "decomp-test"], [742, "decomp-test"]], "threads_test": [[686, "threads-test"]], "rpe_test": [[686, "rpe-test"], [695, "rpe-test"], [742, "rpe-test"], [751, "rpe-test"]], "viz": [[687, "viz"], [688, "viz"], [693, "viz"], [696, "viz"]], "mesh types": [[689, "mesh-types"]], "init": [[689, "init"], [691, "init"], [698, "init"], [700, "init"], [700, "id2"], [700, "id6"], [700, "id10"], [701, "init"]], "analysis": [[689, "analysis"], [691, "analysis"], [692, "analysis"], [698, "analysis"], [699, "analysis"], [700, "analysis"], [700, "id4"], [700, "id8"], [700, "id12"], [701, "analysis"], [702, "analysis"]], "configure": [[690, "configure"]], "metadata": [[690, "metadata"]], "forward test case": [[690, "forward-test-case"], [758, "forward-test-case"]], "forward step": [[690, "forward-step"], [748, "forward-step"], [758, "forward-step"]], "Test cases": [[690, "test-cases"], [704, "test-cases"], [746, "test-cases"]], "mesh test case": [[690, "mesh-test-case"], [746, "mesh-test-case"], [748, "mesh-test-case"], [758, "mesh-test-case"]], "meshes": [[690, "meshes"]], "QU240 and QUwISC240": [[690, "qu240-and-quwisc240"], [690, "id1"]], "Icos240 and IcoswISC240": [[690, "icos240-and-icoswisc240"]], "EC30to60 and ECwISC30to60": [[690, "ec30to60-and-ecwisc30to60"], [690, "id2"]], "SOwISC12to60": [[690, "sowisc12to60"], [690, "id3"], [746, "sowisc12to60"]], "WC14": [[690, "wc14"], [690, "id4"], [746, "wc14"]], "init test case": [[690, "init-test-case"], [746, "init-test-case"], [748, "init-test-case"], [758, "init-test-case"]], "performance_test test case": [[690, "performance-test-test-case"], [746, "performance-test-test-case"]], "restart_test test case": [[690, "restart-test-test-case"], [746, "restart-test-test-case"]], "decomp_test test case": [[690, "decomp-test-test-case"], [746, "decomp-test-test-case"]], "threads_test test case": [[690, "threads-test-test-case"], [746, "threads-test-test-case"]], "analysis_test test case": [[690, "analysis-test-test-case"], [746, "analysis-test-test-case"]], "daily_output_test test case": [[690, "daily-output-test-test-case"], [746, "daily-output-test-test-case"]], "dynamic_adjustment test case": [[690, "dynamic-adjustment-test-case"], [746, "dynamic-adjustment-test-case"]], "child classes": [[690, "child-classes"]], "files_for_e3sm test case": [[690, "files-for-e3sm-test-case"], [746, "files-for-e3sm-test-case"]], "interpolate_atm_forcing": [[692, "interpolate-atm-forcing"]], "create_pointstats_file": [[692, "create-pointstats-file"]], "ssh_adjustment": [[693, "ssh-adjustment"], [696, "ssh-adjustment"]], "ten_day_test": [[695, "ten-day-test"], [751, "ten-day-test"]], "evap": [[696, "evap"]], "geom": [[696, "geom"]], "streamfunction": [[696, "streamfunction"]], "misomip": [[696, "misomip"]], "isomip_plus_test": [[696, "isomip-plus-test"]], "convergence_test": [[697, "convergence-test"], [753, "convergence-test"]], "soma_test_case": [[699, "soma-test-case"]], "spherical_harmonic_transform": [[701, "spherical-harmonic-transform"], [757, "spherical-harmonic-transform"]], "qu_convergence": [[701, "qu-convergence"], [757, "qu-convergence"]], "interpolate_wave_drag": [[702, "interpolate-wave-drag"]], "remap_bathymetry": [[702, "remap-bathymetry"]], "ziso_test_case": [[703, "ziso-test-case"]], "with_frazil": [[703, "with-frazil"], [759, "with-frazil"]], "Organization of Tests": [[704, "organization-of-tests"]], "Directory structure": [[704, "directory-structure"]], "TestCase attributes": [[704, "testcase-attributes"]], "constructor": [[704, "constructor"], [704, "dev-step-init"]], "run()": [[704, "run"], [704, "dev-step-run"]], "validate()": [[704, "validate"]], "Steps": [[704, "steps"]], "Step attributes": [[704, "step-attributes"]], "constrain_resources()": [[704, "constrain-resources"]], "runtime_setup()": [[704, "runtime-setup"]], "Input files": [[704, "input-files"]], "Symlinks to input files": [[704, "symlinks-to-input-files"]], "Symlink to input files from compass": [[704, "symlink-to-input-files-from-compass"]], "Downloading and symlinking input files": [[704, "downloading-and-symlinking-input-files"]], "Copying input files": [[704, "copying-input-files"]], "Output files": [[704, "output-files"]], "Cached output files": [[704, "cached-output-files"]], "Adding namelist and streams files": [[704, "adding-namelist-and-streams-files"]], "Adding a namelist file": [[704, "adding-a-namelist-file"]], "Adding namelist options": [[704, "adding-namelist-options"]], "Updating namelist options at runtime": [[704, "updating-namelist-options-at-runtime"]], "Adding a streams file": [[704, "adding-a-streams-file"]], "Adding a template streams file": [[704, "adding-a-template-streams-file"]], "Updating a streams file at runtime": [[704, "updating-a-streams-file-at-runtime"]], "Adding MPAS model as an input": [[704, "adding-mpas-model-as-an-input"]], "Test Suites": [[704, "test-suites"], [760, "test-suites"], [762, "test-suites"]], "Overview": [[705, "overview"]], "Code Style": [[705, "code-style"]], "Packages and Modules": [[705, "packages-and-modules"]], "Packages": [[705, "packages"]], "Modules": [[705, "modules"]], "Classes": [[705, "classes"]], "Code sharing": [[705, "code-sharing"]], "In compass framework": [[705, "in-compass-framework"]], "Within an MPAS core": [[705, "within-an-mpas-core"]], "Within a test group": [[705, "within-a-test-group"]], "Within a test case": [[705, "within-a-test-case"]], "Quick Start for Developers": [[706, "quick-start-for-developers"]], "Unix Shell": [[706, "unix-shell"]], "Set up a compass repository: for beginners": [[706, "set-up-a-compass-repository-for-beginners"]], "compass conda environment, compilers and system modules": [[706, "compass-conda-environment-compilers-and-system-modules"]], "Supported machines": [[706, "supported-machines"]], "Environments with Albany": [[706, "environments-with-albany"]], "Environments with PETSc and Netlib-LAPACK": [[706, "environments-with-petsc-and-netlib-lapack"]], "Unknown machines": [[706, "unknown-machines"]], "What the script does": [[706, "what-the-script-does"]], "Optional flags": [[706, "optional-flags"]], "Activating the environment": [[706, "activating-the-environment"]], "Troubleshooting": [[706, "troubleshooting"], [707, "troubleshooting"]], "Creating/updating only the compass environment": [[706, "creating-updating-only-the-compass-environment"]], "Building MPAS components": [[706, "building-mpas-components"], [760, "building-mpas-components"]], "Running compass from the repo": [[706, "running-compass-from-the-repo"]], "Set up a compass repository with worktrees: for advanced users": [[706, "set-up-a-compass-repository-with-worktrees-for-advanced-users"]], "Solver errors when configuring conda environment": [[707, "solver-errors-when-configuring-conda-environment"]], "Proxy on LANL Macs": [[707, "proxy-on-lanl-macs"]], "gethostbyname failed": [[707, "gethostbyname-failed"]], "Glossary": [[708, "glossary"], [709, null]], "compass": [[709, "compass"]], "User's guide": [[709, null]], "Developer's guide": [[709, null]], "Tutorials": [[709, null]], "Versions": [[709, null]], "Legacy COMPASS": [[709, "legacy-compass"]], "Developer Tutorial: Adding a parameter study": [[710, "developer-tutorial-adding-a-parameter-study"]], "Getting started": [[710, "getting-started"], [711, "getting-started"], [712, "getting-started"]], "Making a new test group and \u201ccosine_bell\u201d test case": [[710, "making-a-new-test-group-and-cosine-bell-test-case"]], "Adding \u201cmesh\u201d, \u201cinit\u201d and \u201cforward\u201d steps": [[710, "adding-mesh-init-and-forward-steps"]], "Adding an \u201canalysis\u201d step": [[710, "adding-an-analysis-step"]], "Adding the steps to the test case": [[710, "adding-the-steps-to-the-test-case"], [711, "adding-the-steps-to-the-test-case"], [711, "id1"]], "Setting the number of tasks and CPUs per task": [[710, "setting-the-number-of-tasks-and-cpus-per-task"]], "Developer Tutorial: Adding a new test group": [[711, "developer-tutorial-adding-a-new-test-group"]], "Making a new test group": [[711, "making-a-new-test-group"], [712, "making-a-new-test-group"]], "Adding a \u201cdefault\u201d test case": [[711, "adding-a-default-test-case"]], "Varying resolution (or other parameters)": [[711, "varying-resolution-or-other-parameters"], [712, "varying-resolution-or-other-parameters"]], "Adding the initial_state step": [[711, "adding-the-initial-state-step"]], "Creating a horizontal mesh": [[711, "creating-a-horizontal-mesh"]], "Setting config options based on resolution": [[711, "setting-config-options-based-on-resolution"], [711, "id2"]], "Creating a vertical coordinate": [[711, "creating-a-vertical-coordinate"]], "Creating an initial condition": [[711, "creating-an-initial-condition"]], "Adding step outputs": [[711, "adding-step-outputs"]], "Adding the forward step": [[711, "adding-the-forward-step"], [712, "adding-the-forward-step"]], "Defining namelist options": [[711, "defining-namelist-options"], [712, "defining-namelist-options"]], "Defining streams": [[711, "defining-streams"], [712, "defining-streams"]], "Defining the run method": [[711, "defining-the-run-method"], [712, "defining-the-run-method"]], "Adding an \u201crpe_test\u201d test case": [[711, "adding-an-rpe-test-test-case"]], "Defining namelist options and streams files": [[711, "defining-namelist-options-and-streams-files"]], "Adding the analysis step": [[711, "adding-the-analysis-step"], [712, "adding-the-analysis-step"]], "Set up and run": [[711, "set-up-and-run"], [712, "set-up-and-run"]], "Developer Tutorial: Porting a legacy COMPASS test group": [[712, "developer-tutorial-porting-a-legacy-compass-test-group"]], "The legacy COMPASS test group": [[712, "the-legacy-compass-test-group"]], "Adding a test case": [[712, "adding-a-test-case"]], "Adding the init step": [[712, "adding-the-init-step"]], "Defining config options": [[712, "defining-config-options"]], "Updating the test case and test group": [[712, "updating-the-test-case-and-test-group"]], "Adding validation": [[712, "adding-validation"]], "Config Files": [[713, "config-files"]], "A \u201cuser\u201d config file": [[713, "a-user-config-file"]], "Test-case config files": [[713, "test-case-config-files"]], "Test suites": [[716, "test-suites"], [741, "test-suites"]], "sia_integration test suite": [[716, "sia-integration-test-suite"]], "fo_integration test suite": [[716, "fo-integration-test-suite"]], "full_integration test suite": [[716, "full-integration-test-suite"]], "humboldt_calving_tests": [[716, "humboldt-calving-tests"]], "humboldt_calving_tests_fo": [[716, "humboldt-calving-tests-fo"]], "config options": [[717, "config-options"], [718, "config-options"], [719, "config-options"], [720, "config-options"], [721, "config-options"], [722, "config-options"], [723, "config-options"], [724, "config-options"], [726, "config-options"], [727, "config-options"], [728, "config-options"], [730, "config-options"], [731, "config-options"], [732, "config-options"], [733, "config-options"], [734, "config-options"], [735, "config-options"], [736, "config-options"], [742, "config-options"], [743, "config-options"], [744, "config-options"], [745, "config-options"], [747, "config-options"], [751, "config-options"], [753, "config-options"], [754, "config-options"], [756, "config-options"], [757, "config-options"]], "dt_convergence_test": [[717, "dt-convergence-test"]], "decomposition_tests": [[723, "decomposition-tests"]], "restart_tests": [[723, "restart-tests"]], "ocean_thermal_obs": [[726, "ocean-thermal-obs"]], "Intel on Anvil": [[731, "intel-on-anvil"]], "Gnu on Anvil": [[731, "gnu-on-anvil"]], "Intel on Chrysalis": [[732, "intel-on-chrysalis"]], "Gnu on Chrysalis": [[732, "gnu-on-chrysalis"]], "Intel on CompyMcNodeFace": [[733, "intel-on-compymcnodeface"]], "Cori-Haswell": [[734, "cori-haswell"]], "Intel on Cori-Haswell": [[734, "intel-on-cori-haswell"]], "Gnu on Cori-Haswell": [[734, "gnu-on-cori-haswell"]], "Jupyter notebook on remote data": [[734, "jupyter-notebook-on-remote-data"], [736, "jupyter-notebook-on-remote-data"]], "Slurm job queueing": [[735, "slurm-job-queueing"]], "MPICH": [[735, "id4"]], "OpenMPI": [[735, "id5"]], "No MPI from conda-forge": [[735, "no-mpi-from-conda-forge"]], "Perlmutter-CPU": [[736, "perlmutter-cpu"]], "Gnu on Perlmutter-CPU": [[736, "gnu-on-perlmutter-cpu"]], "Ice shelf-cavities": [[737, "ice-shelf-cavities"]], "Sea surface height adjustment": [[737, "sea-surface-height-adjustment"]], "1D Grid type": [[739, "d-grid-type"]], "uniform": [[739, "uniform"]], "tanh_dz": [[739, "tanh-dz"]], "60layerPHC": [[739, "layerphc"]], "100layerE3SMv1": [[739, "layere3smv1"]], "3D vertical coordinates": [[739, "d-vertical-coordinates"]], "z-star": [[739, "z-star"]], "z-level": [[739, "z-level"]], "nightly test suite": [[741, "nightly-test-suite"]], "quwisc240 test suite": [[741, "quwisc240-test-suite"]], "qu240_for_e3sm test suite": [[741, "qu240-for-e3sm-test-suite"]], "quwisc240_for_e3sm test suite": [[741, "quwisc240-for-e3sm-test-suite"]], "ec30to60 test suite": [[741, "ec30to60-test-suite"]], "ecwisc30to60 test suite": [[741, "ecwisc30to60-test-suite"]], "thread_test": [[742, "thread-test"]], "resolutions": [[745, "resolutions"], [754, "resolutions"], [756, "resolutions"], [757, "resolutions"]], "time step": [[745, "time-step"], [754, "time-step"], [756, "time-step"]], "cores": [[745, "cores"], [754, "cores"], [756, "cores"]], "Shared config options": [[746, "shared-config-options"], [748, "shared-config-options"], [758, "shared-config-options"]], "Metadata": [[746, "metadata"]], "Meshes": [[746, "meshes"]], "QU240": [[746, "qu240"]], "QUwISC240": [[746, "quwisc240"]], "EC30to60": [[746, "ec30to60"]], "ECwISC30to60": [[746, "ecwisc30to60"]], "Biogeochemsitry": [[746, "biogeochemsitry"]], "Forward step": [[746, "forward-step"]], "make_diagnostic_files test case": [[746, "make-diagnostic-files-test-case"]], "initial state step": [[748, "initial-state-step"], [758, "initial-state-step"]], "interpolate atmosphere forcing step": [[748, "interpolate-atmosphere-forcing-step"]], "create pointstats file step": [[748, "create-pointstats-file-step"]], "sandy test case": [[748, "sandy-test-case"]], "analysis step": [[748, "analysis-step"], [758, "analysis-step"]], "shared config options": [[749, "shared-config-options"], [752, "shared-config-options"], [754, "shared-config-options"], [755, "shared-config-options"], [759, "shared-config-options"]], "Ocean0": [[752, "ocean0"]], "Ocean1": [[752, "ocean1"]], "Ocean2": [[752, "ocean2"]], "time_varying_Ocean0": [[752, "time-varying-ocean0"]], "thin_film_Ocean0": [[752, "thin-film-ocean0"]], "thin_film_tidal_forcing_Ocean0": [[752, "thin-film-tidal-forcing-ocean0"]], "Performance run": [[752, "performance-run"]], "Simulation run": [[752, "simulation-run"]], "long": [[755, "long"], [759, "long"]], "particles": [[755, "particles"], [759, "particles"]], "surface_restoring": [[755, "surface-restoring"]], "three_layer": [[755, "three-layer"]], "convergence thresholds": [[756, "convergence-thresholds"]], "parallel_N": [[757, "parallel-n"]], "serial_nLat": [[757, "serial-nlat"]], "remap bathymetry step": [[758, "remap-bathymetry-step"]], "interpolate wave drag step": [[758, "interpolate-wave-drag-step"]], "Quick Start for Users": [[760, "quick-start-for-users"]], "compass conda environment": [[760, "compass-conda-environment"]], "E3SM supported machines": [[760, "e3sm-supported-machines"]], "other machines": [[760, "other-machines"]], "Setting up test cases": [[760, "setting-up-test-cases"]], "Running a test case": [[760, "running-a-test-case"]], "Running with a job script": [[760, "running-with-a-job-script"]], "Test Cases": [[761, "test-cases"]], "Code and Documentation Versions": [[763, "code-and-documentation-versions"]]}, "indexentries": {"mpascore (class in compass)": [[9, "compass.MpasCore"]], "__init__() (compass.mpascore method)": [[9, "compass.MpasCore.__init__"]], "add_test_group() (compass.mpascore method)": [[10, "compass.MpasCore.add_test_group"]], "step (class in compass)": [[11, "compass.Step"]], "__init__() (compass.step method)": [[11, "compass.Step.__init__"]], "add_input_file() (compass.step method)": [[12, "compass.Step.add_input_file"]], "add_model_as_input() (compass.step method)": [[13, "compass.Step.add_model_as_input"]], "add_namelist_file() (compass.step method)": [[14, "compass.Step.add_namelist_file"]], "add_namelist_options() (compass.step method)": [[15, "compass.Step.add_namelist_options"]], "add_output_file() (compass.step method)": [[16, "compass.Step.add_output_file"]], "add_streams_file() (compass.step method)": [[17, "compass.Step.add_streams_file"]], "constrain_resources() (compass.step method)": [[18, "compass.Step.constrain_resources"]], "run() (compass.step method)": [[19, "compass.Step.run"]], "runtime_setup() (compass.step method)": [[20, "compass.Step.runtime_setup"]], "set_resources() (compass.step method)": [[21, "compass.Step.set_resources"]], "setup() (compass.step method)": [[22, "compass.Step.setup"]], "update_namelist_at_runtime() (compass.step method)": [[23, "compass.Step.update_namelist_at_runtime"]], "update_namelist_pio() (compass.step method)": [[24, "compass.Step.update_namelist_pio"]], "update_streams_at_runtime() (compass.step method)": [[25, "compass.Step.update_streams_at_runtime"]], "testcase (class in compass)": [[26, "compass.TestCase"]], "__init__() (compass.testcase method)": [[26, "compass.TestCase.__init__"]], "add_step() (compass.testcase method)": [[27, "compass.TestCase.add_step"]], "configure() (compass.testcase method)": [[28, "compass.TestCase.configure"]], "run() (compass.testcase method)": [[29, "compass.TestCase.run"]], "validate() (compass.testcase method)": [[30, "compass.TestCase.validate"]], "testgroup (class in compass)": [[31, "compass.TestGroup"]], "__init__() (compass.testgroup method)": [[31, "compass.TestGroup.__init__"]], "add_test_case() (compass.testgroup method)": [[32, "compass.TestGroup.add_test_case"]], "main() (in module compass.__main__)": [[33, "compass.__main__.main"]], "update_cache() (in module compass.cache)": [[34, "compass.cache.update_cache"]], "clean_cases() (in module compass.clean)": [[35, "compass.clean.clean_cases"]], "compassconfigparser (class in compass.config)": [[36, "compass.config.CompassConfigParser"]], "__init__() (compass.config.compassconfigparser method)": [[36, "compass.config.CompassConfigParser.__init__"]], "download() (in module compass.io)": [[37, "compass.io.download"]], "package_path() (in module compass.io)": [[38, "compass.io.package_path"]], "symlink() (in module compass.io)": [[39, "compass.io.symlink"]], "list_cases() (in module compass.list)": [[40, "compass.list.list_cases"]], "list_machines() (in module compass.list)": [[41, "compass.list.list_machines"]], "list_suites() (in module compass.list)": [[42, "compass.list.list_suites"]], "log_method_call() (in module compass.logging)": [[43, "compass.logging.log_method_call"]], "icosahedralmeshstep (class in compass.mesh)": [[44, "compass.mesh.IcosahedralMeshStep"]], "__init__() (compass.mesh.icosahedralmeshstep method)": [[44, "compass.mesh.IcosahedralMeshStep.__init__"]], "build_subdivisions_cell_width_lat_lon() (compass.mesh.icosahedralmeshstep method)": [[45, "compass.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon"]], "get_cell_width() (compass.mesh.icosahedralmeshstep static method)": [[46, "compass.mesh.IcosahedralMeshStep.get_cell_width"]], "get_subdivisions() (compass.mesh.icosahedralmeshstep static method)": [[47, "compass.mesh.IcosahedralMeshStep.get_subdivisions"]], "make_jigsaw_mesh() (compass.mesh.icosahedralmeshstep method)": [[48, "compass.mesh.IcosahedralMeshStep.make_jigsaw_mesh"]], "run() (compass.mesh.icosahedralmeshstep method)": [[49, "compass.mesh.IcosahedralMeshStep.run"]], "setup() (compass.mesh.icosahedralmeshstep method)": [[50, "compass.mesh.IcosahedralMeshStep.setup"]], "quasiuniformsphericalmeshstep (class in compass.mesh)": [[51, "compass.mesh.QuasiUniformSphericalMeshStep"]], "__init__() (compass.mesh.quasiuniformsphericalmeshstep method)": [[51, "compass.mesh.QuasiUniformSphericalMeshStep.__init__"]], "build_cell_width_lat_lon() (compass.mesh.quasiuniformsphericalmeshstep method)": [[52, "compass.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon"]], "make_jigsaw_mesh() (compass.mesh.quasiuniformsphericalmeshstep method)": [[53, "compass.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh"]], "run() (compass.mesh.quasiuniformsphericalmeshstep method)": [[54, "compass.mesh.QuasiUniformSphericalMeshStep.run"]], "setup() (compass.mesh.quasiuniformsphericalmeshstep method)": [[55, "compass.mesh.QuasiUniformSphericalMeshStep.setup"]], "sphericalbasestep (class in compass.mesh.spherical)": [[56, "compass.mesh.spherical.SphericalBaseStep"]], "__init__() (compass.mesh.spherical.sphericalbasestep method)": [[56, "compass.mesh.spherical.SphericalBaseStep.__init__"]], "run() (compass.mesh.spherical.sphericalbasestep method)": [[57, "compass.mesh.spherical.SphericalBaseStep.run"]], "save_and_plot_cell_width() (compass.mesh.spherical.sphericalbasestep method)": [[58, "compass.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width"]], "setup() (compass.mesh.spherical.sphericalbasestep method)": [[59, "compass.mesh.spherical.SphericalBaseStep.setup"]], "make_graph_file() (in module compass.model)": [[60, "compass.model.make_graph_file"]], "partition() (in module compass.model)": [[61, "compass.model.partition"]], "run_model() (in module compass.model)": [[62, "compass.model.run_model"]], "get_mpas_cores() (in module compass.mpas_cores)": [[63, "compass.mpas_cores.get_mpas_cores"]], "check_parallel_system() (in module compass.parallel)": [[64, "compass.parallel.check_parallel_system"]], "get_available_cores_and_nodes() (in module compass.parallel)": [[65, "compass.parallel.get_available_cores_and_nodes"]], "run_command() (in module compass.parallel)": [[66, "compass.parallel.run_command"]], "set_cores_per_node() (in module compass.parallel)": [[67, "compass.parallel.set_cores_per_node"]], "write() (in module compass.provenance)": [[68, "compass.provenance.write"]], "run_single_step() (in module compass.run.serial)": [[69, "compass.run.serial.run_single_step"]], "run_tests() (in module compass.run.serial)": [[70, "compass.run.serial.run_tests"]], "setup_case() (in module compass.setup)": [[71, "compass.setup.setup_case"]], "setup_cases() (in module compass.setup)": [[72, "compass.setup.setup_cases"]], "clean_suite() (in module compass.suite)": [[73, "compass.suite.clean_suite"]], "setup_suite() (in module compass.suite)": [[74, "compass.suite.setup_suite"]], "compare_timers() (in module compass.validate)": [[75, "compass.validate.compare_timers"]], "compare_variables() (in module compass.validate)": [[76, "compass.validate.compare_variables"]], "landice (class in compass.landice)": [[79, "compass.landice.Landice"]], "__init__() (compass.landice.landice method)": [[79, "compass.landice.Landice.__init__"]], "calvingdtconvergence (class in compass.landice.tests.calving_dt_convergence)": [[80, "compass.landice.tests.calving_dt_convergence.CalvingDtConvergence"]], "__init__() (compass.landice.tests.calving_dt_convergence.calvingdtconvergence method)": [[80, "compass.landice.tests.calving_dt_convergence.CalvingDtConvergence.__init__"]], "dtconvergencetest (class in compass.landice.tests.calving_dt_convergence.dt_convergence_test)": [[81, "compass.landice.tests.calving_dt_convergence.dt_convergence_test.DtConvergenceTest"]], "__init__() (compass.landice.tests.calving_dt_convergence.dt_convergence_test.dtconvergencetest method)": [[81, "compass.landice.tests.calving_dt_convergence.dt_convergence_test.DtConvergenceTest.__init__"]], "validate() (compass.landice.tests.calving_dt_convergence.dt_convergence_test.dtconvergencetest method)": [[82, "compass.landice.tests.calving_dt_convergence.dt_convergence_test.DtConvergenceTest.validate"]], "runmodel (class in compass.landice.tests.calving_dt_convergence.run_model)": [[83, "compass.landice.tests.calving_dt_convergence.run_model.RunModel"]], "__init__() (compass.landice.tests.calving_dt_convergence.run_model.runmodel method)": [[83, "compass.landice.tests.calving_dt_convergence.run_model.RunModel.__init__"]], "run() (compass.landice.tests.calving_dt_convergence.run_model.runmodel method)": [[84, "compass.landice.tests.calving_dt_convergence.run_model.RunModel.run"]], "circularshelf (class in compass.landice.tests.circular_shelf)": [[85, "compass.landice.tests.circular_shelf.CircularShelf"]], "__init__() (compass.landice.tests.circular_shelf.circularshelf method)": [[85, "compass.landice.tests.circular_shelf.CircularShelf.__init__"]], "decompositiontest (class in compass.landice.tests.circular_shelf.decomposition_test)": [[86, "compass.landice.tests.circular_shelf.decomposition_test.DecompositionTest"]], "__init__() (compass.landice.tests.circular_shelf.decomposition_test.decompositiontest method)": [[86, "compass.landice.tests.circular_shelf.decomposition_test.DecompositionTest.__init__"]], "run() (compass.landice.tests.circular_shelf.decomposition_test.decompositiontest method)": [[87, "compass.landice.tests.circular_shelf.decomposition_test.DecompositionTest.run"]], "runmodel (class in compass.landice.tests.circular_shelf.run_model)": [[88, "compass.landice.tests.circular_shelf.run_model.RunModel"]], "__init__() (compass.landice.tests.circular_shelf.run_model.runmodel method)": [[88, "compass.landice.tests.circular_shelf.run_model.RunModel.__init__"]], "run() (compass.landice.tests.circular_shelf.run_model.runmodel method)": [[89, "compass.landice.tests.circular_shelf.run_model.RunModel.run"]], "setupmesh (class in compass.landice.tests.circular_shelf.setup_mesh)": [[90, "compass.landice.tests.circular_shelf.setup_mesh.SetupMesh"]], "__init__() (compass.landice.tests.circular_shelf.setup_mesh.setupmesh method)": [[90, "compass.landice.tests.circular_shelf.setup_mesh.SetupMesh.__init__"]], "run() (compass.landice.tests.circular_shelf.setup_mesh.setupmesh method)": [[91, "compass.landice.tests.circular_shelf.setup_mesh.SetupMesh.run"]], "visualize (class in compass.landice.tests.circular_shelf.visualize)": [[92, "compass.landice.tests.circular_shelf.visualize.Visualize"]], "__init__() (compass.landice.tests.circular_shelf.visualize.visualize method)": [[92, "compass.landice.tests.circular_shelf.visualize.Visualize.__init__"]], "run() (compass.landice.tests.circular_shelf.visualize.visualize method)": [[93, "compass.landice.tests.circular_shelf.visualize.Visualize.run"]], "visualize_circular_shelf() (in module compass.landice.tests.circular_shelf.visualize)": [[94, "compass.landice.tests.circular_shelf.visualize.visualize_circular_shelf"]], "dome (class in compass.landice.tests.dome)": [[95, "compass.landice.tests.dome.Dome"]], "__init__() (compass.landice.tests.dome.dome method)": [[95, "compass.landice.tests.dome.Dome.__init__"]], "decompositiontest (class in compass.landice.tests.dome.decomposition_test)": [[96, "compass.landice.tests.dome.decomposition_test.DecompositionTest"]], "__init__() (compass.landice.tests.dome.decomposition_test.decompositiontest method)": [[96, "compass.landice.tests.dome.decomposition_test.DecompositionTest.__init__"]], "run() (compass.landice.tests.dome.decomposition_test.decompositiontest method)": [[97, "compass.landice.tests.dome.decomposition_test.DecompositionTest.run"]], "restarttest (class in compass.landice.tests.dome.restart_test)": [[98, "compass.landice.tests.dome.restart_test.RestartTest"]], "__init__() (compass.landice.tests.dome.restart_test.restarttest method)": [[98, "compass.landice.tests.dome.restart_test.RestartTest.__init__"]], "run() (compass.landice.tests.dome.restart_test.restarttest method)": [[99, "compass.landice.tests.dome.restart_test.RestartTest.run"]], "runmodel (class in compass.landice.tests.dome.run_model)": [[100, "compass.landice.tests.dome.run_model.RunModel"]], "__init__() (compass.landice.tests.dome.run_model.runmodel method)": [[100, "compass.landice.tests.dome.run_model.RunModel.__init__"]], "run() (compass.landice.tests.dome.run_model.runmodel method)": [[101, "compass.landice.tests.dome.run_model.RunModel.run"]], "setup() (compass.landice.tests.dome.run_model.runmodel method)": [[102, "compass.landice.tests.dome.run_model.RunModel.setup"]], "setupmesh (class in compass.landice.tests.dome.setup_mesh)": [[103, "compass.landice.tests.dome.setup_mesh.SetupMesh"]], "__init__() (compass.landice.tests.dome.setup_mesh.setupmesh method)": [[103, "compass.landice.tests.dome.setup_mesh.SetupMesh.__init__"]], "run() (compass.landice.tests.dome.setup_mesh.setupmesh method)": [[104, "compass.landice.tests.dome.setup_mesh.SetupMesh.run"]], "smoketest (class in compass.landice.tests.dome.smoke_test)": [[105, "compass.landice.tests.dome.smoke_test.SmokeTest"]], "__init__() (compass.landice.tests.dome.smoke_test.smoketest method)": [[105, "compass.landice.tests.dome.smoke_test.SmokeTest.__init__"]], "run() (compass.landice.tests.dome.smoke_test.smoketest method)": [[106, "compass.landice.tests.dome.smoke_test.SmokeTest.run"]], "visualize (class in compass.landice.tests.dome.visualize)": [[107, "compass.landice.tests.dome.visualize.Visualize"]], "__init__() (compass.landice.tests.dome.visualize.visualize method)": [[107, "compass.landice.tests.dome.visualize.Visualize.__init__"]], "run() (compass.landice.tests.dome.visualize.visualize method)": [[108, "compass.landice.tests.dome.visualize.Visualize.run"]], "visualize_dome() (in module compass.landice.tests.dome.visualize)": [[109, "compass.landice.tests.dome.visualize.visualize_dome"]], "eismint2 (class in compass.landice.tests.eismint2)": [[110, "compass.landice.tests.eismint2.Eismint2"]], "__init__() (compass.landice.tests.eismint2.eismint2 method)": [[110, "compass.landice.tests.eismint2.Eismint2.__init__"]], "decompositiontest (class in compass.landice.tests.eismint2.decomposition_test)": [[111, "compass.landice.tests.eismint2.decomposition_test.DecompositionTest"]], "__init__() (compass.landice.tests.eismint2.decomposition_test.decompositiontest method)": [[111, "compass.landice.tests.eismint2.decomposition_test.DecompositionTest.__init__"]], "run() (compass.landice.tests.eismint2.decomposition_test.decompositiontest method)": [[112, "compass.landice.tests.eismint2.decomposition_test.DecompositionTest.run"]], "restarttest (class in compass.landice.tests.eismint2.restart_test)": [[113, "compass.landice.tests.eismint2.restart_test.RestartTest"]], "__init__() (compass.landice.tests.eismint2.restart_test.restarttest method)": [[113, "compass.landice.tests.eismint2.restart_test.RestartTest.__init__"]], "run() (compass.landice.tests.eismint2.restart_test.restarttest method)": [[114, "compass.landice.tests.eismint2.restart_test.RestartTest.run"]], "runexperiment (class in compass.landice.tests.eismint2.run_experiment)": [[115, "compass.landice.tests.eismint2.run_experiment.RunExperiment"]], "__init__() (compass.landice.tests.eismint2.run_experiment.runexperiment method)": [[115, "compass.landice.tests.eismint2.run_experiment.RunExperiment.__init__"]], "run() (compass.landice.tests.eismint2.run_experiment.runexperiment method)": [[116, "compass.landice.tests.eismint2.run_experiment.RunExperiment.run"]], "setup() (compass.landice.tests.eismint2.run_experiment.runexperiment method)": [[117, "compass.landice.tests.eismint2.run_experiment.RunExperiment.setup"]], "setupmesh (class in compass.landice.tests.eismint2.setup_mesh)": [[118, "compass.landice.tests.eismint2.setup_mesh.SetupMesh"]], "__init__() (compass.landice.tests.eismint2.setup_mesh.setupmesh method)": [[118, "compass.landice.tests.eismint2.setup_mesh.SetupMesh.__init__"]], "run() (compass.landice.tests.eismint2.setup_mesh.setupmesh method)": [[119, "compass.landice.tests.eismint2.setup_mesh.SetupMesh.run"]], "standardexperiments (class in compass.landice.tests.eismint2.standard_experiments)": [[120, "compass.landice.tests.eismint2.standard_experiments.StandardExperiments"]], "__init__() (compass.landice.tests.eismint2.standard_experiments.standardexperiments method)": [[120, "compass.landice.tests.eismint2.standard_experiments.StandardExperiments.__init__"]], "run() (compass.landice.tests.eismint2.standard_experiments.standardexperiments method)": [[121, "compass.landice.tests.eismint2.standard_experiments.StandardExperiments.run"]], "visualize (class in compass.landice.tests.eismint2.standard_experiments.visualize)": [[122, "compass.landice.tests.eismint2.standard_experiments.visualize.Visualize"]], "__init__() (compass.landice.tests.eismint2.standard_experiments.visualize.visualize method)": [[122, "compass.landice.tests.eismint2.standard_experiments.visualize.Visualize.__init__"]], "run() (compass.landice.tests.eismint2.standard_experiments.visualize.visualize method)": [[123, "compass.landice.tests.eismint2.standard_experiments.visualize.Visualize.run"]], "visualize_eismint2() (in module compass.landice.tests.eismint2.standard_experiments.visualize)": [[124, "compass.landice.tests.eismint2.standard_experiments.visualize.visualize_eismint2"]], "a (class in compass.landice.tests.enthalpy_benchmark.a)": [[125, "compass.landice.tests.enthalpy_benchmark.A.A"]], "__init__() (compass.landice.tests.enthalpy_benchmark.a.a method)": [[125, "compass.landice.tests.enthalpy_benchmark.A.A.__init__"]], "configure() (compass.landice.tests.enthalpy_benchmark.a.a method)": [[126, "compass.landice.tests.enthalpy_benchmark.A.A.configure"]], "run() (compass.landice.tests.enthalpy_benchmark.a.a method)": [[127, "compass.landice.tests.enthalpy_benchmark.A.A.run"]], "visualize (class in compass.landice.tests.enthalpy_benchmark.a.visualize)": [[128, "compass.landice.tests.enthalpy_benchmark.A.visualize.Visualize"]], "__init__() (compass.landice.tests.enthalpy_benchmark.a.visualize.visualize method)": [[128, "compass.landice.tests.enthalpy_benchmark.A.visualize.Visualize.__init__"]], "run() (compass.landice.tests.enthalpy_benchmark.a.visualize.visualize method)": [[129, "compass.landice.tests.enthalpy_benchmark.A.visualize.Visualize.run"]], "b (class in compass.landice.tests.enthalpy_benchmark.b)": [[130, "compass.landice.tests.enthalpy_benchmark.B.B"]], "__init__() (compass.landice.tests.enthalpy_benchmark.b.b method)": [[130, "compass.landice.tests.enthalpy_benchmark.B.B.__init__"]], "configure() (compass.landice.tests.enthalpy_benchmark.b.b method)": [[131, "compass.landice.tests.enthalpy_benchmark.B.B.configure"]], "run() (compass.landice.tests.enthalpy_benchmark.b.b method)": [[132, "compass.landice.tests.enthalpy_benchmark.B.B.run"]], "visualize (class in compass.landice.tests.enthalpy_benchmark.b.visualize)": [[133, "compass.landice.tests.enthalpy_benchmark.B.visualize.Visualize"]], "__init__() (compass.landice.tests.enthalpy_benchmark.b.visualize.visualize method)": [[133, "compass.landice.tests.enthalpy_benchmark.B.visualize.Visualize.__init__"]], "run() (compass.landice.tests.enthalpy_benchmark.b.visualize.visualize method)": [[134, "compass.landice.tests.enthalpy_benchmark.B.visualize.Visualize.run"]], "enthalpybenchmark (class in compass.landice.tests.enthalpy_benchmark)": [[135, "compass.landice.tests.enthalpy_benchmark.EnthalpyBenchmark"]], "__init__() (compass.landice.tests.enthalpy_benchmark.enthalpybenchmark method)": [[135, "compass.landice.tests.enthalpy_benchmark.EnthalpyBenchmark.__init__"]], "runmodel (class in compass.landice.tests.enthalpy_benchmark.run_model)": [[136, "compass.landice.tests.enthalpy_benchmark.run_model.RunModel"]], "__init__() (compass.landice.tests.enthalpy_benchmark.run_model.runmodel method)": [[136, "compass.landice.tests.enthalpy_benchmark.run_model.RunModel.__init__"]], "run() (compass.landice.tests.enthalpy_benchmark.run_model.runmodel method)": [[137, "compass.landice.tests.enthalpy_benchmark.run_model.RunModel.run"]], "setup() (compass.landice.tests.enthalpy_benchmark.run_model.runmodel method)": [[138, "compass.landice.tests.enthalpy_benchmark.run_model.RunModel.setup"]], "setupmesh (class in compass.landice.tests.enthalpy_benchmark.setup_mesh)": [[139, "compass.landice.tests.enthalpy_benchmark.setup_mesh.SetupMesh"]], "__init__() (compass.landice.tests.enthalpy_benchmark.setup_mesh.setupmesh method)": [[139, "compass.landice.tests.enthalpy_benchmark.setup_mesh.SetupMesh.__init__"]], "run() (compass.landice.tests.enthalpy_benchmark.setup_mesh.setupmesh method)": [[140, "compass.landice.tests.enthalpy_benchmark.setup_mesh.SetupMesh.run"]], "greenland (class in compass.landice.tests.greenland)": [[141, "compass.landice.tests.greenland.Greenland"]], "__init__() (compass.landice.tests.greenland.greenland method)": [[141, "compass.landice.tests.greenland.Greenland.__init__"]], "decompositiontest (class in compass.landice.tests.greenland.decomposition_test)": [[142, "compass.landice.tests.greenland.decomposition_test.DecompositionTest"]], "__init__() (compass.landice.tests.greenland.decomposition_test.decompositiontest method)": [[142, "compass.landice.tests.greenland.decomposition_test.DecompositionTest.__init__"]], "run() (compass.landice.tests.greenland.decomposition_test.decompositiontest method)": [[143, "compass.landice.tests.greenland.decomposition_test.DecompositionTest.run"]], "highresmesh (class in compass.landice.tests.greenland.high_res_mesh)": [[144, "compass.landice.tests.greenland.high_res_mesh.HighResMesh"]], "__init__() (compass.landice.tests.greenland.high_res_mesh.highresmesh method)": [[144, "compass.landice.tests.greenland.high_res_mesh.HighResMesh.__init__"]], "run() (compass.landice.tests.greenland.high_res_mesh.highresmesh method)": [[145, "compass.landice.tests.greenland.high_res_mesh.HighResMesh.run"]], "mesh (class in compass.landice.tests.greenland.mesh)": [[146, "compass.landice.tests.greenland.mesh.Mesh"]], "__init__() (compass.landice.tests.greenland.mesh.mesh method)": [[146, "compass.landice.tests.greenland.mesh.Mesh.__init__"]], "build_cell_width() (compass.landice.tests.greenland.mesh.mesh method)": [[147, "compass.landice.tests.greenland.mesh.Mesh.build_cell_width"]], "run() (compass.landice.tests.greenland.mesh.mesh method)": [[148, "compass.landice.tests.greenland.mesh.Mesh.run"]], "restarttest (class in compass.landice.tests.greenland.restart_test)": [[149, "compass.landice.tests.greenland.restart_test.RestartTest"]], "__init__() (compass.landice.tests.greenland.restart_test.restarttest method)": [[149, "compass.landice.tests.greenland.restart_test.RestartTest.__init__"]], "run() (compass.landice.tests.greenland.restart_test.restarttest method)": [[150, "compass.landice.tests.greenland.restart_test.RestartTest.run"]], "runmodel (class in compass.landice.tests.greenland.run_model)": [[151, "compass.landice.tests.greenland.run_model.RunModel"]], "__init__() (compass.landice.tests.greenland.run_model.runmodel method)": [[151, "compass.landice.tests.greenland.run_model.RunModel.__init__"]], "run() (compass.landice.tests.greenland.run_model.runmodel method)": [[152, "compass.landice.tests.greenland.run_model.RunModel.run"]], "setup() (compass.landice.tests.greenland.run_model.runmodel method)": [[153, "compass.landice.tests.greenland.run_model.RunModel.setup"]], "smoketest (class in compass.landice.tests.greenland.smoke_test)": [[154, "compass.landice.tests.greenland.smoke_test.SmokeTest"]], "__init__() (compass.landice.tests.greenland.smoke_test.smoketest method)": [[154, "compass.landice.tests.greenland.smoke_test.SmokeTest.__init__"]], "run() (compass.landice.tests.greenland.smoke_test.smoketest method)": [[155, "compass.landice.tests.greenland.smoke_test.SmokeTest.run"]], "humboldt (class in compass.landice.tests.humboldt)": [[156, "compass.landice.tests.humboldt.Humboldt"]], "__init__() (compass.landice.tests.humboldt.humboldt method)": [[156, "compass.landice.tests.humboldt.Humboldt.__init__"]], "decompositiontest (class in compass.landice.tests.humboldt.decomposition_test)": [[157, "compass.landice.tests.humboldt.decomposition_test.DecompositionTest"]], "__init__() (compass.landice.tests.humboldt.decomposition_test.decompositiontest method)": [[157, "compass.landice.tests.humboldt.decomposition_test.DecompositionTest.__init__"]], "validate() (compass.landice.tests.humboldt.decomposition_test.decompositiontest method)": [[158, "compass.landice.tests.humboldt.decomposition_test.DecompositionTest.validate"]], "mesh (class in compass.landice.tests.humboldt.mesh)": [[159, "compass.landice.tests.humboldt.mesh.Mesh"]], "__init__() (compass.landice.tests.humboldt.mesh.mesh method)": [[159, "compass.landice.tests.humboldt.mesh.Mesh.__init__"]], "run() (compass.landice.tests.humboldt.mesh.mesh method)": [[160, "compass.landice.tests.humboldt.mesh.Mesh.run"]], "meshgen (class in compass.landice.tests.humboldt.mesh_gen)": [[161, "compass.landice.tests.humboldt.mesh_gen.MeshGen"]], "__init__() (compass.landice.tests.humboldt.mesh_gen.meshgen method)": [[161, "compass.landice.tests.humboldt.mesh_gen.MeshGen.__init__"]], "run() (compass.landice.tests.humboldt.mesh_gen.meshgen method)": [[162, "compass.landice.tests.humboldt.mesh_gen.MeshGen.run"]], "restarttest (class in compass.landice.tests.humboldt.restart_test)": [[163, "compass.landice.tests.humboldt.restart_test.RestartTest"]], "__init__() (compass.landice.tests.humboldt.restart_test.restarttest method)": [[163, "compass.landice.tests.humboldt.restart_test.RestartTest.__init__"]], "validate() (compass.landice.tests.humboldt.restart_test.restarttest method)": [[164, "compass.landice.tests.humboldt.restart_test.RestartTest.validate"]], "runmodel (class in compass.landice.tests.humboldt.run_model)": [[165, "compass.landice.tests.humboldt.run_model.RunModel"]], "__init__() (compass.landice.tests.humboldt.run_model.runmodel method)": [[165, "compass.landice.tests.humboldt.run_model.RunModel.__init__"]], "run() (compass.landice.tests.humboldt.run_model.runmodel method)": [[166, "compass.landice.tests.humboldt.run_model.RunModel.run"]], "hydroradial (class in compass.landice.tests.hydro_radial)": [[167, "compass.landice.tests.hydro_radial.HydroRadial"]], "__init__() (compass.landice.tests.hydro_radial.hydroradial method)": [[167, "compass.landice.tests.hydro_radial.HydroRadial.__init__"]], "decompositiontest (class in compass.landice.tests.hydro_radial.decomposition_test)": [[168, "compass.landice.tests.hydro_radial.decomposition_test.DecompositionTest"]], "__init__() (compass.landice.tests.hydro_radial.decomposition_test.decompositiontest method)": [[168, "compass.landice.tests.hydro_radial.decomposition_test.DecompositionTest.__init__"]], "run() (compass.landice.tests.hydro_radial.decomposition_test.decompositiontest method)": [[169, "compass.landice.tests.hydro_radial.decomposition_test.DecompositionTest.run"]], "restarttest (class in compass.landice.tests.hydro_radial.restart_test)": [[170, "compass.landice.tests.hydro_radial.restart_test.RestartTest"]], "__init__() (compass.landice.tests.hydro_radial.restart_test.restarttest method)": [[170, "compass.landice.tests.hydro_radial.restart_test.RestartTest.__init__"]], "run() (compass.landice.tests.hydro_radial.restart_test.restarttest method)": [[171, "compass.landice.tests.hydro_radial.restart_test.RestartTest.run"]], "runmodel (class in compass.landice.tests.hydro_radial.run_model)": [[172, "compass.landice.tests.hydro_radial.run_model.RunModel"]], "__init__() (compass.landice.tests.hydro_radial.run_model.runmodel method)": [[172, "compass.landice.tests.hydro_radial.run_model.RunModel.__init__"]], "run() (compass.landice.tests.hydro_radial.run_model.runmodel method)": [[173, "compass.landice.tests.hydro_radial.run_model.RunModel.run"]], "setup() (compass.landice.tests.hydro_radial.run_model.runmodel method)": [[174, "compass.landice.tests.hydro_radial.run_model.RunModel.setup"]], "setupmesh (class in compass.landice.tests.hydro_radial.setup_mesh)": [[175, "compass.landice.tests.hydro_radial.setup_mesh.SetupMesh"]], "__init__() (compass.landice.tests.hydro_radial.setup_mesh.setupmesh method)": [[175, "compass.landice.tests.hydro_radial.setup_mesh.SetupMesh.__init__"]], "run() (compass.landice.tests.hydro_radial.setup_mesh.setupmesh method)": [[176, "compass.landice.tests.hydro_radial.setup_mesh.SetupMesh.run"]], "spinuptest (class in compass.landice.tests.hydro_radial.spinup_test)": [[177, "compass.landice.tests.hydro_radial.spinup_test.SpinupTest"]], "__init__() (compass.landice.tests.hydro_radial.spinup_test.spinuptest method)": [[177, "compass.landice.tests.hydro_radial.spinup_test.SpinupTest.__init__"]], "run() (compass.landice.tests.hydro_radial.spinup_test.spinuptest method)": [[178, "compass.landice.tests.hydro_radial.spinup_test.SpinupTest.run"]], "steadystatedrifttest (class in compass.landice.tests.hydro_radial.steady_state_drift_test)": [[179, "compass.landice.tests.hydro_radial.steady_state_drift_test.SteadyStateDriftTest"]], "__init__() (compass.landice.tests.hydro_radial.steady_state_drift_test.steadystatedrifttest method)": [[179, "compass.landice.tests.hydro_radial.steady_state_drift_test.SteadyStateDriftTest.__init__"]], "run() (compass.landice.tests.hydro_radial.steady_state_drift_test.steadystatedrifttest method)": [[180, "compass.landice.tests.hydro_radial.steady_state_drift_test.SteadyStateDriftTest.run"]], "visualize (class in compass.landice.tests.hydro_radial.visualize)": [[181, "compass.landice.tests.hydro_radial.visualize.Visualize"]], "__init__() (compass.landice.tests.hydro_radial.visualize.visualize method)": [[181, "compass.landice.tests.hydro_radial.visualize.Visualize.__init__"]], "run() (compass.landice.tests.hydro_radial.visualize.visualize method)": [[182, "compass.landice.tests.hydro_radial.visualize.Visualize.run"]], "visualize_hydro_radial() (in module compass.landice.tests.hydro_radial.visualize)": [[183, "compass.landice.tests.hydro_radial.visualize.visualize_hydro_radial"]], "ismip6forcing (class in compass.landice.tests.ismip6_forcing)": [[184, "compass.landice.tests.ismip6_forcing.Ismip6Forcing"]], "__init__() (compass.landice.tests.ismip6_forcing.ismip6forcing method)": [[184, "compass.landice.tests.ismip6_forcing.Ismip6Forcing.__init__"]], "atmosphere (class in compass.landice.tests.ismip6_forcing.atmosphere)": [[185, "compass.landice.tests.ismip6_forcing.atmosphere.Atmosphere"]], "__init__() (compass.landice.tests.ismip6_forcing.atmosphere.atmosphere method)": [[185, "compass.landice.tests.ismip6_forcing.atmosphere.Atmosphere.__init__"]], "configure() (compass.landice.tests.ismip6_forcing.atmosphere.atmosphere method)": [[186, "compass.landice.tests.ismip6_forcing.atmosphere.Atmosphere.configure"]], "compass.landice.tests.ismip6_forcing.atmosphere.create_mapfile_smb": [[187, "module-compass.landice.tests.ismip6_forcing.atmosphere.create_mapfile_smb"]], "module": [[187, "module-compass.landice.tests.ismip6_forcing.atmosphere.create_mapfile_smb"], [341, "module-compass.ocean.tests.global_ocean.configure"], [427, "module-compass.ocean.tests.hurricane.configure"], [639, "module-compass.ocean.tests.tides.configure"]], "build_mapping_file() (in module compass.landice.tests.ismip6_forcing.atmosphere.create_mapfile_smb)": [[188, "compass.landice.tests.ismip6_forcing.atmosphere.create_mapfile_smb.build_mapping_file"]], "create_atm_scrip() (in module compass.landice.tests.ismip6_forcing.atmosphere.create_mapfile_smb)": [[189, "compass.landice.tests.ismip6_forcing.atmosphere.create_mapfile_smb.create_atm_scrip"]], "processsmb (class in compass.landice.tests.ismip6_forcing.atmosphere.process_smb)": [[190, "compass.landice.tests.ismip6_forcing.atmosphere.process_smb.ProcessSMB"]], "__init__() (compass.landice.tests.ismip6_forcing.atmosphere.process_smb.processsmb method)": [[190, "compass.landice.tests.ismip6_forcing.atmosphere.process_smb.ProcessSMB.__init__"]], "correct_smb_anomaly_for_climatology() (compass.landice.tests.ismip6_forcing.atmosphere.process_smb.processsmb method)": [[191, "compass.landice.tests.ismip6_forcing.atmosphere.process_smb.ProcessSMB.correct_smb_anomaly_for_climatology"]], "remap_ismip6_smb_to_mali() (compass.landice.tests.ismip6_forcing.atmosphere.process_smb.processsmb method)": [[192, "compass.landice.tests.ismip6_forcing.atmosphere.process_smb.ProcessSMB.remap_ismip6_smb_to_mali"]], "rename_ismip6_smb_to_mali_vars() (compass.landice.tests.ismip6_forcing.atmosphere.process_smb.processsmb method)": [[193, "compass.landice.tests.ismip6_forcing.atmosphere.process_smb.ProcessSMB.rename_ismip6_smb_to_mali_vars"]], "run() (compass.landice.tests.ismip6_forcing.atmosphere.process_smb.processsmb method)": [[194, "compass.landice.tests.ismip6_forcing.atmosphere.process_smb.ProcessSMB.run"]], "setup() (compass.landice.tests.ismip6_forcing.atmosphere.process_smb.processsmb method)": [[195, "compass.landice.tests.ismip6_forcing.atmosphere.process_smb.ProcessSMB.setup"]], "processsmbracmo (class in compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo)": [[196, "compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.ProcessSmbRacmo"]], "__init__() (compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.processsmbracmo method)": [[196, "compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.ProcessSmbRacmo.__init__"]], "correct_smb_anomaly_for_base_smb() (compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.processsmbracmo method)": [[197, "compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.ProcessSmbRacmo.correct_smb_anomaly_for_base_smb"]], "remap_source_smb_to_mali() (compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.processsmbracmo method)": [[198, "compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.ProcessSmbRacmo.remap_source_smb_to_mali"]], "rename_source_smb_to_mali_vars() (compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.processsmbracmo method)": [[199, "compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.ProcessSmbRacmo.rename_source_smb_to_mali_vars"]], "run() (compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.processsmbracmo method)": [[200, "compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.ProcessSmbRacmo.run"]], "setup() (compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.processsmbracmo method)": [[201, "compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.ProcessSmbRacmo.setup"]], "configure() (in module compass.landice.tests.ismip6_forcing.configure)": [[202, "compass.landice.tests.ismip6_forcing.configure.configure"]], "build_mapping_file() (in module compass.landice.tests.ismip6_forcing.create_mapfile)": [[203, "compass.landice.tests.ismip6_forcing.create_mapfile.build_mapping_file"]], "oceanbasal (class in compass.landice.tests.ismip6_forcing.ocean_basal)": [[204, "compass.landice.tests.ismip6_forcing.ocean_basal.OceanBasal"]], "__init__() (compass.landice.tests.ismip6_forcing.ocean_basal.oceanbasal method)": [[204, "compass.landice.tests.ismip6_forcing.ocean_basal.OceanBasal.__init__"]], "configure() (compass.landice.tests.ismip6_forcing.ocean_basal.oceanbasal method)": [[205, "compass.landice.tests.ismip6_forcing.ocean_basal.OceanBasal.configure"]], "processbasalmelt (class in compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt)": [[206, "compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.ProcessBasalMelt"]], "__init__() (compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.processbasalmelt method)": [[206, "compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.ProcessBasalMelt.__init__"]], "combine_ismip6_inputfiles() (compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.processbasalmelt method)": [[207, "compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.ProcessBasalMelt.combine_ismip6_inputfiles"]], "remap_ismip6_basal_melt_to_mali_vars() (compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.processbasalmelt method)": [[208, "compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.ProcessBasalMelt.remap_ismip6_basal_melt_to_mali_vars"]], "rename_ismip6_basal_melt_to_mali_vars() (compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.processbasalmelt method)": [[209, "compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.ProcessBasalMelt.rename_ismip6_basal_melt_to_mali_vars"]], "run() (compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.processbasalmelt method)": [[210, "compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.ProcessBasalMelt.run"]], "setup() (compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.processbasalmelt method)": [[211, "compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.ProcessBasalMelt.setup"]], "oceanthermal (class in compass.landice.tests.ismip6_forcing.ocean_thermal)": [[212, "compass.landice.tests.ismip6_forcing.ocean_thermal.OceanThermal"]], "__init__() (compass.landice.tests.ismip6_forcing.ocean_thermal.oceanthermal method)": [[212, "compass.landice.tests.ismip6_forcing.ocean_thermal.OceanThermal.__init__"]], "configure() (compass.landice.tests.ismip6_forcing.ocean_thermal.oceanthermal method)": [[213, "compass.landice.tests.ismip6_forcing.ocean_thermal.OceanThermal.configure"]], "processthermalforcing (class in compass.landice.tests.ismip6_forcing.ocean_thermal.process_thermal_forcing)": [[214, "compass.landice.tests.ismip6_forcing.ocean_thermal.process_thermal_forcing.ProcessThermalForcing"]], "__init__() (compass.landice.tests.ismip6_forcing.ocean_thermal.process_thermal_forcing.processthermalforcing method)": [[214, "compass.landice.tests.ismip6_forcing.ocean_thermal.process_thermal_forcing.ProcessThermalForcing.__init__"]], "remap_ismip6_thermal_forcing_to_mali_vars() (compass.landice.tests.ismip6_forcing.ocean_thermal.process_thermal_forcing.processthermalforcing method)": [[215, "compass.landice.tests.ismip6_forcing.ocean_thermal.process_thermal_forcing.ProcessThermalForcing.remap_ismip6_thermal_forcing_to_mali_vars"]], "rename_ismip6_thermal_forcing_to_mali_vars() (compass.landice.tests.ismip6_forcing.ocean_thermal.process_thermal_forcing.processthermalforcing method)": [[216, "compass.landice.tests.ismip6_forcing.ocean_thermal.process_thermal_forcing.ProcessThermalForcing.rename_ismip6_thermal_forcing_to_mali_vars"]], "run() (compass.landice.tests.ismip6_forcing.ocean_thermal.process_thermal_forcing.processthermalforcing method)": [[217, "compass.landice.tests.ismip6_forcing.ocean_thermal.process_thermal_forcing.ProcessThermalForcing.run"]], "setup() (compass.landice.tests.ismip6_forcing.ocean_thermal.process_thermal_forcing.processthermalforcing method)": [[218, "compass.landice.tests.ismip6_forcing.ocean_thermal.process_thermal_forcing.ProcessThermalForcing.setup"]], "kangerlussuaq (class in compass.landice.tests.kangerlussuaq)": [[219, "compass.landice.tests.kangerlussuaq.Kangerlussuaq"]], "__init__() (compass.landice.tests.kangerlussuaq.kangerlussuaq method)": [[219, "compass.landice.tests.kangerlussuaq.Kangerlussuaq.__init__"]], "mesh (class in compass.landice.tests.kangerlussuaq.mesh)": [[220, "compass.landice.tests.kangerlussuaq.mesh.Mesh"]], "__init__() (compass.landice.tests.kangerlussuaq.mesh.mesh method)": [[220, "compass.landice.tests.kangerlussuaq.mesh.Mesh.__init__"]], "run() (compass.landice.tests.kangerlussuaq.mesh.mesh method)": [[221, "compass.landice.tests.kangerlussuaq.mesh.Mesh.run"]], "meshgen (class in compass.landice.tests.kangerlussuaq.mesh_gen)": [[222, "compass.landice.tests.kangerlussuaq.mesh_gen.MeshGen"]], "__init__() (compass.landice.tests.kangerlussuaq.mesh_gen.meshgen method)": [[222, "compass.landice.tests.kangerlussuaq.mesh_gen.MeshGen.__init__"]], "run() (compass.landice.tests.kangerlussuaq.mesh_gen.meshgen method)": [[223, "compass.landice.tests.kangerlussuaq.mesh_gen.MeshGen.run"]], "kogebugts (class in compass.landice.tests.koge_bugt_s)": [[224, "compass.landice.tests.koge_bugt_s.KogeBugtS"]], "__init__() (compass.landice.tests.koge_bugt_s.kogebugts method)": [[224, "compass.landice.tests.koge_bugt_s.KogeBugtS.__init__"]], "mesh (class in compass.landice.tests.koge_bugt_s.mesh)": [[225, "compass.landice.tests.koge_bugt_s.mesh.Mesh"]], "__init__() (compass.landice.tests.koge_bugt_s.mesh.mesh method)": [[225, "compass.landice.tests.koge_bugt_s.mesh.Mesh.__init__"]], "run() (compass.landice.tests.koge_bugt_s.mesh.mesh method)": [[226, "compass.landice.tests.koge_bugt_s.mesh.Mesh.run"]], "meshgen (class in compass.landice.tests.koge_bugt_s.mesh_gen)": [[227, "compass.landice.tests.koge_bugt_s.mesh_gen.MeshGen"]], "__init__() (compass.landice.tests.koge_bugt_s.mesh_gen.meshgen method)": [[227, "compass.landice.tests.koge_bugt_s.mesh_gen.MeshGen.__init__"]], "run() (compass.landice.tests.koge_bugt_s.mesh_gen.meshgen method)": [[228, "compass.landice.tests.koge_bugt_s.mesh_gen.MeshGen.run"]], "mismipplus (class in compass.landice.tests.mismipplus)": [[229, "compass.landice.tests.mismipplus.MISMIPplus"]], "__init__() (compass.landice.tests.mismipplus.mismipplus method)": [[229, "compass.landice.tests.mismipplus.MISMIPplus.__init__"]], "runmodel (class in compass.landice.tests.mismipplus.run_model)": [[230, "compass.landice.tests.mismipplus.run_model.RunModel"]], "__init__() (compass.landice.tests.mismipplus.run_model.runmodel method)": [[230, "compass.landice.tests.mismipplus.run_model.RunModel.__init__"]], "run() (compass.landice.tests.mismipplus.run_model.runmodel method)": [[231, "compass.landice.tests.mismipplus.run_model.RunModel.run"]], "setup() (compass.landice.tests.mismipplus.run_model.runmodel method)": [[232, "compass.landice.tests.mismipplus.run_model.RunModel.setup"]], "smoketest (class in compass.landice.tests.mismipplus.smoke_test)": [[233, "compass.landice.tests.mismipplus.smoke_test.SmokeTest"]], "__init__() (compass.landice.tests.mismipplus.smoke_test.smoketest method)": [[233, "compass.landice.tests.mismipplus.smoke_test.SmokeTest.__init__"]], "run() (compass.landice.tests.mismipplus.smoke_test.smoketest method)": [[234, "compass.landice.tests.mismipplus.smoke_test.SmokeTest.run"]], "thwaites (class in compass.landice.tests.thwaites)": [[235, "compass.landice.tests.thwaites.Thwaites"]], "__init__() (compass.landice.tests.thwaites.thwaites method)": [[235, "compass.landice.tests.thwaites.Thwaites.__init__"]], "decompositiontest (class in compass.landice.tests.thwaites.decomposition_test)": [[236, "compass.landice.tests.thwaites.decomposition_test.DecompositionTest"]], "__init__() (compass.landice.tests.thwaites.decomposition_test.decompositiontest method)": [[236, "compass.landice.tests.thwaites.decomposition_test.DecompositionTest.__init__"]], "run() (compass.landice.tests.thwaites.decomposition_test.decompositiontest method)": [[237, "compass.landice.tests.thwaites.decomposition_test.DecompositionTest.run"]], "restarttest (class in compass.landice.tests.thwaites.restart_test)": [[238, "compass.landice.tests.thwaites.restart_test.RestartTest"]], "__init__() (compass.landice.tests.thwaites.restart_test.restarttest method)": [[238, "compass.landice.tests.thwaites.restart_test.RestartTest.__init__"]], "run() (compass.landice.tests.thwaites.restart_test.restarttest method)": [[239, "compass.landice.tests.thwaites.restart_test.RestartTest.run"]], "runmodel (class in compass.landice.tests.thwaites.run_model)": [[240, "compass.landice.tests.thwaites.run_model.RunModel"]], "__init__() (compass.landice.tests.thwaites.run_model.runmodel method)": [[240, "compass.landice.tests.thwaites.run_model.RunModel.__init__"]], "run() (compass.landice.tests.thwaites.run_model.runmodel method)": [[241, "compass.landice.tests.thwaites.run_model.RunModel.run"]], "setup() (compass.landice.tests.thwaites.run_model.runmodel method)": [[242, "compass.landice.tests.thwaites.run_model.RunModel.setup"]], "ocean (class in compass.ocean)": [[266, "compass.ocean.Ocean"]], "__init__() (compass.ocean.ocean method)": [[266, "compass.ocean.Ocean.__init__"]], "compute_haney_number() (in module compass.ocean.haney)": [[267, "compass.ocean.haney.compute_haney_number"]], "adjust_ssh() (in module compass.ocean.iceshelf)": [[268, "compass.ocean.iceshelf.adjust_ssh"]], "compute_land_ice_pressure_and_draft() (in module compass.ocean.iceshelf)": [[269, "compass.ocean.iceshelf.compute_land_ice_pressure_and_draft"]], "cullmeshstep (class in compass.ocean.mesh.cull)": [[270, "compass.ocean.mesh.cull.CullMeshStep"]], "__init__() (compass.ocean.mesh.cull.cullmeshstep method)": [[270, "compass.ocean.mesh.cull.CullMeshStep.__init__"]], "run() (compass.ocean.mesh.cull.cullmeshstep method)": [[271, "compass.ocean.mesh.cull.CullMeshStep.run"]], "setup() (compass.ocean.mesh.cull.cullmeshstep method)": [[272, "compass.ocean.mesh.cull.CullMeshStep.setup"]], "cull_mesh() (in module compass.ocean.mesh.cull)": [[273, "compass.ocean.mesh.cull.cull_mesh"]], "floodplainmeshstep (class in compass.ocean.mesh.floodplain)": [[274, "compass.ocean.mesh.floodplain.FloodplainMeshStep"]], "__init__() (compass.ocean.mesh.floodplain.floodplainmeshstep method)": [[274, "compass.ocean.mesh.floodplain.FloodplainMeshStep.__init__"]], "run() (compass.ocean.mesh.floodplain.floodplainmeshstep method)": [[275, "compass.ocean.mesh.floodplain.FloodplainMeshStep.run"]], "remap_particles() (in module compass.ocean.particles)": [[276, "compass.ocean.particles.remap_particles"]], "write() (in module compass.ocean.particles)": [[277, "compass.ocean.particles.write"]], "plot_initial_state() (in module compass.ocean.plot)": [[278, "compass.ocean.plot.plot_initial_state"]], "plot_vertical_grid() (in module compass.ocean.plot)": [[279, "compass.ocean.plot.plot_vertical_grid"]], "baroclinicchannel (class in compass.ocean.tests.baroclinic_channel)": [[280, "compass.ocean.tests.baroclinic_channel.BaroclinicChannel"]], "__init__() (compass.ocean.tests.baroclinic_channel.baroclinicchannel method)": [[280, "compass.ocean.tests.baroclinic_channel.BaroclinicChannel.__init__"]], "configure() (in module compass.ocean.tests.baroclinic_channel)": [[281, "compass.ocean.tests.baroclinic_channel.configure"]], "decomptest (class in compass.ocean.tests.baroclinic_channel.decomp_test)": [[282, "compass.ocean.tests.baroclinic_channel.decomp_test.DecompTest"]], "__init__() (compass.ocean.tests.baroclinic_channel.decomp_test.decomptest method)": [[282, "compass.ocean.tests.baroclinic_channel.decomp_test.DecompTest.__init__"]], "configure() (compass.ocean.tests.baroclinic_channel.decomp_test.decomptest method)": [[283, "compass.ocean.tests.baroclinic_channel.decomp_test.DecompTest.configure"]], "run() (compass.ocean.tests.baroclinic_channel.decomp_test.decomptest method)": [[284, "compass.ocean.tests.baroclinic_channel.decomp_test.DecompTest.run"]], "default (class in compass.ocean.tests.baroclinic_channel.default)": [[285, "compass.ocean.tests.baroclinic_channel.default.Default"]], "__init__() (compass.ocean.tests.baroclinic_channel.default.default method)": [[285, "compass.ocean.tests.baroclinic_channel.default.Default.__init__"]], "configure() (compass.ocean.tests.baroclinic_channel.default.default method)": [[286, "compass.ocean.tests.baroclinic_channel.default.Default.configure"]], "run() (compass.ocean.tests.baroclinic_channel.default.default method)": [[287, "compass.ocean.tests.baroclinic_channel.default.Default.run"]], "forward (class in compass.ocean.tests.baroclinic_channel.forward)": [[288, "compass.ocean.tests.baroclinic_channel.forward.Forward"]], "__init__() (compass.ocean.tests.baroclinic_channel.forward.forward method)": [[288, "compass.ocean.tests.baroclinic_channel.forward.Forward.__init__"]], "run() (compass.ocean.tests.baroclinic_channel.forward.forward method)": [[289, "compass.ocean.tests.baroclinic_channel.forward.Forward.run"]], "setup() (compass.ocean.tests.baroclinic_channel.forward.forward method)": [[290, "compass.ocean.tests.baroclinic_channel.forward.Forward.setup"]], "initialstate (class in compass.ocean.tests.baroclinic_channel.initial_state)": [[291, "compass.ocean.tests.baroclinic_channel.initial_state.InitialState"]], "__init__() (compass.ocean.tests.baroclinic_channel.initial_state.initialstate method)": [[291, "compass.ocean.tests.baroclinic_channel.initial_state.InitialState.__init__"]], "run() (compass.ocean.tests.baroclinic_channel.initial_state.initialstate method)": [[292, "compass.ocean.tests.baroclinic_channel.initial_state.InitialState.run"]], "setup() (compass.ocean.tests.baroclinic_channel.initial_state.initialstate method)": [[293, "compass.ocean.tests.baroclinic_channel.initial_state.InitialState.setup"]], "restarttest (class in compass.ocean.tests.baroclinic_channel.restart_test)": [[294, "compass.ocean.tests.baroclinic_channel.restart_test.RestartTest"]], "__init__() (compass.ocean.tests.baroclinic_channel.restart_test.restarttest method)": [[294, "compass.ocean.tests.baroclinic_channel.restart_test.RestartTest.__init__"]], "configure() (compass.ocean.tests.baroclinic_channel.restart_test.restarttest method)": [[295, "compass.ocean.tests.baroclinic_channel.restart_test.RestartTest.configure"]], "run() (compass.ocean.tests.baroclinic_channel.restart_test.restarttest method)": [[296, "compass.ocean.tests.baroclinic_channel.restart_test.RestartTest.run"]], "rpetest (class in compass.ocean.tests.baroclinic_channel.rpe_test)": [[297, "compass.ocean.tests.baroclinic_channel.rpe_test.RpeTest"]], "__init__() (compass.ocean.tests.baroclinic_channel.rpe_test.rpetest method)": [[297, "compass.ocean.tests.baroclinic_channel.rpe_test.RpeTest.__init__"]], "configure() (compass.ocean.tests.baroclinic_channel.rpe_test.rpetest method)": [[298, "compass.ocean.tests.baroclinic_channel.rpe_test.RpeTest.configure"]], "run() (compass.ocean.tests.baroclinic_channel.rpe_test.rpetest method)": [[299, "compass.ocean.tests.baroclinic_channel.rpe_test.RpeTest.run"]], "analysis (class in compass.ocean.tests.baroclinic_channel.rpe_test.analysis)": [[300, "compass.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis"]], "__init__() (compass.ocean.tests.baroclinic_channel.rpe_test.analysis.analysis method)": [[300, "compass.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.__init__"]], "run() (compass.ocean.tests.baroclinic_channel.rpe_test.analysis.analysis method)": [[301, "compass.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.run"]], "setup() (compass.ocean.tests.baroclinic_channel.rpe_test.analysis.analysis method)": [[302, "compass.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.setup"]], "threadstest (class in compass.ocean.tests.baroclinic_channel.threads_test)": [[303, "compass.ocean.tests.baroclinic_channel.threads_test.ThreadsTest"]], "__init__() (compass.ocean.tests.baroclinic_channel.threads_test.threadstest method)": [[303, "compass.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.__init__"]], "configure() (compass.ocean.tests.baroclinic_channel.threads_test.threadstest method)": [[304, "compass.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.configure"]], "run() (compass.ocean.tests.baroclinic_channel.threads_test.threadstest method)": [[305, "compass.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.run"]], "dambreak (class in compass.ocean.tests.dam_break)": [[306, "compass.ocean.tests.dam_break.DamBreak"]], "__init__() (compass.ocean.tests.dam_break.dambreak method)": [[306, "compass.ocean.tests.dam_break.DamBreak.__init__"]], "default (class in compass.ocean.tests.dam_break.default)": [[307, "compass.ocean.tests.dam_break.default.Default"]], "__init__() (compass.ocean.tests.dam_break.default.default method)": [[307, "compass.ocean.tests.dam_break.default.Default.__init__"]], "configure() (compass.ocean.tests.dam_break.default.default method)": [[308, "compass.ocean.tests.dam_break.default.Default.configure"]], "forward (class in compass.ocean.tests.dam_break.forward)": [[309, "compass.ocean.tests.dam_break.forward.Forward"]], "__init__() (compass.ocean.tests.dam_break.forward.forward method)": [[309, "compass.ocean.tests.dam_break.forward.Forward.__init__"]], "run() (compass.ocean.tests.dam_break.forward.forward method)": [[310, "compass.ocean.tests.dam_break.forward.Forward.run"]], "initialstate (class in compass.ocean.tests.dam_break.initial_state)": [[311, "compass.ocean.tests.dam_break.initial_state.InitialState"]], "__init__() (compass.ocean.tests.dam_break.initial_state.initialstate method)": [[311, "compass.ocean.tests.dam_break.initial_state.InitialState.__init__"]], "run() (compass.ocean.tests.dam_break.initial_state.initialstate method)": [[312, "compass.ocean.tests.dam_break.initial_state.InitialState.run"]], "viz (class in compass.ocean.tests.dam_break.viz)": [[313, "compass.ocean.tests.dam_break.viz.Viz"]], "__init__() (compass.ocean.tests.dam_break.viz.viz method)": [[313, "compass.ocean.tests.dam_break.viz.Viz.__init__"]], "run() (compass.ocean.tests.dam_break.viz.viz method)": [[314, "compass.ocean.tests.dam_break.viz.Viz.run"]], "dryingslope (class in compass.ocean.tests.drying_slope)": [[315, "compass.ocean.tests.drying_slope.DryingSlope"]], "__init__() (compass.ocean.tests.drying_slope.dryingslope method)": [[315, "compass.ocean.tests.drying_slope.DryingSlope.__init__"]], "default (class in compass.ocean.tests.drying_slope.default)": [[316, "compass.ocean.tests.drying_slope.default.Default"]], "__init__() (compass.ocean.tests.drying_slope.default.default method)": [[316, "compass.ocean.tests.drying_slope.default.Default.__init__"]], "configure() (compass.ocean.tests.drying_slope.default.default method)": [[317, "compass.ocean.tests.drying_slope.default.Default.configure"]], "forward (class in compass.ocean.tests.drying_slope.forward)": [[318, "compass.ocean.tests.drying_slope.forward.Forward"]], "__init__() (compass.ocean.tests.drying_slope.forward.forward method)": [[318, "compass.ocean.tests.drying_slope.forward.Forward.__init__"]], "run() (compass.ocean.tests.drying_slope.forward.forward method)": [[319, "compass.ocean.tests.drying_slope.forward.Forward.run"]], "initialstate (class in compass.ocean.tests.drying_slope.initial_state)": [[320, "compass.ocean.tests.drying_slope.initial_state.InitialState"]], "__init__() (compass.ocean.tests.drying_slope.initial_state.initialstate method)": [[320, "compass.ocean.tests.drying_slope.initial_state.InitialState.__init__"]], "run() (compass.ocean.tests.drying_slope.initial_state.initialstate method)": [[321, "compass.ocean.tests.drying_slope.initial_state.InitialState.run"]], "viz (class in compass.ocean.tests.drying_slope.viz)": [[322, "compass.ocean.tests.drying_slope.viz.Viz"]], "__init__() (compass.ocean.tests.drying_slope.viz.viz method)": [[322, "compass.ocean.tests.drying_slope.viz.Viz.__init__"]], "run() (compass.ocean.tests.drying_slope.viz.viz method)": [[323, "compass.ocean.tests.drying_slope.viz.Viz.run"]], "globalconvergence (class in compass.ocean.tests.global_convergence)": [[324, "compass.ocean.tests.global_convergence.GlobalConvergence"]], "__init__() (compass.ocean.tests.global_convergence.globalconvergence method)": [[324, "compass.ocean.tests.global_convergence.GlobalConvergence.__init__"]], "cosinebell (class in compass.ocean.tests.global_convergence.cosine_bell)": [[325, "compass.ocean.tests.global_convergence.cosine_bell.CosineBell"]], "__init__() (compass.ocean.tests.global_convergence.cosine_bell.cosinebell method)": [[325, "compass.ocean.tests.global_convergence.cosine_bell.CosineBell.__init__"]], "configure() (compass.ocean.tests.global_convergence.cosine_bell.cosinebell method)": [[326, "compass.ocean.tests.global_convergence.cosine_bell.CosineBell.configure"]], "run() (compass.ocean.tests.global_convergence.cosine_bell.cosinebell method)": [[327, "compass.ocean.tests.global_convergence.cosine_bell.CosineBell.run"]], "analysis (class in compass.ocean.tests.global_convergence.cosine_bell.analysis)": [[328, "compass.ocean.tests.global_convergence.cosine_bell.analysis.Analysis"]], "__init__() (compass.ocean.tests.global_convergence.cosine_bell.analysis.analysis method)": [[328, "compass.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.__init__"]], "rmse() (compass.ocean.tests.global_convergence.cosine_bell.analysis.analysis method)": [[329, "compass.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rmse"]], "run() (compass.ocean.tests.global_convergence.cosine_bell.analysis.analysis method)": [[330, "compass.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.run"]], "forward (class in compass.ocean.tests.global_convergence.cosine_bell.forward)": [[331, "compass.ocean.tests.global_convergence.cosine_bell.forward.Forward"]], "__init__() (compass.ocean.tests.global_convergence.cosine_bell.forward.forward method)": [[331, "compass.ocean.tests.global_convergence.cosine_bell.forward.Forward.__init__"]], "get_dt() (compass.ocean.tests.global_convergence.cosine_bell.forward.forward method)": [[332, "compass.ocean.tests.global_convergence.cosine_bell.forward.Forward.get_dt"]], "run() (compass.ocean.tests.global_convergence.cosine_bell.forward.forward method)": [[333, "compass.ocean.tests.global_convergence.cosine_bell.forward.Forward.run"]], "setup() (compass.ocean.tests.global_convergence.cosine_bell.forward.forward method)": [[334, "compass.ocean.tests.global_convergence.cosine_bell.forward.Forward.setup"]], "init (class in compass.ocean.tests.global_convergence.cosine_bell.init)": [[335, "compass.ocean.tests.global_convergence.cosine_bell.init.Init"]], "__init__() (compass.ocean.tests.global_convergence.cosine_bell.init.init method)": [[335, "compass.ocean.tests.global_convergence.cosine_bell.init.Init.__init__"]], "run() (compass.ocean.tests.global_convergence.cosine_bell.init.init method)": [[336, "compass.ocean.tests.global_convergence.cosine_bell.init.Init.run"]], "globalocean (class in compass.ocean.tests.global_ocean)": [[337, "compass.ocean.tests.global_ocean.GlobalOcean"]], "__init__() (compass.ocean.tests.global_ocean.globalocean method)": [[337, "compass.ocean.tests.global_ocean.GlobalOcean.__init__"]], "analysistest (class in compass.ocean.tests.global_ocean.analysis_test)": [[338, "compass.ocean.tests.global_ocean.analysis_test.AnalysisTest"]], "__init__() (compass.ocean.tests.global_ocean.analysis_test.analysistest method)": [[338, "compass.ocean.tests.global_ocean.analysis_test.AnalysisTest.__init__"]], "configure() (compass.ocean.tests.global_ocean.analysis_test.analysistest method)": [[339, "compass.ocean.tests.global_ocean.analysis_test.AnalysisTest.configure"]], "run() (compass.ocean.tests.global_ocean.analysis_test.analysistest method)": [[340, "compass.ocean.tests.global_ocean.analysis_test.AnalysisTest.run"]], "compass.ocean.tests.global_ocean.configure": [[341, "module-compass.ocean.tests.global_ocean.configure"]], "configure_global_ocean() (in module compass.ocean.tests.global_ocean.configure)": [[342, "compass.ocean.tests.global_ocean.configure.configure_global_ocean"]], "dailyoutputtest (class in compass.ocean.tests.global_ocean.daily_output_test)": [[343, "compass.ocean.tests.global_ocean.daily_output_test.DailyOutputTest"]], "__init__() (compass.ocean.tests.global_ocean.daily_output_test.dailyoutputtest method)": [[343, "compass.ocean.tests.global_ocean.daily_output_test.DailyOutputTest.__init__"]], "configure() (compass.ocean.tests.global_ocean.daily_output_test.dailyoutputtest method)": [[344, "compass.ocean.tests.global_ocean.daily_output_test.DailyOutputTest.configure"]], "run() (compass.ocean.tests.global_ocean.daily_output_test.dailyoutputtest method)": [[345, "compass.ocean.tests.global_ocean.daily_output_test.DailyOutputTest.run"]], "decomptest (class in compass.ocean.tests.global_ocean.decomp_test)": [[346, "compass.ocean.tests.global_ocean.decomp_test.DecompTest"]], "__init__() (compass.ocean.tests.global_ocean.decomp_test.decomptest method)": [[346, "compass.ocean.tests.global_ocean.decomp_test.DecompTest.__init__"]], "configure() (compass.ocean.tests.global_ocean.decomp_test.decomptest method)": [[347, "compass.ocean.tests.global_ocean.decomp_test.DecompTest.configure"]], "run() (compass.ocean.tests.global_ocean.decomp_test.decomptest method)": [[348, "compass.ocean.tests.global_ocean.decomp_test.DecompTest.run"]], "dynamicadjustment (class in compass.ocean.tests.global_ocean.dynamic_adjustment)": [[349, "compass.ocean.tests.global_ocean.dynamic_adjustment.DynamicAdjustment"]], "__init__() (compass.ocean.tests.global_ocean.dynamic_adjustment.dynamicadjustment method)": [[349, "compass.ocean.tests.global_ocean.dynamic_adjustment.DynamicAdjustment.__init__"]], "run() (compass.ocean.tests.global_ocean.dynamic_adjustment.dynamicadjustment method)": [[350, "compass.ocean.tests.global_ocean.dynamic_adjustment.DynamicAdjustment.run"]], "filesfore3sm (class in compass.ocean.tests.global_ocean.files_for_e3sm)": [[351, "compass.ocean.tests.global_ocean.files_for_e3sm.FilesForE3SM"]], "__init__() (compass.ocean.tests.global_ocean.files_for_e3sm.filesfore3sm method)": [[351, "compass.ocean.tests.global_ocean.files_for_e3sm.FilesForE3SM.__init__"]], "configure() (compass.ocean.tests.global_ocean.files_for_e3sm.filesfore3sm method)": [[352, "compass.ocean.tests.global_ocean.files_for_e3sm.FilesForE3SM.configure"]], "run() (compass.ocean.tests.global_ocean.files_for_e3sm.filesfore3sm method)": [[353, "compass.ocean.tests.global_ocean.files_for_e3sm.FilesForE3SM.run"]], "diagnosticsfiles (class in compass.ocean.tests.global_ocean.files_for_e3sm.diagnostics_files)": [[354, "compass.ocean.tests.global_ocean.files_for_e3sm.diagnostics_files.DiagnosticsFiles"]], "__init__() (compass.ocean.tests.global_ocean.files_for_e3sm.diagnostics_files.diagnosticsfiles method)": [[354, "compass.ocean.tests.global_ocean.files_for_e3sm.diagnostics_files.DiagnosticsFiles.__init__"]], "run() (compass.ocean.tests.global_ocean.files_for_e3sm.diagnostics_files.diagnosticsfiles method)": [[355, "compass.ocean.tests.global_ocean.files_for_e3sm.diagnostics_files.DiagnosticsFiles.run"]], "oceangraphpartition (class in compass.ocean.tests.global_ocean.files_for_e3sm.ocean_graph_partition)": [[356, "compass.ocean.tests.global_ocean.files_for_e3sm.ocean_graph_partition.OceanGraphPartition"]], "__init__() (compass.ocean.tests.global_ocean.files_for_e3sm.ocean_graph_partition.oceangraphpartition method)": [[356, "compass.ocean.tests.global_ocean.files_for_e3sm.ocean_graph_partition.OceanGraphPartition.__init__"]], "run() (compass.ocean.tests.global_ocean.files_for_e3sm.ocean_graph_partition.oceangraphpartition method)": [[357, "compass.ocean.tests.global_ocean.files_for_e3sm.ocean_graph_partition.OceanGraphPartition.run"]], "oceaninitialcondition (class in compass.ocean.tests.global_ocean.files_for_e3sm.ocean_initial_condition)": [[358, "compass.ocean.tests.global_ocean.files_for_e3sm.ocean_initial_condition.OceanInitialCondition"]], "__init__() (compass.ocean.tests.global_ocean.files_for_e3sm.ocean_initial_condition.oceaninitialcondition method)": [[358, "compass.ocean.tests.global_ocean.files_for_e3sm.ocean_initial_condition.OceanInitialCondition.__init__"]], "run() (compass.ocean.tests.global_ocean.files_for_e3sm.ocean_initial_condition.oceaninitialcondition method)": [[359, "compass.ocean.tests.global_ocean.files_for_e3sm.ocean_initial_condition.OceanInitialCondition.run"]], "scrip (class in compass.ocean.tests.global_ocean.files_for_e3sm.scrip)": [[360, "compass.ocean.tests.global_ocean.files_for_e3sm.scrip.Scrip"]], "__init__() (compass.ocean.tests.global_ocean.files_for_e3sm.scrip.scrip method)": [[360, "compass.ocean.tests.global_ocean.files_for_e3sm.scrip.Scrip.__init__"]], "run() (compass.ocean.tests.global_ocean.files_for_e3sm.scrip.scrip method)": [[361, "compass.ocean.tests.global_ocean.files_for_e3sm.scrip.Scrip.run"]], "seaiceinitialcondition (class in compass.ocean.tests.global_ocean.files_for_e3sm.seaice_initial_condition)": [[362, "compass.ocean.tests.global_ocean.files_for_e3sm.seaice_initial_condition.SeaiceInitialCondition"]], "__init__() (compass.ocean.tests.global_ocean.files_for_e3sm.seaice_initial_condition.seaiceinitialcondition method)": [[362, "compass.ocean.tests.global_ocean.files_for_e3sm.seaice_initial_condition.SeaiceInitialCondition.__init__"]], "run() (compass.ocean.tests.global_ocean.files_for_e3sm.seaice_initial_condition.seaiceinitialcondition method)": [[363, "compass.ocean.tests.global_ocean.files_for_e3sm.seaice_initial_condition.SeaiceInitialCondition.run"]], "forwardstep (class in compass.ocean.tests.global_ocean.forward)": [[364, "compass.ocean.tests.global_ocean.forward.ForwardStep"]], "__init__() (compass.ocean.tests.global_ocean.forward.forwardstep method)": [[364, "compass.ocean.tests.global_ocean.forward.ForwardStep.__init__"]], "run() (compass.ocean.tests.global_ocean.forward.forwardstep method)": [[365, "compass.ocean.tests.global_ocean.forward.ForwardStep.run"]], "setup() (compass.ocean.tests.global_ocean.forward.forwardstep method)": [[366, "compass.ocean.tests.global_ocean.forward.ForwardStep.setup"]], "forwardtestcase (class in compass.ocean.tests.global_ocean.forward)": [[367, "compass.ocean.tests.global_ocean.forward.ForwardTestCase"]], "__init__() (compass.ocean.tests.global_ocean.forward.forwardtestcase method)": [[367, "compass.ocean.tests.global_ocean.forward.ForwardTestCase.__init__"]], "configure() (compass.ocean.tests.global_ocean.forward.forwardtestcase method)": [[368, "compass.ocean.tests.global_ocean.forward.ForwardTestCase.configure"]], "run() (compass.ocean.tests.global_ocean.forward.forwardtestcase method)": [[369, "compass.ocean.tests.global_ocean.forward.ForwardTestCase.run"]], "init (class in compass.ocean.tests.global_ocean.init)": [[370, "compass.ocean.tests.global_ocean.init.Init"]], "__init__() (compass.ocean.tests.global_ocean.init.init method)": [[370, "compass.ocean.tests.global_ocean.init.Init.__init__"]], "configure() (compass.ocean.tests.global_ocean.init.init method)": [[371, "compass.ocean.tests.global_ocean.init.Init.configure"]], "run() (compass.ocean.tests.global_ocean.init.init method)": [[372, "compass.ocean.tests.global_ocean.init.Init.run"]], "initialstate (class in compass.ocean.tests.global_ocean.init.initial_state)": [[373, "compass.ocean.tests.global_ocean.init.initial_state.InitialState"]], "__init__() (compass.ocean.tests.global_ocean.init.initial_state.initialstate method)": [[373, "compass.ocean.tests.global_ocean.init.initial_state.InitialState.__init__"]], "run() (compass.ocean.tests.global_ocean.init.initial_state.initialstate method)": [[374, "compass.ocean.tests.global_ocean.init.initial_state.InitialState.run"]], "setup() (compass.ocean.tests.global_ocean.init.initial_state.initialstate method)": [[375, "compass.ocean.tests.global_ocean.init.initial_state.InitialState.setup"]], "sshadjustment (class in compass.ocean.tests.global_ocean.init.ssh_adjustment)": [[376, "compass.ocean.tests.global_ocean.init.ssh_adjustment.SshAdjustment"]], "__init__() (compass.ocean.tests.global_ocean.init.ssh_adjustment.sshadjustment method)": [[376, "compass.ocean.tests.global_ocean.init.ssh_adjustment.SshAdjustment.__init__"]], "run() (compass.ocean.tests.global_ocean.init.ssh_adjustment.sshadjustment method)": [[377, "compass.ocean.tests.global_ocean.init.ssh_adjustment.SshAdjustment.run"]], "setup() (compass.ocean.tests.global_ocean.init.ssh_adjustment.sshadjustment method)": [[378, "compass.ocean.tests.global_ocean.init.ssh_adjustment.SshAdjustment.setup"]], "mesh (class in compass.ocean.tests.global_ocean.mesh)": [[379, "compass.ocean.tests.global_ocean.mesh.Mesh"]], "__init__() (compass.ocean.tests.global_ocean.mesh.mesh method)": [[379, "compass.ocean.tests.global_ocean.mesh.Mesh.__init__"]], "configure() (compass.ocean.tests.global_ocean.mesh.mesh method)": [[380, "compass.ocean.tests.global_ocean.mesh.Mesh.configure"]], "run() (compass.ocean.tests.global_ocean.mesh.mesh method)": [[381, "compass.ocean.tests.global_ocean.mesh.Mesh.run"]], "ec30to60basemesh (class in compass.ocean.tests.global_ocean.mesh.ec30to60)": [[382, "compass.ocean.tests.global_ocean.mesh.ec30to60.EC30to60BaseMesh"]], "__init__() (compass.ocean.tests.global_ocean.mesh.ec30to60.ec30to60basemesh method)": [[382, "compass.ocean.tests.global_ocean.mesh.ec30to60.EC30to60BaseMesh.__init__"]], "build_cell_width_lat_lon() (compass.ocean.tests.global_ocean.mesh.ec30to60.ec30to60basemesh method)": [[383, "compass.ocean.tests.global_ocean.mesh.ec30to60.EC30to60BaseMesh.build_cell_width_lat_lon"]], "ec30to60dynamicadjustment (class in compass.ocean.tests.global_ocean.mesh.ec30to60.dynamic_adjustment)": [[384, "compass.ocean.tests.global_ocean.mesh.ec30to60.dynamic_adjustment.EC30to60DynamicAdjustment"]], "__init__() (compass.ocean.tests.global_ocean.mesh.ec30to60.dynamic_adjustment.ec30to60dynamicadjustment method)": [[384, "compass.ocean.tests.global_ocean.mesh.ec30to60.dynamic_adjustment.EC30to60DynamicAdjustment.__init__"]], "configure() (compass.ocean.tests.global_ocean.mesh.ec30to60.dynamic_adjustment.ec30to60dynamicadjustment method)": [[385, "compass.ocean.tests.global_ocean.mesh.ec30to60.dynamic_adjustment.EC30to60DynamicAdjustment.configure"]], "run() (compass.ocean.tests.global_ocean.mesh.ec30to60.dynamic_adjustment.ec30to60dynamicadjustment method)": [[386, "compass.ocean.tests.global_ocean.mesh.ec30to60.dynamic_adjustment.EC30to60DynamicAdjustment.run"]], "qu240dynamicadjustment (class in compass.ocean.tests.global_ocean.mesh.qu240.dynamic_adjustment)": [[387, "compass.ocean.tests.global_ocean.mesh.qu240.dynamic_adjustment.QU240DynamicAdjustment"]], "__init__() (compass.ocean.tests.global_ocean.mesh.qu240.dynamic_adjustment.qu240dynamicadjustment method)": [[387, "compass.ocean.tests.global_ocean.mesh.qu240.dynamic_adjustment.QU240DynamicAdjustment.__init__"]], "configure() (compass.ocean.tests.global_ocean.mesh.qu240.dynamic_adjustment.qu240dynamicadjustment method)": [[388, "compass.ocean.tests.global_ocean.mesh.qu240.dynamic_adjustment.QU240DynamicAdjustment.configure"]], "run() (compass.ocean.tests.global_ocean.mesh.qu240.dynamic_adjustment.qu240dynamicadjustment method)": [[389, "compass.ocean.tests.global_ocean.mesh.qu240.dynamic_adjustment.QU240DynamicAdjustment.run"]], "so12to60basemesh (class in compass.ocean.tests.global_ocean.mesh.so12to60)": [[390, "compass.ocean.tests.global_ocean.mesh.so12to60.SO12to60BaseMesh"]], "__init__() (compass.ocean.tests.global_ocean.mesh.so12to60.so12to60basemesh method)": [[390, "compass.ocean.tests.global_ocean.mesh.so12to60.SO12to60BaseMesh.__init__"]], "build_cell_width_lat_lon() (compass.ocean.tests.global_ocean.mesh.so12to60.so12to60basemesh method)": [[391, "compass.ocean.tests.global_ocean.mesh.so12to60.SO12to60BaseMesh.build_cell_width_lat_lon"]], "so12to60dynamicadjustment (class in compass.ocean.tests.global_ocean.mesh.so12to60.dynamic_adjustment)": [[392, "compass.ocean.tests.global_ocean.mesh.so12to60.dynamic_adjustment.SO12to60DynamicAdjustment"]], "__init__() (compass.ocean.tests.global_ocean.mesh.so12to60.dynamic_adjustment.so12to60dynamicadjustment method)": [[392, "compass.ocean.tests.global_ocean.mesh.so12to60.dynamic_adjustment.SO12to60DynamicAdjustment.__init__"]], "configure() (compass.ocean.tests.global_ocean.mesh.so12to60.dynamic_adjustment.so12to60dynamicadjustment method)": [[393, "compass.ocean.tests.global_ocean.mesh.so12to60.dynamic_adjustment.SO12to60DynamicAdjustment.configure"]], "run() (compass.ocean.tests.global_ocean.mesh.so12to60.dynamic_adjustment.so12to60dynamicadjustment method)": [[394, "compass.ocean.tests.global_ocean.mesh.so12to60.dynamic_adjustment.SO12to60DynamicAdjustment.run"]], "wc14basemesh (class in compass.ocean.tests.global_ocean.mesh.wc14)": [[395, "compass.ocean.tests.global_ocean.mesh.wc14.WC14BaseMesh"]], "__init__() (compass.ocean.tests.global_ocean.mesh.wc14.wc14basemesh method)": [[395, "compass.ocean.tests.global_ocean.mesh.wc14.WC14BaseMesh.__init__"]], "build_cell_width_lat_lon() (compass.ocean.tests.global_ocean.mesh.wc14.wc14basemesh method)": [[396, "compass.ocean.tests.global_ocean.mesh.wc14.WC14BaseMesh.build_cell_width_lat_lon"]], "wc14dynamicadjustment (class in compass.ocean.tests.global_ocean.mesh.wc14.dynamic_adjustment)": [[397, "compass.ocean.tests.global_ocean.mesh.wc14.dynamic_adjustment.WC14DynamicAdjustment"]], "__init__() (compass.ocean.tests.global_ocean.mesh.wc14.dynamic_adjustment.wc14dynamicadjustment method)": [[397, "compass.ocean.tests.global_ocean.mesh.wc14.dynamic_adjustment.WC14DynamicAdjustment.__init__"]], "configure() (compass.ocean.tests.global_ocean.mesh.wc14.dynamic_adjustment.wc14dynamicadjustment method)": [[398, "compass.ocean.tests.global_ocean.mesh.wc14.dynamic_adjustment.WC14DynamicAdjustment.configure"]], "run() (compass.ocean.tests.global_ocean.mesh.wc14.dynamic_adjustment.wc14dynamicadjustment method)": [[399, "compass.ocean.tests.global_ocean.mesh.wc14.dynamic_adjustment.WC14DynamicAdjustment.run"]], "add_mesh_and_init_metadata() (in module compass.ocean.tests.global_ocean.metadata)": [[400, "compass.ocean.tests.global_ocean.metadata.add_mesh_and_init_metadata"]], "get_e3sm_mesh_names() (in module compass.ocean.tests.global_ocean.metadata)": [[401, "compass.ocean.tests.global_ocean.metadata.get_e3sm_mesh_names"]], "performancetest (class in compass.ocean.tests.global_ocean.performance_test)": [[402, "compass.ocean.tests.global_ocean.performance_test.PerformanceTest"]], "__init__() (compass.ocean.tests.global_ocean.performance_test.performancetest method)": [[402, "compass.ocean.tests.global_ocean.performance_test.PerformanceTest.__init__"]], "configure() (compass.ocean.tests.global_ocean.performance_test.performancetest method)": [[403, "compass.ocean.tests.global_ocean.performance_test.PerformanceTest.configure"]], "run() (compass.ocean.tests.global_ocean.performance_test.performancetest method)": [[404, "compass.ocean.tests.global_ocean.performance_test.PerformanceTest.run"]], "restarttest (class in compass.ocean.tests.global_ocean.restart_test)": [[405, "compass.ocean.tests.global_ocean.restart_test.RestartTest"]], "__init__() (compass.ocean.tests.global_ocean.restart_test.restarttest method)": [[405, "compass.ocean.tests.global_ocean.restart_test.RestartTest.__init__"]], "configure() (compass.ocean.tests.global_ocean.restart_test.restarttest method)": [[406, "compass.ocean.tests.global_ocean.restart_test.RestartTest.configure"]], "run() (compass.ocean.tests.global_ocean.restart_test.restarttest method)": [[407, "compass.ocean.tests.global_ocean.restart_test.RestartTest.run"]], "threadstest (class in compass.ocean.tests.global_ocean.threads_test)": [[408, "compass.ocean.tests.global_ocean.threads_test.ThreadsTest"]], "__init__() (compass.ocean.tests.global_ocean.threads_test.threadstest method)": [[408, "compass.ocean.tests.global_ocean.threads_test.ThreadsTest.__init__"]], "configure() (compass.ocean.tests.global_ocean.threads_test.threadstest method)": [[409, "compass.ocean.tests.global_ocean.threads_test.ThreadsTest.configure"]], "run() (compass.ocean.tests.global_ocean.threads_test.threadstest method)": [[410, "compass.ocean.tests.global_ocean.threads_test.ThreadsTest.run"]], "gotm (class in compass.ocean.tests.gotm)": [[411, "compass.ocean.tests.gotm.Gotm"]], "__init__() (compass.ocean.tests.gotm.gotm method)": [[411, "compass.ocean.tests.gotm.Gotm.__init__"]], "default (class in compass.ocean.tests.gotm.default)": [[412, "compass.ocean.tests.gotm.default.Default"]], "__init__() (compass.ocean.tests.gotm.default.default method)": [[412, "compass.ocean.tests.gotm.default.Default.__init__"]], "validate() (compass.ocean.tests.gotm.default.default method)": [[413, "compass.ocean.tests.gotm.default.Default.validate"]], "analysis (class in compass.ocean.tests.gotm.default.analysis)": [[414, "compass.ocean.tests.gotm.default.analysis.Analysis"]], "__init__() (compass.ocean.tests.gotm.default.analysis.analysis method)": [[414, "compass.ocean.tests.gotm.default.analysis.Analysis.__init__"]], "run() (compass.ocean.tests.gotm.default.analysis.analysis method)": [[415, "compass.ocean.tests.gotm.default.analysis.Analysis.run"]], "forward (class in compass.ocean.tests.gotm.default.forward)": [[416, "compass.ocean.tests.gotm.default.forward.Forward"]], "__init__() (compass.ocean.tests.gotm.default.forward.forward method)": [[416, "compass.ocean.tests.gotm.default.forward.Forward.__init__"]], "run() (compass.ocean.tests.gotm.default.forward.forward method)": [[417, "compass.ocean.tests.gotm.default.forward.Forward.run"]], "init (class in compass.ocean.tests.gotm.default.init)": [[418, "compass.ocean.tests.gotm.default.init.Init"]], "__init__() (compass.ocean.tests.gotm.default.init.init method)": [[418, "compass.ocean.tests.gotm.default.init.Init.__init__"]], "run() (compass.ocean.tests.gotm.default.init.init method)": [[419, "compass.ocean.tests.gotm.default.init.Init.run"]], "hurricane (class in compass.ocean.tests.hurricane)": [[420, "compass.ocean.tests.hurricane.Hurricane"]], "__init__() (compass.ocean.tests.hurricane.hurricane method)": [[420, "compass.ocean.tests.hurricane.Hurricane.__init__"]], "analysis (class in compass.ocean.tests.hurricane.analysis)": [[421, "compass.ocean.tests.hurricane.analysis.Analysis"]], "__init__() (compass.ocean.tests.hurricane.analysis.analysis method)": [[421, "compass.ocean.tests.hurricane.analysis.Analysis.__init__"]], "read_pointstats() (compass.ocean.tests.hurricane.analysis.analysis method)": [[422, "compass.ocean.tests.hurricane.analysis.Analysis.read_pointstats"]], "read_station_data() (compass.ocean.tests.hurricane.analysis.analysis method)": [[423, "compass.ocean.tests.hurricane.analysis.Analysis.read_station_data"]], "read_station_file() (compass.ocean.tests.hurricane.analysis.analysis method)": [[424, "compass.ocean.tests.hurricane.analysis.Analysis.read_station_file"]], "run() (compass.ocean.tests.hurricane.analysis.analysis method)": [[425, "compass.ocean.tests.hurricane.analysis.Analysis.run"]], "setup() (compass.ocean.tests.hurricane.analysis.analysis method)": [[426, "compass.ocean.tests.hurricane.analysis.Analysis.setup"]], "compass.ocean.tests.hurricane.configure": [[427, "module-compass.ocean.tests.hurricane.configure"]], "forward (class in compass.ocean.tests.hurricane.forward)": [[428, "compass.ocean.tests.hurricane.forward.Forward"]], "__init__() (compass.ocean.tests.hurricane.forward.forward method)": [[428, "compass.ocean.tests.hurricane.forward.Forward.__init__"]], "configure() (compass.ocean.tests.hurricane.forward.forward method)": [[429, "compass.ocean.tests.hurricane.forward.Forward.configure"]], "run() (compass.ocean.tests.hurricane.forward.forward method)": [[430, "compass.ocean.tests.hurricane.forward.Forward.run"]], "forwardstep (class in compass.ocean.tests.hurricane.forward.forward)": [[431, "compass.ocean.tests.hurricane.forward.forward.ForwardStep"]], "__init__() (compass.ocean.tests.hurricane.forward.forward.forwardstep method)": [[431, "compass.ocean.tests.hurricane.forward.forward.ForwardStep.__init__"]], "run() (compass.ocean.tests.hurricane.forward.forward.forwardstep method)": [[432, "compass.ocean.tests.hurricane.forward.forward.ForwardStep.run"]], "setup() (compass.ocean.tests.hurricane.forward.forward.forwardstep method)": [[433, "compass.ocean.tests.hurricane.forward.forward.ForwardStep.setup"]], "init (class in compass.ocean.tests.hurricane.init)": [[434, "compass.ocean.tests.hurricane.init.Init"]], "__init__() (compass.ocean.tests.hurricane.init.init method)": [[434, "compass.ocean.tests.hurricane.init.Init.__init__"]], "configure() (compass.ocean.tests.hurricane.init.init method)": [[435, "compass.ocean.tests.hurricane.init.Init.configure"]], "run() (compass.ocean.tests.hurricane.init.init method)": [[436, "compass.ocean.tests.hurricane.init.Init.run"]], "createpointstatsfile (class in compass.ocean.tests.hurricane.init.create_pointstats_file)": [[437, "compass.ocean.tests.hurricane.init.create_pointstats_file.CreatePointstatsFile"]], "__init__() (compass.ocean.tests.hurricane.init.create_pointstats_file.createpointstatsfile method)": [[437, "compass.ocean.tests.hurricane.init.create_pointstats_file.CreatePointstatsFile.__init__"]], "create_pointstats_file() (compass.ocean.tests.hurricane.init.create_pointstats_file.createpointstatsfile method)": [[438, "compass.ocean.tests.hurricane.init.create_pointstats_file.CreatePointstatsFile.create_pointstats_file"]], "run() (compass.ocean.tests.hurricane.init.create_pointstats_file.createpointstatsfile method)": [[439, "compass.ocean.tests.hurricane.init.create_pointstats_file.CreatePointstatsFile.run"]], "initialstate (class in compass.ocean.tests.hurricane.init.initial_state)": [[440, "compass.ocean.tests.hurricane.init.initial_state.InitialState"]], "__init__() (compass.ocean.tests.hurricane.init.initial_state.initialstate method)": [[440, "compass.ocean.tests.hurricane.init.initial_state.InitialState.__init__"]], "run() (compass.ocean.tests.hurricane.init.initial_state.initialstate method)": [[441, "compass.ocean.tests.hurricane.init.initial_state.InitialState.run"]], "setup() (compass.ocean.tests.hurricane.init.initial_state.initialstate method)": [[442, "compass.ocean.tests.hurricane.init.initial_state.InitialState.setup"]], "interpolateatmforcing (class in compass.ocean.tests.hurricane.init.interpolate_atm_forcing)": [[443, "compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing"]], "__init__() (compass.ocean.tests.hurricane.init.interpolate_atm_forcing.interpolateatmforcing method)": [[443, "compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing.__init__"]], "interpolate_data_to_grid() (compass.ocean.tests.hurricane.init.interpolate_atm_forcing.interpolateatmforcing method)": [[444, "compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing.interpolate_data_to_grid"]], "plot_interp_data() (compass.ocean.tests.hurricane.init.interpolate_atm_forcing.interpolateatmforcing method)": [[445, "compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing.plot_interp_data"]], "run() (compass.ocean.tests.hurricane.init.interpolate_atm_forcing.interpolateatmforcing method)": [[446, "compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing.run"]], "write_to_file() (compass.ocean.tests.hurricane.init.interpolate_atm_forcing.interpolateatmforcing method)": [[447, "compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing.write_to_file"]], "mesh (class in compass.ocean.tests.hurricane.mesh)": [[448, "compass.ocean.tests.hurricane.mesh.Mesh"]], "__init__() (compass.ocean.tests.hurricane.mesh.mesh method)": [[448, "compass.ocean.tests.hurricane.mesh.Mesh.__init__"]], "configure() (compass.ocean.tests.hurricane.mesh.mesh method)": [[449, "compass.ocean.tests.hurricane.mesh.Mesh.configure"]], "run() (compass.ocean.tests.hurricane.mesh.mesh method)": [[450, "compass.ocean.tests.hurricane.mesh.Mesh.run"]], "dequ120at30cr10rr2basemesh (class in compass.ocean.tests.hurricane.mesh.dequ120at30cr10rr2)": [[451, "compass.ocean.tests.hurricane.mesh.dequ120at30cr10rr2.DEQU120at30cr10rr2BaseMesh"]], "__init__() (compass.ocean.tests.hurricane.mesh.dequ120at30cr10rr2.dequ120at30cr10rr2basemesh method)": [[451, "compass.ocean.tests.hurricane.mesh.dequ120at30cr10rr2.DEQU120at30cr10rr2BaseMesh.__init__"]], "build_cell_width_lat_lon() (compass.ocean.tests.hurricane.mesh.dequ120at30cr10rr2.dequ120at30cr10rr2basemesh method)": [[452, "compass.ocean.tests.hurricane.mesh.dequ120at30cr10rr2.DEQU120at30cr10rr2BaseMesh.build_cell_width_lat_lon"]], "iceshelf2d (class in compass.ocean.tests.ice_shelf_2d)": [[453, "compass.ocean.tests.ice_shelf_2d.IceShelf2d"]], "__init__() (compass.ocean.tests.ice_shelf_2d.iceshelf2d method)": [[453, "compass.ocean.tests.ice_shelf_2d.IceShelf2d.__init__"]], "configure() (in module compass.ocean.tests.ice_shelf_2d)": [[454, "compass.ocean.tests.ice_shelf_2d.configure"]], "default (class in compass.ocean.tests.ice_shelf_2d.default)": [[455, "compass.ocean.tests.ice_shelf_2d.default.Default"]], "__init__() (compass.ocean.tests.ice_shelf_2d.default.default method)": [[455, "compass.ocean.tests.ice_shelf_2d.default.Default.__init__"]], "configure() (compass.ocean.tests.ice_shelf_2d.default.default method)": [[456, "compass.ocean.tests.ice_shelf_2d.default.Default.configure"]], "run() (compass.ocean.tests.ice_shelf_2d.default.default method)": [[457, "compass.ocean.tests.ice_shelf_2d.default.Default.run"]], "forward (class in compass.ocean.tests.ice_shelf_2d.forward)": [[458, "compass.ocean.tests.ice_shelf_2d.forward.Forward"]], "__init__() (compass.ocean.tests.ice_shelf_2d.forward.forward method)": [[458, "compass.ocean.tests.ice_shelf_2d.forward.Forward.__init__"]], "run() (compass.ocean.tests.ice_shelf_2d.forward.forward method)": [[459, "compass.ocean.tests.ice_shelf_2d.forward.Forward.run"]], "setup() (compass.ocean.tests.ice_shelf_2d.forward.forward method)": [[460, "compass.ocean.tests.ice_shelf_2d.forward.Forward.setup"]], "initialstate (class in compass.ocean.tests.ice_shelf_2d.initial_state)": [[461, "compass.ocean.tests.ice_shelf_2d.initial_state.InitialState"]], "__init__() (compass.ocean.tests.ice_shelf_2d.initial_state.initialstate method)": [[461, "compass.ocean.tests.ice_shelf_2d.initial_state.InitialState.__init__"]], "run() (compass.ocean.tests.ice_shelf_2d.initial_state.initialstate method)": [[462, "compass.ocean.tests.ice_shelf_2d.initial_state.InitialState.run"]], "restarttest (class in compass.ocean.tests.ice_shelf_2d.restart_test)": [[463, "compass.ocean.tests.ice_shelf_2d.restart_test.RestartTest"]], "__init__() (compass.ocean.tests.ice_shelf_2d.restart_test.restarttest method)": [[463, "compass.ocean.tests.ice_shelf_2d.restart_test.RestartTest.__init__"]], "configure() (compass.ocean.tests.ice_shelf_2d.restart_test.restarttest method)": [[464, "compass.ocean.tests.ice_shelf_2d.restart_test.RestartTest.configure"]], "run() (compass.ocean.tests.ice_shelf_2d.restart_test.restarttest method)": [[465, "compass.ocean.tests.ice_shelf_2d.restart_test.RestartTest.run"]], "sshadjustment (class in compass.ocean.tests.ice_shelf_2d.ssh_adjustment)": [[466, "compass.ocean.tests.ice_shelf_2d.ssh_adjustment.SshAdjustment"]], "__init__() (compass.ocean.tests.ice_shelf_2d.ssh_adjustment.sshadjustment method)": [[466, "compass.ocean.tests.ice_shelf_2d.ssh_adjustment.SshAdjustment.__init__"]], "run() (compass.ocean.tests.ice_shelf_2d.ssh_adjustment.sshadjustment method)": [[467, "compass.ocean.tests.ice_shelf_2d.ssh_adjustment.SshAdjustment.run"]], "setup() (compass.ocean.tests.ice_shelf_2d.ssh_adjustment.sshadjustment method)": [[468, "compass.ocean.tests.ice_shelf_2d.ssh_adjustment.SshAdjustment.setup"]], "viz (class in compass.ocean.tests.ice_shelf_2d.viz)": [[469, "compass.ocean.tests.ice_shelf_2d.viz.Viz"]], "__init__() (compass.ocean.tests.ice_shelf_2d.viz.viz method)": [[469, "compass.ocean.tests.ice_shelf_2d.viz.Viz.__init__"]], "run() (compass.ocean.tests.ice_shelf_2d.viz.viz method)": [[470, "compass.ocean.tests.ice_shelf_2d.viz.Viz.run"]], "internalwave (class in compass.ocean.tests.internal_wave)": [[471, "compass.ocean.tests.internal_wave.InternalWave"]], "__init__() (compass.ocean.tests.internal_wave.internalwave method)": [[471, "compass.ocean.tests.internal_wave.InternalWave.__init__"]], "default (class in compass.ocean.tests.internal_wave.default)": [[472, "compass.ocean.tests.internal_wave.default.Default"]], "__init__() (compass.ocean.tests.internal_wave.default.default method)": [[472, "compass.ocean.tests.internal_wave.default.Default.__init__"]], "validate() (compass.ocean.tests.internal_wave.default.default method)": [[473, "compass.ocean.tests.internal_wave.default.Default.validate"]], "forward (class in compass.ocean.tests.internal_wave.forward)": [[474, "compass.ocean.tests.internal_wave.forward.Forward"]], "__init__() (compass.ocean.tests.internal_wave.forward.forward method)": [[474, "compass.ocean.tests.internal_wave.forward.Forward.__init__"]], "run() (compass.ocean.tests.internal_wave.forward.forward method)": [[475, "compass.ocean.tests.internal_wave.forward.Forward.run"]], "initialstate (class in compass.ocean.tests.internal_wave.initial_state)": [[476, "compass.ocean.tests.internal_wave.initial_state.InitialState"]], "__init__() (compass.ocean.tests.internal_wave.initial_state.initialstate method)": [[476, "compass.ocean.tests.internal_wave.initial_state.InitialState.__init__"]], "run() (compass.ocean.tests.internal_wave.initial_state.initialstate method)": [[477, "compass.ocean.tests.internal_wave.initial_state.InitialState.run"]], "rpetest (class in compass.ocean.tests.internal_wave.rpe_test)": [[478, "compass.ocean.tests.internal_wave.rpe_test.RpeTest"]], "__init__() (compass.ocean.tests.internal_wave.rpe_test.rpetest method)": [[478, "compass.ocean.tests.internal_wave.rpe_test.RpeTest.__init__"]], "analysis (class in compass.ocean.tests.internal_wave.rpe_test.analysis)": [[479, "compass.ocean.tests.internal_wave.rpe_test.analysis.Analysis"]], "__init__() (compass.ocean.tests.internal_wave.rpe_test.analysis.analysis method)": [[479, "compass.ocean.tests.internal_wave.rpe_test.analysis.Analysis.__init__"]], "run() (compass.ocean.tests.internal_wave.rpe_test.analysis.analysis method)": [[480, "compass.ocean.tests.internal_wave.rpe_test.analysis.Analysis.run"]], "tendaytest (class in compass.ocean.tests.internal_wave.ten_day_test)": [[481, "compass.ocean.tests.internal_wave.ten_day_test.TenDayTest"]], "__init__() (compass.ocean.tests.internal_wave.ten_day_test.tendaytest method)": [[481, "compass.ocean.tests.internal_wave.ten_day_test.TenDayTest.__init__"]], "validate() (compass.ocean.tests.internal_wave.ten_day_test.tendaytest method)": [[482, "compass.ocean.tests.internal_wave.ten_day_test.TenDayTest.validate"]], "viz (class in compass.ocean.tests.internal_wave.viz)": [[483, "compass.ocean.tests.internal_wave.viz.Viz"]], "__init__() (compass.ocean.tests.internal_wave.viz.viz method)": [[483, "compass.ocean.tests.internal_wave.viz.Viz.__init__"]], "run() (compass.ocean.tests.internal_wave.viz.viz method)": [[484, "compass.ocean.tests.internal_wave.viz.Viz.run"]], "isomipplus (class in compass.ocean.tests.isomip_plus)": [[485, "compass.ocean.tests.isomip_plus.IsomipPlus"]], "__init__() (compass.ocean.tests.isomip_plus.isomipplus method)": [[485, "compass.ocean.tests.isomip_plus.IsomipPlus.__init__"]], "update_evaporation_flux() (in module compass.ocean.tests.isomip_plus.evap)": [[486, "compass.ocean.tests.isomip_plus.evap.update_evaporation_flux"]], "forward (class in compass.ocean.tests.isomip_plus.forward)": [[487, "compass.ocean.tests.isomip_plus.forward.Forward"]], "__init__() (compass.ocean.tests.isomip_plus.forward.forward method)": [[487, "compass.ocean.tests.isomip_plus.forward.Forward.__init__"]], "run() (compass.ocean.tests.isomip_plus.forward.forward method)": [[488, "compass.ocean.tests.isomip_plus.forward.Forward.run"]], "setup() (compass.ocean.tests.isomip_plus.forward.forward method)": [[489, "compass.ocean.tests.isomip_plus.forward.Forward.setup"]], "interpolate_ocean_mask() (in module compass.ocean.tests.isomip_plus.geom)": [[490, "compass.ocean.tests.isomip_plus.geom.interpolate_ocean_mask"]], "process_input_geometry() (in module compass.ocean.tests.isomip_plus.geom)": [[491, "compass.ocean.tests.isomip_plus.geom.process_input_geometry"]], "initialstate (class in compass.ocean.tests.isomip_plus.initial_state)": [[492, "compass.ocean.tests.isomip_plus.initial_state.InitialState"]], "__init__() (compass.ocean.tests.isomip_plus.initial_state.initialstate method)": [[492, "compass.ocean.tests.isomip_plus.initial_state.InitialState.__init__"]], "run() (compass.ocean.tests.isomip_plus.initial_state.initialstate method)": [[493, "compass.ocean.tests.isomip_plus.initial_state.InitialState.run"]], "isomipplustest (class in compass.ocean.tests.isomip_plus.isomip_plus_test)": [[494, "compass.ocean.tests.isomip_plus.isomip_plus_test.IsomipPlusTest"]], "__init__() (compass.ocean.tests.isomip_plus.isomip_plus_test.isomipplustest method)": [[494, "compass.ocean.tests.isomip_plus.isomip_plus_test.IsomipPlusTest.__init__"]], "configure() (compass.ocean.tests.isomip_plus.isomip_plus_test.isomipplustest method)": [[495, "compass.ocean.tests.isomip_plus.isomip_plus_test.IsomipPlusTest.configure"]], "run() (compass.ocean.tests.isomip_plus.isomip_plus_test.isomipplustest method)": [[496, "compass.ocean.tests.isomip_plus.isomip_plus_test.IsomipPlusTest.run"]], "misomip (class in compass.ocean.tests.isomip_plus.misomip)": [[497, "compass.ocean.tests.isomip_plus.misomip.Misomip"]], "__init__() (compass.ocean.tests.isomip_plus.misomip.misomip method)": [[497, "compass.ocean.tests.isomip_plus.misomip.Misomip.__init__"]], "run() (compass.ocean.tests.isomip_plus.misomip.misomip method)": [[498, "compass.ocean.tests.isomip_plus.misomip.Misomip.run"]], "sshadjustment (class in compass.ocean.tests.isomip_plus.ssh_adjustment)": [[499, "compass.ocean.tests.isomip_plus.ssh_adjustment.SshAdjustment"]], "__init__() (compass.ocean.tests.isomip_plus.ssh_adjustment.sshadjustment method)": [[499, "compass.ocean.tests.isomip_plus.ssh_adjustment.SshAdjustment.__init__"]], "run() (compass.ocean.tests.isomip_plus.ssh_adjustment.sshadjustment method)": [[500, "compass.ocean.tests.isomip_plus.ssh_adjustment.SshAdjustment.run"]], "setup() (compass.ocean.tests.isomip_plus.ssh_adjustment.sshadjustment method)": [[501, "compass.ocean.tests.isomip_plus.ssh_adjustment.SshAdjustment.setup"]], "streamfunction (class in compass.ocean.tests.isomip_plus.streamfunction)": [[502, "compass.ocean.tests.isomip_plus.streamfunction.Streamfunction"]], "__init__() (compass.ocean.tests.isomip_plus.streamfunction.streamfunction method)": [[502, "compass.ocean.tests.isomip_plus.streamfunction.Streamfunction.__init__"]], "run() (compass.ocean.tests.isomip_plus.streamfunction.streamfunction method)": [[503, "compass.ocean.tests.isomip_plus.streamfunction.Streamfunction.run"]], "viz (class in compass.ocean.tests.isomip_plus.viz)": [[504, "compass.ocean.tests.isomip_plus.viz.Viz"]], "__init__() (compass.ocean.tests.isomip_plus.viz.viz method)": [[504, "compass.ocean.tests.isomip_plus.viz.Viz.__init__"]], "run() (compass.ocean.tests.isomip_plus.viz.viz method)": [[505, "compass.ocean.tests.isomip_plus.viz.Viz.run"]], "file_complete() (in module compass.ocean.tests.isomip_plus.viz)": [[506, "compass.ocean.tests.isomip_plus.viz.file_complete"]], "movieplotter (class in compass.ocean.tests.isomip_plus.viz.plot)": [[507, "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter"]], "__init__() (compass.ocean.tests.isomip_plus.viz.plot.movieplotter method)": [[507, "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.__init__"]], "images_to_movies() (compass.ocean.tests.isomip_plus.viz.plot.movieplotter method)": [[508, "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.images_to_movies"]], "plot_3d_field_top_bot_section() (compass.ocean.tests.isomip_plus.viz.plot.movieplotter method)": [[509, "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_3d_field_top_bot_section"]], "plot_barotropic_streamfunction() (compass.ocean.tests.isomip_plus.viz.plot.movieplotter method)": [[510, "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_barotropic_streamfunction"]], "plot_horiz_series() (compass.ocean.tests.isomip_plus.viz.plot.movieplotter method)": [[511, "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_horiz_series"]], "plot_ice_shelf_boundary_variables() (compass.ocean.tests.isomip_plus.viz.plot.movieplotter method)": [[512, "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_ice_shelf_boundary_variables"]], "plot_layer_interfaces() (compass.ocean.tests.isomip_plus.viz.plot.movieplotter method)": [[513, "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_layer_interfaces"]], "plot_melt_rates() (compass.ocean.tests.isomip_plus.viz.plot.movieplotter method)": [[514, "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_melt_rates"]], "plot_overturning_streamfunction() (compass.ocean.tests.isomip_plus.viz.plot.movieplotter method)": [[515, "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_overturning_streamfunction"]], "plot_potential_density() (compass.ocean.tests.isomip_plus.viz.plot.movieplotter method)": [[516, "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_potential_density"]], "plot_salinity() (compass.ocean.tests.isomip_plus.viz.plot.movieplotter method)": [[517, "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_salinity"]], "plot_temperature() (compass.ocean.tests.isomip_plus.viz.plot.movieplotter method)": [[518, "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_temperature"]], "timeseriesplotter (class in compass.ocean.tests.isomip_plus.viz.plot)": [[519, "compass.ocean.tests.isomip_plus.viz.plot.TimeSeriesPlotter"]], "__init__() (compass.ocean.tests.isomip_plus.viz.plot.timeseriesplotter method)": [[519, "compass.ocean.tests.isomip_plus.viz.plot.TimeSeriesPlotter.__init__"]], "plot_melt_time_series() (compass.ocean.tests.isomip_plus.viz.plot.timeseriesplotter method)": [[520, "compass.ocean.tests.isomip_plus.viz.plot.TimeSeriesPlotter.plot_melt_time_series"]], "plot_time_series() (compass.ocean.tests.isomip_plus.viz.plot.timeseriesplotter method)": [[521, "compass.ocean.tests.isomip_plus.viz.plot.TimeSeriesPlotter.plot_time_series"]], "merrygoround (class in compass.ocean.tests.merry_go_round)": [[522, "compass.ocean.tests.merry_go_round.MerryGoRound"]], "__init__() (compass.ocean.tests.merry_go_round.merrygoround method)": [[522, "compass.ocean.tests.merry_go_round.MerryGoRound.__init__"]], "analysis (class in compass.ocean.tests.merry_go_round.convergence_test.analysis)": [[523, "compass.ocean.tests.merry_go_round.convergence_test.analysis.Analysis"]], "__init__() (compass.ocean.tests.merry_go_round.convergence_test.analysis.analysis method)": [[523, "compass.ocean.tests.merry_go_round.convergence_test.analysis.Analysis.__init__"]], "run() (compass.ocean.tests.merry_go_round.convergence_test.analysis.analysis method)": [[524, "compass.ocean.tests.merry_go_round.convergence_test.analysis.Analysis.run"]], "default (class in compass.ocean.tests.merry_go_round.default)": [[525, "compass.ocean.tests.merry_go_round.default.Default"]], "__init__() (compass.ocean.tests.merry_go_round.default.default method)": [[525, "compass.ocean.tests.merry_go_round.default.Default.__init__"]], "validate() (compass.ocean.tests.merry_go_round.default.default method)": [[526, "compass.ocean.tests.merry_go_round.default.Default.validate"]], "forward (class in compass.ocean.tests.merry_go_round.forward)": [[527, "compass.ocean.tests.merry_go_round.forward.Forward"]], "__init__() (compass.ocean.tests.merry_go_round.forward.forward method)": [[527, "compass.ocean.tests.merry_go_round.forward.Forward.__init__"]], "run() (compass.ocean.tests.merry_go_round.forward.forward method)": [[528, "compass.ocean.tests.merry_go_round.forward.Forward.run"]], "initialstate (class in compass.ocean.tests.merry_go_round.initial_state)": [[529, "compass.ocean.tests.merry_go_round.initial_state.InitialState"]], "__init__() (compass.ocean.tests.merry_go_round.initial_state.initialstate method)": [[529, "compass.ocean.tests.merry_go_round.initial_state.InitialState.__init__"]], "run() (compass.ocean.tests.merry_go_round.initial_state.initialstate method)": [[530, "compass.ocean.tests.merry_go_round.initial_state.InitialState.run"]], "viz (class in compass.ocean.tests.merry_go_round.viz)": [[531, "compass.ocean.tests.merry_go_round.viz.Viz"]], "__init__() (compass.ocean.tests.merry_go_round.viz.viz method)": [[531, "compass.ocean.tests.merry_go_round.viz.Viz.__init__"]], "run() (compass.ocean.tests.merry_go_round.viz.viz method)": [[532, "compass.ocean.tests.merry_go_round.viz.Viz.run"]], "planarconvergence (class in compass.ocean.tests.planar_convergence)": [[533, "compass.ocean.tests.planar_convergence.PlanarConvergence"]], "__init__() (compass.ocean.tests.planar_convergence.planarconvergence method)": [[533, "compass.ocean.tests.planar_convergence.PlanarConvergence.__init__"]], "convinit (class in compass.ocean.tests.planar_convergence.conv_init)": [[534, "compass.ocean.tests.planar_convergence.conv_init.ConvInit"]], "__init__() (compass.ocean.tests.planar_convergence.conv_init.convinit method)": [[534, "compass.ocean.tests.planar_convergence.conv_init.ConvInit.__init__"]], "run() (compass.ocean.tests.planar_convergence.conv_init.convinit method)": [[535, "compass.ocean.tests.planar_convergence.conv_init.ConvInit.run"]], "convtestcase (class in compass.ocean.tests.planar_convergence.conv_test_case)": [[536, "compass.ocean.tests.planar_convergence.conv_test_case.ConvTestCase"]], "__init__() (compass.ocean.tests.planar_convergence.conv_test_case.convtestcase method)": [[536, "compass.ocean.tests.planar_convergence.conv_test_case.ConvTestCase.__init__"]], "configure() (compass.ocean.tests.planar_convergence.conv_test_case.convtestcase method)": [[537, "compass.ocean.tests.planar_convergence.conv_test_case.ConvTestCase.configure"]], "run() (compass.ocean.tests.planar_convergence.conv_test_case.convtestcase method)": [[538, "compass.ocean.tests.planar_convergence.conv_test_case.ConvTestCase.run"]], "update_cores() (compass.ocean.tests.planar_convergence.conv_test_case.convtestcase method)": [[539, "compass.ocean.tests.planar_convergence.conv_test_case.ConvTestCase.update_cores"]], "forward (class in compass.ocean.tests.planar_convergence.forward)": [[540, "compass.ocean.tests.planar_convergence.forward.Forward"]], "__init__() (compass.ocean.tests.planar_convergence.forward.forward method)": [[540, "compass.ocean.tests.planar_convergence.forward.Forward.__init__"]], "get_dt_duration() (compass.ocean.tests.planar_convergence.forward.forward method)": [[541, "compass.ocean.tests.planar_convergence.forward.Forward.get_dt_duration"]], "run() (compass.ocean.tests.planar_convergence.forward.forward method)": [[542, "compass.ocean.tests.planar_convergence.forward.Forward.run"]], "setup() (compass.ocean.tests.planar_convergence.forward.forward method)": [[543, "compass.ocean.tests.planar_convergence.forward.Forward.setup"]], "horizontaladvection (class in compass.ocean.tests.planar_convergence.horizontal_advection)": [[544, "compass.ocean.tests.planar_convergence.horizontal_advection.HorizontalAdvection"]], "__init__() (compass.ocean.tests.planar_convergence.horizontal_advection.horizontaladvection method)": [[544, "compass.ocean.tests.planar_convergence.horizontal_advection.HorizontalAdvection.__init__"]], "configure() (compass.ocean.tests.planar_convergence.horizontal_advection.horizontaladvection method)": [[545, "compass.ocean.tests.planar_convergence.horizontal_advection.HorizontalAdvection.configure"]], "run() (compass.ocean.tests.planar_convergence.horizontal_advection.horizontaladvection method)": [[546, "compass.ocean.tests.planar_convergence.horizontal_advection.HorizontalAdvection.run"]], "analysis (class in compass.ocean.tests.planar_convergence.horizontal_advection.analysis)": [[547, "compass.ocean.tests.planar_convergence.horizontal_advection.analysis.Analysis"]], "__init__() (compass.ocean.tests.planar_convergence.horizontal_advection.analysis.analysis method)": [[547, "compass.ocean.tests.planar_convergence.horizontal_advection.analysis.Analysis.__init__"]], "rmse() (compass.ocean.tests.planar_convergence.horizontal_advection.analysis.analysis method)": [[548, "compass.ocean.tests.planar_convergence.horizontal_advection.analysis.Analysis.rmse"]], "run() (compass.ocean.tests.planar_convergence.horizontal_advection.analysis.analysis method)": [[549, "compass.ocean.tests.planar_convergence.horizontal_advection.analysis.Analysis.run"]], "init (class in compass.ocean.tests.planar_convergence.horizontal_advection.init)": [[550, "compass.ocean.tests.planar_convergence.horizontal_advection.init.Init"]], "__init__() (compass.ocean.tests.planar_convergence.horizontal_advection.init.init method)": [[550, "compass.ocean.tests.planar_convergence.horizontal_advection.init.Init.__init__"]], "run() (compass.ocean.tests.planar_convergence.horizontal_advection.init.init method)": [[551, "compass.ocean.tests.planar_convergence.horizontal_advection.init.Init.run"]], "soma (class in compass.ocean.tests.soma)": [[552, "compass.ocean.tests.soma.Soma"]], "__init__() (compass.ocean.tests.soma.soma method)": [[552, "compass.ocean.tests.soma.Soma.__init__"]], "analysis (class in compass.ocean.tests.soma.analysis)": [[553, "compass.ocean.tests.soma.analysis.Analysis"]], "__init__() (compass.ocean.tests.soma.analysis.analysis method)": [[553, "compass.ocean.tests.soma.analysis.Analysis.__init__"]], "run() (compass.ocean.tests.soma.analysis.analysis method)": [[554, "compass.ocean.tests.soma.analysis.Analysis.run"]], "forward (class in compass.ocean.tests.soma.forward)": [[555, "compass.ocean.tests.soma.forward.Forward"]], "__init__() (compass.ocean.tests.soma.forward.forward method)": [[555, "compass.ocean.tests.soma.forward.Forward.__init__"]], "run() (compass.ocean.tests.soma.forward.forward method)": [[556, "compass.ocean.tests.soma.forward.Forward.run"]], "initialstate (class in compass.ocean.tests.soma.initial_state)": [[557, "compass.ocean.tests.soma.initial_state.InitialState"]], "__init__() (compass.ocean.tests.soma.initial_state.initialstate method)": [[557, "compass.ocean.tests.soma.initial_state.InitialState.__init__"]], "run() (compass.ocean.tests.soma.initial_state.initialstate method)": [[558, "compass.ocean.tests.soma.initial_state.InitialState.run"]], "somatestcase (class in compass.ocean.tests.soma.soma_test_case)": [[559, "compass.ocean.tests.soma.soma_test_case.SomaTestCase"]], "__init__() (compass.ocean.tests.soma.soma_test_case.somatestcase method)": [[559, "compass.ocean.tests.soma.soma_test_case.SomaTestCase.__init__"]], "validate() (compass.ocean.tests.soma.soma_test_case.somatestcase method)": [[560, "compass.ocean.tests.soma.soma_test_case.SomaTestCase.validate"]], "spheretransport (class in compass.ocean.tests.sphere_transport)": [[561, "compass.ocean.tests.sphere_transport.SphereTransport"]], "__init__() (compass.ocean.tests.sphere_transport.spheretransport method)": [[561, "compass.ocean.tests.sphere_transport.SphereTransport.__init__"]], "correlatedtracers2d (class in compass.ocean.tests.sphere_transport.correlated_tracers_2d)": [[562, "compass.ocean.tests.sphere_transport.correlated_tracers_2d.CorrelatedTracers2D"]], "__init__() (compass.ocean.tests.sphere_transport.correlated_tracers_2d.correlatedtracers2d method)": [[562, "compass.ocean.tests.sphere_transport.correlated_tracers_2d.CorrelatedTracers2D.__init__"]], "configure() (compass.ocean.tests.sphere_transport.correlated_tracers_2d.correlatedtracers2d method)": [[563, "compass.ocean.tests.sphere_transport.correlated_tracers_2d.CorrelatedTracers2D.configure"]], "run() (compass.ocean.tests.sphere_transport.correlated_tracers_2d.correlatedtracers2d method)": [[564, "compass.ocean.tests.sphere_transport.correlated_tracers_2d.CorrelatedTracers2D.run"]], "analysis (class in compass.ocean.tests.sphere_transport.correlated_tracers_2d.analysis)": [[565, "compass.ocean.tests.sphere_transport.correlated_tracers_2d.analysis.Analysis"]], "__init__() (compass.ocean.tests.sphere_transport.correlated_tracers_2d.analysis.analysis method)": [[565, "compass.ocean.tests.sphere_transport.correlated_tracers_2d.analysis.Analysis.__init__"]], "run() (compass.ocean.tests.sphere_transport.correlated_tracers_2d.analysis.analysis method)": [[566, "compass.ocean.tests.sphere_transport.correlated_tracers_2d.analysis.Analysis.run"]], "forward (class in compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward)": [[567, "compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.Forward"]], "__init__() (compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.forward method)": [[567, "compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.Forward.__init__"]], "get_timestep_str() (compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.forward method)": [[568, "compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.Forward.get_timestep_str"]], "run() (compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.forward method)": [[569, "compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.Forward.run"]], "setup() (compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.forward method)": [[570, "compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.Forward.setup"]], "init (class in compass.ocean.tests.sphere_transport.correlated_tracers_2d.init)": [[571, "compass.ocean.tests.sphere_transport.correlated_tracers_2d.init.Init"]], "__init__() (compass.ocean.tests.sphere_transport.correlated_tracers_2d.init.init method)": [[571, "compass.ocean.tests.sphere_transport.correlated_tracers_2d.init.Init.__init__"]], "run() (compass.ocean.tests.sphere_transport.correlated_tracers_2d.init.init method)": [[572, "compass.ocean.tests.sphere_transport.correlated_tracers_2d.init.Init.run"]], "mesh (class in compass.ocean.tests.sphere_transport.correlated_tracers_2d.mesh)": [[573, "compass.ocean.tests.sphere_transport.correlated_tracers_2d.mesh.Mesh"]], "__init__() (compass.ocean.tests.sphere_transport.correlated_tracers_2d.mesh.mesh method)": [[573, "compass.ocean.tests.sphere_transport.correlated_tracers_2d.mesh.Mesh.__init__"]], "build_cell_width_lat_lon() (compass.ocean.tests.sphere_transport.correlated_tracers_2d.mesh.mesh method)": [[574, "compass.ocean.tests.sphere_transport.correlated_tracers_2d.mesh.Mesh.build_cell_width_lat_lon"]], "run() (compass.ocean.tests.sphere_transport.correlated_tracers_2d.mesh.mesh method)": [[575, "compass.ocean.tests.sphere_transport.correlated_tracers_2d.mesh.Mesh.run"]], "divergent2d (class in compass.ocean.tests.sphere_transport.divergent_2d)": [[576, "compass.ocean.tests.sphere_transport.divergent_2d.Divergent2D"]], "__init__() (compass.ocean.tests.sphere_transport.divergent_2d.divergent2d method)": [[576, "compass.ocean.tests.sphere_transport.divergent_2d.Divergent2D.__init__"]], "configure() (compass.ocean.tests.sphere_transport.divergent_2d.divergent2d method)": [[577, "compass.ocean.tests.sphere_transport.divergent_2d.Divergent2D.configure"]], "run() (compass.ocean.tests.sphere_transport.divergent_2d.divergent2d method)": [[578, "compass.ocean.tests.sphere_transport.divergent_2d.Divergent2D.run"]], "analysis (class in compass.ocean.tests.sphere_transport.divergent_2d.analysis)": [[579, "compass.ocean.tests.sphere_transport.divergent_2d.analysis.Analysis"]], "__init__() (compass.ocean.tests.sphere_transport.divergent_2d.analysis.analysis method)": [[579, "compass.ocean.tests.sphere_transport.divergent_2d.analysis.Analysis.__init__"]], "run() (compass.ocean.tests.sphere_transport.divergent_2d.analysis.analysis method)": [[580, "compass.ocean.tests.sphere_transport.divergent_2d.analysis.Analysis.run"]], "forward (class in compass.ocean.tests.sphere_transport.divergent_2d.forward)": [[581, "compass.ocean.tests.sphere_transport.divergent_2d.forward.Forward"]], "__init__() (compass.ocean.tests.sphere_transport.divergent_2d.forward.forward method)": [[581, "compass.ocean.tests.sphere_transport.divergent_2d.forward.Forward.__init__"]], "get_timestep_str() (compass.ocean.tests.sphere_transport.divergent_2d.forward.forward method)": [[582, "compass.ocean.tests.sphere_transport.divergent_2d.forward.Forward.get_timestep_str"]], "run() (compass.ocean.tests.sphere_transport.divergent_2d.forward.forward method)": [[583, "compass.ocean.tests.sphere_transport.divergent_2d.forward.Forward.run"]], "setup() (compass.ocean.tests.sphere_transport.divergent_2d.forward.forward method)": [[584, "compass.ocean.tests.sphere_transport.divergent_2d.forward.Forward.setup"]], "init (class in compass.ocean.tests.sphere_transport.divergent_2d.init)": [[585, "compass.ocean.tests.sphere_transport.divergent_2d.init.Init"]], "__init__() (compass.ocean.tests.sphere_transport.divergent_2d.init.init method)": [[585, "compass.ocean.tests.sphere_transport.divergent_2d.init.Init.__init__"]], "run() (compass.ocean.tests.sphere_transport.divergent_2d.init.init method)": [[586, "compass.ocean.tests.sphere_transport.divergent_2d.init.Init.run"]], "mesh (class in compass.ocean.tests.sphere_transport.divergent_2d.mesh)": [[587, "compass.ocean.tests.sphere_transport.divergent_2d.mesh.Mesh"]], "__init__() (compass.ocean.tests.sphere_transport.divergent_2d.mesh.mesh method)": [[587, "compass.ocean.tests.sphere_transport.divergent_2d.mesh.Mesh.__init__"]], "build_cell_width_lat_lon() (compass.ocean.tests.sphere_transport.divergent_2d.mesh.mesh method)": [[588, "compass.ocean.tests.sphere_transport.divergent_2d.mesh.Mesh.build_cell_width_lat_lon"]], "run() (compass.ocean.tests.sphere_transport.divergent_2d.mesh.mesh method)": [[589, "compass.ocean.tests.sphere_transport.divergent_2d.mesh.Mesh.run"]], "nondivergent2d (class in compass.ocean.tests.sphere_transport.nondivergent_2d)": [[590, "compass.ocean.tests.sphere_transport.nondivergent_2d.Nondivergent2D"]], "__init__() (compass.ocean.tests.sphere_transport.nondivergent_2d.nondivergent2d method)": [[590, "compass.ocean.tests.sphere_transport.nondivergent_2d.Nondivergent2D.__init__"]], "configure() (compass.ocean.tests.sphere_transport.nondivergent_2d.nondivergent2d method)": [[591, "compass.ocean.tests.sphere_transport.nondivergent_2d.Nondivergent2D.configure"]], "run() (compass.ocean.tests.sphere_transport.nondivergent_2d.nondivergent2d method)": [[592, "compass.ocean.tests.sphere_transport.nondivergent_2d.Nondivergent2D.run"]], "analysis (class in compass.ocean.tests.sphere_transport.nondivergent_2d.analysis)": [[593, "compass.ocean.tests.sphere_transport.nondivergent_2d.analysis.Analysis"]], "__init__() (compass.ocean.tests.sphere_transport.nondivergent_2d.analysis.analysis method)": [[593, "compass.ocean.tests.sphere_transport.nondivergent_2d.analysis.Analysis.__init__"]], "run() (compass.ocean.tests.sphere_transport.nondivergent_2d.analysis.analysis method)": [[594, "compass.ocean.tests.sphere_transport.nondivergent_2d.analysis.Analysis.run"]], "forward (class in compass.ocean.tests.sphere_transport.nondivergent_2d.forward)": [[595, "compass.ocean.tests.sphere_transport.nondivergent_2d.forward.Forward"]], "__init__() (compass.ocean.tests.sphere_transport.nondivergent_2d.forward.forward method)": [[595, "compass.ocean.tests.sphere_transport.nondivergent_2d.forward.Forward.__init__"]], "get_timestep_str() (compass.ocean.tests.sphere_transport.nondivergent_2d.forward.forward method)": [[596, "compass.ocean.tests.sphere_transport.nondivergent_2d.forward.Forward.get_timestep_str"]], "run() (compass.ocean.tests.sphere_transport.nondivergent_2d.forward.forward method)": [[597, "compass.ocean.tests.sphere_transport.nondivergent_2d.forward.Forward.run"]], "setup() (compass.ocean.tests.sphere_transport.nondivergent_2d.forward.forward method)": [[598, "compass.ocean.tests.sphere_transport.nondivergent_2d.forward.Forward.setup"]], "init (class in compass.ocean.tests.sphere_transport.nondivergent_2d.init)": [[599, "compass.ocean.tests.sphere_transport.nondivergent_2d.init.Init"]], "__init__() (compass.ocean.tests.sphere_transport.nondivergent_2d.init.init method)": [[599, "compass.ocean.tests.sphere_transport.nondivergent_2d.init.Init.__init__"]], "run() (compass.ocean.tests.sphere_transport.nondivergent_2d.init.init method)": [[600, "compass.ocean.tests.sphere_transport.nondivergent_2d.init.Init.run"]], "mesh (class in compass.ocean.tests.sphere_transport.nondivergent_2d.mesh)": [[601, "compass.ocean.tests.sphere_transport.nondivergent_2d.mesh.Mesh"]], "__init__() (compass.ocean.tests.sphere_transport.nondivergent_2d.mesh.mesh method)": [[601, "compass.ocean.tests.sphere_transport.nondivergent_2d.mesh.Mesh.__init__"]], "build_cell_width_lat_lon() (compass.ocean.tests.sphere_transport.nondivergent_2d.mesh.mesh method)": [[602, "compass.ocean.tests.sphere_transport.nondivergent_2d.mesh.Mesh.build_cell_width_lat_lon"]], "run() (compass.ocean.tests.sphere_transport.nondivergent_2d.mesh.mesh method)": [[603, "compass.ocean.tests.sphere_transport.nondivergent_2d.mesh.Mesh.run"]], "compute_convergence_rates() (in module compass.ocean.tests.sphere_transport.process_output)": [[604, "compass.ocean.tests.sphere_transport.process_output.compute_convergence_rates"]], "compute_error_from_output_ncfile() (in module compass.ocean.tests.sphere_transport.process_output)": [[605, "compass.ocean.tests.sphere_transport.process_output.compute_error_from_output_ncfile"]], "make_convergence_arrays() (in module compass.ocean.tests.sphere_transport.process_output)": [[606, "compass.ocean.tests.sphere_transport.process_output.make_convergence_arrays"]], "plot_convergence() (in module compass.ocean.tests.sphere_transport.process_output)": [[607, "compass.ocean.tests.sphere_transport.process_output.plot_convergence"]], "plot_filament() (in module compass.ocean.tests.sphere_transport.process_output)": [[608, "compass.ocean.tests.sphere_transport.process_output.plot_filament"]], "plot_over_and_undershoot_errors() (in module compass.ocean.tests.sphere_transport.process_output)": [[609, "compass.ocean.tests.sphere_transport.process_output.plot_over_and_undershoot_errors"]], "plot_sol() (in module compass.ocean.tests.sphere_transport.process_output)": [[610, "compass.ocean.tests.sphere_transport.process_output.plot_sol"]], "print_data_as_csv() (in module compass.ocean.tests.sphere_transport.process_output)": [[611, "compass.ocean.tests.sphere_transport.process_output.print_data_as_csv"]], "print_error_conv_table() (in module compass.ocean.tests.sphere_transport.process_output)": [[612, "compass.ocean.tests.sphere_transport.process_output.print_error_conv_table"]], "read_ncl_rgb_file() (in module compass.ocean.tests.sphere_transport.process_output)": [[613, "compass.ocean.tests.sphere_transport.process_output.read_ncl_rgb_file"]], "rotation2d (class in compass.ocean.tests.sphere_transport.rotation_2d)": [[614, "compass.ocean.tests.sphere_transport.rotation_2d.Rotation2D"]], "__init__() (compass.ocean.tests.sphere_transport.rotation_2d.rotation2d method)": [[614, "compass.ocean.tests.sphere_transport.rotation_2d.Rotation2D.__init__"]], "configure() (compass.ocean.tests.sphere_transport.rotation_2d.rotation2d method)": [[615, "compass.ocean.tests.sphere_transport.rotation_2d.Rotation2D.configure"]], "run() (compass.ocean.tests.sphere_transport.rotation_2d.rotation2d method)": [[616, "compass.ocean.tests.sphere_transport.rotation_2d.Rotation2D.run"]], "analysis (class in compass.ocean.tests.sphere_transport.rotation_2d.analysis)": [[617, "compass.ocean.tests.sphere_transport.rotation_2d.analysis.Analysis"]], "__init__() (compass.ocean.tests.sphere_transport.rotation_2d.analysis.analysis method)": [[617, "compass.ocean.tests.sphere_transport.rotation_2d.analysis.Analysis.__init__"]], "run() (compass.ocean.tests.sphere_transport.rotation_2d.analysis.analysis method)": [[618, "compass.ocean.tests.sphere_transport.rotation_2d.analysis.Analysis.run"]], "forward (class in compass.ocean.tests.sphere_transport.rotation_2d.forward)": [[619, "compass.ocean.tests.sphere_transport.rotation_2d.forward.Forward"]], "__init__() (compass.ocean.tests.sphere_transport.rotation_2d.forward.forward method)": [[619, "compass.ocean.tests.sphere_transport.rotation_2d.forward.Forward.__init__"]], "get_timestep_str() (compass.ocean.tests.sphere_transport.rotation_2d.forward.forward method)": [[620, "compass.ocean.tests.sphere_transport.rotation_2d.forward.Forward.get_timestep_str"]], "run() (compass.ocean.tests.sphere_transport.rotation_2d.forward.forward method)": [[621, "compass.ocean.tests.sphere_transport.rotation_2d.forward.Forward.run"]], "setup() (compass.ocean.tests.sphere_transport.rotation_2d.forward.forward method)": [[622, "compass.ocean.tests.sphere_transport.rotation_2d.forward.Forward.setup"]], "init (class in compass.ocean.tests.sphere_transport.rotation_2d.init)": [[623, "compass.ocean.tests.sphere_transport.rotation_2d.init.Init"]], "__init__() (compass.ocean.tests.sphere_transport.rotation_2d.init.init method)": [[623, "compass.ocean.tests.sphere_transport.rotation_2d.init.Init.__init__"]], "run() (compass.ocean.tests.sphere_transport.rotation_2d.init.init method)": [[624, "compass.ocean.tests.sphere_transport.rotation_2d.init.Init.run"]], "mesh (class in compass.ocean.tests.sphere_transport.rotation_2d.mesh)": [[625, "compass.ocean.tests.sphere_transport.rotation_2d.mesh.Mesh"]], "__init__() (compass.ocean.tests.sphere_transport.rotation_2d.mesh.mesh method)": [[625, "compass.ocean.tests.sphere_transport.rotation_2d.mesh.Mesh.__init__"]], "build_cell_width_lat_lon() (compass.ocean.tests.sphere_transport.rotation_2d.mesh.mesh method)": [[626, "compass.ocean.tests.sphere_transport.rotation_2d.mesh.Mesh.build_cell_width_lat_lon"]], "run() (compass.ocean.tests.sphere_transport.rotation_2d.mesh.mesh method)": [[627, "compass.ocean.tests.sphere_transport.rotation_2d.mesh.Mesh.run"]], "tides (class in compass.ocean.tests.tides)": [[628, "compass.ocean.tests.tides.Tides"]], "__init__() (compass.ocean.tests.tides.tides method)": [[628, "compass.ocean.tests.tides.Tides.__init__"]], "analysis (class in compass.ocean.tests.tides.analysis)": [[629, "compass.ocean.tests.tides.analysis.Analysis"]], "__init__() (compass.ocean.tests.tides.analysis.analysis method)": [[629, "compass.ocean.tests.tides.analysis.Analysis.__init__"]], "append_tpxo_data() (compass.ocean.tests.tides.analysis.analysis method)": [[630, "compass.ocean.tests.tides.analysis.Analysis.append_tpxo_data"]], "check_tpxo_data() (compass.ocean.tests.tides.analysis.analysis method)": [[631, "compass.ocean.tests.tides.analysis.Analysis.check_tpxo_data"]], "plot() (compass.ocean.tests.tides.analysis.analysis method)": [[632, "compass.ocean.tests.tides.analysis.Analysis.plot"]], "read_otps2_output() (compass.ocean.tests.tides.analysis.analysis method)": [[633, "compass.ocean.tests.tides.analysis.Analysis.read_otps2_output"]], "run() (compass.ocean.tests.tides.analysis.analysis method)": [[634, "compass.ocean.tests.tides.analysis.Analysis.run"]], "run_otps2() (compass.ocean.tests.tides.analysis.analysis method)": [[635, "compass.ocean.tests.tides.analysis.Analysis.run_otps2"]], "setup() (compass.ocean.tests.tides.analysis.analysis method)": [[636, "compass.ocean.tests.tides.analysis.Analysis.setup"]], "setup_otps2() (compass.ocean.tests.tides.analysis.analysis method)": [[637, "compass.ocean.tests.tides.analysis.Analysis.setup_otps2"]], "write_coordinate_file() (compass.ocean.tests.tides.analysis.analysis method)": [[638, "compass.ocean.tests.tides.analysis.Analysis.write_coordinate_file"]], "compass.ocean.tests.tides.configure": [[639, "module-compass.ocean.tests.tides.configure"]], "forward (class in compass.ocean.tests.tides.forward)": [[640, "compass.ocean.tests.tides.forward.Forward"]], "__init__() (compass.ocean.tests.tides.forward.forward method)": [[640, "compass.ocean.tests.tides.forward.Forward.__init__"]], "configure() (compass.ocean.tests.tides.forward.forward method)": [[641, "compass.ocean.tests.tides.forward.Forward.configure"]], "run() (compass.ocean.tests.tides.forward.forward method)": [[642, "compass.ocean.tests.tides.forward.Forward.run"]], "forwardstep (class in compass.ocean.tests.tides.forward.forward)": [[643, "compass.ocean.tests.tides.forward.forward.ForwardStep"]], "__init__() (compass.ocean.tests.tides.forward.forward.forwardstep method)": [[643, "compass.ocean.tests.tides.forward.forward.ForwardStep.__init__"]], "run() (compass.ocean.tests.tides.forward.forward.forwardstep method)": [[644, "compass.ocean.tests.tides.forward.forward.ForwardStep.run"]], "setup() (compass.ocean.tests.tides.forward.forward.forwardstep method)": [[645, "compass.ocean.tests.tides.forward.forward.ForwardStep.setup"]], "init (class in compass.ocean.tests.tides.init)": [[646, "compass.ocean.tests.tides.init.Init"]], "__init__() (compass.ocean.tests.tides.init.init method)": [[646, "compass.ocean.tests.tides.init.Init.__init__"]], "configure() (compass.ocean.tests.tides.init.init method)": [[647, "compass.ocean.tests.tides.init.Init.configure"]], "run() (compass.ocean.tests.tides.init.init method)": [[648, "compass.ocean.tests.tides.init.Init.run"]], "initialstate (class in compass.ocean.tests.tides.init.initial_state)": [[649, "compass.ocean.tests.tides.init.initial_state.InitialState"]], "__init__() (compass.ocean.tests.tides.init.initial_state.initialstate method)": [[649, "compass.ocean.tests.tides.init.initial_state.InitialState.__init__"]], "run() (compass.ocean.tests.tides.init.initial_state.initialstate method)": [[650, "compass.ocean.tests.tides.init.initial_state.InitialState.run"]], "setup() (compass.ocean.tests.tides.init.initial_state.initialstate method)": [[651, "compass.ocean.tests.tides.init.initial_state.InitialState.setup"]], "interpolatewavedrag (class in compass.ocean.tests.tides.init.interpolate_wave_drag)": [[652, "compass.ocean.tests.tides.init.interpolate_wave_drag.InterpolateWaveDrag"]], "__init__() (compass.ocean.tests.tides.init.interpolate_wave_drag.interpolatewavedrag method)": [[652, "compass.ocean.tests.tides.init.interpolate_wave_drag.InterpolateWaveDrag.__init__"]], "interpolate_data_to_grid() (compass.ocean.tests.tides.init.interpolate_wave_drag.interpolatewavedrag method)": [[653, "compass.ocean.tests.tides.init.interpolate_wave_drag.InterpolateWaveDrag.interpolate_data_to_grid"]], "plot_interp_data() (compass.ocean.tests.tides.init.interpolate_wave_drag.interpolatewavedrag method)": [[654, "compass.ocean.tests.tides.init.interpolate_wave_drag.InterpolateWaveDrag.plot_interp_data"]], "run() (compass.ocean.tests.tides.init.interpolate_wave_drag.interpolatewavedrag method)": [[655, "compass.ocean.tests.tides.init.interpolate_wave_drag.InterpolateWaveDrag.run"]], "write_to_file() (compass.ocean.tests.tides.init.interpolate_wave_drag.interpolatewavedrag method)": [[656, "compass.ocean.tests.tides.init.interpolate_wave_drag.InterpolateWaveDrag.write_to_file"]], "remapbathymetry (class in compass.ocean.tests.tides.init.remap_bathymetry)": [[657, "compass.ocean.tests.tides.init.remap_bathymetry.RemapBathymetry"]], "__init__() (compass.ocean.tests.tides.init.remap_bathymetry.remapbathymetry method)": [[657, "compass.ocean.tests.tides.init.remap_bathymetry.RemapBathymetry.__init__"]], "run() (compass.ocean.tests.tides.init.remap_bathymetry.remapbathymetry method)": [[658, "compass.ocean.tests.tides.init.remap_bathymetry.RemapBathymetry.run"]], "mesh (class in compass.ocean.tests.tides.mesh)": [[659, "compass.ocean.tests.tides.mesh.Mesh"]], "__init__() (compass.ocean.tests.tides.mesh.mesh method)": [[659, "compass.ocean.tests.tides.mesh.Mesh.__init__"]], "configure() (compass.ocean.tests.tides.mesh.mesh method)": [[660, "compass.ocean.tests.tides.mesh.Mesh.configure"]], "run() (compass.ocean.tests.tides.mesh.mesh method)": [[661, "compass.ocean.tests.tides.mesh.Mesh.run"]], "ziso (class in compass.ocean.tests.ziso)": [[662, "compass.ocean.tests.ziso.Ziso"]], "__init__() (compass.ocean.tests.ziso.ziso method)": [[662, "compass.ocean.tests.ziso.Ziso.__init__"]], "zisotestcase (class in compass.ocean.tests.ziso)": [[663, "compass.ocean.tests.ziso.ZisoTestCase"]], "__init__() (compass.ocean.tests.ziso.zisotestcase method)": [[663, "compass.ocean.tests.ziso.ZisoTestCase.__init__"]], "configure() (compass.ocean.tests.ziso.zisotestcase method)": [[664, "compass.ocean.tests.ziso.ZisoTestCase.configure"]], "run() (compass.ocean.tests.ziso.zisotestcase method)": [[665, "compass.ocean.tests.ziso.ZisoTestCase.run"]], "configure() (in module compass.ocean.tests.ziso)": [[666, "compass.ocean.tests.ziso.configure"]], "forward (class in compass.ocean.tests.ziso.forward)": [[667, "compass.ocean.tests.ziso.forward.Forward"]], "__init__() (compass.ocean.tests.ziso.forward.forward method)": [[667, "compass.ocean.tests.ziso.forward.Forward.__init__"]], "run() (compass.ocean.tests.ziso.forward.forward method)": [[668, "compass.ocean.tests.ziso.forward.Forward.run"]], "setup() (compass.ocean.tests.ziso.forward.forward method)": [[669, "compass.ocean.tests.ziso.forward.Forward.setup"]], "initialstate (class in compass.ocean.tests.ziso.initial_state)": [[670, "compass.ocean.tests.ziso.initial_state.InitialState"]], "__init__() (compass.ocean.tests.ziso.initial_state.initialstate method)": [[670, "compass.ocean.tests.ziso.initial_state.InitialState.__init__"]], "run() (compass.ocean.tests.ziso.initial_state.initialstate method)": [[671, "compass.ocean.tests.ziso.initial_state.InitialState.run"]], "withfrazil (class in compass.ocean.tests.ziso.with_frazil)": [[672, "compass.ocean.tests.ziso.with_frazil.WithFrazil"]], "__init__() (compass.ocean.tests.ziso.with_frazil.withfrazil method)": [[672, "compass.ocean.tests.ziso.with_frazil.WithFrazil.__init__"]], "configure() (compass.ocean.tests.ziso.with_frazil.withfrazil method)": [[673, "compass.ocean.tests.ziso.with_frazil.WithFrazil.configure"]], "run() (compass.ocean.tests.ziso.with_frazil.withfrazil method)": [[674, "compass.ocean.tests.ziso.with_frazil.WithFrazil.run"]], "generate_1d_grid() (in module compass.ocean.vertical.grid_1d)": [[675, "compass.ocean.vertical.grid_1d.generate_1d_grid"]], "write_1d_grid() (in module compass.ocean.vertical.grid_1d)": [[676, "compass.ocean.vertical.grid_1d.write_1d_grid"]], "init_vertical_coord() (in module compass.ocean.vertical)": [[677, "compass.ocean.vertical.init_vertical_coord"]], "alter_bottom_depth() (in module compass.ocean.vertical.partial_cells)": [[678, "compass.ocean.vertical.partial_cells.alter_bottom_depth"]], "alter_ssh() (in module compass.ocean.vertical.partial_cells)": [[679, "compass.ocean.vertical.partial_cells.alter_ssh"]], "compute_min_max_level_cell() (in module compass.ocean.vertical.zlevel)": [[680, "compass.ocean.vertical.zlevel.compute_min_max_level_cell"]], "compute_z_level_layer_thickness() (in module compass.ocean.vertical.zlevel)": [[681, "compass.ocean.vertical.zlevel.compute_z_level_layer_thickness"]], "compute_z_level_resting_thickness() (in module compass.ocean.vertical.zlevel)": [[682, "compass.ocean.vertical.zlevel.compute_z_level_resting_thickness"]], "init_z_level_vertical_coord() (in module compass.ocean.vertical.zlevel)": [[683, "compass.ocean.vertical.zlevel.init_z_level_vertical_coord"]], "init_z_star_vertical_coord() (in module compass.ocean.vertical.zstar)": [[684, "compass.ocean.vertical.zstar.init_z_star_vertical_coord"]]}})