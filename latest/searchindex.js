Search.setIndex({"docnames": ["design_docs/cached_outputs", "design_docs/compass_package", "design_docs/index", "design_docs/template", "developers_guide/api", "developers_guide/building_docs", "developers_guide/command_line", "developers_guide/docs", "developers_guide/framework", "developers_guide/generated/compass.MpasCore", "developers_guide/generated/compass.MpasCore.add_test_group", "developers_guide/generated/compass.Step", "developers_guide/generated/compass.Step.add_input_file", "developers_guide/generated/compass.Step.add_model_as_input", "developers_guide/generated/compass.Step.add_namelist_file", "developers_guide/generated/compass.Step.add_namelist_options", "developers_guide/generated/compass.Step.add_output_file", "developers_guide/generated/compass.Step.add_streams_file", "developers_guide/generated/compass.Step.constrain_resources", "developers_guide/generated/compass.Step.run", "developers_guide/generated/compass.Step.runtime_setup", "developers_guide/generated/compass.Step.set_resources", "developers_guide/generated/compass.Step.setup", "developers_guide/generated/compass.Step.update_namelist_at_runtime", "developers_guide/generated/compass.Step.update_namelist_pio", "developers_guide/generated/compass.Step.update_streams_at_runtime", "developers_guide/generated/compass.TestCase", "developers_guide/generated/compass.TestCase.add_step", "developers_guide/generated/compass.TestCase.configure", "developers_guide/generated/compass.TestCase.run", "developers_guide/generated/compass.TestCase.validate", "developers_guide/generated/compass.TestGroup", "developers_guide/generated/compass.TestGroup.add_test_case", "developers_guide/generated/compass.__main__.main", "developers_guide/generated/compass.cache.update_cache", "developers_guide/generated/compass.clean.clean_cases", "developers_guide/generated/compass.config.CompassConfigParser", "developers_guide/generated/compass.io.download", "developers_guide/generated/compass.io.symlink", "developers_guide/generated/compass.list.list_cases", "developers_guide/generated/compass.list.list_machines", "developers_guide/generated/compass.list.list_suites", "developers_guide/generated/compass.logging.log_method_call", "developers_guide/generated/compass.mesh.IcosahedralMeshStep", "developers_guide/generated/compass.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon", "developers_guide/generated/compass.mesh.IcosahedralMeshStep.get_cell_width", "developers_guide/generated/compass.mesh.IcosahedralMeshStep.get_subdivisions", "developers_guide/generated/compass.mesh.IcosahedralMeshStep.make_jigsaw_mesh", "developers_guide/generated/compass.mesh.IcosahedralMeshStep.run", "developers_guide/generated/compass.mesh.IcosahedralMeshStep.setup", "developers_guide/generated/compass.mesh.QuasiUniformSphericalMeshStep", "developers_guide/generated/compass.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon", "developers_guide/generated/compass.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh", "developers_guide/generated/compass.mesh.QuasiUniformSphericalMeshStep.run", "developers_guide/generated/compass.mesh.QuasiUniformSphericalMeshStep.setup", "developers_guide/generated/compass.mesh.spherical.SphericalBaseStep", "developers_guide/generated/compass.mesh.spherical.SphericalBaseStep.run", "developers_guide/generated/compass.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width", "developers_guide/generated/compass.mesh.spherical.SphericalBaseStep.setup", "developers_guide/generated/compass.model.make_graph_file", "developers_guide/generated/compass.model.partition", "developers_guide/generated/compass.model.run_model", "developers_guide/generated/compass.mpas_cores.get_mpas_cores", "developers_guide/generated/compass.parallel.check_parallel_system", "developers_guide/generated/compass.parallel.get_available_cores_and_nodes", "developers_guide/generated/compass.parallel.run_command", "developers_guide/generated/compass.parallel.set_cores_per_node", "developers_guide/generated/compass.provenance.write", "developers_guide/generated/compass.run.serial.run_single_step", "developers_guide/generated/compass.run.serial.run_tests", "developers_guide/generated/compass.setup.setup_case", "developers_guide/generated/compass.setup.setup_cases", "developers_guide/generated/compass.suite.clean_suite", "developers_guide/generated/compass.suite.setup_suite", "developers_guide/generated/compass.validate.compare_timers", "developers_guide/generated/compass.validate.compare_variables", "developers_guide/landice/api", "developers_guide/landice/framework", "developers_guide/landice/generated/compass.landice.Landice", "developers_guide/landice/generated/compass.landice.tests.calving_dt_convergence.CalvingDtConvergence", "developers_guide/landice/generated/compass.landice.tests.calving_dt_convergence.dt_convergence_test.DtConvergenceTest", "developers_guide/landice/generated/compass.landice.tests.calving_dt_convergence.dt_convergence_test.DtConvergenceTest.validate", "developers_guide/landice/generated/compass.landice.tests.calving_dt_convergence.run_model.RunModel", "developers_guide/landice/generated/compass.landice.tests.calving_dt_convergence.run_model.RunModel.run", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.CircularShelf", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.decomposition_test.DecompositionTest", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.decomposition_test.DecompositionTest.run", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.run_model.RunModel", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.run_model.RunModel.run", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.setup_mesh.SetupMesh", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.setup_mesh.SetupMesh.run", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.visualize.Visualize", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.visualize.Visualize.run", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.visualize.visualize_circular_shelf", "developers_guide/landice/generated/compass.landice.tests.dome.Dome", "developers_guide/landice/generated/compass.landice.tests.dome.decomposition_test.DecompositionTest", "developers_guide/landice/generated/compass.landice.tests.dome.decomposition_test.DecompositionTest.run", "developers_guide/landice/generated/compass.landice.tests.dome.restart_test.RestartTest", "developers_guide/landice/generated/compass.landice.tests.dome.restart_test.RestartTest.run", "developers_guide/landice/generated/compass.landice.tests.dome.run_model.RunModel", "developers_guide/landice/generated/compass.landice.tests.dome.run_model.RunModel.run", "developers_guide/landice/generated/compass.landice.tests.dome.run_model.RunModel.setup", "developers_guide/landice/generated/compass.landice.tests.dome.setup_mesh.SetupMesh", "developers_guide/landice/generated/compass.landice.tests.dome.setup_mesh.SetupMesh.run", "developers_guide/landice/generated/compass.landice.tests.dome.smoke_test.SmokeTest", "developers_guide/landice/generated/compass.landice.tests.dome.smoke_test.SmokeTest.run", "developers_guide/landice/generated/compass.landice.tests.dome.visualize.Visualize", "developers_guide/landice/generated/compass.landice.tests.dome.visualize.Visualize.run", "developers_guide/landice/generated/compass.landice.tests.dome.visualize.visualize_dome", "developers_guide/landice/generated/compass.landice.tests.eismint2.Eismint2", "developers_guide/landice/generated/compass.landice.tests.eismint2.decomposition_test.DecompositionTest", "developers_guide/landice/generated/compass.landice.tests.eismint2.decomposition_test.DecompositionTest.run", "developers_guide/landice/generated/compass.landice.tests.eismint2.restart_test.RestartTest", "developers_guide/landice/generated/compass.landice.tests.eismint2.restart_test.RestartTest.run", "developers_guide/landice/generated/compass.landice.tests.eismint2.run_experiment.RunExperiment", "developers_guide/landice/generated/compass.landice.tests.eismint2.run_experiment.RunExperiment.run", "developers_guide/landice/generated/compass.landice.tests.eismint2.run_experiment.RunExperiment.setup", "developers_guide/landice/generated/compass.landice.tests.eismint2.setup_mesh.SetupMesh", "developers_guide/landice/generated/compass.landice.tests.eismint2.setup_mesh.SetupMesh.run", "developers_guide/landice/generated/compass.landice.tests.eismint2.standard_experiments.StandardExperiments", "developers_guide/landice/generated/compass.landice.tests.eismint2.standard_experiments.StandardExperiments.run", "developers_guide/landice/generated/compass.landice.tests.eismint2.standard_experiments.visualize.Visualize", "developers_guide/landice/generated/compass.landice.tests.eismint2.standard_experiments.visualize.Visualize.run", "developers_guide/landice/generated/compass.landice.tests.eismint2.standard_experiments.visualize.visualize_eismint2", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.A.A", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.A.A.configure", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.A.A.run", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.A.visualize.Visualize", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.A.visualize.Visualize.run", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.B.B", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.B.B.configure", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.B.B.run", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.B.visualize.Visualize", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.B.visualize.Visualize.run", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.EnthalpyBenchmark", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.run_model.RunModel", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.run_model.RunModel.run", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.run_model.RunModel.setup", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.setup_mesh.SetupMesh", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.setup_mesh.SetupMesh.run", "developers_guide/landice/generated/compass.landice.tests.greenland.Greenland", "developers_guide/landice/generated/compass.landice.tests.greenland.decomposition_test.DecompositionTest", "developers_guide/landice/generated/compass.landice.tests.greenland.decomposition_test.DecompositionTest.run", "developers_guide/landice/generated/compass.landice.tests.greenland.high_res_mesh.HighResMesh", "developers_guide/landice/generated/compass.landice.tests.greenland.high_res_mesh.HighResMesh.run", "developers_guide/landice/generated/compass.landice.tests.greenland.mesh.Mesh", "developers_guide/landice/generated/compass.landice.tests.greenland.mesh.Mesh.build_cell_width", "developers_guide/landice/generated/compass.landice.tests.greenland.mesh.Mesh.run", "developers_guide/landice/generated/compass.landice.tests.greenland.restart_test.RestartTest", "developers_guide/landice/generated/compass.landice.tests.greenland.restart_test.RestartTest.run", "developers_guide/landice/generated/compass.landice.tests.greenland.run_model.RunModel", "developers_guide/landice/generated/compass.landice.tests.greenland.run_model.RunModel.run", "developers_guide/landice/generated/compass.landice.tests.greenland.run_model.RunModel.setup", "developers_guide/landice/generated/compass.landice.tests.greenland.smoke_test.SmokeTest", "developers_guide/landice/generated/compass.landice.tests.greenland.smoke_test.SmokeTest.run", "developers_guide/landice/generated/compass.landice.tests.humboldt.Humboldt", "developers_guide/landice/generated/compass.landice.tests.humboldt.decomposition_test.DecompositionTest", "developers_guide/landice/generated/compass.landice.tests.humboldt.decomposition_test.DecompositionTest.validate", "developers_guide/landice/generated/compass.landice.tests.humboldt.mesh.Mesh", "developers_guide/landice/generated/compass.landice.tests.humboldt.mesh.Mesh.run", "developers_guide/landice/generated/compass.landice.tests.humboldt.mesh_gen.MeshGen", "developers_guide/landice/generated/compass.landice.tests.humboldt.mesh_gen.MeshGen.run", "developers_guide/landice/generated/compass.landice.tests.humboldt.restart_test.RestartTest", "developers_guide/landice/generated/compass.landice.tests.humboldt.restart_test.RestartTest.validate", "developers_guide/landice/generated/compass.landice.tests.humboldt.run_model.RunModel", "developers_guide/landice/generated/compass.landice.tests.humboldt.run_model.RunModel.run", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.HydroRadial", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.decomposition_test.DecompositionTest", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.decomposition_test.DecompositionTest.run", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.restart_test.RestartTest", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.restart_test.RestartTest.run", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.run_model.RunModel", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.run_model.RunModel.run", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.run_model.RunModel.setup", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.setup_mesh.SetupMesh", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.setup_mesh.SetupMesh.run", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.spinup_test.SpinupTest", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.spinup_test.SpinupTest.run", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.steady_state_drift_test.SteadyStateDriftTest", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.steady_state_drift_test.SteadyStateDriftTest.run", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.visualize.Visualize", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.visualize.Visualize.run", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.visualize.visualize_hydro_radial", "developers_guide/landice/generated/compass.landice.tests.kangerlussuaq.Kangerlussuaq", "developers_guide/landice/generated/compass.landice.tests.kangerlussuaq.mesh.Mesh", "developers_guide/landice/generated/compass.landice.tests.kangerlussuaq.mesh.Mesh.run", "developers_guide/landice/generated/compass.landice.tests.kangerlussuaq.mesh_gen.MeshGen", "developers_guide/landice/generated/compass.landice.tests.kangerlussuaq.mesh_gen.MeshGen.run", "developers_guide/landice/generated/compass.landice.tests.koge_bugt_s.KogeBugtS", "developers_guide/landice/generated/compass.landice.tests.koge_bugt_s.mesh.Mesh", "developers_guide/landice/generated/compass.landice.tests.koge_bugt_s.mesh.Mesh.run", "developers_guide/landice/generated/compass.landice.tests.koge_bugt_s.mesh_gen.MeshGen", "developers_guide/landice/generated/compass.landice.tests.koge_bugt_s.mesh_gen.MeshGen.run", "developers_guide/landice/generated/compass.landice.tests.mismipplus.MISMIPplus", "developers_guide/landice/generated/compass.landice.tests.mismipplus.run_model.RunModel", "developers_guide/landice/generated/compass.landice.tests.mismipplus.run_model.RunModel.run", "developers_guide/landice/generated/compass.landice.tests.mismipplus.run_model.RunModel.setup", "developers_guide/landice/generated/compass.landice.tests.mismipplus.smoke_test.SmokeTest", "developers_guide/landice/generated/compass.landice.tests.mismipplus.smoke_test.SmokeTest.run", "developers_guide/landice/generated/compass.landice.tests.thwaites.Thwaites", "developers_guide/landice/generated/compass.landice.tests.thwaites.decomposition_test.DecompositionTest", "developers_guide/landice/generated/compass.landice.tests.thwaites.decomposition_test.DecompositionTest.run", "developers_guide/landice/generated/compass.landice.tests.thwaites.restart_test.RestartTest", "developers_guide/landice/generated/compass.landice.tests.thwaites.restart_test.RestartTest.run", "developers_guide/landice/generated/compass.landice.tests.thwaites.run_model.RunModel", "developers_guide/landice/generated/compass.landice.tests.thwaites.run_model.RunModel.run", "developers_guide/landice/generated/compass.landice.tests.thwaites.run_model.RunModel.setup", "developers_guide/landice/index", "developers_guide/landice/test_groups/calving_dt_convergence", "developers_guide/landice/test_groups/circular_shelf", "developers_guide/landice/test_groups/dome", "developers_guide/landice/test_groups/eismint2", "developers_guide/landice/test_groups/enthalpy_benchmark", "developers_guide/landice/test_groups/greenland", "developers_guide/landice/test_groups/humboldt", "developers_guide/landice/test_groups/hydro_radial", "developers_guide/landice/test_groups/index", "developers_guide/landice/test_groups/kangerlussuaq", "developers_guide/landice/test_groups/koge_bugt_s", "developers_guide/landice/test_groups/mismipplus", "developers_guide/landice/test_groups/thwaites", "developers_guide/machines/anvil", "developers_guide/machines/badger", "developers_guide/machines/chrysalis", "developers_guide/machines/compy", "developers_guide/machines/cori", "developers_guide/machines/index", "developers_guide/ocean/api", "developers_guide/ocean/framework", "developers_guide/ocean/generated/compass.ocean.Ocean", "developers_guide/ocean/generated/compass.ocean.haney.compute_haney_number", "developers_guide/ocean/generated/compass.ocean.iceshelf.adjust_ssh", "developers_guide/ocean/generated/compass.ocean.iceshelf.compute_land_ice_pressure_and_draft", "developers_guide/ocean/generated/compass.ocean.mesh.cull.CullMeshStep", "developers_guide/ocean/generated/compass.ocean.mesh.cull.CullMeshStep.run", "developers_guide/ocean/generated/compass.ocean.mesh.cull.CullMeshStep.setup", "developers_guide/ocean/generated/compass.ocean.mesh.cull.cull_mesh", "developers_guide/ocean/generated/compass.ocean.mesh.floodplain.FloodplainMeshStep", "developers_guide/ocean/generated/compass.ocean.mesh.floodplain.FloodplainMeshStep.run", "developers_guide/ocean/generated/compass.ocean.particles.remap_particles", "developers_guide/ocean/generated/compass.ocean.particles.write", "developers_guide/ocean/generated/compass.ocean.plot.plot_initial_state", "developers_guide/ocean/generated/compass.ocean.plot.plot_vertical_grid", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.BaroclinicChannel", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.configure", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.decomp_test.DecompTest", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.decomp_test.DecompTest.configure", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.decomp_test.DecompTest.run", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.default.Default", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.default.Default.configure", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.default.Default.run", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.forward.Forward", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.forward.Forward.run", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.forward.Forward.setup", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.initial_state.InitialState", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.initial_state.InitialState.run", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.initial_state.InitialState.setup", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.restart_test.RestartTest", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.restart_test.RestartTest.configure", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.restart_test.RestartTest.run", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.rpe_test.RpeTest", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.rpe_test.RpeTest.configure", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.rpe_test.RpeTest.run", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.run", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.setup", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.threads_test.ThreadsTest", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.configure", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.run", "developers_guide/ocean/generated/compass.ocean.tests.drying_slope.DryingSlope", "developers_guide/ocean/generated/compass.ocean.tests.drying_slope.default.Default", "developers_guide/ocean/generated/compass.ocean.tests.drying_slope.default.Default.configure", "developers_guide/ocean/generated/compass.ocean.tests.drying_slope.forward.Forward", "developers_guide/ocean/generated/compass.ocean.tests.drying_slope.forward.Forward.run", "developers_guide/ocean/generated/compass.ocean.tests.drying_slope.initial_state.InitialState", "developers_guide/ocean/generated/compass.ocean.tests.drying_slope.initial_state.InitialState.run", "developers_guide/ocean/generated/compass.ocean.tests.drying_slope.viz.Viz", "developers_guide/ocean/generated/compass.ocean.tests.drying_slope.viz.Viz.run", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.GlobalConvergence", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.CosineBell", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.CosineBell.configure", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.CosineBell.run", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.analysis.Analysis", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rmse", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.run", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.forward.Forward", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.forward.Forward.get_dt", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.forward.Forward.run", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.forward.Forward.setup", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.init.Init", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.init.Init.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.GlobalOcean", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.analysis_test.AnalysisTest", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.analysis_test.AnalysisTest.configure", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.analysis_test.AnalysisTest.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.configure", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.configure.configure_global_ocean", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.daily_output_test.DailyOutputTest", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.daily_output_test.DailyOutputTest.configure", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.daily_output_test.DailyOutputTest.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.decomp_test.DecompTest", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.decomp_test.DecompTest.configure", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.decomp_test.DecompTest.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.dynamic_adjustment.DynamicAdjustment", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.dynamic_adjustment.DynamicAdjustment.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.FilesForE3SM", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.FilesForE3SM.configure", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.FilesForE3SM.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.diagnostics_files.DiagnosticsFiles", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.diagnostics_files.DiagnosticsFiles.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.ocean_graph_partition.OceanGraphPartition", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.ocean_graph_partition.OceanGraphPartition.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.ocean_initial_condition.OceanInitialCondition", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.ocean_initial_condition.OceanInitialCondition.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.scrip.Scrip", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.scrip.Scrip.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.seaice_initial_condition.SeaiceInitialCondition", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.seaice_initial_condition.SeaiceInitialCondition.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.forward.ForwardStep", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.forward.ForwardStep.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.forward.ForwardStep.setup", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.forward.ForwardTestCase", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.forward.ForwardTestCase.configure", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.forward.ForwardTestCase.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.init.Init", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.init.Init.configure", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.init.Init.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.init.initial_state.InitialState", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.init.initial_state.InitialState.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.init.initial_state.InitialState.setup", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.init.ssh_adjustment.SshAdjustment", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.init.ssh_adjustment.SshAdjustment.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.init.ssh_adjustment.SshAdjustment.setup", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.Mesh", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.Mesh.configure", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.Mesh.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.ec30to60.EC30to60BaseMesh", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.ec30to60.EC30to60BaseMesh.build_cell_width_lat_lon", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.ec30to60.dynamic_adjustment.EC30to60DynamicAdjustment", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.ec30to60.dynamic_adjustment.EC30to60DynamicAdjustment.configure", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.ec30to60.dynamic_adjustment.EC30to60DynamicAdjustment.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.qu240.dynamic_adjustment.QU240DynamicAdjustment", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.qu240.dynamic_adjustment.QU240DynamicAdjustment.configure", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.qu240.dynamic_adjustment.QU240DynamicAdjustment.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.so12to60.SO12to60BaseMesh", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.so12to60.SO12to60BaseMesh.build_cell_width_lat_lon", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.so12to60.dynamic_adjustment.SO12to60DynamicAdjustment", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.so12to60.dynamic_adjustment.SO12to60DynamicAdjustment.configure", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.so12to60.dynamic_adjustment.SO12to60DynamicAdjustment.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.wc14.WC14BaseMesh", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.wc14.WC14BaseMesh.build_cell_width_lat_lon", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.wc14.dynamic_adjustment.WC14DynamicAdjustment", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.wc14.dynamic_adjustment.WC14DynamicAdjustment.configure", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.wc14.dynamic_adjustment.WC14DynamicAdjustment.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.metadata.add_mesh_and_init_metadata", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.metadata.get_e3sm_mesh_names", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.performance_test.PerformanceTest", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.performance_test.PerformanceTest.configure", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.performance_test.PerformanceTest.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.restart_test.RestartTest", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.restart_test.RestartTest.configure", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.restart_test.RestartTest.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.threads_test.ThreadsTest", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.threads_test.ThreadsTest.configure", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.threads_test.ThreadsTest.run", "developers_guide/ocean/generated/compass.ocean.tests.gotm.Gotm", "developers_guide/ocean/generated/compass.ocean.tests.gotm.default.Default", "developers_guide/ocean/generated/compass.ocean.tests.gotm.default.Default.validate", "developers_guide/ocean/generated/compass.ocean.tests.gotm.default.analysis.Analysis", "developers_guide/ocean/generated/compass.ocean.tests.gotm.default.analysis.Analysis.run", "developers_guide/ocean/generated/compass.ocean.tests.gotm.default.forward.Forward", "developers_guide/ocean/generated/compass.ocean.tests.gotm.default.forward.Forward.run", "developers_guide/ocean/generated/compass.ocean.tests.gotm.default.init.Init", "developers_guide/ocean/generated/compass.ocean.tests.gotm.default.init.Init.run", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.Hurricane", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.analysis.Analysis", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.analysis.Analysis.read_pointstats", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.analysis.Analysis.read_station_data", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.analysis.Analysis.read_station_file", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.analysis.Analysis.run", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.analysis.Analysis.setup", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.configure", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.forward.Forward", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.forward.Forward.configure", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.forward.Forward.run", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.forward.forward.ForwardStep", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.forward.forward.ForwardStep.run", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.forward.forward.ForwardStep.setup", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.Init", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.Init.configure", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.Init.run", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.create_pointstats_file.CreatePointstatsFile", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.create_pointstats_file.CreatePointstatsFile.create_pointstats_file", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.create_pointstats_file.CreatePointstatsFile.run", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.initial_state.InitialState", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.initial_state.InitialState.run", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.initial_state.InitialState.setup", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing.interpolate_data_to_grid", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing.plot_interp_data", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing.run", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing.write_to_file", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.mesh.Mesh", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.mesh.Mesh.configure", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.mesh.Mesh.run", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.mesh.dequ120at30cr10rr2.DEQU120at30cr10rr2BaseMesh", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.mesh.dequ120at30cr10rr2.DEQU120at30cr10rr2BaseMesh.build_cell_width_lat_lon", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.IceShelf2d", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.configure", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.default.Default", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.default.Default.configure", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.default.Default.run", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.forward.Forward", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.forward.Forward.run", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.forward.Forward.setup", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.initial_state.InitialState", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.initial_state.InitialState.run", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.restart_test.RestartTest", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.restart_test.RestartTest.configure", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.restart_test.RestartTest.run", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.ssh_adjustment.SshAdjustment", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.ssh_adjustment.SshAdjustment.run", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.ssh_adjustment.SshAdjustment.setup", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.viz.Viz", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.viz.Viz.run", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.InternalWave", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.default.Default", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.default.Default.validate", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.forward.Forward", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.forward.Forward.run", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.initial_state.InitialState", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.initial_state.InitialState.run", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.rpe_test.RpeTest", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.rpe_test.analysis.Analysis", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.rpe_test.analysis.Analysis.run", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.ten_day_test.TenDayTest", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.ten_day_test.TenDayTest.validate", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.viz.Viz", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.viz.Viz.run", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.IsomipPlus", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.evap.update_evaporation_flux", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.forward.Forward", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.forward.Forward.run", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.forward.Forward.setup", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.geom.interpolate_ocean_mask", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.geom.process_input_geometry", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.initial_state.InitialState", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.initial_state.InitialState.run", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.misomip.Misomip", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.misomip.Misomip.run", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.ocean_test.OceanTest", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.ocean_test.OceanTest.configure", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.ocean_test.OceanTest.run", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.ssh_adjustment.SshAdjustment", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.ssh_adjustment.SshAdjustment.run", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.ssh_adjustment.SshAdjustment.setup", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.streamfunction.Streamfunction", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.streamfunction.Streamfunction.run", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.Viz", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.Viz.run", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.file_complete", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.images_to_movies", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_3d_field_top_bot_section", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_barotropic_streamfunction", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_horiz_series", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_ice_shelf_boundary_variables", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_layer_interfaces", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_melt_rates", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_overturning_streamfunction", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_potential_density", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_salinity", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_temperature", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.TimeSeriesPlotter", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.TimeSeriesPlotter.plot_melt_time_series", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.TimeSeriesPlotter.plot_time_series", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.PlanarConvergence", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.conv_init.ConvInit", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.conv_init.ConvInit.run", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.conv_test_case.ConvTestCase", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.conv_test_case.ConvTestCase.configure", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.conv_test_case.ConvTestCase.run", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.conv_test_case.ConvTestCase.update_cores", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.forward.Forward", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.forward.Forward.get_dt_duration", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.forward.Forward.run", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.forward.Forward.setup", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.horizontal_advection.HorizontalAdvection", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.horizontal_advection.HorizontalAdvection.configure", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.horizontal_advection.HorizontalAdvection.run", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.horizontal_advection.analysis.Analysis", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.horizontal_advection.analysis.Analysis.rmse", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.horizontal_advection.analysis.Analysis.run", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.horizontal_advection.init.Init", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.horizontal_advection.init.Init.run", "developers_guide/ocean/generated/compass.ocean.tests.soma.Soma", "developers_guide/ocean/generated/compass.ocean.tests.soma.analysis.Analysis", "developers_guide/ocean/generated/compass.ocean.tests.soma.analysis.Analysis.run", "developers_guide/ocean/generated/compass.ocean.tests.soma.forward.Forward", "developers_guide/ocean/generated/compass.ocean.tests.soma.forward.Forward.run", "developers_guide/ocean/generated/compass.ocean.tests.soma.initial_state.InitialState", "developers_guide/ocean/generated/compass.ocean.tests.soma.initial_state.InitialState.run", "developers_guide/ocean/generated/compass.ocean.tests.soma.soma_test_case.SomaTestCase", "developers_guide/ocean/generated/compass.ocean.tests.soma.soma_test_case.SomaTestCase.validate", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.SphereTransport", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.CorrelatedTracers2D", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.CorrelatedTracers2D.configure", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.CorrelatedTracers2D.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.analysis.Analysis", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.analysis.Analysis.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.Forward", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.Forward.get_timestep_str", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.Forward.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.Forward.setup", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.init.Init", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.init.Init.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.mesh.Mesh", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.mesh.Mesh.build_cell_width_lat_lon", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.mesh.Mesh.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.Divergent2D", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.Divergent2D.configure", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.Divergent2D.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.analysis.Analysis", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.analysis.Analysis.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.forward.Forward", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.forward.Forward.get_timestep_str", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.forward.Forward.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.forward.Forward.setup", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.init.Init", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.init.Init.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.mesh.Mesh", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.mesh.Mesh.build_cell_width_lat_lon", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.mesh.Mesh.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.Nondivergent2D", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.Nondivergent2D.configure", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.Nondivergent2D.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.analysis.Analysis", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.analysis.Analysis.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.forward.Forward", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.forward.Forward.get_timestep_str", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.forward.Forward.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.forward.Forward.setup", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.init.Init", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.init.Init.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.mesh.Mesh", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.mesh.Mesh.build_cell_width_lat_lon", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.mesh.Mesh.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.compute_convergence_rates", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.compute_error_from_output_ncfile", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.make_convergence_arrays", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.plot_convergence", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.plot_filament", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.plot_over_and_undershoot_errors", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.plot_sol", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.print_data_as_csv", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.print_error_conv_table", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.read_ncl_rgb_file", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.Rotation2D", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.Rotation2D.configure", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.Rotation2D.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.analysis.Analysis", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.analysis.Analysis.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.forward.Forward", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.forward.Forward.get_timestep_str", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.forward.Forward.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.forward.Forward.setup", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.init.Init", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.init.Init.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.mesh.Mesh", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.mesh.Mesh.build_cell_width_lat_lon", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.mesh.Mesh.run", "developers_guide/ocean/generated/compass.ocean.tests.ziso.Ziso", "developers_guide/ocean/generated/compass.ocean.tests.ziso.ZisoTestCase", "developers_guide/ocean/generated/compass.ocean.tests.ziso.ZisoTestCase.configure", "developers_guide/ocean/generated/compass.ocean.tests.ziso.ZisoTestCase.run", "developers_guide/ocean/generated/compass.ocean.tests.ziso.configure", "developers_guide/ocean/generated/compass.ocean.tests.ziso.forward.Forward", "developers_guide/ocean/generated/compass.ocean.tests.ziso.forward.Forward.run", "developers_guide/ocean/generated/compass.ocean.tests.ziso.forward.Forward.setup", "developers_guide/ocean/generated/compass.ocean.tests.ziso.initial_state.InitialState", "developers_guide/ocean/generated/compass.ocean.tests.ziso.initial_state.InitialState.run", "developers_guide/ocean/generated/compass.ocean.tests.ziso.with_frazil.WithFrazil", "developers_guide/ocean/generated/compass.ocean.tests.ziso.with_frazil.WithFrazil.configure", "developers_guide/ocean/generated/compass.ocean.tests.ziso.with_frazil.WithFrazil.run", "developers_guide/ocean/generated/compass.ocean.vertical.grid_1d.generate_1d_grid", "developers_guide/ocean/generated/compass.ocean.vertical.grid_1d.write_1d_grid", "developers_guide/ocean/generated/compass.ocean.vertical.init_vertical_coord", "developers_guide/ocean/generated/compass.ocean.vertical.partial_cells.alter_bottom_depth", "developers_guide/ocean/generated/compass.ocean.vertical.partial_cells.alter_ssh", "developers_guide/ocean/generated/compass.ocean.vertical.zlevel.compute_min_max_level_cell", "developers_guide/ocean/generated/compass.ocean.vertical.zlevel.compute_z_level_layer_thickness", "developers_guide/ocean/generated/compass.ocean.vertical.zlevel.compute_z_level_resting_thickness", "developers_guide/ocean/generated/compass.ocean.vertical.zlevel.init_z_level_vertical_coord", "developers_guide/ocean/generated/compass.ocean.vertical.zstar.init_z_star_vertical_coord", "developers_guide/ocean/index", "developers_guide/ocean/test_groups/baroclinic_channel", "developers_guide/ocean/test_groups/drying_slope", "developers_guide/ocean/test_groups/global_convergence", "developers_guide/ocean/test_groups/global_ocean", "developers_guide/ocean/test_groups/gotm", "developers_guide/ocean/test_groups/hurricane", "developers_guide/ocean/test_groups/ice_shelf_2d", "developers_guide/ocean/test_groups/index", "developers_guide/ocean/test_groups/internal_wave", "developers_guide/ocean/test_groups/isomip_plus", "developers_guide/ocean/test_groups/planar_convergence", "developers_guide/ocean/test_groups/soma", "developers_guide/ocean/test_groups/sphere_transport", "developers_guide/ocean/test_groups/spherical_harmonic_transform", "developers_guide/ocean/test_groups/ziso", "developers_guide/organization", "developers_guide/overview", "developers_guide/quick_start", "developers_guide/troubleshooting", "glossary", "index", "tutorials/dev_add_param_study", "tutorials/dev_add_test_group", "tutorials/dev_porting_legacy", "users_guide/config_files", "users_guide/landice/framework/index", "users_guide/landice/index", "users_guide/landice/suites", "users_guide/landice/test_groups/calving_dt_convergence", "users_guide/landice/test_groups/circular_shelf", "users_guide/landice/test_groups/dome", "users_guide/landice/test_groups/eismint2", "users_guide/landice/test_groups/enthalpy_benchmark", "users_guide/landice/test_groups/greenland", "users_guide/landice/test_groups/humboldt", "users_guide/landice/test_groups/hydro_radial", "users_guide/landice/test_groups/index", "users_guide/landice/test_groups/kangerlussuaq", "users_guide/landice/test_groups/koge_bugt_s", "users_guide/landice/test_groups/mismipplus", "users_guide/landice/test_groups/thwaites", "users_guide/machines/anvil", "users_guide/machines/badger", "users_guide/machines/chrysalis", "users_guide/machines/compy", "users_guide/machines/cori", "users_guide/machines/index", "users_guide/ocean/framework/ice_shelf", "users_guide/ocean/framework/index", "users_guide/ocean/framework/vertical", "users_guide/ocean/index", "users_guide/ocean/suites", "users_guide/ocean/test_groups/baroclinic_channel", "users_guide/ocean/test_groups/drying_slope", "users_guide/ocean/test_groups/global_convergence", "users_guide/ocean/test_groups/global_ocean", "users_guide/ocean/test_groups/gotm", "users_guide/ocean/test_groups/hurricane", "users_guide/ocean/test_groups/ice_shelf_2d", "users_guide/ocean/test_groups/index", "users_guide/ocean/test_groups/internal_wave", "users_guide/ocean/test_groups/isomip_plus", "users_guide/ocean/test_groups/planar_convergence", "users_guide/ocean/test_groups/soma", "users_guide/ocean/test_groups/sphere_transport", "users_guide/ocean/test_groups/spherical_harmonic_transform", "users_guide/ocean/test_groups/ziso", "users_guide/quick_start", "users_guide/test_cases", "users_guide/test_suites", "versions"], "filenames": ["design_docs/cached_outputs.rst", "design_docs/compass_package.rst", "design_docs/index.rst", "design_docs/template.rst", "developers_guide/api.rst", "developers_guide/building_docs.rst", "developers_guide/command_line.rst", "developers_guide/docs.rst", "developers_guide/framework.rst", "developers_guide/generated/compass.MpasCore.rst", "developers_guide/generated/compass.MpasCore.add_test_group.rst", "developers_guide/generated/compass.Step.rst", "developers_guide/generated/compass.Step.add_input_file.rst", "developers_guide/generated/compass.Step.add_model_as_input.rst", "developers_guide/generated/compass.Step.add_namelist_file.rst", "developers_guide/generated/compass.Step.add_namelist_options.rst", "developers_guide/generated/compass.Step.add_output_file.rst", "developers_guide/generated/compass.Step.add_streams_file.rst", "developers_guide/generated/compass.Step.constrain_resources.rst", "developers_guide/generated/compass.Step.run.rst", "developers_guide/generated/compass.Step.runtime_setup.rst", "developers_guide/generated/compass.Step.set_resources.rst", "developers_guide/generated/compass.Step.setup.rst", "developers_guide/generated/compass.Step.update_namelist_at_runtime.rst", "developers_guide/generated/compass.Step.update_namelist_pio.rst", "developers_guide/generated/compass.Step.update_streams_at_runtime.rst", "developers_guide/generated/compass.TestCase.rst", "developers_guide/generated/compass.TestCase.add_step.rst", "developers_guide/generated/compass.TestCase.configure.rst", "developers_guide/generated/compass.TestCase.run.rst", "developers_guide/generated/compass.TestCase.validate.rst", "developers_guide/generated/compass.TestGroup.rst", "developers_guide/generated/compass.TestGroup.add_test_case.rst", "developers_guide/generated/compass.__main__.main.rst", "developers_guide/generated/compass.cache.update_cache.rst", "developers_guide/generated/compass.clean.clean_cases.rst", "developers_guide/generated/compass.config.CompassConfigParser.rst", "developers_guide/generated/compass.io.download.rst", "developers_guide/generated/compass.io.symlink.rst", "developers_guide/generated/compass.list.list_cases.rst", "developers_guide/generated/compass.list.list_machines.rst", "developers_guide/generated/compass.list.list_suites.rst", "developers_guide/generated/compass.logging.log_method_call.rst", "developers_guide/generated/compass.mesh.IcosahedralMeshStep.rst", "developers_guide/generated/compass.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon.rst", "developers_guide/generated/compass.mesh.IcosahedralMeshStep.get_cell_width.rst", "developers_guide/generated/compass.mesh.IcosahedralMeshStep.get_subdivisions.rst", "developers_guide/generated/compass.mesh.IcosahedralMeshStep.make_jigsaw_mesh.rst", "developers_guide/generated/compass.mesh.IcosahedralMeshStep.run.rst", "developers_guide/generated/compass.mesh.IcosahedralMeshStep.setup.rst", "developers_guide/generated/compass.mesh.QuasiUniformSphericalMeshStep.rst", "developers_guide/generated/compass.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon.rst", "developers_guide/generated/compass.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh.rst", "developers_guide/generated/compass.mesh.QuasiUniformSphericalMeshStep.run.rst", "developers_guide/generated/compass.mesh.QuasiUniformSphericalMeshStep.setup.rst", "developers_guide/generated/compass.mesh.spherical.SphericalBaseStep.rst", "developers_guide/generated/compass.mesh.spherical.SphericalBaseStep.run.rst", "developers_guide/generated/compass.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width.rst", "developers_guide/generated/compass.mesh.spherical.SphericalBaseStep.setup.rst", "developers_guide/generated/compass.model.make_graph_file.rst", "developers_guide/generated/compass.model.partition.rst", "developers_guide/generated/compass.model.run_model.rst", "developers_guide/generated/compass.mpas_cores.get_mpas_cores.rst", "developers_guide/generated/compass.parallel.check_parallel_system.rst", "developers_guide/generated/compass.parallel.get_available_cores_and_nodes.rst", "developers_guide/generated/compass.parallel.run_command.rst", "developers_guide/generated/compass.parallel.set_cores_per_node.rst", "developers_guide/generated/compass.provenance.write.rst", "developers_guide/generated/compass.run.serial.run_single_step.rst", "developers_guide/generated/compass.run.serial.run_tests.rst", "developers_guide/generated/compass.setup.setup_case.rst", "developers_guide/generated/compass.setup.setup_cases.rst", "developers_guide/generated/compass.suite.clean_suite.rst", "developers_guide/generated/compass.suite.setup_suite.rst", "developers_guide/generated/compass.validate.compare_timers.rst", "developers_guide/generated/compass.validate.compare_variables.rst", "developers_guide/landice/api.rst", "developers_guide/landice/framework.rst", "developers_guide/landice/generated/compass.landice.Landice.rst", "developers_guide/landice/generated/compass.landice.tests.calving_dt_convergence.CalvingDtConvergence.rst", "developers_guide/landice/generated/compass.landice.tests.calving_dt_convergence.dt_convergence_test.DtConvergenceTest.rst", "developers_guide/landice/generated/compass.landice.tests.calving_dt_convergence.dt_convergence_test.DtConvergenceTest.validate.rst", "developers_guide/landice/generated/compass.landice.tests.calving_dt_convergence.run_model.RunModel.rst", "developers_guide/landice/generated/compass.landice.tests.calving_dt_convergence.run_model.RunModel.run.rst", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.CircularShelf.rst", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.decomposition_test.DecompositionTest.rst", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.decomposition_test.DecompositionTest.run.rst", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.run_model.RunModel.rst", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.run_model.RunModel.run.rst", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.setup_mesh.SetupMesh.rst", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.setup_mesh.SetupMesh.run.rst", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.visualize.Visualize.rst", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.visualize.Visualize.run.rst", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.visualize.visualize_circular_shelf.rst", "developers_guide/landice/generated/compass.landice.tests.dome.Dome.rst", "developers_guide/landice/generated/compass.landice.tests.dome.decomposition_test.DecompositionTest.rst", "developers_guide/landice/generated/compass.landice.tests.dome.decomposition_test.DecompositionTest.run.rst", "developers_guide/landice/generated/compass.landice.tests.dome.restart_test.RestartTest.rst", "developers_guide/landice/generated/compass.landice.tests.dome.restart_test.RestartTest.run.rst", "developers_guide/landice/generated/compass.landice.tests.dome.run_model.RunModel.rst", "developers_guide/landice/generated/compass.landice.tests.dome.run_model.RunModel.run.rst", "developers_guide/landice/generated/compass.landice.tests.dome.run_model.RunModel.setup.rst", "developers_guide/landice/generated/compass.landice.tests.dome.setup_mesh.SetupMesh.rst", "developers_guide/landice/generated/compass.landice.tests.dome.setup_mesh.SetupMesh.run.rst", "developers_guide/landice/generated/compass.landice.tests.dome.smoke_test.SmokeTest.rst", "developers_guide/landice/generated/compass.landice.tests.dome.smoke_test.SmokeTest.run.rst", "developers_guide/landice/generated/compass.landice.tests.dome.visualize.Visualize.rst", "developers_guide/landice/generated/compass.landice.tests.dome.visualize.Visualize.run.rst", "developers_guide/landice/generated/compass.landice.tests.dome.visualize.visualize_dome.rst", "developers_guide/landice/generated/compass.landice.tests.eismint2.Eismint2.rst", "developers_guide/landice/generated/compass.landice.tests.eismint2.decomposition_test.DecompositionTest.rst", "developers_guide/landice/generated/compass.landice.tests.eismint2.decomposition_test.DecompositionTest.run.rst", "developers_guide/landice/generated/compass.landice.tests.eismint2.restart_test.RestartTest.rst", "developers_guide/landice/generated/compass.landice.tests.eismint2.restart_test.RestartTest.run.rst", "developers_guide/landice/generated/compass.landice.tests.eismint2.run_experiment.RunExperiment.rst", "developers_guide/landice/generated/compass.landice.tests.eismint2.run_experiment.RunExperiment.run.rst", "developers_guide/landice/generated/compass.landice.tests.eismint2.run_experiment.RunExperiment.setup.rst", "developers_guide/landice/generated/compass.landice.tests.eismint2.setup_mesh.SetupMesh.rst", "developers_guide/landice/generated/compass.landice.tests.eismint2.setup_mesh.SetupMesh.run.rst", "developers_guide/landice/generated/compass.landice.tests.eismint2.standard_experiments.StandardExperiments.rst", "developers_guide/landice/generated/compass.landice.tests.eismint2.standard_experiments.StandardExperiments.run.rst", "developers_guide/landice/generated/compass.landice.tests.eismint2.standard_experiments.visualize.Visualize.rst", "developers_guide/landice/generated/compass.landice.tests.eismint2.standard_experiments.visualize.Visualize.run.rst", "developers_guide/landice/generated/compass.landice.tests.eismint2.standard_experiments.visualize.visualize_eismint2.rst", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.A.A.rst", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.A.A.configure.rst", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.A.A.run.rst", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.A.visualize.Visualize.rst", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.A.visualize.Visualize.run.rst", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.B.B.rst", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.B.B.configure.rst", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.B.B.run.rst", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.B.visualize.Visualize.rst", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.B.visualize.Visualize.run.rst", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.EnthalpyBenchmark.rst", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.run_model.RunModel.rst", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.run_model.RunModel.run.rst", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.run_model.RunModel.setup.rst", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.setup_mesh.SetupMesh.rst", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.setup_mesh.SetupMesh.run.rst", "developers_guide/landice/generated/compass.landice.tests.greenland.Greenland.rst", "developers_guide/landice/generated/compass.landice.tests.greenland.decomposition_test.DecompositionTest.rst", "developers_guide/landice/generated/compass.landice.tests.greenland.decomposition_test.DecompositionTest.run.rst", "developers_guide/landice/generated/compass.landice.tests.greenland.high_res_mesh.HighResMesh.rst", "developers_guide/landice/generated/compass.landice.tests.greenland.high_res_mesh.HighResMesh.run.rst", "developers_guide/landice/generated/compass.landice.tests.greenland.mesh.Mesh.rst", "developers_guide/landice/generated/compass.landice.tests.greenland.mesh.Mesh.build_cell_width.rst", "developers_guide/landice/generated/compass.landice.tests.greenland.mesh.Mesh.run.rst", "developers_guide/landice/generated/compass.landice.tests.greenland.restart_test.RestartTest.rst", "developers_guide/landice/generated/compass.landice.tests.greenland.restart_test.RestartTest.run.rst", "developers_guide/landice/generated/compass.landice.tests.greenland.run_model.RunModel.rst", "developers_guide/landice/generated/compass.landice.tests.greenland.run_model.RunModel.run.rst", "developers_guide/landice/generated/compass.landice.tests.greenland.run_model.RunModel.setup.rst", "developers_guide/landice/generated/compass.landice.tests.greenland.smoke_test.SmokeTest.rst", "developers_guide/landice/generated/compass.landice.tests.greenland.smoke_test.SmokeTest.run.rst", "developers_guide/landice/generated/compass.landice.tests.humboldt.Humboldt.rst", "developers_guide/landice/generated/compass.landice.tests.humboldt.decomposition_test.DecompositionTest.rst", "developers_guide/landice/generated/compass.landice.tests.humboldt.decomposition_test.DecompositionTest.validate.rst", "developers_guide/landice/generated/compass.landice.tests.humboldt.mesh.Mesh.rst", "developers_guide/landice/generated/compass.landice.tests.humboldt.mesh.Mesh.run.rst", "developers_guide/landice/generated/compass.landice.tests.humboldt.mesh_gen.MeshGen.rst", "developers_guide/landice/generated/compass.landice.tests.humboldt.mesh_gen.MeshGen.run.rst", "developers_guide/landice/generated/compass.landice.tests.humboldt.restart_test.RestartTest.rst", "developers_guide/landice/generated/compass.landice.tests.humboldt.restart_test.RestartTest.validate.rst", "developers_guide/landice/generated/compass.landice.tests.humboldt.run_model.RunModel.rst", "developers_guide/landice/generated/compass.landice.tests.humboldt.run_model.RunModel.run.rst", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.HydroRadial.rst", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.decomposition_test.DecompositionTest.rst", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.decomposition_test.DecompositionTest.run.rst", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.restart_test.RestartTest.rst", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.restart_test.RestartTest.run.rst", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.run_model.RunModel.rst", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.run_model.RunModel.run.rst", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.run_model.RunModel.setup.rst", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.setup_mesh.SetupMesh.rst", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.setup_mesh.SetupMesh.run.rst", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.spinup_test.SpinupTest.rst", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.spinup_test.SpinupTest.run.rst", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.steady_state_drift_test.SteadyStateDriftTest.rst", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.steady_state_drift_test.SteadyStateDriftTest.run.rst", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.visualize.Visualize.rst", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.visualize.Visualize.run.rst", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.visualize.visualize_hydro_radial.rst", "developers_guide/landice/generated/compass.landice.tests.kangerlussuaq.Kangerlussuaq.rst", "developers_guide/landice/generated/compass.landice.tests.kangerlussuaq.mesh.Mesh.rst", "developers_guide/landice/generated/compass.landice.tests.kangerlussuaq.mesh.Mesh.run.rst", "developers_guide/landice/generated/compass.landice.tests.kangerlussuaq.mesh_gen.MeshGen.rst", "developers_guide/landice/generated/compass.landice.tests.kangerlussuaq.mesh_gen.MeshGen.run.rst", "developers_guide/landice/generated/compass.landice.tests.koge_bugt_s.KogeBugtS.rst", "developers_guide/landice/generated/compass.landice.tests.koge_bugt_s.mesh.Mesh.rst", "developers_guide/landice/generated/compass.landice.tests.koge_bugt_s.mesh.Mesh.run.rst", "developers_guide/landice/generated/compass.landice.tests.koge_bugt_s.mesh_gen.MeshGen.rst", "developers_guide/landice/generated/compass.landice.tests.koge_bugt_s.mesh_gen.MeshGen.run.rst", "developers_guide/landice/generated/compass.landice.tests.mismipplus.MISMIPplus.rst", "developers_guide/landice/generated/compass.landice.tests.mismipplus.run_model.RunModel.rst", "developers_guide/landice/generated/compass.landice.tests.mismipplus.run_model.RunModel.run.rst", "developers_guide/landice/generated/compass.landice.tests.mismipplus.run_model.RunModel.setup.rst", "developers_guide/landice/generated/compass.landice.tests.mismipplus.smoke_test.SmokeTest.rst", "developers_guide/landice/generated/compass.landice.tests.mismipplus.smoke_test.SmokeTest.run.rst", "developers_guide/landice/generated/compass.landice.tests.thwaites.Thwaites.rst", "developers_guide/landice/generated/compass.landice.tests.thwaites.decomposition_test.DecompositionTest.rst", "developers_guide/landice/generated/compass.landice.tests.thwaites.decomposition_test.DecompositionTest.run.rst", "developers_guide/landice/generated/compass.landice.tests.thwaites.restart_test.RestartTest.rst", "developers_guide/landice/generated/compass.landice.tests.thwaites.restart_test.RestartTest.run.rst", "developers_guide/landice/generated/compass.landice.tests.thwaites.run_model.RunModel.rst", "developers_guide/landice/generated/compass.landice.tests.thwaites.run_model.RunModel.run.rst", "developers_guide/landice/generated/compass.landice.tests.thwaites.run_model.RunModel.setup.rst", "developers_guide/landice/index.rst", "developers_guide/landice/test_groups/calving_dt_convergence.rst", "developers_guide/landice/test_groups/circular_shelf.rst", "developers_guide/landice/test_groups/dome.rst", "developers_guide/landice/test_groups/eismint2.rst", "developers_guide/landice/test_groups/enthalpy_benchmark.rst", "developers_guide/landice/test_groups/greenland.rst", "developers_guide/landice/test_groups/humboldt.rst", "developers_guide/landice/test_groups/hydro_radial.rst", "developers_guide/landice/test_groups/index.rst", "developers_guide/landice/test_groups/kangerlussuaq.rst", "developers_guide/landice/test_groups/koge_bugt_s.rst", "developers_guide/landice/test_groups/mismipplus.rst", "developers_guide/landice/test_groups/thwaites.rst", "developers_guide/machines/anvil.rst", "developers_guide/machines/badger.rst", "developers_guide/machines/chrysalis.rst", "developers_guide/machines/compy.rst", "developers_guide/machines/cori.rst", "developers_guide/machines/index.rst", "developers_guide/ocean/api.rst", "developers_guide/ocean/framework.rst", "developers_guide/ocean/generated/compass.ocean.Ocean.rst", "developers_guide/ocean/generated/compass.ocean.haney.compute_haney_number.rst", "developers_guide/ocean/generated/compass.ocean.iceshelf.adjust_ssh.rst", "developers_guide/ocean/generated/compass.ocean.iceshelf.compute_land_ice_pressure_and_draft.rst", "developers_guide/ocean/generated/compass.ocean.mesh.cull.CullMeshStep.rst", "developers_guide/ocean/generated/compass.ocean.mesh.cull.CullMeshStep.run.rst", "developers_guide/ocean/generated/compass.ocean.mesh.cull.CullMeshStep.setup.rst", "developers_guide/ocean/generated/compass.ocean.mesh.cull.cull_mesh.rst", "developers_guide/ocean/generated/compass.ocean.mesh.floodplain.FloodplainMeshStep.rst", "developers_guide/ocean/generated/compass.ocean.mesh.floodplain.FloodplainMeshStep.run.rst", "developers_guide/ocean/generated/compass.ocean.particles.remap_particles.rst", "developers_guide/ocean/generated/compass.ocean.particles.write.rst", "developers_guide/ocean/generated/compass.ocean.plot.plot_initial_state.rst", "developers_guide/ocean/generated/compass.ocean.plot.plot_vertical_grid.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.BaroclinicChannel.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.decomp_test.DecompTest.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.decomp_test.DecompTest.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.decomp_test.DecompTest.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.default.Default.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.default.Default.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.default.Default.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.forward.Forward.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.forward.Forward.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.forward.Forward.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.initial_state.InitialState.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.initial_state.InitialState.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.initial_state.InitialState.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.restart_test.RestartTest.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.restart_test.RestartTest.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.restart_test.RestartTest.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.rpe_test.RpeTest.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.rpe_test.RpeTest.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.rpe_test.RpeTest.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.drying_slope.DryingSlope.rst", "developers_guide/ocean/generated/compass.ocean.tests.drying_slope.default.Default.rst", "developers_guide/ocean/generated/compass.ocean.tests.drying_slope.default.Default.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.drying_slope.forward.Forward.rst", "developers_guide/ocean/generated/compass.ocean.tests.drying_slope.forward.Forward.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.drying_slope.initial_state.InitialState.rst", "developers_guide/ocean/generated/compass.ocean.tests.drying_slope.initial_state.InitialState.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.drying_slope.viz.Viz.rst", "developers_guide/ocean/generated/compass.ocean.tests.drying_slope.viz.Viz.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.GlobalConvergence.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.CosineBell.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.CosineBell.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.CosineBell.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rmse.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.forward.Forward.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.forward.Forward.get_dt.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.forward.Forward.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.forward.Forward.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.init.Init.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.init.Init.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.GlobalOcean.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.analysis_test.AnalysisTest.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.analysis_test.AnalysisTest.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.analysis_test.AnalysisTest.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.configure.configure_global_ocean.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.daily_output_test.DailyOutputTest.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.daily_output_test.DailyOutputTest.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.daily_output_test.DailyOutputTest.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.decomp_test.DecompTest.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.decomp_test.DecompTest.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.decomp_test.DecompTest.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.dynamic_adjustment.DynamicAdjustment.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.dynamic_adjustment.DynamicAdjustment.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.FilesForE3SM.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.FilesForE3SM.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.FilesForE3SM.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.diagnostics_files.DiagnosticsFiles.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.diagnostics_files.DiagnosticsFiles.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.ocean_graph_partition.OceanGraphPartition.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.ocean_graph_partition.OceanGraphPartition.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.ocean_initial_condition.OceanInitialCondition.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.ocean_initial_condition.OceanInitialCondition.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.scrip.Scrip.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.scrip.Scrip.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.seaice_initial_condition.SeaiceInitialCondition.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.seaice_initial_condition.SeaiceInitialCondition.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.forward.ForwardStep.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.forward.ForwardStep.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.forward.ForwardStep.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.forward.ForwardTestCase.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.forward.ForwardTestCase.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.forward.ForwardTestCase.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.init.Init.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.init.Init.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.init.Init.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.init.initial_state.InitialState.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.init.initial_state.InitialState.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.init.initial_state.InitialState.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.init.ssh_adjustment.SshAdjustment.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.init.ssh_adjustment.SshAdjustment.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.init.ssh_adjustment.SshAdjustment.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.Mesh.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.Mesh.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.Mesh.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.ec30to60.EC30to60BaseMesh.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.ec30to60.EC30to60BaseMesh.build_cell_width_lat_lon.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.ec30to60.dynamic_adjustment.EC30to60DynamicAdjustment.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.ec30to60.dynamic_adjustment.EC30to60DynamicAdjustment.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.ec30to60.dynamic_adjustment.EC30to60DynamicAdjustment.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.qu240.dynamic_adjustment.QU240DynamicAdjustment.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.qu240.dynamic_adjustment.QU240DynamicAdjustment.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.qu240.dynamic_adjustment.QU240DynamicAdjustment.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.so12to60.SO12to60BaseMesh.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.so12to60.SO12to60BaseMesh.build_cell_width_lat_lon.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.so12to60.dynamic_adjustment.SO12to60DynamicAdjustment.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.so12to60.dynamic_adjustment.SO12to60DynamicAdjustment.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.so12to60.dynamic_adjustment.SO12to60DynamicAdjustment.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.wc14.WC14BaseMesh.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.wc14.WC14BaseMesh.build_cell_width_lat_lon.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.wc14.dynamic_adjustment.WC14DynamicAdjustment.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.wc14.dynamic_adjustment.WC14DynamicAdjustment.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.wc14.dynamic_adjustment.WC14DynamicAdjustment.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.metadata.add_mesh_and_init_metadata.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.metadata.get_e3sm_mesh_names.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.performance_test.PerformanceTest.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.performance_test.PerformanceTest.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.performance_test.PerformanceTest.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.restart_test.RestartTest.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.restart_test.RestartTest.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.restart_test.RestartTest.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.threads_test.ThreadsTest.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.threads_test.ThreadsTest.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.threads_test.ThreadsTest.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.gotm.Gotm.rst", "developers_guide/ocean/generated/compass.ocean.tests.gotm.default.Default.rst", "developers_guide/ocean/generated/compass.ocean.tests.gotm.default.Default.validate.rst", "developers_guide/ocean/generated/compass.ocean.tests.gotm.default.analysis.Analysis.rst", "developers_guide/ocean/generated/compass.ocean.tests.gotm.default.analysis.Analysis.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.gotm.default.forward.Forward.rst", "developers_guide/ocean/generated/compass.ocean.tests.gotm.default.forward.Forward.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.gotm.default.init.Init.rst", "developers_guide/ocean/generated/compass.ocean.tests.gotm.default.init.Init.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.Hurricane.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.analysis.Analysis.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.analysis.Analysis.read_pointstats.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.analysis.Analysis.read_station_data.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.analysis.Analysis.read_station_file.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.analysis.Analysis.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.analysis.Analysis.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.forward.Forward.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.forward.Forward.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.forward.Forward.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.forward.forward.ForwardStep.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.forward.forward.ForwardStep.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.forward.forward.ForwardStep.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.Init.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.Init.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.Init.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.create_pointstats_file.CreatePointstatsFile.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.create_pointstats_file.CreatePointstatsFile.create_pointstats_file.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.create_pointstats_file.CreatePointstatsFile.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.initial_state.InitialState.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.initial_state.InitialState.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.initial_state.InitialState.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing.interpolate_data_to_grid.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing.plot_interp_data.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing.write_to_file.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.mesh.Mesh.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.mesh.Mesh.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.mesh.Mesh.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.mesh.dequ120at30cr10rr2.DEQU120at30cr10rr2BaseMesh.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.mesh.dequ120at30cr10rr2.DEQU120at30cr10rr2BaseMesh.build_cell_width_lat_lon.rst", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.IceShelf2d.rst", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.default.Default.rst", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.default.Default.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.default.Default.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.forward.Forward.rst", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.forward.Forward.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.forward.Forward.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.initial_state.InitialState.rst", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.initial_state.InitialState.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.restart_test.RestartTest.rst", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.restart_test.RestartTest.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.restart_test.RestartTest.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.ssh_adjustment.SshAdjustment.rst", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.ssh_adjustment.SshAdjustment.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.ssh_adjustment.SshAdjustment.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.viz.Viz.rst", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.viz.Viz.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.InternalWave.rst", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.default.Default.rst", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.default.Default.validate.rst", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.forward.Forward.rst", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.forward.Forward.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.initial_state.InitialState.rst", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.initial_state.InitialState.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.rpe_test.RpeTest.rst", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.rpe_test.analysis.Analysis.rst", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.rpe_test.analysis.Analysis.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.ten_day_test.TenDayTest.rst", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.ten_day_test.TenDayTest.validate.rst", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.viz.Viz.rst", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.viz.Viz.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.IsomipPlus.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.evap.update_evaporation_flux.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.forward.Forward.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.forward.Forward.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.forward.Forward.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.geom.interpolate_ocean_mask.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.geom.process_input_geometry.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.initial_state.InitialState.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.initial_state.InitialState.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.misomip.Misomip.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.misomip.Misomip.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.ocean_test.OceanTest.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.ocean_test.OceanTest.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.ocean_test.OceanTest.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.ssh_adjustment.SshAdjustment.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.ssh_adjustment.SshAdjustment.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.ssh_adjustment.SshAdjustment.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.streamfunction.Streamfunction.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.streamfunction.Streamfunction.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.Viz.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.Viz.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.file_complete.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.images_to_movies.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_3d_field_top_bot_section.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_barotropic_streamfunction.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_horiz_series.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_ice_shelf_boundary_variables.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_layer_interfaces.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_melt_rates.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_overturning_streamfunction.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_potential_density.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_salinity.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_temperature.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.TimeSeriesPlotter.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.TimeSeriesPlotter.plot_melt_time_series.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.TimeSeriesPlotter.plot_time_series.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.PlanarConvergence.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.conv_init.ConvInit.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.conv_init.ConvInit.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.conv_test_case.ConvTestCase.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.conv_test_case.ConvTestCase.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.conv_test_case.ConvTestCase.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.conv_test_case.ConvTestCase.update_cores.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.forward.Forward.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.forward.Forward.get_dt_duration.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.forward.Forward.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.forward.Forward.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.horizontal_advection.HorizontalAdvection.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.horizontal_advection.HorizontalAdvection.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.horizontal_advection.HorizontalAdvection.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.horizontal_advection.analysis.Analysis.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.horizontal_advection.analysis.Analysis.rmse.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.horizontal_advection.analysis.Analysis.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.horizontal_advection.init.Init.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.horizontal_advection.init.Init.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.soma.Soma.rst", "developers_guide/ocean/generated/compass.ocean.tests.soma.analysis.Analysis.rst", "developers_guide/ocean/generated/compass.ocean.tests.soma.analysis.Analysis.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.soma.forward.Forward.rst", "developers_guide/ocean/generated/compass.ocean.tests.soma.forward.Forward.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.soma.initial_state.InitialState.rst", "developers_guide/ocean/generated/compass.ocean.tests.soma.initial_state.InitialState.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.soma.soma_test_case.SomaTestCase.rst", "developers_guide/ocean/generated/compass.ocean.tests.soma.soma_test_case.SomaTestCase.validate.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.SphereTransport.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.CorrelatedTracers2D.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.CorrelatedTracers2D.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.CorrelatedTracers2D.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.analysis.Analysis.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.analysis.Analysis.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.Forward.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.Forward.get_timestep_str.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.Forward.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.Forward.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.init.Init.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.init.Init.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.mesh.Mesh.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.mesh.Mesh.build_cell_width_lat_lon.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.mesh.Mesh.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.Divergent2D.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.Divergent2D.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.Divergent2D.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.analysis.Analysis.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.analysis.Analysis.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.forward.Forward.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.forward.Forward.get_timestep_str.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.forward.Forward.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.forward.Forward.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.init.Init.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.init.Init.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.mesh.Mesh.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.mesh.Mesh.build_cell_width_lat_lon.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.mesh.Mesh.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.Nondivergent2D.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.Nondivergent2D.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.Nondivergent2D.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.analysis.Analysis.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.analysis.Analysis.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.forward.Forward.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.forward.Forward.get_timestep_str.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.forward.Forward.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.forward.Forward.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.init.Init.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.init.Init.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.mesh.Mesh.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.mesh.Mesh.build_cell_width_lat_lon.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.mesh.Mesh.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.compute_convergence_rates.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.compute_error_from_output_ncfile.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.make_convergence_arrays.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.plot_convergence.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.plot_filament.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.plot_over_and_undershoot_errors.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.plot_sol.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.print_data_as_csv.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.print_error_conv_table.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.read_ncl_rgb_file.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.Rotation2D.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.Rotation2D.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.Rotation2D.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.analysis.Analysis.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.analysis.Analysis.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.forward.Forward.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.forward.Forward.get_timestep_str.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.forward.Forward.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.forward.Forward.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.init.Init.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.init.Init.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.mesh.Mesh.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.mesh.Mesh.build_cell_width_lat_lon.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.mesh.Mesh.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.ziso.Ziso.rst", "developers_guide/ocean/generated/compass.ocean.tests.ziso.ZisoTestCase.rst", "developers_guide/ocean/generated/compass.ocean.tests.ziso.ZisoTestCase.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.ziso.ZisoTestCase.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.ziso.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.ziso.forward.Forward.rst", "developers_guide/ocean/generated/compass.ocean.tests.ziso.forward.Forward.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.ziso.forward.Forward.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.ziso.initial_state.InitialState.rst", "developers_guide/ocean/generated/compass.ocean.tests.ziso.initial_state.InitialState.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.ziso.with_frazil.WithFrazil.rst", "developers_guide/ocean/generated/compass.ocean.tests.ziso.with_frazil.WithFrazil.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.ziso.with_frazil.WithFrazil.run.rst", "developers_guide/ocean/generated/compass.ocean.vertical.grid_1d.generate_1d_grid.rst", "developers_guide/ocean/generated/compass.ocean.vertical.grid_1d.write_1d_grid.rst", "developers_guide/ocean/generated/compass.ocean.vertical.init_vertical_coord.rst", "developers_guide/ocean/generated/compass.ocean.vertical.partial_cells.alter_bottom_depth.rst", "developers_guide/ocean/generated/compass.ocean.vertical.partial_cells.alter_ssh.rst", "developers_guide/ocean/generated/compass.ocean.vertical.zlevel.compute_min_max_level_cell.rst", "developers_guide/ocean/generated/compass.ocean.vertical.zlevel.compute_z_level_layer_thickness.rst", "developers_guide/ocean/generated/compass.ocean.vertical.zlevel.compute_z_level_resting_thickness.rst", "developers_guide/ocean/generated/compass.ocean.vertical.zlevel.init_z_level_vertical_coord.rst", "developers_guide/ocean/generated/compass.ocean.vertical.zstar.init_z_star_vertical_coord.rst", "developers_guide/ocean/index.rst", "developers_guide/ocean/test_groups/baroclinic_channel.rst", "developers_guide/ocean/test_groups/drying_slope.rst", "developers_guide/ocean/test_groups/global_convergence.rst", "developers_guide/ocean/test_groups/global_ocean.rst", "developers_guide/ocean/test_groups/gotm.rst", "developers_guide/ocean/test_groups/hurricane.rst", "developers_guide/ocean/test_groups/ice_shelf_2d.rst", "developers_guide/ocean/test_groups/index.rst", "developers_guide/ocean/test_groups/internal_wave.rst", "developers_guide/ocean/test_groups/isomip_plus.rst", "developers_guide/ocean/test_groups/planar_convergence.rst", "developers_guide/ocean/test_groups/soma.rst", "developers_guide/ocean/test_groups/sphere_transport.rst", "developers_guide/ocean/test_groups/spherical_harmonic_transform.rst", "developers_guide/ocean/test_groups/ziso.rst", "developers_guide/organization.rst", "developers_guide/overview.rst", "developers_guide/quick_start.rst", "developers_guide/troubleshooting.rst", "glossary.rst", "index.rst", "tutorials/dev_add_param_study.rst", "tutorials/dev_add_test_group.rst", "tutorials/dev_porting_legacy.rst", "users_guide/config_files.rst", "users_guide/landice/framework/index.rst", "users_guide/landice/index.rst", "users_guide/landice/suites.rst", "users_guide/landice/test_groups/calving_dt_convergence.rst", "users_guide/landice/test_groups/circular_shelf.rst", "users_guide/landice/test_groups/dome.rst", "users_guide/landice/test_groups/eismint2.rst", "users_guide/landice/test_groups/enthalpy_benchmark.rst", "users_guide/landice/test_groups/greenland.rst", "users_guide/landice/test_groups/humboldt.rst", "users_guide/landice/test_groups/hydro_radial.rst", "users_guide/landice/test_groups/index.rst", "users_guide/landice/test_groups/kangerlussuaq.rst", "users_guide/landice/test_groups/koge_bugt_s.rst", "users_guide/landice/test_groups/mismipplus.rst", "users_guide/landice/test_groups/thwaites.rst", "users_guide/machines/anvil.rst", "users_guide/machines/badger.rst", "users_guide/machines/chrysalis.rst", "users_guide/machines/compy.rst", "users_guide/machines/cori.rst", "users_guide/machines/index.rst", "users_guide/ocean/framework/ice_shelf.rst", "users_guide/ocean/framework/index.rst", "users_guide/ocean/framework/vertical.rst", "users_guide/ocean/index.rst", "users_guide/ocean/suites.rst", "users_guide/ocean/test_groups/baroclinic_channel.rst", "users_guide/ocean/test_groups/drying_slope.rst", "users_guide/ocean/test_groups/global_convergence.rst", "users_guide/ocean/test_groups/global_ocean.rst", "users_guide/ocean/test_groups/gotm.rst", "users_guide/ocean/test_groups/hurricane.rst", "users_guide/ocean/test_groups/ice_shelf_2d.rst", "users_guide/ocean/test_groups/index.rst", "users_guide/ocean/test_groups/internal_wave.rst", "users_guide/ocean/test_groups/isomip_plus.rst", "users_guide/ocean/test_groups/planar_convergence.rst", "users_guide/ocean/test_groups/soma.rst", "users_guide/ocean/test_groups/sphere_transport.rst", "users_guide/ocean/test_groups/spherical_harmonic_transform.rst", "users_guide/ocean/test_groups/ziso.rst", "users_guide/quick_start.rst", "users_guide/test_cases.rst", "users_guide/test_suites.rst", "versions.rst"], "titles": ["Caching outputs from compass steps", "compass python package", "Design Documents", "Template", "API reference", "Building the Documentation", "Command-line interface", "Documentation", "Framework", "compass.MpasCore", "compass.MpasCore.add_test_group", "compass.Step", "compass.Step.add_input_file", "compass.Step.add_model_as_input", "compass.Step.add_namelist_file", "compass.Step.add_namelist_options", "compass.Step.add_output_file", "compass.Step.add_streams_file", "compass.Step.constrain_resources", "compass.Step.run", "compass.Step.runtime_setup", "compass.Step.set_resources", "compass.Step.setup", "compass.Step.update_namelist_at_runtime", "compass.Step.update_namelist_pio", "compass.Step.update_streams_at_runtime", "compass.TestCase", "compass.TestCase.add_step", "compass.TestCase.configure", "compass.TestCase.run", "compass.TestCase.validate", "compass.TestGroup", "compass.TestGroup.add_test_case", "compass.__main__.main", "compass.cache.update_cache", "compass.clean.clean_cases", "compass.config.CompassConfigParser", "compass.io.download", "compass.io.symlink", "compass.list.list_cases", "compass.list.list_machines", "compass.list.list_suites", "compass.logging.log_method_call", "compass.mesh.IcosahedralMeshStep", "compass.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon", "compass.mesh.IcosahedralMeshStep.get_cell_width", "compass.mesh.IcosahedralMeshStep.get_subdivisions", "compass.mesh.IcosahedralMeshStep.make_jigsaw_mesh", "compass.mesh.IcosahedralMeshStep.run", "compass.mesh.IcosahedralMeshStep.setup", "compass.mesh.QuasiUniformSphericalMeshStep", "compass.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon", "compass.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh", "compass.mesh.QuasiUniformSphericalMeshStep.run", "compass.mesh.QuasiUniformSphericalMeshStep.setup", "compass.mesh.spherical.SphericalBaseStep", "compass.mesh.spherical.SphericalBaseStep.run", "compass.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width", "compass.mesh.spherical.SphericalBaseStep.setup", "compass.model.make_graph_file", "compass.model.partition", "compass.model.run_model", "compass.mpas_cores.get_mpas_cores", "compass.parallel.check_parallel_system", "compass.parallel.get_available_cores_and_nodes", "compass.parallel.run_command", "compass.parallel.set_cores_per_node", "compass.provenance.write", "compass.run.serial.run_single_step", "compass.run.serial.run_tests", "compass.setup.setup_case", "compass.setup.setup_cases", "compass.suite.clean_suite", "compass.suite.setup_suite", "compass.validate.compare_timers", "compass.validate.compare_variables", "landice", "Land-ice Framework", "compass.landice.Landice", "compass.landice.tests.calving_dt_convergence.CalvingDtConvergence", "compass.landice.tests.calving_dt_convergence.dt_convergence_test.DtConvergenceTest", "compass.landice.tests.calving_dt_convergence.dt_convergence_test.DtConvergenceTest.validate", "compass.landice.tests.calving_dt_convergence.run_model.RunModel", "compass.landice.tests.calving_dt_convergence.run_model.RunModel.run", "compass.landice.tests.circular_shelf.CircularShelf", "compass.landice.tests.circular_shelf.decomposition_test.DecompositionTest", "compass.landice.tests.circular_shelf.decomposition_test.DecompositionTest.run", "compass.landice.tests.circular_shelf.run_model.RunModel", "compass.landice.tests.circular_shelf.run_model.RunModel.run", "compass.landice.tests.circular_shelf.setup_mesh.SetupMesh", "compass.landice.tests.circular_shelf.setup_mesh.SetupMesh.run", "compass.landice.tests.circular_shelf.visualize.Visualize", "compass.landice.tests.circular_shelf.visualize.Visualize.run", "compass.landice.tests.circular_shelf.visualize.visualize_circular_shelf", "compass.landice.tests.dome.Dome", "compass.landice.tests.dome.decomposition_test.DecompositionTest", "compass.landice.tests.dome.decomposition_test.DecompositionTest.run", "compass.landice.tests.dome.restart_test.RestartTest", "compass.landice.tests.dome.restart_test.RestartTest.run", "compass.landice.tests.dome.run_model.RunModel", "compass.landice.tests.dome.run_model.RunModel.run", "compass.landice.tests.dome.run_model.RunModel.setup", "compass.landice.tests.dome.setup_mesh.SetupMesh", "compass.landice.tests.dome.setup_mesh.SetupMesh.run", "compass.landice.tests.dome.smoke_test.SmokeTest", "compass.landice.tests.dome.smoke_test.SmokeTest.run", "compass.landice.tests.dome.visualize.Visualize", "compass.landice.tests.dome.visualize.Visualize.run", "compass.landice.tests.dome.visualize.visualize_dome", "compass.landice.tests.eismint2.Eismint2", "compass.landice.tests.eismint2.decomposition_test.DecompositionTest", "compass.landice.tests.eismint2.decomposition_test.DecompositionTest.run", "compass.landice.tests.eismint2.restart_test.RestartTest", "compass.landice.tests.eismint2.restart_test.RestartTest.run", "compass.landice.tests.eismint2.run_experiment.RunExperiment", "compass.landice.tests.eismint2.run_experiment.RunExperiment.run", "compass.landice.tests.eismint2.run_experiment.RunExperiment.setup", "compass.landice.tests.eismint2.setup_mesh.SetupMesh", "compass.landice.tests.eismint2.setup_mesh.SetupMesh.run", "compass.landice.tests.eismint2.standard_experiments.StandardExperiments", "compass.landice.tests.eismint2.standard_experiments.StandardExperiments.run", "compass.landice.tests.eismint2.standard_experiments.visualize.Visualize", "compass.landice.tests.eismint2.standard_experiments.visualize.Visualize.run", "compass.landice.tests.eismint2.standard_experiments.visualize.visualize_eismint2", "compass.landice.tests.enthalpy_benchmark.A.A", "compass.landice.tests.enthalpy_benchmark.A.A.configure", "compass.landice.tests.enthalpy_benchmark.A.A.run", "compass.landice.tests.enthalpy_benchmark.A.visualize.Visualize", "compass.landice.tests.enthalpy_benchmark.A.visualize.Visualize.run", "compass.landice.tests.enthalpy_benchmark.B.B", "compass.landice.tests.enthalpy_benchmark.B.B.configure", "compass.landice.tests.enthalpy_benchmark.B.B.run", "compass.landice.tests.enthalpy_benchmark.B.visualize.Visualize", "compass.landice.tests.enthalpy_benchmark.B.visualize.Visualize.run", "compass.landice.tests.enthalpy_benchmark.EnthalpyBenchmark", "compass.landice.tests.enthalpy_benchmark.run_model.RunModel", "compass.landice.tests.enthalpy_benchmark.run_model.RunModel.run", "compass.landice.tests.enthalpy_benchmark.run_model.RunModel.setup", "compass.landice.tests.enthalpy_benchmark.setup_mesh.SetupMesh", "compass.landice.tests.enthalpy_benchmark.setup_mesh.SetupMesh.run", "compass.landice.tests.greenland.Greenland", "compass.landice.tests.greenland.decomposition_test.DecompositionTest", "compass.landice.tests.greenland.decomposition_test.DecompositionTest.run", "compass.landice.tests.greenland.high_res_mesh.HighResMesh", "compass.landice.tests.greenland.high_res_mesh.HighResMesh.run", "compass.landice.tests.greenland.mesh.Mesh", "compass.landice.tests.greenland.mesh.Mesh.build_cell_width", "compass.landice.tests.greenland.mesh.Mesh.run", "compass.landice.tests.greenland.restart_test.RestartTest", "compass.landice.tests.greenland.restart_test.RestartTest.run", "compass.landice.tests.greenland.run_model.RunModel", "compass.landice.tests.greenland.run_model.RunModel.run", "compass.landice.tests.greenland.run_model.RunModel.setup", "compass.landice.tests.greenland.smoke_test.SmokeTest", "compass.landice.tests.greenland.smoke_test.SmokeTest.run", "compass.landice.tests.humboldt.Humboldt", "compass.landice.tests.humboldt.decomposition_test.DecompositionTest", "compass.landice.tests.humboldt.decomposition_test.DecompositionTest.validate", "compass.landice.tests.humboldt.mesh.Mesh", "compass.landice.tests.humboldt.mesh.Mesh.run", "compass.landice.tests.humboldt.mesh_gen.MeshGen", "compass.landice.tests.humboldt.mesh_gen.MeshGen.run", "compass.landice.tests.humboldt.restart_test.RestartTest", "compass.landice.tests.humboldt.restart_test.RestartTest.validate", "compass.landice.tests.humboldt.run_model.RunModel", "compass.landice.tests.humboldt.run_model.RunModel.run", "compass.landice.tests.hydro_radial.HydroRadial", "compass.landice.tests.hydro_radial.decomposition_test.DecompositionTest", "compass.landice.tests.hydro_radial.decomposition_test.DecompositionTest.run", "compass.landice.tests.hydro_radial.restart_test.RestartTest", "compass.landice.tests.hydro_radial.restart_test.RestartTest.run", "compass.landice.tests.hydro_radial.run_model.RunModel", "compass.landice.tests.hydro_radial.run_model.RunModel.run", "compass.landice.tests.hydro_radial.run_model.RunModel.setup", "compass.landice.tests.hydro_radial.setup_mesh.SetupMesh", "compass.landice.tests.hydro_radial.setup_mesh.SetupMesh.run", "compass.landice.tests.hydro_radial.spinup_test.SpinupTest", "compass.landice.tests.hydro_radial.spinup_test.SpinupTest.run", "compass.landice.tests.hydro_radial.steady_state_drift_test.SteadyStateDriftTest", "compass.landice.tests.hydro_radial.steady_state_drift_test.SteadyStateDriftTest.run", "compass.landice.tests.hydro_radial.visualize.Visualize", "compass.landice.tests.hydro_radial.visualize.Visualize.run", "compass.landice.tests.hydro_radial.visualize.visualize_hydro_radial", "compass.landice.tests.kangerlussuaq.Kangerlussuaq", "compass.landice.tests.kangerlussuaq.mesh.Mesh", "compass.landice.tests.kangerlussuaq.mesh.Mesh.run", "compass.landice.tests.kangerlussuaq.mesh_gen.MeshGen", "compass.landice.tests.kangerlussuaq.mesh_gen.MeshGen.run", "compass.landice.tests.koge_bugt_s.KogeBugtS", "compass.landice.tests.koge_bugt_s.mesh.Mesh", "compass.landice.tests.koge_bugt_s.mesh.Mesh.run", "compass.landice.tests.koge_bugt_s.mesh_gen.MeshGen", "compass.landice.tests.koge_bugt_s.mesh_gen.MeshGen.run", "compass.landice.tests.mismipplus.MISMIPplus", "compass.landice.tests.mismipplus.run_model.RunModel", "compass.landice.tests.mismipplus.run_model.RunModel.run", "compass.landice.tests.mismipplus.run_model.RunModel.setup", "compass.landice.tests.mismipplus.smoke_test.SmokeTest", "compass.landice.tests.mismipplus.smoke_test.SmokeTest.run", "compass.landice.tests.thwaites.Thwaites", "compass.landice.tests.thwaites.decomposition_test.DecompositionTest", "compass.landice.tests.thwaites.decomposition_test.DecompositionTest.run", "compass.landice.tests.thwaites.restart_test.RestartTest", "compass.landice.tests.thwaites.restart_test.RestartTest.run", "compass.landice.tests.thwaites.run_model.RunModel", "compass.landice.tests.thwaites.run_model.RunModel.run", "compass.landice.tests.thwaites.run_model.RunModel.setup", "Landice core", "calving_dt_convergence", "circular_shelf", "dome", "eismint2", "enthalpy_benchmark", "greenland", "humboldt", "hydro_radial", "Test groups", "kangerlussuaq", "koge_bugt_s", "mismipplus", "thwaites", "Anvil", "Badger", "Chrysalis", "CompyMcNodeFace", "Cori", "Machines", "ocean", "Ocean framework", "compass.ocean.Ocean", "compass.ocean.haney.compute_haney_number", "compass.ocean.iceshelf.adjust_ssh", "compass.ocean.iceshelf.compute_land_ice_pressure_and_draft", "compass.ocean.mesh.cull.CullMeshStep", "compass.ocean.mesh.cull.CullMeshStep.run", "compass.ocean.mesh.cull.CullMeshStep.setup", "compass.ocean.mesh.cull.cull_mesh", "compass.ocean.mesh.floodplain.FloodplainMeshStep", "compass.ocean.mesh.floodplain.FloodplainMeshStep.run", "compass.ocean.particles.remap_particles", "compass.ocean.particles.write", "compass.ocean.plot.plot_initial_state", "compass.ocean.plot.plot_vertical_grid", "compass.ocean.tests.baroclinic_channel.BaroclinicChannel", "compass.ocean.tests.baroclinic_channel.configure", "compass.ocean.tests.baroclinic_channel.decomp_test.DecompTest", "compass.ocean.tests.baroclinic_channel.decomp_test.DecompTest.configure", "compass.ocean.tests.baroclinic_channel.decomp_test.DecompTest.run", "compass.ocean.tests.baroclinic_channel.default.Default", "compass.ocean.tests.baroclinic_channel.default.Default.configure", "compass.ocean.tests.baroclinic_channel.default.Default.run", "compass.ocean.tests.baroclinic_channel.forward.Forward", "compass.ocean.tests.baroclinic_channel.forward.Forward.run", "compass.ocean.tests.baroclinic_channel.forward.Forward.setup", "compass.ocean.tests.baroclinic_channel.initial_state.InitialState", "compass.ocean.tests.baroclinic_channel.initial_state.InitialState.run", "compass.ocean.tests.baroclinic_channel.initial_state.InitialState.setup", "compass.ocean.tests.baroclinic_channel.restart_test.RestartTest", "compass.ocean.tests.baroclinic_channel.restart_test.RestartTest.configure", "compass.ocean.tests.baroclinic_channel.restart_test.RestartTest.run", "compass.ocean.tests.baroclinic_channel.rpe_test.RpeTest", "compass.ocean.tests.baroclinic_channel.rpe_test.RpeTest.configure", "compass.ocean.tests.baroclinic_channel.rpe_test.RpeTest.run", "compass.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis", "compass.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.run", "compass.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.setup", "compass.ocean.tests.baroclinic_channel.threads_test.ThreadsTest", "compass.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.configure", "compass.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.run", "compass.ocean.tests.drying_slope.DryingSlope", "compass.ocean.tests.drying_slope.default.Default", "compass.ocean.tests.drying_slope.default.Default.configure", "compass.ocean.tests.drying_slope.forward.Forward", "compass.ocean.tests.drying_slope.forward.Forward.run", "compass.ocean.tests.drying_slope.initial_state.InitialState", "compass.ocean.tests.drying_slope.initial_state.InitialState.run", "compass.ocean.tests.drying_slope.viz.Viz", "compass.ocean.tests.drying_slope.viz.Viz.run", "compass.ocean.tests.global_convergence.GlobalConvergence", "compass.ocean.tests.global_convergence.cosine_bell.CosineBell", "compass.ocean.tests.global_convergence.cosine_bell.CosineBell.configure", "compass.ocean.tests.global_convergence.cosine_bell.CosineBell.run", "compass.ocean.tests.global_convergence.cosine_bell.analysis.Analysis", "compass.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rmse", "compass.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.run", "compass.ocean.tests.global_convergence.cosine_bell.forward.Forward", "compass.ocean.tests.global_convergence.cosine_bell.forward.Forward.get_dt", "compass.ocean.tests.global_convergence.cosine_bell.forward.Forward.run", "compass.ocean.tests.global_convergence.cosine_bell.forward.Forward.setup", "compass.ocean.tests.global_convergence.cosine_bell.init.Init", "compass.ocean.tests.global_convergence.cosine_bell.init.Init.run", "compass.ocean.tests.global_ocean.GlobalOcean", "compass.ocean.tests.global_ocean.analysis_test.AnalysisTest", "compass.ocean.tests.global_ocean.analysis_test.AnalysisTest.configure", "compass.ocean.tests.global_ocean.analysis_test.AnalysisTest.run", "compass.ocean.tests.global_ocean.configure", "compass.ocean.tests.global_ocean.configure.configure_global_ocean", "compass.ocean.tests.global_ocean.daily_output_test.DailyOutputTest", "compass.ocean.tests.global_ocean.daily_output_test.DailyOutputTest.configure", "compass.ocean.tests.global_ocean.daily_output_test.DailyOutputTest.run", "compass.ocean.tests.global_ocean.decomp_test.DecompTest", "compass.ocean.tests.global_ocean.decomp_test.DecompTest.configure", "compass.ocean.tests.global_ocean.decomp_test.DecompTest.run", "compass.ocean.tests.global_ocean.dynamic_adjustment.DynamicAdjustment", "compass.ocean.tests.global_ocean.dynamic_adjustment.DynamicAdjustment.run", "compass.ocean.tests.global_ocean.files_for_e3sm.FilesForE3SM", "compass.ocean.tests.global_ocean.files_for_e3sm.FilesForE3SM.configure", "compass.ocean.tests.global_ocean.files_for_e3sm.FilesForE3SM.run", "compass.ocean.tests.global_ocean.files_for_e3sm.diagnostics_files.DiagnosticsFiles", "compass.ocean.tests.global_ocean.files_for_e3sm.diagnostics_files.DiagnosticsFiles.run", "compass.ocean.tests.global_ocean.files_for_e3sm.ocean_graph_partition.OceanGraphPartition", "compass.ocean.tests.global_ocean.files_for_e3sm.ocean_graph_partition.OceanGraphPartition.run", "compass.ocean.tests.global_ocean.files_for_e3sm.ocean_initial_condition.OceanInitialCondition", "compass.ocean.tests.global_ocean.files_for_e3sm.ocean_initial_condition.OceanInitialCondition.run", "compass.ocean.tests.global_ocean.files_for_e3sm.scrip.Scrip", "compass.ocean.tests.global_ocean.files_for_e3sm.scrip.Scrip.run", "compass.ocean.tests.global_ocean.files_for_e3sm.seaice_initial_condition.SeaiceInitialCondition", "compass.ocean.tests.global_ocean.files_for_e3sm.seaice_initial_condition.SeaiceInitialCondition.run", "compass.ocean.tests.global_ocean.forward.ForwardStep", "compass.ocean.tests.global_ocean.forward.ForwardStep.run", "compass.ocean.tests.global_ocean.forward.ForwardStep.setup", "compass.ocean.tests.global_ocean.forward.ForwardTestCase", "compass.ocean.tests.global_ocean.forward.ForwardTestCase.configure", "compass.ocean.tests.global_ocean.forward.ForwardTestCase.run", "compass.ocean.tests.global_ocean.init.Init", "compass.ocean.tests.global_ocean.init.Init.configure", "compass.ocean.tests.global_ocean.init.Init.run", "compass.ocean.tests.global_ocean.init.initial_state.InitialState", "compass.ocean.tests.global_ocean.init.initial_state.InitialState.run", "compass.ocean.tests.global_ocean.init.initial_state.InitialState.setup", "compass.ocean.tests.global_ocean.init.ssh_adjustment.SshAdjustment", "compass.ocean.tests.global_ocean.init.ssh_adjustment.SshAdjustment.run", "compass.ocean.tests.global_ocean.init.ssh_adjustment.SshAdjustment.setup", "compass.ocean.tests.global_ocean.mesh.Mesh", "compass.ocean.tests.global_ocean.mesh.Mesh.configure", "compass.ocean.tests.global_ocean.mesh.Mesh.run", "compass.ocean.tests.global_ocean.mesh.ec30to60.EC30to60BaseMesh", "compass.ocean.tests.global_ocean.mesh.ec30to60.EC30to60BaseMesh.build_cell_width_lat_lon", "compass.ocean.tests.global_ocean.mesh.ec30to60.dynamic_adjustment.EC30to60DynamicAdjustment", "compass.ocean.tests.global_ocean.mesh.ec30to60.dynamic_adjustment.EC30to60DynamicAdjustment.configure", "compass.ocean.tests.global_ocean.mesh.ec30to60.dynamic_adjustment.EC30to60DynamicAdjustment.run", "compass.ocean.tests.global_ocean.mesh.qu240.dynamic_adjustment.QU240DynamicAdjustment", "compass.ocean.tests.global_ocean.mesh.qu240.dynamic_adjustment.QU240DynamicAdjustment.configure", "compass.ocean.tests.global_ocean.mesh.qu240.dynamic_adjustment.QU240DynamicAdjustment.run", "compass.ocean.tests.global_ocean.mesh.so12to60.SO12to60BaseMesh", "compass.ocean.tests.global_ocean.mesh.so12to60.SO12to60BaseMesh.build_cell_width_lat_lon", "compass.ocean.tests.global_ocean.mesh.so12to60.dynamic_adjustment.SO12to60DynamicAdjustment", "compass.ocean.tests.global_ocean.mesh.so12to60.dynamic_adjustment.SO12to60DynamicAdjustment.configure", "compass.ocean.tests.global_ocean.mesh.so12to60.dynamic_adjustment.SO12to60DynamicAdjustment.run", "compass.ocean.tests.global_ocean.mesh.wc14.WC14BaseMesh", "compass.ocean.tests.global_ocean.mesh.wc14.WC14BaseMesh.build_cell_width_lat_lon", "compass.ocean.tests.global_ocean.mesh.wc14.dynamic_adjustment.WC14DynamicAdjustment", "compass.ocean.tests.global_ocean.mesh.wc14.dynamic_adjustment.WC14DynamicAdjustment.configure", "compass.ocean.tests.global_ocean.mesh.wc14.dynamic_adjustment.WC14DynamicAdjustment.run", "compass.ocean.tests.global_ocean.metadata.add_mesh_and_init_metadata", "compass.ocean.tests.global_ocean.metadata.get_e3sm_mesh_names", "compass.ocean.tests.global_ocean.performance_test.PerformanceTest", "compass.ocean.tests.global_ocean.performance_test.PerformanceTest.configure", "compass.ocean.tests.global_ocean.performance_test.PerformanceTest.run", "compass.ocean.tests.global_ocean.restart_test.RestartTest", "compass.ocean.tests.global_ocean.restart_test.RestartTest.configure", "compass.ocean.tests.global_ocean.restart_test.RestartTest.run", "compass.ocean.tests.global_ocean.threads_test.ThreadsTest", "compass.ocean.tests.global_ocean.threads_test.ThreadsTest.configure", "compass.ocean.tests.global_ocean.threads_test.ThreadsTest.run", "compass.ocean.tests.gotm.Gotm", "compass.ocean.tests.gotm.default.Default", "compass.ocean.tests.gotm.default.Default.validate", "compass.ocean.tests.gotm.default.analysis.Analysis", "compass.ocean.tests.gotm.default.analysis.Analysis.run", "compass.ocean.tests.gotm.default.forward.Forward", "compass.ocean.tests.gotm.default.forward.Forward.run", "compass.ocean.tests.gotm.default.init.Init", "compass.ocean.tests.gotm.default.init.Init.run", "compass.ocean.tests.hurricane.Hurricane", "compass.ocean.tests.hurricane.analysis.Analysis", "compass.ocean.tests.hurricane.analysis.Analysis.read_pointstats", "compass.ocean.tests.hurricane.analysis.Analysis.read_station_data", "compass.ocean.tests.hurricane.analysis.Analysis.read_station_file", "compass.ocean.tests.hurricane.analysis.Analysis.run", "compass.ocean.tests.hurricane.analysis.Analysis.setup", "compass.ocean.tests.hurricane.configure", "compass.ocean.tests.hurricane.forward.Forward", "compass.ocean.tests.hurricane.forward.Forward.configure", "compass.ocean.tests.hurricane.forward.Forward.run", "compass.ocean.tests.hurricane.forward.forward.ForwardStep", "compass.ocean.tests.hurricane.forward.forward.ForwardStep.run", "compass.ocean.tests.hurricane.forward.forward.ForwardStep.setup", "compass.ocean.tests.hurricane.init.Init", "compass.ocean.tests.hurricane.init.Init.configure", "compass.ocean.tests.hurricane.init.Init.run", "compass.ocean.tests.hurricane.init.create_pointstats_file.CreatePointstatsFile", "compass.ocean.tests.hurricane.init.create_pointstats_file.CreatePointstatsFile.create_pointstats_file", "compass.ocean.tests.hurricane.init.create_pointstats_file.CreatePointstatsFile.run", "compass.ocean.tests.hurricane.init.initial_state.InitialState", "compass.ocean.tests.hurricane.init.initial_state.InitialState.run", "compass.ocean.tests.hurricane.init.initial_state.InitialState.setup", "compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing", "compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing.interpolate_data_to_grid", "compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing.plot_interp_data", "compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing.run", "compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing.write_to_file", "compass.ocean.tests.hurricane.mesh.Mesh", "compass.ocean.tests.hurricane.mesh.Mesh.configure", "compass.ocean.tests.hurricane.mesh.Mesh.run", "compass.ocean.tests.hurricane.mesh.dequ120at30cr10rr2.DEQU120at30cr10rr2BaseMesh", "compass.ocean.tests.hurricane.mesh.dequ120at30cr10rr2.DEQU120at30cr10rr2BaseMesh.build_cell_width_lat_lon", "compass.ocean.tests.ice_shelf_2d.IceShelf2d", "compass.ocean.tests.ice_shelf_2d.configure", "compass.ocean.tests.ice_shelf_2d.default.Default", "compass.ocean.tests.ice_shelf_2d.default.Default.configure", "compass.ocean.tests.ice_shelf_2d.default.Default.run", "compass.ocean.tests.ice_shelf_2d.forward.Forward", "compass.ocean.tests.ice_shelf_2d.forward.Forward.run", "compass.ocean.tests.ice_shelf_2d.forward.Forward.setup", "compass.ocean.tests.ice_shelf_2d.initial_state.InitialState", "compass.ocean.tests.ice_shelf_2d.initial_state.InitialState.run", "compass.ocean.tests.ice_shelf_2d.restart_test.RestartTest", "compass.ocean.tests.ice_shelf_2d.restart_test.RestartTest.configure", "compass.ocean.tests.ice_shelf_2d.restart_test.RestartTest.run", "compass.ocean.tests.ice_shelf_2d.ssh_adjustment.SshAdjustment", "compass.ocean.tests.ice_shelf_2d.ssh_adjustment.SshAdjustment.run", "compass.ocean.tests.ice_shelf_2d.ssh_adjustment.SshAdjustment.setup", "compass.ocean.tests.ice_shelf_2d.viz.Viz", "compass.ocean.tests.ice_shelf_2d.viz.Viz.run", "compass.ocean.tests.internal_wave.InternalWave", "compass.ocean.tests.internal_wave.default.Default", "compass.ocean.tests.internal_wave.default.Default.validate", "compass.ocean.tests.internal_wave.forward.Forward", "compass.ocean.tests.internal_wave.forward.Forward.run", "compass.ocean.tests.internal_wave.initial_state.InitialState", "compass.ocean.tests.internal_wave.initial_state.InitialState.run", "compass.ocean.tests.internal_wave.rpe_test.RpeTest", "compass.ocean.tests.internal_wave.rpe_test.analysis.Analysis", "compass.ocean.tests.internal_wave.rpe_test.analysis.Analysis.run", "compass.ocean.tests.internal_wave.ten_day_test.TenDayTest", "compass.ocean.tests.internal_wave.ten_day_test.TenDayTest.validate", "compass.ocean.tests.internal_wave.viz.Viz", "compass.ocean.tests.internal_wave.viz.Viz.run", "compass.ocean.tests.isomip_plus.IsomipPlus", "compass.ocean.tests.isomip_plus.evap.update_evaporation_flux", "compass.ocean.tests.isomip_plus.forward.Forward", "compass.ocean.tests.isomip_plus.forward.Forward.run", "compass.ocean.tests.isomip_plus.forward.Forward.setup", "compass.ocean.tests.isomip_plus.geom.interpolate_ocean_mask", "compass.ocean.tests.isomip_plus.geom.process_input_geometry", "compass.ocean.tests.isomip_plus.initial_state.InitialState", "compass.ocean.tests.isomip_plus.initial_state.InitialState.run", "compass.ocean.tests.isomip_plus.misomip.Misomip", "compass.ocean.tests.isomip_plus.misomip.Misomip.run", "compass.ocean.tests.isomip_plus.ocean_test.OceanTest", "compass.ocean.tests.isomip_plus.ocean_test.OceanTest.configure", "compass.ocean.tests.isomip_plus.ocean_test.OceanTest.run", "compass.ocean.tests.isomip_plus.ssh_adjustment.SshAdjustment", "compass.ocean.tests.isomip_plus.ssh_adjustment.SshAdjustment.run", "compass.ocean.tests.isomip_plus.ssh_adjustment.SshAdjustment.setup", "compass.ocean.tests.isomip_plus.streamfunction.Streamfunction", "compass.ocean.tests.isomip_plus.streamfunction.Streamfunction.run", "compass.ocean.tests.isomip_plus.viz.Viz", "compass.ocean.tests.isomip_plus.viz.Viz.run", "compass.ocean.tests.isomip_plus.viz.file_complete", "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter", "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.images_to_movies", "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_3d_field_top_bot_section", "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_barotropic_streamfunction", "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_horiz_series", "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_ice_shelf_boundary_variables", "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_layer_interfaces", "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_melt_rates", "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_overturning_streamfunction", "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_potential_density", "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_salinity", "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_temperature", "compass.ocean.tests.isomip_plus.viz.plot.TimeSeriesPlotter", "compass.ocean.tests.isomip_plus.viz.plot.TimeSeriesPlotter.plot_melt_time_series", "compass.ocean.tests.isomip_plus.viz.plot.TimeSeriesPlotter.plot_time_series", "compass.ocean.tests.planar_convergence.PlanarConvergence", "compass.ocean.tests.planar_convergence.conv_init.ConvInit", "compass.ocean.tests.planar_convergence.conv_init.ConvInit.run", "compass.ocean.tests.planar_convergence.conv_test_case.ConvTestCase", "compass.ocean.tests.planar_convergence.conv_test_case.ConvTestCase.configure", "compass.ocean.tests.planar_convergence.conv_test_case.ConvTestCase.run", "compass.ocean.tests.planar_convergence.conv_test_case.ConvTestCase.update_cores", "compass.ocean.tests.planar_convergence.forward.Forward", "compass.ocean.tests.planar_convergence.forward.Forward.get_dt_duration", "compass.ocean.tests.planar_convergence.forward.Forward.run", "compass.ocean.tests.planar_convergence.forward.Forward.setup", "compass.ocean.tests.planar_convergence.horizontal_advection.HorizontalAdvection", "compass.ocean.tests.planar_convergence.horizontal_advection.HorizontalAdvection.configure", "compass.ocean.tests.planar_convergence.horizontal_advection.HorizontalAdvection.run", "compass.ocean.tests.planar_convergence.horizontal_advection.analysis.Analysis", "compass.ocean.tests.planar_convergence.horizontal_advection.analysis.Analysis.rmse", "compass.ocean.tests.planar_convergence.horizontal_advection.analysis.Analysis.run", "compass.ocean.tests.planar_convergence.horizontal_advection.init.Init", "compass.ocean.tests.planar_convergence.horizontal_advection.init.Init.run", "compass.ocean.tests.soma.Soma", "compass.ocean.tests.soma.analysis.Analysis", "compass.ocean.tests.soma.analysis.Analysis.run", "compass.ocean.tests.soma.forward.Forward", "compass.ocean.tests.soma.forward.Forward.run", "compass.ocean.tests.soma.initial_state.InitialState", "compass.ocean.tests.soma.initial_state.InitialState.run", "compass.ocean.tests.soma.soma_test_case.SomaTestCase", "compass.ocean.tests.soma.soma_test_case.SomaTestCase.validate", "compass.ocean.tests.sphere_transport.SphereTransport", "compass.ocean.tests.sphere_transport.correlated_tracers_2d.CorrelatedTracers2D", "compass.ocean.tests.sphere_transport.correlated_tracers_2d.CorrelatedTracers2D.configure", "compass.ocean.tests.sphere_transport.correlated_tracers_2d.CorrelatedTracers2D.run", "compass.ocean.tests.sphere_transport.correlated_tracers_2d.analysis.Analysis", "compass.ocean.tests.sphere_transport.correlated_tracers_2d.analysis.Analysis.run", "compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.Forward", "compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.Forward.get_timestep_str", "compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.Forward.run", "compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.Forward.setup", "compass.ocean.tests.sphere_transport.correlated_tracers_2d.init.Init", "compass.ocean.tests.sphere_transport.correlated_tracers_2d.init.Init.run", "compass.ocean.tests.sphere_transport.correlated_tracers_2d.mesh.Mesh", "compass.ocean.tests.sphere_transport.correlated_tracers_2d.mesh.Mesh.build_cell_width_lat_lon", "compass.ocean.tests.sphere_transport.correlated_tracers_2d.mesh.Mesh.run", "compass.ocean.tests.sphere_transport.divergent_2d.Divergent2D", "compass.ocean.tests.sphere_transport.divergent_2d.Divergent2D.configure", "compass.ocean.tests.sphere_transport.divergent_2d.Divergent2D.run", "compass.ocean.tests.sphere_transport.divergent_2d.analysis.Analysis", "compass.ocean.tests.sphere_transport.divergent_2d.analysis.Analysis.run", "compass.ocean.tests.sphere_transport.divergent_2d.forward.Forward", "compass.ocean.tests.sphere_transport.divergent_2d.forward.Forward.get_timestep_str", "compass.ocean.tests.sphere_transport.divergent_2d.forward.Forward.run", "compass.ocean.tests.sphere_transport.divergent_2d.forward.Forward.setup", "compass.ocean.tests.sphere_transport.divergent_2d.init.Init", "compass.ocean.tests.sphere_transport.divergent_2d.init.Init.run", "compass.ocean.tests.sphere_transport.divergent_2d.mesh.Mesh", "compass.ocean.tests.sphere_transport.divergent_2d.mesh.Mesh.build_cell_width_lat_lon", "compass.ocean.tests.sphere_transport.divergent_2d.mesh.Mesh.run", "compass.ocean.tests.sphere_transport.nondivergent_2d.Nondivergent2D", "compass.ocean.tests.sphere_transport.nondivergent_2d.Nondivergent2D.configure", "compass.ocean.tests.sphere_transport.nondivergent_2d.Nondivergent2D.run", "compass.ocean.tests.sphere_transport.nondivergent_2d.analysis.Analysis", "compass.ocean.tests.sphere_transport.nondivergent_2d.analysis.Analysis.run", "compass.ocean.tests.sphere_transport.nondivergent_2d.forward.Forward", "compass.ocean.tests.sphere_transport.nondivergent_2d.forward.Forward.get_timestep_str", "compass.ocean.tests.sphere_transport.nondivergent_2d.forward.Forward.run", "compass.ocean.tests.sphere_transport.nondivergent_2d.forward.Forward.setup", "compass.ocean.tests.sphere_transport.nondivergent_2d.init.Init", "compass.ocean.tests.sphere_transport.nondivergent_2d.init.Init.run", "compass.ocean.tests.sphere_transport.nondivergent_2d.mesh.Mesh", "compass.ocean.tests.sphere_transport.nondivergent_2d.mesh.Mesh.build_cell_width_lat_lon", "compass.ocean.tests.sphere_transport.nondivergent_2d.mesh.Mesh.run", "compass.ocean.tests.sphere_transport.process_output.compute_convergence_rates", "compass.ocean.tests.sphere_transport.process_output.compute_error_from_output_ncfile", "compass.ocean.tests.sphere_transport.process_output.make_convergence_arrays", "compass.ocean.tests.sphere_transport.process_output.plot_convergence", "compass.ocean.tests.sphere_transport.process_output.plot_filament", "compass.ocean.tests.sphere_transport.process_output.plot_over_and_undershoot_errors", "compass.ocean.tests.sphere_transport.process_output.plot_sol", "compass.ocean.tests.sphere_transport.process_output.print_data_as_csv", "compass.ocean.tests.sphere_transport.process_output.print_error_conv_table", "compass.ocean.tests.sphere_transport.process_output.read_ncl_rgb_file", "compass.ocean.tests.sphere_transport.rotation_2d.Rotation2D", "compass.ocean.tests.sphere_transport.rotation_2d.Rotation2D.configure", "compass.ocean.tests.sphere_transport.rotation_2d.Rotation2D.run", "compass.ocean.tests.sphere_transport.rotation_2d.analysis.Analysis", "compass.ocean.tests.sphere_transport.rotation_2d.analysis.Analysis.run", "compass.ocean.tests.sphere_transport.rotation_2d.forward.Forward", "compass.ocean.tests.sphere_transport.rotation_2d.forward.Forward.get_timestep_str", "compass.ocean.tests.sphere_transport.rotation_2d.forward.Forward.run", "compass.ocean.tests.sphere_transport.rotation_2d.forward.Forward.setup", "compass.ocean.tests.sphere_transport.rotation_2d.init.Init", "compass.ocean.tests.sphere_transport.rotation_2d.init.Init.run", "compass.ocean.tests.sphere_transport.rotation_2d.mesh.Mesh", "compass.ocean.tests.sphere_transport.rotation_2d.mesh.Mesh.build_cell_width_lat_lon", "compass.ocean.tests.sphere_transport.rotation_2d.mesh.Mesh.run", "compass.ocean.tests.ziso.Ziso", "compass.ocean.tests.ziso.ZisoTestCase", "compass.ocean.tests.ziso.ZisoTestCase.configure", "compass.ocean.tests.ziso.ZisoTestCase.run", "compass.ocean.tests.ziso.configure", "compass.ocean.tests.ziso.forward.Forward", "compass.ocean.tests.ziso.forward.Forward.run", "compass.ocean.tests.ziso.forward.Forward.setup", "compass.ocean.tests.ziso.initial_state.InitialState", "compass.ocean.tests.ziso.initial_state.InitialState.run", "compass.ocean.tests.ziso.with_frazil.WithFrazil", "compass.ocean.tests.ziso.with_frazil.WithFrazil.configure", "compass.ocean.tests.ziso.with_frazil.WithFrazil.run", "compass.ocean.vertical.grid_1d.generate_1d_grid", "compass.ocean.vertical.grid_1d.write_1d_grid", "compass.ocean.vertical.init_vertical_coord", "compass.ocean.vertical.partial_cells.alter_bottom_depth", "compass.ocean.vertical.partial_cells.alter_ssh", "compass.ocean.vertical.zlevel.compute_min_max_level_cell", "compass.ocean.vertical.zlevel.compute_z_level_layer_thickness", "compass.ocean.vertical.zlevel.compute_z_level_resting_thickness", "compass.ocean.vertical.zlevel.init_z_level_vertical_coord", "compass.ocean.vertical.zstar.init_z_star_vertical_coord", "Ocean core", "baroclinic_channel", "drying_slope", "global_convergence", "global_ocean", "gotm", "hurricane", "ice_shelf_2d", "Test groups", "internal_wave", "isomip_plus", "planar_convergence", "soma", "sphere_transport", "spherical_harmonic_transform", "ziso", "Organization of Tests", "Overview", "Quick Start for Developers", "Troubleshooting", "Glossary", "compass", "Developer Tutorial: Adding a parameter study", "Developer Tutorial: Adding a new test group", "Developer Tutorial: Porting a legacy COMPASS test group", "Config Files", "Framework", "Landice core", "Test suites", "calving_dt_convergence", "circular_shelf", "dome", "eismint2", "enthalpy_benchmark", "greenland", "humboldt", "hydro_radial", "Test Groups", "kangerlussuaq", "koge_bugt_s", "mismipplus", "thwaites", "Anvil", "Badger", "Chrysalis", "CompyMcNodeFace", "Cori", "Machines", "Ice shelf-cavities", "Framework", "Vertical coordinate", "Ocean core", "Test suites", "baroclinic_channel", "drying_slope", "global_convergence", "global_ocean", "gotm", "hurricane", "ice_shelf_2d", "Test groups", "internal_wave", "isomip_plus", "planar_convergence", "soma", "sphere_transport", "spherical_harmonic_transform", "ziso", "Quick Start for Users", "Test Cases", "Test Suites", "Code and Documentation Versions"], "terms": {"date": [0, 1, 3, 6, 34, 207, 594, 598, 612, 619, 650, 656], "2021": [0, 1], "07": 0, "30": [0, 1, 8, 45, 462, 598, 608, 609, 610, 625, 628, 640, 648, 649, 650, 653, 656, 660, 661], "contributor": [0, 1, 3], "xylar": [0, 1, 8, 617, 619, 641, 650], "asai": [0, 1, 619, 650, 656], "davi": [0, 1, 619, 650, 656], "we": [0, 1, 3, 7, 8, 63, 208, 209, 210, 211, 213, 214, 215, 219, 220, 224, 226, 228, 239, 595, 596, 601, 603, 604, 606, 609, 610, 611, 612, 615, 616, 617, 618, 619, 639, 640, 641, 642, 644, 650, 653, 654, 658, 659, 660, 662, 664], "would": [0, 1, 3, 6, 8, 11, 21, 23, 27, 65, 75, 82, 87, 99, 114, 135, 150, 164, 171, 194, 204, 251, 272, 318, 330, 412, 420, 428, 453, 610, 611, 612, 613, 617, 618, 624, 641, 642, 644, 650, 662], "like": [0, 1, 3, 6, 7, 8, 228, 598, 609, 610, 611, 612, 613, 615, 616, 617, 618, 619, 641, 649, 650, 657, 660, 662, 663], "have": [0, 1, 3, 5, 6, 7, 8, 25, 35, 63, 82, 87, 99, 114, 150, 164, 171, 194, 204, 208, 214, 222, 224, 226, 228, 282, 303, 490, 508, 522, 536, 560, 598, 600, 604, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 625, 627, 629, 635, 636, 637, 638, 639, 640, 641, 642, 644, 647, 649, 650, 653, 654, 655, 656, 657, 658, 661, 662, 663, 664], "wai": [0, 1, 6, 7, 11, 47, 52, 226, 228, 445, 604, 610, 611, 612, 613, 615, 616, 617, 618, 629, 641, 644, 650, 656], "download": [0, 1, 6, 11, 12, 22, 101, 116, 137, 152, 153, 173, 196, 206, 207, 210, 213, 219, 220, 235, 253, 256, 265, 320, 329, 332, 380, 387, 396, 414, 422, 443, 455, 556, 578, 594, 606, 611, 612, 619, 621, 629, 662, 664], "file": [0, 6, 7, 9, 11, 12, 14, 15, 16, 17, 20, 22, 23, 24, 25, 26, 28, 34, 37, 38, 42, 58, 59, 60, 61, 67, 70, 71, 72, 73, 74, 75, 79, 82, 87, 91, 93, 99, 101, 106, 108, 114, 116, 135, 137, 150, 152, 164, 171, 173, 174, 180, 193, 194, 196, 199, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 219, 220, 222, 226, 233, 236, 239, 240, 241, 242, 253, 256, 265, 292, 303, 305, 308, 310, 312, 314, 316, 318, 333, 338, 346, 351, 354, 355, 378, 391, 392, 397, 401, 414, 422, 440, 443, 445, 455, 460, 461, 463, 465, 491, 548, 553, 556, 578, 585, 594, 595, 596, 598, 600, 601, 603, 604, 606, 608, 609, 611, 612, 613, 614, 615, 616, 618, 622, 624, 625, 626, 627, 628, 629, 630, 632, 633, 635, 637, 640, 641, 644, 646, 647, 649, 650, 653, 656, 657, 659, 660, 662, 663], "an": [0, 3, 4, 6, 7, 8, 11, 12, 16, 23, 38, 43, 45, 46, 63, 74, 75, 112, 123, 178, 208, 210, 211, 213, 215, 219, 220, 226, 228, 240, 289, 292, 303, 305, 308, 310, 312, 314, 316, 338, 341, 346, 351, 354, 355, 356, 366, 444, 448, 450, 458, 463, 470, 471, 472, 477, 493, 502, 511, 514, 525, 528, 539, 542, 548, 549, 550, 553, 556, 563, 566, 595, 596, 598, 599, 601, 603, 604, 608, 609, 612, 613, 614, 615, 618, 619, 622, 624, 625, 627, 629, 634, 635, 637, 641, 642, 644, 646, 648, 650, 655, 656, 658, 659, 660, 661, 662, 663, 664], "onlin": [0, 619, 650], "instead": [0, 1, 6, 8, 29, 69, 86, 96, 98, 105, 111, 113, 120, 126, 131, 142, 144, 149, 154, 161, 168, 170, 177, 179, 187, 192, 198, 201, 203, 221, 226, 236, 247, 250, 259, 262, 268, 297, 307, 335, 404, 411, 419, 574, 583, 610, 611, 616, 617, 618, 622, 624, 629, 636, 658, 659, 660, 662, 664], "gener": [0, 1, 3, 4, 5, 7, 8, 14, 15, 17, 22, 50, 75, 101, 116, 137, 152, 173, 196, 206, 207, 214, 228, 240, 253, 256, 265, 365, 366, 368, 370, 372, 414, 422, 425, 443, 455, 578, 584, 594, 595, 596, 597, 598, 599, 600, 601, 603, 604, 606, 609, 610, 611, 616, 617, 618, 619, 622, 623, 624, 625, 628, 629, 631, 632, 633, 634, 635, 641, 648, 649, 650, 651, 652, 657, 659, 660, 662], "them": [0, 1, 7, 8, 24, 61, 212, 222, 226, 597, 598, 599, 605, 610, 611, 612, 614, 616, 617, 618, 622, 639, 641, 646, 650, 652, 662, 663], "each": [0, 1, 3, 6, 7, 8, 20, 26, 39, 45, 46, 71, 208, 209, 210, 211, 212, 213, 214, 215, 220, 226, 228, 230, 231, 240, 281, 292, 294, 299, 302, 303, 304, 323, 326, 338, 340, 343, 346, 348, 351, 353, 358, 361, 364, 384, 390, 452, 466, 474, 481, 482, 489, 507, 521, 535, 547, 548, 549, 553, 559, 586, 587, 588, 589, 590, 591, 592, 593, 595, 596, 597, 598, 599, 601, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 614, 616, 617, 618, 619, 622, 623, 626, 628, 629, 641, 644, 645, 647, 648, 649, 650, 652, 653, 655, 656, 657, 658, 659, 660, 662, 664], "time": [0, 1, 6, 7, 8, 11, 26, 82, 87, 99, 114, 150, 164, 171, 194, 204, 208, 210, 211, 212, 213, 215, 219, 220, 228, 240, 260, 276, 286, 292, 297, 300, 303, 318, 321, 338, 341, 346, 351, 356, 359, 362, 375, 397, 398, 399, 432, 441, 446, 450, 460, 461, 463, 465, 473, 484, 510, 511, 524, 525, 538, 539, 548, 552, 553, 562, 563, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 607, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 623, 624, 625, 626, 627, 628, 629, 630, 635, 637, 640, 642, 646, 647, 650, 652, 653, 654, 655, 656, 658, 661, 662, 664], "run": [0, 5, 7, 11, 14, 15, 16, 17, 20, 21, 25, 26, 27, 34, 42, 60, 61, 64, 65, 70, 71, 72, 73, 75, 80, 82, 85, 87, 95, 97, 99, 104, 110, 112, 114, 135, 141, 148, 150, 153, 156, 162, 164, 167, 169, 171, 176, 194, 197, 200, 202, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 219, 220, 222, 224, 226, 228, 231, 248, 251, 257, 263, 272, 276, 282, 285, 292, 296, 297, 300, 303, 305, 318, 321, 330, 338, 341, 346, 351, 356, 359, 362, 370, 376, 382, 385, 388, 397, 409, 412, 417, 420, 428, 433, 441, 446, 450, 453, 483, 484, 490, 498, 502, 508, 510, 522, 524, 536, 538, 549, 560, 562, 572, 576, 581, 594, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 607, 608, 609, 611, 613, 614, 615, 616, 619, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 646, 647, 648, 649, 650, 652, 653, 655, 657, 658, 659, 660, 661, 663, 664], "The": [0, 1, 3, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 18, 20, 22, 23, 24, 25, 26, 27, 31, 32, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 50, 51, 55, 59, 60, 61, 64, 65, 67, 69, 70, 71, 72, 73, 74, 75, 78, 80, 82, 85, 87, 89, 91, 95, 97, 99, 101, 102, 104, 106, 110, 112, 114, 116, 117, 119, 121, 123, 124, 127, 129, 132, 135, 137, 138, 141, 143, 145, 148, 150, 152, 153, 156, 158, 160, 162, 164, 167, 169, 171, 173, 174, 176, 178, 180, 184, 186, 189, 191, 194, 196, 197, 200, 202, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 226, 228, 229, 231, 232, 233, 236, 237, 239, 241, 242, 244, 245, 248, 251, 253, 254, 256, 257, 260, 263, 265, 266, 270, 272, 274, 276, 279, 282, 283, 285, 289, 292, 296, 297, 300, 303, 305, 308, 310, 312, 314, 316, 318, 321, 324, 327, 330, 333, 336, 338, 341, 344, 346, 349, 351, 354, 355, 356, 359, 362, 366, 368, 370, 372, 375, 382, 385, 388, 391, 394, 397, 402, 405, 408, 409, 412, 414, 415, 417, 420, 422, 423, 426, 428, 430, 432, 433, 435, 437, 440, 441, 443, 444, 445, 446, 448, 450, 453, 455, 456, 458, 461, 463, 464, 465, 467, 468, 469, 473, 477, 479, 483, 487, 490, 491, 493, 496, 498, 500, 502, 505, 508, 510, 514, 516, 519, 522, 524, 528, 530, 533, 536, 538, 542, 544, 550, 557, 560, 562, 566, 568, 572, 575, 576, 578, 579, 581, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 619, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 655, 656, 657, 658, 659, 660, 661, 662, 663], "primari": [0, 3, 6, 8, 664], "motiv": 0, "thi": [0, 1, 3, 4, 6, 7, 8, 11, 12, 16, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 34, 36, 42, 43, 44, 47, 48, 50, 51, 52, 53, 55, 56, 60, 63, 65, 67, 69, 74, 75, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 233, 234, 236, 237, 238, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 282, 284, 285, 287, 289, 290, 291, 292, 293, 296, 297, 298, 300, 301, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322, 324, 325, 327, 328, 330, 331, 333, 334, 335, 336, 337, 338, 339, 341, 342, 344, 345, 346, 347, 349, 350, 351, 352, 354, 355, 356, 357, 359, 360, 362, 363, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 379, 382, 383, 385, 386, 388, 389, 391, 393, 394, 395, 397, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 476, 477, 478, 479, 483, 485, 487, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 557, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 594, 595, 596, 597, 598, 600, 601, 603, 604, 606, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 622, 623, 624, 625, 626, 627, 628, 629, 632, 633, 634, 635, 640, 641, 642, 644, 646, 648, 649, 650, 652, 653, 655, 656, 657, 658, 659, 660, 661, 662, 664], "i": [0, 3, 6, 7, 8, 11, 12, 20, 21, 26, 29, 34, 37, 38, 50, 51, 55, 60, 61, 65, 68, 69, 70, 74, 75, 82, 86, 87, 91, 96, 98, 99, 105, 106, 111, 113, 114, 120, 126, 131, 135, 142, 144, 149, 150, 154, 156, 161, 164, 168, 170, 171, 176, 177, 178, 179, 180, 187, 192, 194, 198, 201, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 232, 233, 237, 239, 240, 247, 250, 251, 259, 262, 268, 272, 276, 292, 297, 303, 307, 318, 330, 335, 385, 399, 404, 405, 411, 412, 419, 420, 428, 441, 444, 445, 453, 461, 465, 498, 500, 502, 553, 574, 576, 579, 583, 586, 592, 593, 594, 595, 596, 597, 598, 600, 601, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 622, 623, 624, 625, 626, 627, 628, 629, 630, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 646, 647, 648, 649, 650, 651, 652, 653, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664], "option": [0, 6, 7, 11, 12, 14, 15, 17, 21, 23, 24, 25, 26, 27, 28, 34, 35, 36, 37, 38, 39, 43, 49, 50, 51, 54, 55, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 79, 82, 87, 91, 93, 99, 106, 108, 114, 123, 125, 130, 135, 150, 164, 171, 180, 182, 194, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 226, 228, 230, 233, 236, 237, 240, 241, 242, 244, 246, 249, 251, 258, 261, 267, 271, 272, 280, 288, 293, 296, 298, 301, 306, 318, 322, 325, 330, 334, 336, 339, 342, 344, 347, 349, 352, 354, 355, 357, 360, 363, 383, 385, 389, 403, 405, 408, 410, 412, 418, 420, 428, 441, 450, 451, 453, 463, 464, 465, 467, 468, 469, 473, 480, 484, 486, 488, 498, 506, 513, 520, 527, 534, 541, 548, 558, 565, 573, 575, 576, 582, 584, 586, 587, 588, 592, 593, 594, 595, 596, 597, 598, 599, 601, 603, 604, 605, 606, 607, 608, 609, 613, 615, 616, 619, 622, 634, 644, 646, 662, 663], "avoid": [0, 1, 6, 610, 617, 618, 652], "consum": [0, 8, 610, 616, 617, 646, 650, 664], "mesh": [0, 1, 6, 11, 59, 79, 80, 82, 85, 89, 91, 95, 97, 99, 102, 104, 106, 117, 119, 138, 143, 153, 156, 160, 162, 164, 174, 176, 186, 191, 193, 199, 208, 209, 210, 211, 212, 215, 219, 230, 239, 240, 248, 254, 274, 279, 282, 283, 285, 289, 292, 296, 297, 300, 303, 305, 308, 310, 314, 316, 318, 321, 324, 327, 354, 355, 356, 359, 362, 372, 382, 385, 388, 391, 394, 397, 398, 415, 430, 444, 446, 461, 473, 477, 479, 483, 487, 490, 491, 500, 502, 505, 508, 510, 514, 519, 522, 524, 528, 533, 536, 538, 542, 547, 549, 550, 555, 557, 560, 562, 566, 572, 579, 581, 586, 592, 593, 595, 596, 599, 601, 603, 604, 605, 606, 609, 610, 611, 612, 614, 615, 618, 619, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 644, 646, 647, 648, 649, 651, 653, 655, 656, 657, 658, 659, 660, 661, 662, 664], "initi": [0, 7, 8, 11, 89, 102, 104, 117, 138, 143, 145, 153, 158, 160, 174, 176, 178, 184, 186, 189, 191, 209, 210, 211, 212, 213, 215, 219, 220, 228, 232, 236, 240, 241, 248, 254, 274, 278, 289, 291, 292, 296, 297, 300, 303, 305, 308, 310, 312, 314, 316, 318, 321, 324, 327, 338, 341, 346, 351, 354, 355, 356, 359, 362, 366, 372, 382, 385, 388, 394, 415, 430, 440, 446, 477, 496, 500, 502, 514, 528, 542, 548, 553, 566, 572, 579, 581, 595, 596, 597, 598, 599, 601, 603, 604, 605, 606, 607, 609, 610, 611, 613, 614, 615, 616, 618, 619, 622, 624, 625, 626, 627, 629, 630, 631, 634, 635, 642, 644, 646, 647, 648, 649, 650, 653, 655, 656, 658, 661, 663], "condit": [0, 11, 89, 102, 104, 117, 138, 143, 145, 153, 158, 160, 174, 176, 178, 184, 186, 189, 191, 209, 210, 211, 212, 213, 215, 219, 220, 228, 240, 241, 248, 254, 274, 278, 289, 291, 292, 296, 297, 300, 303, 305, 308, 310, 312, 314, 316, 318, 321, 324, 327, 338, 341, 346, 351, 354, 355, 356, 359, 362, 366, 372, 382, 385, 388, 394, 415, 430, 446, 477, 500, 502, 514, 528, 542, 548, 566, 572, 579, 581, 595, 596, 597, 598, 599, 601, 603, 604, 605, 606, 607, 609, 610, 611, 614, 615, 616, 618, 619, 622, 624, 625, 626, 627, 628, 629, 630, 631, 634, 635, 642, 646, 647, 648, 650, 652, 653, 655, 656, 658, 661, 663], "faster": [0, 8, 612, 629], "regress": [0, 1, 3, 278, 291, 595, 598, 603, 604, 610, 614, 615, 617, 618, 622, 624, 626, 631, 646, 647, 650, 655, 656, 658, 661, 662, 664], "mpa": [0, 6, 7, 9, 10, 11, 12, 26, 31, 42, 59, 62, 67, 70, 71, 72, 73, 79, 84, 94, 109, 134, 140, 146, 155, 166, 183, 188, 193, 199, 207, 209, 210, 211, 212, 215, 221, 222, 223, 224, 225, 226, 228, 229, 230, 233, 237, 243, 251, 269, 272, 276, 278, 279, 285, 291, 292, 303, 305, 308, 314, 316, 318, 321, 324, 333, 338, 341, 346, 351, 354, 356, 365, 370, 374, 376, 385, 388, 397, 398, 402, 407, 412, 425, 428, 439, 441, 444, 461, 473, 476, 479, 483, 487, 495, 498, 504, 505, 510, 511, 519, 524, 525, 533, 538, 539, 548, 553, 557, 562, 563, 571, 576, 585, 594, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 607, 608, 609, 614, 615, 616, 617, 618, 619, 621, 636, 637, 638, 639, 640, 641, 642, 644, 645, 646, 647, 650, 651, 652, 655, 656, 659, 660, 661, 663, 664], "compon": [0, 6, 207, 594, 598, 610, 611, 615, 617, 618, 619, 641, 642, 652], "forward": [0, 1, 8, 11, 14, 15, 17, 82, 87, 99, 104, 114, 135, 150, 153, 164, 171, 176, 194, 204, 207, 213, 220, 228, 248, 260, 276, 292, 297, 300, 303, 338, 341, 346, 351, 356, 359, 362, 375, 397, 409, 432, 482, 502, 572, 581, 594, 610, 611, 619, 624, 625, 626, 627, 628, 630, 635, 642, 647, 648, 649, 653, 655, 657, 658, 660, 661], "mode": [0, 1, 6, 14, 15, 17, 596, 598, 600, 606, 610, 612, 617, 618, 619, 650, 652, 660, 662], "potenti": [0, 240, 260, 432, 598, 604, 610, 617, 647, 650, 655, 656, 658], "other": [0, 1, 3, 6, 7, 8, 11, 16, 36, 209, 221, 444, 597, 604, 605, 607, 610, 611, 612, 613, 614, 615, 616, 619, 622, 628, 631, 635, 636, 646, 650, 657, 659, 663], "could": [0, 1, 208, 610, 611, 612, 616, 617, 618, 619, 634, 650, 656], "includ": [0, 1, 3, 6, 7, 8, 12, 22, 26, 37, 69, 101, 116, 137, 146, 152, 156, 162, 164, 173, 196, 206, 208, 212, 214, 226, 233, 235, 236, 237, 253, 256, 265, 308, 314, 316, 320, 324, 327, 329, 332, 333, 387, 396, 405, 412, 414, 422, 441, 443, 445, 446, 450, 455, 463, 465, 498, 500, 502, 572, 576, 578, 579, 581, 595, 598, 601, 603, 604, 606, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664], "result": [0, 1, 6, 8, 37, 46, 74, 75, 85, 95, 97, 110, 112, 141, 148, 156, 162, 167, 169, 200, 202, 208, 209, 210, 211, 212, 215, 226, 228, 245, 257, 263, 266, 276, 300, 310, 312, 356, 359, 362, 368, 417, 433, 456, 461, 473, 548, 556, 595, 597, 598, 603, 604, 605, 606, 607, 609, 610, 611, 612, 614, 616, 617, 618, 619, 622, 623, 624, 625, 626, 627, 628, 629, 630, 635, 646, 647, 649, 650, 651, 652, 655, 656, 657, 658, 659, 661, 664], "baselin": [0, 1, 6, 8, 26, 70, 71, 73, 74, 75, 209, 210, 211, 213, 215, 219, 220, 292, 303, 367, 427, 436, 595, 598, 601, 604, 606, 609, 611, 614, 618, 622, 634, 646, 653, 656, 662], "valid": [0, 1, 6, 26, 82, 164, 208, 210, 211, 213, 215, 219, 292, 375, 461, 586, 587, 588, 589, 590, 591, 592, 593, 595, 596, 598, 599, 600, 603, 606, 609, 611, 612, 615, 617, 625, 644, 647, 648, 650, 651, 652, 653, 655, 658, 661, 662], "A": [0, 1, 6, 7, 8, 9, 11, 12, 15, 17, 23, 25, 26, 31, 36, 39, 43, 44, 47, 50, 51, 52, 55, 60, 62, 65, 67, 69, 70, 71, 72, 73, 74, 75, 79, 80, 82, 84, 85, 87, 89, 91, 93, 94, 95, 97, 99, 102, 106, 108, 109, 110, 112, 114, 117, 119, 121, 123, 132, 134, 135, 138, 140, 141, 145, 148, 150, 155, 156, 158, 162, 164, 166, 167, 169, 171, 174, 176, 180, 182, 183, 184, 188, 189, 193, 194, 197, 199, 200, 202, 204, 209, 210, 211, 215, 228, 230, 231, 232, 233, 236, 237, 243, 245, 251, 254, 257, 263, 266, 269, 272, 274, 276, 278, 279, 282, 285, 289, 291, 292, 297, 300, 303, 305, 308, 310, 312, 314, 316, 318, 321, 324, 327, 330, 333, 336, 338, 341, 344, 346, 349, 351, 354, 356, 359, 362, 365, 368, 370, 372, 374, 375, 382, 385, 388, 391, 394, 397, 402, 405, 407, 412, 415, 417, 420, 423, 425, 428, 430, 433, 437, 439, 440, 441, 444, 445, 446, 448, 453, 456, 458, 461, 463, 465, 473, 476, 477, 479, 483, 487, 490, 493, 495, 496, 498, 500, 504, 505, 508, 510, 514, 516, 519, 522, 524, 528, 530, 533, 536, 538, 542, 544, 550, 553, 557, 560, 562, 566, 568, 571, 576, 579, 584, 585, 586, 587, 588, 589, 590, 592, 593, 595, 598, 601, 603, 604, 606, 609, 610, 611, 612, 614, 615, 616, 617, 618, 622, 626, 641, 646, 649, 650, 652, 656, 658, 659], "challeng": [0, 1, 3], "capabl": [0, 1, 3, 226, 228, 611, 641, 660, 661], "provid": [0, 1, 3, 4, 6, 8, 12, 74, 75, 207, 209, 210, 211, 213, 215, 220, 228, 292, 556, 594, 595, 596, 598, 600, 601, 603, 604, 606, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 622, 624, 634, 635, 641, 642, 650, 653, 656, 658, 659, 661, 662], "easi": [0, 7, 12, 611, 618], "both": [0, 1, 6, 7, 8, 75, 228, 595, 596, 598, 600, 601, 604, 608, 610, 612, 615, 616, 617, 618, 619, 624, 625, 627, 630, 642, 646, 650, 652, 653, 656, 657, 658, 661], "develop": [0, 6, 7, 8, 207, 226, 610, 611, 613, 619, 641, 650, 662], "user": [0, 6, 7, 8, 11, 25, 26, 27, 36, 67, 75, 146, 209, 210, 211, 212, 213, 214, 215, 217, 218, 226, 595, 596, 598, 600, 601, 603, 604, 606, 607, 608, 609, 610, 613, 614, 616, 617, 618, 621, 625, 637, 640, 641, 645, 649, 650, 656, 657, 659, 660], "control": [0, 1, 209, 210, 211, 228, 440, 610, 615, 619, 649, 651, 656, 657, 658, 659, 661, 662], "which": [0, 1, 3, 6, 7, 8, 12, 17, 31, 70, 71, 73, 75, 210, 211, 213, 215, 220, 240, 245, 257, 266, 276, 409, 417, 444, 445, 595, 596, 598, 599, 600, 604, 610, 611, 612, 616, 617, 618, 619, 622, 624, 625, 627, 628, 629, 630, 632, 633, 635, 637, 641, 642, 644, 646, 647, 648, 649, 650, 652, 653, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664], "case": [0, 6, 7, 8, 9, 11, 16, 17, 21, 22, 26, 27, 28, 30, 31, 32, 34, 35, 39, 43, 48, 50, 53, 55, 60, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 112, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 145, 147, 148, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 169, 171, 172, 173, 174, 175, 176, 178, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 193, 194, 195, 196, 197, 199, 200, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 226, 228, 229, 233, 234, 235, 237, 238, 243, 244, 245, 246, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 282, 284, 285, 289, 292, 293, 296, 297, 298, 300, 301, 303, 305, 306, 308, 310, 312, 314, 316, 318, 320, 321, 322, 324, 325, 327, 329, 330, 332, 333, 334, 336, 338, 339, 341, 342, 344, 346, 347, 349, 351, 352, 354, 355, 356, 357, 359, 360, 362, 363, 365, 366, 368, 369, 370, 371, 372, 373, 375, 379, 380, 382, 383, 385, 387, 388, 389, 391, 394, 396, 397, 400, 402, 403, 405, 407, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 439, 441, 442, 443, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 477, 478, 479, 480, 483, 487, 488, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 508, 509, 510, 514, 516, 518, 519, 520, 522, 523, 524, 528, 530, 532, 533, 534, 536, 537, 538, 542, 544, 546, 548, 549, 550, 553, 554, 555, 557, 558, 560, 561, 562, 566, 568, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 584, 594, 595, 596, 597, 599, 600, 601, 603, 604, 605, 606, 607, 608, 609, 612, 614, 615, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 644, 645, 646, 647, 648, 649, 651, 653, 654, 655, 656, 657, 658, 659, 660, 661, 664], "suit": [0, 1, 3, 7, 11, 26, 35, 39, 68, 69, 71, 226, 598, 612, 614, 615, 616, 617, 618, 619, 621, 629, 636, 637, 638, 639, 640, 645, 650, 654], "ar": [0, 1, 3, 6, 7, 8, 9, 11, 12, 20, 21, 23, 26, 31, 36, 63, 65, 69, 71, 75, 82, 85, 87, 95, 97, 99, 110, 112, 114, 135, 141, 148, 150, 156, 162, 164, 167, 169, 171, 194, 200, 202, 204, 207, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 226, 228, 231, 251, 272, 300, 318, 330, 359, 362, 412, 420, 428, 440, 453, 461, 464, 496, 502, 547, 549, 554, 572, 576, 586, 589, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 621, 622, 623, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664], "last": [0, 1, 3, 612, 622, 649, 662], "modifi": [0, 3, 8, 24, 28, 61, 125, 130, 244, 246, 249, 258, 261, 267, 271, 293, 296, 298, 301, 306, 322, 325, 334, 339, 342, 347, 352, 357, 360, 363, 383, 389, 403, 408, 410, 418, 451, 573, 575, 582, 596, 598, 604, 610, 615, 616, 617, 618, 619, 625, 642, 650, 652, 653, 656], "defin": [0, 1, 7, 8, 11, 26, 50, 70, 71, 73, 146, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 226, 228, 236, 239, 594, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 614, 615, 619, 624, 625, 627, 630, 641, 644, 647, 648, 649, 650, 652, 653, 655, 656, 658, 659, 661, 663, 664], "its": [0, 1, 6, 7, 8, 11, 28, 72, 212, 553, 598, 605, 610, 611, 612, 614, 616, 617, 618, 619, 624, 625, 626, 630, 636, 649, 650, 656, 657, 662, 663], "attribut": [0, 1, 8, 20, 211, 213, 215, 220, 228, 598, 616, 617, 618], "For": [0, 1, 3, 4, 6, 7, 8, 63, 71, 210, 211, 213, 215, 220, 221, 596, 598, 604, 610, 611, 612, 614, 616, 617, 618, 619, 621, 622, 626, 636, 645, 648, 649, 650, 654, 658, 659, 660, 662, 663], "see": [0, 1, 6, 7, 8, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 549, 595, 597, 598, 599, 601, 604, 605, 606, 607, 608, 609, 610, 612, 613, 616, 617, 618, 619, 621, 623, 625, 634, 641, 645, 646, 649, 650, 653, 656, 657, 659, 661, 662, 663, 664], "mechan": [0, 1, 610], "comput": [0, 1, 7, 63, 226, 228, 230, 232, 283, 456, 461, 491, 547, 548, 555, 589, 590, 591, 595, 597, 598, 601, 603, 604, 605, 606, 609, 610, 612, 617, 629, 632, 633, 634, 637, 638, 640, 641, 642, 650, 656, 660, 662], "There": [0, 1, 6, 213, 219, 220, 228, 586, 592, 593, 595, 598, 604, 610, 611, 612, 613, 617, 618, 619, 621, 623, 624, 625, 628, 629, 632, 633, 634, 635, 655], "need": [0, 1, 3, 5, 6, 7, 8, 27, 36, 51, 63, 207, 237, 305, 308, 444, 461, 473, 594, 598, 604, 606, 610, 611, 612, 613, 615, 616, 617, 618, 619, 627, 634, 636, 640, 641, 642, 644, 646, 649, 650, 656, 657, 659, 660, 662, 664], "practic": [0, 1, 610, 611, 617, 642], "should": [0, 1, 3, 6, 7, 8, 12, 22, 26, 28, 37, 51, 60, 70, 71, 75, 101, 116, 137, 152, 173, 196, 206, 207, 219, 221, 222, 223, 224, 225, 226, 228, 236, 253, 256, 265, 414, 422, 443, 455, 477, 578, 594, 598, 604, 610, 612, 613, 616, 617, 618, 619, 622, 623, 629, 646, 647, 650, 653, 655, 662], "overli": [0, 7, 228, 232, 642, 650, 653, 656], "tediou": [0, 1], "manual": [0, 1, 6, 8, 26, 27, 208, 209, 210, 211, 215, 610, 616, 653, 656, 663], "e": [0, 1, 7, 8, 11, 28, 31, 42, 226, 228, 461, 550, 598, 610, 611, 612, 613, 614, 616, 617, 618, 619, 626, 640, 644, 647, 648, 650, 653, 655, 656, 657, 658, 661, 662, 663, 664], "g": [0, 1, 7, 8, 11, 28, 31, 42, 114, 123, 211, 226, 550, 598, 610, 611, 612, 613, 614, 616, 617, 618, 619, 626, 644, 647, 648, 650, 653, 655, 656, 657, 661, 662, 664], "set": [0, 1, 5, 6, 7, 8, 11, 12, 14, 15, 17, 22, 35, 51, 66, 67, 70, 71, 73, 74, 75, 82, 99, 101, 116, 137, 152, 164, 173, 174, 196, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 221, 222, 223, 224, 225, 226, 228, 235, 253, 256, 265, 278, 280, 288, 291, 320, 329, 332, 387, 396, 414, 422, 443, 455, 460, 461, 480, 486, 488, 506, 513, 520, 527, 534, 541, 547, 549, 558, 565, 578, 586, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 607, 609, 610, 611, 613, 614, 615, 619, 623, 625, 626, 627, 628, 629, 630, 631, 632, 633, 635, 636, 637, 638, 639, 640, 641, 646, 647, 648, 649, 650, 651, 652, 653, 655, 656, 657, 658, 659, 660, 664], "flag": [0, 1, 6, 610, 611, 613, 614, 617, 618, 619, 621, 645, 647, 655, 662], "document": [0, 4, 8, 556, 598, 610, 611, 615, 619, 650, 655], "process": [0, 1, 3, 8, 65, 212, 214, 228, 310, 312, 362, 445, 598, 610, 611, 612, 614, 615, 616, 617, 618, 650, 652, 653], "creat": [0, 6, 8, 9, 11, 12, 20, 26, 31, 38, 43, 44, 50, 51, 55, 70, 71, 72, 73, 80, 82, 85, 87, 89, 91, 95, 97, 99, 102, 104, 106, 110, 112, 114, 117, 119, 121, 124, 127, 129, 132, 135, 138, 141, 143, 145, 148, 150, 153, 156, 158, 160, 162, 164, 167, 169, 171, 174, 176, 178, 180, 184, 186, 189, 191, 194, 197, 200, 202, 204, 209, 210, 211, 212, 213, 214, 215, 217, 218, 220, 226, 228, 233, 236, 237, 241, 245, 248, 251, 254, 257, 260, 263, 266, 270, 272, 274, 276, 279, 282, 285, 289, 292, 297, 300, 303, 305, 308, 310, 312, 314, 316, 318, 321, 324, 327, 330, 333, 336, 337, 338, 341, 344, 345, 346, 349, 350, 351, 356, 359, 362, 366, 368, 370, 372, 375, 382, 385, 388, 391, 392, 394, 397, 402, 405, 406, 409, 412, 415, 417, 420, 423, 426, 428, 430, 432, 433, 435, 437, 441, 446, 448, 450, 453, 456, 458, 461, 473, 477, 479, 483, 487, 490, 493, 496, 498, 500, 502, 505, 508, 510, 514, 516, 517, 519, 522, 524, 528, 530, 531, 533, 536, 538, 542, 544, 545, 550, 557, 560, 562, 566, 568, 569, 572, 576, 579, 581, 586, 592, 593, 596, 597, 598, 599, 600, 601, 604, 606, 610, 611, 613, 614, 615, 616, 618, 619, 622, 628, 629, 632, 633, 635, 636, 637, 638, 639, 640, 641, 646, 649, 650, 656, 657, 659, 660, 662], "upload": [0, 650], "give": [0, 6, 8, 610, 611, 612, 616, 617, 618, 619, 626, 659, 660, 662], "stamp": [0, 1, 6], "given": [0, 1, 6, 7, 8, 9, 25, 37, 45, 63, 65, 69, 74, 75, 208, 260, 283, 354, 355, 377, 432, 463, 465, 477, 491, 547, 548, 589, 595, 596, 598, 603, 607, 610, 613, 616, 617, 619, 625, 627, 628, 630, 635, 642, 647, 650, 652, 655, 661, 662, 664], "git": [0, 3, 8, 67, 207, 594, 612, 617, 618, 619, 662], "hash": 0, "releas": [0, 1, 611, 615, 621, 641, 645, 662], "know": [0, 1, 8, 610, 611, 612, 617, 618, 642, 650], "older": [0, 6], "retain": [0, 6, 618, 619, 650], "so": [0, 1, 6, 7, 8, 24, 61, 77, 156, 207, 226, 233, 586, 592, 593, 594, 598, 601, 604, 609, 610, 611, 612, 614, 616, 617, 618, 619, 620, 641, 642, 644, 646, 649, 650, 656, 657, 659, 661, 662, 664], "can": [0, 3, 5, 6, 7, 8, 11, 12, 21, 26, 30, 47, 50, 52, 70, 71, 73, 75, 81, 157, 163, 207, 208, 209, 210, 212, 213, 215, 220, 221, 222, 223, 224, 225, 226, 228, 232, 233, 303, 444, 503, 594, 598, 604, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 622, 623, 625, 626, 628, 629, 635, 637, 640, 641, 642, 646, 649, 650, 652, 653, 656, 657, 658, 659, 660, 661, 662, 663, 664], "still": [0, 1, 618, 629], "It": [0, 1, 3, 6, 11, 20, 208, 209, 210, 211, 213, 214, 215, 220, 222, 228, 595, 596, 598, 599, 600, 601, 603, 610, 611, 612, 614, 616, 617, 618, 619, 629, 634, 641, 650, 658, 659], "mai": [0, 1, 6, 7, 8, 16, 20, 25, 207, 212, 226, 236, 594, 596, 598, 604, 610, 612, 613, 614, 617, 618, 619, 622, 634, 635, 640, 650, 652, 656, 659, 662, 663], "worthwhil": 0, "deprec": [0, 29, 86, 96, 98, 105, 111, 113, 120, 126, 131, 142, 144, 149, 154, 161, 168, 170, 177, 179, 187, 192, 198, 201, 203, 247, 250, 259, 262, 268, 307, 335, 404, 411, 419, 574, 583, 610], "delet": [0, 6, 8, 611, 612, 613], "old": [0, 6, 614, 616], "do": [0, 1, 3, 6, 8, 214, 598, 610, 612, 613, 614, 615, 616, 617, 618, 628, 629, 632, 633, 635, 641, 646, 650, 656, 658, 662], "abil": [0, 7, 659], "up": [0, 1, 5, 6, 7, 8, 11, 14, 15, 17, 22, 26, 35, 56, 67, 70, 71, 72, 73, 74, 75, 101, 116, 137, 152, 173, 174, 176, 196, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 221, 222, 223, 224, 225, 226, 228, 235, 253, 256, 265, 278, 291, 320, 329, 332, 387, 396, 414, 422, 443, 455, 578, 594, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 607, 609, 610, 611, 613, 614, 615, 616, 619, 625, 629, 630, 631, 636, 637, 638, 639, 640, 646, 649, 650, 652, 657, 659, 660, 663], "same": [0, 1, 6, 7, 8, 12, 26, 74, 75, 80, 214, 460, 598, 604, 607, 610, 611, 612, 614, 616, 617, 618, 619, 622, 625, 626, 627, 628, 630, 635, 636, 637, 638, 639, 640, 641, 642, 644, 646, 647, 650, 655, 656, 657, 662, 663, 664], "within": [0, 6, 7, 8, 11, 12, 16, 21, 26, 72, 73, 74, 75, 91, 106, 180, 209, 212, 239, 324, 595, 598, 599, 601, 607, 610, 612, 614, 616, 617, 618, 619, 628, 629, 632, 633, 635, 636, 637, 638, 639, 640, 641, 650, 651, 653, 656, 662], "If": [0, 1, 3, 6, 7, 8, 11, 12, 21, 27, 28, 38, 61, 63, 65, 66, 70, 74, 75, 82, 87, 99, 114, 135, 150, 164, 171, 194, 204, 221, 222, 223, 224, 225, 226, 251, 272, 318, 330, 412, 420, 428, 453, 595, 596, 598, 601, 603, 604, 606, 609, 610, 611, 612, 613, 614, 616, 617, 618, 619, 640, 641, 644, 649, 657, 659, 660, 662], "place": [0, 1, 6, 8, 598, 610, 617, 618, 641, 649, 657, 658, 659], "import": [0, 1, 8, 222, 610, 611, 612, 614, 616, 617, 618, 642], "constraint": [0, 662], "solut": [0, 1, 8, 174, 178, 215, 224, 276, 553, 554, 596, 597, 599, 605, 607, 613, 616, 618, 624, 625, 628, 630, 635, 648, 651, 658, 659], "support": [0, 6, 8, 11, 210, 211, 213, 215, 220, 228, 586, 592, 593, 595, 596, 597, 606, 609, 610, 611, 615, 616, 617, 618, 619, 622, 623, 629, 636, 637, 638, 639, 640, 642, 644, 647, 650, 652, 653, 656, 663], "databas": [0, 1, 6, 8, 9, 11, 12, 210, 606, 610, 641], "input": [0, 6, 8, 11, 12, 13, 16, 22, 59, 91, 101, 106, 116, 137, 152, 173, 180, 196, 206, 208, 209, 210, 211, 212, 213, 215, 219, 220, 233, 239, 253, 256, 265, 391, 414, 422, 443, 445, 455, 461, 511, 525, 539, 563, 578, 595, 596, 598, 600, 601, 603, 604, 616, 617, 618, 622, 652], "data": [0, 6, 8, 12, 219, 226, 230, 233, 276, 375, 376, 377, 380, 397, 398, 399, 401, 460, 461, 463, 465, 549, 554, 586, 592, 593, 596, 598, 600, 604, 610, 612, 615, 616, 619, 622, 634, 635, 641, 650, 652, 659, 662, 663, 664], "e3sm": [0, 1, 6, 8, 11, 297, 305, 308, 310, 312, 314, 316, 355, 594, 598, 610, 612, 615, 617, 618, 619, 636, 637, 638, 639, 640, 641, 642, 644, 646, 650], "lcrc": [0, 1, 6, 8, 34, 210, 610, 611, 619, 636, 638, 662], "server": [0, 1, 6, 8, 12, 34, 207, 210, 219, 594, 610, 611, 619, 640, 650], "store": [0, 1, 8, 28, 598, 604, 610, 616, 617, 618, 650, 662], "new": [0, 1, 3, 6, 9, 11, 15, 23, 26, 31, 36, 38, 43, 50, 55, 82, 87, 99, 114, 135, 150, 164, 171, 194, 204, 228, 233, 237, 239, 251, 272, 285, 310, 312, 314, 316, 318, 336, 344, 349, 368, 370, 385, 405, 412, 428, 440, 441, 483, 498, 510, 516, 524, 530, 538, 544, 562, 568, 576, 586, 592, 593, 604, 610, 611, 612, 613, 614, 615, 634, 635, 650, 656, 662], "compass_cach": [0, 6, 8, 9, 610], "core": [0, 6, 7, 8, 9, 10, 11, 12, 14, 15, 17, 18, 20, 21, 23, 24, 25, 26, 31, 41, 62, 64, 65, 67, 72, 73, 77, 78, 79, 84, 85, 93, 94, 95, 104, 108, 109, 110, 123, 134, 140, 141, 153, 155, 156, 166, 167, 176, 182, 183, 188, 193, 199, 200, 209, 210, 211, 213, 214, 215, 220, 228, 229, 236, 240, 243, 245, 248, 269, 278, 291, 300, 365, 374, 407, 425, 439, 476, 482, 495, 504, 571, 595, 596, 598, 601, 603, 606, 609, 614, 615, 616, 617, 618, 619, 620, 622, 626, 628, 629, 630, 635, 636, 637, 638, 639, 640, 641, 643, 646, 650, 652, 660, 662, 663, 664], "": [0, 1, 6, 7, 8, 11, 12, 16, 26, 28, 34, 56, 68, 72, 73, 75, 209, 210, 211, 212, 214, 215, 217, 218, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 616, 617, 618, 619, 621, 625, 633, 636, 638, 639, 640, 641, 645, 649, 650, 652, 656, 657, 659, 660, 661, 662], "space": [0, 1, 6, 7, 8, 610, 612, 618, 628, 629, 632, 633, 635, 637, 641, 658, 662], "appropri": [0, 1, 3, 6, 63, 207, 208, 209, 226, 477, 594, 595, 596, 598, 601, 603, 604, 606, 609, 610, 612, 615, 617, 618, 619, 622, 624, 636, 637, 638, 639, 640, 641, 646, 650, 656, 658, 662], "ad": [0, 1, 3, 6, 7, 8, 12, 22, 28, 36, 75, 101, 116, 137, 152, 173, 196, 206, 209, 210, 215, 228, 253, 256, 265, 414, 422, 443, 455, 578, 586, 592, 593, 595, 598, 601, 603, 612, 615, 634, 635, 636, 637, 638, 639, 640, 643, 650, 656, 662], "where": [0, 1, 6, 7, 8, 11, 26, 35, 37, 67, 70, 71, 73, 207, 228, 232, 461, 473, 586, 589, 592, 593, 594, 598, 601, 604, 610, 612, 614, 615, 616, 617, 618, 619, 625, 626, 628, 630, 635, 636, 637, 638, 639, 640, 641, 642, 644, 649, 650, 652, 653, 656, 661, 662, 664], "target": [0, 1, 8, 12, 38, 210, 226, 598, 610, 616, 617, 618, 650], "local": [0, 1, 6, 8, 11, 12, 26, 207, 594, 610, 612, 613, 619, 640, 641, 644, 650, 660], "futur": [0, 1, 20, 228, 598, 609, 610, 611, 612, 614, 615, 617, 634, 635, 642, 650, 652, 663], "filenam": [0, 1, 12, 16, 75, 93, 108, 210, 401, 460, 598, 610, 612, 616, 617, 618], "correspond": [0, 1, 3, 7, 8, 74, 75, 207, 239, 547, 553, 594, 598, 601, 604, 610, 612, 651], "via": [0, 1, 3, 6, 610, 618, 641, 642], "python": [0, 2, 6, 7, 8, 20, 28, 333, 595, 610, 611, 612, 614, 615, 616, 617, 618, 619, 640, 641, 650, 662], "dictionari": [0, 1, 8, 9, 11, 15, 17, 23, 25, 26, 31, 36, 67, 71, 75, 292, 375, 548, 549, 554, 595, 609, 610, 611, 617, 618], "describ": [0, 1, 6, 7, 67, 74, 75, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 226, 228, 595, 596, 597, 598, 600, 601, 603, 604, 606, 609, 610, 611, 612, 613, 616, 617, 618, 619, 622, 627, 636, 637, 638, 639, 640, 641, 644, 649, 650, 653, 656, 658, 662], "08": [0, 617, 647, 655], "03": [0, 609], "indic": [0, 1, 7, 8, 71, 75, 228, 461, 589, 610, 613, 617, 619, 623, 644, 650], "two": [0, 1, 6, 8, 85, 95, 97, 110, 112, 141, 148, 156, 162, 167, 169, 200, 202, 209, 210, 211, 213, 214, 215, 220, 228, 257, 300, 359, 362, 417, 595, 596, 597, 598, 601, 610, 611, 612, 617, 618, 625, 626, 628, 629, 630, 635, 646, 647, 648, 650, 651, 653, 655, 660, 661, 662, 663], "all": [0, 1, 6, 7, 8, 9, 11, 21, 26, 62, 65, 67, 70, 71, 78, 82, 87, 99, 114, 135, 150, 164, 171, 194, 204, 207, 208, 211, 222, 228, 229, 236, 239, 240, 251, 272, 292, 318, 324, 330, 412, 420, 428, 453, 461, 462, 502, 586, 592, 593, 594, 598, 604, 606, 610, 611, 612, 614, 615, 616, 617, 618, 619, 621, 622, 623, 625, 626, 627, 630, 641, 644, 645, 646, 647, 648, 650, 652, 655, 657, 658, 659, 661, 662, 663], "follow": [0, 1, 5, 6, 7, 8, 42, 207, 212, 214, 226, 228, 586, 592, 593, 594, 598, 601, 604, 610, 612, 613, 616, 617, 618, 619, 622, 624, 629, 632, 633, 640, 641, 642, 644, 646, 649, 650, 651, 652, 653, 656, 657, 658, 661, 662], "notat": [0, 610], "ocean": [0, 4, 6, 7, 8, 9, 31, 72, 73, 207, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 614, 615, 616, 617, 618, 619, 636, 637, 638, 639, 640, 641, 642, 643, 644, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 660, 661, 662, 663, 664], "global_ocean": [0, 1, 6, 8, 233, 382, 385, 391, 397, 594, 600, 602, 610, 611, 612, 614, 615, 617, 618, 619, 642, 645, 646, 652, 654, 662, 663, 664], "qu240": [0, 1, 6, 550, 555, 610, 611, 612, 616, 619, 646, 662, 664], "phc": [0, 1, 6, 324, 327, 598, 610, 611, 644, 646, 650, 664], "init": [0, 1, 6, 14, 15, 17, 21, 207, 239, 240, 292, 296, 297, 300, 303, 305, 318, 321, 338, 341, 346, 351, 356, 359, 362, 382, 385, 594, 596, 600, 606, 609, 610, 611, 612, 617, 619, 646, 660, 662, 664], "onli": [0, 1, 6, 7, 8, 23, 26, 207, 208, 219, 220, 226, 461, 465, 498, 500, 502, 594, 597, 598, 604, 605, 610, 611, 615, 616, 617, 618, 619, 624, 625, 629, 632, 633, 634, 635, 637, 640, 641, 644, 647, 649, 650, 653, 656, 657, 658, 659, 661, 662], "some": [0, 1, 6, 8, 26, 208, 461, 473, 598, 604, 606, 609, 610, 611, 612, 613, 616, 617, 618, 619, 621, 629, 636, 637, 638, 639, 640, 641, 644, 645, 650, 662, 663, 664], "thei": [0, 1, 3, 6, 7, 8, 12, 28, 36, 50, 69, 211, 292, 594, 595, 598, 601, 603, 604, 610, 611, 614, 615, 616, 617, 618, 619, 622, 625, 626, 628, 630, 635, 641, 642, 644, 646, 647, 649, 650, 653, 656, 658, 661, 662, 664], "list": [0, 1, 3, 7, 11, 26, 27, 34, 35, 62, 65, 69, 70, 71, 72, 73, 74, 75, 82, 87, 99, 114, 150, 156, 164, 171, 194, 204, 208, 210, 211, 213, 215, 220, 263, 276, 279, 282, 303, 338, 346, 351, 354, 433, 479, 490, 505, 508, 519, 522, 533, 536, 549, 555, 557, 560, 595, 610, 611, 612, 614, 615, 616, 617, 618, 619, 621, 622, 626, 628, 635, 637, 640, 641, 649, 656, 657, 659, 660, 662, 663, 664], "explicitli": [0, 6, 7, 8, 598, 610, 617, 618, 619, 650, 652, 662], "initial_st": [0, 1, 6, 241, 597, 598, 605, 607, 610, 611, 616, 619, 647, 648, 650, 652, 653, 655, 656, 658, 661], "similarli": [0, 1, 6, 8, 610, 612, 616, 617, 618, 641, 646, 662], "ha": [0, 1, 6, 8, 11, 16, 21, 26, 28, 66, 70, 71, 73, 75, 77, 82, 87, 99, 114, 135, 150, 164, 171, 194, 204, 207, 208, 209, 210, 211, 212, 213, 215, 219, 220, 221, 222, 223, 224, 225, 228, 251, 272, 318, 330, 412, 420, 428, 453, 460, 594, 595, 596, 598, 601, 603, 604, 606, 609, 610, 611, 612, 614, 615, 616, 617, 618, 619, 620, 624, 625, 626, 628, 629, 630, 642, 644, 647, 648, 649, 650, 653, 655, 656, 657, 658, 659, 661, 662], "specifi": [0, 6, 8, 12, 164, 208, 214, 233, 600, 610, 612, 616, 617, 618, 619, 623, 629, 640, 649, 650, 652, 657, 659, 660, 661, 662], "suffix": [0, 71, 82, 87, 99, 114, 150, 164, 171, 194, 204, 210, 211, 213, 214, 215, 220, 610, 650], "c": [0, 1, 6, 71, 114, 123, 211, 226, 228, 610, 612, 622, 626, 636, 637, 638, 639, 640, 641, 646, 656, 657, 659, 662, 664], "number": [0, 1, 6, 8, 11, 18, 20, 21, 23, 24, 35, 39, 43, 44, 45, 46, 47, 60, 61, 64, 65, 71, 82, 87, 99, 114, 135, 150, 164, 171, 194, 204, 208, 212, 214, 230, 231, 236, 240, 251, 272, 283, 318, 330, 354, 355, 397, 412, 420, 428, 453, 460, 482, 491, 594, 595, 598, 601, 604, 606, 609, 610, 611, 614, 617, 618, 619, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 632, 633, 635, 641, 642, 644, 646, 647, 648, 649, 650, 651, 652, 653, 655, 656, 657, 658, 659, 660, 662], "setup": [0, 11, 21, 23, 26, 85, 95, 97, 110, 112, 141, 148, 156, 162, 167, 169, 200, 202, 209, 210, 211, 213, 215, 220, 397, 595, 598, 601, 603, 604, 606, 609, 611, 612, 614, 615, 616, 617, 618, 619, 649, 652, 657, 659, 660, 662, 663], "n": [0, 1, 6, 44, 51, 52, 57, 337, 345, 350, 406, 517, 531, 545, 569, 610, 637, 640, 641, 658, 660, 662], "90c": [0, 610], "91c": [0, 610], "92": [0, 610, 644, 660], "approach": [0, 1, 610, 611, 612, 613, 616, 617, 618, 642, 644, 656], "effici": [0, 1, 297, 598, 610, 650], "doe": [0, 1, 3, 8, 228, 601, 610, 615, 617, 618, 622, 641, 650, 653, 658, 660, 661], "ani": [0, 1, 6, 7, 8, 22, 70, 71, 101, 116, 137, 152, 173, 196, 206, 210, 211, 213, 215, 235, 253, 256, 265, 320, 329, 332, 387, 396, 414, 422, 443, 455, 578, 595, 596, 598, 603, 604, 610, 611, 612, 615, 616, 617, 618, 619, 622, 641, 646, 647, 650, 656, 662], "much": [0, 1, 6, 8, 208, 440, 610, 616, 617, 618, 646, 650, 653, 656, 661], "more": [0, 4, 6, 8, 26, 34, 35, 51, 70, 71, 212, 595, 596, 597, 598, 599, 601, 605, 607, 608, 609, 610, 611, 612, 614, 616, 617, 618, 621, 623, 628, 629, 631, 634, 635, 641, 642, 643, 645, 646, 650, 652, 653, 654, 658, 661, 662, 663], "verbos": [0, 6, 39, 41, 610, 616, 664], "must": [0, 1, 6, 7, 8, 11, 16, 17, 19, 72, 73, 239, 510, 524, 538, 562, 598, 610, 612, 617, 644, 650, 660, 663], "own": [0, 1, 7, 8, 11, 212, 553, 598, 610, 611, 612, 614, 616, 617, 618, 619, 649, 650, 657, 659, 660, 662, 663], "t": [0, 1, 6, 7, 8, 210, 211, 213, 215, 549, 553, 595, 596, 598, 603, 606, 610, 611, 612, 613, 616, 617, 618, 619, 622, 637, 639, 640, 641, 646, 649, 650, 657, 659, 660, 662, 663, 664], "These": [0, 1, 6, 8, 9, 11, 207, 511, 525, 539, 547, 563, 594, 595, 598, 603, 610, 611, 612, 615, 617, 619, 622, 625, 641, 646, 650, 651, 652, 656, 660, 661, 662, 663, 664], "assum": [0, 28, 239, 240, 303, 610, 617, 618, 619, 640, 642], "alwai": [0, 1, 7, 8, 36, 207, 594, 598, 610, 611, 612, 616, 617, 618, 619, 650], "free": [0, 1, 607, 616, 617, 618, 619, 642], "choos": [0, 1, 6, 611, 617, 636, 637, 638, 639, 640, 663], "between": [0, 1, 3, 6, 8, 12, 24, 44, 51, 52, 57, 61, 74, 75, 209, 228, 257, 337, 345, 350, 397, 406, 417, 517, 531, 545, 569, 586, 592, 593, 596, 597, 598, 600, 604, 605, 606, 607, 610, 611, 612, 617, 625, 626, 628, 630, 634, 635, 641, 642, 644, 647, 650, 653, 655, 656, 658], "long": [0, 1, 5, 11, 21, 65, 82, 87, 99, 114, 135, 150, 164, 171, 176, 194, 204, 208, 251, 272, 318, 330, 355, 412, 420, 428, 453, 498, 502, 572, 576, 598, 606, 609, 610, 611, 617, 622, 646, 653, 656, 662], "been": [0, 1, 6, 8, 11, 26, 28, 35, 70, 71, 73, 207, 221, 222, 223, 224, 225, 282, 490, 508, 522, 536, 560, 594, 598, 604, 610, 611, 612, 613, 615, 616, 617, 618, 619, 636, 637, 638, 639, 640, 641, 644, 647, 650, 654, 655, 662], "cached_fil": [0, 6, 9, 610], "json": [0, 6, 8, 9, 34, 610, 640], "command": [0, 1, 8, 20, 65, 67, 222, 556, 610, 611, 612, 614, 615, 616, 617, 618, 637, 640, 641, 646, 662], "line": [0, 1, 7, 8, 65, 604, 610, 611, 612, 615, 616, 617, 618, 626, 635, 656, 662], "tool": [0, 1, 6, 8, 207, 209, 210, 211, 212, 215, 228, 594, 610, 612, 615, 616, 617, 618, 619, 622, 646, 650], "avail": [0, 1, 5, 6, 8, 11, 16, 18, 21, 39, 62, 64, 65, 82, 87, 99, 114, 135, 150, 164, 171, 194, 204, 208, 236, 251, 272, 276, 318, 330, 412, 420, 428, 453, 604, 610, 611, 612, 617, 621, 625, 629, 636, 637, 638, 639, 640, 645, 647, 648, 649, 650, 656, 657, 659, 662, 664], "chrysali": [0, 1, 6, 226, 610, 617, 618, 619, 641, 662], "anvil": [0, 1, 6, 226, 610, 619, 641, 662], "machin": [0, 6, 8, 11, 26, 67, 70, 71, 73, 93, 108, 123, 182, 207, 594, 598, 610, 611, 615, 617, 618, 619, 636, 637, 638, 639, 640], "work": [0, 1, 3, 6, 8, 11, 12, 16, 19, 22, 26, 34, 35, 67, 68, 71, 101, 116, 137, 152, 173, 196, 206, 210, 211, 213, 214, 215, 220, 222, 224, 226, 235, 253, 256, 265, 320, 329, 332, 387, 396, 414, 422, 443, 455, 578, 610, 611, 612, 613, 614, 617, 618, 619, 641, 646, 649, 656, 657, 658, 659, 660, 661, 662, 663], "directori": [0, 6, 8, 11, 12, 16, 22, 26, 34, 35, 38, 67, 68, 70, 71, 72, 73, 74, 75, 91, 101, 106, 116, 137, 152, 173, 180, 196, 206, 207, 226, 235, 253, 256, 265, 320, 329, 332, 387, 396, 414, 422, 443, 455, 578, 594, 595, 598, 601, 604, 611, 612, 614, 615, 617, 618, 619, 625, 637, 640, 649, 650, 656, 657, 659, 660, 662, 663], "copi": [0, 6, 8, 12, 34, 213, 440, 617, 618, 637], "map": [0, 8, 9, 50, 51, 463, 465, 598, 612, 619, 650], "those": [0, 1, 8, 23, 26, 74, 75, 226, 598, 609, 610, 611, 612, 614, 615, 616, 617, 618, 649, 650, 653, 654, 656, 664], "exampl": [0, 1, 3, 4, 6, 7, 8, 228, 598, 610, 611, 612, 613, 614, 616, 617, 618, 619, 623, 625, 637, 644, 645, 650, 662, 663, 664], "name": [0, 1, 6, 7, 8, 9, 11, 12, 14, 15, 17, 23, 24, 25, 26, 28, 31, 35, 37, 38, 39, 43, 50, 55, 59, 60, 61, 69, 70, 71, 72, 73, 74, 75, 80, 82, 87, 91, 99, 106, 114, 123, 135, 150, 164, 171, 180, 194, 204, 233, 236, 237, 242, 251, 272, 283, 285, 289, 318, 321, 333, 336, 344, 349, 354, 355, 375, 378, 382, 385, 388, 391, 397, 402, 405, 412, 428, 441, 445, 461, 463, 465, 473, 479, 491, 550, 553, 554, 555, 556, 575, 576, 585, 595, 598, 603, 610, 611, 612, 614, 616, 617, 618, 619, 623, 625, 626, 627, 628, 630, 635, 640, 647, 650, 655, 662, 664], "culled_mesh": [0, 1, 6, 610, 617, 618], "nc": [0, 1, 6, 8, 91, 106, 180, 210, 213, 220, 228, 241, 303, 548, 553, 598, 604, 606, 609, 610, 611, 616, 617, 618, 650], "becom": [0, 1, 7, 208, 228, 375, 610, 617, 618, 624, 642], "20210730": 0, "when": [0, 1, 6, 8, 14, 15, 17, 20, 26, 27, 36, 37, 38, 39, 68, 74, 75, 156, 208, 209, 210, 211, 213, 214, 215, 220, 226, 591, 595, 598, 601, 603, 604, 606, 609, 610, 611, 612, 615, 616, 617, 618, 622, 623, 624, 625, 626, 630, 636, 637, 638, 639, 640, 644, 646, 650, 656, 662, 663], "call": [0, 1, 6, 8, 11, 20, 26, 27, 28, 42, 60, 68, 209, 210, 211, 213, 214, 215, 217, 218, 220, 226, 228, 303, 595, 598, 601, 604, 606, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 640, 641, 646, 650, 662], "default": [0, 1, 6, 7, 8, 11, 12, 14, 15, 17, 23, 24, 25, 26, 34, 51, 55, 61, 67, 69, 82, 87, 91, 93, 99, 104, 106, 108, 114, 123, 135, 150, 153, 164, 171, 180, 182, 186, 191, 194, 204, 207, 209, 210, 211, 213, 215, 217, 218, 220, 221, 222, 223, 224, 225, 233, 236, 237, 251, 272, 274, 318, 385, 405, 412, 428, 435, 441, 464, 496, 572, 576, 594, 597, 598, 604, 605, 606, 607, 608, 609, 610, 612, 615, 616, 618, 619, 624, 625, 626, 627, 628, 629, 630, 632, 633, 635, 636, 637, 638, 639, 640, 641, 644, 646, 649, 650, 656, 657, 662, 663, 664], "being": [0, 1, 8, 11, 26, 68, 71, 75, 164, 228, 598, 601, 604, 610, 611, 612, 615, 616, 644, 650, 654], "made": [0, 3, 6, 11, 16, 26, 75, 79, 193, 199, 598, 610, 611, 614, 616, 618, 630, 642, 663], "overridden": [0, 610], "contain": [0, 1, 3, 6, 7, 8, 9, 14, 17, 25, 62, 210, 211, 212, 213, 215, 228, 233, 242, 378, 391, 444, 548, 586, 592, 593, 595, 596, 598, 603, 610, 611, 612, 614, 616, 617, 618, 619, 621, 645, 650, 652, 656, 662], "210803": [0, 6], "culled_graph": [0, 1, 6, 610, 617], "info": [0, 1, 6, 8, 59, 60, 61, 239, 240, 461, 473, 598, 606, 609, 610, 617, 618], "critical_passages_mask_fin": [0, 6], "init_mode_forcing_data": [0, 6, 610], "prototyp": [0, 1], "had": [0, 226, 610, 611], "separ": [0, 1, 6, 7, 8, 143, 208, 444, 610, 617, 618, 623, 626, 628, 629, 635, 648, 649, 650, 657, 659, 660, 662], "depend": [0, 1, 6, 8, 22, 101, 116, 137, 152, 173, 196, 206, 235, 253, 256, 265, 320, 329, 332, 387, 396, 414, 422, 443, 455, 464, 578, 597, 598, 601, 610, 612, 614, 616, 617, 618, 619, 640, 641, 644, 649, 650, 651, 662, 663], "earlier": [0, 1], "turn": [0, 1, 11, 610, 613, 617], "out": [0, 1, 8, 14, 15, 17, 23, 24, 25, 66, 222, 228, 445, 460, 598, 604, 610, 611, 612, 617, 618, 619, 625, 644, 650, 655, 656, 658, 662], "veri": [0, 1, 215, 445, 601, 610, 611, 612, 617, 618, 630, 653, 656, 658, 661], "cumbersom": [0, 1], "mani": [0, 1, 6, 8, 610, 611, 612, 614, 615, 616, 617, 618, 623, 625, 627, 630, 645, 647, 649, 650, 654, 655, 657, 659], "subdirectori": [0, 1, 6, 8, 11, 12, 26, 39, 43, 50, 55, 82, 87, 91, 99, 106, 114, 135, 150, 164, 171, 180, 194, 204, 210, 233, 237, 251, 272, 318, 324, 336, 344, 349, 385, 405, 412, 428, 441, 576, 610, 611, 616, 617, 618, 650, 662, 663], "predetermin": 0, "allow": [0, 1, 3, 8, 11, 21, 36, 75, 219, 228, 598, 610, 614, 617, 618, 619, 622, 623, 641, 642, 644, 649, 650, 652, 657, 659, 663], "But": [0, 1, 226, 610, 611, 616, 617, 618, 619, 641], "did": [0, 1, 8, 75], "therefor": [0, 1, 226, 599, 610, 612, 614, 615, 617, 618, 622, 649, 650, 657, 659, 662], "propos": [0, 1, 3], "previou": [0, 6, 8, 212, 228, 356, 598, 610, 616, 618, 619, 646, 658, 662, 664], "section": [0, 1, 3, 4, 7, 8, 51, 61, 207, 209, 210, 211, 215, 228, 423, 437, 461, 463, 467, 470, 471, 472, 584, 586, 592, 593, 594, 598, 599, 604, 606, 609, 610, 612, 613, 616, 617, 618, 619, 624, 625, 626, 636, 637, 638, 639, 640, 641, 644, 649, 651, 655, 656, 657, 659, 660, 662], "far": [0, 1, 77, 586, 592, 593, 601, 611, 617, 618, 620, 656], "flexibl": [0, 8, 597, 610, 612, 615], "about": [0, 1, 6, 7, 8, 11, 610, 611, 616, 617, 618, 619, 622, 623, 637, 656, 659], "clear": [0, 1, 3, 611, 616, 618], "me": [0, 1], "how": [0, 1, 3, 6, 8, 50, 228, 604, 610, 611, 616, 617, 618, 619, 640, 641, 642, 649, 656, 657, 658, 659, 661], "achiev": [0, 46, 618, 642], "without": [0, 1, 6, 8, 12, 210, 359, 572, 598, 609, 610, 611, 612, 619, 625, 628, 629, 639, 641, 650, 656, 662], "branch": [0, 1, 3, 6, 70, 71, 73, 207, 226, 594, 610, 612, 615, 616, 617, 618, 619, 662], "04": [0, 1, 609], "boolean": [0, 8, 589], "fals": [0, 1, 8, 11, 12, 27, 34, 39, 41, 68, 69, 75, 156, 162, 164, 209, 210, 215, 230, 233, 236, 240, 441, 450, 465, 576, 604, 606, 609, 610, 617, 618, 619, 624, 625, 627, 628, 629, 632, 633, 637, 639, 641, 647, 648, 650, 655, 660], "true": [0, 1, 7, 8, 27, 37, 38, 61, 75, 221, 222, 223, 224, 225, 228, 236, 237, 240, 405, 412, 462, 465, 475, 598, 601, 610, 617, 618, 619, 624, 625, 626, 628, 629, 630, 632, 633, 635, 636, 637, 638, 639, 640, 650, 656, 657, 660, 662, 663], "usual": [0, 610, 612, 617, 662], "ignor": 0, "namelist": [0, 1, 7, 11, 14, 15, 22, 23, 24, 61, 82, 87, 99, 101, 114, 116, 137, 150, 152, 164, 171, 173, 194, 196, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 219, 220, 253, 256, 265, 288, 414, 422, 443, 455, 484, 486, 513, 527, 541, 565, 578, 594, 595, 596, 597, 598, 601, 603, 604, 605, 606, 607, 609, 611, 615, 616, 619, 625, 627, 647, 650, 653, 655, 661], "steam": 0, "also": [0, 1, 3, 6, 7, 8, 20, 36, 74, 75, 212, 219, 228, 586, 592, 593, 595, 598, 604, 606, 608, 609, 610, 611, 612, 617, 618, 619, 627, 629, 640, 641, 642, 644, 646, 647, 648, 650, 655, 656, 658, 659, 661, 662, 663], "along": [0, 1, 461, 595, 598, 601, 603, 604, 609, 610, 615, 617, 618, 642, 650, 656], "path": [0, 1, 6, 8, 11, 12, 16, 26, 34, 35, 36, 37, 38, 39, 42, 67, 70, 71, 72, 73, 74, 75, 207, 210, 239, 240, 241, 594, 610, 611, 612, 614, 617, 619, 636, 637, 638, 639, 640, 641, 650, 662, 663], "By": [0, 1, 6, 8, 207, 594, 604, 610, 617, 618, 619, 626, 647, 648, 649, 653, 655, 656, 657], "empti": [0, 36, 610, 611, 614, 617, 618], "onc": [0, 1, 8, 209, 210, 211, 213, 215, 220, 595, 598, 601, 604, 612, 619, 642, 649, 650, 656, 662], "white": [0, 635], "strip": [0, 611], "awai": [0, 3, 178, 610, 618], "accomplish": [0, 1, 6, 611, 618], "special": [0, 1, 6, 614], "_all": [0, 70, 71], "first": [0, 1, 8, 70, 71, 210, 211, 212, 213, 215, 220, 236, 595, 596, 598, 601, 603, 604, 606, 609, 610, 611, 612, 613, 616, 617, 618, 625, 626, 627, 628, 630, 635, 636, 637, 638, 639, 640, 641, 649, 650, 652, 653, 656, 660, 662], "start": [0, 1, 6, 7, 8, 276, 595, 601, 604, 610, 611, 615, 621, 630, 637, 640, 641, 642, 645, 650, 652, 656], "after": [0, 1, 7, 11, 12, 16, 56, 61, 207, 226, 444, 587, 588, 594, 598, 599, 604, 610, 616, 619, 625, 640, 650, 655, 662], "remaind": [0, 618], "append": [0, 6, 598], "conveni": [0, 1, 6, 586, 592, 593, 610, 614, 617, 618, 619, 634, 646, 650, 656, 662], "multipl": [0, 1, 6, 7, 8, 210, 211, 212, 213, 215, 220, 598, 610, 611, 616, 617, 618, 625, 626, 627, 628, 630, 635, 641, 647, 650, 655, 662], "global_converg": [0, 510, 524, 538, 542, 562, 566, 594, 602, 616, 617, 618, 645, 654, 659], "cosine_bel": [0, 479, 487, 617, 618], "qu60_mesh": 0, "qu60_init": 0, "qu90_mesh": 0, "qu90_init": 0, "qu120_mesh": 0, "qu120_init": 0, "qu150_mesh": 0, "qu150_init": 0, "qu180_mesh": 0, "qu180_init": 0, "qu210_mesh": 0, "qu210_init": 0, "qu240_mesh": 0, "qu240_init": 0, "individu": [0, 1, 8, 75, 610, 611, 617, 622, 623, 640, 641, 662, 663], "while": [0, 1, 8, 210, 211, 213, 215, 220, 595, 598, 601, 610, 613, 614, 617, 618, 625, 650, 653, 656], "singl": [0, 1, 6, 8, 599, 600, 610, 611, 614, 616, 617, 618, 623, 624, 632, 633, 634, 641, 646, 649, 651, 652, 657, 659, 660], "featur": [0, 1, 611, 614, 617, 618, 619, 646, 647, 655, 658], "too": [0, 1, 11, 21, 65, 601, 610, 611, 617, 618, 642, 649, 650, 657, 659], "broadli": [0, 611], "probabl": [0, 1, 461, 617, 618, 641], "want": [0, 1, 3, 6, 8, 28, 610, 612, 613, 616, 617, 618, 619, 628, 629, 632, 633, 635, 640, 662, 663], "cosin": [0, 282, 285, 289, 514, 528, 542, 566, 597, 605, 607, 649, 659], "bell": [0, 282, 285, 289, 514, 528, 542, 566, 597, 605, 607, 649, 659], "abov": [0, 1, 6, 7, 8, 228, 236, 440, 461, 598, 604, 610, 611, 612, 617, 618, 619, 628, 635, 649, 650, 652, 656, 657, 662, 664], "modul": [0, 1, 5, 6, 14, 17, 25, 42, 221, 222, 223, 224, 225, 226, 228, 598, 610, 613, 614, 615, 616, 617, 618, 619, 636, 637, 638, 639, 640, 641, 662], "take": [0, 1, 6, 7, 8, 36, 208, 210, 598, 610, 612, 615, 616, 617, 618, 622, 629, 632, 633, 656, 664], "dry_run": [0, 6, 34], "doesn": [0, 1, 8, 210, 211, 213, 215, 595, 596, 603, 610, 611, 616, 617, 618, 641, 650], "date_str": [0, 6, 34], "let": [0, 6, 598, 612, 614, 617, 618, 619, 640], "suppli": [0, 1, 6, 7, 8, 236, 610, 612, 617, 656], "yymmdd": [0, 34, 598, 619, 650], "than": [0, 1, 6, 8, 11, 12, 21, 36, 82, 87, 99, 114, 135, 150, 164, 171, 194, 204, 226, 251, 272, 318, 330, 412, 420, 428, 453, 595, 601, 610, 611, 612, 613, 616, 617, 618, 623, 629, 632, 633, 642, 644, 647, 650, 653, 655, 656, 659, 661, 664], "todai": [0, 6, 34], "As": [0, 1, 5, 6, 8, 45, 598, 610, 611, 612, 617, 618, 619, 623, 624, 644, 650, 658, 661, 664], "state": [0, 1, 63, 176, 215, 228, 241, 595, 596, 597, 598, 599, 601, 603, 604, 605, 606, 607, 609, 617, 630, 656, 661], "To": [0, 1, 3, 6, 8, 75, 207, 210, 211, 212, 213, 215, 220, 226, 228, 594, 610, 611, 612, 616, 617, 618, 629, 636, 637, 638, 639, 640, 641, 644, 649, 657, 659, 660, 662], "produc": [0, 1, 8, 11, 16, 34, 82, 87, 99, 114, 150, 164, 171, 194, 204, 209, 210, 212, 215, 245, 257, 266, 292, 296, 297, 300, 303, 305, 318, 321, 338, 341, 346, 351, 356, 359, 362, 375, 382, 385, 397, 417, 444, 595, 596, 597, 598, 599, 601, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 617, 618, 622, 646, 648, 650, 656, 661], "mpas_cor": [0, 1, 8, 11, 26, 31, 61, 72, 73, 79, 84, 94, 109, 134, 140, 155, 166, 183, 188, 193, 199, 243, 269, 278, 291, 365, 374, 407, 425, 439, 476, 495, 504, 571, 610, 611, 617, 618], "_cached_fil": [0, 8, 610], "base": [0, 1, 6, 8, 9, 11, 12, 18, 25, 26, 31, 34, 35, 49, 54, 55, 70, 71, 72, 73, 146, 207, 211, 213, 226, 228, 233, 236, 288, 445, 486, 513, 527, 541, 565, 586, 587, 588, 589, 590, 591, 592, 593, 594, 597, 598, 600, 604, 605, 606, 609, 610, 611, 612, 614, 616, 618, 619, 628, 629, 632, 633, 635, 636, 637, 638, 639, 640, 641, 644, 650, 652, 656, 663], "alreadi": [0, 1, 5, 8, 28, 38, 460, 610, 611, 612, 617, 618, 619, 634, 635, 641, 644, 649, 650, 657, 659, 660, 662], "exist": [0, 1, 7, 8, 11, 16, 23, 38, 72, 73, 595, 610, 611, 612, 613, 616, 617, 618, 641, 650, 664], "befor": [0, 1, 6, 8, 20, 25, 209, 210, 211, 212, 215, 444, 598, 604, 610, 611, 612, 613, 616, 617, 618, 644, 649, 650, 656, 657, 659, 660, 662], "inform": [0, 1, 6, 7, 8, 11, 75, 391, 610, 612, 619, 621, 637, 645, 650, 662], "yet": [0, 1, 224, 598, 610, 611, 612, 616, 617, 618, 650], "point": [0, 1, 6, 33, 38, 207, 210, 222, 228, 236, 392, 440, 594, 610, 611, 612, 617, 618, 619, 627, 629, 632, 633, 641, 656, 662], "yesterdai": 0, "8": [0, 1, 8, 45, 300, 595, 598, 609, 610, 612, 617, 619, 635, 647, 649, 650, 652, 656, 657, 659, 661, 662], "3": [0, 1, 8, 45, 210, 211, 212, 213, 215, 220, 228, 469, 498, 500, 502, 548, 549, 572, 576, 595, 598, 603, 604, 607, 609, 610, 612, 613, 616, 617, 618, 619, 622, 624, 625, 626, 627, 628, 629, 630, 635, 640, 641, 644, 646, 647, 649, 655, 656, 657, 658, 659, 660, 661, 662], "qu60": 0, "qu90": 0, "qu120": [0, 550], "qu150": 0, "qu180": 0, "qu210": 0, "done": [0, 1, 21, 610, 617, 618, 662], "wa": [0, 1, 8, 37, 74, 75, 226, 598, 610, 611, 612, 613, 616, 617, 618, 619, 623, 644, 648, 650, 653, 662], "ocean_cached_fil": [0, 6], "graph": [0, 1, 20, 59, 60, 61, 209, 210, 211, 212, 215, 239, 240, 595, 598, 601, 603, 604, 606, 609, 610, 617, 618, 619, 650], "back": [0, 7, 212, 605, 617, 618, 627, 637, 655, 660, 662], "repo": [0, 1, 3, 6, 207, 594, 615, 617, 618], "commit": [0, 1, 611, 612], "master": [0, 7, 594, 612, 617, 618, 665], "pull": [0, 1, 7, 598, 611, 617, 618, 619, 622, 650], "request": [0, 1, 7, 60, 61, 587, 588, 598, 610, 611, 613, 617, 618, 619, 622, 649, 650, 657, 659, 660], "string": [0, 1, 6, 8, 511, 525, 539, 563, 610], "end": [0, 1, 210, 211, 213, 215, 220, 305, 308, 310, 312, 314, 316, 375, 595, 598, 601, 604, 610, 611, 612, 614, 617, 637, 648, 649], "desir": [0, 1, 8, 75, 219, 228, 598, 610, 612, 617, 618, 619, 650, 662], "lean": 0, "heavili": [0, 1], "assumpt": 0, "part": [0, 1, 4, 6, 7, 8, 11, 26, 82, 87, 99, 114, 135, 150, 164, 171, 194, 204, 208, 239, 240, 251, 272, 285, 318, 330, 370, 385, 412, 420, 428, 441, 453, 483, 498, 510, 524, 538, 562, 576, 604, 606, 609, 610, 611, 612, 615, 616, 617, 618, 622, 628, 635, 644, 650, 653], "nevertheless": 0, "were": [0, 1, 226, 461, 610, 611, 614, 616, 617, 618, 619, 639, 644], "necessari": [0, 7, 610, 617, 618, 652], "make": [0, 5, 6, 12, 13, 36, 44, 45, 47, 59, 75, 207, 221, 222, 223, 224, 225, 226, 239, 245, 257, 266, 292, 300, 359, 362, 409, 417, 586, 592, 593, 594, 595, 598, 601, 603, 604, 610, 611, 612, 614, 619, 624, 625, 626, 628, 629, 630, 635, 636, 637, 638, 639, 640, 641, 642, 647, 649, 650, 652, 653, 656, 662, 664], "symlink": [0, 1, 6, 11, 12, 440, 598, 611, 612, 617, 618, 650], "locat": [0, 1, 6, 8, 26, 70, 71, 73, 207, 228, 239, 378, 391, 461, 594, 600, 601, 604, 605, 610, 612, 614, 617, 619, 636, 637, 638, 639, 640, 641, 644, 647, 649, 652, 655, 657, 662], "uncach": [0, 34], "group": [0, 8, 9, 10, 11, 26, 31, 32, 79, 80, 84, 85, 94, 95, 97, 104, 109, 110, 112, 119, 124, 129, 134, 140, 141, 143, 148, 153, 155, 156, 160, 162, 166, 167, 169, 176, 178, 183, 186, 188, 191, 193, 197, 199, 200, 202, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 228, 243, 245, 248, 251, 257, 260, 263, 266, 269, 270, 278, 279, 291, 292, 297, 300, 303, 305, 321, 324, 333, 338, 341, 346, 351, 356, 359, 362, 365, 366, 374, 382, 388, 402, 407, 409, 417, 425, 426, 428, 432, 433, 435, 439, 450, 476, 479, 487, 495, 502, 504, 505, 519, 533, 548, 550, 553, 557, 571, 572, 581, 594, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 607, 608, 609, 614, 615, 619, 621, 623, 624, 625, 626, 627, 628, 629, 630, 632, 633, 634, 635, 636, 638, 640, 643, 644, 645, 647, 648, 649, 650, 651, 652, 653, 655, 656, 657, 658, 659, 660, 661, 663, 664], "public_html": [0, 1, 636, 638], "mpas_standalonedata": [0, 1, 8, 610, 619, 636, 637, 638, 639, 640, 641], "constructor": [0, 8, 210, 595, 596, 598, 603, 617, 618], "construct": [0, 1, 78, 209, 210, 211, 212, 215, 229, 584, 586, 587, 588, 592, 593, 598, 610, 617, 618, 650], "quwisc240": [0, 1, 610, 611, 662, 664], "ssh_adjust": [0, 1, 594, 598, 610, 619, 653, 656], "ec30to60": [0, 1, 662, 664], "wc14": [0, 662, 664], "ecwisc30to60": [0, 1, 336, 662, 664], "sowisc12to60": [0, 344, 349, 610, 662, 664], "togeth": [0, 610, 614, 616, 617, 664], "performance_test": [0, 1, 610, 646, 664], "global": [0, 8, 31, 228, 233, 236, 237, 278, 279, 291, 292, 297, 300, 303, 305, 318, 321, 324, 333, 338, 341, 346, 351, 356, 359, 362, 388, 402, 479, 487, 505, 516, 519, 530, 533, 544, 557, 568, 597, 598, 600, 607, 608, 610, 615, 616, 619, 640, 650, 652, 658, 661, 662], "ran": [0, 1, 618], "successfulli": [0, 1, 208, 292], "bit": [0, 1, 156, 214, 610, 611, 614, 618, 622, 624, 625, 626, 628, 629, 630, 635, 642, 646, 647, 653, 662], "nightli": [0, 1, 3, 612, 650, 654, 662, 664], "cosine_bell_cached_init": [0, 662, 664], "fro": 0, "resolut": [0, 8, 43, 46, 50, 51, 85, 89, 91, 95, 97, 99, 102, 104, 106, 119, 143, 145, 156, 158, 162, 164, 184, 189, 210, 211, 213, 214, 215, 217, 218, 220, 237, 244, 245, 248, 251, 254, 257, 260, 263, 266, 270, 272, 279, 282, 283, 285, 336, 344, 349, 405, 408, 409, 412, 415, 417, 432, 433, 441, 446, 448, 450, 453, 456, 458, 477, 479, 483, 490, 491, 493, 496, 498, 500, 502, 505, 508, 510, 514, 516, 519, 522, 524, 528, 530, 533, 536, 538, 542, 544, 549, 550, 554, 555, 557, 560, 562, 566, 568, 572, 575, 576, 579, 581, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 607, 608, 609, 610, 616, 619, 622, 624, 625, 626, 627, 628, 629, 630, 632, 633, 634, 635, 642, 647, 648, 650, 651, 652, 653, 655, 656, 658, 661, 663], "remain": [0, 1, 444, 604, 616, 626, 642, 653, 656], "mention": [0, 1, 611], "40c": 0, "41c": 0, "42": [0, 1], "60c": 0, "61c": 0, "62": 0, "80c": 0, "81c": 0, "82": 0, "85c": 0, "86c": 0, "87": 0, "95c": 0, "96c": 0, "97": 0, "sere": 0, "expect": [0, 1, 3, 8, 156, 214, 228, 303, 511, 525, 539, 563, 598, 604, 610, 612, 615, 617, 622, 642, 643, 646, 650, 654, 659, 661], "basenam": 0, "extens": [0, 462, 618, 619], "altern": [0, 1, 6, 8, 617, 662], "No": [0, 1, 8, 615], "perform": [0, 1, 3, 6, 8, 19, 20, 22, 30, 43, 74, 75, 81, 82, 85, 87, 95, 97, 99, 101, 104, 110, 112, 114, 116, 119, 135, 137, 141, 148, 150, 152, 153, 156, 157, 162, 163, 164, 167, 169, 171, 173, 176, 194, 196, 200, 202, 204, 206, 209, 210, 211, 213, 214, 215, 219, 220, 228, 231, 248, 251, 253, 256, 260, 265, 272, 278, 285, 291, 292, 300, 303, 305, 318, 338, 341, 346, 351, 356, 359, 362, 366, 370, 382, 385, 409, 412, 414, 422, 428, 432, 441, 443, 455, 483, 498, 502, 503, 510, 524, 538, 562, 572, 576, 578, 581, 594, 595, 596, 597, 598, 601, 603, 604, 605, 607, 608, 609, 610, 614, 615, 616, 617, 618, 619, 625, 626, 627, 628, 630, 635, 641, 642, 646, 647, 648, 650, 652, 653, 655, 658, 659, 660, 661, 664], "ensur": [0, 1, 3, 8, 36, 209, 210, 211, 213, 214, 215, 220, 595, 598, 601, 606, 609, 610, 611, 612, 618, 622, 646, 650], "don": [0, 1, 7, 8, 610, 611, 612, 616, 617, 618, 639, 640, 650, 663], "forese": 0, "problem": [0, 1, 8, 208, 610, 613, 617, 622, 646], "requr": 0, "howev": [0, 1, 610, 616, 642, 650], "relax": [0, 625], "outlin": 0, "author": [1, 598, 619, 650, 652], "2020": [1, 599, 650, 651, 656], "11": [1, 8, 45, 240, 658, 661], "16": [1, 598, 610, 617, 618, 619, 629, 635, 650, 657, 658, 659, 662], "infrastructur": [1, 611, 650], "serv": [1, 70, 71, 72, 73, 596, 610, 617], "u": [1, 598, 610, 618, 640, 641, 650], "well": [1, 3, 8, 209, 210, 211, 213, 215, 220, 228, 276, 305, 589, 595, 596, 598, 601, 603, 604, 609, 610, 614, 616, 617, 618, 619, 622, 623, 646, 648, 662, 663], "sever": [1, 8, 211, 212, 215, 466, 474, 598, 600, 606, 609, 610, 611, 612, 614, 617, 618, 622, 645, 646, 650, 662, 664], "shortcom": 1, "emerg": 1, "over": [1, 6, 8, 36, 156, 226, 445, 552, 604, 610, 611, 615, 616, 617, 618, 623, 641, 642, 644, 647, 650, 652, 653, 655, 656, 658, 659, 661], "year": [1, 209, 210, 211, 212, 215, 219, 498, 502, 572, 576, 598, 615, 625, 626, 627, 628, 629, 630, 634, 650, 656, 658], "found": [1, 8, 598, 610, 611, 612, 615, 617, 618, 619, 641, 642], "current": [1, 3, 6, 8, 11, 21, 74, 75, 207, 226, 228, 594, 597, 598, 604, 605, 606, 609, 610, 611, 612, 614, 615, 617, 618, 619, 622, 623, 629, 641, 642, 644, 645, 646, 647, 649, 650, 652, 653, 656, 657, 661, 662, 663, 664], "system": [1, 5, 6, 11, 21, 63, 65, 66, 82, 87, 99, 114, 135, 150, 164, 171, 194, 204, 221, 222, 223, 224, 225, 226, 251, 272, 318, 330, 412, 420, 428, 453, 610, 613, 615, 617, 618, 619, 636, 637, 638, 639, 640, 641, 652, 662], "xml": [1, 610, 611, 614, 615, 618], "pars": [1, 8, 14, 15, 17, 610, 611, 616], "script": [1, 5, 6, 8, 33, 72, 209, 210, 211, 212, 215, 226, 611, 614, 615, 618, 619, 625, 637, 641, 656], "stream": [1, 7, 8, 11, 17, 22, 25, 61, 82, 87, 99, 101, 114, 116, 137, 150, 152, 164, 171, 173, 194, 196, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 219, 220, 253, 256, 265, 414, 422, 443, 455, 578, 594, 595, 596, 598, 601, 603, 604, 606, 609, 611, 615, 619, 650], "intuit": 1, "second": [1, 8, 82, 87, 99, 114, 150, 164, 171, 194, 204, 609, 610, 611, 617, 618, 623, 625, 626, 628, 630, 635, 647, 648, 650, 653, 656, 659, 660], "lend": 1, "themselv": [1, 604, 610, 611, 615, 618, 650], "reus": [1, 610, 611, 615, 617, 618], "lead": [1, 228, 656], "config": [1, 6, 7, 11, 25, 26, 28, 37, 49, 51, 54, 60, 61, 63, 64, 65, 66, 67, 70, 71, 73, 75, 93, 108, 123, 182, 207, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 226, 228, 242, 244, 280, 288, 318, 333, 354, 355, 408, 480, 484, 486, 488, 506, 513, 520, 527, 534, 541, 558, 565, 575, 584, 586, 587, 588, 592, 593, 594, 595, 596, 597, 598, 599, 601, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 615, 616, 634, 644, 662, 663], "third": [1, 618, 623, 656], "edit": [1, 6, 7, 75, 612, 617, 618, 650, 656, 662], "step": [1, 2, 6, 7, 8, 26, 27, 29, 34, 43, 48, 50, 53, 55, 56, 60, 61, 64, 65, 67, 68, 69, 70, 71, 75, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 96, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 111, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 126, 127, 128, 131, 132, 133, 135, 136, 137, 138, 139, 142, 144, 145, 147, 149, 150, 151, 152, 154, 158, 159, 161, 164, 165, 168, 170, 171, 172, 173, 174, 175, 177, 179, 180, 181, 182, 184, 185, 187, 189, 190, 192, 194, 195, 196, 198, 201, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 228, 231, 233, 234, 236, 237, 238, 247, 250, 251, 252, 253, 254, 255, 256, 259, 262, 263, 264, 265, 268, 272, 273, 274, 275, 276, 277, 281, 282, 284, 285, 286, 287, 289, 290, 294, 299, 302, 303, 304, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 323, 326, 327, 328, 330, 331, 335, 336, 338, 340, 343, 344, 346, 348, 349, 351, 353, 354, 358, 361, 364, 368, 369, 370, 371, 372, 373, 375, 379, 384, 385, 386, 390, 391, 393, 394, 395, 397, 400, 404, 405, 411, 412, 413, 414, 415, 416, 419, 420, 421, 422, 423, 424, 428, 429, 430, 431, 433, 434, 437, 438, 441, 442, 443, 446, 447, 448, 449, 452, 453, 454, 455, 456, 457, 458, 459, 477, 478, 481, 482, 483, 484, 485, 489, 490, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 507, 508, 509, 510, 511, 512, 514, 515, 516, 518, 521, 522, 523, 524, 525, 526, 528, 529, 530, 532, 535, 536, 537, 538, 539, 540, 542, 543, 544, 546, 548, 559, 560, 561, 562, 563, 564, 566, 567, 568, 570, 574, 576, 577, 578, 579, 580, 583, 595, 596, 597, 599, 600, 601, 603, 604, 605, 606, 607, 608, 609, 611, 612, 614, 615, 619, 623, 624, 625, 626, 627, 628, 629, 630, 632, 633, 635, 640, 644, 647, 648, 653, 655, 656, 658, 660, 661, 663, 664], "fourth": [1, 618, 628], "easili": [1, 617], "constrain": [1, 18, 228, 240], "us": [1, 6, 7, 8, 11, 12, 20, 21, 23, 25, 26, 29, 34, 37, 51, 59, 60, 63, 65, 68, 75, 79, 82, 86, 87, 95, 96, 97, 98, 99, 104, 105, 110, 111, 112, 113, 114, 120, 126, 131, 135, 141, 142, 144, 148, 149, 150, 153, 154, 156, 161, 162, 164, 168, 170, 171, 174, 177, 179, 187, 192, 193, 194, 198, 199, 201, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 226, 228, 233, 236, 240, 247, 250, 251, 259, 262, 268, 272, 276, 279, 282, 292, 297, 300, 303, 305, 307, 308, 310, 312, 314, 316, 318, 321, 324, 327, 330, 335, 338, 341, 346, 351, 356, 359, 362, 388, 391, 394, 397, 404, 411, 412, 419, 420, 428, 440, 444, 453, 463, 465, 498, 500, 502, 511, 525, 539, 549, 556, 563, 574, 583, 584, 586, 587, 588, 592, 593, 594, 595, 596, 598, 600, 601, 603, 604, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 622, 623, 624, 625, 626, 628, 629, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 644, 646, 647, 648, 649, 650, 652, 653, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664], "hard": [1, 596, 611, 617, 618, 642], "fifth": [1, 658], "better": [1, 8, 226, 616], "autom": [1, 212, 615], "sixth": 1, "impos": 1, "test_group": [1, 8, 9, 10, 11, 26, 80, 85, 95, 97, 104, 110, 112, 119, 124, 129, 141, 143, 148, 153, 156, 160, 162, 167, 169, 176, 178, 186, 191, 197, 200, 202, 245, 248, 257, 260, 266, 270, 279, 292, 297, 300, 303, 305, 321, 324, 333, 338, 341, 346, 351, 356, 359, 362, 366, 382, 388, 402, 409, 417, 426, 432, 435, 450, 479, 487, 502, 505, 519, 533, 557, 572, 581, 598, 610, 616, 617, 618], "resoltuion": 1, "test_cas": [1, 6, 8, 11, 31, 32, 43, 50, 55, 67, 70, 71, 74, 75, 82, 87, 89, 91, 99, 102, 106, 114, 117, 121, 127, 132, 135, 138, 145, 150, 158, 164, 171, 174, 180, 184, 189, 194, 204, 209, 210, 215, 233, 237, 251, 254, 263, 272, 274, 276, 282, 285, 289, 296, 308, 310, 312, 314, 316, 318, 327, 330, 336, 344, 349, 368, 370, 372, 375, 385, 391, 394, 397, 405, 412, 415, 420, 423, 428, 430, 433, 437, 441, 446, 448, 453, 456, 458, 477, 483, 490, 493, 496, 498, 500, 508, 510, 514, 516, 522, 524, 528, 530, 536, 538, 542, 544, 560, 562, 566, 568, 576, 579, 595, 598, 603, 610, 616, 617, 618, 619, 656, 662], "rigid": [1, 659], "applic": [1, 611, 650], "final": [1, 3, 7, 209, 210, 212, 215, 228, 236, 303, 548, 595, 598, 601, 603, 604, 606, 609, 610, 616, 617, 618, 623, 627, 629, 650, 652, 656, 660], "help": [1, 6, 610, 615, 617, 618, 621, 641, 645, 650], "either": [1, 6, 7, 8, 45, 210, 222, 601, 610, 612, 614, 616, 617, 618, 619, 625, 626, 628, 629, 644, 650, 662], "interest": [1, 617, 618, 650, 656], "address": [1, 619], "hope": [1, 611], "significantli": [1, 8, 609, 623, 644, 650, 656], "easier": [1, 610, 611, 612, 617, 618, 619, 650, 662, 664], "12": [1, 8, 45, 475, 596, 598, 599, 607, 609, 625, 637, 650, 659], "luke": 1, "van": 1, "roekel": 1, "written": [1, 7, 8, 11, 26, 461, 473, 598, 610, 617, 659], "primarili": [1, 622], "model": [1, 3, 6, 11, 12, 13, 14, 15, 17, 70, 71, 73, 82, 87, 99, 114, 150, 164, 171, 178, 194, 204, 207, 209, 210, 211, 212, 213, 215, 220, 221, 222, 223, 224, 225, 226, 228, 231, 245, 257, 260, 266, 365, 366, 368, 370, 372, 417, 425, 432, 594, 595, 598, 599, 600, 603, 612, 613, 614, 615, 617, 618, 619, 621, 622, 624, 625, 627, 628, 629, 630, 631, 632, 633, 635, 636, 637, 638, 639, 640, 641, 642, 645, 646, 647, 648, 650, 651, 652, 653, 655, 656, 658, 661, 662], "get": [1, 7, 8, 11, 14, 15, 17, 26, 27, 45, 60, 62, 64, 68, 226, 286, 318, 354, 355, 484, 610, 611, 612, 614, 619, 644, 662], "direct": [1, 8, 595, 596, 601, 603, 609, 610, 617, 640, 647, 653, 655, 661], "common": [1, 7, 8, 20, 26, 31, 210, 212, 213, 219, 220, 595, 596, 601, 603, 604, 610, 611, 613, 614, 619, 662, 663, 664], "languag": [1, 556, 640], "rather": [1, 3, 8, 11, 12, 36, 226, 595, 601, 610, 613, 617, 618, 642, 644, 650], "custom": [1, 6, 8, 35, 36, 37, 70, 71, 73, 207, 222, 594, 610, 616, 618, 619, 640, 662], "tag": [1, 610, 615], "importantli": 1, "possibl": [1, 3, 8, 46, 228, 598, 601, 610, 611, 616, 617, 618, 644, 650, 652], "balanc": [1, 598, 601, 604, 650, 653, 656], "readabl": [1, 611, 618], "reusabl": 1, "risk": [1, 612, 653], "redesign": 1, "difficult": [1, 226, 610, 611, 641, 642], "contribut": [1, 611], "go": [1, 8, 610, 611, 612, 616, 617, 618, 640, 650], "best": [1, 610], "reusibl": 1, "In": [1, 3, 7, 8, 11, 210, 212, 228, 297, 597, 598, 606, 610, 612, 615, 616, 617, 618, 619, 622, 634, 635, 641, 642, 644, 650, 652, 653, 658, 659, 660, 661, 662, 663, 664], "extern": [1, 11, 207, 594, 610, 611, 619, 621, 645], "often": [1, 11, 610, 611, 614, 616, 617, 619, 663, 664], "mpas_tool": [1, 8, 209, 210, 211, 212, 215, 228, 595, 596, 600, 601, 603, 604, 607, 608, 609, 610, 611, 617, 618, 650], "outsid": [1, 143, 610, 629, 632, 633, 656], "prefer": [1, 3, 610, 617, 618, 619, 622], "itself": [1, 7, 8, 11, 219, 610, 616, 617, 618, 662], "attempt": [1, 226, 615, 641, 642], "led": [1, 611], "frequent": [1, 207, 594], "unintend": 1, "consequ": 1, "link": [1, 3, 7, 8, 12, 13, 38, 226, 556, 598, 601, 604, 610, 611, 612, 617, 618, 621, 641, 645, 650, 662], "chang": [1, 6, 8, 25, 50, 207, 228, 594, 604, 610, 611, 612, 614, 616, 617, 618, 619, 622, 626, 627, 637, 640, 642, 644, 646, 650, 653, 656, 658, 659, 661, 662, 664], "one": [1, 3, 6, 7, 8, 12, 24, 26, 34, 35, 38, 61, 70, 71, 73, 75, 85, 95, 97, 110, 112, 141, 148, 156, 162, 167, 169, 202, 209, 210, 211, 213, 214, 215, 220, 231, 244, 257, 292, 359, 417, 594, 595, 596, 598, 601, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 622, 623, 628, 635, 640, 641, 642, 644, 648, 649, 650, 652, 653, 656, 657, 658, 659, 660, 662, 663, 664], "sophist": [1, 610], "method": [1, 8, 9, 11, 19, 20, 26, 27, 28, 29, 30, 31, 36, 42, 43, 47, 50, 51, 52, 55, 56, 78, 79, 80, 81, 82, 84, 85, 86, 87, 89, 91, 94, 95, 96, 97, 98, 99, 102, 104, 105, 106, 109, 110, 111, 112, 113, 114, 117, 119, 120, 121, 124, 126, 127, 129, 131, 132, 134, 135, 138, 140, 141, 142, 143, 144, 145, 148, 149, 150, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 174, 176, 177, 178, 179, 180, 183, 184, 186, 187, 188, 189, 191, 192, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 208, 228, 229, 233, 237, 240, 243, 245, 247, 248, 250, 251, 254, 257, 259, 260, 262, 263, 266, 268, 269, 270, 272, 274, 276, 278, 279, 282, 285, 289, 291, 292, 297, 300, 303, 305, 307, 308, 310, 312, 314, 316, 318, 321, 324, 327, 330, 333, 335, 336, 338, 341, 344, 346, 349, 351, 356, 359, 362, 365, 366, 368, 370, 372, 374, 375, 382, 385, 388, 391, 394, 397, 402, 404, 405, 407, 409, 411, 412, 415, 417, 419, 420, 423, 425, 426, 428, 430, 432, 433, 435, 437, 439, 441, 446, 448, 450, 453, 456, 458, 461, 473, 476, 477, 479, 483, 487, 490, 493, 495, 496, 498, 500, 502, 503, 504, 505, 508, 510, 514, 516, 519, 522, 524, 528, 530, 533, 536, 538, 542, 544, 557, 560, 562, 566, 568, 571, 572, 574, 576, 579, 581, 583, 598, 600, 610, 611, 616, 623, 650], "beyond": [1, 606, 624], "isol": 1, "read": [1, 8, 9, 11, 14, 17, 26, 376, 377, 378, 445, 556, 598, 610, 611, 617, 618, 652, 660], "larg": [1, 8, 228, 598, 601, 604, 610, 624, 636, 642, 650, 653, 659], "unavail": 1, "files_for_e3sm": [1, 8, 610, 619, 646], "dedic": 1, "again": [1, 6, 224, 228, 610, 612, 613, 616, 617, 618, 650, 662], "from": [1, 2, 3, 6, 7, 8, 9, 11, 12, 14, 17, 26, 28, 34, 35, 37, 38, 59, 60, 61, 65, 69, 71, 74, 75, 91, 93, 106, 108, 121, 123, 127, 132, 135, 174, 178, 180, 182, 209, 210, 211, 212, 213, 215, 219, 220, 226, 228, 232, 233, 236, 251, 282, 303, 305, 308, 310, 312, 314, 316, 318, 330, 338, 341, 346, 351, 354, 355, 376, 409, 420, 428, 440, 444, 445, 448, 453, 456, 458, 461, 466, 473, 484, 490, 496, 508, 522, 536, 548, 549, 550, 556, 560, 590, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 607, 609, 611, 613, 614, 615, 616, 617, 618, 619, 622, 625, 626, 627, 628, 629, 630, 632, 633, 635, 636, 637, 638, 639, 640, 642, 644, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664], "awkward": [1, 617], "involv": [1, 8, 75, 598, 610, 614, 660], "pio": [1, 24, 61, 595, 598, 601, 603, 604, 606, 609, 610], "task": [1, 8, 11, 20, 21, 24, 60, 61, 65, 82, 87, 99, 114, 135, 150, 164, 171, 194, 204, 251, 272, 318, 330, 412, 420, 428, 453, 610, 611, 617, 618, 636, 637, 638, 639, 640, 641, 652], "node": [1, 8, 11, 21, 23, 24, 61, 63, 64, 65, 226, 611, 612, 619, 636, 637, 638, 639, 640, 641, 650, 662], "exacerb": 1, "even": [1, 8, 12, 36, 226, 610, 611, 612, 617, 618, 619, 641, 650], "processor": [1, 156, 598, 610, 618, 622, 624, 625, 647, 649, 657, 659], "overrid": [1, 6, 8, 19, 20, 22, 28, 30, 36, 47, 50, 51, 52, 81, 101, 116, 137, 152, 157, 163, 173, 196, 206, 253, 256, 265, 414, 422, 443, 455, 503, 578, 610, 611, 618, 619, 662], "stride": [1, 24, 61, 610], "updat": [1, 6, 7, 11, 14, 20, 21, 23, 25, 207, 212, 224, 228, 239, 440, 482, 484, 594, 595, 598, 600, 601, 603, 604, 606, 609, 613, 615, 616, 617, 650, 652, 656, 662], "automat": [1, 7, 8, 598, 610, 611, 612, 617, 618, 619, 636, 637, 638, 639, 640, 641, 650, 662], "accommod": [1, 11, 21, 65, 604, 617], "dataset": [1, 230, 324, 327, 444, 461, 473, 548, 553, 586, 592, 593, 610, 617, 618, 650], "load": [1, 226, 239, 612, 617, 618, 619, 636, 637, 638, 639, 640, 641, 660, 662], "conda": [1, 5, 6, 8, 67, 207, 221, 222, 223, 224, 225, 226, 594, 598, 610, 611, 615, 617, 618, 619, 636, 637, 638, 639, 640], "environ": [1, 5, 6, 63, 207, 221, 222, 223, 224, 225, 226, 594, 598, 610, 611, 615, 617, 618, 619, 636, 637, 638, 639, 640, 641, 650], "per": [1, 8, 11, 21, 24, 61, 65, 362, 610, 619, 636, 637, 638, 639, 640, 641, 647, 648, 649, 656, 657, 659, 662], "advantag": [1, 8, 226, 598, 611, 641], "aspect": [1, 648], "unnecessarili": 1, "redund": [1, 6, 586, 592, 593], "converg": [1, 79, 80, 82, 208, 477, 479, 483, 490, 493, 547, 549, 550, 555, 597, 605, 607, 608, 610, 615, 616, 622, 623, 649, 657, 660], "sort": [1, 610], "anoth": [1, 3, 6, 7, 8, 12, 74, 75, 212, 231, 594, 596, 601, 604, 610, 611, 612, 614, 616, 617, 618, 619, 625, 627, 630, 642, 647, 650, 653, 655, 656, 662, 663, 664], "properti": [1, 8, 610, 618, 641, 649, 657], "besid": [1, 618], "uniqu": [1, 610, 611, 616, 617, 618], "overwrit": [1, 38, 462, 475], "activ": [1, 226, 495, 598, 606, 640, 641, 650, 656, 658, 662], "build": [1, 6, 8, 47, 52, 207, 213, 219, 220, 221, 222, 223, 224, 225, 226, 594, 597, 607, 608, 610, 611, 613, 615, 617, 618, 619, 625, 628, 635, 636, 637, 638, 639, 640, 641], "queu": [1, 63], "10": [1, 8, 45, 210, 211, 212, 214, 215, 217, 228, 240, 594, 595, 598, 599, 601, 603, 604, 609, 610, 617, 618, 619, 625, 626, 628, 629, 630, 632, 633, 635, 644, 647, 648, 650, 652, 653, 655, 656, 661, 663], "matt": 1, "hoffman": [1, 621], "longer": [1, 257, 417, 595, 598, 603, 604, 617, 626, 647, 649, 650, 653, 656, 657, 658, 661, 664], "term": [1, 11, 614, 615, 616, 617, 618], "ot": [1, 7, 617], "add": [1, 3, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 27, 28, 32, 49, 54, 58, 213, 228, 236, 240, 354, 598, 610, 611, 612, 614, 616, 617, 618, 619, 625, 641, 649, 650, 656, 657, 659, 660, 662], "reduc": [1, 228, 610, 642, 653], "wall": [1, 661, 662], "clock": [1, 662], "differ": [1, 8, 36, 47, 52, 75, 200, 207, 208, 210, 211, 213, 214, 215, 220, 226, 251, 260, 428, 432, 549, 594, 595, 596, 598, 600, 603, 609, 610, 611, 612, 614, 616, 617, 618, 619, 622, 623, 624, 629, 634, 635, 640, 646, 647, 648, 649, 650, 655, 656, 657, 658, 659, 660, 661], "viscos": [1, 251, 260, 263, 366, 428, 432, 433, 595, 599, 601, 603, 610, 611, 617, 618, 647, 651, 655], "baroclin": [1, 31, 243, 244, 245, 248, 251, 254, 257, 260, 263, 266, 327, 595, 610, 617, 618, 647], "channel": [1, 31, 243, 245, 248, 251, 254, 257, 260, 263, 266, 327, 596, 610, 613, 617, 618, 641, 647, 648, 662], "rpe": [1, 260, 263, 432, 433, 610, 617, 647, 655], "full": [1, 8, 11, 69, 97, 112, 148, 162, 169, 202, 214, 465, 587, 588, 595, 597, 598, 601, 605, 610, 612, 615, 617, 618, 625, 626, 628, 629, 630, 635, 641, 644, 647, 649, 650, 652, 653, 655, 656, 657, 659, 661, 662], "choic": [1, 598, 616, 623], "mind": [1, 3, 6], "addit": [1, 3, 7, 8, 11, 23, 236, 598, 610, 611, 612, 617, 618, 621, 622, 627, 629, 634, 635, 646, 650, 656], "minim": [1, 625], "modif": [1, 3, 7, 212, 610, 618], "particularli": [1, 8, 610, 613, 616, 617, 650, 653], "mark": [1, 612], "petersen": [1, 612, 617, 647, 655], "build_base_mesh": 1, "py": [1, 8, 42, 209, 210, 211, 212, 215, 226, 610, 611, 612, 614, 615, 616, 617, 618, 619], "complex": [1, 8, 51, 610, 611, 618, 642], "dx": 1, "min": [1, 610, 617, 628, 629, 632, 633, 635, 647, 653, 655, 661], "max": [1, 610, 616, 617, 628, 629, 632, 633, 635, 649], "linear": [1, 240, 604, 609, 617, 647, 648, 655, 658, 659, 661], "log": [1, 11, 26, 60, 65, 75, 93, 108, 123, 182, 236, 240, 610, 612, 615, 618, 659, 660, 662], "someth": [1, 6, 7, 612], "fundament": [1, 610], "soft": [1, 636, 638, 662], "add_initial_condit": 1, "quickli": [1, 8, 624, 653], "iter": [1, 228, 231, 330, 409, 420, 453, 594, 601, 604, 619, 642, 650, 653, 656], "until": [1, 176, 610, 611], "peopl": [1, 619], "workflow": [1, 610, 612], "ideal": [1, 11, 21, 65, 82, 87, 99, 114, 135, 150, 164, 171, 194, 204, 251, 272, 318, 330, 412, 420, 428, 453, 609, 610, 611, 615, 616, 617, 619, 634, 642, 656, 658, 661, 663], "possibli": [1, 8, 212, 610, 612, 617, 618], "cach": [1, 2, 9, 11, 12, 70, 71, 615, 619, 636, 637, 638, 639, 640, 641, 662, 664], "version": [1, 6, 8, 36, 67, 74, 75, 207, 594, 595, 598, 604, 610, 611, 612, 614, 617, 618, 619, 625, 628, 629, 634, 635, 640, 641, 645, 647, 648, 650, 655, 658, 661, 662], "submit": [1, 641], "job": [1, 63, 226, 615, 622, 636, 637, 638, 639, 640, 656], "13": [1, 8, 45, 617, 647, 650, 655], "write": [1, 8, 14, 15, 17, 23, 24, 25, 228, 242, 401, 445, 585, 598, 599, 604, 609, 610, 612, 617, 618], "function": [1, 7, 8, 22, 44, 51, 60, 101, 116, 137, 146, 152, 156, 173, 196, 206, 209, 210, 211, 212, 213, 215, 220, 226, 228, 253, 256, 265, 295, 381, 414, 422, 443, 455, 511, 525, 539, 547, 548, 552, 563, 578, 598, 600, 604, 608, 610, 611, 615, 616, 617, 618, 628, 629, 632, 633, 635, 646, 649, 650, 652, 655, 657, 659, 660, 661, 663], "class": [1, 8, 9, 11, 19, 26, 31, 36, 42, 43, 50, 55, 78, 79, 80, 82, 84, 85, 87, 89, 91, 94, 95, 97, 99, 102, 104, 106, 109, 110, 112, 114, 117, 119, 121, 124, 127, 129, 132, 134, 135, 138, 140, 141, 143, 145, 148, 150, 153, 155, 156, 158, 160, 162, 164, 166, 167, 169, 171, 174, 176, 178, 180, 183, 184, 186, 188, 189, 191, 193, 194, 197, 199, 200, 202, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 228, 229, 233, 237, 243, 245, 248, 251, 254, 257, 260, 263, 266, 269, 270, 272, 274, 276, 278, 279, 282, 285, 289, 291, 292, 297, 300, 303, 305, 308, 310, 312, 314, 316, 318, 321, 324, 327, 330, 333, 336, 338, 341, 344, 346, 349, 351, 356, 359, 362, 365, 366, 368, 370, 372, 374, 375, 382, 385, 388, 391, 394, 397, 402, 405, 407, 409, 412, 415, 417, 420, 423, 425, 426, 428, 430, 432, 433, 435, 437, 439, 441, 446, 448, 450, 453, 456, 458, 461, 473, 476, 477, 479, 483, 487, 490, 493, 495, 496, 498, 500, 502, 504, 505, 508, 510, 514, 516, 519, 522, 524, 528, 530, 533, 536, 538, 542, 544, 557, 560, 562, 566, 568, 571, 572, 576, 579, 581, 594, 595, 596, 597, 599, 600, 601, 603, 604, 605, 606, 607, 608, 609, 610, 616, 617, 618], "larger": [1, 208, 629, 632, 633], "descend": [1, 228, 598, 610, 611, 617, 618], "testcas": [1, 6, 8, 11, 32, 43, 50, 55, 70, 71, 74, 75, 82, 87, 89, 91, 99, 102, 106, 114, 117, 127, 132, 135, 138, 145, 150, 158, 164, 171, 174, 180, 184, 189, 194, 204, 237, 251, 254, 263, 272, 276, 281, 287, 290, 294, 296, 299, 302, 304, 309, 311, 313, 315, 317, 318, 319, 323, 326, 328, 331, 336, 340, 343, 344, 348, 349, 353, 358, 361, 364, 384, 386, 390, 393, 395, 405, 412, 415, 420, 423, 428, 430, 433, 437, 441, 446, 448, 453, 456, 458, 477, 481, 485, 489, 490, 493, 498, 500, 507, 512, 515, 521, 526, 529, 535, 540, 543, 559, 564, 567, 576, 579, 598, 609, 611, 616, 617, 618, 619, 647, 650, 652, 653, 655, 658, 661, 662], "equival": [1, 610, 612, 618, 636], "config_driv": [1, 618], "config_": [1, 618], "collect": [1, 7, 8, 31, 62, 78, 229, 549, 610, 614, 617, 618, 622], "struck": 1, "improv": [1, 598, 650], "jinja2": [1, 17, 25, 598, 610], "templat": [1, 2, 17, 25, 208, 228, 598, 604, 615, 618, 619], "manipul": [1, 611], "usr": [1, 42, 222, 637, 641, 662], "bin": [1, 612, 640, 662], "env": [1, 612, 640], "pickl": [1, 6, 8, 662], "configpars": [1, 8, 65, 610, 616, 617], "loggingcontext": [1, 8], "def": [1, 3, 7, 8, 598, 610, 611, 616, 617, 618], "main": [1, 4, 8, 19, 226, 598, 610, 611, 612, 617, 618, 622, 646, 650, 663], "open": [1, 5, 236, 445, 604, 617, 618, 650, 656], "test_case_": 1, "rb": 1, "handl": [1, 8, 208, 444, 604, 610, 617, 618, 641, 649, 657, 659], "steps_to_run": [1, 6, 8, 26, 69, 75, 610, 616, 619], "new_step_log_fil": [1, 26], "interpol": [1, 230, 233, 397, 398, 399, 444, 448, 496, 600, 604, 616, 617, 619, 653, 656, 660], "extendedinterpol": [1, 616], "config_filenam": [1, 11, 26, 610], "stdout": [1, 6, 8, 11, 26, 236, 610, 618], "stderr": [1, 8, 11, 26, 610], "test_nam": 1, "replac": [1, 7, 8, 14, 15, 17, 23, 25, 26, 38, 445, 598, 610, 611, 616, 617, 618, 619, 650, 662], "_": [1, 598, 610, 612, 617], "logger": [1, 8, 11, 26, 42, 60, 65, 93, 108, 123, 182, 236, 606, 609, 610, 617, 618], "__name__": 1, "__main__": 1, "curli": 1, "brace": 1, "element": [1, 586, 592, 593], "variabl": [1, 3, 6, 9, 11, 26, 30, 31, 43, 50, 55, 59, 63, 74, 75, 80, 81, 82, 85, 87, 89, 91, 95, 97, 99, 102, 104, 106, 114, 135, 145, 150, 156, 157, 158, 162, 163, 164, 174, 184, 189, 194, 204, 210, 213, 214, 217, 218, 220, 226, 228, 231, 233, 237, 245, 248, 251, 254, 257, 260, 263, 266, 270, 276, 279, 282, 285, 292, 303, 305, 308, 316, 318, 321, 324, 327, 333, 338, 346, 351, 367, 375, 382, 385, 388, 391, 394, 397, 409, 412, 415, 417, 427, 433, 436, 441, 446, 448, 450, 456, 458, 461, 463, 465, 466, 473, 474, 477, 479, 483, 491, 496, 498, 500, 502, 503, 505, 508, 510, 516, 519, 522, 524, 530, 533, 536, 538, 544, 557, 560, 562, 568, 572, 576, 579, 581, 586, 592, 593, 598, 601, 604, 606, 609, 610, 611, 612, 613, 617, 618, 621, 622, 625, 626, 628, 629, 630, 632, 633, 635, 636, 637, 638, 639, 640, 641, 642, 645, 646, 647, 650, 653, 655, 656, 658, 661, 662], "valu": [1, 7, 8, 15, 23, 75, 80, 82, 156, 164, 208, 228, 240, 260, 272, 432, 461, 463, 464, 465, 468, 469, 547, 548, 549, 550, 554, 555, 595, 596, 598, 603, 604, 606, 609, 610, 611, 615, 616, 617, 618, 619, 623, 628, 629, 632, 633, 635, 644, 647, 648, 650, 651, 652, 655, 656, 658, 659, 660, 661], "content": [1, 6, 8, 610, 611, 617, 618, 662], "normal": [1, 610, 612, 641, 656], "contrast": [1, 8, 616, 642, 650, 658], "seri": [1, 79, 80, 208, 228, 231, 263, 433, 461, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 597, 598, 604, 605, 607, 608, 610, 615, 617, 622, 623, 629, 646, 653, 656], "format": [1, 7, 8, 375, 412, 511, 525, 539, 554, 563, 576, 579, 581, 598, 601, 604, 606, 609, 610, 611, 616, 617, 618, 619, 637, 646, 648, 650, 653, 656, 659], "statement": [1, 3, 8, 610, 614, 618], "syntax": [1, 3, 611, 618], "immutable_stream": [1, 598, 610, 617, 618], "filename_templ": [1, 598, 610, 617, 618], "restart": [1, 26, 97, 112, 135, 148, 162, 169, 202, 208, 209, 210, 211, 212, 213, 214, 215, 219, 220, 257, 303, 305, 308, 310, 312, 314, 316, 338, 346, 351, 355, 359, 417, 595, 596, 598, 601, 603, 604, 610, 611, 614, 617, 622, 625, 626, 628, 629, 630, 635, 646, 647, 650, 653], "type": [1, 7, 89, 91, 95, 97, 99, 102, 104, 106, 119, 143, 145, 156, 158, 162, 164, 174, 184, 189, 228, 240, 270, 408, 409, 417, 446, 450, 596, 598, 606, 609, 610, 611, 613, 614, 616, 617, 618, 619, 625, 630, 647, 648, 649, 650, 653, 655, 656, 657, 661, 664], "output_interv": [1, 598, 610, 617, 618], "0000_00": [1, 609, 610, 617, 618], "00": [1, 8, 609, 610, 617, 618, 640, 656, 662], "01": [1, 596, 609, 610, 617, 618, 648, 656], "clobber_mod": [1, 610, 617, 618], "truncat": [1, 608, 610, 617, 618, 660], "var_struct": [1, 610, 617], "tracer": [1, 228, 504, 548, 553, 595, 597, 598, 603, 605, 607, 610, 617, 649, 650, 657, 659], "var": [1, 398, 401, 610, 617, 618], "xtime": [1, 401, 598, 610, 617, 618], "normalveloc": [1, 8, 209, 210, 213, 595, 598, 610, 617, 618], "layerthick": [1, 8, 228, 586, 590, 591, 592, 593, 595, 598, 606, 609, 610, 617, 618], "basic": [1, 6, 7, 612, 619, 637, 641, 662], "config_write_output_on_startup": [1, 610, 617], "config_run_dur": [1, 610, 617, 618], "15": [1, 8, 45, 212, 409, 595, 598, 599, 601, 603, 604, 610, 617, 618, 622, 626, 627, 647, 649, 651, 653, 655, 656, 657, 662], "config_use_mom_del2": [1, 610, 617], "config_implicit_bottom_drag_coeff": [1, 610, 617, 618], "1": [1, 6, 7, 8, 11, 45, 82, 87, 99, 114, 135, 150, 164, 171, 194, 204, 209, 210, 211, 212, 213, 214, 215, 217, 219, 220, 228, 232, 236, 245, 251, 266, 272, 362, 412, 420, 428, 445, 453, 510, 524, 538, 548, 562, 586, 592, 593, 595, 596, 598, 599, 603, 604, 606, 609, 610, 613, 616, 617, 618, 619, 623, 624, 625, 626, 628, 629, 630, 632, 633, 635, 637, 640, 641, 642, 644, 647, 648, 649, 650, 651, 652, 653, 655, 656, 657, 658, 659, 660, 661, 662, 665], "0e": [1, 610, 617, 618], "2": [1, 3, 8, 210, 211, 212, 213, 215, 220, 228, 266, 362, 549, 553, 595, 598, 599, 601, 605, 609, 610, 616, 617, 618, 619, 622, 625, 626, 627, 628, 629, 630, 632, 633, 635, 637, 640, 641, 644, 647, 648, 649, 650, 653, 655, 656, 657, 659, 660, 661, 662], "config_use_cvmix_background": [1, 610, 617], "config_cvmix_background_diffus": [1, 610, 617], "0": [1, 3, 6, 7, 8, 45, 75, 212, 221, 222, 223, 224, 225, 226, 228, 232, 236, 240, 445, 468, 469, 553, 586, 591, 592, 593, 596, 598, 601, 609, 610, 611, 613, 617, 618, 619, 621, 623, 624, 625, 626, 627, 628, 629, 630, 632, 633, 635, 637, 641, 644, 645, 647, 648, 649, 650, 651, 652, 653, 655, 656, 657, 658, 659, 661, 662, 665], "config_cvmix_background_viscos": [1, 610, 617], "4": [1, 7, 8, 104, 176, 199, 209, 210, 211, 213, 215, 220, 245, 248, 300, 366, 595, 596, 598, 599, 601, 603, 606, 607, 609, 610, 611, 615, 616, 617, 618, 619, 624, 625, 626, 628, 629, 630, 633, 635, 641, 645, 646, 647, 648, 649, 650, 651, 653, 655, 656, 657, 658, 659, 661, 662], "regard": [1, 3], "whole": [1, 26, 610, 611, 617, 653, 656, 662], "degre": [1, 44, 51, 52, 57, 337, 345, 350, 406, 517, 531, 545, 569, 598, 619, 647, 650, 653, 655, 656], "left": [1, 6, 228, 617, 623, 644, 649, 661], "across": [1, 7, 8, 156, 211, 228, 240, 595, 596, 601, 605, 610, 611, 614, 615, 617, 618, 643, 650], "increas": [1, 549, 598, 611, 616, 623, 627, 656], "simpler": [1, 612, 617, 618, 642], "perhap": [1, 16, 610], "less": [1, 279, 282, 610, 623, 644, 650], "creation": [1, 598, 619, 650], "comment": [1, 7, 222, 610, 616, 619, 626], "certain": [1, 8, 36, 240, 375, 610, 612, 619, 660], "familiar": [1, 617, 618], "somewher": 1, "recommend": [1, 6, 7, 8, 610, 611, 612, 641], "With": [1, 612, 617, 618, 656], "essenti": [1, 6, 610], "inevit": 1, "minimum": [1, 8, 240, 444, 445, 463, 464, 465, 468, 469, 598, 610, 616, 617, 618, 619, 628, 629, 632, 633, 635, 644, 647, 648, 649, 650, 652, 653, 655, 656, 657, 659, 661], "level": [1, 3, 8, 212, 228, 240, 354, 355, 408, 409, 417, 440, 446, 450, 548, 586, 587, 588, 589, 590, 591, 592, 593, 595, 598, 601, 604, 610, 611, 617, 618, 619, 624, 625, 626, 627, 628, 629, 630, 632, 633, 635, 647, 648, 650, 651, 653, 655, 656, 657, 661, 664], "learn": [1, 611], "curv": [1, 611, 658], "skill": [1, 611], "pai": 1, "off": [1, 6, 240, 612, 613, 634], "cannot": [1, 8, 208, 610, 617], "organ": [1, 615], "greatli": 1, "simplifi": [1, 8, 601, 653], "cfg": [1, 8, 28, 610, 611, 612, 616, 617, 618, 619, 650, 656, 662], "mpas_core_framework_modul": 1, "mpas_core_framework_packag": 1, "shared_step": 1, "test_group_shared_modul": 1, "framework_modul": 1, "framework_packag": 1, "slightli": [1, 8, 610], "convent": [1, 598, 617, 618, 650], "mpascor": [1, 11, 26, 31, 62, 243, 269, 291, 365, 407, 425, 495, 571, 610, 611, 617, 618], "now": [1, 610, 612, 617, 618, 619, 641, 658], "dynam": [1, 228, 231, 278, 291, 303, 305, 308, 310, 312, 314, 316, 338, 341, 346, 351, 445, 594, 598, 601, 610, 614, 615, 619, 625, 642, 650, 653, 656, 658, 661, 663], "landic": [1, 4, 6, 8, 9, 42, 72, 73, 77, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 610, 612, 614, 615, 617, 618, 619, 620, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 662, 663, 664], "testgroup": [1, 10, 11, 26, 610, 611, 617, 618], "legaci": [1, 6, 226, 228, 598, 610, 611, 614, 616, 617, 619, 621, 641, 645, 650, 654, 661, 665], "mismip3d": 1, "least": [1, 8, 610, 612, 650], "reason": [1, 20, 610, 611, 616, 617, 618, 650, 664], "next": [1, 7, 212, 610, 617, 618, 627, 644, 650, 652, 653, 656, 662], "hierarchi": 1, "rel": [1, 3, 6, 8, 12, 16, 34, 35, 36, 70, 71, 73, 74, 75, 207, 210, 547, 548, 594, 610, 611, 612, 614, 617, 619, 647, 650, 653, 655, 656, 662, 663], "distinguish": [1, 444, 625, 627, 628, 630, 635, 647, 655], "variant": [1, 34, 209, 210, 211, 212, 215, 595, 596, 598, 603, 604, 606, 609, 610, 612, 617, 618, 623, 625, 626, 627, 628, 629, 630, 635, 641, 644, 647, 649, 650, 656, 658, 661], "vari": [1, 397, 441, 446, 450, 597, 598, 600, 604, 605, 607, 608, 610, 613, 616, 641, 644, 649, 650, 652, 653, 656, 657, 658], "characterist": 1, "base_mesh": [1, 8, 43, 50, 237, 336, 344, 349, 405, 610, 617], "refer": [1, 7, 11, 228, 232, 260, 432, 586, 589, 592, 593, 610, 611, 612, 614, 615, 616, 617, 618, 644, 647, 655, 661], "confus": [1, 6, 610, 611, 612, 615, 616, 617, 618], "tri": [1, 611], "clearer": 1, "distinct": [1, 611], "clean": [1, 3, 72, 610, 612, 615], "what": [1, 3, 8, 226, 598, 611, 617, 618, 640, 662], "here": [1, 8, 208, 209, 210, 211, 213, 214, 215, 219, 220, 595, 596, 598, 601, 603, 604, 606, 609, 610, 611, 612, 616, 617, 618, 619, 626, 627, 630, 636, 637, 638, 639, 640, 641, 650, 651, 659, 660, 662, 664], "combin": [1, 11, 12, 26, 36, 67, 93, 108, 123, 182, 228, 236, 606, 609, 610, 613, 616, 619, 622, 629, 650, 662], "self": [1, 8, 28, 57, 209, 210, 215, 228, 397, 595, 598, 601, 603, 606, 609, 610, 611, 616, 617, 618, 619, 660], "add_input_fil": [1, 8, 210, 610, 616, 617, 618], "run_model": [1, 8, 91, 106, 114, 180, 208, 209, 210, 606, 609, 610, 617, 618, 624, 625, 627, 628, 630, 635], "str": [1, 8, 9, 11, 12, 14, 15, 16, 17, 23, 24, 25, 26, 31, 34, 35, 37, 38, 39, 43, 50, 55, 59, 60, 61, 65, 67, 69, 70, 71, 72, 73, 74, 75, 80, 82, 85, 87, 89, 91, 93, 95, 97, 99, 102, 104, 106, 108, 114, 119, 135, 145, 150, 156, 158, 162, 164, 171, 180, 184, 189, 194, 204, 233, 236, 237, 239, 240, 241, 242, 244, 245, 248, 251, 254, 257, 260, 263, 266, 270, 272, 276, 283, 285, 286, 289, 303, 305, 308, 310, 312, 314, 316, 318, 321, 324, 333, 336, 338, 344, 346, 349, 351, 354, 355, 375, 382, 385, 388, 391, 397, 402, 405, 408, 409, 412, 415, 417, 428, 433, 440, 441, 445, 446, 450, 461, 463, 465, 473, 479, 491, 496, 498, 500, 502, 550, 553, 554, 555, 556, 572, 575, 576, 579, 581, 585, 610, 616, 617, 618], "__init__": [1, 8, 9, 11, 26, 31, 36, 42, 43, 50, 55, 78, 79, 80, 82, 84, 85, 87, 89, 91, 94, 95, 97, 99, 102, 104, 106, 109, 110, 112, 114, 117, 119, 121, 124, 127, 129, 132, 134, 135, 138, 140, 141, 143, 145, 148, 150, 153, 155, 156, 158, 160, 162, 164, 166, 167, 169, 171, 174, 176, 178, 180, 183, 184, 186, 188, 189, 191, 193, 194, 197, 199, 200, 202, 204, 229, 233, 237, 243, 245, 248, 251, 254, 257, 260, 263, 266, 269, 270, 272, 274, 276, 278, 279, 282, 285, 289, 291, 292, 297, 300, 303, 305, 308, 310, 312, 314, 316, 318, 321, 324, 327, 330, 333, 336, 338, 341, 344, 346, 349, 351, 356, 359, 362, 365, 366, 368, 370, 372, 374, 375, 382, 385, 388, 391, 394, 397, 402, 405, 407, 409, 412, 415, 417, 420, 423, 425, 426, 428, 430, 432, 433, 435, 437, 439, 441, 446, 448, 450, 453, 456, 458, 461, 473, 476, 477, 479, 483, 487, 490, 493, 495, 496, 498, 500, 502, 504, 505, 508, 510, 514, 516, 519, 522, 524, 528, 530, 533, 536, 538, 542, 544, 557, 560, 562, 566, 568, 571, 572, 576, 579, 581, 598, 610, 611, 614, 616, 617, 618], "subdir": [1, 6, 11, 26, 43, 50, 55, 82, 87, 91, 99, 106, 114, 135, 150, 164, 171, 180, 194, 204, 233, 237, 251, 272, 318, 336, 344, 349, 385, 405, 412, 428, 441, 576, 595, 603, 610, 616, 617, 618], "none": [1, 7, 8, 11, 12, 14, 15, 17, 21, 23, 24, 25, 26, 34, 35, 37, 39, 41, 43, 50, 55, 59, 61, 67, 69, 71, 72, 73, 74, 75, 82, 87, 91, 99, 106, 114, 135, 150, 156, 162, 164, 171, 180, 194, 204, 233, 236, 237, 240, 251, 272, 276, 296, 318, 330, 336, 344, 349, 385, 405, 412, 420, 428, 441, 453, 463, 464, 465, 473, 474, 475, 576, 610, 616, 617, 622, 623, 640, 644, 647, 653, 655, 656, 657, 661], "min_cor": 1, "thread": [1, 8, 11, 20, 21, 26, 61, 65, 82, 87, 99, 114, 135, 150, 164, 171, 194, 204, 251, 266, 272, 318, 330, 362, 412, 420, 428, 453, 595, 598, 610, 614, 616, 617, 618, 619, 646, 647, 650, 652], "nu": [1, 251, 263, 428, 433, 595, 603, 610, 617, 618], "belong": [1, 8, 11, 21, 26, 31, 35, 43, 50, 55, 79, 80, 82, 84, 85, 87, 89, 91, 94, 95, 97, 99, 102, 104, 106, 109, 110, 112, 114, 117, 119, 121, 124, 127, 129, 132, 134, 135, 138, 140, 141, 143, 145, 148, 150, 153, 155, 156, 158, 160, 162, 164, 166, 167, 169, 171, 174, 176, 178, 180, 183, 184, 186, 188, 189, 191, 193, 194, 197, 199, 200, 202, 204, 233, 237, 243, 245, 248, 251, 254, 257, 260, 263, 266, 269, 270, 272, 274, 276, 278, 279, 282, 285, 289, 291, 292, 297, 300, 303, 305, 308, 310, 312, 314, 316, 318, 321, 324, 327, 330, 333, 336, 338, 341, 344, 346, 349, 351, 356, 359, 362, 365, 366, 368, 370, 372, 374, 375, 382, 385, 388, 391, 394, 397, 402, 405, 407, 409, 412, 415, 417, 420, 423, 425, 426, 428, 430, 432, 433, 435, 437, 439, 441, 446, 448, 450, 453, 456, 458, 476, 477, 479, 483, 487, 490, 493, 495, 496, 498, 500, 502, 504, 505, 508, 510, 514, 516, 519, 522, 524, 528, 530, 533, 536, 538, 542, 544, 557, 560, 562, 566, 568, 571, 572, 576, 579, 581, 598, 610, 611, 616, 617, 618, 664], "int": [1, 11, 18, 21, 35, 39, 43, 44, 45, 46, 47, 60, 64, 65, 82, 87, 99, 114, 135, 150, 164, 171, 194, 204, 231, 236, 240, 251, 272, 279, 282, 283, 285, 318, 330, 355, 397, 412, 420, 428, 453, 477, 479, 483, 490, 491, 493, 505, 508, 510, 514, 516, 519, 522, 524, 528, 530, 533, 536, 538, 542, 544, 548, 557, 560, 562, 566, 568, 598, 610, 616, 617], "fewer": [1, 11, 21, 65, 82, 87, 99, 114, 135, 150, 164, 171, 194, 204, 251, 272, 318, 330, 412, 420, 428, 453, 601, 610, 617, 653, 662], "below": [1, 6, 11, 21, 65, 82, 87, 99, 114, 135, 150, 164, 171, 194, 204, 212, 226, 251, 272, 318, 330, 412, 420, 428, 444, 445, 453, 594, 598, 601, 610, 612, 616, 617, 618, 619, 621, 623, 628, 635, 641, 642, 644, 649, 650, 652, 653, 656, 657, 659, 660, 662], "fail": [1, 8, 11, 21, 26, 37, 75, 82, 87, 99, 114, 135, 150, 164, 171, 194, 204, 251, 272, 318, 330, 412, 420, 428, 453, 598, 610, 615, 617, 618, 619, 649, 650, 652, 657, 659], "float": [1, 7, 8, 43, 45, 46, 50, 75, 82, 164, 232, 237, 240, 251, 263, 270, 272, 276, 283, 336, 344, 349, 405, 428, 433, 441, 444, 445, 446, 448, 450, 453, 456, 458, 461, 463, 464, 465, 468, 469, 491, 595, 603, 604, 610, 617, 622, 624, 642], "super": [1, 598, 610, 611, 616, 617, 618], "add_namelist_fil": [1, 11, 598, 610, 617, 618], "baroclinic_channel": [1, 7, 8, 594, 602, 610, 611, 614, 617, 618, 645, 646, 654, 662, 663, 664], "config_mom_del2": [1, 595, 603, 610, 617], "add_namelist_opt": [1, 11, 601, 610, 617, 618], "add_streams_fil": [1, 11, 598, 601, 610, 617, 618], "add_output_fil": [1, 8, 598, 610, 617, 618], "add_model_as_input": [1, 8, 610, 617, 618], "popul": 1, "dure": [1, 8, 11, 23, 25, 26, 595, 596, 598, 601, 603, 610, 611, 616, 619, 642, 650, 661, 662, 663, 664], "phase": [1, 25, 212, 656], "idea": [1, 8, 617, 618, 659], "runtim": [1, 8, 20, 23, 209, 210, 211, 212, 215, 601, 606, 609], "hopefulli": [1, 619], "tedium": 1, "later": [1, 8, 11, 21, 36, 75, 595, 603, 604, 610, 616, 617, 618, 619, 634, 650, 656], "order": [1, 6, 8, 598, 606, 608, 610, 612, 617, 618, 622, 642, 650, 652, 656, 659, 660, 662], "top": [1, 228, 463, 586, 587, 588, 589, 590, 591, 592, 593, 601, 604, 610, 623, 642, 644, 655, 656], "partit": [1, 20, 59, 61, 209, 210, 211, 212, 215, 228, 239, 240, 595, 598, 601, 603, 604, 606, 609, 610, 618, 619, 636, 637, 638, 639, 640, 650, 662], "execut": [1, 6, 8, 13, 60, 61, 207, 594, 601, 604, 610, 612, 617, 618, 619, 636, 637, 638, 639, 640, 641, 662], "pass": [1, 6, 8, 26, 75, 598, 610, 611, 612, 614, 616, 617, 618, 622, 662], "directli": [1, 8, 11, 610, 611, 614, 615, 617, 618, 629, 637, 650, 660], "tread": 1, "maximum": [1, 8, 75, 240, 354, 463, 464, 465, 468, 469, 598, 619, 628, 629, 632, 633, 635, 644, 649, 650, 652, 657, 659, 661], "memori": [1, 11, 21, 598, 610, 619, 650, 652, 660], "amount": [1, 11, 21, 228, 598, 610, 611, 629, 632, 633, 643, 656], "disk": [1, 612, 619, 637, 640, 650], "workerqueu": 1, "explain": [1, 610, 611], "total": [1, 18, 64, 214, 474, 599, 601, 610, 611, 623, 637], "determin": [1, 8, 12, 20, 26, 61, 63, 146, 228, 595, 597, 598, 604, 605, 607, 610, 616, 617, 618, 622, 632, 633, 642, 644, 646, 647, 649, 650, 655, 656, 657, 659], "slurm": [1, 63, 66, 615, 619, 636, 637, 638, 639, 640, 662], "error": [1, 8, 11, 26, 208, 228, 283, 491, 547, 548, 549, 550, 552, 555, 597, 605, 608, 610, 611, 612, 615, 616, 617, 624, 659, 660], "rais": [1, 7, 8, 11, 16, 37, 38, 63, 75, 595, 610, 617, 618, 659], "few": [1, 6, 11, 21, 65, 210, 213, 219, 220, 226, 595, 596, 598, 601, 603, 604, 610, 611, 617, 618, 619, 641, 645, 649, 650, 656, 657, 659], "particular": [1, 226, 598, 610, 612, 615, 616, 617, 618, 637, 641, 650, 662], "otherwis": [1, 8, 598, 610, 617, 636, 637, 638, 639, 640, 641, 658, 661], "mean": [1, 6, 8, 63, 174, 215, 283, 460, 461, 474, 491, 597, 604, 605, 612, 617, 618, 642, 644, 646, 647, 650, 655, 661, 664], "non": [1, 8, 606, 609, 624, 650, 661], "known": [1, 23, 597, 605, 607, 610, 616, 617, 618, 624, 650], "strategi": [1, 8], "happen": [1, 8, 75, 610, 617, 618, 629, 632, 633, 649, 657, 659, 660], "care": [1, 8, 598, 610, 612, 618], "suffici": [1, 239], "worri": [1, 610], "globalocean": [1, 279, 292, 297, 300, 303, 305, 321, 324, 333, 338, 341, 346, 351, 356, 359, 362, 479, 487, 598, 610, 611, 616, 617, 618], "getint": [1, 606, 610, 616, 617, 618], "init_cor": [1, 619], "init_min_cor": [1, 619], "init_thread": [1, 619, 650, 652], "forward_cor": [1, 619], "forward_min_cor": [1, 619], "forward_thread": [1, 619, 650, 652], "ref_": 1, "alg_machine_data": 1, "root": [1, 70, 71, 73, 207, 283, 491, 594, 597, 605, 610, 611, 612, 614, 619, 636, 637, 638, 639, 640, 641, 644, 662], "mesh_databas": [1, 619, 636, 637, 638, 639, 640, 641, 662], "initial_condition_databas": [1, 619, 636, 637, 638, 639, 640, 641, 662], "bathymetry_databas": [1, 8, 228, 610, 619, 636, 637, 638, 639, 640, 641, 662], "ocean_database_root": [1, 8, 610, 619, 636, 637, 638, 639, 640, 641, 662], "project": [1, 3, 6, 42, 222, 594, 612, 617, 618, 619, 636, 637, 641, 656, 662], "regionalclim": [1, 637, 641], "common_mpa": [1, 637, 641], "grid": [1, 44, 51, 57, 209, 210, 211, 212, 215, 228, 239, 242, 337, 345, 350, 366, 392, 398, 399, 406, 444, 448, 517, 531, 545, 569, 584, 585, 586, 587, 588, 589, 592, 593, 595, 596, 598, 599, 601, 603, 604, 606, 609, 610, 617, 618, 619, 624, 632, 633, 637, 641, 647, 648, 649, 650, 651, 653, 655, 656, 657, 660, 661], "mali": [1, 6, 78, 82, 85, 87, 95, 97, 99, 110, 112, 114, 135, 141, 148, 150, 156, 162, 164, 167, 169, 171, 194, 200, 202, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 219, 220, 226, 610, 612, 614, 615, 619, 621, 622, 623, 625, 627, 628, 629, 634, 635, 636, 637, 638, 639, 640, 641, 642, 662, 663], "landice_database_root": [1, 619, 636, 637, 638, 639, 640, 641, 662], "albani": [1, 6, 207, 213, 219, 220, 221, 222, 223, 225, 226, 610, 619, 621, 622, 624, 625, 628, 635, 636, 637, 638, 639, 640, 641, 662], "compass_env": [1, 636, 637, 638, 639, 640, 641], "climat": [1, 42, 222, 636, 637, 638, 641, 650, 658, 662], "shared_clim": [1, 222, 637, 641, 662], "anaconda_env": 1, "single_nod": [1, 619, 636, 637, 638, 639, 640, 641, 662], "whether": [1, 6, 8, 11, 12, 26, 27, 34, 37, 38, 39, 61, 63, 68, 69, 75, 156, 162, 164, 228, 230, 233, 236, 237, 279, 282, 308, 314, 316, 318, 324, 327, 333, 397, 405, 412, 441, 446, 450, 461, 498, 500, 502, 572, 576, 579, 598, 610, 612, 613, 617, 618, 619, 624, 625, 626, 627, 630, 636, 637, 638, 639, 640, 641, 644, 647, 648, 650, 653, 655, 656, 657, 659, 661, 662], "mpirun": [1, 613, 619, 636, 637, 638, 639, 640, 641, 662], "srun": [1, 613, 619, 636, 637, 638, 639, 640, 641, 662], "parallel_execut": [1, 613, 619, 636, 637, 638, 639, 640, 641, 662], "cores_per_nod": [1, 619, 636, 637, 638, 639, 640, 641, 662], "36": [1, 153, 595, 598, 604, 609, 610, 617, 636, 637, 641, 650, 652, 656, 662], "account": [1, 622, 636, 637, 639, 640, 641, 662], "multiprocess": [1, 610, 611, 616, 619], "dask": [1, 619], "18": [1, 609, 619, 637, 650, 652, 660], "variou": [1, 79, 479, 598, 604, 607, 608, 610, 612, 656], "find": [1, 7, 37, 46, 66, 392, 460, 611, 612, 613, 617, 619, 652, 662], "compil": [1, 5, 6, 221, 222, 223, 224, 225, 226, 610, 613, 615, 617, 618, 622, 636, 637, 638, 639, 640, 641, 660, 662], "mpi": [1, 8, 221, 222, 223, 224, 226, 362, 610, 612, 613, 615, 616, 617, 618, 636, 637, 638, 639, 640, 652, 660, 662], "explor": [1, 604, 610, 617, 644, 656, 659], "intend": [1, 3, 8, 212, 596, 598, 604, 618, 619, 650, 663], "incorpor": [1, 610, 650], "come": [1, 12, 598, 604, 610, 612, 617, 618, 622, 636, 637, 638, 639, 640, 641, 643, 650, 654, 661], "placehold": [1, 11, 21, 610, 662], "conceptu": [1, 610, 611, 617, 618, 653, 656], "most": [1, 8, 20, 82, 87, 99, 114, 150, 164, 171, 194, 204, 207, 215, 226, 594, 598, 609, 610, 611, 612, 614, 616, 617, 619, 629, 634, 641, 642, 644, 645, 650, 658, 659, 663], "stick": [1, 617, 618], "inde": 1, "seemingli": 1, "unrel": 1, "argument": [1, 6, 7, 8, 65, 210, 213, 595, 596, 598, 603, 610, 611, 612, 616, 617, 618, 664], "taken": [1, 61, 355, 597, 605, 607, 610, 618, 640, 656, 662], "restart_test": [1, 82, 87, 99, 114, 150, 164, 171, 194, 204, 210, 610, 617, 622, 646, 662, 664], "sinc": [1, 6, 8, 276, 595, 598, 601, 610, 611, 612, 616, 617, 618, 619, 646, 649, 650, 652, 655, 660], "identifi": [1, 663], "sphinx": [1, 7], "readthedoc": 1, "built": [1, 6, 70, 71, 73, 207, 594, 610, 612, 618, 619, 641, 662], "manner": [1, 617], "similar": [1, 3, 6, 8, 222, 226, 228, 596, 610, 611, 612, 616, 617, 618, 623, 650, 656, 658, 659, 662], "geometric_featur": [1, 228, 236, 598, 650], "pyremap": 1, "analysi": [1, 208, 292, 297, 305, 308, 391, 502, 549, 572, 576, 595, 598, 603, 604, 609, 610, 611, 619, 646, 649, 650, 657, 658, 659, 660, 663], "guid": [1, 7, 209, 210, 211, 212, 214, 215, 217, 218, 595, 596, 598, 600, 601, 603, 604, 606, 607, 608, 609, 610, 611, 612, 616, 617, 618, 621, 625, 637, 641, 645, 650], "detail": [1, 3, 4, 6, 7, 8, 39, 75, 597, 598, 599, 605, 607, 608, 610, 611, 612, 613, 616, 617, 618, 634, 642, 661, 662], "instruct": [1, 612, 617, 618], "quick": [1, 228, 601, 615, 617, 621, 645, 653, 664], "overview": [1, 7, 615, 637, 640], "philosophi": [1, 611], "subsect": 1, "sub": [1, 461, 642, 650, 653], "descript": [1, 6, 7, 598, 604, 616, 617, 618, 619, 621, 626, 627, 630, 634, 645, 650], "manag": [1, 3, 613, 641], "api": [1, 7, 8, 615, 617, 618], "docstr": [1, 611, 615, 617], "eventu": [1, 656], "tutori": [1, 611], "plan": [1, 3, 207, 594, 610, 614, 656, 663], "parsl": 1, "begin": [1, 7, 8, 210, 211, 213, 215, 220, 375, 595, 601, 610, 612, 615, 617, 618, 625, 626, 628, 630, 635, 641, 649, 652, 653, 656, 658], "seem": [1, 610, 616, 617, 618], "workqueueexecutor": 1, "enough": [1, 8, 595, 603, 610, 611, 618, 649, 650, 653, 656, 657, 659, 661], "consid": [1, 611, 656], "beta": 1, "latest": [1, 207, 594, 604, 612, 621, 645, 656, 662, 665], "v1": [1, 8, 615, 644, 650], "prematur": 1, "settl": [1, 617, 618], "except": [1, 8, 11, 16, 37, 75, 598, 610, 611, 616, 617, 650, 655, 656, 658, 659], "accordingli": [1, 66, 213, 228, 596], "accur": [1, 623, 629, 634, 642], "race": 1, "unnecessari": [1, 618, 650], "block": [1, 3, 610, 617, 650], "prerequisit": [1, 556], "subsequ": [1, 610, 614, 635, 650, 664], "associ": [1, 8, 547, 548, 586, 592, 593, 595, 596, 598, 603, 610, 614, 617, 650, 653], "datafutur": 1, "usag": [1, 208, 598, 619, 622, 629, 632, 633, 637, 640, 650, 652], "arbitrari": 1, "1gb": 1, "calibr": 1, "actual": [1, 3, 6, 8, 610, 612, 617, 623], "approxim": [1, 8, 43, 45, 46, 50, 237, 336, 344, 349, 405, 547, 555, 608, 612, 622, 625, 626, 630, 649, 650, 656, 657, 659, 660], "debug": [1, 8, 221, 222, 223, 224, 225, 548, 636, 637, 638, 639, 640], "flesh": [1, 617, 618], "further": [1, 7, 598, 610, 626, 627, 630, 640], "restrict": [1, 8, 617, 618], "facilit": 1, "m": [1, 6, 44, 51, 52, 57, 210, 212, 337, 345, 350, 406, 517, 531, 545, 569, 595, 598, 599, 601, 603, 604, 609, 610, 612, 618, 624, 625, 626, 627, 629, 630, 632, 633, 636, 637, 638, 639, 640, 644, 647, 649, 651, 653, 655, 656, 658, 661, 662], "oppos": [1, 279, 282, 656], "origin": [1, 8, 34, 399, 440, 444, 445, 605, 608, 612, 616, 617, 618, 648, 657, 661, 662], "simpli": [1, 8, 36, 104, 143, 153, 160, 186, 191, 248, 572, 581, 599, 610, 612, 617, 618, 625, 644, 662, 664], "anyth": [1, 617], "discuss": [1, 3, 8, 610, 611, 617, 618, 649, 650, 659], "decid": [1, 616, 618, 650], "misunderstood": 1, "select": [1, 6, 8, 610, 612], "skip": [1, 6, 8, 75, 610, 664], "latter": [1, 6, 26, 210, 211, 213, 215, 220, 226], "suggest": [1, 613, 656], "put": [1, 612, 617, 618, 658], "under": [1, 3, 74, 226, 440, 466, 552, 598, 612, 615, 625, 644, 646, 653, 656, 659, 663], "break": [1, 661], "backward": 1, "compat": [1, 207, 239, 594, 612, 613, 615, 650, 653], "scope": 1, "hinder": 1, "effort": [1, 650], "14": [1, 220, 598, 613, 635, 650], "scratch": [1, 6, 612, 616, 617, 637, 640, 662], "simper": 1, "underwai": 1, "aid": [1, 6], "compass_1": 1, "http": [1, 6, 7, 8, 38, 556, 598, 610, 611, 612, 613, 615, 618, 619, 621, 640, 645, 650, 662], "github": [1, 6, 7, 598, 611, 612, 615, 617, 618, 619, 621, 645, 650, 662, 665], "com": [1, 6, 7, 38, 598, 611, 612, 615, 617, 618, 619, 650, 662], "dev": [1, 6, 7, 207, 598, 610, 611, 612, 615, 617, 618, 619, 621, 645, 650, 662], "28": [1, 619, 650], "somewhat": 1, "conflict": 1, "tend": [1, 228], "child": [1, 19, 477, 610, 611], "just": [1, 6, 11, 21, 39, 82, 87, 99, 114, 150, 164, 171, 194, 204, 210, 211, 213, 215, 220, 226, 610, 611, 612, 614, 615, 616, 617, 618, 637, 640, 656], "instanti": 1, "becaus": [1, 7, 8, 208, 444, 610, 611, 612, 616, 617, 618, 624, 628, 629, 632, 633, 635, 639, 642, 650, 652, 656, 657, 662], "parent": [1, 303, 321, 598, 610], "object": [1, 8, 14, 17, 25, 74, 75, 461, 473, 598, 610, 611, 617, 618, 642, 650], "respect": [1, 3, 8, 228, 610, 611, 617, 648, 650, 661], "baroclinicchannel": [1, 245, 248, 257, 260, 266, 595, 610, 611, 617, 618], "short": [1, 6, 104, 153, 176, 213, 214, 219, 220, 228, 231, 248, 292, 300, 355, 356, 362, 366, 409, 572, 581, 598, 610, 611, 617, 618, 622, 623, 625, 628, 630, 635, 642, 646, 647, 648, 650, 655, 658, 661], "add_step": [1, 209, 210, 215, 595, 598, 603, 610, 616, 617, 618], "initialst": [1, 595, 596, 598, 600, 601, 603, 604, 606, 609, 610, 617], "And": [1, 7, 610, 612], "save": [1, 8, 37, 57, 595, 601, 610, 624, 625, 626, 628, 630, 635, 641, 647, 650, 653], "res_param": [1, 595, 609, 610, 617, 618], "10km": [1, 8, 595, 609, 610, 617, 618, 629, 632, 646, 647, 662, 663, 664], "nx": [1, 610, 617, 618, 624, 625, 626, 627, 630, 648, 651, 653, 655], "ny": [1, 610, 617, 618, 624, 625, 626, 627, 630, 651, 653, 655], "50": [1, 212, 595, 609, 610, 617, 618, 627, 630, 647, 653, 655, 657], "dc": [1, 610, 617, 618, 624, 625, 626, 627, 630, 651, 653, 655], "10e3": [1, 610, 617, 618], "4km": [1, 218, 220, 595, 610, 617, 618, 633, 647, 658, 662], "40": [1, 604, 610, 617, 618, 624, 639, 656, 660], "126": [1, 610, 617, 618], "4e3": [1, 610, 617, 618], "1km": [1, 6, 156, 162, 164, 595, 610, 617, 618, 647, 648, 662], "160": [1, 610, 617, 618], "500": [1, 598, 606, 609, 610, 617, 618, 619, 644, 653, 661], "1e3": [1, 610, 617, 618], "valueerror": [1, 8, 63, 595, 610, 617, 618], "unsupport": [1, 595, 610, 617, 618], "param": [1, 143, 595, 598, 610, 617, 618], "recip": [1, 610], "elsewher": [1, 598, 612, 618, 642], "might": [1, 3, 8, 228, 610, 617, 618, 619, 661, 662], "you": [1, 3, 5, 6, 7, 8, 207, 221, 222, 223, 224, 225, 226, 228, 594, 604, 610, 611, 612, 613, 614, 616, 617, 618, 619, 628, 629, 632, 633, 635, 636, 637, 638, 639, 640, 641, 649, 650, 653, 656, 657, 659, 660, 662, 663, 664], "kei": [1, 9, 26, 31, 71, 375, 549, 554, 610, 629], "config_time_integr": [1, 618], "split_explicit": [1, 292, 297, 300, 303, 318, 321, 338, 341, 346, 351, 356, 359, 362, 598, 618, 650, 659], "config_dt": [1, 617, 618], "02": [1, 637], "config_btr_dt": [1, 617, 618], "06": [1, 609, 651], "0000_06": 1, "config_hmix_use_ref_cell_width": 1, "config_use_debugtrac": 1, "Such": 1, "forwardstep": [1, 598, 600, 610], "time_integr": [1, 292, 297, 300, 303, 318, 321, 338, 341, 346, 351, 356, 359, 362, 598, 659], "with_ice_shelf_cav": [1, 233, 308, 314, 316, 333, 598, 610, 650], "wisc": [1, 598, 650], "littl": [1, 8, 611, 612, 615, 616, 617, 618], "trickier": 1, "typic": [1, 6, 7, 8, 11, 23, 69, 228, 355, 598, 610, 612, 614, 616, 617, 618, 619, 622, 624, 625, 626, 629, 630, 632, 633, 641, 642, 644, 650, 658, 662, 663], "look": [1, 6, 7, 8, 598, 610, 611, 616, 617, 618, 619, 660], "forcing_data": [1, 604, 610], "mixedlayerdepthsoutput": 1, "var_arrai": [1, 610], "constant": [1, 8, 43, 50, 51, 237, 336, 344, 349, 405, 596, 606, 609, 618, 624, 627, 647, 648, 649, 653, 655, 656, 657, 659, 661], "remov": [1, 6, 8, 69, 72, 445, 595, 596, 601, 603, 604, 606, 609, 610, 616, 650, 656], "etc": [1, 8, 72, 73, 270, 408, 409, 417, 446, 450, 598, 610, 647, 650, 655], "rare": [1, 612], "One": [1, 8, 226, 596, 611, 616, 618, 641, 646, 650, 664], "add_config": [1, 616], "io": [1, 610, 611, 615, 617, 618, 619, 621, 645], "enthalpy_benchmark": [1, 207, 216, 610, 621, 622, 631], "readm": [1, 8, 212, 610, 627], "work_dir": [1, 6, 8, 11, 26, 35, 67, 70, 71, 72, 73, 74, 75, 610], "visual": [1, 8, 212, 276, 282, 423, 437, 458, 490, 508, 522, 536, 560, 596, 601, 604, 610, 614, 624, 625, 626, 627, 628, 630, 635, 648, 655, 656], "eismint2_viz": [1, 211, 626], "experi": [1, 114, 119, 123, 211, 226, 440, 441, 446, 448, 450, 456, 458, 461, 473, 604, 611, 626, 644, 656], "b": [1, 3, 6, 114, 123, 211, 612, 614, 626, 662], "d": [1, 114, 123, 211, 460, 461, 473, 586, 592, 593, 610, 617, 618, 626, 648], "f": [1, 6, 8, 114, 123, 211, 595, 610, 612, 616, 617, 619, 626, 640, 653, 662], "unchang": [1, 650], "eismint2": [1, 31, 207, 216, 621, 622, 631], "whichev": [1, 207, 594, 644], "sens": [1, 615, 617], "appli": [1, 7, 8, 39, 240, 440, 604, 610, 617, 622, 623, 642, 648, 650, 653, 656, 661], "shown": [1, 610, 635, 658, 661], "oper": [1, 8, 22, 101, 116, 137, 152, 173, 196, 206, 253, 256, 265, 414, 422, 443, 455, 578, 610, 622, 646, 664], "explicit": [1, 8, 596, 598, 611, 617, 618, 635, 646, 648, 650, 659], "neither": 1, "timer": [1, 6, 26, 30, 74, 81, 157, 163, 598, 606, 609, 610, 611], "compare_vari": [1, 8, 610, 618], "mesh_step": [1, 610], "mesh_cor": [1, 619], "mesh_min_cor": [1, 619], "xcell": [1, 598, 610, 617], "ycell": [1, 598, 610, 617], "zcell": [1, 598], "filename1": [1, 8, 75, 610, 618], "purpos": [1, 3, 31, 596, 610, 611, 614, 617, 618, 624, 634, 635, 650, 663], "meti": [1, 59, 618], "split": [1, 598, 611, 616, 617, 618, 646, 650, 659], "domain": [1, 60, 61, 214, 217, 218, 228, 239, 423, 461, 598, 604, 610, 617, 618, 622, 625, 626, 627, 630, 642, 647, 648, 649, 650, 652, 653, 655, 656, 657, 658, 661, 663], "trivial": 1, "quit": [1, 3, 598, 610, 653], "compar": [1, 6, 8, 26, 70, 71, 73, 74, 75, 212, 219, 303, 356, 548, 596, 597, 598, 599, 600, 605, 607, 608, 609, 611, 614, 616, 617, 618, 622, 625, 626, 628, 629, 630, 635, 646, 647, 650, 651, 652, 653, 656, 658, 660, 662, 664], "signific": [1, 610, 611, 623, 656], "dynamic_adjust": [1, 305, 610, 619, 646], "rk4": [1, 292, 297, 300, 303, 318, 321, 338, 341, 346, 351, 356, 359, 362, 598, 611, 617, 618, 646, 650, 659, 664], "intermedi": [1, 650], "meshstep": [1, 327, 394, 600, 610], "build_cell_width_lat_lon": [1, 8, 50, 600], "numpi": [1, 8, 44, 51, 52, 57, 337, 345, 350, 406, 461, 517, 531, 545, 547, 550, 555, 569, 584, 585, 610, 617, 618], "np": [1, 606, 617, 618], "qu240mesh": 1, "mesh_nam": [1, 283, 285, 289, 333, 402, 598, 650], "bool": [1, 11, 12, 26, 27, 34, 37, 38, 39, 61, 68, 69, 75, 156, 162, 164, 228, 230, 233, 236, 237, 240, 279, 282, 308, 314, 316, 318, 324, 327, 333, 397, 405, 412, 441, 446, 450, 461, 465, 498, 500, 502, 572, 576, 579], "ic": [1, 7, 141, 146, 148, 174, 207, 212, 213, 215, 231, 232, 233, 236, 308, 314, 316, 330, 333, 355, 407, 409, 412, 415, 417, 420, 423, 439, 441, 444, 445, 446, 450, 453, 461, 463, 466, 470, 471, 472, 474, 594, 598, 601, 604, 609, 611, 612, 615, 617, 618, 619, 621, 622, 624, 625, 626, 627, 628, 629, 630, 632, 633, 634, 635, 637, 643, 644, 645, 646, 653, 656, 661, 662, 663], "shelf": [1, 7, 84, 85, 232, 233, 236, 308, 314, 316, 330, 333, 407, 409, 412, 415, 417, 420, 423, 439, 441, 453, 461, 466, 474, 498, 500, 502, 598, 601, 604, 610, 611, 617, 618, 619, 624, 625, 634, 635, 643, 644, 645, 646, 653, 656, 658, 661], "caviti": [1, 233, 236, 308, 314, 316, 333, 461, 465, 598, 601, 604, 611, 617, 618, 619, 643, 644, 645, 646, 653, 656], "__module__": [1, 598, 616], "mesh_config_filenam": [1, 333, 598], "cell": [1, 8, 43, 44, 45, 46, 50, 51, 52, 57, 146, 228, 230, 233, 236, 237, 239, 240, 283, 336, 337, 344, 345, 349, 350, 366, 405, 406, 444, 461, 491, 517, 531, 545, 569, 586, 587, 588, 589, 592, 593, 598, 599, 604, 606, 610, 616, 617, 618, 624, 625, 626, 627, 628, 629, 630, 632, 633, 635, 644, 647, 648, 649, 650, 651, 652, 653, 655, 656, 657, 658, 659, 661], "width": [1, 8, 43, 44, 45, 50, 51, 52, 57, 237, 336, 337, 344, 345, 349, 350, 405, 406, 517, 531, 545, 569, 617, 647, 648, 653, 655, 657, 658, 661], "arrai": [1, 8, 44, 51, 52, 57, 230, 337, 345, 350, 406, 463, 465, 517, 531, 545, 549, 550, 569, 584, 585, 587, 588, 589, 590], "regular": [1, 6, 39, 44, 51, 279, 282, 337, 345, 350, 406, 517, 531, 545, 569, 617, 636, 637, 639, 640, 641, 646, 662], "latitud": [1, 44, 51, 337, 345, 350, 406, 517, 531, 545, 569, 598, 649, 650, 658, 660], "longitud": [1, 44, 51, 52, 57, 337, 345, 350, 406, 517, 531, 545, 569, 598, 649, 658], "return": [1, 3, 7, 37, 44, 45, 46, 51, 62, 64, 71, 230, 232, 283, 286, 337, 345, 350, 355, 406, 444, 484, 491, 517, 531, 545, 547, 548, 549, 556, 569, 584, 587, 588, 589, 590, 591, 611, 616, 617, 618, 649, 657, 660], "cellwidth": [1, 337, 345, 350, 406, 517, 531, 545, 569], "x": [1, 44, 51, 52, 57, 337, 345, 350, 366, 406, 461, 463, 470, 471, 472, 517, 531, 545, 569, 598, 599, 601, 610, 617, 618, 648, 651, 653, 655, 657], "km": [1, 8, 43, 44, 45, 46, 50, 51, 52, 57, 211, 213, 214, 215, 217, 220, 237, 270, 285, 336, 337, 344, 345, 349, 350, 405, 406, 441, 445, 446, 448, 450, 453, 456, 458, 483, 491, 510, 514, 516, 517, 524, 528, 530, 531, 538, 542, 544, 545, 562, 566, 568, 569, 595, 597, 598, 599, 604, 605, 606, 607, 608, 609, 616, 617, 618, 619, 622, 626, 628, 629, 630, 632, 633, 635, 642, 647, 648, 649, 650, 653, 655, 656, 657, 658, 659, 660, 661, 663], "lon": [1, 8, 44, 50, 51, 52, 57, 337, 345, 350, 406, 517, 531, 545, 569, 619, 650], "length": [1, 44, 51, 52, 57, 337, 345, 350, 406, 517, 531, 545, 569, 598, 609, 648, 651, 661], "180": [1, 44, 51, 52, 57, 337, 345, 350, 406, 517, 531, 545, 569, 649, 652, 659], "lat": [1, 8, 44, 50, 51, 52, 57, 337, 345, 350, 406, 517, 531, 545, 569, 619, 650], "90": [1, 44, 51, 52, 57, 337, 345, 350, 406, 517, 531, 545, 569, 609, 610, 649, 659], "dlon": 1, "dlat": 1, "constantcellwidth": 1, "240": [1, 8, 45, 550, 555, 597, 598, 607, 619, 642, 649, 650, 656, 659], "nlat": [1, 660], "nlon": 1, "360": 1, "linspac": [1, 8, 606], "ones": [1, 6, 461, 586, 592, 593, 611, 616], "size": [1, 3, 8, 45, 46, 146, 467, 510, 524, 538, 547, 549, 550, 555, 562, 610, 617, 618, 619, 624, 625, 626, 627, 630, 649, 650, 651, 653, 655, 657], "integr": [1, 8, 260, 292, 297, 300, 303, 318, 321, 338, 341, 346, 351, 356, 359, 362, 432, 595, 598, 603, 604, 610, 611, 617, 618, 622, 623, 625, 626, 627, 628, 629, 630, 631, 632, 633, 635, 646, 647, 649, 650, 653, 655, 656, 657, 658, 659, 661], "0000_01": 1, "1000": [1, 212, 598, 617, 619, 627, 630, 644, 647, 650, 652, 655, 661], "config_mom_del4": 1, "2e11": 1, "config_hmix_scalewithmesh": 1, "config_use_gm": 1, "vertic": [1, 210, 211, 215, 240, 242, 270, 354, 355, 366, 408, 409, 417, 446, 450, 498, 500, 502, 548, 595, 596, 598, 599, 600, 601, 603, 604, 606, 609, 610, 616, 618, 619, 624, 625, 626, 627, 630, 642, 643, 645, 647, 648, 650, 651, 652, 653, 655, 656, 657, 658, 661], "layer": [1, 210, 211, 215, 228, 230, 467, 498, 500, 502, 584, 585, 586, 590, 591, 592, 593, 595, 598, 599, 600, 601, 603, 604, 606, 609, 617, 619, 624, 625, 626, 630, 642, 644, 646, 647, 648, 650, 651, 652, 653, 655, 656, 657, 658, 661], "metadata": [1, 619], "vertical_grid": [1, 228, 242, 584, 586, 592, 593, 598, 610, 617, 619, 644, 647, 648, 653, 655, 656, 657, 661], "grid_typ": [1, 598, 617, 619, 644, 647, 653, 655, 656, 657, 661], "60layerphc": [1, 598, 650], "mb": [1, 11, 21, 598, 619, 650, 652], "init_max_memori": [1, 598, 619, 650, 652], "init_max_disk": [1, 619], "128": [1, 598, 638], "forward_max_memori": [1, 598, 619, 650, 652], "forward_max_disk": [1, 619], "prefix": [1, 463, 465, 475, 598, 610, 612, 619, 650], "qu": [1, 597, 598, 616, 619, 649, 650, 660], "ec": [1, 598, 619, 650], "wc": [1, 598, 619, 650], "mesh_descript": [1, 598, 619, 650], "eddi": [1, 595, 598, 647, 650, 658], "closur": [1, 598, 650, 651], "e3sm_vers": [1, 598, 619, 650], "enhanc": [1, 598], "around": [1, 240, 597, 598, 607, 617, 618, 619, 642, 647, 649, 650, 655, 658], "equat": [1, 228, 598, 601, 617, 625, 649, 650, 651], "south": [1, 598], "pole": [1, 598, 650], "35": [1, 598, 617, 647, 648, 649, 650, 655, 657, 660, 662], "greenland": [1, 31, 207, 216, 218, 598, 610, 614, 621, 622, 629, 631, 632, 633, 663], "min_r": [1, 598, 619, 650], "max_r": [1, 598, 619, 650], "mid": [1, 228, 598, 650], "revis": [1, 6, 598, 619, 650], "increment": [1, 598, 619, 650], "mesh_revis": [1, 598, 619, 650], "finest": [1, 598, 619, 649, 650, 657, 659], "coarsest": [1, 598, 617, 619, 650], "60": [1, 8, 45, 228, 236, 510, 524, 538, 562, 597, 598, 607, 608, 610, 644, 649, 650, 653, 658, 659, 660], "url": [1, 8, 12, 37, 598, 610, 613, 619, 650], "pull_request": [1, 598, 619, 650], "miss": [1, 8, 598, 610, 619, 650], "dynamical_adjust": 1, "spin": [1, 176, 610, 630, 646, 650], "kind": [1, 616, 617], "dynamicaladjust": 1, "dynamicadjust": [1, 305, 598], "qu240dynamicadjust": [1, 598, 610], "adjust": [1, 213, 228, 231, 278, 291, 303, 305, 308, 310, 312, 314, 316, 330, 338, 341, 346, 351, 409, 420, 453, 594, 598, 601, 604, 610, 619, 629, 632, 633, 634, 646, 650, 653, 656, 659], "dissip": [1, 303, 305, 310, 312, 338, 341, 346, 351, 598, 617, 647, 650, 655], "fast": [1, 303, 305, 310, 312, 338, 341, 346, 351, 598, 629, 650, 660], "move": [1, 208, 228, 303, 305, 338, 341, 346, 351, 598, 610, 611, 617, 656], "wave": [1, 303, 305, 310, 312, 338, 341, 346, 351, 426, 428, 430, 432, 433, 435, 437, 598, 603, 610, 617, 647, 650, 655], "restart_tim": 1, "0001": [1, 656], "02_00": 1, "03_00": 1, "restart_filenam": [1, 135, 303, 305, 308, 310, 312, 314, 316, 338, 346, 351, 598], "rst": [1, 7, 82, 87, 99, 114, 150, 164, 171, 194, 204, 210, 211, 213, 214, 215, 220, 598, 610, 617, 618], "step_nam": 1, "damped_adjustment_1": [1, 598], "namelist_opt": 1, "01_00": [1, 610, 656], "config_rayleigh_frict": 1, "config_rayleigh_damping_coeff": [1, 596], "stream_replac": [1, 610], "restart_interv": [1, 598, 610], "template_replac": [1, 17, 25, 610], "simul": [1, 214, 276, 303, 366, 374, 412, 448, 456, 458, 461, 473, 495, 498, 500, 502, 572, 576, 579, 598, 601, 604, 606, 607, 610, 614, 616, 617, 618, 629, 642, 647, 648, 650, 651, 652, 653, 658, 660, 661], "config_do_restart": 1, "config_start_tim": 1, "whew": 1, "That": [1, 610, 611, 614, 617, 618, 662], "lot": [1, 8, 610, 611, 618], "thank": 1, "bear": [1, 618], "myriad": 1, "highlight": 1, "roughli": [1, 611, 617, 649, 657, 659], "broken": [1, 97, 112, 148, 162, 169, 202, 610, 611], "ident": [1, 3, 6, 8, 85, 95, 97, 110, 112, 141, 148, 156, 162, 167, 169, 200, 202, 210, 211, 213, 214, 215, 220, 245, 257, 266, 292, 300, 359, 362, 417, 595, 598, 601, 606, 609, 611, 617, 618, 622, 625, 626, 628, 629, 630, 635, 647, 650, 653, 655, 656, 658, 659, 661], "analog": [1, 611], "get_available_cores_and_nod": [1, 611], "abl": [1, 6, 221, 222, 223, 224, 225, 610, 611, 612, 617, 618, 641], "unless": [1, 38, 69, 604, 611, 612, 617, 618], "am": 1, "theoret": [1, 611], "my": [1, 637], "ambit": 1, "gradual": [1, 598], "sea": [1, 7, 228, 230, 231, 232, 316, 330, 355, 409, 420, 440, 453, 463, 467, 470, 471, 472, 588, 589, 590, 591, 594, 598, 600, 601, 604, 618, 619, 644, 646, 648, 650, 651, 653, 656], "surfac": [1, 7, 212, 228, 230, 231, 232, 240, 330, 409, 420, 440, 453, 463, 467, 470, 471, 472, 498, 500, 502, 588, 589, 590, 591, 594, 598, 600, 601, 604, 617, 619, 627, 644, 646, 647, 648, 650, 653, 655, 656, 657, 658, 661], "height": [1, 7, 228, 230, 231, 232, 330, 409, 420, 453, 467, 588, 589, 590, 591, 594, 598, 600, 601, 604, 619, 644, 646, 648, 650, 653, 656], "frazil": [1, 228, 412, 572, 576, 579, 581, 601, 609, 646, 653, 661], "land": [1, 7, 207, 228, 231, 232, 233, 236, 237, 405, 441, 444, 446, 450, 594, 598, 601, 604, 606, 615, 618, 619, 621, 622, 644, 650, 652, 653, 656, 658, 663], "flux": [1, 212, 228, 440, 466, 474, 598, 601, 604, 623, 627, 646, 650, 653, 656], "1d": [1, 228, 584, 585, 586, 587, 588, 589, 590, 592, 593, 601, 604], "coordin": [1, 270, 408, 409, 417, 446, 450, 461, 586, 592, 593, 596, 598, 601, 604, 616, 642, 643, 645, 647, 648, 650, 653, 655, 656, 657, 661], "3d": [1, 240, 463], "z": [1, 228, 236, 408, 409, 417, 446, 450, 461, 463, 470, 471, 472, 587, 588, 589, 590, 591, 592, 593, 601, 604, 617, 618, 642, 647, 648, 653, 655, 656, 657, 659, 661, 664], "iceshelf": [1, 228], "pressur": [1, 7, 228, 231, 232, 330, 397, 409, 420, 453, 594, 598, 600, 601, 604, 619, 642, 650, 652, 653, 656], "match": [1, 330, 409, 420, 453, 556, 596, 601, 604, 612], "particl": [1, 496, 498, 502, 572, 576, 606, 609, 646], "plot": [1, 8, 57, 93, 108, 123, 182, 208, 209, 210, 211, 212, 215, 263, 366, 368, 375, 397, 399, 433, 548, 549, 550, 551, 552, 553, 554, 595, 596, 597, 599, 600, 603, 604, 605, 606, 607, 608, 616, 617, 618, 623, 624, 625, 626, 627, 630, 648, 649, 652, 653, 656, 657, 659, 660, 663], "nearli": [1, 174, 215, 292, 598, 610, 611, 614, 615, 617, 618, 630, 642, 650, 659], "netcdf": [1, 222, 239, 240, 241, 242, 354, 401, 598, 617, 619, 636, 637, 638, 639, 640, 641, 650], "maintain": [1, 228, 659, 662], "hundr": 1, "en4": [1, 598, 611, 650], "1900": [1, 598, 611, 650], "bgc": [1, 324, 327, 598, 611], "overkil": [1, 610], "never": [1, 610, 614], "note": [1, 7, 8, 208, 239, 615, 617, 628, 629, 634, 635, 640, 650, 652], "show": [1, 3, 7, 8, 230, 461, 463, 596, 610, 617, 618, 623, 627, 640, 641, 647, 649, 650, 655, 656, 657], "recent": [1, 645], "issu": [1, 3, 604, 610, 649, 657], "777": 1, "aren": [1, 8, 598, 610, 611, 612, 616, 617, 618, 649, 657, 659, 664], "occur": [1, 143, 208, 613], "rpe_test": [1, 610, 611, 662], "5": [1, 6, 8, 45, 211, 213, 219, 220, 240, 260, 432, 467, 551, 595, 598, 599, 601, 603, 606, 609, 610, 611, 613, 617, 618, 619, 624, 626, 628, 629, 632, 633, 634, 635, 646, 647, 648, 650, 651, 653, 655, 656, 658, 661, 662], "sourc": [1, 3, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 99, 100, 102, 103, 104, 106, 107, 108, 109, 110, 112, 114, 115, 117, 118, 119, 121, 122, 123, 124, 125, 127, 128, 129, 130, 132, 133, 134, 135, 136, 138, 139, 140, 141, 143, 145, 146, 147, 148, 150, 151, 153, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 169, 171, 172, 174, 175, 176, 178, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 193, 194, 195, 197, 199, 200, 202, 204, 205, 221, 222, 223, 224, 225, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 251, 252, 254, 255, 257, 258, 260, 261, 263, 264, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 296, 297, 300, 303, 305, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 341, 344, 345, 346, 349, 350, 351, 354, 355, 356, 359, 362, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 412, 413, 415, 416, 417, 418, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 579, 580, 581, 582, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 610, 612, 617, 618, 619, 634, 635, 636, 637, 638, 639, 640, 641, 662], "major": [1, 226, 610, 618, 641, 642, 650, 658], "assembl": [1, 305], "check": [1, 6, 8, 63, 75, 80, 214, 228, 292, 601, 604, 612, 614, 616, 617, 618, 619, 637, 640, 646, 661, 662, 664], "extend": [1, 619, 658], "opiton": 1, "mpas_model": [1, 6, 207, 594, 610, 619], "ocean_model": [1, 594, 612, 618, 619], "previous": [1, 610, 616], "resourc": [1, 8, 21, 65, 595, 603, 610, 617, 629, 632, 633, 650], "Then": [1, 5, 7, 8, 207, 212, 221, 222, 223, 224, 225, 226, 594, 595, 596, 598, 601, 603, 604, 606, 609, 610, 616, 618, 625, 626, 628, 630, 635, 641, 647, 650, 653, 656, 662], "configure_global_ocean": [1, 598, 610], "initial_condit": [1, 174, 324, 327, 493, 611], "polar": [1, 598, 619, 644, 650], "scienc": [1, 598, 644, 650], "center": [1, 228, 230, 239, 240, 598, 610, 617, 624, 625, 626, 630, 644, 647, 650, 652, 653, 655, 656, 657, 661], "hydrograph": [1, 598, 644, 650], "climatologi": [1, 598, 644, 650], "en4_1900": [1, 324, 327, 598, 646, 650], "met": [1, 3], "offic": 1, "hadlei": 1, "centr": 1, "init_descript": [1, 598, 619, 650], "bathymetri": [1, 8, 228, 233, 445, 461, 598, 610, 619, 650, 652, 661], "bathy_descript": [1, 598, 619, 650], "gebco": [1, 619, 650], "2019": [1, 619, 637, 650], "bedmachin": [1, 236, 619, 650], "antarctica": [1, 236, 598, 619, 642, 650], "with_bgc": [1, 324, 327, 610], "todo": 1, "fill": [1, 208, 228, 236, 604, 650], "bgc_descript": 1, "wisc_descript": 1, "shelv": [1, 594, 598, 601, 619, 642, 644, 646, 650, 653, 656], "although": [1, 8, 616], "config_fil": [1, 6, 70, 71, 73], "commandlin": 1, "w": [1, 6, 212, 612, 614, 627, 658, 662], "test_baroclinic_channel": 1, "test_nightli": 1, "check_siz": [1, 619], "verifi": [1, 8, 85, 95, 97, 110, 112, 141, 148, 156, 162, 167, 169, 200, 202, 496, 596, 619], "home": [1, 8, 612, 617, 618, 619, 637, 640, 641], "default_input": [1, 207, 594, 610, 619], "mesh_max_memori": [1, 619], "mesh_max_disk": [1, 619], "add_metadata": [1, 598, 619, 650], "quasi": [1, 8, 50, 176, 178, 498, 502, 572, 576, 598, 616, 619, 630, 650, 653, 656, 659, 660], "uniform": [1, 8, 50, 210, 215, 285, 483, 491, 510, 514, 516, 524, 528, 530, 538, 542, 544, 562, 566, 568, 595, 597, 598, 601, 603, 606, 607, 608, 609, 610, 616, 617, 618, 619, 624, 625, 626, 630, 647, 650, 653, 655, 656, 657, 659, 660, 661], "max_depth": [1, 598, 619, 650], "autodetect": [1, 598, 619, 650, 652], "creation_d": [1, 598, 619, 650], "email": [1, 598, 619, 650, 652], "lanl": [1, 615, 619, 637, 650, 662], "gov": [1, 8, 610, 613, 619, 637, 640, 650], "enable_ocean_initial_condit": [1, 619, 650], "enable_ocean_graph_partit": [1, 619, 650], "enable_seaice_initial_condit": [1, 619, 650], "enable_scrip": [1, 619, 650], "enable_diagnostics_fil": [1, 619, 650], "comparisonlatresolut": [1, 619, 650], "comparisonlonresolut": [1, 619, 650], "comparisonantarcticstereowidth": [1, 619, 650], "6000": [1, 598, 619, 644, 650], "comparisonantarcticstereoresolut": [1, 619, 650], "comparisonarcticstereowidth": [1, 619, 650], "comparisonarcticstereoresolut": [1, 619, 650], "tanh_dz": [1, 598, 619, 650], "vert_level": [1, 598, 610, 617, 618, 619, 644, 647, 648, 651, 653, 655, 656, 657], "bottom_depth": [1, 598, 610, 617, 618, 619, 644, 647, 651, 653, 655, 656, 657, 658, 661], "3000": [1, 598, 616, 619, 649, 650, 657, 659], "min_layer_thick": [1, 598, 619, 644], "max_layer_thick": [1, 598, 619, 644], "unfortun": 1, "lost": 1, "standard": [1, 119, 236, 598, 604, 607, 611, 612, 650, 659, 662], "search": [1, 6, 39, 239, 637], "through": [1, 3, 71, 423, 437, 598, 604, 611, 618, 621, 629, 632, 633, 642, 645, 648, 655, 656], "our": [1, 611, 616, 617, 618, 640, 662], "preserv": [1, 236, 237], "lower": [1, 8, 610, 617, 647, 655], "hpc": [1, 612, 637, 641], "laptop": [1, 612, 617, 618, 619], "desktop": [1, 617, 618], "varieti": [1, 631], "straightforward": [1, 610], "Or": [1, 6, 619], "late": 1, "run_step": [1, 610, 625], "subset": [1, 6], "run_by_default": [1, 27, 209, 210, 215, 610], "mesh_typ": [1, 85, 89, 91, 95, 97, 99, 102, 104, 106, 119, 145, 156, 158, 162, 164, 184, 189, 209, 210, 610], "dome": [1, 8, 42, 85, 127, 132, 135, 169, 174, 180, 207, 216, 610, 614, 621, 622, 631, 662, 663], "tye": [1, 85], "smoke_test": [1, 210, 610], "setupmesh": [1, 8, 211, 212, 215, 610], "runmodel": [1, 212, 213, 214, 215, 219, 220, 610], "unifi": [1, 612, 640], "detect": [1, 228, 598, 610, 619, 636, 637, 638, 639, 641, 650, 652, 659, 662], "fulli": [1, 604], "badger": [1, 226, 612, 641, 662], "cori": [1, 226, 612, 641, 662], "haswel": [1, 226, 662], "compi": [1, 226, 639, 662], "nest": [1, 617, 618], "27": 1, "29": [1, 660], "31": 1, "decomp_test": [1, 7, 617, 646, 662, 664], "32": [1, 605, 606, 609, 629, 635, 640, 657, 659, 662], "threads_test": [1, 8, 617, 646, 662, 664], "33": [1, 619, 650, 655, 656, 662], "analysis_test": [1, 646, 664], "34": [1, 610, 625, 653, 656, 658, 661, 662], "daily_output_test": 1, "37": [1, 598, 662], "38": [1, 662], "39": 1, "41": 1, "43": 1, "44": [1, 653], "45": [1, 598, 637, 650], "phc_bgc": [1, 646, 650], "46": [1, 624], "cull": [1, 8, 444, 595, 596, 598, 601, 603, 604, 606, 609, 610, 617, 618, 626, 628, 629, 632, 633, 635, 650, 652, 658], "switch": [1, 612, 617, 619, 661], "treat": [1, 610, 611], "progress": [1, 69, 230, 236, 463, 465], "intermix": 1, "continu": [1, 3, 135, 610, 616, 617, 622, 646, 650, 656], "azur": 1, "pipelin": 1, "doc": [1, 5, 7, 610, 617, 618, 640, 665], "renam": [1, 611], "titl": [1, 463, 465], "tabl": [1, 8, 555, 612, 641, 662], "tree": [1, 7, 615, 618], "0_doc": 1, "brows": [1, 617, 618], "index": [1, 5, 8, 228, 586, 587, 588, 589, 590, 591, 592, 593, 610, 617, 618, 624, 625, 630], "html": [1, 5, 621, 645], "keep": [1, 3, 6, 8, 11, 36, 440, 598, 610, 612, 618, 619, 656], "track": [1, 8, 11, 598, 610, 612, 658, 661], "thorough": 1, "absolut": [1, 6, 8, 11, 12, 36, 70, 71, 73, 207, 594, 610, 612, 619, 662], "sure": [1, 6, 8, 75, 207, 222, 226, 245, 257, 266, 292, 300, 359, 362, 417, 594, 595, 598, 601, 604, 610, 611, 612, 614, 617, 618, 619, 624, 625, 626, 628, 629, 630, 635, 640, 641, 647, 649, 650, 653], "present": [1, 228, 236, 598, 612, 616, 617, 618, 648], "figur": [1, 8, 467, 551, 553, 610, 618, 619, 624, 625, 626, 630], "implicitli": 1, "repositori": [1, 610, 615, 617, 618, 662], "affect": [1, 8, 610, 622, 642, 646], "immedi": [1, 42, 610, 612, 617, 618], "noth": [1, 8, 598, 613, 649, 657, 659, 660], "preclud": 1, "wouldn": 1, "limit": [1, 612, 615, 623], "review": 1, "agre": 1, "column": [1, 553, 599, 612, 618, 627, 642, 651, 653, 656, 662], "eas": [1, 617], "shallow": [1, 9, 612, 622, 625, 659], "water": [1, 9, 598, 604, 617, 642, 647, 648, 650, 653, 655, 656, 658], "he": 1, "down": [1, 586, 587, 588, 589, 590, 591, 592, 593, 601, 604, 644], "road": 1, "86": 1, "higher": [1, 598, 617, 650, 661], "subject": 1, "thing": [1, 6, 221, 222, 223, 225, 226, 610, 611, 615, 617, 618], "proof": 1, "concept": [1, 610, 611, 614, 663], "250": [1, 598, 599, 618, 644, 651, 661], "thick": [1, 174, 210, 211, 212, 213, 220, 228, 230, 440, 445, 586, 590, 591, 592, 593, 595, 598, 599, 601, 603, 604, 619, 622, 624, 627, 629, 632, 633, 644, 646, 647, 648, 650, 651, 653, 655, 656], "245": 1, "imposs": 1, "effect": [1, 656], "ask": [1, 623, 650], "evolv": [1, 228, 615, 642, 644, 656], "declar": [1, 3, 7], "good": [1, 8, 11, 610, 612, 616, 617, 618], "merg": 1, "intent": [1, 8], "ongo": 1, "basi": [1, 305, 308, 310, 312, 314, 316, 646], "demonstr": [1, 610, 617, 618, 661], "compass": [2, 3, 5, 7, 8, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 594, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 607, 608, 609, 613, 614, 616, 617, 619, 621, 622, 625, 629, 632, 633, 636, 637, 638, 639, 640, 641, 645, 646, 650, 651, 654, 656, 658, 661, 663, 664], "packag": [2, 5, 6, 7, 8, 12, 14, 17, 25, 28, 67, 72, 73, 226, 228, 333, 598, 610, 612, 613, 614, 615, 616, 617, 618, 636, 637, 638, 639, 640, 641, 650, 654, 662], "output": [2, 6, 7, 8, 9, 11, 16, 22, 26, 34, 58, 59, 60, 65, 69, 75, 91, 93, 101, 106, 108, 116, 121, 123, 127, 132, 137, 152, 173, 180, 182, 196, 206, 208, 209, 210, 211, 212, 213, 215, 219, 220, 228, 236, 239, 240, 241, 253, 256, 265, 282, 292, 297, 303, 354, 375, 391, 397, 414, 422, 443, 448, 455, 458, 461, 473, 490, 491, 508, 522, 536, 548, 553, 560, 578, 585, 595, 596, 598, 599, 601, 603, 604, 606, 609, 614, 615, 616, 618, 619, 629, 640, 650, 652, 662, 664], "yyyi": 3, "mm": [3, 286, 511, 525, 539, 563], "dd": 3, "summar": [3, 622], "code": [3, 6, 7, 8, 11, 207, 212, 228, 594, 596, 610, 612, 614, 615, 617, 618, 619, 622, 627, 631, 643, 646, 659, 662], "softwar": [3, 59, 640, 662], "success": [3, 37, 207, 594, 610, 619], "your": [3, 5, 6, 8, 207, 222, 226, 594, 611, 612, 613, 616, 617, 618, 619, 636, 637, 640, 641, 649, 650, 657, 659, 660, 662], "appear": [3, 226, 604, 610], "head": [3, 637], "technic": [3, 7], "focu": [3, 616], "extent": [3, 146, 661], "independ": [3, 6, 610, 614], "thu": [3, 7, 610, 617, 650, 656], "meet": [3, 655], "pde": 3, "solver": [3, 95, 97, 99, 104, 141, 148, 150, 153, 156, 162, 164, 208, 211, 212, 213, 219, 220, 610, 612, 615, 622, 623, 624, 625, 626, 628, 629, 635, 662], "steer": 3, "low": [3, 150, 199, 650, 656], "interfac": [3, 8, 228, 230, 463, 466, 467, 470, 471, 472, 474, 584, 585, 586, 592, 593, 601, 604, 610, 611, 612, 615, 617, 618, 642, 644], "sequenc": [3, 210, 211, 213, 215, 220, 462, 598, 610, 611, 614, 662, 663, 664], "math": 3, "almost": [3, 8, 616], "latex": 3, "2ab": 3, "imag": [3, 7, 241, 242, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 610, 617, 622, 624, 625, 626, 630, 650, 660], "small": [3, 8, 20, 209, 228, 599, 610, 622, 623, 624, 625, 629, 636, 637, 643, 644, 653, 659, 662], "jpeg": 3, "png": [3, 8, 241, 242, 597, 605, 608, 617, 618, 622, 624, 625, 627, 630], "okai": [3, 610, 618], "centric": 3, "pseudo": 3, "item": 3, "timelin": 3, "staf": 3, "example_funct": 3, "foo": [3, 611], "configur": [3, 6, 7, 8, 11, 21, 26, 37, 60, 63, 64, 65, 66, 67, 70, 71, 73, 80, 93, 108, 123, 182, 197, 214, 226, 242, 354, 355, 584, 586, 587, 588, 592, 593, 596, 608, 611, 615, 616, 617, 618, 619, 625, 629, 634, 640, 641, 642, 644, 646, 650, 652, 656, 658, 661, 662, 663], "properli": [3, 221, 222, 223, 224, 225, 617, 619, 646, 660, 662], "page": [4, 7, 556, 636], "auto": 4, "summari": [4, 208, 623, 637], "relev": [4, 7, 8, 214, 617, 618, 636, 637, 638, 639, 640, 641, 662], "procedur": [5, 208, 226, 228, 612, 616, 640], "export": [5, 613], "docs_vers": 5, "test": [5, 6, 7, 8, 9, 10, 11, 16, 21, 22, 26, 27, 28, 30, 31, 32, 34, 35, 39, 42, 43, 48, 50, 53, 55, 60, 62, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 226, 228, 229, 233, 234, 235, 237, 238, 584, 594, 595, 596, 597, 599, 600, 601, 603, 604, 605, 606, 607, 608, 609, 612, 613, 614, 615, 621, 623, 624, 625, 626, 627, 628, 629, 630, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 647, 648, 649, 651, 653, 655, 656, 657, 658, 659, 660, 661], "cd": [5, 207, 594, 612, 617, 618, 637, 662], "rm": 5, "rf": 5, "developers_guid": [5, 617, 618], "_build": 5, "view": [5, 612], "act": [6, 440, 611, 618, 644], "instal": [6, 612, 617, 640, 641, 662], "reflect": [6, 612], "h": [6, 598, 610, 618, 661], "v": [6, 228, 612, 650, 664], "example_compact": [6, 207, 594, 610, 619], "test1": 6, "test2": 6, "displai": [6, 8, 236, 640], "messag": [6, 8, 610, 613, 640], "test_expr": [6, 39], "substr": 6, "express": [6, 39], "think": [6, 617], "tempat": 6, "step1": 6, "step2": 6, "underli": 6, "framework": [6, 7, 26, 68, 75, 207, 594, 610, 614, 615, 617, 621, 645, 658, 661], "standalon": [6, 224, 610, 642], "num": 6, "mach": [6, 11, 636, 637, 638, 639, 640, 641, 662], "p": [6, 612, 617, 619, 662], "suite_nam": [6, 8, 35, 69, 71, 72, 73, 662], "case_numb": 6, "comma": [6, 8, 626, 649, 657, 659, 660], "requir": [6, 8, 11, 21, 82, 87, 99, 114, 135, 150, 164, 171, 194, 204, 207, 212, 213, 219, 220, 251, 272, 318, 330, 412, 420, 428, 453, 511, 525, 539, 563, 594, 598, 606, 609, 610, 611, 612, 613, 615, 616, 617, 618, 619, 621, 622, 625, 627, 628, 629, 632, 633, 635, 641, 644, 645, 650, 662, 663], "piec": [6, 610, 617], "r": [6, 598, 640, 649], "tell": [6, 612], "re": [6, 150, 199, 595, 596, 598, 609, 610, 611, 612, 614, 616, 617, 618, 619, 640, 641, 649, 652, 657, 659, 660, 662], "leav": [6, 233, 610, 619, 653, 656], "unknown": [6, 226, 641], "temp": 6, "baseline_dir": [6, 26, 70, 71, 73], "predefin": [6, 658], "afther": 6, "behind": [6, 611, 617], "fresh": [6, 616], "resid": 6, "test_suit": [6, 610], "proven": [6, 36, 615, 619, 650], "entir": [6, 616, 617, 647, 653, 655, 656, 664], "complet": [6, 8, 14, 17, 208, 228, 612, 617, 618, 622, 650, 662], "comparison": [6, 8, 26, 74, 75, 276, 596, 598, 610, 619, 648, 650, 653, 656], "against": [6, 8, 75, 219, 303, 367, 427, 436, 598, 599, 606, 609, 610, 618, 622, 625, 646, 648], "no_step": 6, "wherea": [6, 8, 610, 653, 661, 663], "clone": [6, 207, 594, 610, 612, 617, 618, 662], "tab": [6, 662], "full_run": [6, 598, 625, 626, 628, 630, 635, 647, 650, 653], "restart_run": [6, 82, 87, 99, 114, 150, 164, 171, 194, 204, 598, 625, 626, 628, 630, 635, 647, 650, 653], "preced": [6, 36], "serial": [6, 20, 608, 610, 660], "structur": [6, 8, 615, 618, 650], "onto": [6, 228, 239, 397, 600, 612, 652, 660], "whose": [6, 549, 553, 554, 610], "pr": [6, 662, 664], "saniti": [6, 228], "print": [6, 8, 39, 75, 554, 555, 610, 611, 618, 664], "restructuredtext": 7, "label": [7, 618, 641, 662], "_ocean": 7, "dev_": 7, "prepend": 7, "_dev_ocean": 7, "_ocean_baroclinic_channel": 7, "_ocean_baroclinic_channel_default": 7, "_dev_ocean_baroclinic_channel": 7, "_dev_ocean_baroclinic_channel_default": 7, "who": [7, 612, 617, 618, 619, 640], "citat": 7, "brief": [7, 617, 618], "awar": [7, 226, 610, 617, 618, 641], "wish": [7, 8, 228, 610, 612, 616, 617, 650, 662, 664], "specif": [7, 8, 28, 207, 226, 594, 596, 598, 609, 610, 612, 615, 616, 617, 618, 619, 634, 637, 641, 650, 662, 664], "share": [7, 77, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 228, 594, 595, 596, 598, 601, 603, 604, 606, 609, 610, 612, 615, 617, 618, 620, 625, 626, 627, 630, 639, 640, 641, 643, 647, 655, 662], "public": [7, 8, 610, 619], "underscor": [7, 617, 618], "currentmodul": 7, "autosummari": 7, "toctre": 7, "numpydoc": 7, "compute_land_ice_pressure_and_draft": [7, 228], "ssh": [7, 228, 230, 231, 232, 375, 377, 586, 588, 589, 590, 591, 592, 593, 594, 596, 598, 601, 604, 610, 617, 619, 637, 640, 642, 648, 650, 652, 653, 656], "modifysshmask": 7, "ref_dens": [7, 232], "draft": [7, 232, 445, 601, 604, 642, 644, 650, 656], "paramet": [7, 9, 10, 11, 12, 14, 15, 16, 17, 18, 21, 23, 24, 25, 26, 27, 31, 32, 34, 35, 37, 38, 39, 42, 43, 45, 46, 47, 50, 55, 57, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 80, 82, 85, 87, 89, 91, 93, 95, 97, 99, 102, 104, 106, 108, 110, 112, 114, 117, 119, 121, 123, 124, 127, 129, 132, 135, 138, 141, 145, 148, 150, 153, 156, 158, 160, 162, 164, 167, 169, 171, 174, 176, 178, 180, 182, 184, 186, 189, 191, 194, 197, 200, 202, 204, 230, 231, 232, 233, 236, 237, 239, 240, 241, 242, 244, 245, 248, 251, 254, 257, 260, 263, 266, 270, 272, 274, 276, 279, 282, 283, 285, 289, 292, 296, 297, 300, 303, 305, 308, 310, 312, 314, 316, 318, 321, 324, 327, 330, 333, 336, 338, 341, 344, 346, 349, 351, 354, 355, 356, 359, 362, 366, 368, 370, 372, 375, 382, 385, 388, 391, 394, 397, 402, 405, 408, 409, 412, 415, 417, 420, 423, 426, 428, 430, 432, 433, 435, 437, 440, 441, 444, 445, 446, 448, 450, 453, 456, 458, 461, 463, 464, 465, 467, 468, 469, 473, 477, 479, 483, 487, 490, 491, 493, 496, 498, 500, 502, 505, 508, 510, 514, 516, 519, 522, 524, 528, 530, 533, 536, 538, 542, 544, 547, 548, 549, 550, 553, 554, 555, 556, 557, 560, 562, 566, 568, 572, 575, 576, 579, 581, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 598, 606, 609, 610, 615, 628, 629, 632, 633, 635, 647, 650, 653, 655, 656, 658, 661], "xarrai": [7, 230, 232, 444, 461, 463, 465, 473, 586, 587, 588, 589, 590, 591, 592, 593, 610, 617, 618], "dataarrai": [7, 230, 232, 463, 465, 587, 588, 589, 590, 591, 610], "mask": [7, 228, 232, 236, 444, 461, 586, 589, 592, 593, 598, 604, 610, 617, 619, 644, 650, 652], "landicepressur": [7, 228, 231, 232, 598, 604, 610, 642, 650, 653, 656], "deviat": [7, 232], "densiti": [7, 8, 146, 228, 232, 240, 617, 628, 629, 632, 633, 635, 642, 656, 658], "seawat": [7, 232, 656], "displac": [7, 232, 642], "landicedraft": [7, 228, 232, 604, 656], "equal": [7, 214, 232, 611], "entri": [7, 33, 70, 71, 604, 656], "side": 7, "colon": 7, "doubl": [7, 610, 658], "quot": 7, "interfer": 7, "keyword": [7, 8, 610, 618], "arg": [7, 8, 65], "On": [7, 8, 618, 641, 665], "indent": [7, 610], "obviou": [7, 610, 617], "els": [7, 8, 610, 617], "meant": [8, 611, 618, 619, 622, 624, 625, 629, 634, 646], "list_cas": 8, "list_machin": [8, 611], "list_suit": 8, "anywher": [8, 612], "setup_cas": 8, "clean_cas": 8, "setup_suit": 8, "clean_suit": 8, "product": [8, 375, 609, 652], "ntask": [8, 11, 18, 21, 60, 65, 82, 87, 99, 114, 135, 150, 164, 171, 194, 204, 251, 272, 318, 330, 412, 420, 428, 453, 595, 598, 603, 610, 616, 617, 618], "cpus_per_task": [8, 11, 18, 21, 65, 610], "caveat": 8, "sit": 8, "idl": 8, "fraction": [8, 82, 208, 444, 445, 604, 617, 623, 644, 647, 653, 655, 656, 657, 658, 661], "min_task": [8, 11, 21, 65, 82, 87, 99, 114, 135, 150, 164, 171, 194, 204, 251, 272, 318, 330, 412, 420, 428, 453, 482, 595, 598, 609, 610, 616, 617, 618], "min_cpus_per_task": [8, 11, 21, 65, 610], "fewest": 8, "run_test": [8, 610, 618], "run_single_step": 8, "cpu": [8, 610, 662], "retriev": [8, 613], "text": [8, 649], "txt": [8, 72, 73, 610, 613], "case_output": 8, "implement": [8, 208, 209, 210, 211, 212, 215, 228, 445, 595, 596, 597, 599, 600, 601, 603, 604, 605, 606, 607, 608, 609, 611, 617, 618, 622, 623, 624, 625, 626, 627, 630, 642, 647, 649, 650, 651, 657, 658, 659, 660, 661], "termin": [8, 610, 618], "window": [8, 624, 625, 627, 630], "update_cach": 8, "enabl": [8, 576, 598, 606, 609, 610, 613, 619, 622, 640, 650, 661], "parser": [8, 36], "mpasconfigpars": 8, "compassconfigpars": [8, 11, 26, 37, 60, 63, 64, 66, 67, 93, 108, 123, 182, 242, 244, 354, 355, 408, 575, 584, 586, 587, 588, 592, 593], "convert": [8, 462, 511, 525, 539, 563, 610, 616, 617, 618], "add_from_packag": 8, "make_diagnostics_fil": [8, 650], "makediagnosticsfil": 8, "behavior": [8, 69, 610, 616, 617, 622, 625, 646], "getinteg": 8, "getfloat": [8, 606, 610, 616, 617, 618], "getboolean": [8, 610, 617], "getlist": 8, "integ": [8, 550], "getexpress": 8, "tupl": [8, 467], "rang": [8, 228, 598, 629, 642, 658], "arang": 8, "check_cal": [8, 610], "won": [8, 611, 616, 617, 618, 619], "captur": [8, 618], "insid": [8, 610, 611, 617, 656], "subprocess": [8, 11, 65, 68, 610, 611, 613, 618], "trick": [8, 210, 610], "snippet": [8, 617], "setup_mesh": [8, 209, 210, 610, 624, 625, 627, 630], "create_landice_grid_from_generic_mpas_grid": [8, 209, 210, 211, 212, 215], "mpas_grid": [8, 210, 610], "o": [8, 598, 611, 612, 618, 619, 662], "landice_grid": [8, 610], "l": [8, 75, 640], "relat": [8, 23, 79, 207, 210, 213, 215, 219, 220, 228, 466, 474, 594, 595, 596, 598, 601, 603, 604, 606, 609, 610, 611, 612, 613, 617, 619, 622, 624, 625, 626, 627, 630, 636, 637, 638, 639, 640, 641, 642, 644, 647, 648, 650, 652, 653, 655, 656, 657, 658, 660, 661, 662], "intern": [8, 11, 26, 426, 428, 430, 432, 433, 435, 437, 603, 610, 613, 655], "importlib": [8, 610], "though": [8, 11, 610, 611, 617, 618, 650], "whenev": [8, 610, 617, 618], "step_dir": 8, "database_root": 8, "download_path": 8, "join": 8, "remote_filenam": 8, "bedmachineantarctica_and_gebco_2019_0": [8, 610], "05_degre": [8, 610], "200128": [8, 610], "local_filenam": 8, "topographi": [8, 228, 444, 445, 467, 589, 598, 604, 610, 617, 642, 644, 647, 652, 653, 655, 656, 657, 658, 661, 663], "file_nam": 8, "web": [8, 556, 610, 619], "anl": [8, 610, 619], "dest_path": [8, 37], "remot": [8, 12, 612], "quasiuniformsphericalmeshstep": [8, 228, 597, 598], "icosahedralmeshstep": [8, 597, 598], "jigsaw": [8, 43, 47, 49, 50, 52, 54, 55, 279, 282, 610, 628, 635, 650], "opt": [8, 55], "make_jigsaw_mesh": [8, 50], "icosahedr": [8, 43, 45, 279, 282, 598, 649], "smooth": [8, 445, 604, 642, 656], "hand": [8, 611], "subdivis": [8, 43, 44, 45, 46, 47], "icosahedron": [8, 44, 45, 46, 47], "6": [8, 45, 211, 475, 598, 599, 609, 610, 617, 618, 626, 629, 645, 648, 661, 662], "120": [8, 45, 550, 598, 609, 649, 659], "7": [8, 45, 604, 609, 624, 640, 649, 650, 653, 656, 661, 662], "9": [8, 45, 467, 598, 609, 618, 641, 650, 656, 657, 662], "94": [8, 45], "spherical_mesh": [8, 51, 228, 650, 652], "cell_width": [8, 43, 44, 45, 46, 50, 51, 52, 57, 237, 336, 344, 349, 405], "icosahedral_method": 8, "jigsaw_mesh_filenam": 8, "msh": 8, "jigsaw_geom_filenam": 8, "geom": 8, "jigsaw_jcfg_filenam": 8, "jig": 8, "jigsaw_hfun_filenam": 8, "spac": 8, "triangles_filenam": 8, "mesh_triangl": 8, "mpas_mesh_filenam": 8, "plot_cell_width": 8, "cell_width_filenam": [8, 57], "cellwidthvslatlon": 8, "cell_width_image_filenam": 8, "cellwidthglob": 8, "cell_width_colormap": 8, "3wbgy5": 8, "add_mesh_dens": 8, "vtk": 8, "convert_to_vtk": 8, "vtk_dir": 8, "base_mesh_vtk": 8, "extract": [8, 598], "sphere": [8, 504, 505, 519, 533, 557, 597, 605, 607, 608, 649, 659, 660], "vtk_lat_lon": 8, "librari": [8, 213, 219, 220, 221, 226, 612, 617, 618, 622, 636, 637, 638, 639, 640, 641, 651, 660, 662], "moment": 8, "openmp_thread": [8, 11, 21, 65, 82, 87, 99, 114, 135, 150, 164, 171, 194, 204, 251, 272, 318, 330, 412, 420, 428, 453, 598, 603, 610, 617, 618], "gpmeti": [8, 619, 650], "divid": [8, 510, 524, 538, 562, 599, 618, 623, 644], "partition_graph": [8, 61, 606, 609], "circumst": [8, 642], "wast": 8, "update_namelist_pio": 8, "config_pio_num_iotask": [8, 610], "config_pio_strid": [8, 610], "v2": [8, 598, 615, 644, 650], "feel": [8, 610, 616, 617, 618], "safe": [8, 610, 612], "update_pio": [8, 61], "yourself": [8, 617, 641], "fact": [8, 11, 617], "culler": [8, 618], "make_graph_fil": [8, 610], "field": [8, 57, 59, 219, 228, 236, 239, 398, 399, 440, 444, 586, 592, 593, 595, 598, 601, 603, 604, 606, 607, 609, 617, 622, 629, 642, 647, 648, 649, 650, 652, 653, 655, 656, 657, 658, 659, 661], "weight": [8, 59, 228, 330, 409, 420, 453, 586, 592, 593, 625, 642, 644, 650], "weight_field": [8, 59], "critic": [8, 228, 236, 616, 617, 650], "filename2": [8, 75], "simpl": [8, 445, 604, 611, 617, 618, 656, 662], "temperatur": [8, 110, 112, 211, 212, 228, 472, 496, 595, 596, 598, 599, 601, 603, 604, 606, 609, 610, 617, 626, 627, 646, 647, 648, 649, 650, 653, 655, 656, 657, 658, 661], "salin": [8, 228, 470, 471, 496, 595, 596, 598, 599, 601, 603, 604, 606, 609, 610, 617, 646, 647, 648, 649, 650, 653, 655, 656, 657, 658, 661], "prognost": [8, 598, 601, 604, 622, 625, 626, 628, 629, 630, 635, 646, 647, 650, 653, 655, 658, 661], "4proc": [8, 647, 650], "8proc": [8, 647, 650], "alter": [8, 440, 587, 588, 604, 610, 615, 617, 644, 647, 649, 650, 653, 655, 656, 657, 658, 659, 660, 661], "skip_if_step_not_run": [8, 75, 610], "forc": [8, 164, 228, 397, 440, 441, 446, 450, 596, 600, 604, 606, 656, 658, 660, 661, 663], "failur": 8, "quiet": [8, 69, 75, 618], "report": 8, "threshold": [8, 228, 445, 604, 629, 649, 650, 652, 656, 657], "l1": [8, 75], "00000000000000e": 8, "l2": [8, 75, 547, 548, 549, 550, 555], "l_infin": 8, "linf": [8, 75, 547, 548, 549, 550, 555], "test_nightly_latest": 8, "1thread": [8, 647, 650], "2thread": [8, 647, 650], "test_20210616": 8, "further_valid": 8, "disabl": [8, 622, 629, 650, 663], "check_output": [8, 75], "unlik": [8, 617, 618, 619, 658, 661], "zero": [8, 174, 215, 440, 587, 588, 589, 590, 591, 595, 599, 601, 603, 604, 609, 616, 618, 626, 630, 653, 656], "l1_norm": [8, 75], "l2_norm": [8, 75], "linf_norm": [8, 75], "nonzero": [8, 75, 607, 659], "easiest": [8, 617], "clobber": 8, "qualit": [8, 610], "judgment": 8, "compare_tim": 8, "rundir1": [8, 74], "92264": 8, "82317": 8, "percent": 8, "781019682649793": 8, "speedup": 8, "1208377370409515": 8, "hous": [9, 650], "sw": 9, "dict": [9, 11, 15, 17, 23, 25, 26, 31, 67, 71, 292, 375, 484, 548, 549, 554, 610, 616, 618], "max_memori": [11, 21], "run_as_subprocess": [11, 610], "smallest": [11, 610, 614, 644, 663], "unit": [11, 463, 465, 475, 511, 525, 539, 563, 610, 614, 647, 648, 655, 663], "necessarili": [11, 12, 614, 650], "openmp": [11, 21, 65, 82, 87, 99, 114, 135, 150, 164, 171, 194, 204, 221, 222, 223, 224, 225, 251, 272, 318, 330, 412, 420, 428, 453, 610, 617, 636, 637, 638, 639, 640, 660], "parallel": [11, 20, 21, 608, 610, 611, 612, 613, 614, 617, 619, 636, 637, 638, 639, 640, 641, 660, 662, 663], "input_data": 11, "namelist_data": 11, "streams_data": 11, "machine_info": 11, "machineinfo": 11, "base_work_dir": [11, 26, 610], "log_filenam": [11, 26, 610], "At": [11, 26, 598, 610, 617, 618, 629, 632, 633, 656], "redirect": [11, 610], "work_dir_target": [12, 610], "out_nam": [14, 15, 17, 23, 24, 25, 610], "render": [17, 25, 610, 618], "available_cor": 18, "everi": [19, 595, 601, 610, 611, 613, 614, 616, 617, 618, 647, 653], "subtask": 21, "runtime_setup": [21, 29, 86, 96, 98, 105, 111, 113, 120, 126, 131, 142, 144, 149, 154, 161, 168, 170, 177, 179, 187, 192, 198, 201, 203, 247, 250, 259, 262, 268, 307, 335, 404, 411, 419, 574, 583], "consist": [24, 61, 231, 496, 594, 601, 610, 617, 618, 619, 624, 642, 653, 656], "decomposit": [26, 156, 228, 239, 245, 614, 622, 624, 626, 628, 629, 635], "stdout_logg": 26, "goe": [26, 610, 617, 618], "regardless": [26, 598], "statu": 26, "prior": [28, 610], "constrain_resourc": [29, 86, 96, 98, 105, 111, 113, 120, 126, 131, 142, 144, 149, 154, 161, 168, 170, 177, 179, 187, 192, 198, 201, 203, 247, 250, 259, 262, 268, 307, 335, 404, 411, 419, 574, 583], "step_path": 34, "datestamp": 34, "dry": [34, 269, 272, 274, 276, 596, 648, 652, 656], "meta": 36, "link_nam": 38, "stackoverflow": 38, "55742015": 38, "7728169": 38, "symbol": [38, 610], "fileexistserror": 38, "try": [38, 610, 611, 612, 613, 617, 618, 619, 650, 662], "isadirectoryerror": 38, "decomposition_test": [42, 209, 210, 610, 622, 662], "decompositiontest": [42, 211, 213, 214, 215, 220, 610], "turquois": [42, 637, 662], "mhoffman": 42, "ndarrai": [44, 51, 52, 57, 461, 547, 550, 555, 584, 585], "static": [45, 46, 618], "rule": 45, "thumb": 45, "close": [46, 156, 236, 601, 615, 649], "subclass": [47, 50, 51, 52, 56], "jigsawpi": [55, 610], "jigsaw_jig_t": 55, "finish": 56, "mesh_filenam": [59, 650], "graph_filenam": [59, 239, 240, 609], "graph_fil": [60, 61], "interact": [63, 598, 637, 640, 641, 662], "batch": [63, 637], "slurm_job_id": 63, "substep": 65, "cpus_per_nod": 66, "step_is_subprocess": 68, "is_test_cas": 69, "steps_not_to_run": 69, "mpas_model_path": [70, 71, 73], "cached_step": 70, "rundir2": 74, "norm": [75, 549, 551, 659], "infin": [75, 659], "toler": [75, 209, 622, 629], "exclud": [75, 650, 662], "assess": [79, 178, 208, 356, 598, 623, 631], "timestep": [79, 208, 622, 623], "calv": [79, 80, 82, 156, 162, 164, 208, 213, 220, 445, 604, 622, 623, 629, 656], "pre": [79, 193, 199, 214, 623, 628, 629, 635], "veloc": [79, 82, 95, 97, 99, 104, 141, 148, 150, 153, 156, 162, 164, 208, 219, 220, 366, 397, 466, 474, 595, 598, 599, 601, 603, 604, 609, 610, 612, 618, 622, 623, 624, 625, 628, 629, 635, 646, 649, 650, 651, 653, 657, 659, 661, 662], "velo": [80, 82, 622], "config_adaptive_timestep_calvingcfl_fract": [80, 208], "calvingdtconverg": [80, 208], "calv_dt_frac": 82, "dt": [82, 286, 609, 623, 649, 657], "mesh_fil": [82, 164, 391, 392], "twice": [82, 87, 99, 114, 150, 164, 171, 194, 204], "mismip": [82, 193, 194, 197, 219, 622, 634, 656], "humboldt": [82, 207, 216, 621, 622, 623, 631], "thwait": [82, 207, 216, 621, 622, 631], "specified_calving_veloc": [82, 164, 622, 623], "eigencalv": [82, 164, 622], "von_mises_stress": [82, 164, 622], "fo": [82, 95, 97, 99, 104, 141, 148, 150, 153, 156, 162, 164, 208, 213, 219, 220, 610, 622, 624, 625, 628, 629, 635], "circular": [84, 85, 624, 658], "four": [85, 95, 110, 156, 228, 610, 656, 658], "input_dir": [91, 106, 180], "velo_solv": [95, 97, 99, 104, 141, 148, 150, 153, 156, 162, 164, 213, 610], "sia": [95, 97, 99, 104, 141, 148, 150, 153, 156, 162, 164, 213, 610, 612, 622, 625, 628], "segment": [97, 112, 148, 162, 169, 202, 598], "thermal_solv": [110, 112], "enthalpi": [110, 112, 124, 129, 134, 138, 211, 212, 626, 627], "formul": [110, 112], "thermodynam": [110, 112, 622], "standardexperi": [121, 211], "kleiner": [124, 129, 212, 627], "benchmark": [124, 129, 134, 138, 212, 627], "enthalpybenchmark": [124, 129, 212], "sheet": [141, 148, 212, 213, 215, 444, 625, 626, 627, 628, 630, 642, 650, 656], "eight": 141, "high": [143, 611, 638, 641, 650, 656, 658, 661], "basal": [143, 212, 624, 626, 627, 628, 629, 632, 633, 635], "friction": [143, 466, 474, 598, 624, 628, 629, 632, 633, 635, 650], "optim": [143, 628, 629, 632, 633, 635], "definit": [146, 610, 616, 617, 618], "region": [146, 214, 217, 218, 598, 600, 615, 619, 650, 652, 653, 656, 661], "observ": [146, 375, 377, 391, 392, 600, 615, 632, 633, 652], "flow": [146, 607, 625, 648, 649, 656, 657, 659], "speed": [146, 628, 629, 632, 633, 635], "distanc": [146, 445, 617, 628, 629, 632, 633, 635, 647, 655, 661], "margin": [146, 628, 629, 632, 633, 635], "20km": [150, 609, 646, 661, 664], "calving_law": [156, 162, 164], "damag": [156, 162, 164, 629], "face_melt": [156, 162, 164], "law": [156, 162, 164, 622, 623, 629], "face": [156, 162, 164], "melt": [156, 162, 164, 468, 474, 598, 604, 642, 650, 653, 656], "proc_list": 156, "pair": [156, 549, 629, 659], "count": [156, 200, 598, 616, 650], "3km": [156, 162, 164], "forcing_fil": [164, 397], "damagecalv": [164, 622], "ismip6_retreat": [164, 622], "radial": [166, 167, 169, 171, 176, 215, 624, 625, 630], "symmetr": [166, 167, 169, 171, 176, 215, 624, 625, 626, 630, 655], "hydrologi": [166, 215, 610, 625], "hydrolog": [167, 169, 171, 176, 215, 630], "three": [167, 240, 617, 618, 628, 631, 635, 641, 650, 659], "hydroradi": [167, 176, 178, 215], "exact": [174, 178, 215, 597, 605, 607, 611, 630], "precomput": 174, "steadi": [176, 215, 630, 656], "reach": [176, 656], "drift": 178, "kogebugt": [191, 218], "smoke": [197, 219, 598, 634, 635], "14km": [199, 635], "landice_model": [207, 610, 612, 619], "core_path": [207, 210, 594, 610, 619], "submodul": [207, 594, 610, 612, 617, 618, 662], "guarante": [207, 594, 612], "recurs": [207, 594, 611, 612, 617, 618, 662], "calving_dt_converg": [207, 216, 621, 631], "circular_shelf": [207, 216, 621, 622, 631, 662], "hydro_radi": [207, 216, 621, 622, 631, 663], "kangerlussuaq": [207, 216, 621, 631], "koge_bugt_": [207, 216, 621, 631], "mismipplu": [207, 216, 621, 631], "physic": [208, 617, 622, 623, 629, 631, 657], "addition": [208, 209, 210, 211, 212, 215, 595, 596, 598, 601, 603, 604, 606, 609, 629, 636, 637, 638, 639, 640], "globalstat": [208, 650], "hardcod": 208, "smaller": [208, 228, 598, 662], "cost": [208, 634], "analyz": [208, 491, 606, 616, 659], "annoy": 208, "occasion": 208, "fine": [208, 596, 610, 617, 618], "logic": [208, 617, 647, 655], "circularshelf": 209, "horizont": [209, 210, 211, 212, 215, 228, 409, 441, 446, 448, 450, 453, 456, 458, 476, 487, 595, 598, 599, 601, 603, 616, 618, 625, 626, 630, 642, 647, 648, 650, 651, 652, 653, 655, 656, 657, 661], "planar_hex": [209, 210, 211, 212, 215, 595, 596, 601, 603, 604, 609, 610, 617, 618], "make_planar_hex_mesh": [209, 210, 211, 212, 215, 595, 596, 601, 603, 604, 609, 610, 617, 618], "privat": [209, 210, 211, 212, 215, 616], "_setup_circular_shelf_initial_condit": 209, "circular_shelf_viz": [209, 624], "200": [209, 210, 211, 212, 609, 610, 617, 625, 626, 627, 656], "ureconstructx": 209, "ureconstructi": 209, "2000": [210, 601, 610, 625, 626, 653, 656, 661], "durat": [210, 212, 213, 214, 215, 219, 220, 441, 484, 595, 596, 598, 601, 603, 610, 625, 650, 655, 657], "dome_varres_grid": [210, 610], "server_base_url": [210, 619], "_setup_dome_initial_condit": [210, 212], "dome_viz": [210, 610, 625], "former": [210, 211, 213, 215, 220], "25": [211, 212, 599, 603, 618, 626, 648, 655, 658], "globalstatsoutput": [211, 601, 604], "runexperi": 211, "letter": [211, 617, 618], "_setup_eismint2_initial_condit": 211, "000": [211, 212, 215, 618, 626, 627, 630], "basaltemperatur": 211, "heatdissip": 211, "thermal": [211, 212, 466, 474, 626, 658], "restarttest": [211, 213, 214, 215, 220, 595, 598, 601, 610], "et": [212, 215, 617, 621, 625, 626, 627, 630, 644, 647, 648, 649, 655, 656, 658, 659, 661], "al": [212, 215, 617, 621, 625, 626, 627, 630, 644, 647, 648, 649, 655, 656, 658, 659, 661], "2015": [212, 215, 617, 627, 630, 647, 655, 658, 661], "air": [212, 626, 627], "temper": 212, "heat": [212, 440, 466, 627, 653, 656], "basal_heat_flux": [212, 627], "042": [212, 627], "k": [212, 228, 618, 626, 627, 644, 651], "surface_air_temperatur": [212, 627], "243": [212, 627], "100": [212, 468, 598, 601, 606, 609, 617, 618, 622, 626, 627, 644, 656, 658, 661], "phase1_surface_air_temperatur": [212, 627], "phase2_surface_air_temperatur": [212, 627], "268": [212, 627], "150": [212, 627, 649, 658, 659], "phase3_surface_air_temperatur": [212, 627], "analyt": [212, 276, 596, 599, 608, 618, 624, 625, 648, 651, 658, 660, 663], "mat": [212, 610], "400": [212, 627], "270": [212, 627], "dai": [213, 220, 260, 276, 432, 510, 524, 538, 562, 595, 597, 598, 603, 605, 607, 610, 617, 628, 635, 647, 648, 649, 650, 655, 656, 661], "coars": [213, 220, 628, 635, 650, 656], "20": [213, 260, 432, 595, 598, 601, 603, 604, 609, 610, 617, 628, 647, 648, 653, 655, 656, 658, 659, 661], "albany_input": [213, 219], "yaml": [213, 219], "gis20km": 213, "210608": [213, 220], "smoketest": [213, 219, 610], "highresmesh": [213, 220], "glacier": [214, 217, 220, 622, 629, 632, 634, 635], "meshgen": [214, 217, 218], "restartn_test": 214, "plu": [214, 614, 629], "_setup_hydro_radial_initial_condit": 215, "thin": [215, 228, 630, 650, 652, 656], "numer": [215, 228, 610, 642], "bueler": [215, 625, 630], "iscontrol": 215, "hydro_radial_viz": [215, 630], "spinuptest": 215, "steadystatedrifttest": 215, "month": [215, 604, 626, 629, 630, 643, 650, 654, 656, 661], "waterthick": 215, "waterpressur": 215, "500m": [218, 633], "koge": [218, 633], "bugt": [218, 633], "surfacespe": 220, "load_dev_compass_1": [221, 222, 223, 224, 225, 226, 617, 618], "0_anvil_intel_impi": [221, 226], "sh": [221, 222, 223, 224, 225, 226, 612, 613, 617, 618, 636, 637, 638, 639, 640, 662], "openmpi": [221, 226, 612, 615, 636, 638, 662], "mvapich": [221, 226, 636, 637, 641], "impi": [221, 226, 636, 637, 638, 639, 641], "ifort": [221, 226, 636], "ve": [221, 222, 223, 225, 610, 617], "0_anvil_gnu_mvapich": 221, "gfortran": [221, 222, 223, 226, 612, 636, 637, 638], "modulefil": 222, "bashrc": 222, "pleas": [222, 611, 612, 616, 617], "unus": [222, 612], "0_badger_intel_impi": 222, "0_badger_gnu_mvapich": 222, "0_chrysalis_intel_impi": [223, 617, 618], "0_chrysalis_gnu_openmpi": 223, "soon": 224, "0_compy_intel_impi": 224, "architectur": 225, "0_cori": 225, "haswell_intel_mpt": 225, "nersc": [225, 226, 640], "haswell_gnu_mpt": 225, "load_compass_env": [226, 612, 662], "right": [226, 228, 598, 610, 612, 617, 618, 619, 623, 644, 649, 661, 662], "gnu": [226, 612, 639, 641, 662], "lib": 226, "intel": [226, 612, 617, 618, 641], "mpt": [226, 640], "compymcnodefac": [226, 641], "pretti": [226, 610, 611, 617, 619], "mpich": [226, 612, 615, 662], "forg": [226, 615, 662], "linux": [226, 612, 641], "configure_compass_env": [226, 612, 613, 617, 618], "conda_path": [226, 612], "osx": [226, 641], "clang": [226, 612], "0_": 226, "expand": [228, 644], "grid_1d": 228, "generate_1d_grid": 228, "star": [228, 408, 409, 417, 446, 450, 591, 593, 601, 604, 617, 647, 648, 653, 655, 656, 657, 661, 664], "init_vertical_coord": [228, 617], "minlevelcel": [228, 586, 588, 589, 590, 591, 592, 593], "maxlevelcel": [228, 586, 587, 588, 589, 590, 591, 592, 593, 610, 618], "cellmask": [228, 586, 589, 592, 593], "zmid": [228, 586, 592, 593], "restingthick": [228, 586, 591, 592, 593, 610, 618], "bottomdepth": [228, 586, 587, 589, 590, 591, 592, 593, 610, 617, 618], "spheric": [228, 233, 597, 598, 608, 649, 650, 652, 660], "cullmeshstep": [228, 598], "cull_mesh": [228, 233], "natur": [228, 236, 650], "earth": [228, 236, 650], "coverag": [228, 236, 622], "north": [228, 236, 598, 647, 650], "antarct": [228, 236, 598, 619, 642, 650, 656], "ground": [228, 236, 444, 604, 624, 635, 650, 656], "bedmachineantarctica": [228, 236, 650], "transect": [228, 236, 461, 598, 619, 650], "passag": [228, 236, 650], "with_critical_passag": [228, 236], "seed": [228, 236, 240], "flood": [228, 236, 650], "lock": [228, 236], "floodplainmeshstep": 228, "preserve_floodplain": [228, 233, 236, 237, 405], "srtm15_plus_earth_relief_15": 228, "elev": [228, 236, 586, 592, 593, 604, 644, 650, 652], "floodplain_elev": [228, 650, 652], "inject_bathymetri": 228, "inject_preserve_floodplain": 228, "compute_haney_numb": 228, "1991": [228, 642], "measur": [228, 650, 658], "gradient": [228, 617, 642, 647, 655, 658, 661], "tilt": 228, "r_": 228, "x1": 228, "frac": [228, 610, 617, 644, 661], "z_": [228, 644], "textrm": 228, "c_2": 228, "c_1": 228, "edg": [228, 230, 650, 653], "adjac": [228, 644, 653], "middl": [228, 586, 592, 593, 604, 656], "boussinesq": 228, "adjust_ssh": 228, "correct": [228, 612], "imbal": 228, "period": [228, 366, 375, 479, 487, 595, 596, 599, 601, 603, 605, 609, 610, 617, 618, 623, 647, 648, 652, 653, 655, 657, 661], "hour": [228, 596, 598, 599, 604, 610, 637, 640, 642, 656, 657, 662], "translat": 228, "compens": [228, 642], "repeat": 228, "fix": [228, 240, 467, 597, 604, 610, 653, 656], "elimin": 228, "substanti": [228, 612, 617], "prevent": [228, 440, 604, 610, 642, 656], "caus": [228, 612, 644], "instabl": 228, "agnost": 228, "light": [228, 658, 661], "buoyanc": [228, 240, 609], "isopycn": [228, 240], "passiv": [228, 240, 504], "remap_particl": 228, "remap": [228, 239], "plot_initial_st": 228, "histogram": [228, 241], "bottom": [228, 467, 586, 587, 588, 589, 590, 591, 592, 593, 596, 598, 604, 609, 617, 619, 644, 647, 648, 651, 653, 655, 656, 657, 658, 661], "depth": [228, 354, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 598, 599, 609, 617, 618, 619, 644, 647, 650, 651, 653, 655, 656, 657, 658, 661], "distribut": [228, 597, 605, 606, 607, 609, 650, 658, 660, 661], "plot_vertical_grid": 228, "bound": [228, 661], "ds_mesh": 230, "layer_thick": 230, "show_progress": 230, "rx1": 230, "bar": [230, 236, 463, 465], "haney_edg": 230, "haney_cel": 230, "iteration_count": 231, "modify_mask": 232, "base_mesh_step": 233, "do_inject_bathymetri": 233, "sphericalbasestep": [233, 598], "criteria": 233, "with_cav": 236, "custom_critical_passag": 236, "custom_land_blockag": 236, "use_progress_bar": 236, "process_count": 236, "blockag": [236, 650], "geojson": [236, 618], "cellseedmask": 236, "floodplain": [236, 652], "problemat": [236, 610], "init_filenam": [239, 240, 354, 609], "particle_filenam": [239, 240, 609], "posit": [239, 240, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 604, 635, 644, 661], "goal": 239, "currentblock": 239, "compli": 239, "nearest": [239, 392, 649], "neighbor": [239, 650], "form": [239, 240, 611, 618, 661, 663], "n_vert_level": 240, "vert_seed_typ": 240, "n_buoy_surf": 240, "pot_dens_min": 240, "1028": [240, 658], "pot_dens_max": 240, "1030": [240, 658], "spatial_filt": 240, "downsampl": 240, "seed_cent": 240, "seed_vertex": 240, "add_nois": 240, "cfl_min": 240, "005": 240, "densecent": 240, "southernoceanplanar": 240, "southernoceanxyz": 240, "spatial": 240, "filter": 240, "amg": 240, "epsilon": [240, 651], "vertex": 240, "gaussian": [240, 605, 657, 660], "nois": 240, "cfl": [240, 623], "perturb": [240, 647, 649, 655], "input_file_nam": 241, "output_file_nam": 241, "grid_filenam": 242, "out_filenam": [242, 585], "shorter": [257, 417, 622, 626, 646], "energi": [260, 432, 610, 617, 647, 655], "slope": [269, 272, 274, 276, 596, 642, 648, 653, 658, 659, 661], "wet": [269, 652], "coord_typ": [270, 272, 274, 408, 409, 417, 596, 617, 644, 647, 648, 653, 655, 656, 657, 661], "sigma": [270, 272, 274, 596, 648], "single_lay": [270, 596, 648], "dryingslop": [270, 596], "damping_coeff": [272, 276, 596], "rayleigh": [272, 276, 596, 598, 648, 650], "damp": [272, 276, 596, 598, 648, 650], "coeffici": [272, 276, 596, 609, 618, 648, 651, 658, 661], "rom": [276, 596, 648], "datatyp": 276, "cosinebel": [282, 285, 289, 597, 616], "rmsevalu": 283, "squar": [283, 491, 597, 605, 657], "ncell": [283, 491, 598, 610, 617, 618], "hh": [286, 511, 525, 539, 563], "ss": [286, 511, 525, 539, 563], "member": [292, 297, 305, 308, 391, 502, 572, 576, 598, 600, 604, 606, 609, 618, 619, 646, 650, 652], "timeseriesstatmonthli": 297, "daili": [297, 650], "stage": [303, 610, 650, 656], "seaic": [305, 598, 650], "diagnost": [305, 308, 598, 619, 624, 636, 637, 639, 640, 641, 650, 662], "meridion": [305, 308, 598, 647, 655, 661], "overturn": [305, 308, 456, 469, 598, 604, 656], "circul": [305, 308, 598, 656], "filesfore3sm": [308, 310, 312, 314, 316, 598, 610], "ntasks_from_config": 318, "min_tasks_from_config": 318, "threads_from_config": 318, "biogeochemistri": [324, 327, 598, 617, 618], "init_subdir": 324, "2d": [330, 407, 409, 412, 415, 417, 420, 423, 439, 441, 453, 505, 519, 533, 557, 653], "output_filenam": 354, "short_mesh_nam": [355, 598], "long_mesh_nam": [355, 598], "turbul": [365, 366, 368, 370, 372, 425, 599, 617, 618, 651], "doubli": [366, 479, 487, 599, 618, 657], "storm": [375, 382, 388, 391, 397, 652], "station": [375, 377, 378, 391, 392, 600, 652], "frmt": 375, "datetim": [375, 610], "min_dat": [375, 377], "max_data": 375, "pointstats_fil": [375, 376, 391], "pointwisestat": [375, 376, 391, 392, 600, 652], "labl": 375, "legend": [375, 618], "obs_fil": 377, "obs_typ": 377, "max_dat": 377, "timeseri": [377, 600, 652], "station_fil": [378, 391], "contiain": 391, "pointstat": 391, "stations_fil": 392, "atmospher": [397, 598, 600], "wind": [397, 598, 600, 606, 652, 658, 661], "plot_interv": 397, "snap": [397, 398], "wind_fil": 397, "pres_fil": 397, "grid_fil": [397, 398], "data_fil": 398, "orig_data": 399, "interp_data": 399, "var_label": 399, "var_abrev": 399, "iceshelf2d": [409, 417, 601, 610, 611, 617, 618], "with_frazil": [412, 576, 579, 601, 646, 664], "cross": [423, 437, 461, 467, 604, 624, 655, 656], "gotm": [425, 594, 602, 617, 618, 645, 654], "internalwav": [426, 432, 435, 603], "in_forcing_fil": 440, "out_forcing_fil": 440, "out_forcing_link": 440, "evapor": [440, 604, 656], "isomip": [440, 441, 445, 446, 448, 450, 456, 458, 461, 473, 604, 656], "evaporationflux": 440, "seaicesalinityflux": 440, "seaiceheatflux": 440, "salt": 440, "northern": [440, 598, 604, 617, 647, 653, 655, 656, 661], "boundari": [440, 596, 598, 604, 605, 615, 628, 642, 647, 653, 655, 656, 661, 663], "spillwai": [440, 604], "rise": [440, 604, 653, 656], "run_dur": [441, 609], "time_varying_forc": [441, 446, 450], "ocean0": [441, 446, 448, 450, 456, 458, 461, 473, 604], "ocean1": [441, 446, 448, 450, 456, 458, 461, 473, 604], "ocean2": [441, 446, 448, 450, 456, 458, 461, 473, 604], "dsmesh": [444, 461, 473, 610, 617, 618], "dsgeom": 444, "min_ocean_fract": [444, 656], "bisicl": [444, 445, 604, 656], "process_input_geometri": [444, 604], "dsmask": 444, "regioncellmask": 444, "infilenam": 445, "outfilenam": 445, "filtersigma": 445, "minicethick": 445, "scale": [445, 604, 609, 615, 650, 651, 656, 658, 659, 661, 662], "geometri": [445, 604, 653, 656, 661], "scheme": [445, 604, 607, 652, 659], "vertical_coordin": [446, 450], "misomip1": 448, "isomipplu": [450, 604], "barotrop": [456, 464, 600, 604, 652, 656], "slice": 460, "monthli": 460, "infold": [461, 473], "streamfunctionfold": 461, "outfold": [461, 462, 473], "expt": [461, 464, 473, 626], "sectioni": 461, "showprogress": 461, "plotter": [461, 473], "hold": [461, 473], "folder": [461, 473], "streamfunct": [461, 464, 469, 656], "y": [461, 467, 595, 596, 598, 601, 603, 604, 609, 610, 617, 618, 640, 647, 648, 651, 653, 655, 656, 657, 661], "axi": [461, 610, 617, 623, 659], "plane": 461, "montli": 461, "oceanmask": 461, "cavitymask": 461, "oceanpatch": 461, "patchcollect": 461, "polygon": 461, "cover": [461, 604, 646, 650], "cavitypatch": 461, "horiz": 461, "vert": 461, "sectionmask": 461, "progressbar": 461, "framespersecond": 462, "mp4": [462, 648, 656], "movi": [462, 596, 604, 648, 656], "ffmpeg": 462, "da": [463, 465, 475], "nameintitl": [463, 465, 475], "vmin": [463, 464, 465, 468, 469], "vmax": [463, 464, 465, 468, 469], "cmap": [463, 465], "floor": [463, 470, 471, 472, 618, 644, 651, 653, 656], "nae": [463, 465], "subfold": [463, 465], "colorbar": [463, 464, 465, 468, 469], "colormap": [463, 465, 556], "color": [463, 465, 475], "chosen": [464, 610], "oceandomain": 465, "drive": [466, 474, 596], "halin": 466, "figsiz": [467, 475], "rate": [468, 474, 547, 555, 597, 604, 605, 607, 626, 642, 649, 650, 656, 657, 659], "sshmax": 474, "advect": [476, 487, 490, 493, 504, 597, 605, 607, 622, 646, 649, 657], "planar": [477, 479, 483, 487, 617, 657], "convergence_test_cas": 483, "convergencetestcas": 483, "rms_error": 491, "mesoscal": [495, 606, 650, 658], "profil": [496, 596, 598, 599, 601, 604, 606, 609, 613, 651, 656, 658, 661], "with_particl": [498, 502, 572, 576, 606, 609], "with_surface_restor": [498, 500, 502], "three_lay": [498, 500, 502, 606], "lagrangian": [498, 646, 658, 661], "restor": [498, 500, 502, 604, 656, 658, 661], "equilibrium": [498, 502, 572, 576, 626, 658], "continent": [498, 500, 502, 598, 650, 656, 658], "algorithm": [504, 610, 642, 660], "transport": [505, 519, 533, 557, 598, 607, 649, 659], "spheretransport": [505, 519, 533, 557], "correlatedtracers2d": [508, 510, 514, 516, 607, 659], "dt_minut": [510, 524, 538, 562], "minut": [510, 511, 524, 525, 538, 539, 562, 563, 595, 598, 599, 601, 603, 610, 617, 622, 647, 653, 659, 664], "24": [510, 524, 538, 562, 597, 598, 605, 649, 657, 659], "divergent2d": [522, 524, 528, 530, 607], "nondivergent2d": [536, 538, 542, 544, 607], "dlambda": [547, 549, 550, 555], "compute_error_from_output_ncfil": [547, 555], "tracer1": [547, 549, 550, 555, 659], "linfrat": [547, 555], "l2rate": [547, 555], "lev": 548, "netcdf4": [548, 553, 617, 619], "tcdata": [549, 554], "appx": [549, 555], "linf1": [549, 550], "linf2": [549, 550], "tracer2": [549, 550, 659], "linf3": [549, 550], "tracer3": [549, 550, 659], "l21": [549, 550], "l22": [549, 550], "l23": [549, 550], "filament": [549, 551, 659], "sec": [549, 649, 661], "lspt2012": [549, 551], "ax": [550, 551, 552], "tcname": [550, 551, 552, 553, 554, 555], "resval": [550, 551, 552, 555], "matplotlib": [550, 553, 556, 617, 618], "instanc": [550, 553, 617, 618], "u1": [552, 640], "o1": 552, "u2": 552, "o2": [552, 610], "u3": 552, "o3": 552, "shoot": [552, 659], "fig": [553, 610], "row": 553, "csv": [554, 659], "consol": 555, "compute_convergence_r": 555, "cmap_filenam": 556, "rgb": 556, "ncar": 556, "ncl": 556, "www": 556, "ucar": 556, "edu": 556, "graphic": 556, "color_table_galleri": 556, "shtml": 556, "usabl": 556, "rotation2d": [560, 562, 566, 568, 607, 659], "tos": 562, "zonal": [571, 609, 647, 650, 655, 661], "invari": [571, 601, 650], "southern": [571, 598, 609, 617, 647, 650, 655, 656, 661], "with_analysi": 576, "meter": [584, 585, 628, 629, 632, 633, 635, 653], "stretch": [586, 592, 593, 644], "midpoint": [586, 592, 593], "reftopdepth": [586, 589, 590, 592, 593], "ref": [586, 592, 593, 598, 650], "refzmid": [586, 592, 593, 610, 617], "refbottomdepth": [586, 587, 588, 589, 590, 592, 593, 610, 617, 618], "refinterfac": [586, 592, 593], "nvertlevel": [586, 592, 593, 610, 617, 644], "vertcoordmovementweight": [586, 592, 593, 610, 618], "movement": [586, 592, 593], "consider": [586, 592, 593], "sometim": [586, 592, 593, 610, 614, 618, 650], "partial": [587, 588, 617, 644, 647, 653, 655, 656, 657, 661], "seafloor": [587, 589, 590, 591, 644], "rest": [591, 616, 618, 644, 650], "unstretch": 591, "drying_slop": [594, 602, 645, 654], "hurrican": [594, 602, 645, 654], "ice_shelf_2d": [594, 602, 610, 617, 618, 642, 645, 646, 654, 664], "internal_wav": [594, 602, 645, 654], "isomip_plu": [594, 602, 645, 654], "planar_converg": [594, 602, 610, 645, 654], "soma": [594, 602, 645, 654], "sphere_transport": [594, 602, 645, 654], "ziso": [594, 602, 610, 611, 617, 618, 644, 645, 646, 654, 663, 664], "spherical_harmonic_transform": [594, 602, 645, 654], "momentum": [595, 603], "diffus": [595, 603, 622, 625, 646, 658], "decomptest": [595, 598], "threadstest": [595, 598], "frequenc": [595, 601], "rpetest": [595, 603, 610, 617], "144": [595, 598, 610, 617], "intens": [595, 603], "drag": [596, 618, 648, 651], "tidal": [596, 648], "coord": 596, "plug": 596, "background": [596, 611, 618, 649, 655, 657], "emploi": [596, 610], "tailor": 596, "0025": [596, 648], "evolut": [596, 604, 625], "grain": 596, "interv": [596, 600, 610, 652], "accept": 596, "globalconverg": [597, 617, 618], "studi": [597, 605, 615, 617, 618, 649, 650, 657, 658, 659], "globe": [597, 605, 649, 650, 659], "ico": [597, 649], "shape": [597, 605, 607, 649], "blob": [597, 605, 657], "dt_per_km": [597, 649], "rmse": [597, 605], "realist": [598, 610, 615, 635, 642, 650, 652, 653, 658, 663], "gitconfig": [598, 619, 650, 652], "enter": [598, 619, 650, 652], "get_e3sm_mesh_nam": 598, "mesh_prefix": 598, "kml": 598, "e3smv": 598, "qu240e2r1": [598, 650], "qu240kml16e3smv2r1": [598, 650], "forwardtestcas": 598, "performancetest": 598, "land_ice_flux": [598, 604], "forward_": [598, 650], "focus": [598, 650, 658], "init_ntask": [598, 650, 652], "init_min_task": [598, 650, 652], "forward_ntask": [598, 650, 652], "forward_min_task": [598, 650, 652], "subdivid": 598, "asid": 598, "pure": 598, "ec30to60mesh": 598, "refin": [598, 600, 650, 652], "atlant": [598, 650], "pacif": [598, 650], "arctic": [598, 619, 650], "so12to60": 598, "so12to60mesh": 598, "1296": 598, "band": 598, "cycl": [598, 650], "gulf": 598, "wc14mesh": 598, "720": [598, 656], "america": 598, "628": 598, "uk": [598, 650], "metoffic": [598, 650], "estim": [598, 642, 650], "biogeochemsitri": 598, "stress": [598, 642, 661], "shortwav": 598, "ecosystem": [598, 636, 650], "sshadjust": [598, 601, 604], "closer": [598, 616], "clearli": 598, "wrong": 598, "half": [598, 617, 647, 653, 655, 656, 661], "analysistest": 598, "dailyoutputtest": 598, "timeseriesstatsdaili": [598, 650], "timeseriesstatsmonthli": [598, 650], "averag": [598, 604, 642, 650, 656], "rapid": [598, 622], "artifici": 598, "global_ocean_mesh": 598, "d_": [598, 610], "strong": [598, 617, 655, 656], "1e": [598, 618, 661], "jinja": 598, "ec30to60dynamicadjust": 598, "so12to60dynamicadjust": 598, "damped_adjustment_3": 598, "weaken": 598, "4e": 598, "wc14dynamicadjust": 598, "damped_adjustment_6": 598, "prepar": [598, 650, 652], "assembled_fil": [598, 650], "ocean_initial_condit": 598, "oceaninitialcondit": 598, "inputdata": 598, "ocn": 598, "mesh_short_nam": 598, "_no_xtim": 598, "ocean_graph_partit": 598, "oceangraphpartit": 598, "wide": [598, 613, 653, 658], "min_graph_s": 598, "max_graph_s": 598, "power": [598, 657], "1200": [598, 609, 625], "core_count": 598, "seaice_initial_condit": 598, "seaiceinitialcondit": 598, "keep_var": 598, "areacel": 598, "cellsoncel": 598, "edgesoncel": 598, "fcell": [598, 610, 617], "indextocellid": 598, "latcel": 598, "loncel": 598, "meshdens": 598, "nedgesoncel": 598, "verticesoncel": 598, "angleedg": 598, "cellsonedg": 598, "dcedg": 598, "dvedg": 598, "edgesonedg": 598, "fedg": [598, 610, 617], "indextoedgeid": 598, "latedg": 598, "lonedg": 598, "nedgesonedg": 598, "verticesonedg": 598, "weightsonedg": 598, "xedg": [598, 610, 617], "yedg": 598, "zedg": 598, "areatriangl": 598, "cellsonvertex": 598, "edgesonvertex": 598, "fvertex": [598, 610, 617], "indextovertexid": 598, "kiteareasonvertex": 598, "latvertex": 598, "lonvertex": 598, "xvertex": [598, 610, 617], "yvertex": 598, "zvertex": 598, "landicemask": [598, 656], "cice": 598, "scrip": [598, 618, 619, 650], "coupl": [598, 613, 615, 626, 642, 650], "nomask": 598, "diagnostics_fil": 598, "diagnosticsfil": 598, "aggreg": 598, "get_aggregator_by_nam": 598, "region_group": 598, "basin": [598, 606, 658], "subbasin": 598, "ismip6": 598, "mpas_analysi": 598, "region_mask": 598, "ref_dat": 598, "moc": 598, "repres": [598, 617, 618, 644, 649, 650, 653], "_moc_masks_and_transect": 598, "stereograph": [598, 619, 650], "map_": 598, "_to_0": 598, "5x0": 598, "5degree_bilinear": 598, "_to_6000": 598, "0x6000": 598, "0km_10": 598, "0km_antarctic_stereo_bilinear": 598, "0km_arctic_stereo_bilinear": 598, "k\u00e4rn\u00e4": [599, 651], "cm": 599, "ever": [599, 611], "tropic": [600, 652], "cyclon": [600, 652], "dequ120at30cr10rr2": 600, "dequ120at30cr10rr2mesh": 600, "inherit": [600, 611], "coastal_tool": 600, "coastal_refined_mesh": 600, "interpolateatmforc": 600, "cfsv2": [600, 652], "reanalysi": [600, 652], "hourli": [600, 652], "createpointstatsfil": 600, "noaa": [600, 652], "usg": [600, 652], "squash": [601, 604, 609, 644, 656], "config_use_frazil_ice_form": 601, "config_frazil_maximum_depth": 601, "dirti": 601, "cut": 601, "tendaytest": 603, "timeseriesstatsmonthlyoutput": 604, "update_evaporation_flux": 604, "mimic": [604, 616], "indefinit": 604, "due": [604, 623, 656], "freshwat": [604, 646, 650, 653], "factor": [604, 648, 658], "interpolate_ocean_mask": 604, "interpolate_geom": 604, "geometr": 604, "bottomdepthobserv": 604, "bedrock": 604, "oceanfracobserv": 604, "landicefract": 604, "smootheddraftmask": 604, "runawai": 604, "incom": 604, "meltwat": [604, 656], "landicepressureforc": 604, "landicedraftforc": 604, "isomip_plus_forc": [604, 656], "time_varying_ocean0": 604, "consecut": 604, "land_ice_forc": 604, "front": [604, 637, 661], "held": [604, 610], "landicefractionforc": 604, "readi": [604, 610, 617, 618, 640], "fuller": 604, "repeatedli": [604, 623, 656], "plot_streamfunct": [604, 656], "isomip_plus_viz": [604, 656], "frame": [604, 648, 656], "deepest": [604, 609, 644], "timeseriesbelow300m": 604, "correctli": 604, "resolv": [604, 652], "oceantest": 604, "planarconverg": 605, "horizontaladvect": 605, "dt_1km": [605, 657], "surface_restor": 606, "radiu": [606, 626, 649], "accord": [606, 609, 650, 662], "100layere3smv1": [606, 609, 650, 661], "32km": [606, 658], "min_den": 606, "min_particle_dens": [606, 658], "max_den": 606, "max_particle_dens": [606, 658], "nsurf": 606, "surface_count": [606, 658], "build_particle_simpl": 606, "f_grid": 606, "f_name": 606, "f_decomp": 606, "buoysurf": 606, "somatestcas": 606, "solid": [607, 647, 649, 653, 655], "bodi": [607, 649], "rotat": [607, 649, 659], "build_mesh": [607, 608], "build_spherical_mesh": [607, 608], "timestep_munut": 607, "rotation_2d_converg": 607, "pdf": 607, "_sol": 607, "diverg": [607, 659], "nondivergent2d_converg": 607, "divergent2d_converg": 607, "correlatedtracers2d_triplot": 607, "quconverg": 608, "harmon": [608, 660], "transform": [608, 660], "implemnt": 608, "runnin": 608, "test_sht": 608, "ey": 609, "toward": 609, "2500": [609, 618, 644, 651, 658, 661], "cores_with_particl": 609, "min_cores_with_particl": 609, "btr_dt": 609, "mom_del4": 609, "0e10": 609, "80": 609, "130": 609, "25e9": 609, "5km": [609, 618, 646, 653, 656, 664], "300": [609, 616, 649, 657, 658, 659, 661], "09": 609, "8e8": 609, "2100": 609, "900": 609, "8e7": 609, "zisotestcas": 609, "withfrazil": 609, "initial_temp_t1": [609, 661], "tanh": [609, 644, 661], "initial_temp_t2": [609, 661], "initial_temp_h1": [609, 661], "initial_temp_mt": [609, 661], "green": 610, "blue": [610, 636, 662], "orang": 610, "red": 610, "laid": 610, "among": [610, 612, 617, 618], "organiz": 610, "encompass": 610, "perspect": 610, "add_test_group": [610, 611, 617, 618], "univers": 610, "mix": [610, 650, 655], "2000m": [610, 622, 625, 628, 662], "halfar": [610, 625], "cism": [610, 625], "dome_typ": [610, 625], "closest": [610, 625, 652], "put_origin_on_a_cel": [610, 625], "hydro": [610, 625], "time_slic": [610, 624, 625, 630], "save_imag": [610, 624, 625, 626, 630], "hide": [610, 624, 625, 626, 630], "hide_fig": [610, 624, 625, 626, 630], "add_test_cas": [610, 617, 618], "variable_resolut": [610, 622, 662], "talk": 610, "complic": [610, 611, 612, 617, 618], "access": [610, 611, 612, 617, 618, 636, 640, 641], "0200": 610, "00_00": [610, 618], "calcul": 610, "enumer": [610, 617], "rpe_test_": [610, 617], "_nu_": [610, 617], "deliber": 610, "fairli": [610, 611, 612, 617, 653, 656], "clumsi": [610, 611, 616], "rpe_test_1_nu_1": [610, 647, 655], "rpe_test_2_nu_5": [610, 647, 655], "po4": 610, "no3": 610, "sio3": 610, "nh4": 610, "fe": [610, 637], "dic": 610, "dic_alt_co2": 610, "alk": 610, "dofe": 610, "dop": 610, "dopr": 610, "donr": 610, "zooc": 610, "spchl": 610, "spc": 610, "spfe": 610, "spcaco3": 610, "diatchl": 610, "diatc": 610, "diatf": 610, "diatsi": 610, "diazchl": 610, "diazc": 610, "diazf": 610, "phaeochl": 610, "phaeoc": 610, "phaeof": 610, "dm": 610, "dmsp": 610, "prot": 610, "poli": 610, "lip": 610, "adjusted_init": 610, "unwant": 610, "outer": 610, "inner": [610, 617, 618], "reli": [610, 617], "question": [610, 619], "neglig": [610, 642, 653], "precis": 610, "mesh_cpus_per_task": 610, "mesh_min_cpus_per_task": 610, "write_netcdf": [610, 617, 618], "convers": [610, 617, 618], "generate_grid": 610, "nonperiodic_x": [610, 617, 618], "nonperiodic_i": [610, 617, 618], "graphinfofilenam": [610, 617, 618], "use_dist": [610, 617, 647, 655], "gradient_width_dist": [610, 617, 647, 655], "gradient_width_frac": [610, 617, 647, 655], "bottom_temperatur": [610, 617, 647, 655], "surface_temperatur": [610, 617, 647, 655, 658], "temperature_differ": [610, 617, 647, 655], "coriolis_paramet": [610, 617, 647, 655, 656], "len": 610, "ones_lik": [610, 617], "xmin": [610, 617], "xmax": [610, 617], "ymin": [610, 617], "ymax": [610, 617], "ymid": [610, 617], "xperturbmin": [610, 617], "xperturbmax": [610, 617], "perturbationwidth": [610, 617], "yoffset": [610, 617], "sin": [610, 617, 647, 648, 655], "pi": [610, 617, 644, 648, 649], "temp_vert": [610, 617], "logical_and": [610, 617], "transpos": [610, 617], "3rd": [610, 617, 659], "crest": [610, 617], "expand_dim": [610, 617], "dim": [610, 617], "broadcast": [610, 617], "zeros_lik": [610, 617, 618], "nedg": [610, 617], "dtype": 610, "harm": 610, "likewis": [610, 617], "arisen": 610, "omit": [610, 618, 662], "open_dataset": [610, 618], "isn": [610, 611, 617, 618], "mesh_path": 610, "initial_state_target": 610, "entha_analy_result": 610, "ourselv": 610, "firewal": 610, "slate": 610, "output_fil": 610, "commonli": [610, 634], "expens": [610, 625], "word": 610, "clariti": 610, "ff": 610, "91": 610, "transfer": 610, "design": [610, 611, 615, 616, 641, 650, 657, 658], "substitut": 610, "beforehand": 610, "update_namelist_at_runtim": [610, 618], "pio_num_iotask": 610, "pio_strid": 610, "mostli": [610, 617, 618, 650], "synchron": [610, 615], "update_streams_at_runtim": 610, "timedelta": 610, "3600": 610, "delta": [610, 644], "03d": 610, "02d": 610, "forgotten": 610, "dig": [611, 619], "adher": [611, 617, 618], "strictli": [611, 617], "pep8": 611, "bot": [611, 644], "violat": 611, "editor": 611, "pycharm": [611, 617, 618], "spyder": 611, "linter": 611, "flake8": 611, "discourag": 611, "reformat": 611, "autopep8": 611, "undesir": 611, "util": 611, "lint": 611, "wildcard": 611, "vim": [611, 617, 618], "plugin": 611, "id": 611, "why": [611, 618, 622], "sound": 611, "subpackag": 611, "understand": [611, 619], "downstream": 611, "clu": 611, "intro": 611, "hidden": 611, "shortcut": [611, 662], "referenc": [611, 616, 617], "ll": [611, 617, 618, 640], "dot": 611, "charact": 611, "unix": [611, 615], "mayb": 611, "machine_config": 611, "endswith": 611, "splitext": 611, "exactli": [611, 612, 617, 618, 622, 644, 646], "visa": 611, "versa": 611, "comfort": [611, 617, 618], "orient": 611, "program": [611, 619], "felt": 611, "hesit": 611, "harder": 611, "outcom": 611, "augment": 611, "compos": [611, 653, 656], "dens": 611, "worth": [611, 617], "endeavor": 611, "took": 611, "138": 611, "bash": [612, 613, 662], "ksh": 612, "mac": [612, 615], "csh": 612, "tcsh": 612, "temporarili": 612, "obtain": [612, 637], "recogn": 612, "miniconda3": [612, 617, 618, 641, 662], "permiss": 612, "anyon": 612, "person": [612, 613], "base_path_to_install_or_update_conda": 612, "with_albani": 612, "with_netlib_lapack": 612, "with_petsc": 612, "flavor": 612, "login": [612, 637, 640], "troubl": 612, "recognit": 612, "trilino": 612, "spack": [612, 636, 637, 638, 639, 640, 641], "downsid": 612, "unneed": 612, "workstat": 612, "deploy": 612, "touch": 612, "miniconda": [612, 641, 662], "update_speck": 612, "reinstal": 612, "scorpio": [612, 641, 662], "esmf": [612, 640, 662], "load_": 612, "encod": 612, "load_dev_compass_": 612, "dev_compass_": [612, 613], "safest": 612, "rerun": 612, "load_dev_compass": 612, "echo": 612, "rememb": 612, "recreat": [612, 613], "incorrect": 612, "pip": 612, "extra": [612, 658], "wih": 612, "env_onli": 612, "mpas_make_target": [612, 662], "scientif": [612, 650, 658, 661, 662], "grizzli": 612, "situat": [612, 617, 618, 662], "platform": [612, 637, 662], "wiki": [612, 662], "workdir": [612, 662], "es3m": 612, "mkdir": 612, "fetch": [612, 617], "new_branch_nam": 612, "respons": [612, 652, 660], "simplest": [612, 659], "your_new_branch": 612, "checkout": 612, "encount": 613, "solv": [613, 624, 625, 644], "geo": 613, "cartopi": 613, "np110py27_4": 613, "calledprocesserror": 613, "spec": [613, 640], "vpn": 613, "site": 613, "shell": [613, 615], "honor": 613, "spawn": 613, "usernam": [613, 617, 640], "proxy_en": 613, "all_proxi": 613, "proxyout": 613, "8080": 613, "no_proxi": 613, "localhost": [613, 640, 641, 662], "127": 613, "proxy_dis": 613, "unset": 613, "anytim": 613, "fatal": 613, "mpi_init": 613, "stack": 613, "mpir_init_thread": 613, "159": 613, "mpid_init": 613, "164": 613, "mpidi_ch3_init": 613, "95": 613, "mpid_nem_init": 613, "314": 613, "mpid_nem_tcp_init": 613, "173": 613, "mpid_nem_tcp_get_business_card": 613, "395": 613, "getsockinterfaceaddr": 613, "369": 613, "pn2034311": 613, "errno": 613, "host": [613, 641, 662], "unexpect": [614, 617, 618, 622, 646], "Of": 615, "predict": 615, "kept": [615, 650], "expert": [615, 629, 632, 633, 650], "team": [615, 650], "launch": 615, "benefit": 615, "queue": 615, "beginn": [615, 617, 618], "worktre": [615, 617, 618], "advanc": [615, 617, 618], "style": [615, 617, 618], "troubleshoot": 615, "proxi": 615, "gethostbynam": 615, "port": [615, 616, 617, 640, 650, 654, 661], "list_testcas": 615, "setup_testcas": 615, "clean_testcas": 615, "manage_regression_suit": 615, "strict": [615, 617, 641, 662], "experienc": 615, "seriou": 615, "anticip": [615, 617, 650], "persist": 615, "medium": [615, 636], "glossari": [616, 617, 618], "rapidli": [616, 656], "companion": 616, "liber": 616, "add_cosine_bel": 616, "add_baroclinic_channel": [616, 617], "fit": [616, 619, 659], "camel": 616, "welcom": 616, "_mesh": 616, "bring": 616, "_namelist": 616, "_init": 616, "_output": 616, "wasn": 616, "becam": 616, "didn": [616, 618], "_setup_step": 616, "haven": [616, 617, 618], "_ntask": 616, "heurist": 616, "refus": 616, "update_cor": 616, "goal_cells_per_cor": [616, 649, 657, 659], "max_cells_per_cor": [616, 649, 657, 659], "qu30": 616, "65275": 616, "10383": 616, "approx_cel": 616, "6e8": 616, "round": [616, 649], "pinch": 616, "_forward": 616, "_min_task": 616, "consult": [617, 618, 650], "fork": 617, "push": 617, "lowercas": [617, 618], "hyphen": 617, "realli": [617, 618, 640], "nice": [617, 618, 640], "supercomput": [617, 618], "highli": [617, 618], "camelcas": [617, 618], "capit": [617, 618], "cap": [617, 618], "promot": 617, "pattern": [617, 618], "seen": [617, 623], "seldom": 617, "outweigh": 617, "equip": 617, "hexagon": 617, "variat": 617, "pain": 617, "pick": [617, 618], "partial_cell_typ": [617, 644, 647, 653, 655, 656, 657, 661], "min_pc_fract": [617, 644, 647, 653, 655, 656, 657, 661], "halv": [617, 647, 655], "500km": [617, 647, 655], "40e3": [617, 647, 655, 656], "corioli": [617, 647, 653, 655, 656, 661], "2e": [617, 647, 655], "connect": [617, 640, 650], "handi": 617, "05": [617, 658, 661], "techiniqu": 617, "input_interv": [617, 618], "initial_onli": [617, 618], "__init": 617, "spuriou": [617, 647, 655], "pop": [617, 647, 655], "mom": [617, 647, 655], "mitgcm": [617, 647, 655], "heavi": 617, "context": 617, "analogi": 617, "tet": 617, "20_00": 617, "0000": [617, 618], "dayssincestartofsim": 617, "relativevort": 617, "pyplot": [617, 618], "plt": [617, 618], "cmocean": 617, "output_": 617, "sections_baroclinic_channel_": 617, "_plot": 617, "compact": 617, "anymor": 617, "bc_configur": 617, "users_guid": [617, 618], "alphabet": [617, 618], "daunt": [617, 618], "tini": 618, "add_gotm": 618, "driver": 618, "Its": 618, "driver_script": 618, "pre_messag": 618, "post_messag": 618, "config_init": 618, "add_execut": 618, "dest": 618, "config_init_configur": 618, "periodic_planar": 618, "config_vert_level": 618, "config_periodic_planar_vert_level": 618, "config_periodic_planar_bottom_depth": 618, "config_periodic_planar_velocity_strength": 618, "config_ocean_run_mod": 618, "config_write_cull_cell_mask": 618, "config_vertical_grid": 618, "immut": 618, "input_init": 618, "output_init": 618, "add_cont": 618, "edgemask": 618, "run_script": 618, "mpascellcul": 618, "mpasmeshconvert": 618, "model_run": 618, "proc": 618, "gotmturb": 618, "nml": 618, "plot_profil": 618, "jump": 618, "encourag": 618, "plai": 618, "role": 618, "barotropic_channel": 618, "excerpt": 618, "slight": 618, "hasn": 618, "real": 618, "deep": [618, 658], "uniformli": 618, "wrapper": 618, "conform": 618, "add_link": 618, "copy_fil": 618, "source_path": 618, "script_test_dir": 618, "0000_12": 618, "config_zonal_ssh_grad": 618, "config_pressure_gradient_typ": 618, "constant_forc": 618, "config_use_cvmix": 618, "config_use_gotm": 618, "config_gotm_namelist_fil": 618, "config_gotm_constant_bottom_drag_coeff": 618, "73e": 618, "config_use_implicit_bottom_drag": 618, "velocityzon": 618, "velocitymeridion": 618, "vertvisctopofcel": 618, "nor": 618, "velocity_profil": 618, "viscosity_profil": 618, "xr": 618, "switch_backend": 618, "agg": 618, "kappa": 618, "z0b": 618, "5e": [618, 661], "gssh": 618, "81": 618, "isel": 618, "zi": 618, "ustarb": 618, "sqrt": [618, 650], "u_a": 618, "nu_a": 618, "infer": [618, 651], "c_d": 618, "4g": 618, "xlabel": 618, "ylabel": 618, "savefig": 618, "introduc": 618, "got": 618, "newli": 618, "explanatori": 619, "wherev": 619, "my_machin": 619, "customize_config_pars": 619, "inej": 619, "ssl": 619, "certif": 619, "partition_execut": 619, "netcdf4_class": 619, "netcdf3_64bit": 619, "netcdf3_class": 619, "engin": 619, "scipi": 619, "contact": 619, "temperaturemax": [619, 650], "statist": [619, 650], "temperature_max": [619, 650], "offlin": [619, 650], "coarser": [619, 649, 650, 657], "finer": [619, 650, 661], "2018": 621, "websit": [621, 645], "v6": 621, "land_ic": 621, "sia_restart_test": [622, 662], "sia_decomposition_test": [622, 662], "enthalpy_decomposition_test": 622, "enthalpy_restart_test": 622, "expos": [622, 646], "fo_decomposition_test": [622, 662], "fo_restart_test": [622, 662], "3km_restart_test": 622, "fo_calv": 622, "von_mises_stress_damag": 622, "threshold_facemelt": 622, "3km_decomposition_test": 622, "none_calv": 622, "adp": 623, "timestepp": [623, 634], "ratio": [623, 648], "warn": [623, 649, 657], "greater": [623, 625], "panel": 623, "cumul": 623, "adapt": [623, 634], "lag": 623, "trigger": 623, "routin": [623, 631], "unabl": 623, "volum": 623, "unground": 624, "iceberg": 624, "presenc": 624, "1250": [624, 661], "dirichlet": 624, "bed": 624, "use_mu": 624, "area": [624, 650], "use_7cel": 624, "1proc_run": [624, 625, 626, 628, 630], "4proc_run": [624, 625, 626, 628], "1983": 625, "2005": [625, 648, 650], "rectangular": [625, 626, 630, 658], "circularli": [625, 626], "accumul": [625, 626], "ablat": 625, "16700": 625, "varr": 625, "payn": 626, "750": 626, "exmapl": [626, 630], "25000m": 626, "64": [626, 644, 660], "74": 626, "25000": 626, "thermomechan": 626, "warm": [626, 656, 661], "altitud": 626, "cooler": [626, 647, 661], "slip": [626, 628, 661], "throughout": [626, 647, 648, 655, 656], "exismint2_viz": 626, "enthalpy_benchmark_viz": 627, "display_imag": 627, "prescrib": [627, 656, 658], "decreas": [627, 656], "paraview": [628, 635], "cull_dist": [628, 629, 632, 633, 635], "min_spac": [628, 629, 632, 633, 635], "e3": [628, 629, 632, 633, 635], "max_spac": [628, 629, 632, 633, 635], "log10": [628, 629, 632, 633, 635], "high_log_spe": [628, 629, 632, 633, 635], "low_log_spe": [628, 629, 632, 633, 635], "75": [628, 629, 632, 633, 635, 653, 656], "high_dist": [628, 629, 632, 633, 635], "e5": [628, 629, 632, 633, 635], "low_dist": [628, 629, 632, 633, 635], "e4": [628, 629, 632, 633, 635], "use_spe": [628, 629, 632, 633, 635], "use_dist_to_grounding_lin": [628, 629, 632, 633, 635], "use_dist_to_edg": [628, 629, 632, 633, 635], "newer": [628, 635], "notabl": 629, "slower": 629, "humboldt_mesh": 629, "yr": [629, 632, 633, 656], "16proc_run": [629, 635], "32proc_run": [629, 635], "fot": 629, "bfb": 629, "von": 629, "mise": 629, "marin": [629, 656], "facemelt": 629, "exercis": [629, 650], "widest": 629, "1000m": 630, "58": 630, "3proc_run": 630, "specialti": 631, "carefulli": 631, "high_res_kangerlussuaq_mesh": 632, "high_res_kogebugts_mesh": 633, "e2": 633, "2km": [634, 656], "paper": [634, 658, 661], "trade": 634, "accuraci": 634, "includess": 635, "gain": [636, 650], "confluenc": 636, "deploi": [636, 637, 638, 639, 640, 641, 658], "mpi_intel": [636, 637, 638, 639, 640, 641], "mpi_gnu": [636, 637, 638, 640, 641], "hdf5": [636, 637, 638, 639, 640, 641], "fortran": [636, 637, 638, 639, 640, 641], "pnetcdf": [636, 637, 638, 639, 640, 641], "use_e3sm_hdf5_netcdf": [636, 637, 638, 639, 640, 641], "cobalt": [636, 637, 638, 639, 640, 641], "condo": [636, 662], "acm": [636, 640, 662], "qualiti": [636, 637, 639, 640, 641, 662], "servic": [636, 637, 639, 640, 641, 662], "qo": [636, 637, 639, 640, 641, 662], "acme_high": 636, "load_latest_compass_intel_impi": [636, 637, 638, 639], "load_latest_compass_gnu_mvapich": [636, 637], "dst": 637, "calendar": 637, "yellow": 637, "introduct": 637, "network": 637, "my_monik": 637, "wtrw": 637, "ba": 637, "lustr": [637, 662], "scratch3": 637, "scratch4": [637, 662], "sacctmgr": 637, "assoc": 637, "cluster": 637, "sshare": 637, "grep": [637, 662], "sreport": 637, "accountutilizationbyus": 637, "prioriti": 637, "chkhome": 637, "petabyt": 637, "df": 637, "bp": 637, "archiv": [637, 640], "hpss": [637, 640], "tn": 637, "storag": 637, "project_nam": 637, "salloc": [637, 640, 641], "account_nam": 637, "load_latest_compass_gnu_openmpi": [638, 662], "compyf": 639, "app": [639, 662], "conda_env": [639, 662], "mpi_pgi": 639, "mvapich2": 639, "pmi2": 639, "my_usernam": [640, 641], "knl": 640, "nim": 640, "filesystem": 640, "cscratch1": 640, "sd": 640, "myquota": 640, "prjquota": 640, "projectid": 640, "m2833": 640, "hsi": 640, "htar": 640, "zstash": 640, "cf": [640, 650, 662], "cdir": [640, 662], "premium": 640, "load_latest_compass_intel_mpt": 640, "load_latest_compass_gnu_mpt": 640, "8844": 640, "monik": 640, "browser": 640, "grab": 640, "logon": 640, "kernel": 640, "myenv": 640, "ipykernel": 640, "kernelspec": 640, "Be": 640, "interpret": 640, "argv": 640, "ipykernel_launch": 640, "connection_fil": 640, "display_nam": 640, "sai": [641, 656], "workload": 641, "sbatch": [641, 662], "squeue": 641, "scancel": 641, "jobid": 641, "cancel": 641, "emtpi": 641, "channel_prior": [641, 662], "mpi_mpich": [641, 662], "mpi_openmpi": [641, 662], "nompi": [641, 662], "inclus": [642, 650], "cryospher": [642, 650], "campaign": [642, 650], "mass": [642, 659], "loss": 642, "depress": [642, 644, 653, 656], "thicker": 642, "hanei": [642, 656], "stationari": 642, "freeli": 642, "guess": 642, "robust": 642, "grow": 643, "stewart": [644, 661], "2017": 644, "z_2": 644, "z_1": 644, "mathrm": [644, 661], "rightarrow": 644, "infti": 644, "z_k": 644, "z_0": 644, "finder": 644, "n_z": 644, "h_": [644, 661], "210": [644, 649], "5500": 644, "renorm": [644, 661], "51": 644, "221": 644, "63": 644, "flat": 644, "collaps": 644, "adcroft": 644, "campin": 644, "2004": 644, "absenc": 644, "proport": [644, 649, 657, 659], "watercolumn": 644, "press": 644, "batymetri": 644, "stair": 644, "release_6": 645, "unexpectedli": 646, "proper": [646, 650], "equilibr": 646, "ilicak": [647, 655], "2012": [647, 655, 659], "psu": [647, 648, 653, 655, 656, 657, 658, 661], "sinusoid": [647, 648, 655], "warmer": [647, 655], "mk": [647, 648, 655], "celsiu": [647, 653, 655, 656], "reproduc": [648, 650], "warner": 648, "2013": [648, 661], "oei": 648, "dimens": 648, "6km": 648, "seaward": 648, "oscil": 648, "zeta_": 648, "east": 648, "5t": 648, "degc": 648, "rough": 648, "250m": 648, "coordiant": 648, "viz": [648, 653, 655, 656], "ouptut": [648, 656], "drying_slope_viz": 648, "generate_movi": 648, "frames_per_second": [648, 656], "movie_format": [648, 656], "12h": 648, "inspect": 648, "williamson": 649, "1992": 649, "3a": 649, "skamarock": 649, "gassmann": 649, "psi": 649, "psi_0": 649, "co": [649, 650], "ge": 649, "equatori": 649, "u_0": 649, "aim": [649, 650, 657, 659], "central": 649, "rad": 649, "lat_cent": 649, "lon_cent": 649, "14159265": 649, "2123666": 649, "6667": 649, "hill": 649, "psi0": 649, "transit": [649, 650, 656], "vel_pd": 649, "qu_conv_thresh": 649, "qu_conv_max": 649, "icos_conv_thresh": 649, "icos_conv_max": 649, "480": 649, "multipli": [649, 657], "alloc": [649, 657, 659], "cull_mesh_cpus_per_task": [650, 652], "cull_mesh_min_cpus_per_task": [650, 652], "cull_mesh_max_memori": [650, 652], "cull_mesh_": 650, "init_": 650, "april": 650, "mpas_mesh_short_nam": 650, "mpas_mesh_long_nam": 650, "mpas_mesh_prefix": 650, "mpas_mesh_e3sm_vers": 650, "mpas_mesh_pull_request": 650, "mpas_mesh_qu_revis": 650, "mpas_mesh_qu_version_author": 650, "mpas_mesh_qu_version_author_": 650, "mail": 650, "mpas_mesh_qu_version_creation_d": 650, "210116": 650, "mpas_mesh_qu_minimum_resolution_km": 650, "mpas_mesh_qu_maximum_resolution_km": 650, "mpas_mesh_qu_maximum_depth_m": 650, "mpas_mesh_qu_number_of_level": 650, "mpas_mesh_descript": 650, "mpas_mesh_bathymetri": 650, "mpas_initial_condit": 650, "mpas_mesh_compass_vers": 650, "mpas_mesh_jigsaw_vers": 650, "mpas_mesh_jigsaw": 650, "python_vers": 650, "mpas_mesh_mpa": 650, "tools_vers": 650, "mpas_mesh_nco_vers": 650, "mpas_mesh_esmf_vers": 650, "mpas_mesh_geometric_features_vers": 650, "mpas_mesh_metis_vers": 650, "mpas_mesh_pyremap_vers": 650, "lowest": 650, "everywher": 650, "impli": 650, "treatment": 650, "gent": 650, "mcwilliam": 650, "doi": 650, "org": 650, "1175": 650, "1520": 650, "0485": 650, "1990": [650, 653, 656], "020": 650, "0150": 650, "imiocm": 650, "parameter": [650, 653], "a_c": 650, "smoothli": 650, "sorrm": 650, "taper": 650, "attach": 650, "topograph": 650, "global_ocean_dynamic_adjust": 650, "coastlin": [650, 658], "ai": 650, "portion": 650, "gibraltar": 650, "mediterranean": 650, "contigu": 650, "peninsula": 650, "deriv": 650, "en4_1900_bgc": 650, "thought": 650, "explict": 650, "higdon": 650, "4th": [650, 659], "rung": [650, 659], "kutta": [650, 659], "infeas": 650, "surfaceareaweightedaverag": 650, "watermasscensu": 650, "layervolumeweightedaverag": 650, "zonalmean": 650, "okuboweiss": 650, "meridionalheattransport": 650, "highfrequencyoutput": 650, "eliassenpalm": 650, "mixedlayerdepth": 650, "debugdiagnost": 650, "eddyproductvari": 650, "oceanheatcont": 650, "mixedlayerheatbudget": 650, "sync": 650, "confid": 650, "complianc": 650, "cfconvent": 650, "transient": [650, 653], "amplitud": 650, "aggress": 650, "gentli": 650, "global_ocean_mesh_quwisc240": 650, "global_ocean_mesh_ecwisc30to60": 650, "qu240_for_e3sm": [650, 662, 664], "quwisc240_for_e3sm": [650, 662, 664], "mocstreamfunct": 650, "weren": 650, "ofr": 650, "wcatl12to45e2r4": 650, "210318": 650, "gl": 651, "umlauf": 651, "burchard": 651, "2003": 651, "67": 651, "69": 651, "0173": 651, "event": 652, "tide": [652, 660], "coastal": 652, "estuari": 652, "surg": 652, "inund": 652, "strm15": 652, "carri": 652, "vector": 652, "recor": 652, "spinup": 652, "ramp": 652, "shock": 652, "dimension": 653, "linearli": [653, 656, 658], "bui": [653, 656], "1490": [653, 656], "abruptli": [653, 656], "occupi": [653, 656], "cavity_thick": 653, "slope_height": 653, "angl": 653, "edge_width": 653, "0e3": 653, "y1": 653, "y2": 653, "surface_salin": [653, 658], "bottom_salin": 653, "5e3": 653, "strenuou": 653, "live": 653, "induc": 655, "propag": 655, "stratif": [655, 658], "5000": 655, "amplitude_width_frac": 655, "amplitude_width_dist": 655, "50e3": 655, "intercomparison": 656, "2016": [656, 661], "sheetmodel": 656, "cornford": 656, "ocean3": 656, "ocean4": 656, "inflow": 656, "misomip": 656, "topo_smooth": 656, "min_ice_thick": 656, "scalar": 656, "draft_scal": 656, "minimum_level": 656, "min_column_thick": 656, "min_smoothed_draft_mask": 656, "min_land_ice_fract": 656, "init_top_temp": 656, "init_bot_temp": 656, "init_top_s": 656, "init_bot_s": 656, "restore_top_temp": 656, "restore_bot_temp": 656, "restore_top_s": 656, "restore_bot_s": 656, "restore_r": 656, "restore_evap_r": 656, "restore_xmin": 656, "790e3": 656, "restore_xmax": 656, "800e3": 656, "409e": 656, "kg": 656, "effective_dens": 656, "1026": 656, "0002": 656, "0003": 656, "isomip_plus_streamfunct": 656, "osf_dx": 656, "2e3": 656, "osf_dz": 656, "plot_hanei": 656, "section_i": 656, "warmest": 656, "amundsen": 656, "bellingshausen": 656, "vigor": 656, "rigor": 656, "cold": [656, 661], "weddel": 656, "ross": 656, "weak": 656, "decad": 656, "protocol": 656, "opposit": 656, "misimp": 656, "undergon": 656, "retreat": 656, "exponenti": 656, "cours": 656, "stai": 656, "monoton": 656, "setup_to_run": 656, "loop": 656, "stagger": 657, "hex": 657, "nx_1km": 657, "512": 657, "ny_1km": 657, "640": 657, "deg": 657, "x_center": 657, "y_center": 657, "gaussian_width": 657, "advect_x": 657, "advect_i": 657, "conv_thresh": 657, "conv_max": 657, "wolfram": [658, 661], "investig": 658, "midlatitud": 658, "21": 658, "48": 658, "gyre": 658, "appendix": 658, "8km": 658, "16km": 658, "expans": 658, "eos_linear_alpha": 658, "density_differ": 658, "salinity_gradi": 658, "0008": 658, "thermocline_depth": 658, "density_difference_linear": 658, "phi": 658, "shelf_depth": [658, 661], "unequ": 658, "trajectori": 658, "situ": [658, 661], "lauritzen": 659, "conserv": 659, "debugtrac": 659, "discontinu": 659, "slot": 659, "cylind": 659, "offset": 659, "timestep_minut": 659, "tracer1_conv_thresh": 659, "tracer2_conv_thresh": 659, "tracer3_conv_thresh": 659, "appreci": 659, "degrad": 659, "revers": 659, "deform": 659, "nonlinearli": 659, "correl": 659, "invers": 660, "attract": 660, "guassian": 660, "shperic": 660, "shtn": 660, "dosen": 660, "gather": 660, "rank": 660, "scatter": 660, "impliment": 660, "algoritm": 660, "unstructur": 660, "all_reduc": 660, "use_shtn": 660, "analyit": 660, "sprial": 660, "harmoic": 660, "26": 660, "220": 660, "980": 660, "spherial": 660, "ringler": 661, "span": 661, "l_x": 661, "l_y": 661, "y_": 661, "w_": 661, "easterli": 661, "wind_transition_posit": 661, "800000": 661, "antarctic_shelf_front_width": 661, "600000": 661, "wind_stress_shelf_front_max": 661, "meridional_ext": 661, "0e6": 661, "slope_half_width": 661, "0e5": 661, "slope_center_posit": 661, "reference_corioli": 661, "coriolis_gradi": 661, "wind_stress_max": 661, "mean_restoring_temp": 661, "restoring_temp_dev_ta": 661, "restoring_temp_dev_tb": 661, "interior": 661, "restoring_temp_tau": 661, "piston": 661, "restoring_temp_piston_vel": 661, "93e": 661, "fold": 661, "restoring_temp_z": 661, "spong": 661, "restoring_sponge_l": 661, "0e4": 661, "anomali": 661, "frazil_temperature_anomali": 661, "load_latest_compass": 662, "minu": 662, "create_compass_load_script": 662, "load_compass_1": 662, "0_mpich": 662, "sia_smoke_test": 662, "fo_smoke_test": 662, "mpas_path": 662, "17": 662, "210131_test_new_branch": 662, "fall": 662, "landice_datafil": 662, "ocean_databas": 662, "_database_root": 662, "previous_workdir": 662, "test_subdir": 662, "whatev": 662, "job_script": 662, "j": 662, "exclus": 662, "job_nam": 662, "wall_tim": 662, "fo_integr": [662, 664], "full_integr": [662, 664], "sia_integr": [662, 664], "suitenam": 662, "prohibit": 664}, "objects": {"compass": [[9, 0, 1, "", "MpasCore"], [11, 0, 1, "", "Step"], [26, 0, 1, "", "TestCase"], [31, 0, 1, "", "TestGroup"]], "compass.MpasCore": [[9, 1, 1, "", "__init__"], [10, 1, 1, "", "add_test_group"]], "compass.Step": [[11, 1, 1, "", "__init__"], [12, 1, 1, "", "add_input_file"], [13, 1, 1, "", "add_model_as_input"], [14, 1, 1, "", "add_namelist_file"], [15, 1, 1, "", "add_namelist_options"], [16, 1, 1, "", "add_output_file"], [17, 1, 1, "", "add_streams_file"], [18, 1, 1, "", "constrain_resources"], [19, 1, 1, "", "run"], [20, 1, 1, "", "runtime_setup"], [21, 1, 1, "", "set_resources"], [22, 1, 1, "", "setup"], [23, 1, 1, "", "update_namelist_at_runtime"], [24, 1, 1, "", "update_namelist_pio"], [25, 1, 1, "", "update_streams_at_runtime"]], "compass.TestCase": [[26, 1, 1, "", "__init__"], [27, 1, 1, "", "add_step"], [28, 1, 1, "", "configure"], [29, 1, 1, "", "run"], [30, 1, 1, "", "validate"]], "compass.TestGroup": [[31, 1, 1, "", "__init__"], [32, 1, 1, "", "add_test_case"]], "compass.__main__": [[33, 2, 1, "", "main"]], "compass.cache": [[34, 2, 1, "", "update_cache"]], "compass.clean": [[35, 2, 1, "", "clean_cases"]], "compass.config": [[36, 0, 1, "", "CompassConfigParser"]], "compass.config.CompassConfigParser": [[36, 1, 1, "", "__init__"]], "compass.io": [[37, 2, 1, "", "download"], [38, 2, 1, "", "symlink"]], "compass.landice": [[78, 0, 1, "", "Landice"]], "compass.landice.Landice": [[78, 1, 1, "", "__init__"]], "compass.landice.tests.calving_dt_convergence": [[79, 0, 1, "", "CalvingDtConvergence"]], "compass.landice.tests.calving_dt_convergence.CalvingDtConvergence": [[79, 1, 1, "", "__init__"]], "compass.landice.tests.calving_dt_convergence.dt_convergence_test": [[80, 0, 1, "", "DtConvergenceTest"]], "compass.landice.tests.calving_dt_convergence.dt_convergence_test.DtConvergenceTest": [[80, 1, 1, "", "__init__"], [81, 1, 1, "", "validate"]], "compass.landice.tests.calving_dt_convergence.run_model": [[82, 0, 1, "", "RunModel"]], "compass.landice.tests.calving_dt_convergence.run_model.RunModel": [[82, 1, 1, "", "__init__"], [83, 1, 1, "", "run"]], "compass.landice.tests.circular_shelf": [[84, 0, 1, "", "CircularShelf"]], "compass.landice.tests.circular_shelf.CircularShelf": [[84, 1, 1, "", "__init__"]], "compass.landice.tests.circular_shelf.decomposition_test": [[85, 0, 1, "", "DecompositionTest"]], "compass.landice.tests.circular_shelf.decomposition_test.DecompositionTest": [[85, 1, 1, "", "__init__"], [86, 1, 1, "", "run"]], "compass.landice.tests.circular_shelf.run_model": [[87, 0, 1, "", "RunModel"]], "compass.landice.tests.circular_shelf.run_model.RunModel": [[87, 1, 1, "", "__init__"], [88, 1, 1, "", "run"]], "compass.landice.tests.circular_shelf.setup_mesh": [[89, 0, 1, "", "SetupMesh"]], "compass.landice.tests.circular_shelf.setup_mesh.SetupMesh": [[89, 1, 1, "", "__init__"], [90, 1, 1, "", "run"]], "compass.landice.tests.circular_shelf.visualize": [[91, 0, 1, "", "Visualize"], [93, 2, 1, "", "visualize_circular_shelf"]], "compass.landice.tests.circular_shelf.visualize.Visualize": [[91, 1, 1, "", "__init__"], [92, 1, 1, "", "run"]], "compass.landice.tests.dome": [[94, 0, 1, "", "Dome"]], "compass.landice.tests.dome.Dome": [[94, 1, 1, "", "__init__"]], "compass.landice.tests.dome.decomposition_test": [[95, 0, 1, "", "DecompositionTest"]], "compass.landice.tests.dome.decomposition_test.DecompositionTest": [[95, 1, 1, "", "__init__"], [96, 1, 1, "", "run"]], "compass.landice.tests.dome.restart_test": [[97, 0, 1, "", "RestartTest"]], "compass.landice.tests.dome.restart_test.RestartTest": [[97, 1, 1, "", "__init__"], [98, 1, 1, "", "run"]], "compass.landice.tests.dome.run_model": [[99, 0, 1, "", "RunModel"]], "compass.landice.tests.dome.run_model.RunModel": [[99, 1, 1, "", "__init__"], [100, 1, 1, "", "run"], [101, 1, 1, "", "setup"]], "compass.landice.tests.dome.setup_mesh": [[102, 0, 1, "", "SetupMesh"]], "compass.landice.tests.dome.setup_mesh.SetupMesh": [[102, 1, 1, "", "__init__"], [103, 1, 1, "", "run"]], "compass.landice.tests.dome.smoke_test": [[104, 0, 1, "", "SmokeTest"]], "compass.landice.tests.dome.smoke_test.SmokeTest": [[104, 1, 1, "", "__init__"], [105, 1, 1, "", "run"]], "compass.landice.tests.dome.visualize": [[106, 0, 1, "", "Visualize"], [108, 2, 1, "", "visualize_dome"]], "compass.landice.tests.dome.visualize.Visualize": [[106, 1, 1, "", "__init__"], [107, 1, 1, "", "run"]], "compass.landice.tests.eismint2": [[109, 0, 1, "", "Eismint2"]], "compass.landice.tests.eismint2.Eismint2": [[109, 1, 1, "", "__init__"]], "compass.landice.tests.eismint2.decomposition_test": [[110, 0, 1, "", "DecompositionTest"]], "compass.landice.tests.eismint2.decomposition_test.DecompositionTest": [[110, 1, 1, "", "__init__"], [111, 1, 1, "", "run"]], "compass.landice.tests.eismint2.restart_test": [[112, 0, 1, "", "RestartTest"]], "compass.landice.tests.eismint2.restart_test.RestartTest": [[112, 1, 1, "", "__init__"], [113, 1, 1, "", "run"]], "compass.landice.tests.eismint2.run_experiment": [[114, 0, 1, "", "RunExperiment"]], "compass.landice.tests.eismint2.run_experiment.RunExperiment": [[114, 1, 1, "", "__init__"], [115, 1, 1, "", "run"], [116, 1, 1, "", "setup"]], "compass.landice.tests.eismint2.setup_mesh": [[117, 0, 1, "", "SetupMesh"]], "compass.landice.tests.eismint2.setup_mesh.SetupMesh": [[117, 1, 1, "", "__init__"], [118, 1, 1, "", "run"]], "compass.landice.tests.eismint2.standard_experiments": [[119, 0, 1, "", "StandardExperiments"]], "compass.landice.tests.eismint2.standard_experiments.StandardExperiments": [[119, 1, 1, "", "__init__"], [120, 1, 1, "", "run"]], "compass.landice.tests.eismint2.standard_experiments.visualize": [[121, 0, 1, "", "Visualize"], [123, 2, 1, "", "visualize_eismint2"]], "compass.landice.tests.eismint2.standard_experiments.visualize.Visualize": [[121, 1, 1, "", "__init__"], [122, 1, 1, "", "run"]], "compass.landice.tests.enthalpy_benchmark.A": [[124, 0, 1, "", "A"]], "compass.landice.tests.enthalpy_benchmark.A.A": [[124, 1, 1, "", "__init__"], [125, 1, 1, "", "configure"], [126, 1, 1, "", "run"]], "compass.landice.tests.enthalpy_benchmark.A.visualize": [[127, 0, 1, "", "Visualize"]], "compass.landice.tests.enthalpy_benchmark.A.visualize.Visualize": [[127, 1, 1, "", "__init__"], [128, 1, 1, "", "run"]], "compass.landice.tests.enthalpy_benchmark.B": [[129, 0, 1, "", "B"]], "compass.landice.tests.enthalpy_benchmark.B.B": [[129, 1, 1, "", "__init__"], [130, 1, 1, "", "configure"], [131, 1, 1, "", "run"]], "compass.landice.tests.enthalpy_benchmark.B.visualize": [[132, 0, 1, "", "Visualize"]], "compass.landice.tests.enthalpy_benchmark.B.visualize.Visualize": [[132, 1, 1, "", "__init__"], [133, 1, 1, "", "run"]], "compass.landice.tests.enthalpy_benchmark": [[134, 0, 1, "", "EnthalpyBenchmark"]], "compass.landice.tests.enthalpy_benchmark.EnthalpyBenchmark": [[134, 1, 1, "", "__init__"]], "compass.landice.tests.enthalpy_benchmark.run_model": [[135, 0, 1, "", "RunModel"]], "compass.landice.tests.enthalpy_benchmark.run_model.RunModel": [[135, 1, 1, "", "__init__"], [136, 1, 1, "", "run"], [137, 1, 1, "", "setup"]], "compass.landice.tests.enthalpy_benchmark.setup_mesh": [[138, 0, 1, "", "SetupMesh"]], "compass.landice.tests.enthalpy_benchmark.setup_mesh.SetupMesh": [[138, 1, 1, "", "__init__"], [139, 1, 1, "", "run"]], "compass.landice.tests.greenland": [[140, 0, 1, "", "Greenland"]], "compass.landice.tests.greenland.Greenland": [[140, 1, 1, "", "__init__"]], "compass.landice.tests.greenland.decomposition_test": [[141, 0, 1, "", "DecompositionTest"]], "compass.landice.tests.greenland.decomposition_test.DecompositionTest": [[141, 1, 1, "", "__init__"], [142, 1, 1, "", "run"]], "compass.landice.tests.greenland.high_res_mesh": [[143, 0, 1, "", "HighResMesh"]], "compass.landice.tests.greenland.high_res_mesh.HighResMesh": [[143, 1, 1, "", "__init__"], [144, 1, 1, "", "run"]], "compass.landice.tests.greenland.mesh": [[145, 0, 1, "", "Mesh"]], "compass.landice.tests.greenland.mesh.Mesh": [[145, 1, 1, "", "__init__"], [146, 1, 1, "", "build_cell_width"], [147, 1, 1, "", "run"]], "compass.landice.tests.greenland.restart_test": [[148, 0, 1, "", "RestartTest"]], "compass.landice.tests.greenland.restart_test.RestartTest": [[148, 1, 1, "", "__init__"], [149, 1, 1, "", "run"]], "compass.landice.tests.greenland.run_model": [[150, 0, 1, "", "RunModel"]], "compass.landice.tests.greenland.run_model.RunModel": [[150, 1, 1, "", "__init__"], [151, 1, 1, "", "run"], [152, 1, 1, "", "setup"]], "compass.landice.tests.greenland.smoke_test": [[153, 0, 1, "", "SmokeTest"]], "compass.landice.tests.greenland.smoke_test.SmokeTest": [[153, 1, 1, "", "__init__"], [154, 1, 1, "", "run"]], "compass.landice.tests.humboldt": [[155, 0, 1, "", "Humboldt"]], "compass.landice.tests.humboldt.Humboldt": [[155, 1, 1, "", "__init__"]], "compass.landice.tests.humboldt.decomposition_test": [[156, 0, 1, "", "DecompositionTest"]], "compass.landice.tests.humboldt.decomposition_test.DecompositionTest": [[156, 1, 1, "", "__init__"], [157, 1, 1, "", "validate"]], "compass.landice.tests.humboldt.mesh": [[158, 0, 1, "", "Mesh"]], "compass.landice.tests.humboldt.mesh.Mesh": [[158, 1, 1, "", "__init__"], [159, 1, 1, "", "run"]], "compass.landice.tests.humboldt.mesh_gen": [[160, 0, 1, "", "MeshGen"]], "compass.landice.tests.humboldt.mesh_gen.MeshGen": [[160, 1, 1, "", "__init__"], [161, 1, 1, "", "run"]], "compass.landice.tests.humboldt.restart_test": [[162, 0, 1, "", "RestartTest"]], "compass.landice.tests.humboldt.restart_test.RestartTest": [[162, 1, 1, "", "__init__"], [163, 1, 1, "", "validate"]], "compass.landice.tests.humboldt.run_model": [[164, 0, 1, "", "RunModel"]], "compass.landice.tests.humboldt.run_model.RunModel": [[164, 1, 1, "", "__init__"], [165, 1, 1, "", "run"]], "compass.landice.tests.hydro_radial": [[166, 0, 1, "", "HydroRadial"]], "compass.landice.tests.hydro_radial.HydroRadial": [[166, 1, 1, "", "__init__"]], "compass.landice.tests.hydro_radial.decomposition_test": [[167, 0, 1, "", "DecompositionTest"]], "compass.landice.tests.hydro_radial.decomposition_test.DecompositionTest": [[167, 1, 1, "", "__init__"], [168, 1, 1, "", "run"]], "compass.landice.tests.hydro_radial.restart_test": [[169, 0, 1, "", "RestartTest"]], "compass.landice.tests.hydro_radial.restart_test.RestartTest": [[169, 1, 1, "", "__init__"], [170, 1, 1, "", "run"]], "compass.landice.tests.hydro_radial.run_model": [[171, 0, 1, "", "RunModel"]], "compass.landice.tests.hydro_radial.run_model.RunModel": [[171, 1, 1, "", "__init__"], [172, 1, 1, "", "run"], [173, 1, 1, "", "setup"]], "compass.landice.tests.hydro_radial.setup_mesh": [[174, 0, 1, "", "SetupMesh"]], "compass.landice.tests.hydro_radial.setup_mesh.SetupMesh": [[174, 1, 1, "", "__init__"], [175, 1, 1, "", "run"]], "compass.landice.tests.hydro_radial.spinup_test": [[176, 0, 1, "", "SpinupTest"]], "compass.landice.tests.hydro_radial.spinup_test.SpinupTest": [[176, 1, 1, "", "__init__"], [177, 1, 1, "", "run"]], "compass.landice.tests.hydro_radial.steady_state_drift_test": [[178, 0, 1, "", "SteadyStateDriftTest"]], "compass.landice.tests.hydro_radial.steady_state_drift_test.SteadyStateDriftTest": [[178, 1, 1, "", "__init__"], [179, 1, 1, "", "run"]], "compass.landice.tests.hydro_radial.visualize": [[180, 0, 1, "", "Visualize"], [182, 2, 1, "", "visualize_hydro_radial"]], "compass.landice.tests.hydro_radial.visualize.Visualize": [[180, 1, 1, "", "__init__"], [181, 1, 1, "", "run"]], "compass.landice.tests.kangerlussuaq": [[183, 0, 1, "", "Kangerlussuaq"]], "compass.landice.tests.kangerlussuaq.Kangerlussuaq": [[183, 1, 1, "", "__init__"]], "compass.landice.tests.kangerlussuaq.mesh": [[184, 0, 1, "", "Mesh"]], "compass.landice.tests.kangerlussuaq.mesh.Mesh": [[184, 1, 1, "", "__init__"], [185, 1, 1, "", "run"]], "compass.landice.tests.kangerlussuaq.mesh_gen": [[186, 0, 1, "", "MeshGen"]], "compass.landice.tests.kangerlussuaq.mesh_gen.MeshGen": [[186, 1, 1, "", "__init__"], [187, 1, 1, "", "run"]], "compass.landice.tests.koge_bugt_s": [[188, 0, 1, "", "KogeBugtS"]], "compass.landice.tests.koge_bugt_s.KogeBugtS": [[188, 1, 1, "", "__init__"]], "compass.landice.tests.koge_bugt_s.mesh": [[189, 0, 1, "", "Mesh"]], "compass.landice.tests.koge_bugt_s.mesh.Mesh": [[189, 1, 1, "", "__init__"], [190, 1, 1, "", "run"]], "compass.landice.tests.koge_bugt_s.mesh_gen": [[191, 0, 1, "", "MeshGen"]], "compass.landice.tests.koge_bugt_s.mesh_gen.MeshGen": [[191, 1, 1, "", "__init__"], [192, 1, 1, "", "run"]], "compass.landice.tests.mismipplus": [[193, 0, 1, "", "MISMIPplus"]], "compass.landice.tests.mismipplus.MISMIPplus": [[193, 1, 1, "", "__init__"]], "compass.landice.tests.mismipplus.run_model": [[194, 0, 1, "", "RunModel"]], "compass.landice.tests.mismipplus.run_model.RunModel": [[194, 1, 1, "", "__init__"], [195, 1, 1, "", "run"], [196, 1, 1, "", "setup"]], "compass.landice.tests.mismipplus.smoke_test": [[197, 0, 1, "", "SmokeTest"]], "compass.landice.tests.mismipplus.smoke_test.SmokeTest": [[197, 1, 1, "", "__init__"], [198, 1, 1, "", "run"]], "compass.landice.tests.thwaites": [[199, 0, 1, "", "Thwaites"]], "compass.landice.tests.thwaites.Thwaites": [[199, 1, 1, "", "__init__"]], "compass.landice.tests.thwaites.decomposition_test": [[200, 0, 1, "", "DecompositionTest"]], "compass.landice.tests.thwaites.decomposition_test.DecompositionTest": [[200, 1, 1, "", "__init__"], [201, 1, 1, "", "run"]], "compass.landice.tests.thwaites.restart_test": [[202, 0, 1, "", "RestartTest"]], "compass.landice.tests.thwaites.restart_test.RestartTest": [[202, 1, 1, "", "__init__"], [203, 1, 1, "", "run"]], "compass.landice.tests.thwaites.run_model": [[204, 0, 1, "", "RunModel"]], "compass.landice.tests.thwaites.run_model.RunModel": [[204, 1, 1, "", "__init__"], [205, 1, 1, "", "run"], [206, 1, 1, "", "setup"]], "compass.list": [[39, 2, 1, "", "list_cases"], [40, 2, 1, "", "list_machines"], [41, 2, 1, "", "list_suites"]], "compass.logging": [[42, 2, 1, "", "log_method_call"]], "compass.mesh": [[43, 0, 1, "", "IcosahedralMeshStep"], [50, 0, 1, "", "QuasiUniformSphericalMeshStep"]], "compass.mesh.IcosahedralMeshStep": [[43, 1, 1, "", "__init__"], [44, 1, 1, "", "build_subdivisions_cell_width_lat_lon"], [45, 1, 1, "", "get_cell_width"], [46, 1, 1, "", "get_subdivisions"], [47, 1, 1, "", "make_jigsaw_mesh"], [48, 1, 1, "", "run"], [49, 1, 1, "", "setup"]], "compass.mesh.QuasiUniformSphericalMeshStep": [[50, 1, 1, "", "__init__"], [51, 1, 1, "", "build_cell_width_lat_lon"], [52, 1, 1, "", "make_jigsaw_mesh"], [53, 1, 1, "", "run"], [54, 1, 1, "", "setup"]], "compass.mesh.spherical": [[55, 0, 1, "", "SphericalBaseStep"]], "compass.mesh.spherical.SphericalBaseStep": [[55, 1, 1, "", "__init__"], [56, 1, 1, "", "run"], [57, 1, 1, "", "save_and_plot_cell_width"], [58, 1, 1, "", "setup"]], "compass.model": [[59, 2, 1, "", "make_graph_file"], [60, 2, 1, "", "partition"], [61, 2, 1, "", "run_model"]], "compass.mpas_cores": [[62, 2, 1, "", "get_mpas_cores"]], "compass.ocean": [[229, 0, 1, "", "Ocean"]], "compass.ocean.Ocean": [[229, 1, 1, "", "__init__"]], "compass.ocean.haney": [[230, 2, 1, "", "compute_haney_number"]], "compass.ocean.iceshelf": [[231, 2, 1, "", "adjust_ssh"], [232, 2, 1, "", "compute_land_ice_pressure_and_draft"]], "compass.ocean.mesh.cull": [[233, 0, 1, "", "CullMeshStep"], [236, 2, 1, "", "cull_mesh"]], "compass.ocean.mesh.cull.CullMeshStep": [[233, 1, 1, "", "__init__"], [234, 1, 1, "", "run"], [235, 1, 1, "", "setup"]], "compass.ocean.mesh.floodplain": [[237, 0, 1, "", "FloodplainMeshStep"]], "compass.ocean.mesh.floodplain.FloodplainMeshStep": [[237, 1, 1, "", "__init__"], [238, 1, 1, "", "run"]], "compass.ocean.particles": [[239, 2, 1, "", "remap_particles"], [240, 2, 1, "", "write"]], "compass.ocean.plot": [[241, 2, 1, "", "plot_initial_state"], [242, 2, 1, "", "plot_vertical_grid"]], "compass.ocean.tests.baroclinic_channel": [[243, 0, 1, "", "BaroclinicChannel"], [244, 2, 1, "", "configure"]], "compass.ocean.tests.baroclinic_channel.BaroclinicChannel": [[243, 1, 1, "", "__init__"]], "compass.ocean.tests.baroclinic_channel.decomp_test": [[245, 0, 1, "", "DecompTest"]], "compass.ocean.tests.baroclinic_channel.decomp_test.DecompTest": [[245, 1, 1, "", "__init__"], [246, 1, 1, "", "configure"], [247, 1, 1, "", "run"]], "compass.ocean.tests.baroclinic_channel.default": [[248, 0, 1, "", "Default"]], "compass.ocean.tests.baroclinic_channel.default.Default": [[248, 1, 1, "", "__init__"], [249, 1, 1, "", "configure"], [250, 1, 1, "", "run"]], "compass.ocean.tests.baroclinic_channel.forward": [[251, 0, 1, "", "Forward"]], "compass.ocean.tests.baroclinic_channel.forward.Forward": [[251, 1, 1, "", "__init__"], [252, 1, 1, "", "run"], [253, 1, 1, "", "setup"]], "compass.ocean.tests.baroclinic_channel.initial_state": [[254, 0, 1, "", "InitialState"]], "compass.ocean.tests.baroclinic_channel.initial_state.InitialState": [[254, 1, 1, "", "__init__"], [255, 1, 1, "", "run"], [256, 1, 1, "", "setup"]], "compass.ocean.tests.baroclinic_channel.restart_test": [[257, 0, 1, "", "RestartTest"]], "compass.ocean.tests.baroclinic_channel.restart_test.RestartTest": [[257, 1, 1, "", "__init__"], [258, 1, 1, "", "configure"], [259, 1, 1, "", "run"]], "compass.ocean.tests.baroclinic_channel.rpe_test": [[260, 0, 1, "", "RpeTest"]], "compass.ocean.tests.baroclinic_channel.rpe_test.RpeTest": [[260, 1, 1, "", "__init__"], [261, 1, 1, "", "configure"], [262, 1, 1, "", "run"]], "compass.ocean.tests.baroclinic_channel.rpe_test.analysis": [[263, 0, 1, "", "Analysis"]], "compass.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis": [[263, 1, 1, "", "__init__"], [264, 1, 1, "", "run"], [265, 1, 1, "", "setup"]], "compass.ocean.tests.baroclinic_channel.threads_test": [[266, 0, 1, "", "ThreadsTest"]], "compass.ocean.tests.baroclinic_channel.threads_test.ThreadsTest": [[266, 1, 1, "", "__init__"], [267, 1, 1, "", "configure"], [268, 1, 1, "", "run"]], "compass.ocean.tests.drying_slope": [[269, 0, 1, "", "DryingSlope"]], "compass.ocean.tests.drying_slope.DryingSlope": [[269, 1, 1, "", "__init__"]], "compass.ocean.tests.drying_slope.default": [[270, 0, 1, "", "Default"]], "compass.ocean.tests.drying_slope.default.Default": [[270, 1, 1, "", "__init__"], [271, 1, 1, "", "configure"]], "compass.ocean.tests.drying_slope.forward": [[272, 0, 1, "", "Forward"]], "compass.ocean.tests.drying_slope.forward.Forward": [[272, 1, 1, "", "__init__"], [273, 1, 1, "", "run"]], "compass.ocean.tests.drying_slope.initial_state": [[274, 0, 1, "", "InitialState"]], "compass.ocean.tests.drying_slope.initial_state.InitialState": [[274, 1, 1, "", "__init__"], [275, 1, 1, "", "run"]], "compass.ocean.tests.drying_slope.viz": [[276, 0, 1, "", "Viz"]], "compass.ocean.tests.drying_slope.viz.Viz": [[276, 1, 1, "", "__init__"], [277, 1, 1, "", "run"]], "compass.ocean.tests.global_convergence": [[278, 0, 1, "", "GlobalConvergence"]], "compass.ocean.tests.global_convergence.GlobalConvergence": [[278, 1, 1, "", "__init__"]], "compass.ocean.tests.global_convergence.cosine_bell": [[279, 0, 1, "", "CosineBell"]], "compass.ocean.tests.global_convergence.cosine_bell.CosineBell": [[279, 1, 1, "", "__init__"], [280, 1, 1, "", "configure"], [281, 1, 1, "", "run"]], "compass.ocean.tests.global_convergence.cosine_bell.analysis": [[282, 0, 1, "", "Analysis"]], "compass.ocean.tests.global_convergence.cosine_bell.analysis.Analysis": [[282, 1, 1, "", "__init__"], [283, 1, 1, "", "rmse"], [284, 1, 1, "", "run"]], "compass.ocean.tests.global_convergence.cosine_bell.forward": [[285, 0, 1, "", "Forward"]], "compass.ocean.tests.global_convergence.cosine_bell.forward.Forward": [[285, 1, 1, "", "__init__"], [286, 1, 1, "", "get_dt"], [287, 1, 1, "", "run"], [288, 1, 1, "", "setup"]], "compass.ocean.tests.global_convergence.cosine_bell.init": [[289, 0, 1, "", "Init"]], "compass.ocean.tests.global_convergence.cosine_bell.init.Init": [[289, 1, 1, "", "__init__"], [290, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean": [[291, 0, 1, "", "GlobalOcean"], [295, 3, 0, "-", "configure"]], "compass.ocean.tests.global_ocean.GlobalOcean": [[291, 1, 1, "", "__init__"]], "compass.ocean.tests.global_ocean.analysis_test": [[292, 0, 1, "", "AnalysisTest"]], "compass.ocean.tests.global_ocean.analysis_test.AnalysisTest": [[292, 1, 1, "", "__init__"], [293, 1, 1, "", "configure"], [294, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.configure": [[296, 2, 1, "", "configure_global_ocean"]], "compass.ocean.tests.global_ocean.daily_output_test": [[297, 0, 1, "", "DailyOutputTest"]], "compass.ocean.tests.global_ocean.daily_output_test.DailyOutputTest": [[297, 1, 1, "", "__init__"], [298, 1, 1, "", "configure"], [299, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.decomp_test": [[300, 0, 1, "", "DecompTest"]], "compass.ocean.tests.global_ocean.decomp_test.DecompTest": [[300, 1, 1, "", "__init__"], [301, 1, 1, "", "configure"], [302, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.dynamic_adjustment": [[303, 0, 1, "", "DynamicAdjustment"]], "compass.ocean.tests.global_ocean.dynamic_adjustment.DynamicAdjustment": [[303, 1, 1, "", "__init__"], [304, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.files_for_e3sm": [[305, 0, 1, "", "FilesForE3SM"]], "compass.ocean.tests.global_ocean.files_for_e3sm.FilesForE3SM": [[305, 1, 1, "", "__init__"], [306, 1, 1, "", "configure"], [307, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.files_for_e3sm.diagnostics_files": [[308, 0, 1, "", "DiagnosticsFiles"]], "compass.ocean.tests.global_ocean.files_for_e3sm.diagnostics_files.DiagnosticsFiles": [[308, 1, 1, "", "__init__"], [309, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.files_for_e3sm.ocean_graph_partition": [[310, 0, 1, "", "OceanGraphPartition"]], "compass.ocean.tests.global_ocean.files_for_e3sm.ocean_graph_partition.OceanGraphPartition": [[310, 1, 1, "", "__init__"], [311, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.files_for_e3sm.ocean_initial_condition": [[312, 0, 1, "", "OceanInitialCondition"]], "compass.ocean.tests.global_ocean.files_for_e3sm.ocean_initial_condition.OceanInitialCondition": [[312, 1, 1, "", "__init__"], [313, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.files_for_e3sm.scrip": [[314, 0, 1, "", "Scrip"]], "compass.ocean.tests.global_ocean.files_for_e3sm.scrip.Scrip": [[314, 1, 1, "", "__init__"], [315, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.files_for_e3sm.seaice_initial_condition": [[316, 0, 1, "", "SeaiceInitialCondition"]], "compass.ocean.tests.global_ocean.files_for_e3sm.seaice_initial_condition.SeaiceInitialCondition": [[316, 1, 1, "", "__init__"], [317, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.forward": [[318, 0, 1, "", "ForwardStep"], [321, 0, 1, "", "ForwardTestCase"]], "compass.ocean.tests.global_ocean.forward.ForwardStep": [[318, 1, 1, "", "__init__"], [319, 1, 1, "", "run"], [320, 1, 1, "", "setup"]], "compass.ocean.tests.global_ocean.forward.ForwardTestCase": [[321, 1, 1, "", "__init__"], [322, 1, 1, "", "configure"], [323, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.init": [[324, 0, 1, "", "Init"]], "compass.ocean.tests.global_ocean.init.Init": [[324, 1, 1, "", "__init__"], [325, 1, 1, "", "configure"], [326, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.init.initial_state": [[327, 0, 1, "", "InitialState"]], "compass.ocean.tests.global_ocean.init.initial_state.InitialState": [[327, 1, 1, "", "__init__"], [328, 1, 1, "", "run"], [329, 1, 1, "", "setup"]], "compass.ocean.tests.global_ocean.init.ssh_adjustment": [[330, 0, 1, "", "SshAdjustment"]], "compass.ocean.tests.global_ocean.init.ssh_adjustment.SshAdjustment": [[330, 1, 1, "", "__init__"], [331, 1, 1, "", "run"], [332, 1, 1, "", "setup"]], "compass.ocean.tests.global_ocean.mesh": [[333, 0, 1, "", "Mesh"]], "compass.ocean.tests.global_ocean.mesh.Mesh": [[333, 1, 1, "", "__init__"], [334, 1, 1, "", "configure"], [335, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.mesh.ec30to60": [[336, 0, 1, "", "EC30to60BaseMesh"]], "compass.ocean.tests.global_ocean.mesh.ec30to60.EC30to60BaseMesh": [[336, 1, 1, "", "__init__"], [337, 1, 1, "", "build_cell_width_lat_lon"]], "compass.ocean.tests.global_ocean.mesh.ec30to60.dynamic_adjustment": [[338, 0, 1, "", "EC30to60DynamicAdjustment"]], "compass.ocean.tests.global_ocean.mesh.ec30to60.dynamic_adjustment.EC30to60DynamicAdjustment": [[338, 1, 1, "", "__init__"], [339, 1, 1, "", "configure"], [340, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.mesh.qu240.dynamic_adjustment": [[341, 0, 1, "", "QU240DynamicAdjustment"]], "compass.ocean.tests.global_ocean.mesh.qu240.dynamic_adjustment.QU240DynamicAdjustment": [[341, 1, 1, "", "__init__"], [342, 1, 1, "", "configure"], [343, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.mesh.so12to60": [[344, 0, 1, "", "SO12to60BaseMesh"]], "compass.ocean.tests.global_ocean.mesh.so12to60.SO12to60BaseMesh": [[344, 1, 1, "", "__init__"], [345, 1, 1, "", "build_cell_width_lat_lon"]], "compass.ocean.tests.global_ocean.mesh.so12to60.dynamic_adjustment": [[346, 0, 1, "", "SO12to60DynamicAdjustment"]], "compass.ocean.tests.global_ocean.mesh.so12to60.dynamic_adjustment.SO12to60DynamicAdjustment": [[346, 1, 1, "", "__init__"], [347, 1, 1, "", "configure"], [348, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.mesh.wc14": [[349, 0, 1, "", "WC14BaseMesh"]], "compass.ocean.tests.global_ocean.mesh.wc14.WC14BaseMesh": [[349, 1, 1, "", "__init__"], [350, 1, 1, "", "build_cell_width_lat_lon"]], "compass.ocean.tests.global_ocean.mesh.wc14.dynamic_adjustment": [[351, 0, 1, "", "WC14DynamicAdjustment"]], "compass.ocean.tests.global_ocean.mesh.wc14.dynamic_adjustment.WC14DynamicAdjustment": [[351, 1, 1, "", "__init__"], [352, 1, 1, "", "configure"], [353, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.metadata": [[354, 2, 1, "", "add_mesh_and_init_metadata"], [355, 2, 1, "", "get_e3sm_mesh_names"]], "compass.ocean.tests.global_ocean.performance_test": [[356, 0, 1, "", "PerformanceTest"]], "compass.ocean.tests.global_ocean.performance_test.PerformanceTest": [[356, 1, 1, "", "__init__"], [357, 1, 1, "", "configure"], [358, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.restart_test": [[359, 0, 1, "", "RestartTest"]], "compass.ocean.tests.global_ocean.restart_test.RestartTest": [[359, 1, 1, "", "__init__"], [360, 1, 1, "", "configure"], [361, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.threads_test": [[362, 0, 1, "", "ThreadsTest"]], "compass.ocean.tests.global_ocean.threads_test.ThreadsTest": [[362, 1, 1, "", "__init__"], [363, 1, 1, "", "configure"], [364, 1, 1, "", "run"]], "compass.ocean.tests.gotm": [[365, 0, 1, "", "Gotm"]], "compass.ocean.tests.gotm.Gotm": [[365, 1, 1, "", "__init__"]], "compass.ocean.tests.gotm.default": [[366, 0, 1, "", "Default"]], "compass.ocean.tests.gotm.default.Default": [[366, 1, 1, "", "__init__"], [367, 1, 1, "", "validate"]], "compass.ocean.tests.gotm.default.analysis": [[368, 0, 1, "", "Analysis"]], "compass.ocean.tests.gotm.default.analysis.Analysis": [[368, 1, 1, "", "__init__"], [369, 1, 1, "", "run"]], "compass.ocean.tests.gotm.default.forward": [[370, 0, 1, "", "Forward"]], "compass.ocean.tests.gotm.default.forward.Forward": [[370, 1, 1, "", "__init__"], [371, 1, 1, "", "run"]], "compass.ocean.tests.gotm.default.init": [[372, 0, 1, "", "Init"]], "compass.ocean.tests.gotm.default.init.Init": [[372, 1, 1, "", "__init__"], [373, 1, 1, "", "run"]], "compass.ocean.tests.hurricane": [[374, 0, 1, "", "Hurricane"], [381, 3, 0, "-", "configure"]], "compass.ocean.tests.hurricane.Hurricane": [[374, 1, 1, "", "__init__"]], "compass.ocean.tests.hurricane.analysis": [[375, 0, 1, "", "Analysis"]], "compass.ocean.tests.hurricane.analysis.Analysis": [[375, 1, 1, "", "__init__"], [376, 1, 1, "", "read_pointstats"], [377, 1, 1, "", "read_station_data"], [378, 1, 1, "", "read_station_file"], [379, 1, 1, "", "run"], [380, 1, 1, "", "setup"]], "compass.ocean.tests.hurricane.forward": [[382, 0, 1, "", "Forward"]], "compass.ocean.tests.hurricane.forward.Forward": [[382, 1, 1, "", "__init__"], [383, 1, 1, "", "configure"], [384, 1, 1, "", "run"]], "compass.ocean.tests.hurricane.forward.forward": [[385, 0, 1, "", "ForwardStep"]], "compass.ocean.tests.hurricane.forward.forward.ForwardStep": [[385, 1, 1, "", "__init__"], [386, 1, 1, "", "run"], [387, 1, 1, "", "setup"]], "compass.ocean.tests.hurricane.init": [[388, 0, 1, "", "Init"]], "compass.ocean.tests.hurricane.init.Init": [[388, 1, 1, "", "__init__"], [389, 1, 1, "", "configure"], [390, 1, 1, "", "run"]], "compass.ocean.tests.hurricane.init.create_pointstats_file": [[391, 0, 1, "", "CreatePointstatsFile"]], "compass.ocean.tests.hurricane.init.create_pointstats_file.CreatePointstatsFile": [[391, 1, 1, "", "__init__"], [392, 1, 1, "", "create_pointstats_file"], [393, 1, 1, "", "run"]], "compass.ocean.tests.hurricane.init.initial_state": [[394, 0, 1, "", "InitialState"]], "compass.ocean.tests.hurricane.init.initial_state.InitialState": [[394, 1, 1, "", "__init__"], [395, 1, 1, "", "run"], [396, 1, 1, "", "setup"]], "compass.ocean.tests.hurricane.init.interpolate_atm_forcing": [[397, 0, 1, "", "InterpolateAtmForcing"]], "compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing": [[397, 1, 1, "", "__init__"], [398, 1, 1, "", "interpolate_data_to_grid"], [399, 1, 1, "", "plot_interp_data"], [400, 1, 1, "", "run"], [401, 1, 1, "", "write_to_file"]], "compass.ocean.tests.hurricane.mesh": [[402, 0, 1, "", "Mesh"]], "compass.ocean.tests.hurricane.mesh.Mesh": [[402, 1, 1, "", "__init__"], [403, 1, 1, "", "configure"], [404, 1, 1, "", "run"]], "compass.ocean.tests.hurricane.mesh.dequ120at30cr10rr2": [[405, 0, 1, "", "DEQU120at30cr10rr2BaseMesh"]], "compass.ocean.tests.hurricane.mesh.dequ120at30cr10rr2.DEQU120at30cr10rr2BaseMesh": [[405, 1, 1, "", "__init__"], [406, 1, 1, "", "build_cell_width_lat_lon"]], "compass.ocean.tests.ice_shelf_2d": [[407, 0, 1, "", "IceShelf2d"], [408, 2, 1, "", "configure"]], "compass.ocean.tests.ice_shelf_2d.IceShelf2d": [[407, 1, 1, "", "__init__"]], "compass.ocean.tests.ice_shelf_2d.default": [[409, 0, 1, "", "Default"]], "compass.ocean.tests.ice_shelf_2d.default.Default": [[409, 1, 1, "", "__init__"], [410, 1, 1, "", "configure"], [411, 1, 1, "", "run"]], "compass.ocean.tests.ice_shelf_2d.forward": [[412, 0, 1, "", "Forward"]], "compass.ocean.tests.ice_shelf_2d.forward.Forward": [[412, 1, 1, "", "__init__"], [413, 1, 1, "", "run"], [414, 1, 1, "", "setup"]], "compass.ocean.tests.ice_shelf_2d.initial_state": [[415, 0, 1, "", "InitialState"]], "compass.ocean.tests.ice_shelf_2d.initial_state.InitialState": [[415, 1, 1, "", "__init__"], [416, 1, 1, "", "run"]], "compass.ocean.tests.ice_shelf_2d.restart_test": [[417, 0, 1, "", "RestartTest"]], "compass.ocean.tests.ice_shelf_2d.restart_test.RestartTest": [[417, 1, 1, "", "__init__"], [418, 1, 1, "", "configure"], [419, 1, 1, "", "run"]], "compass.ocean.tests.ice_shelf_2d.ssh_adjustment": [[420, 0, 1, "", "SshAdjustment"]], "compass.ocean.tests.ice_shelf_2d.ssh_adjustment.SshAdjustment": [[420, 1, 1, "", "__init__"], [421, 1, 1, "", "run"], [422, 1, 1, "", "setup"]], "compass.ocean.tests.ice_shelf_2d.viz": [[423, 0, 1, "", "Viz"]], "compass.ocean.tests.ice_shelf_2d.viz.Viz": [[423, 1, 1, "", "__init__"], [424, 1, 1, "", "run"]], "compass.ocean.tests.internal_wave": [[425, 0, 1, "", "InternalWave"]], "compass.ocean.tests.internal_wave.InternalWave": [[425, 1, 1, "", "__init__"]], "compass.ocean.tests.internal_wave.default": [[426, 0, 1, "", "Default"]], "compass.ocean.tests.internal_wave.default.Default": [[426, 1, 1, "", "__init__"], [427, 1, 1, "", "validate"]], "compass.ocean.tests.internal_wave.forward": [[428, 0, 1, "", "Forward"]], "compass.ocean.tests.internal_wave.forward.Forward": [[428, 1, 1, "", "__init__"], [429, 1, 1, "", "run"]], "compass.ocean.tests.internal_wave.initial_state": [[430, 0, 1, "", "InitialState"]], "compass.ocean.tests.internal_wave.initial_state.InitialState": [[430, 1, 1, "", "__init__"], [431, 1, 1, "", "run"]], "compass.ocean.tests.internal_wave.rpe_test": [[432, 0, 1, "", "RpeTest"]], "compass.ocean.tests.internal_wave.rpe_test.RpeTest": [[432, 1, 1, "", "__init__"]], "compass.ocean.tests.internal_wave.rpe_test.analysis": [[433, 0, 1, "", "Analysis"]], "compass.ocean.tests.internal_wave.rpe_test.analysis.Analysis": [[433, 1, 1, "", "__init__"], [434, 1, 1, "", "run"]], "compass.ocean.tests.internal_wave.ten_day_test": [[435, 0, 1, "", "TenDayTest"]], "compass.ocean.tests.internal_wave.ten_day_test.TenDayTest": [[435, 1, 1, "", "__init__"], [436, 1, 1, "", "validate"]], "compass.ocean.tests.internal_wave.viz": [[437, 0, 1, "", "Viz"]], "compass.ocean.tests.internal_wave.viz.Viz": [[437, 1, 1, "", "__init__"], [438, 1, 1, "", "run"]], "compass.ocean.tests.isomip_plus": [[439, 0, 1, "", "IsomipPlus"]], "compass.ocean.tests.isomip_plus.IsomipPlus": [[439, 1, 1, "", "__init__"]], "compass.ocean.tests.isomip_plus.evap": [[440, 2, 1, "", "update_evaporation_flux"]], "compass.ocean.tests.isomip_plus.forward": [[441, 0, 1, "", "Forward"]], "compass.ocean.tests.isomip_plus.forward.Forward": [[441, 1, 1, "", "__init__"], [442, 1, 1, "", "run"], [443, 1, 1, "", "setup"]], "compass.ocean.tests.isomip_plus.geom": [[444, 2, 1, "", "interpolate_ocean_mask"], [445, 2, 1, "", "process_input_geometry"]], "compass.ocean.tests.isomip_plus.initial_state": [[446, 0, 1, "", "InitialState"]], "compass.ocean.tests.isomip_plus.initial_state.InitialState": [[446, 1, 1, "", "__init__"], [447, 1, 1, "", "run"]], "compass.ocean.tests.isomip_plus.misomip": [[448, 0, 1, "", "Misomip"]], "compass.ocean.tests.isomip_plus.misomip.Misomip": [[448, 1, 1, "", "__init__"], [449, 1, 1, "", "run"]], "compass.ocean.tests.isomip_plus.ocean_test": [[450, 0, 1, "", "OceanTest"]], "compass.ocean.tests.isomip_plus.ocean_test.OceanTest": [[450, 1, 1, "", "__init__"], [451, 1, 1, "", "configure"], [452, 1, 1, "", "run"]], "compass.ocean.tests.isomip_plus.ssh_adjustment": [[453, 0, 1, "", "SshAdjustment"]], "compass.ocean.tests.isomip_plus.ssh_adjustment.SshAdjustment": [[453, 1, 1, "", "__init__"], [454, 1, 1, "", "run"], [455, 1, 1, "", "setup"]], "compass.ocean.tests.isomip_plus.streamfunction": [[456, 0, 1, "", "Streamfunction"]], "compass.ocean.tests.isomip_plus.streamfunction.Streamfunction": [[456, 1, 1, "", "__init__"], [457, 1, 1, "", "run"]], "compass.ocean.tests.isomip_plus.viz": [[458, 0, 1, "", "Viz"], [460, 2, 1, "", "file_complete"]], "compass.ocean.tests.isomip_plus.viz.Viz": [[458, 1, 1, "", "__init__"], [459, 1, 1, "", "run"]], "compass.ocean.tests.isomip_plus.viz.plot": [[461, 0, 1, "", "MoviePlotter"], [473, 0, 1, "", "TimeSeriesPlotter"]], "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter": [[461, 1, 1, "", "__init__"], [462, 1, 1, "", "images_to_movies"], [463, 1, 1, "", "plot_3d_field_top_bot_section"], [464, 1, 1, "", "plot_barotropic_streamfunction"], [465, 1, 1, "", "plot_horiz_series"], [466, 1, 1, "", "plot_ice_shelf_boundary_variables"], [467, 1, 1, "", "plot_layer_interfaces"], [468, 1, 1, "", "plot_melt_rates"], [469, 1, 1, "", "plot_overturning_streamfunction"], [470, 1, 1, "", "plot_potential_density"], [471, 1, 1, "", "plot_salinity"], [472, 1, 1, "", "plot_temperature"]], "compass.ocean.tests.isomip_plus.viz.plot.TimeSeriesPlotter": [[473, 1, 1, "", "__init__"], [474, 1, 1, "", "plot_melt_time_series"], [475, 1, 1, "", "plot_time_series"]], "compass.ocean.tests.planar_convergence": [[476, 0, 1, "", "PlanarConvergence"]], "compass.ocean.tests.planar_convergence.PlanarConvergence": [[476, 1, 1, "", "__init__"]], "compass.ocean.tests.planar_convergence.conv_init": [[477, 0, 1, "", "ConvInit"]], "compass.ocean.tests.planar_convergence.conv_init.ConvInit": [[477, 1, 1, "", "__init__"], [478, 1, 1, "", "run"]], "compass.ocean.tests.planar_convergence.conv_test_case": [[479, 0, 1, "", "ConvTestCase"]], "compass.ocean.tests.planar_convergence.conv_test_case.ConvTestCase": [[479, 1, 1, "", "__init__"], [480, 1, 1, "", "configure"], [481, 1, 1, "", "run"], [482, 1, 1, "", "update_cores"]], "compass.ocean.tests.planar_convergence.forward": [[483, 0, 1, "", "Forward"]], "compass.ocean.tests.planar_convergence.forward.Forward": [[483, 1, 1, "", "__init__"], [484, 1, 1, "", "get_dt_duration"], [485, 1, 1, "", "run"], [486, 1, 1, "", "setup"]], "compass.ocean.tests.planar_convergence.horizontal_advection": [[487, 0, 1, "", "HorizontalAdvection"]], "compass.ocean.tests.planar_convergence.horizontal_advection.HorizontalAdvection": [[487, 1, 1, "", "__init__"], [488, 1, 1, "", "configure"], [489, 1, 1, "", "run"]], "compass.ocean.tests.planar_convergence.horizontal_advection.analysis": [[490, 0, 1, "", "Analysis"]], "compass.ocean.tests.planar_convergence.horizontal_advection.analysis.Analysis": [[490, 1, 1, "", "__init__"], [491, 1, 1, "", "rmse"], [492, 1, 1, "", "run"]], "compass.ocean.tests.planar_convergence.horizontal_advection.init": [[493, 0, 1, "", "Init"]], "compass.ocean.tests.planar_convergence.horizontal_advection.init.Init": [[493, 1, 1, "", "__init__"], [494, 1, 1, "", "run"]], "compass.ocean.tests.soma": [[495, 0, 1, "", "Soma"]], "compass.ocean.tests.soma.Soma": [[495, 1, 1, "", "__init__"]], "compass.ocean.tests.soma.analysis": [[496, 0, 1, "", "Analysis"]], "compass.ocean.tests.soma.analysis.Analysis": [[496, 1, 1, "", "__init__"], [497, 1, 1, "", "run"]], "compass.ocean.tests.soma.forward": [[498, 0, 1, "", "Forward"]], "compass.ocean.tests.soma.forward.Forward": [[498, 1, 1, "", "__init__"], [499, 1, 1, "", "run"]], "compass.ocean.tests.soma.initial_state": [[500, 0, 1, "", "InitialState"]], "compass.ocean.tests.soma.initial_state.InitialState": [[500, 1, 1, "", "__init__"], [501, 1, 1, "", "run"]], "compass.ocean.tests.soma.soma_test_case": [[502, 0, 1, "", "SomaTestCase"]], "compass.ocean.tests.soma.soma_test_case.SomaTestCase": [[502, 1, 1, "", "__init__"], [503, 1, 1, "", "validate"]], "compass.ocean.tests.sphere_transport": [[504, 0, 1, "", "SphereTransport"]], "compass.ocean.tests.sphere_transport.SphereTransport": [[504, 1, 1, "", "__init__"]], "compass.ocean.tests.sphere_transport.correlated_tracers_2d": [[505, 0, 1, "", "CorrelatedTracers2D"]], "compass.ocean.tests.sphere_transport.correlated_tracers_2d.CorrelatedTracers2D": [[505, 1, 1, "", "__init__"], [506, 1, 1, "", "configure"], [507, 1, 1, "", "run"]], "compass.ocean.tests.sphere_transport.correlated_tracers_2d.analysis": [[508, 0, 1, "", "Analysis"]], "compass.ocean.tests.sphere_transport.correlated_tracers_2d.analysis.Analysis": [[508, 1, 1, "", "__init__"], [509, 1, 1, "", "run"]], "compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward": [[510, 0, 1, "", "Forward"]], "compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.Forward": [[510, 1, 1, "", "__init__"], [511, 1, 1, "", "get_timestep_str"], [512, 1, 1, "", "run"], [513, 1, 1, "", "setup"]], "compass.ocean.tests.sphere_transport.correlated_tracers_2d.init": [[514, 0, 1, "", "Init"]], "compass.ocean.tests.sphere_transport.correlated_tracers_2d.init.Init": [[514, 1, 1, "", "__init__"], [515, 1, 1, "", "run"]], "compass.ocean.tests.sphere_transport.correlated_tracers_2d.mesh": [[516, 0, 1, "", "Mesh"]], "compass.ocean.tests.sphere_transport.correlated_tracers_2d.mesh.Mesh": [[516, 1, 1, "", "__init__"], [517, 1, 1, "", "build_cell_width_lat_lon"], [518, 1, 1, "", "run"]], "compass.ocean.tests.sphere_transport.divergent_2d": [[519, 0, 1, "", "Divergent2D"]], "compass.ocean.tests.sphere_transport.divergent_2d.Divergent2D": [[519, 1, 1, "", "__init__"], [520, 1, 1, "", "configure"], [521, 1, 1, "", "run"]], "compass.ocean.tests.sphere_transport.divergent_2d.analysis": [[522, 0, 1, "", "Analysis"]], "compass.ocean.tests.sphere_transport.divergent_2d.analysis.Analysis": [[522, 1, 1, "", "__init__"], [523, 1, 1, "", "run"]], "compass.ocean.tests.sphere_transport.divergent_2d.forward": [[524, 0, 1, "", "Forward"]], "compass.ocean.tests.sphere_transport.divergent_2d.forward.Forward": [[524, 1, 1, "", "__init__"], [525, 1, 1, "", "get_timestep_str"], [526, 1, 1, "", "run"], [527, 1, 1, "", "setup"]], "compass.ocean.tests.sphere_transport.divergent_2d.init": [[528, 0, 1, "", "Init"]], "compass.ocean.tests.sphere_transport.divergent_2d.init.Init": [[528, 1, 1, "", "__init__"], [529, 1, 1, "", "run"]], "compass.ocean.tests.sphere_transport.divergent_2d.mesh": [[530, 0, 1, "", "Mesh"]], "compass.ocean.tests.sphere_transport.divergent_2d.mesh.Mesh": [[530, 1, 1, "", "__init__"], [531, 1, 1, "", "build_cell_width_lat_lon"], [532, 1, 1, "", "run"]], "compass.ocean.tests.sphere_transport.nondivergent_2d": [[533, 0, 1, "", "Nondivergent2D"]], "compass.ocean.tests.sphere_transport.nondivergent_2d.Nondivergent2D": [[533, 1, 1, "", "__init__"], [534, 1, 1, "", "configure"], [535, 1, 1, "", "run"]], "compass.ocean.tests.sphere_transport.nondivergent_2d.analysis": [[536, 0, 1, "", "Analysis"]], "compass.ocean.tests.sphere_transport.nondivergent_2d.analysis.Analysis": [[536, 1, 1, "", "__init__"], [537, 1, 1, "", "run"]], "compass.ocean.tests.sphere_transport.nondivergent_2d.forward": [[538, 0, 1, "", "Forward"]], "compass.ocean.tests.sphere_transport.nondivergent_2d.forward.Forward": [[538, 1, 1, "", "__init__"], [539, 1, 1, "", "get_timestep_str"], [540, 1, 1, "", "run"], [541, 1, 1, "", "setup"]], "compass.ocean.tests.sphere_transport.nondivergent_2d.init": [[542, 0, 1, "", "Init"]], "compass.ocean.tests.sphere_transport.nondivergent_2d.init.Init": [[542, 1, 1, "", "__init__"], [543, 1, 1, "", "run"]], "compass.ocean.tests.sphere_transport.nondivergent_2d.mesh": [[544, 0, 1, "", "Mesh"]], "compass.ocean.tests.sphere_transport.nondivergent_2d.mesh.Mesh": [[544, 1, 1, "", "__init__"], [545, 1, 1, "", "build_cell_width_lat_lon"], [546, 1, 1, "", "run"]], "compass.ocean.tests.sphere_transport.process_output": [[547, 2, 1, "", "compute_convergence_rates"], [548, 2, 1, "", "compute_error_from_output_ncfile"], [549, 2, 1, "", "make_convergence_arrays"], [550, 2, 1, "", "plot_convergence"], [551, 2, 1, "", "plot_filament"], [552, 2, 1, "", "plot_over_and_undershoot_errors"], [553, 2, 1, "", "plot_sol"], [554, 2, 1, "", "print_data_as_csv"], [555, 2, 1, "", "print_error_conv_table"], [556, 2, 1, "", "read_ncl_rgb_file"]], "compass.ocean.tests.sphere_transport.rotation_2d": [[557, 0, 1, "", "Rotation2D"]], "compass.ocean.tests.sphere_transport.rotation_2d.Rotation2D": [[557, 1, 1, "", "__init__"], [558, 1, 1, "", "configure"], [559, 1, 1, "", "run"]], "compass.ocean.tests.sphere_transport.rotation_2d.analysis": [[560, 0, 1, "", "Analysis"]], "compass.ocean.tests.sphere_transport.rotation_2d.analysis.Analysis": [[560, 1, 1, "", "__init__"], [561, 1, 1, "", "run"]], "compass.ocean.tests.sphere_transport.rotation_2d.forward": [[562, 0, 1, "", "Forward"]], "compass.ocean.tests.sphere_transport.rotation_2d.forward.Forward": [[562, 1, 1, "", "__init__"], [563, 1, 1, "", "get_timestep_str"], [564, 1, 1, "", "run"], [565, 1, 1, "", "setup"]], "compass.ocean.tests.sphere_transport.rotation_2d.init": [[566, 0, 1, "", "Init"]], "compass.ocean.tests.sphere_transport.rotation_2d.init.Init": [[566, 1, 1, "", "__init__"], [567, 1, 1, "", "run"]], "compass.ocean.tests.sphere_transport.rotation_2d.mesh": [[568, 0, 1, "", "Mesh"]], "compass.ocean.tests.sphere_transport.rotation_2d.mesh.Mesh": [[568, 1, 1, "", "__init__"], [569, 1, 1, "", "build_cell_width_lat_lon"], [570, 1, 1, "", "run"]], "compass.ocean.tests.ziso": [[571, 0, 1, "", "Ziso"], [572, 0, 1, "", "ZisoTestCase"], [575, 2, 1, "", "configure"]], "compass.ocean.tests.ziso.Ziso": [[571, 1, 1, "", "__init__"]], "compass.ocean.tests.ziso.ZisoTestCase": [[572, 1, 1, "", "__init__"], [573, 1, 1, "", "configure"], [574, 1, 1, "", "run"]], "compass.ocean.tests.ziso.forward": [[576, 0, 1, "", "Forward"]], "compass.ocean.tests.ziso.forward.Forward": [[576, 1, 1, "", "__init__"], [577, 1, 1, "", "run"], [578, 1, 1, "", "setup"]], "compass.ocean.tests.ziso.initial_state": [[579, 0, 1, "", "InitialState"]], "compass.ocean.tests.ziso.initial_state.InitialState": [[579, 1, 1, "", "__init__"], [580, 1, 1, "", "run"]], "compass.ocean.tests.ziso.with_frazil": [[581, 0, 1, "", "WithFrazil"]], "compass.ocean.tests.ziso.with_frazil.WithFrazil": [[581, 1, 1, "", "__init__"], [582, 1, 1, "", "configure"], [583, 1, 1, "", "run"]], "compass.ocean.vertical.grid_1d": [[584, 2, 1, "", "generate_1d_grid"], [585, 2, 1, "", "write_1d_grid"]], "compass.ocean.vertical": [[586, 2, 1, "", "init_vertical_coord"]], "compass.ocean.vertical.partial_cells": [[587, 2, 1, "", "alter_bottom_depth"], [588, 2, 1, "", "alter_ssh"]], "compass.ocean.vertical.zlevel": [[589, 2, 1, "", "compute_min_max_level_cell"], [590, 2, 1, "", "compute_z_level_layer_thickness"], [591, 2, 1, "", "compute_z_level_resting_thickness"], [592, 2, 1, "", "init_z_level_vertical_coord"]], "compass.ocean.vertical.zstar": [[593, 2, 1, "", "init_z_star_vertical_coord"]], "compass.parallel": [[63, 2, 1, "", "check_parallel_system"], [64, 2, 1, "", "get_available_cores_and_nodes"], [65, 2, 1, "", "run_command"], [66, 2, 1, "", "set_cores_per_node"]], "compass.provenance": [[67, 2, 1, "", "write"]], "compass.run.serial": [[68, 2, 1, "", "run_single_step"], [69, 2, 1, "", "run_tests"]], "compass.setup": [[70, 2, 1, "", "setup_case"], [71, 2, 1, "", "setup_cases"]], "compass.suite": [[72, 2, 1, "", "clean_suite"], [73, 2, 1, "", "setup_suite"]], "compass.validate": [[74, 2, 1, "", "compare_timers"], [75, 2, 1, "", "compare_variables"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:module"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "module", "Python module"]}, "titleterms": {"cach": [0, 4, 6, 8, 34, 610], "output": [0, 1, 610, 617], "from": [0, 610, 612, 641], "compass": [0, 1, 4, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 610, 611, 612, 615, 618, 662], "step": [0, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 227, 598, 610, 616, 617, 618, 649, 650, 652, 657, 659], "summari": [0, 1, 3], "requir": [0, 1, 3], "select": 0, "whether": 0, "us": 0, "updat": [0, 8, 610, 612, 618], "uniqu": 0, "identifi": 0, "either": 0, "normal": 0, "version": [0, 615, 665], "design": [0, 1, 2, 3], "implement": [0, 1, 3], "test": [0, 1, 3, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 216, 227, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 598, 602, 610, 611, 616, 617, 618, 619, 622, 631, 646, 650, 652, 654, 662, 663, 664], "python": 1, "packag": [1, 611], "make": [1, 8, 616, 617, 618], "case": [1, 227, 598, 610, 611, 616, 617, 618, 619, 650, 652, 662, 663], "easi": 1, "understand": 1, "modifi": 1, "creat": [1, 612, 617, 652], "share": [1, 611, 650, 652, 653, 656, 657, 658, 661], "code": [1, 611, 665], "configur": [1, 28, 125, 130, 244, 246, 249, 258, 261, 267, 271, 280, 293, 295, 296, 298, 301, 306, 322, 325, 334, 339, 342, 347, 352, 357, 360, 363, 381, 383, 389, 403, 408, 410, 418, 451, 480, 488, 506, 520, 534, 558, 573, 575, 582, 598, 610, 613], "option": [1, 3, 8, 610, 612, 617, 618, 623, 624, 625, 626, 627, 628, 629, 630, 632, 633, 635, 636, 637, 638, 639, 640, 641, 647, 648, 649, 650, 651, 652, 653, 655, 656, 657, 658, 659, 660, 661], "abil": 1, "specifi": 1, "core": [1, 4, 207, 594, 610, 611, 621, 645, 649, 657, 659], "count": 1, "machin": [1, 226, 612, 641, 662], "specif": 1, "data": [1, 640], "looser": 1, "more": 1, "flexibl": 1, "directori": [1, 610], "structur": [1, 610], "user": [1, 612, 615, 619, 662], "develop": [1, 612, 615, 616, 617, 618], "friendli": 1, "document": [1, 2, 5, 7, 616, 617, 618, 665], "consider": 1, "relat": 1, "run": [1, 4, 6, 8, 19, 29, 48, 53, 56, 68, 69, 83, 86, 88, 90, 92, 96, 98, 100, 103, 105, 107, 111, 113, 115, 118, 120, 122, 126, 128, 131, 133, 136, 139, 142, 144, 147, 149, 151, 154, 159, 161, 165, 168, 170, 172, 175, 177, 179, 181, 185, 187, 190, 192, 195, 198, 201, 203, 205, 234, 238, 247, 250, 252, 255, 259, 262, 264, 268, 273, 275, 277, 281, 284, 287, 290, 294, 299, 302, 304, 307, 309, 311, 313, 315, 317, 319, 323, 326, 328, 331, 335, 340, 343, 348, 353, 358, 361, 364, 369, 371, 373, 379, 384, 386, 390, 393, 395, 400, 404, 411, 413, 416, 419, 421, 424, 429, 431, 434, 438, 442, 447, 449, 452, 454, 457, 459, 478, 481, 485, 489, 492, 494, 497, 499, 501, 507, 509, 512, 515, 518, 521, 523, 526, 529, 532, 535, 537, 540, 543, 546, 559, 561, 564, 567, 570, 574, 577, 580, 583, 610, 612, 617, 618, 656, 662], "parallel": [1, 4, 63, 64, 65, 66], "resolut": [1, 617, 618, 649, 657, 659, 660], "can": 1, "paramet": [1, 616, 617, 618], "i": 1, "alter": 1, "rerun": 1, "support": [1, 226, 612, 641, 662], "pre": 1, "made": 1, "initi": [1, 617, 652], "condit": [1, 617], "file": [1, 8, 228, 610, 617, 619, 652], "batch": 1, "submiss": 1, "algorithm": [1, 3], "constructor": [1, 610], "setup": [1, 4, 6, 8, 22, 49, 54, 58, 70, 71, 101, 116, 137, 152, 173, 196, 206, 235, 253, 256, 265, 288, 320, 329, 332, 380, 387, 396, 414, 422, 443, 455, 486, 513, 527, 541, 565, 578, 610], "global": 1, "ocean": [1, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 645], "group": [1, 76, 216, 227, 602, 610, 611, 616, 617, 618, 631, 654], "framework": [1, 4, 8, 77, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 227, 228, 595, 596, 598, 601, 603, 604, 606, 609, 611, 620, 643], "within": [1, 611], "an": [1, 610, 611, 616, 617], "mpa": [1, 4, 8, 610, 611, 612, 662], "max_memori": 1, "max_disk": 1, "input": [1, 610], "templat": [3, 610], "name": 3, "topic": 3, "here": 3, "same": 3, "valid": [3, 4, 8, 30, 74, 75, 81, 157, 163, 367, 427, 436, 503, 610, 618], "api": 4, "refer": 4, "command": [4, 6], "line": [4, 6], "interfac": [4, 6], "list": [4, 6, 8, 39, 40, 41], "clean": [4, 6, 8, 35], "suit": [4, 6, 8, 72, 73, 610, 622, 646, 662, 664], "base": [4, 617], "class": [4, 598, 611], "mpas_cor": [4, 62], "testgroup": [4, 31, 32], "testcas": [4, 26, 27, 28, 29, 30, 610], "config": [4, 8, 36, 617, 618, 619, 623, 624, 625, 626, 627, 628, 629, 630, 632, 633, 635, 636, 637, 638, 639, 640, 641, 647, 648, 649, 650, 651, 652, 653, 655, 656, 657, 658, 659, 660, 661], "io": [4, 8, 37, 38], "log": [4, 8, 42], "mesh": [4, 8, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 145, 146, 147, 158, 159, 184, 185, 189, 190, 213, 214, 217, 218, 220, 228, 233, 234, 235, 236, 237, 238, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 402, 403, 404, 405, 406, 516, 517, 518, 530, 531, 532, 544, 545, 546, 568, 569, 570, 597, 598, 600, 607, 608, 616, 617, 650, 652], "model": [4, 8, 59, 60, 61, 610], "proven": [4, 8, 67], "build": [5, 612, 662], "docstr": 7, "modul": [8, 611, 612], "serial": [8, 68, 69], "comment": 8, "symlink": [8, 38, 610], "download": [8, 37, 610], "spheric": [8, 55, 56, 57, 58], "partit": [8, 60], "pio": 8, "namelist": [8, 228, 610, 617, 618], "graph": 8, "variabl": 8, "norm": 8, "timer": 8, "mpascor": [9, 10], "add_test_group": 10, "add_input_fil": 12, "add_model_as_input": 13, "add_namelist_fil": 14, "add_namelist_opt": 15, "add_output_fil": 16, "add_streams_fil": 17, "constrain_resourc": [18, 610], "runtime_setup": [20, 610], "set_resourc": 21, "update_namelist_at_runtim": 23, "update_namelist_pio": 24, "update_streams_at_runtim": 25, "add_step": 27, "add_test_cas": 32, "__main__": 33, "main": 33, "update_cach": 34, "clean_cas": 35, "compassconfigpars": 36, "list_cas": 39, "list_machin": 40, "list_suit": 41, "log_method_cal": 42, "icosahedralmeshstep": [43, 44, 45, 46, 47, 48, 49], "build_subdivisions_cell_width_lat_lon": 44, "get_cell_width": 45, "get_subdivis": 46, "make_jigsaw_mesh": [47, 52], "quasiuniformsphericalmeshstep": [50, 51, 52, 53, 54], "build_cell_width_lat_lon": [51, 337, 345, 350, 406, 517, 531, 545, 569], "sphericalbasestep": [55, 56, 57, 58], "save_and_plot_cell_width": 57, "make_graph_fil": 59, "run_model": [61, 82, 83, 87, 88, 99, 100, 101, 135, 136, 137, 150, 151, 152, 164, 165, 171, 172, 173, 194, 195, 196, 204, 205, 206, 212, 213, 214, 215, 219, 220], "get_mpas_cor": 62, "check_parallel_system": 63, "get_available_cores_and_nod": 64, "run_command": 65, "set_cores_per_nod": 66, "write": [67, 240], "run_single_step": 68, "run_test": 69, "setup_cas": [70, 71], "clean_suit": 72, "setup_suit": 73, "compare_tim": 74, "compare_vari": 75, "landic": [76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 621], "calving_dt_converg": [76, 79, 80, 81, 82, 83, 208, 622, 623], "circular_shelf": [76, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 209, 624], "dome": [76, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 210, 625], "enthalpy_benchmark": [76, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 212, 627], "eismint2": [76, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 211, 626], "greenland": [76, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 213, 628], "humboldt": [76, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 214, 629], "hydro_radi": [76, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 215, 630], "kangerlussuaq": [76, 183, 184, 185, 186, 187, 217, 632], "koge_bugt_": [76, 188, 189, 190, 191, 192, 218, 633], "mismipplu": [76, 193, 194, 195, 196, 197, 198, 219, 634], "thwait": [76, 199, 200, 201, 202, 203, 204, 205, 206, 220, 635], "land": 77, "ic": [77, 228, 642, 650], "calvingdtconverg": 79, "dt_convergence_test": [80, 81, 623], "dtconvergencetest": [80, 81, 208], "runmodel": [82, 83, 87, 88, 99, 100, 101, 135, 136, 137, 150, 151, 152, 164, 165, 171, 172, 173, 194, 195, 196, 204, 205, 206, 208, 209, 210], "circularshelf": 84, "decomposition_test": [85, 86, 95, 96, 110, 111, 141, 142, 156, 157, 167, 168, 200, 201, 211, 213, 214, 215, 220, 624, 625, 626, 628, 629, 630, 635], "decompositiontest": [85, 86, 95, 96, 110, 111, 141, 142, 156, 157, 167, 168, 200, 201, 209, 210], "setup_mesh": [89, 90, 102, 103, 117, 118, 138, 139, 174, 175, 211, 212, 215], "setupmesh": [89, 90, 102, 103, 117, 118, 138, 139, 174, 175, 209, 210], "visual": [91, 92, 93, 106, 107, 108, 121, 122, 123, 127, 128, 132, 133, 180, 181, 182, 209, 210, 211, 215], "visualize_circular_shelf": 93, "restart_test": [97, 98, 112, 113, 148, 149, 162, 163, 169, 170, 202, 203, 211, 213, 214, 215, 220, 257, 258, 259, 359, 360, 361, 417, 418, 419, 595, 598, 601, 625, 626, 628, 629, 630, 635, 647, 650, 653], "restarttest": [97, 98, 112, 113, 148, 149, 162, 163, 169, 170, 202, 203, 210, 257, 258, 259, 359, 360, 361, 417, 418, 419], "smoke_test": [104, 105, 153, 154, 197, 198, 213, 219, 625, 628, 634], "smoketest": [104, 105, 153, 154, 197, 198, 210], "visualize_dom": 108, "run_experi": [114, 115, 116, 211], "runexperi": [114, 115, 116], "standard_experi": [119, 120, 121, 122, 123, 211, 626], "standardexperi": [119, 120], "visualize_eismint2": 123, "A": [124, 125, 126, 127, 128, 212, 619, 627], "b": [129, 130, 131, 132, 133, 212, 627], "enthalpybenchmark": 134, "high_res_mesh": [143, 144, 213, 220, 628, 635], "highresmesh": [143, 144], "build_cell_width": 146, "mesh_gen": [160, 161, 186, 187, 191, 192, 214, 217, 218, 629, 632, 633], "meshgen": [160, 161, 186, 187, 191, 192], "hydroradi": 166, "spinup_test": [176, 177, 215, 630], "spinuptest": [176, 177], "steady_state_drift_test": [178, 179, 215, 630], "steadystatedrifttest": [178, 179], "visualize_hydro_radi": 182, "kogebugt": 188, "enthalpy_decomposition_test": [211, 626], "enthalpy_restart_test": [211, 626], "anvil": [221, 636], "intel": [221, 222, 223, 224, 225, 636, 637, 638, 639, 640], "gnu": [221, 222, 223, 225, 636, 637, 638, 640], "badger": [222, 637], "chrysali": [223, 638], "compymcnodefac": [224, 639], "cori": [225, 640], "haswel": [225, 640], "other": [226, 617, 618, 641, 662], "baroclinic_channel": [227, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 595, 647], "drying_slop": [227, 269, 270, 271, 272, 273, 274, 275, 276, 277, 596, 648], "global_converg": [227, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 597, 649], "cosine_bel": [227, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 597, 616, 649], "global_ocean": [227, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 598, 650], "gotm": [227, 365, 366, 367, 368, 369, 370, 371, 372, 373, 599, 651], "default": [227, 248, 249, 250, 270, 271, 366, 367, 368, 369, 370, 371, 372, 373, 409, 410, 411, 426, 427, 595, 596, 599, 601, 603, 617, 647, 648, 651, 653, 655, 658, 661], "hurrican": [227, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 600, 652], "ice_shelf_2d": [227, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 601, 653], "internal_wav": [227, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 603, 655], "isomip_plu": [227, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 604, 656], "planar_converg": [227, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 605, 657], "horizontal_advect": [227, 487, 488, 489, 490, 491, 492, 493, 494, 605, 657], "soma": [227, 495, 496, 497, 498, 499, 500, 501, 502, 503, 606, 658], "sphere_transport": [227, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 607, 659], "correlated_tracers_2d": [227, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 607, 659], "divergent_2d": [227, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 607, 659], "nondivergent_2d": [227, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 607, 659], "rotation_2d": [227, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 607, 659], "ziso": [227, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 609, 661], "replac": 228, "stream": [228, 610, 617, 618], "vertic": [228, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 617, 644], "coordin": [228, 617, 644], "cull": [228, 233, 234, 235, 236], "includ": 228, "floodplain": [228, 237, 238], "hanei": [228, 230], "number": [228, 616], "shelf": [228, 642, 650], "caviti": [228, 642, 650], "particl": [228, 239, 240, 658, 661], "plot": [228, 241, 242, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475], "compute_haney_numb": 230, "iceshelf": [231, 232], "adjust_ssh": 231, "compute_land_ice_pressure_and_draft": 232, "cullmeshstep": [233, 234, 235], "cull_mesh": 236, "floodplainmeshstep": [237, 238], "remap_particl": 239, "plot_initial_st": 241, "plot_vertical_grid": 242, "baroclinicchannel": 243, "decomp_test": [245, 246, 247, 300, 301, 302, 595, 598, 647, 650], "decomptest": [245, 246, 247, 300, 301, 302], "forward": [251, 252, 253, 272, 273, 285, 286, 287, 288, 318, 319, 320, 321, 322, 323, 370, 371, 382, 383, 384, 385, 386, 387, 412, 413, 414, 428, 429, 441, 442, 443, 483, 484, 485, 486, 498, 499, 510, 511, 512, 513, 524, 525, 526, 527, 538, 539, 540, 541, 562, 563, 564, 565, 576, 577, 578, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 607, 609, 616, 617, 618, 650, 652], "initial_st": [254, 255, 256, 274, 275, 327, 328, 329, 394, 395, 396, 415, 416, 430, 431, 446, 447, 500, 501, 579, 580, 595, 596, 600, 601, 603, 604, 606, 609, 617], "initialst": [254, 255, 256, 274, 275, 327, 328, 329, 394, 395, 396, 415, 416, 430, 431, 446, 447, 500, 501, 579, 580], "rpe_test": [260, 261, 262, 263, 264, 265, 432, 433, 434, 595, 603, 617, 647, 655], "rpetest": [260, 261, 262, 432], "analysi": [263, 264, 265, 282, 283, 284, 368, 369, 375, 376, 377, 378, 379, 380, 433, 434, 490, 491, 492, 496, 497, 508, 509, 522, 523, 536, 537, 560, 561, 597, 599, 600, 605, 606, 607, 608, 616, 617, 618, 652], "threads_test": [266, 267, 268, 362, 363, 364, 595, 598, 650], "threadstest": [266, 267, 268, 362, 363, 364], "dryingslop": 269, "viz": [276, 277, 423, 424, 437, 438, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 596, 601, 604], "globalconverg": 278, "cosinebel": [279, 280, 281], "rmse": [283, 491], "get_dt": 286, "init": [289, 290, 324, 325, 326, 327, 328, 329, 330, 331, 332, 372, 373, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 493, 494, 514, 515, 528, 529, 542, 543, 566, 567, 597, 598, 599, 605, 607, 608, 616, 618, 650, 652], "globalocean": 291, "analysis_test": [292, 293, 294, 598, 650], "analysistest": [292, 293, 294], "configure_global_ocean": 296, "daily_output_test": [297, 298, 299, 598, 650], "dailyoutputtest": [297, 298, 299], "dynamic_adjust": [303, 304, 338, 339, 340, 341, 342, 343, 346, 347, 348, 351, 352, 353, 598, 650], "dynamicadjust": [303, 304], "files_for_e3sm": [305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 598, 650], "filesfore3sm": [305, 306, 307], "diagnostics_fil": [308, 309], "diagnosticsfil": [308, 309], "ocean_graph_partit": [310, 311], "oceangraphpartit": [310, 311], "ocean_initial_condit": [312, 313], "oceaninitialcondit": [312, 313], "scrip": [314, 315], "seaice_initial_condit": [316, 317], "seaiceinitialcondit": [316, 317], "forwardstep": [318, 319, 320, 385, 386, 387], "forwardtestcas": [321, 322, 323], "ssh_adjust": [330, 331, 332, 420, 421, 422, 453, 454, 455, 601, 604], "sshadjust": [330, 331, 332, 420, 421, 422, 453, 454, 455], "ec30to60": [336, 337, 338, 339, 340, 598, 646, 650], "ec30to60basemesh": [336, 337], "ec30to60dynamicadjust": [338, 339, 340], "qu240": [341, 342, 343, 598, 650], "qu240dynamicadjust": [341, 342, 343], "so12to60": [344, 345, 346, 347, 348], "so12to60basemesh": [344, 345], "so12to60dynamicadjust": [346, 347, 348], "wc14": [349, 350, 351, 352, 353, 598, 650], "wc14basemesh": [349, 350], "wc14dynamicadjust": [351, 352, 353], "metadata": [354, 355, 598, 650], "add_mesh_and_init_metadata": 354, "get_e3sm_mesh_nam": 355, "performance_test": [356, 357, 358, 598, 650], "performancetest": [356, 357, 358], "read_pointstat": 376, "read_station_data": 377, "read_station_fil": 378, "create_pointstats_fil": [391, 392, 393, 600], "createpointstatsfil": [391, 392, 393], "interpolate_atm_forc": [397, 398, 399, 400, 401, 600], "interpolateatmforc": [397, 398, 399, 400, 401], "interpolate_data_to_grid": 398, "plot_interp_data": 399, "write_to_fil": 401, "dequ120at30cr10rr2": [405, 406], "dequ120at30cr10rr2basemesh": [405, 406], "iceshelf2d": 407, "internalwav": 425, "ten_day_test": [435, 436, 603, 655], "tendaytest": [435, 436], "isomipplu": 439, "evap": [440, 604], "update_evaporation_flux": 440, "geom": [444, 445, 604], "interpolate_ocean_mask": 444, "process_input_geometri": 445, "misomip": [448, 449, 604], "ocean_test": [450, 451, 452, 604], "oceantest": [450, 451, 452], "streamfunct": [456, 457, 604], "file_complet": 460, "movieplott": [461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472], "images_to_movi": 462, "plot_3d_field_top_bot_sect": 463, "plot_barotropic_streamfunct": 464, "plot_horiz_seri": 465, "plot_ice_shelf_boundary_vari": 466, "plot_layer_interfac": 467, "plot_melt_r": 468, "plot_overturning_streamfunct": 469, "plot_potential_dens": 470, "plot_salin": 471, "plot_temperatur": 472, "timeseriesplott": [473, 474, 475], "plot_melt_time_seri": 474, "plot_time_seri": 475, "planarconverg": 476, "conv_init": [477, 478], "convinit": [477, 478], "conv_test_cas": [479, 480, 481, 482], "convtestcas": [479, 480, 481, 482], "update_cor": 482, "get_dt_dur": 484, "horizontaladvect": [487, 488, 489], "soma_test_cas": [502, 503, 606], "somatestcas": [502, 503], "spheretransport": 504, "correlatedtracers2d": [505, 506, 507], "get_timestep_str": [511, 525, 539, 563], "divergent2d": [519, 520, 521], "nondivergent2d": [533, 534, 535], "process_output": [547, 548, 549, 550, 551, 552, 553, 554, 555, 556], "compute_convergence_r": 547, "compute_error_from_output_ncfil": 548, "make_convergence_arrai": 549, "plot_converg": 550, "plot_fila": 551, "plot_over_and_undershoot_error": 552, "plot_sol": 553, "print_data_as_csv": 554, "print_error_conv_t": 555, "read_ncl_rgb_fil": 556, "rotation2d": [557, 558, 559], "zisotestcas": [572, 573, 574], "with_frazil": [581, 582, 583, 609, 661], "withfrazil": [581, 582, 583], "grid_1d": [584, 585], "generate_1d_grid": 584, "write_1d_grid": 585, "init_vertical_coord": 586, "partial_cel": [587, 588], "alter_bottom_depth": 587, "alter_ssh": 588, "zlevel": [589, 590, 591, 592], "compute_min_max_level_cel": 589, "compute_z_level_layer_thick": 590, "compute_z_level_resting_thick": 591, "init_z_level_vertical_coord": 592, "zstar": 593, "init_z_star_vertical_coord": 593, "type": [597, 644], "quwisc240": [598, 646, 650], "icos240": 598, "icoswisc240": 598, "ecwisc30to60": [598, 646, 650], "sowisc12to60": [598, 650], "child": 598, "spherical_harmonic_transform": [608, 660], "qu_converg": [608, 660], "ziso_test_cas": 609, "organ": 610, "attribut": 610, "copi": 610, "ad": [610, 616, 617, 618], "runtim": 610, "overview": 611, "style": 611, "In": 611, "quick": [612, 662], "start": [612, 616, 617, 618, 662], "unix": 612, "shell": 612, "set": [612, 616, 617, 618, 662], "up": [612, 617, 618, 662], "repositori": 612, "beginn": 612, "conda": [612, 613, 641, 662], "environ": [612, 613, 662], "compil": 612, "system": 612, "albani": 612, "petsc": 612, "netlib": 612, "lapack": 612, "unknown": 612, "what": 612, "script": [612, 662], "doe": 612, "flag": 612, "activ": 612, "troubleshoot": [612, 613], "onli": 612, "compon": [612, 662], "repo": 612, "worktre": 612, "advanc": 612, "solver": 613, "error": 613, "when": 613, "proxi": 613, "lanl": 613, "mac": 613, "gethostbynam": 613, "fail": 613, "glossari": [614, 615], "": 615, "guid": 615, "tutori": [615, 616, 617, 618], "legaci": [615, 618], "studi": 616, "get": [616, 617, 618], "new": [616, 617, 618], "task": 616, "cpu": 616, "per": 616, "vari": [617, 618], "horizont": 617, "defin": [617, 618], "method": [617, 618], "port": 618, "The": 618, "sia_integr": 622, "fo_integr": 622, "full_integr": 622, "humboldt_calving_test": 622, "humboldt_calving_tests_fo": 622, "jupyt": 640, "notebook": 640, "remot": 640, "slurm": 641, "job": [641, 662], "queue": 641, "mpich": 641, "openmpi": 641, "No": 641, "mpi": 641, "forg": 641, "sea": 642, "surfac": 642, "height": 642, "adjust": 642, "1d": 644, "grid": 644, "uniform": 644, "tanh_dz": 644, "60layerphc": 644, "100layere3smv1": 644, "3d": 644, "z": 644, "star": 644, "level": 644, "nightli": 646, "qu240_for_e3sm": 646, "quwisc240_for_e3sm": 646, "thread_test": 647, "time": [649, 657, 659], "biogeochemsitri": 650, "make_diagnostic_fil": 650, "state": 652, "interpol": 652, "atmospher": 652, "forc": 652, "pointstat": 652, "sandi": 652, "ocean0": 656, "ocean1": 656, "ocean2": 656, "time_varying_ocean0": 656, "perform": 656, "simul": 656, "long": [658, 661], "surface_restor": 658, "three_lay": 658, "converg": 659, "threshold": 659, "parallel_n": 660, "serial_nlat": 660, "e3sm": 662}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 56}})