Search.setIndex({"docnames": ["design_docs/cached_outputs", "design_docs/compass_package", "design_docs/index", "design_docs/template", "developers_guide/api", "developers_guide/building_docs", "developers_guide/command_line", "developers_guide/docs", "developers_guide/framework", "developers_guide/generated/compass.MpasCore", "developers_guide/generated/compass.MpasCore.add_test_group", "developers_guide/generated/compass.Step", "developers_guide/generated/compass.Step.add_input_file", "developers_guide/generated/compass.Step.add_model_as_input", "developers_guide/generated/compass.Step.add_namelist_file", "developers_guide/generated/compass.Step.add_namelist_options", "developers_guide/generated/compass.Step.add_output_file", "developers_guide/generated/compass.Step.add_streams_file", "developers_guide/generated/compass.Step.constrain_resources", "developers_guide/generated/compass.Step.run", "developers_guide/generated/compass.Step.runtime_setup", "developers_guide/generated/compass.Step.set_resources", "developers_guide/generated/compass.Step.setup", "developers_guide/generated/compass.Step.update_namelist_at_runtime", "developers_guide/generated/compass.Step.update_namelist_pio", "developers_guide/generated/compass.Step.update_streams_at_runtime", "developers_guide/generated/compass.TestCase", "developers_guide/generated/compass.TestCase.add_step", "developers_guide/generated/compass.TestCase.configure", "developers_guide/generated/compass.TestCase.run", "developers_guide/generated/compass.TestCase.validate", "developers_guide/generated/compass.TestGroup", "developers_guide/generated/compass.TestGroup.add_test_case", "developers_guide/generated/compass.__main__.main", "developers_guide/generated/compass.cache.update_cache", "developers_guide/generated/compass.clean.clean_cases", "developers_guide/generated/compass.config.CompassConfigParser", "developers_guide/generated/compass.io.download", "developers_guide/generated/compass.io.symlink", "developers_guide/generated/compass.list.list_cases", "developers_guide/generated/compass.list.list_machines", "developers_guide/generated/compass.list.list_suites", "developers_guide/generated/compass.logging.log_method_call", "developers_guide/generated/compass.mesh.IcosahedralMeshStep", "developers_guide/generated/compass.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon", "developers_guide/generated/compass.mesh.IcosahedralMeshStep.get_cell_width", "developers_guide/generated/compass.mesh.IcosahedralMeshStep.get_subdivisions", "developers_guide/generated/compass.mesh.IcosahedralMeshStep.make_jigsaw_mesh", "developers_guide/generated/compass.mesh.IcosahedralMeshStep.run", "developers_guide/generated/compass.mesh.IcosahedralMeshStep.setup", "developers_guide/generated/compass.mesh.QuasiUniformSphericalMeshStep", "developers_guide/generated/compass.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon", "developers_guide/generated/compass.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh", "developers_guide/generated/compass.mesh.QuasiUniformSphericalMeshStep.run", "developers_guide/generated/compass.mesh.QuasiUniformSphericalMeshStep.setup", "developers_guide/generated/compass.mesh.spherical.SphericalBaseStep", "developers_guide/generated/compass.mesh.spherical.SphericalBaseStep.run", "developers_guide/generated/compass.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width", "developers_guide/generated/compass.mesh.spherical.SphericalBaseStep.setup", "developers_guide/generated/compass.model.make_graph_file", "developers_guide/generated/compass.model.partition", "developers_guide/generated/compass.model.run_model", "developers_guide/generated/compass.mpas_cores.get_mpas_cores", "developers_guide/generated/compass.parallel.check_parallel_system", "developers_guide/generated/compass.parallel.get_available_cores_and_nodes", "developers_guide/generated/compass.parallel.run_command", "developers_guide/generated/compass.parallel.set_cores_per_node", "developers_guide/generated/compass.provenance.write", "developers_guide/generated/compass.run.serial.run_single_step", "developers_guide/generated/compass.run.serial.run_tests", "developers_guide/generated/compass.setup.setup_case", "developers_guide/generated/compass.setup.setup_cases", "developers_guide/generated/compass.suite.clean_suite", "developers_guide/generated/compass.suite.setup_suite", "developers_guide/generated/compass.validate.compare_timers", "developers_guide/generated/compass.validate.compare_variables", "developers_guide/landice/api", "developers_guide/landice/framework", "developers_guide/landice/generated/compass.landice.Landice", "developers_guide/landice/generated/compass.landice.tests.calving_dt_convergence.CalvingDtConvergence", "developers_guide/landice/generated/compass.landice.tests.calving_dt_convergence.dt_convergence_test.DtConvergenceTest", "developers_guide/landice/generated/compass.landice.tests.calving_dt_convergence.dt_convergence_test.DtConvergenceTest.validate", "developers_guide/landice/generated/compass.landice.tests.calving_dt_convergence.run_model.RunModel", "developers_guide/landice/generated/compass.landice.tests.calving_dt_convergence.run_model.RunModel.run", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.CircularShelf", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.decomposition_test.DecompositionTest", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.decomposition_test.DecompositionTest.run", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.run_model.RunModel", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.run_model.RunModel.run", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.setup_mesh.SetupMesh", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.setup_mesh.SetupMesh.run", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.visualize.Visualize", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.visualize.Visualize.run", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.visualize.visualize_circular_shelf", "developers_guide/landice/generated/compass.landice.tests.dome.Dome", "developers_guide/landice/generated/compass.landice.tests.dome.decomposition_test.DecompositionTest", "developers_guide/landice/generated/compass.landice.tests.dome.decomposition_test.DecompositionTest.run", "developers_guide/landice/generated/compass.landice.tests.dome.restart_test.RestartTest", "developers_guide/landice/generated/compass.landice.tests.dome.restart_test.RestartTest.run", "developers_guide/landice/generated/compass.landice.tests.dome.run_model.RunModel", "developers_guide/landice/generated/compass.landice.tests.dome.run_model.RunModel.run", "developers_guide/landice/generated/compass.landice.tests.dome.run_model.RunModel.setup", "developers_guide/landice/generated/compass.landice.tests.dome.setup_mesh.SetupMesh", "developers_guide/landice/generated/compass.landice.tests.dome.setup_mesh.SetupMesh.run", "developers_guide/landice/generated/compass.landice.tests.dome.smoke_test.SmokeTest", "developers_guide/landice/generated/compass.landice.tests.dome.smoke_test.SmokeTest.run", "developers_guide/landice/generated/compass.landice.tests.dome.visualize.Visualize", "developers_guide/landice/generated/compass.landice.tests.dome.visualize.Visualize.run", "developers_guide/landice/generated/compass.landice.tests.dome.visualize.visualize_dome", "developers_guide/landice/generated/compass.landice.tests.eismint2.Eismint2", "developers_guide/landice/generated/compass.landice.tests.eismint2.decomposition_test.DecompositionTest", "developers_guide/landice/generated/compass.landice.tests.eismint2.decomposition_test.DecompositionTest.run", "developers_guide/landice/generated/compass.landice.tests.eismint2.restart_test.RestartTest", "developers_guide/landice/generated/compass.landice.tests.eismint2.restart_test.RestartTest.run", "developers_guide/landice/generated/compass.landice.tests.eismint2.run_experiment.RunExperiment", "developers_guide/landice/generated/compass.landice.tests.eismint2.run_experiment.RunExperiment.run", "developers_guide/landice/generated/compass.landice.tests.eismint2.run_experiment.RunExperiment.setup", "developers_guide/landice/generated/compass.landice.tests.eismint2.setup_mesh.SetupMesh", "developers_guide/landice/generated/compass.landice.tests.eismint2.setup_mesh.SetupMesh.run", "developers_guide/landice/generated/compass.landice.tests.eismint2.standard_experiments.StandardExperiments", "developers_guide/landice/generated/compass.landice.tests.eismint2.standard_experiments.StandardExperiments.run", "developers_guide/landice/generated/compass.landice.tests.eismint2.standard_experiments.visualize.Visualize", "developers_guide/landice/generated/compass.landice.tests.eismint2.standard_experiments.visualize.Visualize.run", "developers_guide/landice/generated/compass.landice.tests.eismint2.standard_experiments.visualize.visualize_eismint2", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.A.A", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.A.A.configure", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.A.A.run", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.A.visualize.Visualize", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.A.visualize.Visualize.run", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.B.B", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.B.B.configure", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.B.B.run", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.B.visualize.Visualize", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.B.visualize.Visualize.run", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.EnthalpyBenchmark", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.run_model.RunModel", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.run_model.RunModel.run", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.run_model.RunModel.setup", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.setup_mesh.SetupMesh", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.setup_mesh.SetupMesh.run", "developers_guide/landice/generated/compass.landice.tests.greenland.Greenland", "developers_guide/landice/generated/compass.landice.tests.greenland.decomposition_test.DecompositionTest", "developers_guide/landice/generated/compass.landice.tests.greenland.decomposition_test.DecompositionTest.run", "developers_guide/landice/generated/compass.landice.tests.greenland.high_res_mesh.HighResMesh", "developers_guide/landice/generated/compass.landice.tests.greenland.high_res_mesh.HighResMesh.run", "developers_guide/landice/generated/compass.landice.tests.greenland.mesh.Mesh", "developers_guide/landice/generated/compass.landice.tests.greenland.mesh.Mesh.build_cell_width", "developers_guide/landice/generated/compass.landice.tests.greenland.mesh.Mesh.run", "developers_guide/landice/generated/compass.landice.tests.greenland.restart_test.RestartTest", "developers_guide/landice/generated/compass.landice.tests.greenland.restart_test.RestartTest.run", "developers_guide/landice/generated/compass.landice.tests.greenland.run_model.RunModel", "developers_guide/landice/generated/compass.landice.tests.greenland.run_model.RunModel.run", "developers_guide/landice/generated/compass.landice.tests.greenland.run_model.RunModel.setup", "developers_guide/landice/generated/compass.landice.tests.greenland.smoke_test.SmokeTest", "developers_guide/landice/generated/compass.landice.tests.greenland.smoke_test.SmokeTest.run", "developers_guide/landice/generated/compass.landice.tests.humboldt.Humboldt", "developers_guide/landice/generated/compass.landice.tests.humboldt.decomposition_test.DecompositionTest", "developers_guide/landice/generated/compass.landice.tests.humboldt.decomposition_test.DecompositionTest.validate", "developers_guide/landice/generated/compass.landice.tests.humboldt.mesh.Mesh", "developers_guide/landice/generated/compass.landice.tests.humboldt.mesh.Mesh.run", "developers_guide/landice/generated/compass.landice.tests.humboldt.mesh_gen.MeshGen", "developers_guide/landice/generated/compass.landice.tests.humboldt.mesh_gen.MeshGen.run", "developers_guide/landice/generated/compass.landice.tests.humboldt.restart_test.RestartTest", "developers_guide/landice/generated/compass.landice.tests.humboldt.restart_test.RestartTest.validate", "developers_guide/landice/generated/compass.landice.tests.humboldt.run_model.RunModel", "developers_guide/landice/generated/compass.landice.tests.humboldt.run_model.RunModel.run", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.HydroRadial", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.decomposition_test.DecompositionTest", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.decomposition_test.DecompositionTest.run", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.restart_test.RestartTest", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.restart_test.RestartTest.run", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.run_model.RunModel", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.run_model.RunModel.run", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.run_model.RunModel.setup", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.setup_mesh.SetupMesh", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.setup_mesh.SetupMesh.run", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.spinup_test.SpinupTest", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.spinup_test.SpinupTest.run", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.steady_state_drift_test.SteadyStateDriftTest", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.steady_state_drift_test.SteadyStateDriftTest.run", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.visualize.Visualize", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.visualize.Visualize.run", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.visualize.visualize_hydro_radial", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.Ismip6Forcing", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.atmosphere.Atmosphere", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.atmosphere.Atmosphere.configure", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.atmosphere.create_mapfile_smb", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.atmosphere.create_mapfile_smb.build_mapping_file", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.atmosphere.create_mapfile_smb.create_atm_scrip", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.atmosphere.process_smb.ProcessSMB", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.atmosphere.process_smb.ProcessSMB.correct_smb_anomaly_for_climatology", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.atmosphere.process_smb.ProcessSMB.remap_ismip6_smb_to_mali", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.atmosphere.process_smb.ProcessSMB.rename_ismip6_smb_to_mali_vars", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.atmosphere.process_smb.ProcessSMB.run", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.atmosphere.process_smb.ProcessSMB.setup", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.ProcessSmbRacmo", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.ProcessSmbRacmo.correct_smb_anomaly_for_base_smb", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.ProcessSmbRacmo.remap_source_smb_to_mali", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.ProcessSmbRacmo.rename_source_smb_to_mali_vars", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.ProcessSmbRacmo.run", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.ProcessSmbRacmo.setup", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.configure.configure", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.create_mapfile.build_mapping_file", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.ocean_basal.OceanBasal", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.ocean_basal.OceanBasal.configure", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.ProcessBasalMelt", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.ProcessBasalMelt.combine_ismip6_inputfiles", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.ProcessBasalMelt.remap_ismip6_basal_melt_to_mali_vars", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.ProcessBasalMelt.rename_ismip6_basal_melt_to_mali_vars", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.ProcessBasalMelt.run", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.ProcessBasalMelt.setup", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.ocean_thermal.OceanThermal", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.ocean_thermal.OceanThermal.configure", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.ocean_thermal.process_thermal_forcing.ProcessThermalForcing", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.ocean_thermal.process_thermal_forcing.ProcessThermalForcing.remap_ismip6_thermal_forcing_to_mali_vars", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.ocean_thermal.process_thermal_forcing.ProcessThermalForcing.rename_ismip6_thermal_forcing_to_mali_vars", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.ocean_thermal.process_thermal_forcing.ProcessThermalForcing.run", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.ocean_thermal.process_thermal_forcing.ProcessThermalForcing.setup", "developers_guide/landice/generated/compass.landice.tests.kangerlussuaq.Kangerlussuaq", "developers_guide/landice/generated/compass.landice.tests.kangerlussuaq.mesh.Mesh", "developers_guide/landice/generated/compass.landice.tests.kangerlussuaq.mesh.Mesh.run", "developers_guide/landice/generated/compass.landice.tests.kangerlussuaq.mesh_gen.MeshGen", "developers_guide/landice/generated/compass.landice.tests.kangerlussuaq.mesh_gen.MeshGen.run", "developers_guide/landice/generated/compass.landice.tests.koge_bugt_s.KogeBugtS", "developers_guide/landice/generated/compass.landice.tests.koge_bugt_s.mesh.Mesh", "developers_guide/landice/generated/compass.landice.tests.koge_bugt_s.mesh.Mesh.run", "developers_guide/landice/generated/compass.landice.tests.koge_bugt_s.mesh_gen.MeshGen", "developers_guide/landice/generated/compass.landice.tests.koge_bugt_s.mesh_gen.MeshGen.run", "developers_guide/landice/generated/compass.landice.tests.mismipplus.MISMIPplus", "developers_guide/landice/generated/compass.landice.tests.mismipplus.run_model.RunModel", "developers_guide/landice/generated/compass.landice.tests.mismipplus.run_model.RunModel.run", "developers_guide/landice/generated/compass.landice.tests.mismipplus.run_model.RunModel.setup", "developers_guide/landice/generated/compass.landice.tests.mismipplus.smoke_test.SmokeTest", "developers_guide/landice/generated/compass.landice.tests.mismipplus.smoke_test.SmokeTest.run", "developers_guide/landice/generated/compass.landice.tests.thwaites.Thwaites", "developers_guide/landice/generated/compass.landice.tests.thwaites.decomposition_test.DecompositionTest", "developers_guide/landice/generated/compass.landice.tests.thwaites.decomposition_test.DecompositionTest.run", "developers_guide/landice/generated/compass.landice.tests.thwaites.restart_test.RestartTest", "developers_guide/landice/generated/compass.landice.tests.thwaites.restart_test.RestartTest.run", "developers_guide/landice/generated/compass.landice.tests.thwaites.run_model.RunModel", "developers_guide/landice/generated/compass.landice.tests.thwaites.run_model.RunModel.run", "developers_guide/landice/generated/compass.landice.tests.thwaites.run_model.RunModel.setup", "developers_guide/landice/index", "developers_guide/landice/test_groups/calving_dt_convergence", "developers_guide/landice/test_groups/circular_shelf", "developers_guide/landice/test_groups/dome", "developers_guide/landice/test_groups/eismint2", "developers_guide/landice/test_groups/enthalpy_benchmark", "developers_guide/landice/test_groups/greenland", "developers_guide/landice/test_groups/humboldt", "developers_guide/landice/test_groups/hydro_radial", "developers_guide/landice/test_groups/index", "developers_guide/landice/test_groups/ismip6_forcing", "developers_guide/landice/test_groups/kangerlussuaq", "developers_guide/landice/test_groups/koge_bugt_s", "developers_guide/landice/test_groups/mismipplus", "developers_guide/landice/test_groups/thwaites", "developers_guide/machines/anvil", "developers_guide/machines/chrysalis", "developers_guide/machines/compy", "developers_guide/machines/cori", "developers_guide/machines/index", "developers_guide/machines/perlmutter", "developers_guide/ocean/api", "developers_guide/ocean/framework", "developers_guide/ocean/generated/compass.ocean.Ocean", "developers_guide/ocean/generated/compass.ocean.haney.compute_haney_number", "developers_guide/ocean/generated/compass.ocean.iceshelf.adjust_ssh", "developers_guide/ocean/generated/compass.ocean.iceshelf.compute_land_ice_pressure_and_draft", "developers_guide/ocean/generated/compass.ocean.mesh.cull.CullMeshStep", "developers_guide/ocean/generated/compass.ocean.mesh.cull.CullMeshStep.run", "developers_guide/ocean/generated/compass.ocean.mesh.cull.CullMeshStep.setup", "developers_guide/ocean/generated/compass.ocean.mesh.cull.cull_mesh", "developers_guide/ocean/generated/compass.ocean.mesh.floodplain.FloodplainMeshStep", "developers_guide/ocean/generated/compass.ocean.mesh.floodplain.FloodplainMeshStep.run", "developers_guide/ocean/generated/compass.ocean.particles.remap_particles", "developers_guide/ocean/generated/compass.ocean.particles.write", "developers_guide/ocean/generated/compass.ocean.plot.plot_initial_state", "developers_guide/ocean/generated/compass.ocean.plot.plot_vertical_grid", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.BaroclinicChannel", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.configure", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.decomp_test.DecompTest", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.decomp_test.DecompTest.configure", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.decomp_test.DecompTest.run", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.default.Default", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.default.Default.configure", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.default.Default.run", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.forward.Forward", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.forward.Forward.run", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.forward.Forward.setup", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.initial_state.InitialState", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.initial_state.InitialState.run", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.initial_state.InitialState.setup", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.restart_test.RestartTest", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.restart_test.RestartTest.configure", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.restart_test.RestartTest.run", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.rpe_test.RpeTest", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.rpe_test.RpeTest.configure", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.rpe_test.RpeTest.run", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.run", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.setup", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.threads_test.ThreadsTest", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.configure", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.run", "developers_guide/ocean/generated/compass.ocean.tests.dam_break.DamBreak", "developers_guide/ocean/generated/compass.ocean.tests.dam_break.default.Default", "developers_guide/ocean/generated/compass.ocean.tests.dam_break.default.Default.configure", "developers_guide/ocean/generated/compass.ocean.tests.dam_break.forward.Forward", "developers_guide/ocean/generated/compass.ocean.tests.dam_break.forward.Forward.run", "developers_guide/ocean/generated/compass.ocean.tests.dam_break.initial_state.InitialState", "developers_guide/ocean/generated/compass.ocean.tests.dam_break.initial_state.InitialState.run", "developers_guide/ocean/generated/compass.ocean.tests.dam_break.viz.Viz", "developers_guide/ocean/generated/compass.ocean.tests.dam_break.viz.Viz.run", "developers_guide/ocean/generated/compass.ocean.tests.drying_slope.DryingSlope", "developers_guide/ocean/generated/compass.ocean.tests.drying_slope.default.Default", "developers_guide/ocean/generated/compass.ocean.tests.drying_slope.default.Default.configure", "developers_guide/ocean/generated/compass.ocean.tests.drying_slope.forward.Forward", "developers_guide/ocean/generated/compass.ocean.tests.drying_slope.forward.Forward.run", "developers_guide/ocean/generated/compass.ocean.tests.drying_slope.initial_state.InitialState", "developers_guide/ocean/generated/compass.ocean.tests.drying_slope.initial_state.InitialState.run", "developers_guide/ocean/generated/compass.ocean.tests.drying_slope.viz.Viz", "developers_guide/ocean/generated/compass.ocean.tests.drying_slope.viz.Viz.run", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.GlobalConvergence", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.CosineBell", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.CosineBell.configure", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.CosineBell.run", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.analysis.Analysis", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rmse", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.run", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.forward.Forward", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.forward.Forward.get_dt", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.forward.Forward.run", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.forward.Forward.setup", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.init.Init", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.init.Init.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.GlobalOcean", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.analysis_test.AnalysisTest", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.analysis_test.AnalysisTest.configure", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.analysis_test.AnalysisTest.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.configure", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.configure.configure_global_ocean", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.daily_output_test.DailyOutputTest", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.daily_output_test.DailyOutputTest.configure", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.daily_output_test.DailyOutputTest.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.decomp_test.DecompTest", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.decomp_test.DecompTest.configure", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.decomp_test.DecompTest.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.dynamic_adjustment.DynamicAdjustment", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.dynamic_adjustment.DynamicAdjustment.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.FilesForE3SM", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.FilesForE3SM.configure", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.FilesForE3SM.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.diagnostics_files.DiagnosticsFiles", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.diagnostics_files.DiagnosticsFiles.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.ocean_graph_partition.OceanGraphPartition", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.ocean_graph_partition.OceanGraphPartition.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.ocean_initial_condition.OceanInitialCondition", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.ocean_initial_condition.OceanInitialCondition.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.scrip.Scrip", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.scrip.Scrip.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.seaice_initial_condition.SeaiceInitialCondition", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.seaice_initial_condition.SeaiceInitialCondition.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.forward.ForwardStep", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.forward.ForwardStep.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.forward.ForwardStep.setup", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.forward.ForwardTestCase", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.forward.ForwardTestCase.configure", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.forward.ForwardTestCase.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.init.Init", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.init.Init.configure", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.init.Init.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.init.initial_state.InitialState", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.init.initial_state.InitialState.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.init.initial_state.InitialState.setup", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.init.ssh_adjustment.SshAdjustment", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.init.ssh_adjustment.SshAdjustment.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.init.ssh_adjustment.SshAdjustment.setup", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.Mesh", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.Mesh.configure", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.Mesh.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.ec30to60.EC30to60BaseMesh", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.ec30to60.EC30to60BaseMesh.build_cell_width_lat_lon", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.ec30to60.dynamic_adjustment.EC30to60DynamicAdjustment", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.ec30to60.dynamic_adjustment.EC30to60DynamicAdjustment.configure", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.ec30to60.dynamic_adjustment.EC30to60DynamicAdjustment.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.qu240.dynamic_adjustment.QU240DynamicAdjustment", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.qu240.dynamic_adjustment.QU240DynamicAdjustment.configure", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.qu240.dynamic_adjustment.QU240DynamicAdjustment.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.so12to60.SO12to60BaseMesh", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.so12to60.SO12to60BaseMesh.build_cell_width_lat_lon", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.so12to60.dynamic_adjustment.SO12to60DynamicAdjustment", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.so12to60.dynamic_adjustment.SO12to60DynamicAdjustment.configure", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.so12to60.dynamic_adjustment.SO12to60DynamicAdjustment.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.wc14.WC14BaseMesh", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.wc14.WC14BaseMesh.build_cell_width_lat_lon", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.wc14.dynamic_adjustment.WC14DynamicAdjustment", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.wc14.dynamic_adjustment.WC14DynamicAdjustment.configure", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.wc14.dynamic_adjustment.WC14DynamicAdjustment.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.metadata.add_mesh_and_init_metadata", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.metadata.get_e3sm_mesh_names", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.performance_test.PerformanceTest", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.performance_test.PerformanceTest.configure", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.performance_test.PerformanceTest.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.restart_test.RestartTest", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.restart_test.RestartTest.configure", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.restart_test.RestartTest.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.threads_test.ThreadsTest", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.threads_test.ThreadsTest.configure", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.threads_test.ThreadsTest.run", "developers_guide/ocean/generated/compass.ocean.tests.gotm.Gotm", "developers_guide/ocean/generated/compass.ocean.tests.gotm.default.Default", "developers_guide/ocean/generated/compass.ocean.tests.gotm.default.Default.validate", "developers_guide/ocean/generated/compass.ocean.tests.gotm.default.analysis.Analysis", "developers_guide/ocean/generated/compass.ocean.tests.gotm.default.analysis.Analysis.run", "developers_guide/ocean/generated/compass.ocean.tests.gotm.default.forward.Forward", "developers_guide/ocean/generated/compass.ocean.tests.gotm.default.forward.Forward.run", "developers_guide/ocean/generated/compass.ocean.tests.gotm.default.init.Init", "developers_guide/ocean/generated/compass.ocean.tests.gotm.default.init.Init.run", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.Hurricane", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.analysis.Analysis", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.analysis.Analysis.read_pointstats", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.analysis.Analysis.read_station_data", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.analysis.Analysis.read_station_file", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.analysis.Analysis.run", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.analysis.Analysis.setup", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.configure", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.forward.Forward", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.forward.Forward.configure", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.forward.Forward.run", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.forward.forward.ForwardStep", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.forward.forward.ForwardStep.run", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.forward.forward.ForwardStep.setup", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.Init", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.Init.configure", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.Init.run", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.create_pointstats_file.CreatePointstatsFile", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.create_pointstats_file.CreatePointstatsFile.create_pointstats_file", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.create_pointstats_file.CreatePointstatsFile.run", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.initial_state.InitialState", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.initial_state.InitialState.run", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.initial_state.InitialState.setup", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing.interpolate_data_to_grid", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing.plot_interp_data", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing.run", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing.write_to_file", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.mesh.Mesh", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.mesh.Mesh.configure", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.mesh.Mesh.run", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.mesh.dequ120at30cr10rr2.DEQU120at30cr10rr2BaseMesh", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.mesh.dequ120at30cr10rr2.DEQU120at30cr10rr2BaseMesh.build_cell_width_lat_lon", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.IceShelf2d", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.configure", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.default.Default", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.default.Default.configure", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.default.Default.run", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.forward.Forward", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.forward.Forward.run", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.forward.Forward.setup", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.initial_state.InitialState", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.initial_state.InitialState.run", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.restart_test.RestartTest", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.restart_test.RestartTest.configure", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.restart_test.RestartTest.run", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.ssh_adjustment.SshAdjustment", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.ssh_adjustment.SshAdjustment.run", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.ssh_adjustment.SshAdjustment.setup", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.viz.Viz", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.viz.Viz.run", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.InternalWave", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.default.Default", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.default.Default.validate", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.forward.Forward", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.forward.Forward.run", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.initial_state.InitialState", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.initial_state.InitialState.run", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.rpe_test.RpeTest", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.rpe_test.analysis.Analysis", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.rpe_test.analysis.Analysis.run", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.ten_day_test.TenDayTest", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.ten_day_test.TenDayTest.validate", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.viz.Viz", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.viz.Viz.run", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.IsomipPlus", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.evap.update_evaporation_flux", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.forward.Forward", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.forward.Forward.run", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.forward.Forward.setup", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.geom.interpolate_ocean_mask", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.geom.process_input_geometry", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.initial_state.InitialState", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.initial_state.InitialState.run", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.isomip_plus_test.IsomipPlusTest", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.isomip_plus_test.IsomipPlusTest.configure", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.isomip_plus_test.IsomipPlusTest.run", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.misomip.Misomip", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.misomip.Misomip.run", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.ssh_adjustment.SshAdjustment", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.ssh_adjustment.SshAdjustment.run", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.ssh_adjustment.SshAdjustment.setup", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.streamfunction.Streamfunction", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.streamfunction.Streamfunction.run", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.Viz", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.Viz.run", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.file_complete", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.images_to_movies", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_3d_field_top_bot_section", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_barotropic_streamfunction", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_horiz_series", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_ice_shelf_boundary_variables", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_layer_interfaces", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_melt_rates", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_overturning_streamfunction", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_potential_density", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_salinity", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_temperature", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.TimeSeriesPlotter", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.TimeSeriesPlotter.plot_melt_time_series", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.TimeSeriesPlotter.plot_time_series", "developers_guide/ocean/generated/compass.ocean.tests.merry_go_round.MerryGoRound", "developers_guide/ocean/generated/compass.ocean.tests.merry_go_round.convergence_test.analysis.Analysis", "developers_guide/ocean/generated/compass.ocean.tests.merry_go_round.convergence_test.analysis.Analysis.run", "developers_guide/ocean/generated/compass.ocean.tests.merry_go_round.default.Default", "developers_guide/ocean/generated/compass.ocean.tests.merry_go_round.default.Default.validate", "developers_guide/ocean/generated/compass.ocean.tests.merry_go_round.forward.Forward", "developers_guide/ocean/generated/compass.ocean.tests.merry_go_round.forward.Forward.run", "developers_guide/ocean/generated/compass.ocean.tests.merry_go_round.initial_state.InitialState", "developers_guide/ocean/generated/compass.ocean.tests.merry_go_round.initial_state.InitialState.run", "developers_guide/ocean/generated/compass.ocean.tests.merry_go_round.viz.Viz", "developers_guide/ocean/generated/compass.ocean.tests.merry_go_round.viz.Viz.run", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.PlanarConvergence", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.conv_init.ConvInit", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.conv_init.ConvInit.run", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.conv_test_case.ConvTestCase", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.conv_test_case.ConvTestCase.configure", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.conv_test_case.ConvTestCase.run", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.conv_test_case.ConvTestCase.update_cores", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.forward.Forward", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.forward.Forward.get_dt_duration", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.forward.Forward.run", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.forward.Forward.setup", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.horizontal_advection.HorizontalAdvection", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.horizontal_advection.HorizontalAdvection.configure", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.horizontal_advection.HorizontalAdvection.run", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.horizontal_advection.analysis.Analysis", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.horizontal_advection.analysis.Analysis.rmse", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.horizontal_advection.analysis.Analysis.run", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.horizontal_advection.init.Init", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.horizontal_advection.init.Init.run", "developers_guide/ocean/generated/compass.ocean.tests.soma.Soma", "developers_guide/ocean/generated/compass.ocean.tests.soma.analysis.Analysis", "developers_guide/ocean/generated/compass.ocean.tests.soma.analysis.Analysis.run", "developers_guide/ocean/generated/compass.ocean.tests.soma.forward.Forward", "developers_guide/ocean/generated/compass.ocean.tests.soma.forward.Forward.run", "developers_guide/ocean/generated/compass.ocean.tests.soma.initial_state.InitialState", "developers_guide/ocean/generated/compass.ocean.tests.soma.initial_state.InitialState.run", "developers_guide/ocean/generated/compass.ocean.tests.soma.soma_test_case.SomaTestCase", "developers_guide/ocean/generated/compass.ocean.tests.soma.soma_test_case.SomaTestCase.validate", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.SphereTransport", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.CorrelatedTracers2D", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.CorrelatedTracers2D.configure", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.CorrelatedTracers2D.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.analysis.Analysis", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.analysis.Analysis.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.Forward", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.Forward.get_timestep_str", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.Forward.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.Forward.setup", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.init.Init", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.init.Init.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.mesh.Mesh", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.mesh.Mesh.build_cell_width_lat_lon", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.mesh.Mesh.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.Divergent2D", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.Divergent2D.configure", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.Divergent2D.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.analysis.Analysis", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.analysis.Analysis.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.forward.Forward", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.forward.Forward.get_timestep_str", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.forward.Forward.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.forward.Forward.setup", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.init.Init", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.init.Init.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.mesh.Mesh", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.mesh.Mesh.build_cell_width_lat_lon", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.mesh.Mesh.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.Nondivergent2D", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.Nondivergent2D.configure", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.Nondivergent2D.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.analysis.Analysis", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.analysis.Analysis.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.forward.Forward", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.forward.Forward.get_timestep_str", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.forward.Forward.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.forward.Forward.setup", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.init.Init", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.init.Init.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.mesh.Mesh", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.mesh.Mesh.build_cell_width_lat_lon", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.mesh.Mesh.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.compute_convergence_rates", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.compute_error_from_output_ncfile", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.make_convergence_arrays", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.plot_convergence", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.plot_filament", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.plot_over_and_undershoot_errors", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.plot_sol", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.print_data_as_csv", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.print_error_conv_table", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.read_ncl_rgb_file", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.Rotation2D", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.Rotation2D.configure", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.Rotation2D.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.analysis.Analysis", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.analysis.Analysis.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.forward.Forward", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.forward.Forward.get_timestep_str", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.forward.Forward.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.forward.Forward.setup", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.init.Init", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.init.Init.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.mesh.Mesh", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.mesh.Mesh.build_cell_width_lat_lon", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.mesh.Mesh.run", "developers_guide/ocean/generated/compass.ocean.tests.tides.Tides", "developers_guide/ocean/generated/compass.ocean.tests.tides.analysis.Analysis", "developers_guide/ocean/generated/compass.ocean.tests.tides.analysis.Analysis.append_tpxo_data", "developers_guide/ocean/generated/compass.ocean.tests.tides.analysis.Analysis.check_tpxo_data", "developers_guide/ocean/generated/compass.ocean.tests.tides.analysis.Analysis.plot", "developers_guide/ocean/generated/compass.ocean.tests.tides.analysis.Analysis.read_otps2_output", "developers_guide/ocean/generated/compass.ocean.tests.tides.analysis.Analysis.run", "developers_guide/ocean/generated/compass.ocean.tests.tides.analysis.Analysis.run_otps2", "developers_guide/ocean/generated/compass.ocean.tests.tides.analysis.Analysis.setup", "developers_guide/ocean/generated/compass.ocean.tests.tides.analysis.Analysis.setup_otps2", "developers_guide/ocean/generated/compass.ocean.tests.tides.analysis.Analysis.write_coordinate_file", "developers_guide/ocean/generated/compass.ocean.tests.tides.configure", "developers_guide/ocean/generated/compass.ocean.tests.tides.forward.Forward", "developers_guide/ocean/generated/compass.ocean.tests.tides.forward.Forward.configure", "developers_guide/ocean/generated/compass.ocean.tests.tides.forward.Forward.run", "developers_guide/ocean/generated/compass.ocean.tests.tides.forward.forward.ForwardStep", "developers_guide/ocean/generated/compass.ocean.tests.tides.forward.forward.ForwardStep.run", "developers_guide/ocean/generated/compass.ocean.tests.tides.forward.forward.ForwardStep.setup", "developers_guide/ocean/generated/compass.ocean.tests.tides.init.Init", "developers_guide/ocean/generated/compass.ocean.tests.tides.init.Init.configure", "developers_guide/ocean/generated/compass.ocean.tests.tides.init.Init.run", "developers_guide/ocean/generated/compass.ocean.tests.tides.init.initial_state.InitialState", "developers_guide/ocean/generated/compass.ocean.tests.tides.init.initial_state.InitialState.run", "developers_guide/ocean/generated/compass.ocean.tests.tides.init.initial_state.InitialState.setup", "developers_guide/ocean/generated/compass.ocean.tests.tides.init.interpolate_wave_drag.InterpolateWaveDrag", "developers_guide/ocean/generated/compass.ocean.tests.tides.init.interpolate_wave_drag.InterpolateWaveDrag.interpolate_data_to_grid", "developers_guide/ocean/generated/compass.ocean.tests.tides.init.interpolate_wave_drag.InterpolateWaveDrag.plot_interp_data", "developers_guide/ocean/generated/compass.ocean.tests.tides.init.interpolate_wave_drag.InterpolateWaveDrag.run", "developers_guide/ocean/generated/compass.ocean.tests.tides.init.interpolate_wave_drag.InterpolateWaveDrag.write_to_file", "developers_guide/ocean/generated/compass.ocean.tests.tides.init.remap_bathymetry.RemapBathymetry", "developers_guide/ocean/generated/compass.ocean.tests.tides.init.remap_bathymetry.RemapBathymetry.run", "developers_guide/ocean/generated/compass.ocean.tests.tides.mesh.Mesh", "developers_guide/ocean/generated/compass.ocean.tests.tides.mesh.Mesh.configure", "developers_guide/ocean/generated/compass.ocean.tests.tides.mesh.Mesh.run", "developers_guide/ocean/generated/compass.ocean.tests.ziso.Ziso", "developers_guide/ocean/generated/compass.ocean.tests.ziso.ZisoTestCase", "developers_guide/ocean/generated/compass.ocean.tests.ziso.ZisoTestCase.configure", "developers_guide/ocean/generated/compass.ocean.tests.ziso.ZisoTestCase.run", "developers_guide/ocean/generated/compass.ocean.tests.ziso.configure", "developers_guide/ocean/generated/compass.ocean.tests.ziso.forward.Forward", "developers_guide/ocean/generated/compass.ocean.tests.ziso.forward.Forward.run", "developers_guide/ocean/generated/compass.ocean.tests.ziso.forward.Forward.setup", "developers_guide/ocean/generated/compass.ocean.tests.ziso.initial_state.InitialState", "developers_guide/ocean/generated/compass.ocean.tests.ziso.initial_state.InitialState.run", "developers_guide/ocean/generated/compass.ocean.tests.ziso.with_frazil.WithFrazil", "developers_guide/ocean/generated/compass.ocean.tests.ziso.with_frazil.WithFrazil.configure", "developers_guide/ocean/generated/compass.ocean.tests.ziso.with_frazil.WithFrazil.run", "developers_guide/ocean/generated/compass.ocean.vertical.grid_1d.generate_1d_grid", "developers_guide/ocean/generated/compass.ocean.vertical.grid_1d.write_1d_grid", "developers_guide/ocean/generated/compass.ocean.vertical.init_vertical_coord", "developers_guide/ocean/generated/compass.ocean.vertical.partial_cells.alter_bottom_depth", "developers_guide/ocean/generated/compass.ocean.vertical.partial_cells.alter_ssh", "developers_guide/ocean/generated/compass.ocean.vertical.zlevel.compute_min_max_level_cell", "developers_guide/ocean/generated/compass.ocean.vertical.zlevel.compute_z_level_layer_thickness", "developers_guide/ocean/generated/compass.ocean.vertical.zlevel.compute_z_level_resting_thickness", "developers_guide/ocean/generated/compass.ocean.vertical.zlevel.init_z_level_vertical_coord", "developers_guide/ocean/generated/compass.ocean.vertical.zstar.init_z_star_vertical_coord", "developers_guide/ocean/index", "developers_guide/ocean/test_groups/baroclinic_channel", "developers_guide/ocean/test_groups/dam_break", "developers_guide/ocean/test_groups/drying_slope", "developers_guide/ocean/test_groups/global_convergence", "developers_guide/ocean/test_groups/global_ocean", "developers_guide/ocean/test_groups/gotm", "developers_guide/ocean/test_groups/hurricane", "developers_guide/ocean/test_groups/ice_shelf_2d", "developers_guide/ocean/test_groups/index", "developers_guide/ocean/test_groups/internal_wave", "developers_guide/ocean/test_groups/isomip_plus", "developers_guide/ocean/test_groups/merry_go_round", "developers_guide/ocean/test_groups/planar_convergence", "developers_guide/ocean/test_groups/soma", "developers_guide/ocean/test_groups/sphere_transport", "developers_guide/ocean/test_groups/spherical_harmonic_transform", "developers_guide/ocean/test_groups/tides", "developers_guide/ocean/test_groups/ziso", "developers_guide/organization", "developers_guide/overview", "developers_guide/quick_start", "developers_guide/troubleshooting", "glossary", "index", "tutorials/dev_add_param_study", "tutorials/dev_add_test_group", "tutorials/dev_porting_legacy", "users_guide/config_files", "users_guide/landice/framework/index", "users_guide/landice/index", "users_guide/landice/suites", "users_guide/landice/test_groups/calving_dt_convergence", "users_guide/landice/test_groups/circular_shelf", "users_guide/landice/test_groups/dome", "users_guide/landice/test_groups/eismint2", "users_guide/landice/test_groups/enthalpy_benchmark", "users_guide/landice/test_groups/greenland", "users_guide/landice/test_groups/humboldt", "users_guide/landice/test_groups/hydro_radial", "users_guide/landice/test_groups/index", "users_guide/landice/test_groups/ismip6_forcing", "users_guide/landice/test_groups/kangerlussuaq", "users_guide/landice/test_groups/koge_bugt_s", "users_guide/landice/test_groups/mismipplus", "users_guide/landice/test_groups/thwaites", "users_guide/machines/anvil", "users_guide/machines/chrysalis", "users_guide/machines/compy", "users_guide/machines/cori", "users_guide/machines/index", "users_guide/machines/perlmutter", "users_guide/ocean/framework/ice_shelf", "users_guide/ocean/framework/index", "users_guide/ocean/framework/vertical", "users_guide/ocean/index", "users_guide/ocean/suites", "users_guide/ocean/test_groups/baroclinic_channel", "users_guide/ocean/test_groups/dam_break", "users_guide/ocean/test_groups/drying_slope", "users_guide/ocean/test_groups/global_convergence", "users_guide/ocean/test_groups/global_ocean", "users_guide/ocean/test_groups/gotm", "users_guide/ocean/test_groups/hurricane", "users_guide/ocean/test_groups/ice_shelf_2d", "users_guide/ocean/test_groups/index", "users_guide/ocean/test_groups/internal_wave", "users_guide/ocean/test_groups/isomip_plus", "users_guide/ocean/test_groups/merry_go_round", "users_guide/ocean/test_groups/planar_convergence", "users_guide/ocean/test_groups/soma", "users_guide/ocean/test_groups/sphere_transport", "users_guide/ocean/test_groups/spherical_harmonic_transform", "users_guide/ocean/test_groups/tides", "users_guide/ocean/test_groups/ziso", "users_guide/quick_start", "users_guide/test_cases", "users_guide/test_suites", "versions"], "filenames": ["design_docs/cached_outputs.rst", "design_docs/compass_package.rst", "design_docs/index.rst", "design_docs/template.rst", "developers_guide/api.rst", "developers_guide/building_docs.rst", "developers_guide/command_line.rst", "developers_guide/docs.rst", "developers_guide/framework.rst", "developers_guide/generated/compass.MpasCore.rst", "developers_guide/generated/compass.MpasCore.add_test_group.rst", "developers_guide/generated/compass.Step.rst", "developers_guide/generated/compass.Step.add_input_file.rst", "developers_guide/generated/compass.Step.add_model_as_input.rst", "developers_guide/generated/compass.Step.add_namelist_file.rst", "developers_guide/generated/compass.Step.add_namelist_options.rst", "developers_guide/generated/compass.Step.add_output_file.rst", "developers_guide/generated/compass.Step.add_streams_file.rst", "developers_guide/generated/compass.Step.constrain_resources.rst", "developers_guide/generated/compass.Step.run.rst", "developers_guide/generated/compass.Step.runtime_setup.rst", "developers_guide/generated/compass.Step.set_resources.rst", "developers_guide/generated/compass.Step.setup.rst", "developers_guide/generated/compass.Step.update_namelist_at_runtime.rst", "developers_guide/generated/compass.Step.update_namelist_pio.rst", "developers_guide/generated/compass.Step.update_streams_at_runtime.rst", "developers_guide/generated/compass.TestCase.rst", "developers_guide/generated/compass.TestCase.add_step.rst", "developers_guide/generated/compass.TestCase.configure.rst", "developers_guide/generated/compass.TestCase.run.rst", "developers_guide/generated/compass.TestCase.validate.rst", "developers_guide/generated/compass.TestGroup.rst", "developers_guide/generated/compass.TestGroup.add_test_case.rst", "developers_guide/generated/compass.__main__.main.rst", "developers_guide/generated/compass.cache.update_cache.rst", "developers_guide/generated/compass.clean.clean_cases.rst", "developers_guide/generated/compass.config.CompassConfigParser.rst", "developers_guide/generated/compass.io.download.rst", "developers_guide/generated/compass.io.symlink.rst", "developers_guide/generated/compass.list.list_cases.rst", "developers_guide/generated/compass.list.list_machines.rst", "developers_guide/generated/compass.list.list_suites.rst", "developers_guide/generated/compass.logging.log_method_call.rst", "developers_guide/generated/compass.mesh.IcosahedralMeshStep.rst", "developers_guide/generated/compass.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon.rst", "developers_guide/generated/compass.mesh.IcosahedralMeshStep.get_cell_width.rst", "developers_guide/generated/compass.mesh.IcosahedralMeshStep.get_subdivisions.rst", "developers_guide/generated/compass.mesh.IcosahedralMeshStep.make_jigsaw_mesh.rst", "developers_guide/generated/compass.mesh.IcosahedralMeshStep.run.rst", "developers_guide/generated/compass.mesh.IcosahedralMeshStep.setup.rst", "developers_guide/generated/compass.mesh.QuasiUniformSphericalMeshStep.rst", "developers_guide/generated/compass.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon.rst", "developers_guide/generated/compass.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh.rst", "developers_guide/generated/compass.mesh.QuasiUniformSphericalMeshStep.run.rst", "developers_guide/generated/compass.mesh.QuasiUniformSphericalMeshStep.setup.rst", "developers_guide/generated/compass.mesh.spherical.SphericalBaseStep.rst", "developers_guide/generated/compass.mesh.spherical.SphericalBaseStep.run.rst", "developers_guide/generated/compass.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width.rst", "developers_guide/generated/compass.mesh.spherical.SphericalBaseStep.setup.rst", "developers_guide/generated/compass.model.make_graph_file.rst", "developers_guide/generated/compass.model.partition.rst", "developers_guide/generated/compass.model.run_model.rst", "developers_guide/generated/compass.mpas_cores.get_mpas_cores.rst", "developers_guide/generated/compass.parallel.check_parallel_system.rst", "developers_guide/generated/compass.parallel.get_available_cores_and_nodes.rst", "developers_guide/generated/compass.parallel.run_command.rst", "developers_guide/generated/compass.parallel.set_cores_per_node.rst", "developers_guide/generated/compass.provenance.write.rst", "developers_guide/generated/compass.run.serial.run_single_step.rst", "developers_guide/generated/compass.run.serial.run_tests.rst", "developers_guide/generated/compass.setup.setup_case.rst", "developers_guide/generated/compass.setup.setup_cases.rst", "developers_guide/generated/compass.suite.clean_suite.rst", "developers_guide/generated/compass.suite.setup_suite.rst", "developers_guide/generated/compass.validate.compare_timers.rst", "developers_guide/generated/compass.validate.compare_variables.rst", "developers_guide/landice/api.rst", "developers_guide/landice/framework.rst", "developers_guide/landice/generated/compass.landice.Landice.rst", "developers_guide/landice/generated/compass.landice.tests.calving_dt_convergence.CalvingDtConvergence.rst", "developers_guide/landice/generated/compass.landice.tests.calving_dt_convergence.dt_convergence_test.DtConvergenceTest.rst", "developers_guide/landice/generated/compass.landice.tests.calving_dt_convergence.dt_convergence_test.DtConvergenceTest.validate.rst", "developers_guide/landice/generated/compass.landice.tests.calving_dt_convergence.run_model.RunModel.rst", "developers_guide/landice/generated/compass.landice.tests.calving_dt_convergence.run_model.RunModel.run.rst", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.CircularShelf.rst", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.decomposition_test.DecompositionTest.rst", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.decomposition_test.DecompositionTest.run.rst", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.run_model.RunModel.rst", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.run_model.RunModel.run.rst", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.setup_mesh.SetupMesh.rst", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.setup_mesh.SetupMesh.run.rst", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.visualize.Visualize.rst", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.visualize.Visualize.run.rst", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.visualize.visualize_circular_shelf.rst", "developers_guide/landice/generated/compass.landice.tests.dome.Dome.rst", "developers_guide/landice/generated/compass.landice.tests.dome.decomposition_test.DecompositionTest.rst", "developers_guide/landice/generated/compass.landice.tests.dome.decomposition_test.DecompositionTest.run.rst", "developers_guide/landice/generated/compass.landice.tests.dome.restart_test.RestartTest.rst", "developers_guide/landice/generated/compass.landice.tests.dome.restart_test.RestartTest.run.rst", "developers_guide/landice/generated/compass.landice.tests.dome.run_model.RunModel.rst", "developers_guide/landice/generated/compass.landice.tests.dome.run_model.RunModel.run.rst", "developers_guide/landice/generated/compass.landice.tests.dome.run_model.RunModel.setup.rst", "developers_guide/landice/generated/compass.landice.tests.dome.setup_mesh.SetupMesh.rst", "developers_guide/landice/generated/compass.landice.tests.dome.setup_mesh.SetupMesh.run.rst", "developers_guide/landice/generated/compass.landice.tests.dome.smoke_test.SmokeTest.rst", "developers_guide/landice/generated/compass.landice.tests.dome.smoke_test.SmokeTest.run.rst", "developers_guide/landice/generated/compass.landice.tests.dome.visualize.Visualize.rst", "developers_guide/landice/generated/compass.landice.tests.dome.visualize.Visualize.run.rst", "developers_guide/landice/generated/compass.landice.tests.dome.visualize.visualize_dome.rst", "developers_guide/landice/generated/compass.landice.tests.eismint2.Eismint2.rst", "developers_guide/landice/generated/compass.landice.tests.eismint2.decomposition_test.DecompositionTest.rst", "developers_guide/landice/generated/compass.landice.tests.eismint2.decomposition_test.DecompositionTest.run.rst", "developers_guide/landice/generated/compass.landice.tests.eismint2.restart_test.RestartTest.rst", "developers_guide/landice/generated/compass.landice.tests.eismint2.restart_test.RestartTest.run.rst", "developers_guide/landice/generated/compass.landice.tests.eismint2.run_experiment.RunExperiment.rst", "developers_guide/landice/generated/compass.landice.tests.eismint2.run_experiment.RunExperiment.run.rst", "developers_guide/landice/generated/compass.landice.tests.eismint2.run_experiment.RunExperiment.setup.rst", "developers_guide/landice/generated/compass.landice.tests.eismint2.setup_mesh.SetupMesh.rst", "developers_guide/landice/generated/compass.landice.tests.eismint2.setup_mesh.SetupMesh.run.rst", "developers_guide/landice/generated/compass.landice.tests.eismint2.standard_experiments.StandardExperiments.rst", "developers_guide/landice/generated/compass.landice.tests.eismint2.standard_experiments.StandardExperiments.run.rst", "developers_guide/landice/generated/compass.landice.tests.eismint2.standard_experiments.visualize.Visualize.rst", "developers_guide/landice/generated/compass.landice.tests.eismint2.standard_experiments.visualize.Visualize.run.rst", "developers_guide/landice/generated/compass.landice.tests.eismint2.standard_experiments.visualize.visualize_eismint2.rst", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.A.A.rst", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.A.A.configure.rst", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.A.A.run.rst", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.A.visualize.Visualize.rst", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.A.visualize.Visualize.run.rst", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.B.B.rst", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.B.B.configure.rst", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.B.B.run.rst", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.B.visualize.Visualize.rst", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.B.visualize.Visualize.run.rst", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.EnthalpyBenchmark.rst", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.run_model.RunModel.rst", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.run_model.RunModel.run.rst", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.run_model.RunModel.setup.rst", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.setup_mesh.SetupMesh.rst", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.setup_mesh.SetupMesh.run.rst", "developers_guide/landice/generated/compass.landice.tests.greenland.Greenland.rst", "developers_guide/landice/generated/compass.landice.tests.greenland.decomposition_test.DecompositionTest.rst", "developers_guide/landice/generated/compass.landice.tests.greenland.decomposition_test.DecompositionTest.run.rst", "developers_guide/landice/generated/compass.landice.tests.greenland.high_res_mesh.HighResMesh.rst", "developers_guide/landice/generated/compass.landice.tests.greenland.high_res_mesh.HighResMesh.run.rst", "developers_guide/landice/generated/compass.landice.tests.greenland.mesh.Mesh.rst", "developers_guide/landice/generated/compass.landice.tests.greenland.mesh.Mesh.build_cell_width.rst", "developers_guide/landice/generated/compass.landice.tests.greenland.mesh.Mesh.run.rst", "developers_guide/landice/generated/compass.landice.tests.greenland.restart_test.RestartTest.rst", "developers_guide/landice/generated/compass.landice.tests.greenland.restart_test.RestartTest.run.rst", "developers_guide/landice/generated/compass.landice.tests.greenland.run_model.RunModel.rst", "developers_guide/landice/generated/compass.landice.tests.greenland.run_model.RunModel.run.rst", "developers_guide/landice/generated/compass.landice.tests.greenland.run_model.RunModel.setup.rst", "developers_guide/landice/generated/compass.landice.tests.greenland.smoke_test.SmokeTest.rst", "developers_guide/landice/generated/compass.landice.tests.greenland.smoke_test.SmokeTest.run.rst", "developers_guide/landice/generated/compass.landice.tests.humboldt.Humboldt.rst", "developers_guide/landice/generated/compass.landice.tests.humboldt.decomposition_test.DecompositionTest.rst", "developers_guide/landice/generated/compass.landice.tests.humboldt.decomposition_test.DecompositionTest.validate.rst", "developers_guide/landice/generated/compass.landice.tests.humboldt.mesh.Mesh.rst", "developers_guide/landice/generated/compass.landice.tests.humboldt.mesh.Mesh.run.rst", "developers_guide/landice/generated/compass.landice.tests.humboldt.mesh_gen.MeshGen.rst", "developers_guide/landice/generated/compass.landice.tests.humboldt.mesh_gen.MeshGen.run.rst", "developers_guide/landice/generated/compass.landice.tests.humboldt.restart_test.RestartTest.rst", "developers_guide/landice/generated/compass.landice.tests.humboldt.restart_test.RestartTest.validate.rst", "developers_guide/landice/generated/compass.landice.tests.humboldt.run_model.RunModel.rst", "developers_guide/landice/generated/compass.landice.tests.humboldt.run_model.RunModel.run.rst", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.HydroRadial.rst", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.decomposition_test.DecompositionTest.rst", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.decomposition_test.DecompositionTest.run.rst", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.restart_test.RestartTest.rst", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.restart_test.RestartTest.run.rst", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.run_model.RunModel.rst", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.run_model.RunModel.run.rst", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.run_model.RunModel.setup.rst", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.setup_mesh.SetupMesh.rst", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.setup_mesh.SetupMesh.run.rst", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.spinup_test.SpinupTest.rst", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.spinup_test.SpinupTest.run.rst", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.steady_state_drift_test.SteadyStateDriftTest.rst", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.steady_state_drift_test.SteadyStateDriftTest.run.rst", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.visualize.Visualize.rst", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.visualize.Visualize.run.rst", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.visualize.visualize_hydro_radial.rst", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.Ismip6Forcing.rst", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.atmosphere.Atmosphere.rst", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.atmosphere.Atmosphere.configure.rst", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.atmosphere.create_mapfile_smb.rst", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.atmosphere.create_mapfile_smb.build_mapping_file.rst", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.atmosphere.create_mapfile_smb.create_atm_scrip.rst", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.atmosphere.process_smb.ProcessSMB.rst", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.atmosphere.process_smb.ProcessSMB.correct_smb_anomaly_for_climatology.rst", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.atmosphere.process_smb.ProcessSMB.remap_ismip6_smb_to_mali.rst", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.atmosphere.process_smb.ProcessSMB.rename_ismip6_smb_to_mali_vars.rst", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.atmosphere.process_smb.ProcessSMB.run.rst", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.atmosphere.process_smb.ProcessSMB.setup.rst", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.ProcessSmbRacmo.rst", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.ProcessSmbRacmo.correct_smb_anomaly_for_base_smb.rst", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.ProcessSmbRacmo.remap_source_smb_to_mali.rst", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.ProcessSmbRacmo.rename_source_smb_to_mali_vars.rst", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.ProcessSmbRacmo.run.rst", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.ProcessSmbRacmo.setup.rst", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.configure.configure.rst", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.create_mapfile.build_mapping_file.rst", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.ocean_basal.OceanBasal.rst", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.ocean_basal.OceanBasal.configure.rst", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.ProcessBasalMelt.rst", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.ProcessBasalMelt.combine_ismip6_inputfiles.rst", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.ProcessBasalMelt.remap_ismip6_basal_melt_to_mali_vars.rst", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.ProcessBasalMelt.rename_ismip6_basal_melt_to_mali_vars.rst", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.ProcessBasalMelt.run.rst", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.ProcessBasalMelt.setup.rst", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.ocean_thermal.OceanThermal.rst", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.ocean_thermal.OceanThermal.configure.rst", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.ocean_thermal.process_thermal_forcing.ProcessThermalForcing.rst", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.ocean_thermal.process_thermal_forcing.ProcessThermalForcing.remap_ismip6_thermal_forcing_to_mali_vars.rst", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.ocean_thermal.process_thermal_forcing.ProcessThermalForcing.rename_ismip6_thermal_forcing_to_mali_vars.rst", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.ocean_thermal.process_thermal_forcing.ProcessThermalForcing.run.rst", "developers_guide/landice/generated/compass.landice.tests.ismip6_forcing.ocean_thermal.process_thermal_forcing.ProcessThermalForcing.setup.rst", "developers_guide/landice/generated/compass.landice.tests.kangerlussuaq.Kangerlussuaq.rst", "developers_guide/landice/generated/compass.landice.tests.kangerlussuaq.mesh.Mesh.rst", "developers_guide/landice/generated/compass.landice.tests.kangerlussuaq.mesh.Mesh.run.rst", "developers_guide/landice/generated/compass.landice.tests.kangerlussuaq.mesh_gen.MeshGen.rst", "developers_guide/landice/generated/compass.landice.tests.kangerlussuaq.mesh_gen.MeshGen.run.rst", "developers_guide/landice/generated/compass.landice.tests.koge_bugt_s.KogeBugtS.rst", "developers_guide/landice/generated/compass.landice.tests.koge_bugt_s.mesh.Mesh.rst", "developers_guide/landice/generated/compass.landice.tests.koge_bugt_s.mesh.Mesh.run.rst", "developers_guide/landice/generated/compass.landice.tests.koge_bugt_s.mesh_gen.MeshGen.rst", "developers_guide/landice/generated/compass.landice.tests.koge_bugt_s.mesh_gen.MeshGen.run.rst", "developers_guide/landice/generated/compass.landice.tests.mismipplus.MISMIPplus.rst", "developers_guide/landice/generated/compass.landice.tests.mismipplus.run_model.RunModel.rst", "developers_guide/landice/generated/compass.landice.tests.mismipplus.run_model.RunModel.run.rst", "developers_guide/landice/generated/compass.landice.tests.mismipplus.run_model.RunModel.setup.rst", "developers_guide/landice/generated/compass.landice.tests.mismipplus.smoke_test.SmokeTest.rst", "developers_guide/landice/generated/compass.landice.tests.mismipplus.smoke_test.SmokeTest.run.rst", "developers_guide/landice/generated/compass.landice.tests.thwaites.Thwaites.rst", "developers_guide/landice/generated/compass.landice.tests.thwaites.decomposition_test.DecompositionTest.rst", "developers_guide/landice/generated/compass.landice.tests.thwaites.decomposition_test.DecompositionTest.run.rst", "developers_guide/landice/generated/compass.landice.tests.thwaites.restart_test.RestartTest.rst", "developers_guide/landice/generated/compass.landice.tests.thwaites.restart_test.RestartTest.run.rst", "developers_guide/landice/generated/compass.landice.tests.thwaites.run_model.RunModel.rst", "developers_guide/landice/generated/compass.landice.tests.thwaites.run_model.RunModel.run.rst", "developers_guide/landice/generated/compass.landice.tests.thwaites.run_model.RunModel.setup.rst", "developers_guide/landice/index.rst", "developers_guide/landice/test_groups/calving_dt_convergence.rst", "developers_guide/landice/test_groups/circular_shelf.rst", "developers_guide/landice/test_groups/dome.rst", "developers_guide/landice/test_groups/eismint2.rst", "developers_guide/landice/test_groups/enthalpy_benchmark.rst", "developers_guide/landice/test_groups/greenland.rst", "developers_guide/landice/test_groups/humboldt.rst", "developers_guide/landice/test_groups/hydro_radial.rst", "developers_guide/landice/test_groups/index.rst", "developers_guide/landice/test_groups/ismip6_forcing.rst", "developers_guide/landice/test_groups/kangerlussuaq.rst", "developers_guide/landice/test_groups/koge_bugt_s.rst", "developers_guide/landice/test_groups/mismipplus.rst", "developers_guide/landice/test_groups/thwaites.rst", "developers_guide/machines/anvil.rst", "developers_guide/machines/chrysalis.rst", "developers_guide/machines/compy.rst", "developers_guide/machines/cori.rst", "developers_guide/machines/index.rst", "developers_guide/machines/perlmutter.rst", "developers_guide/ocean/api.rst", "developers_guide/ocean/framework.rst", "developers_guide/ocean/generated/compass.ocean.Ocean.rst", "developers_guide/ocean/generated/compass.ocean.haney.compute_haney_number.rst", "developers_guide/ocean/generated/compass.ocean.iceshelf.adjust_ssh.rst", "developers_guide/ocean/generated/compass.ocean.iceshelf.compute_land_ice_pressure_and_draft.rst", "developers_guide/ocean/generated/compass.ocean.mesh.cull.CullMeshStep.rst", "developers_guide/ocean/generated/compass.ocean.mesh.cull.CullMeshStep.run.rst", "developers_guide/ocean/generated/compass.ocean.mesh.cull.CullMeshStep.setup.rst", "developers_guide/ocean/generated/compass.ocean.mesh.cull.cull_mesh.rst", "developers_guide/ocean/generated/compass.ocean.mesh.floodplain.FloodplainMeshStep.rst", "developers_guide/ocean/generated/compass.ocean.mesh.floodplain.FloodplainMeshStep.run.rst", "developers_guide/ocean/generated/compass.ocean.particles.remap_particles.rst", "developers_guide/ocean/generated/compass.ocean.particles.write.rst", "developers_guide/ocean/generated/compass.ocean.plot.plot_initial_state.rst", "developers_guide/ocean/generated/compass.ocean.plot.plot_vertical_grid.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.BaroclinicChannel.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.decomp_test.DecompTest.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.decomp_test.DecompTest.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.decomp_test.DecompTest.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.default.Default.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.default.Default.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.default.Default.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.forward.Forward.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.forward.Forward.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.forward.Forward.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.initial_state.InitialState.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.initial_state.InitialState.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.initial_state.InitialState.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.restart_test.RestartTest.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.restart_test.RestartTest.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.restart_test.RestartTest.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.rpe_test.RpeTest.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.rpe_test.RpeTest.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.rpe_test.RpeTest.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.dam_break.DamBreak.rst", "developers_guide/ocean/generated/compass.ocean.tests.dam_break.default.Default.rst", "developers_guide/ocean/generated/compass.ocean.tests.dam_break.default.Default.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.dam_break.forward.Forward.rst", "developers_guide/ocean/generated/compass.ocean.tests.dam_break.forward.Forward.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.dam_break.initial_state.InitialState.rst", "developers_guide/ocean/generated/compass.ocean.tests.dam_break.initial_state.InitialState.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.dam_break.viz.Viz.rst", "developers_guide/ocean/generated/compass.ocean.tests.dam_break.viz.Viz.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.drying_slope.DryingSlope.rst", "developers_guide/ocean/generated/compass.ocean.tests.drying_slope.default.Default.rst", "developers_guide/ocean/generated/compass.ocean.tests.drying_slope.default.Default.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.drying_slope.forward.Forward.rst", "developers_guide/ocean/generated/compass.ocean.tests.drying_slope.forward.Forward.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.drying_slope.initial_state.InitialState.rst", "developers_guide/ocean/generated/compass.ocean.tests.drying_slope.initial_state.InitialState.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.drying_slope.viz.Viz.rst", "developers_guide/ocean/generated/compass.ocean.tests.drying_slope.viz.Viz.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.GlobalConvergence.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.CosineBell.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.CosineBell.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.CosineBell.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rmse.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.forward.Forward.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.forward.Forward.get_dt.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.forward.Forward.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.forward.Forward.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.init.Init.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.init.Init.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.GlobalOcean.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.analysis_test.AnalysisTest.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.analysis_test.AnalysisTest.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.analysis_test.AnalysisTest.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.configure.configure_global_ocean.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.daily_output_test.DailyOutputTest.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.daily_output_test.DailyOutputTest.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.daily_output_test.DailyOutputTest.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.decomp_test.DecompTest.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.decomp_test.DecompTest.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.decomp_test.DecompTest.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.dynamic_adjustment.DynamicAdjustment.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.dynamic_adjustment.DynamicAdjustment.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.FilesForE3SM.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.FilesForE3SM.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.FilesForE3SM.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.diagnostics_files.DiagnosticsFiles.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.diagnostics_files.DiagnosticsFiles.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.ocean_graph_partition.OceanGraphPartition.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.ocean_graph_partition.OceanGraphPartition.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.ocean_initial_condition.OceanInitialCondition.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.ocean_initial_condition.OceanInitialCondition.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.scrip.Scrip.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.scrip.Scrip.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.seaice_initial_condition.SeaiceInitialCondition.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.seaice_initial_condition.SeaiceInitialCondition.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.forward.ForwardStep.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.forward.ForwardStep.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.forward.ForwardStep.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.forward.ForwardTestCase.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.forward.ForwardTestCase.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.forward.ForwardTestCase.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.init.Init.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.init.Init.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.init.Init.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.init.initial_state.InitialState.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.init.initial_state.InitialState.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.init.initial_state.InitialState.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.init.ssh_adjustment.SshAdjustment.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.init.ssh_adjustment.SshAdjustment.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.init.ssh_adjustment.SshAdjustment.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.Mesh.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.Mesh.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.Mesh.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.ec30to60.EC30to60BaseMesh.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.ec30to60.EC30to60BaseMesh.build_cell_width_lat_lon.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.ec30to60.dynamic_adjustment.EC30to60DynamicAdjustment.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.ec30to60.dynamic_adjustment.EC30to60DynamicAdjustment.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.ec30to60.dynamic_adjustment.EC30to60DynamicAdjustment.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.qu240.dynamic_adjustment.QU240DynamicAdjustment.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.qu240.dynamic_adjustment.QU240DynamicAdjustment.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.qu240.dynamic_adjustment.QU240DynamicAdjustment.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.so12to60.SO12to60BaseMesh.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.so12to60.SO12to60BaseMesh.build_cell_width_lat_lon.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.so12to60.dynamic_adjustment.SO12to60DynamicAdjustment.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.so12to60.dynamic_adjustment.SO12to60DynamicAdjustment.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.so12to60.dynamic_adjustment.SO12to60DynamicAdjustment.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.wc14.WC14BaseMesh.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.wc14.WC14BaseMesh.build_cell_width_lat_lon.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.wc14.dynamic_adjustment.WC14DynamicAdjustment.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.wc14.dynamic_adjustment.WC14DynamicAdjustment.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.wc14.dynamic_adjustment.WC14DynamicAdjustment.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.metadata.add_mesh_and_init_metadata.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.metadata.get_e3sm_mesh_names.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.performance_test.PerformanceTest.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.performance_test.PerformanceTest.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.performance_test.PerformanceTest.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.restart_test.RestartTest.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.restart_test.RestartTest.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.restart_test.RestartTest.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.threads_test.ThreadsTest.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.threads_test.ThreadsTest.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.threads_test.ThreadsTest.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.gotm.Gotm.rst", "developers_guide/ocean/generated/compass.ocean.tests.gotm.default.Default.rst", "developers_guide/ocean/generated/compass.ocean.tests.gotm.default.Default.validate.rst", "developers_guide/ocean/generated/compass.ocean.tests.gotm.default.analysis.Analysis.rst", "developers_guide/ocean/generated/compass.ocean.tests.gotm.default.analysis.Analysis.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.gotm.default.forward.Forward.rst", "developers_guide/ocean/generated/compass.ocean.tests.gotm.default.forward.Forward.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.gotm.default.init.Init.rst", "developers_guide/ocean/generated/compass.ocean.tests.gotm.default.init.Init.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.Hurricane.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.analysis.Analysis.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.analysis.Analysis.read_pointstats.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.analysis.Analysis.read_station_data.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.analysis.Analysis.read_station_file.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.analysis.Analysis.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.analysis.Analysis.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.forward.Forward.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.forward.Forward.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.forward.Forward.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.forward.forward.ForwardStep.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.forward.forward.ForwardStep.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.forward.forward.ForwardStep.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.Init.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.Init.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.Init.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.create_pointstats_file.CreatePointstatsFile.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.create_pointstats_file.CreatePointstatsFile.create_pointstats_file.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.create_pointstats_file.CreatePointstatsFile.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.initial_state.InitialState.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.initial_state.InitialState.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.initial_state.InitialState.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing.interpolate_data_to_grid.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing.plot_interp_data.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing.write_to_file.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.mesh.Mesh.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.mesh.Mesh.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.mesh.Mesh.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.mesh.dequ120at30cr10rr2.DEQU120at30cr10rr2BaseMesh.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.mesh.dequ120at30cr10rr2.DEQU120at30cr10rr2BaseMesh.build_cell_width_lat_lon.rst", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.IceShelf2d.rst", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.default.Default.rst", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.default.Default.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.default.Default.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.forward.Forward.rst", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.forward.Forward.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.forward.Forward.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.initial_state.InitialState.rst", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.initial_state.InitialState.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.restart_test.RestartTest.rst", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.restart_test.RestartTest.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.restart_test.RestartTest.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.ssh_adjustment.SshAdjustment.rst", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.ssh_adjustment.SshAdjustment.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.ssh_adjustment.SshAdjustment.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.viz.Viz.rst", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.viz.Viz.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.InternalWave.rst", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.default.Default.rst", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.default.Default.validate.rst", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.forward.Forward.rst", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.forward.Forward.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.initial_state.InitialState.rst", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.initial_state.InitialState.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.rpe_test.RpeTest.rst", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.rpe_test.analysis.Analysis.rst", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.rpe_test.analysis.Analysis.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.ten_day_test.TenDayTest.rst", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.ten_day_test.TenDayTest.validate.rst", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.viz.Viz.rst", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.viz.Viz.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.IsomipPlus.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.evap.update_evaporation_flux.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.forward.Forward.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.forward.Forward.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.forward.Forward.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.geom.interpolate_ocean_mask.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.geom.process_input_geometry.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.initial_state.InitialState.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.initial_state.InitialState.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.isomip_plus_test.IsomipPlusTest.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.isomip_plus_test.IsomipPlusTest.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.isomip_plus_test.IsomipPlusTest.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.misomip.Misomip.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.misomip.Misomip.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.ssh_adjustment.SshAdjustment.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.ssh_adjustment.SshAdjustment.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.ssh_adjustment.SshAdjustment.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.streamfunction.Streamfunction.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.streamfunction.Streamfunction.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.Viz.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.Viz.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.file_complete.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.images_to_movies.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_3d_field_top_bot_section.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_barotropic_streamfunction.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_horiz_series.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_ice_shelf_boundary_variables.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_layer_interfaces.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_melt_rates.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_overturning_streamfunction.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_potential_density.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_salinity.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_temperature.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.TimeSeriesPlotter.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.TimeSeriesPlotter.plot_melt_time_series.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.TimeSeriesPlotter.plot_time_series.rst", "developers_guide/ocean/generated/compass.ocean.tests.merry_go_round.MerryGoRound.rst", "developers_guide/ocean/generated/compass.ocean.tests.merry_go_round.convergence_test.analysis.Analysis.rst", "developers_guide/ocean/generated/compass.ocean.tests.merry_go_round.convergence_test.analysis.Analysis.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.merry_go_round.default.Default.rst", "developers_guide/ocean/generated/compass.ocean.tests.merry_go_round.default.Default.validate.rst", "developers_guide/ocean/generated/compass.ocean.tests.merry_go_round.forward.Forward.rst", "developers_guide/ocean/generated/compass.ocean.tests.merry_go_round.forward.Forward.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.merry_go_round.initial_state.InitialState.rst", "developers_guide/ocean/generated/compass.ocean.tests.merry_go_round.initial_state.InitialState.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.merry_go_round.viz.Viz.rst", "developers_guide/ocean/generated/compass.ocean.tests.merry_go_round.viz.Viz.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.PlanarConvergence.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.conv_init.ConvInit.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.conv_init.ConvInit.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.conv_test_case.ConvTestCase.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.conv_test_case.ConvTestCase.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.conv_test_case.ConvTestCase.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.conv_test_case.ConvTestCase.update_cores.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.forward.Forward.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.forward.Forward.get_dt_duration.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.forward.Forward.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.forward.Forward.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.horizontal_advection.HorizontalAdvection.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.horizontal_advection.HorizontalAdvection.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.horizontal_advection.HorizontalAdvection.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.horizontal_advection.analysis.Analysis.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.horizontal_advection.analysis.Analysis.rmse.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.horizontal_advection.analysis.Analysis.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.horizontal_advection.init.Init.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.horizontal_advection.init.Init.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.soma.Soma.rst", "developers_guide/ocean/generated/compass.ocean.tests.soma.analysis.Analysis.rst", "developers_guide/ocean/generated/compass.ocean.tests.soma.analysis.Analysis.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.soma.forward.Forward.rst", "developers_guide/ocean/generated/compass.ocean.tests.soma.forward.Forward.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.soma.initial_state.InitialState.rst", "developers_guide/ocean/generated/compass.ocean.tests.soma.initial_state.InitialState.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.soma.soma_test_case.SomaTestCase.rst", "developers_guide/ocean/generated/compass.ocean.tests.soma.soma_test_case.SomaTestCase.validate.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.SphereTransport.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.CorrelatedTracers2D.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.CorrelatedTracers2D.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.CorrelatedTracers2D.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.analysis.Analysis.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.analysis.Analysis.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.Forward.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.Forward.get_timestep_str.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.Forward.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.Forward.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.init.Init.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.init.Init.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.mesh.Mesh.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.mesh.Mesh.build_cell_width_lat_lon.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.mesh.Mesh.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.Divergent2D.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.Divergent2D.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.Divergent2D.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.analysis.Analysis.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.analysis.Analysis.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.forward.Forward.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.forward.Forward.get_timestep_str.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.forward.Forward.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.forward.Forward.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.init.Init.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.init.Init.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.mesh.Mesh.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.mesh.Mesh.build_cell_width_lat_lon.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.mesh.Mesh.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.Nondivergent2D.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.Nondivergent2D.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.Nondivergent2D.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.analysis.Analysis.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.analysis.Analysis.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.forward.Forward.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.forward.Forward.get_timestep_str.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.forward.Forward.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.forward.Forward.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.init.Init.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.init.Init.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.mesh.Mesh.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.mesh.Mesh.build_cell_width_lat_lon.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.mesh.Mesh.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.compute_convergence_rates.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.compute_error_from_output_ncfile.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.make_convergence_arrays.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.plot_convergence.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.plot_filament.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.plot_over_and_undershoot_errors.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.plot_sol.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.print_data_as_csv.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.print_error_conv_table.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.read_ncl_rgb_file.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.Rotation2D.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.Rotation2D.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.Rotation2D.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.analysis.Analysis.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.analysis.Analysis.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.forward.Forward.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.forward.Forward.get_timestep_str.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.forward.Forward.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.forward.Forward.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.init.Init.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.init.Init.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.mesh.Mesh.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.mesh.Mesh.build_cell_width_lat_lon.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.mesh.Mesh.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.tides.Tides.rst", "developers_guide/ocean/generated/compass.ocean.tests.tides.analysis.Analysis.rst", "developers_guide/ocean/generated/compass.ocean.tests.tides.analysis.Analysis.append_tpxo_data.rst", "developers_guide/ocean/generated/compass.ocean.tests.tides.analysis.Analysis.check_tpxo_data.rst", "developers_guide/ocean/generated/compass.ocean.tests.tides.analysis.Analysis.plot.rst", "developers_guide/ocean/generated/compass.ocean.tests.tides.analysis.Analysis.read_otps2_output.rst", "developers_guide/ocean/generated/compass.ocean.tests.tides.analysis.Analysis.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.tides.analysis.Analysis.run_otps2.rst", "developers_guide/ocean/generated/compass.ocean.tests.tides.analysis.Analysis.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.tides.analysis.Analysis.setup_otps2.rst", "developers_guide/ocean/generated/compass.ocean.tests.tides.analysis.Analysis.write_coordinate_file.rst", "developers_guide/ocean/generated/compass.ocean.tests.tides.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.tides.forward.Forward.rst", "developers_guide/ocean/generated/compass.ocean.tests.tides.forward.Forward.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.tides.forward.Forward.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.tides.forward.forward.ForwardStep.rst", "developers_guide/ocean/generated/compass.ocean.tests.tides.forward.forward.ForwardStep.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.tides.forward.forward.ForwardStep.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.tides.init.Init.rst", "developers_guide/ocean/generated/compass.ocean.tests.tides.init.Init.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.tides.init.Init.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.tides.init.initial_state.InitialState.rst", "developers_guide/ocean/generated/compass.ocean.tests.tides.init.initial_state.InitialState.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.tides.init.initial_state.InitialState.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.tides.init.interpolate_wave_drag.InterpolateWaveDrag.rst", "developers_guide/ocean/generated/compass.ocean.tests.tides.init.interpolate_wave_drag.InterpolateWaveDrag.interpolate_data_to_grid.rst", "developers_guide/ocean/generated/compass.ocean.tests.tides.init.interpolate_wave_drag.InterpolateWaveDrag.plot_interp_data.rst", "developers_guide/ocean/generated/compass.ocean.tests.tides.init.interpolate_wave_drag.InterpolateWaveDrag.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.tides.init.interpolate_wave_drag.InterpolateWaveDrag.write_to_file.rst", "developers_guide/ocean/generated/compass.ocean.tests.tides.init.remap_bathymetry.RemapBathymetry.rst", "developers_guide/ocean/generated/compass.ocean.tests.tides.init.remap_bathymetry.RemapBathymetry.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.tides.mesh.Mesh.rst", "developers_guide/ocean/generated/compass.ocean.tests.tides.mesh.Mesh.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.tides.mesh.Mesh.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.ziso.Ziso.rst", "developers_guide/ocean/generated/compass.ocean.tests.ziso.ZisoTestCase.rst", "developers_guide/ocean/generated/compass.ocean.tests.ziso.ZisoTestCase.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.ziso.ZisoTestCase.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.ziso.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.ziso.forward.Forward.rst", "developers_guide/ocean/generated/compass.ocean.tests.ziso.forward.Forward.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.ziso.forward.Forward.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.ziso.initial_state.InitialState.rst", "developers_guide/ocean/generated/compass.ocean.tests.ziso.initial_state.InitialState.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.ziso.with_frazil.WithFrazil.rst", "developers_guide/ocean/generated/compass.ocean.tests.ziso.with_frazil.WithFrazil.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.ziso.with_frazil.WithFrazil.run.rst", "developers_guide/ocean/generated/compass.ocean.vertical.grid_1d.generate_1d_grid.rst", "developers_guide/ocean/generated/compass.ocean.vertical.grid_1d.write_1d_grid.rst", "developers_guide/ocean/generated/compass.ocean.vertical.init_vertical_coord.rst", "developers_guide/ocean/generated/compass.ocean.vertical.partial_cells.alter_bottom_depth.rst", "developers_guide/ocean/generated/compass.ocean.vertical.partial_cells.alter_ssh.rst", "developers_guide/ocean/generated/compass.ocean.vertical.zlevel.compute_min_max_level_cell.rst", "developers_guide/ocean/generated/compass.ocean.vertical.zlevel.compute_z_level_layer_thickness.rst", "developers_guide/ocean/generated/compass.ocean.vertical.zlevel.compute_z_level_resting_thickness.rst", "developers_guide/ocean/generated/compass.ocean.vertical.zlevel.init_z_level_vertical_coord.rst", "developers_guide/ocean/generated/compass.ocean.vertical.zstar.init_z_star_vertical_coord.rst", "developers_guide/ocean/index.rst", "developers_guide/ocean/test_groups/baroclinic_channel.rst", "developers_guide/ocean/test_groups/dam_break.rst", "developers_guide/ocean/test_groups/drying_slope.rst", "developers_guide/ocean/test_groups/global_convergence.rst", "developers_guide/ocean/test_groups/global_ocean.rst", "developers_guide/ocean/test_groups/gotm.rst", "developers_guide/ocean/test_groups/hurricane.rst", "developers_guide/ocean/test_groups/ice_shelf_2d.rst", "developers_guide/ocean/test_groups/index.rst", "developers_guide/ocean/test_groups/internal_wave.rst", "developers_guide/ocean/test_groups/isomip_plus.rst", "developers_guide/ocean/test_groups/merry_go_round.rst", "developers_guide/ocean/test_groups/planar_convergence.rst", "developers_guide/ocean/test_groups/soma.rst", "developers_guide/ocean/test_groups/sphere_transport.rst", "developers_guide/ocean/test_groups/spherical_harmonic_transform.rst", "developers_guide/ocean/test_groups/tides.rst", "developers_guide/ocean/test_groups/ziso.rst", "developers_guide/organization.rst", "developers_guide/overview.rst", "developers_guide/quick_start.rst", "developers_guide/troubleshooting.rst", "glossary.rst", "index.rst", "tutorials/dev_add_param_study.rst", "tutorials/dev_add_test_group.rst", "tutorials/dev_porting_legacy.rst", "users_guide/config_files.rst", "users_guide/landice/framework/index.rst", "users_guide/landice/index.rst", "users_guide/landice/suites.rst", "users_guide/landice/test_groups/calving_dt_convergence.rst", "users_guide/landice/test_groups/circular_shelf.rst", "users_guide/landice/test_groups/dome.rst", "users_guide/landice/test_groups/eismint2.rst", "users_guide/landice/test_groups/enthalpy_benchmark.rst", "users_guide/landice/test_groups/greenland.rst", "users_guide/landice/test_groups/humboldt.rst", "users_guide/landice/test_groups/hydro_radial.rst", "users_guide/landice/test_groups/index.rst", "users_guide/landice/test_groups/ismip6_forcing.rst", "users_guide/landice/test_groups/kangerlussuaq.rst", "users_guide/landice/test_groups/koge_bugt_s.rst", "users_guide/landice/test_groups/mismipplus.rst", "users_guide/landice/test_groups/thwaites.rst", "users_guide/machines/anvil.rst", "users_guide/machines/chrysalis.rst", "users_guide/machines/compy.rst", "users_guide/machines/cori.rst", "users_guide/machines/index.rst", "users_guide/machines/perlmutter.rst", "users_guide/ocean/framework/ice_shelf.rst", "users_guide/ocean/framework/index.rst", "users_guide/ocean/framework/vertical.rst", "users_guide/ocean/index.rst", "users_guide/ocean/suites.rst", "users_guide/ocean/test_groups/baroclinic_channel.rst", "users_guide/ocean/test_groups/dam_break.rst", "users_guide/ocean/test_groups/drying_slope.rst", "users_guide/ocean/test_groups/global_convergence.rst", "users_guide/ocean/test_groups/global_ocean.rst", "users_guide/ocean/test_groups/gotm.rst", "users_guide/ocean/test_groups/hurricane.rst", "users_guide/ocean/test_groups/ice_shelf_2d.rst", "users_guide/ocean/test_groups/index.rst", "users_guide/ocean/test_groups/internal_wave.rst", "users_guide/ocean/test_groups/isomip_plus.rst", "users_guide/ocean/test_groups/merry_go_round.rst", "users_guide/ocean/test_groups/planar_convergence.rst", "users_guide/ocean/test_groups/soma.rst", "users_guide/ocean/test_groups/sphere_transport.rst", "users_guide/ocean/test_groups/spherical_harmonic_transform.rst", "users_guide/ocean/test_groups/tides.rst", "users_guide/ocean/test_groups/ziso.rst", "users_guide/quick_start.rst", "users_guide/test_cases.rst", "users_guide/test_suites.rst", "versions.rst"], "titles": ["Caching outputs from compass steps", "compass python package", "Design Documents", "Template", "API reference", "Building the Documentation", "Command-line interface", "Documentation", "Framework", "compass.MpasCore", "compass.MpasCore.add_test_group", "compass.Step", "compass.Step.add_input_file", "compass.Step.add_model_as_input", "compass.Step.add_namelist_file", "compass.Step.add_namelist_options", "compass.Step.add_output_file", "compass.Step.add_streams_file", "compass.Step.constrain_resources", "compass.Step.run", "compass.Step.runtime_setup", "compass.Step.set_resources", "compass.Step.setup", "compass.Step.update_namelist_at_runtime", "compass.Step.update_namelist_pio", "compass.Step.update_streams_at_runtime", "compass.TestCase", "compass.TestCase.add_step", "compass.TestCase.configure", "compass.TestCase.run", "compass.TestCase.validate", "compass.TestGroup", "compass.TestGroup.add_test_case", "compass.__main__.main", "compass.cache.update_cache", "compass.clean.clean_cases", "compass.config.CompassConfigParser", "compass.io.download", "compass.io.symlink", "compass.list.list_cases", "compass.list.list_machines", "compass.list.list_suites", "compass.logging.log_method_call", "compass.mesh.IcosahedralMeshStep", "compass.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon", "compass.mesh.IcosahedralMeshStep.get_cell_width", "compass.mesh.IcosahedralMeshStep.get_subdivisions", "compass.mesh.IcosahedralMeshStep.make_jigsaw_mesh", "compass.mesh.IcosahedralMeshStep.run", "compass.mesh.IcosahedralMeshStep.setup", "compass.mesh.QuasiUniformSphericalMeshStep", "compass.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon", "compass.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh", "compass.mesh.QuasiUniformSphericalMeshStep.run", "compass.mesh.QuasiUniformSphericalMeshStep.setup", "compass.mesh.spherical.SphericalBaseStep", "compass.mesh.spherical.SphericalBaseStep.run", "compass.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width", "compass.mesh.spherical.SphericalBaseStep.setup", "compass.model.make_graph_file", "compass.model.partition", "compass.model.run_model", "compass.mpas_cores.get_mpas_cores", "compass.parallel.check_parallel_system", "compass.parallel.get_available_cores_and_nodes", "compass.parallel.run_command", "compass.parallel.set_cores_per_node", "compass.provenance.write", "compass.run.serial.run_single_step", "compass.run.serial.run_tests", "compass.setup.setup_case", "compass.setup.setup_cases", "compass.suite.clean_suite", "compass.suite.setup_suite", "compass.validate.compare_timers", "compass.validate.compare_variables", "landice", "Land-ice Framework", "compass.landice.Landice", "compass.landice.tests.calving_dt_convergence.CalvingDtConvergence", "compass.landice.tests.calving_dt_convergence.dt_convergence_test.DtConvergenceTest", "compass.landice.tests.calving_dt_convergence.dt_convergence_test.DtConvergenceTest.validate", "compass.landice.tests.calving_dt_convergence.run_model.RunModel", "compass.landice.tests.calving_dt_convergence.run_model.RunModel.run", "compass.landice.tests.circular_shelf.CircularShelf", "compass.landice.tests.circular_shelf.decomposition_test.DecompositionTest", "compass.landice.tests.circular_shelf.decomposition_test.DecompositionTest.run", "compass.landice.tests.circular_shelf.run_model.RunModel", "compass.landice.tests.circular_shelf.run_model.RunModel.run", "compass.landice.tests.circular_shelf.setup_mesh.SetupMesh", "compass.landice.tests.circular_shelf.setup_mesh.SetupMesh.run", "compass.landice.tests.circular_shelf.visualize.Visualize", "compass.landice.tests.circular_shelf.visualize.Visualize.run", "compass.landice.tests.circular_shelf.visualize.visualize_circular_shelf", "compass.landice.tests.dome.Dome", "compass.landice.tests.dome.decomposition_test.DecompositionTest", "compass.landice.tests.dome.decomposition_test.DecompositionTest.run", "compass.landice.tests.dome.restart_test.RestartTest", "compass.landice.tests.dome.restart_test.RestartTest.run", "compass.landice.tests.dome.run_model.RunModel", "compass.landice.tests.dome.run_model.RunModel.run", "compass.landice.tests.dome.run_model.RunModel.setup", "compass.landice.tests.dome.setup_mesh.SetupMesh", "compass.landice.tests.dome.setup_mesh.SetupMesh.run", "compass.landice.tests.dome.smoke_test.SmokeTest", "compass.landice.tests.dome.smoke_test.SmokeTest.run", "compass.landice.tests.dome.visualize.Visualize", "compass.landice.tests.dome.visualize.Visualize.run", "compass.landice.tests.dome.visualize.visualize_dome", "compass.landice.tests.eismint2.Eismint2", "compass.landice.tests.eismint2.decomposition_test.DecompositionTest", "compass.landice.tests.eismint2.decomposition_test.DecompositionTest.run", "compass.landice.tests.eismint2.restart_test.RestartTest", "compass.landice.tests.eismint2.restart_test.RestartTest.run", "compass.landice.tests.eismint2.run_experiment.RunExperiment", "compass.landice.tests.eismint2.run_experiment.RunExperiment.run", "compass.landice.tests.eismint2.run_experiment.RunExperiment.setup", "compass.landice.tests.eismint2.setup_mesh.SetupMesh", "compass.landice.tests.eismint2.setup_mesh.SetupMesh.run", "compass.landice.tests.eismint2.standard_experiments.StandardExperiments", "compass.landice.tests.eismint2.standard_experiments.StandardExperiments.run", "compass.landice.tests.eismint2.standard_experiments.visualize.Visualize", "compass.landice.tests.eismint2.standard_experiments.visualize.Visualize.run", "compass.landice.tests.eismint2.standard_experiments.visualize.visualize_eismint2", "compass.landice.tests.enthalpy_benchmark.A.A", "compass.landice.tests.enthalpy_benchmark.A.A.configure", "compass.landice.tests.enthalpy_benchmark.A.A.run", "compass.landice.tests.enthalpy_benchmark.A.visualize.Visualize", "compass.landice.tests.enthalpy_benchmark.A.visualize.Visualize.run", "compass.landice.tests.enthalpy_benchmark.B.B", "compass.landice.tests.enthalpy_benchmark.B.B.configure", "compass.landice.tests.enthalpy_benchmark.B.B.run", "compass.landice.tests.enthalpy_benchmark.B.visualize.Visualize", "compass.landice.tests.enthalpy_benchmark.B.visualize.Visualize.run", "compass.landice.tests.enthalpy_benchmark.EnthalpyBenchmark", "compass.landice.tests.enthalpy_benchmark.run_model.RunModel", "compass.landice.tests.enthalpy_benchmark.run_model.RunModel.run", "compass.landice.tests.enthalpy_benchmark.run_model.RunModel.setup", "compass.landice.tests.enthalpy_benchmark.setup_mesh.SetupMesh", "compass.landice.tests.enthalpy_benchmark.setup_mesh.SetupMesh.run", "compass.landice.tests.greenland.Greenland", "compass.landice.tests.greenland.decomposition_test.DecompositionTest", "compass.landice.tests.greenland.decomposition_test.DecompositionTest.run", "compass.landice.tests.greenland.high_res_mesh.HighResMesh", "compass.landice.tests.greenland.high_res_mesh.HighResMesh.run", "compass.landice.tests.greenland.mesh.Mesh", "compass.landice.tests.greenland.mesh.Mesh.build_cell_width", "compass.landice.tests.greenland.mesh.Mesh.run", "compass.landice.tests.greenland.restart_test.RestartTest", "compass.landice.tests.greenland.restart_test.RestartTest.run", "compass.landice.tests.greenland.run_model.RunModel", "compass.landice.tests.greenland.run_model.RunModel.run", "compass.landice.tests.greenland.run_model.RunModel.setup", "compass.landice.tests.greenland.smoke_test.SmokeTest", "compass.landice.tests.greenland.smoke_test.SmokeTest.run", "compass.landice.tests.humboldt.Humboldt", "compass.landice.tests.humboldt.decomposition_test.DecompositionTest", "compass.landice.tests.humboldt.decomposition_test.DecompositionTest.validate", "compass.landice.tests.humboldt.mesh.Mesh", "compass.landice.tests.humboldt.mesh.Mesh.run", "compass.landice.tests.humboldt.mesh_gen.MeshGen", "compass.landice.tests.humboldt.mesh_gen.MeshGen.run", "compass.landice.tests.humboldt.restart_test.RestartTest", "compass.landice.tests.humboldt.restart_test.RestartTest.validate", "compass.landice.tests.humboldt.run_model.RunModel", "compass.landice.tests.humboldt.run_model.RunModel.run", "compass.landice.tests.hydro_radial.HydroRadial", "compass.landice.tests.hydro_radial.decomposition_test.DecompositionTest", "compass.landice.tests.hydro_radial.decomposition_test.DecompositionTest.run", "compass.landice.tests.hydro_radial.restart_test.RestartTest", "compass.landice.tests.hydro_radial.restart_test.RestartTest.run", "compass.landice.tests.hydro_radial.run_model.RunModel", "compass.landice.tests.hydro_radial.run_model.RunModel.run", "compass.landice.tests.hydro_radial.run_model.RunModel.setup", "compass.landice.tests.hydro_radial.setup_mesh.SetupMesh", "compass.landice.tests.hydro_radial.setup_mesh.SetupMesh.run", "compass.landice.tests.hydro_radial.spinup_test.SpinupTest", "compass.landice.tests.hydro_radial.spinup_test.SpinupTest.run", "compass.landice.tests.hydro_radial.steady_state_drift_test.SteadyStateDriftTest", "compass.landice.tests.hydro_radial.steady_state_drift_test.SteadyStateDriftTest.run", "compass.landice.tests.hydro_radial.visualize.Visualize", "compass.landice.tests.hydro_radial.visualize.Visualize.run", "compass.landice.tests.hydro_radial.visualize.visualize_hydro_radial", "compass.landice.tests.ismip6_forcing.Ismip6Forcing", "compass.landice.tests.ismip6_forcing.atmosphere.Atmosphere", "compass.landice.tests.ismip6_forcing.atmosphere.Atmosphere.configure", "compass.landice.tests.ismip6_forcing.atmosphere.create_mapfile_smb", "compass.landice.tests.ismip6_forcing.atmosphere.create_mapfile_smb.build_mapping_file", "compass.landice.tests.ismip6_forcing.atmosphere.create_mapfile_smb.create_atm_scrip", "compass.landice.tests.ismip6_forcing.atmosphere.process_smb.ProcessSMB", "compass.landice.tests.ismip6_forcing.atmosphere.process_smb.ProcessSMB.correct_smb_anomaly_for_climatology", "compass.landice.tests.ismip6_forcing.atmosphere.process_smb.ProcessSMB.remap_ismip6_smb_to_mali", "compass.landice.tests.ismip6_forcing.atmosphere.process_smb.ProcessSMB.rename_ismip6_smb_to_mali_vars", "compass.landice.tests.ismip6_forcing.atmosphere.process_smb.ProcessSMB.run", "compass.landice.tests.ismip6_forcing.atmosphere.process_smb.ProcessSMB.setup", "compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.ProcessSmbRacmo", "compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.ProcessSmbRacmo.correct_smb_anomaly_for_base_smb", "compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.ProcessSmbRacmo.remap_source_smb_to_mali", "compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.ProcessSmbRacmo.rename_source_smb_to_mali_vars", "compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.ProcessSmbRacmo.run", "compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.ProcessSmbRacmo.setup", "compass.landice.tests.ismip6_forcing.configure.configure", "compass.landice.tests.ismip6_forcing.create_mapfile.build_mapping_file", "compass.landice.tests.ismip6_forcing.ocean_basal.OceanBasal", "compass.landice.tests.ismip6_forcing.ocean_basal.OceanBasal.configure", "compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.ProcessBasalMelt", "compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.ProcessBasalMelt.combine_ismip6_inputfiles", "compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.ProcessBasalMelt.remap_ismip6_basal_melt_to_mali_vars", "compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.ProcessBasalMelt.rename_ismip6_basal_melt_to_mali_vars", "compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.ProcessBasalMelt.run", "compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.ProcessBasalMelt.setup", "compass.landice.tests.ismip6_forcing.ocean_thermal.OceanThermal", "compass.landice.tests.ismip6_forcing.ocean_thermal.OceanThermal.configure", "compass.landice.tests.ismip6_forcing.ocean_thermal.process_thermal_forcing.ProcessThermalForcing", "compass.landice.tests.ismip6_forcing.ocean_thermal.process_thermal_forcing.ProcessThermalForcing.remap_ismip6_thermal_forcing_to_mali_vars", "compass.landice.tests.ismip6_forcing.ocean_thermal.process_thermal_forcing.ProcessThermalForcing.rename_ismip6_thermal_forcing_to_mali_vars", "compass.landice.tests.ismip6_forcing.ocean_thermal.process_thermal_forcing.ProcessThermalForcing.run", "compass.landice.tests.ismip6_forcing.ocean_thermal.process_thermal_forcing.ProcessThermalForcing.setup", "compass.landice.tests.kangerlussuaq.Kangerlussuaq", "compass.landice.tests.kangerlussuaq.mesh.Mesh", "compass.landice.tests.kangerlussuaq.mesh.Mesh.run", "compass.landice.tests.kangerlussuaq.mesh_gen.MeshGen", "compass.landice.tests.kangerlussuaq.mesh_gen.MeshGen.run", "compass.landice.tests.koge_bugt_s.KogeBugtS", "compass.landice.tests.koge_bugt_s.mesh.Mesh", "compass.landice.tests.koge_bugt_s.mesh.Mesh.run", "compass.landice.tests.koge_bugt_s.mesh_gen.MeshGen", "compass.landice.tests.koge_bugt_s.mesh_gen.MeshGen.run", "compass.landice.tests.mismipplus.MISMIPplus", "compass.landice.tests.mismipplus.run_model.RunModel", "compass.landice.tests.mismipplus.run_model.RunModel.run", "compass.landice.tests.mismipplus.run_model.RunModel.setup", "compass.landice.tests.mismipplus.smoke_test.SmokeTest", "compass.landice.tests.mismipplus.smoke_test.SmokeTest.run", "compass.landice.tests.thwaites.Thwaites", "compass.landice.tests.thwaites.decomposition_test.DecompositionTest", "compass.landice.tests.thwaites.decomposition_test.DecompositionTest.run", "compass.landice.tests.thwaites.restart_test.RestartTest", "compass.landice.tests.thwaites.restart_test.RestartTest.run", "compass.landice.tests.thwaites.run_model.RunModel", "compass.landice.tests.thwaites.run_model.RunModel.run", "compass.landice.tests.thwaites.run_model.RunModel.setup", "Landice core", "calving_dt_convergence", "circular_shelf", "dome", "eismint2", "enthalpy_benchmark", "greenland", "humboldt", "hydro_radial", "Test groups", "ismip6_forcing", "kangerlussuaq", "koge_bugt_s", "mismipplus", "thwaites", "Anvil", "Chrysalis", "CompyMcNodeFace", "Cori", "Machines", "Perlmutter", "ocean", "Ocean framework", "compass.ocean.Ocean", "compass.ocean.haney.compute_haney_number", "compass.ocean.iceshelf.adjust_ssh", "compass.ocean.iceshelf.compute_land_ice_pressure_and_draft", "compass.ocean.mesh.cull.CullMeshStep", "compass.ocean.mesh.cull.CullMeshStep.run", "compass.ocean.mesh.cull.CullMeshStep.setup", "compass.ocean.mesh.cull.cull_mesh", "compass.ocean.mesh.floodplain.FloodplainMeshStep", "compass.ocean.mesh.floodplain.FloodplainMeshStep.run", "compass.ocean.particles.remap_particles", "compass.ocean.particles.write", "compass.ocean.plot.plot_initial_state", "compass.ocean.plot.plot_vertical_grid", "compass.ocean.tests.baroclinic_channel.BaroclinicChannel", "compass.ocean.tests.baroclinic_channel.configure", "compass.ocean.tests.baroclinic_channel.decomp_test.DecompTest", "compass.ocean.tests.baroclinic_channel.decomp_test.DecompTest.configure", "compass.ocean.tests.baroclinic_channel.decomp_test.DecompTest.run", "compass.ocean.tests.baroclinic_channel.default.Default", "compass.ocean.tests.baroclinic_channel.default.Default.configure", "compass.ocean.tests.baroclinic_channel.default.Default.run", "compass.ocean.tests.baroclinic_channel.forward.Forward", "compass.ocean.tests.baroclinic_channel.forward.Forward.run", "compass.ocean.tests.baroclinic_channel.forward.Forward.setup", "compass.ocean.tests.baroclinic_channel.initial_state.InitialState", "compass.ocean.tests.baroclinic_channel.initial_state.InitialState.run", "compass.ocean.tests.baroclinic_channel.initial_state.InitialState.setup", "compass.ocean.tests.baroclinic_channel.restart_test.RestartTest", "compass.ocean.tests.baroclinic_channel.restart_test.RestartTest.configure", "compass.ocean.tests.baroclinic_channel.restart_test.RestartTest.run", "compass.ocean.tests.baroclinic_channel.rpe_test.RpeTest", "compass.ocean.tests.baroclinic_channel.rpe_test.RpeTest.configure", "compass.ocean.tests.baroclinic_channel.rpe_test.RpeTest.run", "compass.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis", "compass.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.run", "compass.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.setup", "compass.ocean.tests.baroclinic_channel.threads_test.ThreadsTest", "compass.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.configure", "compass.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.run", "compass.ocean.tests.dam_break.DamBreak", "compass.ocean.tests.dam_break.default.Default", "compass.ocean.tests.dam_break.default.Default.configure", "compass.ocean.tests.dam_break.forward.Forward", "compass.ocean.tests.dam_break.forward.Forward.run", "compass.ocean.tests.dam_break.initial_state.InitialState", "compass.ocean.tests.dam_break.initial_state.InitialState.run", "compass.ocean.tests.dam_break.viz.Viz", "compass.ocean.tests.dam_break.viz.Viz.run", "compass.ocean.tests.drying_slope.DryingSlope", "compass.ocean.tests.drying_slope.default.Default", "compass.ocean.tests.drying_slope.default.Default.configure", "compass.ocean.tests.drying_slope.forward.Forward", "compass.ocean.tests.drying_slope.forward.Forward.run", "compass.ocean.tests.drying_slope.initial_state.InitialState", "compass.ocean.tests.drying_slope.initial_state.InitialState.run", "compass.ocean.tests.drying_slope.viz.Viz", "compass.ocean.tests.drying_slope.viz.Viz.run", "compass.ocean.tests.global_convergence.GlobalConvergence", "compass.ocean.tests.global_convergence.cosine_bell.CosineBell", "compass.ocean.tests.global_convergence.cosine_bell.CosineBell.configure", "compass.ocean.tests.global_convergence.cosine_bell.CosineBell.run", "compass.ocean.tests.global_convergence.cosine_bell.analysis.Analysis", "compass.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rmse", "compass.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.run", "compass.ocean.tests.global_convergence.cosine_bell.forward.Forward", "compass.ocean.tests.global_convergence.cosine_bell.forward.Forward.get_dt", "compass.ocean.tests.global_convergence.cosine_bell.forward.Forward.run", "compass.ocean.tests.global_convergence.cosine_bell.forward.Forward.setup", "compass.ocean.tests.global_convergence.cosine_bell.init.Init", "compass.ocean.tests.global_convergence.cosine_bell.init.Init.run", "compass.ocean.tests.global_ocean.GlobalOcean", "compass.ocean.tests.global_ocean.analysis_test.AnalysisTest", "compass.ocean.tests.global_ocean.analysis_test.AnalysisTest.configure", "compass.ocean.tests.global_ocean.analysis_test.AnalysisTest.run", "compass.ocean.tests.global_ocean.configure", "compass.ocean.tests.global_ocean.configure.configure_global_ocean", "compass.ocean.tests.global_ocean.daily_output_test.DailyOutputTest", "compass.ocean.tests.global_ocean.daily_output_test.DailyOutputTest.configure", "compass.ocean.tests.global_ocean.daily_output_test.DailyOutputTest.run", "compass.ocean.tests.global_ocean.decomp_test.DecompTest", "compass.ocean.tests.global_ocean.decomp_test.DecompTest.configure", "compass.ocean.tests.global_ocean.decomp_test.DecompTest.run", "compass.ocean.tests.global_ocean.dynamic_adjustment.DynamicAdjustment", "compass.ocean.tests.global_ocean.dynamic_adjustment.DynamicAdjustment.run", "compass.ocean.tests.global_ocean.files_for_e3sm.FilesForE3SM", "compass.ocean.tests.global_ocean.files_for_e3sm.FilesForE3SM.configure", "compass.ocean.tests.global_ocean.files_for_e3sm.FilesForE3SM.run", "compass.ocean.tests.global_ocean.files_for_e3sm.diagnostics_files.DiagnosticsFiles", "compass.ocean.tests.global_ocean.files_for_e3sm.diagnostics_files.DiagnosticsFiles.run", "compass.ocean.tests.global_ocean.files_for_e3sm.ocean_graph_partition.OceanGraphPartition", "compass.ocean.tests.global_ocean.files_for_e3sm.ocean_graph_partition.OceanGraphPartition.run", "compass.ocean.tests.global_ocean.files_for_e3sm.ocean_initial_condition.OceanInitialCondition", "compass.ocean.tests.global_ocean.files_for_e3sm.ocean_initial_condition.OceanInitialCondition.run", "compass.ocean.tests.global_ocean.files_for_e3sm.scrip.Scrip", "compass.ocean.tests.global_ocean.files_for_e3sm.scrip.Scrip.run", "compass.ocean.tests.global_ocean.files_for_e3sm.seaice_initial_condition.SeaiceInitialCondition", "compass.ocean.tests.global_ocean.files_for_e3sm.seaice_initial_condition.SeaiceInitialCondition.run", "compass.ocean.tests.global_ocean.forward.ForwardStep", "compass.ocean.tests.global_ocean.forward.ForwardStep.run", "compass.ocean.tests.global_ocean.forward.ForwardStep.setup", "compass.ocean.tests.global_ocean.forward.ForwardTestCase", "compass.ocean.tests.global_ocean.forward.ForwardTestCase.configure", "compass.ocean.tests.global_ocean.forward.ForwardTestCase.run", "compass.ocean.tests.global_ocean.init.Init", "compass.ocean.tests.global_ocean.init.Init.configure", "compass.ocean.tests.global_ocean.init.Init.run", "compass.ocean.tests.global_ocean.init.initial_state.InitialState", "compass.ocean.tests.global_ocean.init.initial_state.InitialState.run", "compass.ocean.tests.global_ocean.init.initial_state.InitialState.setup", "compass.ocean.tests.global_ocean.init.ssh_adjustment.SshAdjustment", "compass.ocean.tests.global_ocean.init.ssh_adjustment.SshAdjustment.run", "compass.ocean.tests.global_ocean.init.ssh_adjustment.SshAdjustment.setup", "compass.ocean.tests.global_ocean.mesh.Mesh", "compass.ocean.tests.global_ocean.mesh.Mesh.configure", "compass.ocean.tests.global_ocean.mesh.Mesh.run", "compass.ocean.tests.global_ocean.mesh.ec30to60.EC30to60BaseMesh", "compass.ocean.tests.global_ocean.mesh.ec30to60.EC30to60BaseMesh.build_cell_width_lat_lon", "compass.ocean.tests.global_ocean.mesh.ec30to60.dynamic_adjustment.EC30to60DynamicAdjustment", "compass.ocean.tests.global_ocean.mesh.ec30to60.dynamic_adjustment.EC30to60DynamicAdjustment.configure", "compass.ocean.tests.global_ocean.mesh.ec30to60.dynamic_adjustment.EC30to60DynamicAdjustment.run", "compass.ocean.tests.global_ocean.mesh.qu240.dynamic_adjustment.QU240DynamicAdjustment", "compass.ocean.tests.global_ocean.mesh.qu240.dynamic_adjustment.QU240DynamicAdjustment.configure", "compass.ocean.tests.global_ocean.mesh.qu240.dynamic_adjustment.QU240DynamicAdjustment.run", "compass.ocean.tests.global_ocean.mesh.so12to60.SO12to60BaseMesh", "compass.ocean.tests.global_ocean.mesh.so12to60.SO12to60BaseMesh.build_cell_width_lat_lon", "compass.ocean.tests.global_ocean.mesh.so12to60.dynamic_adjustment.SO12to60DynamicAdjustment", "compass.ocean.tests.global_ocean.mesh.so12to60.dynamic_adjustment.SO12to60DynamicAdjustment.configure", "compass.ocean.tests.global_ocean.mesh.so12to60.dynamic_adjustment.SO12to60DynamicAdjustment.run", "compass.ocean.tests.global_ocean.mesh.wc14.WC14BaseMesh", "compass.ocean.tests.global_ocean.mesh.wc14.WC14BaseMesh.build_cell_width_lat_lon", "compass.ocean.tests.global_ocean.mesh.wc14.dynamic_adjustment.WC14DynamicAdjustment", "compass.ocean.tests.global_ocean.mesh.wc14.dynamic_adjustment.WC14DynamicAdjustment.configure", "compass.ocean.tests.global_ocean.mesh.wc14.dynamic_adjustment.WC14DynamicAdjustment.run", "compass.ocean.tests.global_ocean.metadata.add_mesh_and_init_metadata", "compass.ocean.tests.global_ocean.metadata.get_e3sm_mesh_names", "compass.ocean.tests.global_ocean.performance_test.PerformanceTest", "compass.ocean.tests.global_ocean.performance_test.PerformanceTest.configure", "compass.ocean.tests.global_ocean.performance_test.PerformanceTest.run", "compass.ocean.tests.global_ocean.restart_test.RestartTest", "compass.ocean.tests.global_ocean.restart_test.RestartTest.configure", "compass.ocean.tests.global_ocean.restart_test.RestartTest.run", "compass.ocean.tests.global_ocean.threads_test.ThreadsTest", "compass.ocean.tests.global_ocean.threads_test.ThreadsTest.configure", "compass.ocean.tests.global_ocean.threads_test.ThreadsTest.run", "compass.ocean.tests.gotm.Gotm", "compass.ocean.tests.gotm.default.Default", "compass.ocean.tests.gotm.default.Default.validate", "compass.ocean.tests.gotm.default.analysis.Analysis", "compass.ocean.tests.gotm.default.analysis.Analysis.run", "compass.ocean.tests.gotm.default.forward.Forward", "compass.ocean.tests.gotm.default.forward.Forward.run", "compass.ocean.tests.gotm.default.init.Init", "compass.ocean.tests.gotm.default.init.Init.run", "compass.ocean.tests.hurricane.Hurricane", "compass.ocean.tests.hurricane.analysis.Analysis", "compass.ocean.tests.hurricane.analysis.Analysis.read_pointstats", "compass.ocean.tests.hurricane.analysis.Analysis.read_station_data", "compass.ocean.tests.hurricane.analysis.Analysis.read_station_file", "compass.ocean.tests.hurricane.analysis.Analysis.run", "compass.ocean.tests.hurricane.analysis.Analysis.setup", "compass.ocean.tests.hurricane.configure", "compass.ocean.tests.hurricane.forward.Forward", "compass.ocean.tests.hurricane.forward.Forward.configure", "compass.ocean.tests.hurricane.forward.Forward.run", "compass.ocean.tests.hurricane.forward.forward.ForwardStep", "compass.ocean.tests.hurricane.forward.forward.ForwardStep.run", "compass.ocean.tests.hurricane.forward.forward.ForwardStep.setup", "compass.ocean.tests.hurricane.init.Init", "compass.ocean.tests.hurricane.init.Init.configure", "compass.ocean.tests.hurricane.init.Init.run", "compass.ocean.tests.hurricane.init.create_pointstats_file.CreatePointstatsFile", "compass.ocean.tests.hurricane.init.create_pointstats_file.CreatePointstatsFile.create_pointstats_file", "compass.ocean.tests.hurricane.init.create_pointstats_file.CreatePointstatsFile.run", "compass.ocean.tests.hurricane.init.initial_state.InitialState", "compass.ocean.tests.hurricane.init.initial_state.InitialState.run", "compass.ocean.tests.hurricane.init.initial_state.InitialState.setup", "compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing", "compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing.interpolate_data_to_grid", "compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing.plot_interp_data", "compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing.run", "compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing.write_to_file", "compass.ocean.tests.hurricane.mesh.Mesh", "compass.ocean.tests.hurricane.mesh.Mesh.configure", "compass.ocean.tests.hurricane.mesh.Mesh.run", "compass.ocean.tests.hurricane.mesh.dequ120at30cr10rr2.DEQU120at30cr10rr2BaseMesh", "compass.ocean.tests.hurricane.mesh.dequ120at30cr10rr2.DEQU120at30cr10rr2BaseMesh.build_cell_width_lat_lon", "compass.ocean.tests.ice_shelf_2d.IceShelf2d", "compass.ocean.tests.ice_shelf_2d.configure", "compass.ocean.tests.ice_shelf_2d.default.Default", "compass.ocean.tests.ice_shelf_2d.default.Default.configure", "compass.ocean.tests.ice_shelf_2d.default.Default.run", "compass.ocean.tests.ice_shelf_2d.forward.Forward", "compass.ocean.tests.ice_shelf_2d.forward.Forward.run", "compass.ocean.tests.ice_shelf_2d.forward.Forward.setup", "compass.ocean.tests.ice_shelf_2d.initial_state.InitialState", "compass.ocean.tests.ice_shelf_2d.initial_state.InitialState.run", "compass.ocean.tests.ice_shelf_2d.restart_test.RestartTest", "compass.ocean.tests.ice_shelf_2d.restart_test.RestartTest.configure", "compass.ocean.tests.ice_shelf_2d.restart_test.RestartTest.run", "compass.ocean.tests.ice_shelf_2d.ssh_adjustment.SshAdjustment", "compass.ocean.tests.ice_shelf_2d.ssh_adjustment.SshAdjustment.run", "compass.ocean.tests.ice_shelf_2d.ssh_adjustment.SshAdjustment.setup", "compass.ocean.tests.ice_shelf_2d.viz.Viz", "compass.ocean.tests.ice_shelf_2d.viz.Viz.run", "compass.ocean.tests.internal_wave.InternalWave", "compass.ocean.tests.internal_wave.default.Default", "compass.ocean.tests.internal_wave.default.Default.validate", "compass.ocean.tests.internal_wave.forward.Forward", "compass.ocean.tests.internal_wave.forward.Forward.run", "compass.ocean.tests.internal_wave.initial_state.InitialState", "compass.ocean.tests.internal_wave.initial_state.InitialState.run", "compass.ocean.tests.internal_wave.rpe_test.RpeTest", "compass.ocean.tests.internal_wave.rpe_test.analysis.Analysis", "compass.ocean.tests.internal_wave.rpe_test.analysis.Analysis.run", "compass.ocean.tests.internal_wave.ten_day_test.TenDayTest", "compass.ocean.tests.internal_wave.ten_day_test.TenDayTest.validate", "compass.ocean.tests.internal_wave.viz.Viz", "compass.ocean.tests.internal_wave.viz.Viz.run", "compass.ocean.tests.isomip_plus.IsomipPlus", "compass.ocean.tests.isomip_plus.evap.update_evaporation_flux", "compass.ocean.tests.isomip_plus.forward.Forward", "compass.ocean.tests.isomip_plus.forward.Forward.run", "compass.ocean.tests.isomip_plus.forward.Forward.setup", "compass.ocean.tests.isomip_plus.geom.interpolate_ocean_mask", "compass.ocean.tests.isomip_plus.geom.process_input_geometry", "compass.ocean.tests.isomip_plus.initial_state.InitialState", "compass.ocean.tests.isomip_plus.initial_state.InitialState.run", "compass.ocean.tests.isomip_plus.isomip_plus_test.IsomipPlusTest", "compass.ocean.tests.isomip_plus.isomip_plus_test.IsomipPlusTest.configure", "compass.ocean.tests.isomip_plus.isomip_plus_test.IsomipPlusTest.run", "compass.ocean.tests.isomip_plus.misomip.Misomip", "compass.ocean.tests.isomip_plus.misomip.Misomip.run", "compass.ocean.tests.isomip_plus.ssh_adjustment.SshAdjustment", "compass.ocean.tests.isomip_plus.ssh_adjustment.SshAdjustment.run", "compass.ocean.tests.isomip_plus.ssh_adjustment.SshAdjustment.setup", "compass.ocean.tests.isomip_plus.streamfunction.Streamfunction", "compass.ocean.tests.isomip_plus.streamfunction.Streamfunction.run", "compass.ocean.tests.isomip_plus.viz.Viz", "compass.ocean.tests.isomip_plus.viz.Viz.run", "compass.ocean.tests.isomip_plus.viz.file_complete", "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter", "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.images_to_movies", "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_3d_field_top_bot_section", "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_barotropic_streamfunction", "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_horiz_series", "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_ice_shelf_boundary_variables", "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_layer_interfaces", "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_melt_rates", "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_overturning_streamfunction", "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_potential_density", "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_salinity", "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_temperature", "compass.ocean.tests.isomip_plus.viz.plot.TimeSeriesPlotter", "compass.ocean.tests.isomip_plus.viz.plot.TimeSeriesPlotter.plot_melt_time_series", "compass.ocean.tests.isomip_plus.viz.plot.TimeSeriesPlotter.plot_time_series", "compass.ocean.tests.merry_go_round.MerryGoRound", "compass.ocean.tests.merry_go_round.convergence_test.analysis.Analysis", "compass.ocean.tests.merry_go_round.convergence_test.analysis.Analysis.run", "compass.ocean.tests.merry_go_round.default.Default", "compass.ocean.tests.merry_go_round.default.Default.validate", "compass.ocean.tests.merry_go_round.forward.Forward", "compass.ocean.tests.merry_go_round.forward.Forward.run", "compass.ocean.tests.merry_go_round.initial_state.InitialState", "compass.ocean.tests.merry_go_round.initial_state.InitialState.run", "compass.ocean.tests.merry_go_round.viz.Viz", "compass.ocean.tests.merry_go_round.viz.Viz.run", "compass.ocean.tests.planar_convergence.PlanarConvergence", "compass.ocean.tests.planar_convergence.conv_init.ConvInit", "compass.ocean.tests.planar_convergence.conv_init.ConvInit.run", "compass.ocean.tests.planar_convergence.conv_test_case.ConvTestCase", "compass.ocean.tests.planar_convergence.conv_test_case.ConvTestCase.configure", "compass.ocean.tests.planar_convergence.conv_test_case.ConvTestCase.run", "compass.ocean.tests.planar_convergence.conv_test_case.ConvTestCase.update_cores", "compass.ocean.tests.planar_convergence.forward.Forward", "compass.ocean.tests.planar_convergence.forward.Forward.get_dt_duration", "compass.ocean.tests.planar_convergence.forward.Forward.run", "compass.ocean.tests.planar_convergence.forward.Forward.setup", "compass.ocean.tests.planar_convergence.horizontal_advection.HorizontalAdvection", "compass.ocean.tests.planar_convergence.horizontal_advection.HorizontalAdvection.configure", "compass.ocean.tests.planar_convergence.horizontal_advection.HorizontalAdvection.run", "compass.ocean.tests.planar_convergence.horizontal_advection.analysis.Analysis", "compass.ocean.tests.planar_convergence.horizontal_advection.analysis.Analysis.rmse", "compass.ocean.tests.planar_convergence.horizontal_advection.analysis.Analysis.run", "compass.ocean.tests.planar_convergence.horizontal_advection.init.Init", "compass.ocean.tests.planar_convergence.horizontal_advection.init.Init.run", "compass.ocean.tests.soma.Soma", "compass.ocean.tests.soma.analysis.Analysis", "compass.ocean.tests.soma.analysis.Analysis.run", "compass.ocean.tests.soma.forward.Forward", "compass.ocean.tests.soma.forward.Forward.run", "compass.ocean.tests.soma.initial_state.InitialState", "compass.ocean.tests.soma.initial_state.InitialState.run", "compass.ocean.tests.soma.soma_test_case.SomaTestCase", "compass.ocean.tests.soma.soma_test_case.SomaTestCase.validate", "compass.ocean.tests.sphere_transport.SphereTransport", "compass.ocean.tests.sphere_transport.correlated_tracers_2d.CorrelatedTracers2D", "compass.ocean.tests.sphere_transport.correlated_tracers_2d.CorrelatedTracers2D.configure", "compass.ocean.tests.sphere_transport.correlated_tracers_2d.CorrelatedTracers2D.run", "compass.ocean.tests.sphere_transport.correlated_tracers_2d.analysis.Analysis", "compass.ocean.tests.sphere_transport.correlated_tracers_2d.analysis.Analysis.run", "compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.Forward", "compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.Forward.get_timestep_str", "compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.Forward.run", "compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.Forward.setup", "compass.ocean.tests.sphere_transport.correlated_tracers_2d.init.Init", "compass.ocean.tests.sphere_transport.correlated_tracers_2d.init.Init.run", "compass.ocean.tests.sphere_transport.correlated_tracers_2d.mesh.Mesh", "compass.ocean.tests.sphere_transport.correlated_tracers_2d.mesh.Mesh.build_cell_width_lat_lon", "compass.ocean.tests.sphere_transport.correlated_tracers_2d.mesh.Mesh.run", "compass.ocean.tests.sphere_transport.divergent_2d.Divergent2D", "compass.ocean.tests.sphere_transport.divergent_2d.Divergent2D.configure", "compass.ocean.tests.sphere_transport.divergent_2d.Divergent2D.run", "compass.ocean.tests.sphere_transport.divergent_2d.analysis.Analysis", "compass.ocean.tests.sphere_transport.divergent_2d.analysis.Analysis.run", "compass.ocean.tests.sphere_transport.divergent_2d.forward.Forward", "compass.ocean.tests.sphere_transport.divergent_2d.forward.Forward.get_timestep_str", "compass.ocean.tests.sphere_transport.divergent_2d.forward.Forward.run", "compass.ocean.tests.sphere_transport.divergent_2d.forward.Forward.setup", "compass.ocean.tests.sphere_transport.divergent_2d.init.Init", "compass.ocean.tests.sphere_transport.divergent_2d.init.Init.run", "compass.ocean.tests.sphere_transport.divergent_2d.mesh.Mesh", "compass.ocean.tests.sphere_transport.divergent_2d.mesh.Mesh.build_cell_width_lat_lon", "compass.ocean.tests.sphere_transport.divergent_2d.mesh.Mesh.run", "compass.ocean.tests.sphere_transport.nondivergent_2d.Nondivergent2D", "compass.ocean.tests.sphere_transport.nondivergent_2d.Nondivergent2D.configure", "compass.ocean.tests.sphere_transport.nondivergent_2d.Nondivergent2D.run", "compass.ocean.tests.sphere_transport.nondivergent_2d.analysis.Analysis", "compass.ocean.tests.sphere_transport.nondivergent_2d.analysis.Analysis.run", "compass.ocean.tests.sphere_transport.nondivergent_2d.forward.Forward", "compass.ocean.tests.sphere_transport.nondivergent_2d.forward.Forward.get_timestep_str", "compass.ocean.tests.sphere_transport.nondivergent_2d.forward.Forward.run", "compass.ocean.tests.sphere_transport.nondivergent_2d.forward.Forward.setup", "compass.ocean.tests.sphere_transport.nondivergent_2d.init.Init", "compass.ocean.tests.sphere_transport.nondivergent_2d.init.Init.run", "compass.ocean.tests.sphere_transport.nondivergent_2d.mesh.Mesh", "compass.ocean.tests.sphere_transport.nondivergent_2d.mesh.Mesh.build_cell_width_lat_lon", "compass.ocean.tests.sphere_transport.nondivergent_2d.mesh.Mesh.run", "compass.ocean.tests.sphere_transport.process_output.compute_convergence_rates", "compass.ocean.tests.sphere_transport.process_output.compute_error_from_output_ncfile", "compass.ocean.tests.sphere_transport.process_output.make_convergence_arrays", "compass.ocean.tests.sphere_transport.process_output.plot_convergence", "compass.ocean.tests.sphere_transport.process_output.plot_filament", "compass.ocean.tests.sphere_transport.process_output.plot_over_and_undershoot_errors", "compass.ocean.tests.sphere_transport.process_output.plot_sol", "compass.ocean.tests.sphere_transport.process_output.print_data_as_csv", "compass.ocean.tests.sphere_transport.process_output.print_error_conv_table", "compass.ocean.tests.sphere_transport.process_output.read_ncl_rgb_file", "compass.ocean.tests.sphere_transport.rotation_2d.Rotation2D", "compass.ocean.tests.sphere_transport.rotation_2d.Rotation2D.configure", "compass.ocean.tests.sphere_transport.rotation_2d.Rotation2D.run", "compass.ocean.tests.sphere_transport.rotation_2d.analysis.Analysis", "compass.ocean.tests.sphere_transport.rotation_2d.analysis.Analysis.run", "compass.ocean.tests.sphere_transport.rotation_2d.forward.Forward", "compass.ocean.tests.sphere_transport.rotation_2d.forward.Forward.get_timestep_str", "compass.ocean.tests.sphere_transport.rotation_2d.forward.Forward.run", "compass.ocean.tests.sphere_transport.rotation_2d.forward.Forward.setup", "compass.ocean.tests.sphere_transport.rotation_2d.init.Init", "compass.ocean.tests.sphere_transport.rotation_2d.init.Init.run", "compass.ocean.tests.sphere_transport.rotation_2d.mesh.Mesh", "compass.ocean.tests.sphere_transport.rotation_2d.mesh.Mesh.build_cell_width_lat_lon", "compass.ocean.tests.sphere_transport.rotation_2d.mesh.Mesh.run", "compass.ocean.tests.tides.Tides", "compass.ocean.tests.tides.analysis.Analysis", "compass.ocean.tests.tides.analysis.Analysis.append_tpxo_data", "compass.ocean.tests.tides.analysis.Analysis.check_tpxo_data", "compass.ocean.tests.tides.analysis.Analysis.plot", "compass.ocean.tests.tides.analysis.Analysis.read_otps2_output", "compass.ocean.tests.tides.analysis.Analysis.run", "compass.ocean.tests.tides.analysis.Analysis.run_otps2", "compass.ocean.tests.tides.analysis.Analysis.setup", "compass.ocean.tests.tides.analysis.Analysis.setup_otps2", "compass.ocean.tests.tides.analysis.Analysis.write_coordinate_file", "compass.ocean.tests.tides.configure", "compass.ocean.tests.tides.forward.Forward", "compass.ocean.tests.tides.forward.Forward.configure", "compass.ocean.tests.tides.forward.Forward.run", "compass.ocean.tests.tides.forward.forward.ForwardStep", "compass.ocean.tests.tides.forward.forward.ForwardStep.run", "compass.ocean.tests.tides.forward.forward.ForwardStep.setup", "compass.ocean.tests.tides.init.Init", "compass.ocean.tests.tides.init.Init.configure", "compass.ocean.tests.tides.init.Init.run", "compass.ocean.tests.tides.init.initial_state.InitialState", "compass.ocean.tests.tides.init.initial_state.InitialState.run", "compass.ocean.tests.tides.init.initial_state.InitialState.setup", "compass.ocean.tests.tides.init.interpolate_wave_drag.InterpolateWaveDrag", "compass.ocean.tests.tides.init.interpolate_wave_drag.InterpolateWaveDrag.interpolate_data_to_grid", "compass.ocean.tests.tides.init.interpolate_wave_drag.InterpolateWaveDrag.plot_interp_data", "compass.ocean.tests.tides.init.interpolate_wave_drag.InterpolateWaveDrag.run", "compass.ocean.tests.tides.init.interpolate_wave_drag.InterpolateWaveDrag.write_to_file", "compass.ocean.tests.tides.init.remap_bathymetry.RemapBathymetry", "compass.ocean.tests.tides.init.remap_bathymetry.RemapBathymetry.run", "compass.ocean.tests.tides.mesh.Mesh", "compass.ocean.tests.tides.mesh.Mesh.configure", "compass.ocean.tests.tides.mesh.Mesh.run", "compass.ocean.tests.ziso.Ziso", "compass.ocean.tests.ziso.ZisoTestCase", "compass.ocean.tests.ziso.ZisoTestCase.configure", "compass.ocean.tests.ziso.ZisoTestCase.run", "compass.ocean.tests.ziso.configure", "compass.ocean.tests.ziso.forward.Forward", "compass.ocean.tests.ziso.forward.Forward.run", "compass.ocean.tests.ziso.forward.Forward.setup", "compass.ocean.tests.ziso.initial_state.InitialState", "compass.ocean.tests.ziso.initial_state.InitialState.run", "compass.ocean.tests.ziso.with_frazil.WithFrazil", "compass.ocean.tests.ziso.with_frazil.WithFrazil.configure", "compass.ocean.tests.ziso.with_frazil.WithFrazil.run", "compass.ocean.vertical.grid_1d.generate_1d_grid", "compass.ocean.vertical.grid_1d.write_1d_grid", "compass.ocean.vertical.init_vertical_coord", "compass.ocean.vertical.partial_cells.alter_bottom_depth", "compass.ocean.vertical.partial_cells.alter_ssh", "compass.ocean.vertical.zlevel.compute_min_max_level_cell", "compass.ocean.vertical.zlevel.compute_z_level_layer_thickness", "compass.ocean.vertical.zlevel.compute_z_level_resting_thickness", "compass.ocean.vertical.zlevel.init_z_level_vertical_coord", "compass.ocean.vertical.zstar.init_z_star_vertical_coord", "Ocean core", "baroclinic_channel", "dam_break", "drying_slope", "global_convergence", "global_ocean", "gotm", "hurricane", "ice_shelf_2d", "Test groups", "internal_wave", "isomip_plus", "merry_go_round", "planar_convergence", "soma", "sphere_transport", "spherical_harmonic_transform", "tides", "ziso", "Organization of Tests", "Overview", "Quick Start for Developers", "Troubleshooting", "Glossary", "compass", "Developer Tutorial: Adding a parameter study", "Developer Tutorial: Adding a new test group", "Developer Tutorial: Porting a legacy COMPASS test group", "Config Files", "Framework", "Landice core", "Test suites", "calving_dt_convergence", "circular_shelf", "dome", "eismint2", "enthalpy_benchmark", "greenland", "humboldt", "hydro_radial", "Test Groups", "ismip6_forcing", "kangerlussuaq", "koge_bugt_s", "mismipplus", "thwaites", "Anvil", "Chrysalis", "CompyMcNodeFace", "Cori", "Machines", "Perlmutter", "Ice shelf-cavities", "Framework", "Vertical coordinate", "Ocean core", "Test suites", "baroclinic_channel", "dam_break", "drying_slope", "global_convergence", "global_ocean", "gotm", "hurricane", "ice_shelf_2d", "Test groups", "internal_wave", "isomip_plus", "merry_go_round", "planar_convergence", "soma", "sphere_transport", "spherical_harmonic_transform", "tides", "ziso", "Quick Start for Users", "Test Cases", "Test Suites", "Code and Documentation Versions"], "terms": {"date": [0, 1, 3, 6, 34, 242, 684, 689, 705, 712, 745, 751], "2021": [0, 1], "07": 0, "30": [0, 1, 8, 45, 507, 689, 700, 702, 703, 718, 721, 733, 735, 743, 744, 745, 748, 751, 752, 756, 758], "contributor": [0, 1, 3], "xylar": [0, 1, 8, 710, 712, 734, 745], "asai": [0, 1, 712, 745, 751], "davi": [0, 1, 712, 745, 751], "we": [0, 1, 3, 7, 8, 63, 201, 211, 213, 243, 244, 245, 246, 248, 249, 250, 252, 255, 256, 259, 261, 264, 275, 685, 686, 687, 692, 694, 695, 696, 698, 702, 703, 704, 705, 708, 709, 710, 711, 712, 725, 732, 733, 734, 735, 736, 738, 745, 748, 749, 754, 755, 756, 759, 761], "would": [0, 1, 3, 6, 8, 11, 21, 23, 27, 65, 75, 82, 87, 99, 114, 135, 150, 164, 171, 229, 239, 287, 308, 317, 363, 375, 457, 465, 473, 498, 526, 703, 704, 705, 706, 710, 711, 717, 734, 736, 738, 745, 752, 759], "like": [0, 1, 3, 6, 7, 8, 264, 689, 702, 703, 704, 705, 706, 708, 709, 710, 711, 712, 734, 744, 745, 753, 756, 759, 760], "have": [0, 1, 3, 5, 6, 7, 8, 25, 35, 63, 82, 87, 99, 114, 150, 164, 171, 188, 229, 239, 243, 249, 259, 261, 264, 327, 348, 546, 564, 578, 592, 616, 686, 689, 691, 695, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 718, 720, 722, 725, 729, 730, 731, 732, 733, 734, 735, 736, 738, 741, 744, 745, 748, 749, 750, 751, 752, 753, 754, 758, 759, 760, 761], "wai": [0, 1, 6, 7, 11, 47, 52, 261, 264, 490, 695, 703, 704, 705, 706, 708, 709, 710, 711, 722, 734, 738, 745, 751], "download": [0, 1, 6, 11, 12, 22, 101, 116, 137, 152, 153, 173, 231, 241, 242, 245, 248, 255, 256, 271, 289, 292, 301, 365, 374, 377, 425, 432, 441, 459, 467, 488, 500, 612, 635, 644, 650, 668, 684, 698, 704, 705, 712, 714, 722, 725, 759, 761], "file": [0, 6, 7, 9, 11, 12, 14, 15, 16, 17, 20, 22, 23, 24, 25, 26, 28, 34, 37, 38, 42, 58, 59, 60, 61, 67, 70, 71, 72, 73, 74, 75, 79, 82, 87, 91, 93, 99, 101, 106, 108, 114, 116, 135, 137, 150, 152, 164, 171, 173, 174, 180, 184, 187, 188, 189, 190, 191, 195, 196, 197, 202, 203, 206, 207, 211, 214, 228, 229, 231, 234, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 255, 256, 261, 269, 272, 275, 276, 277, 278, 289, 292, 301, 337, 348, 350, 353, 355, 357, 359, 361, 363, 378, 383, 391, 396, 399, 400, 423, 436, 437, 442, 446, 459, 467, 485, 488, 490, 500, 505, 506, 508, 510, 547, 604, 609, 612, 628, 629, 630, 636, 651, 655, 668, 675, 684, 685, 686, 687, 689, 691, 692, 694, 695, 696, 698, 700, 702, 704, 705, 706, 707, 708, 709, 711, 715, 717, 718, 719, 720, 721, 722, 723, 725, 726, 727, 729, 733, 734, 735, 738, 740, 741, 744, 745, 748, 751, 753, 755, 756, 757, 759, 760], "an": [0, 3, 4, 6, 7, 8, 11, 12, 16, 23, 38, 43, 45, 46, 63, 74, 75, 112, 123, 178, 243, 245, 246, 248, 250, 255, 256, 261, 264, 276, 334, 337, 348, 350, 353, 355, 357, 359, 361, 383, 386, 391, 396, 399, 400, 401, 411, 489, 493, 496, 503, 508, 515, 516, 517, 533, 549, 558, 567, 570, 581, 584, 595, 598, 604, 605, 606, 609, 612, 619, 622, 685, 686, 687, 689, 690, 692, 694, 695, 696, 700, 701, 702, 705, 706, 707, 708, 711, 712, 715, 717, 718, 720, 722, 725, 728, 729, 734, 736, 738, 740, 743, 745, 750, 751, 752, 754, 755, 756, 757, 758, 759, 760, 761], "onlin": [0, 712, 745], "instead": [0, 1, 6, 8, 29, 69, 86, 96, 98, 105, 111, 113, 120, 126, 131, 142, 144, 149, 154, 161, 168, 170, 177, 179, 222, 227, 233, 236, 238, 257, 261, 272, 283, 286, 295, 298, 304, 342, 352, 380, 449, 456, 464, 641, 647, 660, 664, 673, 703, 704, 709, 710, 711, 715, 717, 722, 730, 754, 755, 756, 759, 761], "gener": [0, 1, 3, 4, 5, 7, 8, 14, 15, 17, 22, 50, 75, 101, 116, 137, 152, 173, 188, 207, 231, 241, 242, 249, 264, 276, 289, 292, 301, 410, 411, 413, 415, 417, 459, 467, 470, 488, 500, 668, 674, 684, 685, 686, 687, 688, 689, 690, 691, 692, 694, 695, 696, 698, 702, 703, 704, 709, 710, 711, 712, 715, 716, 717, 718, 721, 722, 724, 725, 726, 727, 728, 729, 734, 743, 744, 745, 746, 747, 753, 755, 756, 759], "them": [0, 1, 7, 8, 24, 61, 188, 247, 261, 688, 689, 690, 697, 703, 704, 705, 707, 709, 710, 711, 715, 732, 734, 740, 745, 747, 759, 760], "each": [0, 1, 3, 6, 7, 8, 20, 26, 39, 45, 46, 71, 243, 244, 245, 246, 247, 248, 249, 250, 252, 256, 261, 264, 266, 267, 276, 326, 337, 339, 344, 347, 348, 349, 368, 371, 383, 385, 388, 391, 393, 396, 398, 403, 406, 409, 429, 435, 495, 511, 519, 537, 538, 545, 563, 577, 591, 603, 604, 605, 609, 615, 676, 677, 678, 679, 680, 681, 682, 683, 685, 686, 687, 688, 689, 690, 692, 694, 695, 696, 697, 698, 699, 700, 702, 703, 704, 705, 707, 709, 710, 711, 712, 715, 716, 719, 721, 722, 725, 734, 738, 739, 741, 743, 744, 745, 747, 748, 750, 751, 752, 753, 754, 755, 756, 757, 759, 761], "time": [0, 1, 6, 7, 8, 11, 26, 82, 87, 99, 114, 150, 164, 171, 229, 239, 243, 245, 246, 247, 248, 250, 255, 256, 264, 276, 296, 321, 331, 337, 342, 345, 348, 363, 366, 383, 386, 391, 396, 401, 404, 407, 420, 442, 443, 444, 477, 486, 491, 493, 505, 506, 508, 510, 518, 522, 540, 566, 567, 580, 581, 594, 595, 604, 608, 609, 618, 619, 652, 685, 686, 687, 688, 689, 690, 691, 692, 694, 695, 696, 697, 699, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 716, 717, 718, 719, 720, 721, 722, 723, 725, 729, 733, 735, 736, 740, 741, 742, 745, 747, 748, 749, 750, 751, 752, 754, 758, 759, 761], "run": [0, 5, 7, 11, 14, 15, 16, 17, 20, 21, 25, 26, 27, 34, 42, 60, 61, 64, 65, 70, 71, 72, 73, 75, 80, 82, 85, 87, 95, 97, 99, 104, 110, 112, 114, 135, 141, 148, 150, 153, 156, 162, 164, 167, 169, 171, 176, 229, 232, 235, 237, 239, 242, 243, 244, 245, 246, 247, 248, 249, 250, 255, 256, 259, 261, 264, 267, 284, 287, 293, 299, 308, 317, 321, 327, 330, 337, 341, 342, 345, 348, 350, 363, 366, 375, 383, 386, 391, 396, 401, 404, 407, 415, 421, 427, 430, 433, 442, 454, 457, 462, 465, 473, 478, 486, 491, 493, 498, 526, 539, 540, 546, 554, 558, 564, 566, 578, 580, 592, 594, 605, 616, 618, 639, 642, 662, 666, 671, 684, 685, 686, 687, 688, 689, 690, 691, 692, 694, 695, 696, 697, 698, 699, 700, 701, 702, 704, 706, 707, 708, 709, 712, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 740, 741, 742, 743, 744, 745, 747, 748, 750, 752, 753, 754, 755, 756, 757, 758, 760, 761], "The": [0, 1, 3, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 18, 20, 22, 23, 24, 25, 26, 27, 31, 32, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 50, 51, 55, 59, 60, 61, 64, 65, 67, 69, 70, 71, 72, 73, 74, 75, 78, 80, 82, 85, 87, 89, 91, 95, 97, 99, 101, 102, 104, 106, 110, 112, 114, 116, 117, 119, 121, 123, 124, 127, 129, 132, 135, 137, 138, 141, 143, 145, 148, 150, 152, 153, 156, 158, 160, 162, 164, 167, 169, 171, 173, 174, 176, 178, 180, 184, 187, 189, 191, 195, 197, 202, 203, 205, 207, 211, 213, 214, 219, 221, 224, 226, 229, 231, 232, 235, 237, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 261, 264, 265, 267, 268, 269, 272, 273, 275, 277, 278, 280, 281, 284, 287, 289, 290, 292, 293, 296, 299, 301, 302, 306, 308, 310, 312, 315, 317, 319, 321, 324, 327, 328, 330, 334, 337, 341, 342, 345, 348, 350, 353, 355, 357, 359, 361, 363, 366, 369, 372, 375, 378, 381, 383, 386, 389, 391, 394, 396, 399, 400, 401, 404, 407, 411, 413, 415, 417, 420, 427, 430, 433, 436, 439, 442, 447, 450, 453, 454, 457, 459, 460, 462, 465, 467, 468, 471, 473, 475, 477, 478, 480, 482, 485, 486, 488, 489, 490, 491, 493, 496, 498, 500, 501, 503, 506, 508, 509, 510, 512, 513, 514, 518, 522, 524, 526, 528, 530, 533, 535, 539, 543, 546, 547, 549, 552, 554, 556, 558, 561, 564, 566, 570, 572, 575, 578, 580, 584, 586, 589, 592, 594, 598, 600, 606, 613, 616, 618, 622, 624, 628, 639, 642, 645, 648, 651, 656, 658, 662, 665, 666, 668, 669, 671, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 712, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760], "primari": [0, 3, 6, 8, 761], "motiv": 0, "thi": [0, 1, 3, 4, 6, 7, 8, 11, 12, 16, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 34, 36, 42, 43, 44, 47, 48, 50, 51, 52, 53, 55, 56, 60, 63, 65, 67, 69, 74, 75, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 188, 189, 193, 194, 195, 199, 200, 203, 205, 209, 210, 211, 213, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 269, 270, 272, 273, 274, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 327, 329, 330, 332, 334, 335, 336, 337, 338, 341, 342, 343, 345, 346, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 369, 370, 372, 373, 375, 376, 378, 379, 380, 381, 382, 383, 384, 386, 387, 389, 390, 391, 392, 394, 395, 396, 397, 399, 400, 401, 402, 404, 405, 407, 408, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 424, 427, 428, 430, 431, 433, 434, 436, 438, 439, 440, 442, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 504, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 539, 541, 543, 546, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 564, 565, 566, 567, 568, 570, 571, 572, 573, 574, 575, 578, 579, 580, 581, 582, 584, 585, 586, 587, 588, 589, 592, 593, 594, 595, 596, 598, 599, 600, 601, 602, 603, 604, 613, 616, 617, 618, 619, 620, 622, 623, 624, 625, 626, 627, 628, 633, 639, 640, 641, 642, 643, 645, 646, 647, 648, 649, 651, 654, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 684, 685, 686, 687, 688, 689, 691, 692, 694, 695, 696, 698, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 715, 716, 717, 718, 719, 720, 721, 722, 725, 726, 727, 728, 729, 733, 734, 735, 736, 738, 740, 742, 743, 744, 745, 747, 748, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 761], "i": [0, 3, 6, 7, 8, 11, 12, 20, 21, 26, 29, 34, 37, 38, 50, 51, 55, 60, 61, 65, 68, 69, 70, 74, 75, 82, 86, 87, 91, 96, 98, 99, 105, 106, 111, 113, 114, 120, 126, 131, 135, 142, 144, 149, 150, 154, 156, 161, 164, 168, 170, 171, 176, 177, 178, 179, 180, 187, 202, 222, 227, 229, 233, 236, 238, 239, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 268, 269, 273, 275, 276, 283, 286, 287, 295, 298, 304, 308, 317, 321, 337, 342, 348, 352, 363, 375, 380, 430, 444, 449, 450, 456, 457, 464, 465, 473, 486, 489, 490, 493, 498, 506, 510, 526, 554, 556, 558, 609, 641, 642, 647, 660, 664, 666, 669, 673, 676, 682, 683, 684, 685, 686, 687, 688, 689, 691, 692, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 715, 716, 717, 718, 719, 720, 721, 722, 723, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 740, 741, 742, 743, 744, 745, 746, 747, 748, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761], "option": [0, 6, 7, 11, 12, 14, 15, 17, 21, 23, 24, 25, 26, 27, 28, 34, 35, 36, 37, 38, 39, 43, 49, 50, 51, 54, 55, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 79, 82, 87, 91, 93, 99, 106, 108, 114, 123, 125, 130, 135, 150, 164, 171, 180, 182, 187, 191, 197, 201, 202, 207, 214, 229, 239, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 261, 264, 266, 269, 272, 273, 276, 277, 278, 280, 282, 285, 287, 294, 297, 303, 307, 308, 316, 317, 325, 333, 338, 341, 343, 346, 351, 363, 367, 370, 375, 379, 381, 384, 387, 389, 392, 394, 397, 399, 400, 402, 405, 408, 428, 430, 434, 448, 450, 453, 455, 457, 463, 465, 473, 486, 493, 494, 498, 508, 509, 510, 512, 513, 514, 518, 526, 536, 540, 542, 544, 554, 562, 569, 576, 583, 590, 597, 604, 614, 621, 640, 642, 646, 659, 663, 665, 666, 672, 674, 676, 677, 678, 682, 683, 684, 685, 686, 687, 688, 689, 690, 692, 694, 695, 696, 697, 698, 699, 700, 702, 706, 708, 709, 712, 715, 728, 738, 740, 759, 760], "avoid": [0, 1, 6, 703, 710, 711, 747, 757], "consum": [0, 8, 703, 709, 710, 740, 745, 761], "mesh": [0, 1, 6, 11, 59, 79, 80, 82, 85, 89, 91, 95, 97, 99, 102, 104, 106, 117, 119, 138, 143, 153, 156, 160, 162, 164, 174, 176, 184, 187, 191, 192, 196, 197, 198, 202, 203, 206, 207, 208, 211, 213, 214, 215, 221, 226, 228, 234, 243, 244, 245, 246, 247, 250, 252, 255, 266, 275, 276, 284, 290, 310, 319, 324, 327, 328, 330, 334, 337, 341, 342, 345, 348, 350, 353, 355, 359, 361, 363, 366, 369, 372, 399, 400, 401, 404, 407, 417, 427, 430, 433, 436, 439, 442, 443, 460, 475, 489, 491, 506, 518, 528, 533, 535, 539, 543, 546, 547, 556, 558, 561, 564, 566, 570, 575, 578, 580, 584, 589, 592, 594, 598, 603, 605, 606, 611, 613, 616, 618, 622, 628, 637, 639, 642, 645, 648, 651, 652, 656, 662, 669, 671, 676, 682, 683, 685, 686, 687, 690, 692, 694, 695, 696, 697, 698, 701, 702, 703, 704, 705, 707, 708, 711, 712, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 738, 740, 741, 742, 743, 744, 746, 748, 750, 751, 752, 753, 754, 755, 756, 758, 759, 761], "initi": [0, 7, 8, 11, 89, 102, 104, 117, 138, 143, 145, 153, 158, 160, 174, 176, 178, 196, 213, 219, 221, 224, 226, 244, 245, 246, 247, 248, 250, 255, 256, 264, 268, 272, 276, 277, 284, 290, 310, 319, 323, 334, 336, 337, 341, 342, 345, 348, 350, 353, 355, 357, 359, 361, 363, 366, 369, 372, 383, 386, 391, 396, 399, 400, 401, 404, 407, 411, 417, 427, 430, 433, 439, 460, 475, 485, 491, 528, 533, 552, 556, 558, 570, 584, 598, 604, 609, 622, 639, 642, 645, 648, 662, 669, 671, 685, 686, 687, 688, 689, 690, 692, 694, 695, 696, 697, 698, 699, 702, 703, 704, 706, 707, 708, 709, 711, 712, 715, 717, 718, 719, 720, 722, 723, 724, 728, 729, 736, 738, 740, 741, 742, 743, 744, 745, 748, 750, 751, 752, 754, 758, 760], "condit": [0, 11, 89, 102, 104, 117, 138, 143, 145, 153, 158, 160, 174, 176, 178, 213, 219, 221, 224, 226, 244, 245, 246, 247, 248, 250, 255, 256, 264, 276, 277, 284, 290, 310, 319, 323, 334, 336, 337, 341, 342, 345, 348, 350, 353, 355, 357, 359, 361, 363, 366, 369, 372, 383, 386, 391, 396, 399, 400, 401, 404, 407, 411, 417, 427, 430, 433, 439, 460, 475, 491, 528, 533, 556, 558, 570, 584, 598, 604, 622, 639, 642, 645, 648, 662, 669, 671, 685, 686, 687, 688, 689, 690, 692, 694, 695, 696, 697, 698, 699, 702, 703, 704, 707, 708, 709, 711, 712, 715, 717, 718, 719, 720, 721, 722, 723, 724, 728, 729, 736, 740, 741, 742, 743, 745, 747, 748, 750, 751, 752, 754, 757, 758, 760], "faster": [0, 8, 705, 722], "regress": [0, 1, 3, 323, 336, 685, 689, 694, 695, 696, 703, 707, 708, 710, 711, 715, 717, 719, 724, 740, 741, 745, 750, 751, 752, 754, 758, 759, 761], "mpa": [0, 6, 7, 9, 10, 11, 12, 26, 31, 42, 59, 62, 67, 70, 71, 72, 73, 79, 84, 94, 109, 134, 140, 146, 155, 166, 183, 218, 223, 228, 234, 242, 244, 245, 246, 247, 250, 257, 258, 259, 260, 261, 262, 264, 265, 266, 269, 273, 279, 287, 305, 308, 314, 317, 321, 323, 324, 330, 336, 337, 348, 350, 353, 359, 361, 363, 366, 369, 378, 383, 386, 391, 396, 399, 401, 410, 415, 419, 421, 430, 433, 442, 443, 447, 452, 457, 470, 473, 484, 486, 489, 506, 518, 521, 526, 532, 535, 539, 543, 551, 554, 560, 561, 566, 567, 575, 580, 581, 589, 594, 595, 604, 609, 613, 618, 619, 627, 628, 642, 645, 651, 652, 656, 658, 661, 666, 675, 684, 685, 686, 687, 688, 689, 690, 691, 692, 694, 695, 696, 697, 698, 699, 700, 701, 702, 707, 708, 709, 710, 711, 712, 714, 730, 731, 732, 733, 734, 735, 736, 738, 739, 740, 741, 742, 745, 746, 747, 750, 751, 755, 756, 757, 758, 760, 761], "compon": [0, 6, 242, 684, 689, 703, 704, 708, 710, 711, 712, 734, 736, 747], "forward": [0, 1, 8, 11, 14, 15, 17, 82, 87, 99, 104, 114, 135, 150, 153, 164, 171, 176, 229, 239, 242, 248, 252, 256, 264, 284, 296, 321, 337, 342, 345, 348, 383, 386, 391, 396, 401, 404, 407, 420, 442, 454, 477, 538, 558, 628, 662, 671, 684, 703, 704, 712, 717, 718, 719, 720, 721, 723, 729, 736, 741, 742, 743, 744, 748, 750, 751, 752, 753, 754, 756, 758], "mode": [0, 1, 6, 14, 15, 17, 686, 687, 689, 691, 698, 701, 703, 705, 710, 711, 712, 742, 745, 747, 751, 756, 757, 759], "potenti": [0, 276, 296, 477, 689, 695, 703, 710, 741, 745, 750, 751, 754, 757], "other": [0, 1, 3, 6, 7, 8, 11, 16, 36, 244, 257, 489, 688, 695, 697, 699, 703, 704, 705, 706, 707, 708, 709, 712, 715, 721, 724, 725, 729, 730, 740, 745, 753, 755, 760], "could": [0, 1, 243, 703, 704, 705, 709, 710, 711, 712, 728, 745, 751], "includ": [0, 1, 3, 6, 7, 8, 12, 22, 26, 37, 69, 101, 116, 137, 146, 152, 156, 162, 164, 173, 231, 241, 243, 247, 249, 252, 261, 269, 271, 272, 273, 289, 292, 301, 353, 359, 361, 365, 369, 372, 374, 377, 378, 432, 441, 450, 457, 459, 467, 486, 488, 490, 491, 493, 500, 508, 510, 554, 556, 558, 644, 650, 662, 666, 668, 669, 671, 685, 689, 692, 694, 695, 696, 698, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761], "result": [0, 1, 6, 8, 37, 46, 74, 75, 85, 95, 97, 110, 112, 141, 148, 156, 162, 167, 169, 235, 237, 243, 244, 245, 246, 247, 250, 261, 264, 281, 293, 299, 302, 312, 321, 345, 355, 357, 401, 404, 407, 413, 462, 478, 501, 506, 518, 530, 604, 612, 685, 688, 689, 694, 695, 697, 698, 699, 702, 703, 704, 705, 707, 709, 710, 711, 712, 715, 716, 717, 718, 719, 720, 721, 722, 723, 729, 740, 741, 744, 745, 746, 747, 750, 751, 752, 753, 754, 755, 758, 761], "baselin": [0, 1, 6, 8, 26, 70, 71, 73, 74, 75, 244, 245, 246, 248, 250, 255, 256, 337, 348, 412, 472, 481, 525, 685, 689, 692, 695, 696, 698, 702, 704, 707, 711, 715, 728, 740, 748, 751, 759], "valid": [0, 1, 6, 26, 82, 164, 243, 245, 246, 248, 250, 255, 337, 420, 506, 628, 676, 677, 678, 679, 680, 681, 682, 683, 685, 686, 687, 689, 690, 691, 694, 696, 698, 702, 704, 705, 708, 710, 718, 738, 741, 742, 743, 745, 746, 747, 748, 750, 752, 754, 757, 758, 759], "A": [0, 1, 6, 7, 8, 9, 11, 12, 15, 17, 23, 25, 26, 31, 36, 39, 43, 44, 47, 50, 51, 52, 55, 60, 62, 65, 67, 69, 70, 71, 72, 73, 74, 75, 79, 80, 82, 84, 85, 87, 89, 91, 93, 94, 95, 97, 99, 102, 106, 108, 109, 110, 112, 114, 117, 119, 121, 123, 132, 134, 135, 138, 140, 141, 145, 148, 150, 155, 156, 158, 162, 164, 166, 167, 169, 171, 174, 176, 180, 182, 183, 184, 187, 189, 195, 201, 202, 203, 205, 211, 213, 218, 219, 223, 224, 228, 229, 232, 234, 235, 237, 239, 244, 245, 246, 250, 264, 266, 267, 268, 269, 272, 273, 279, 281, 287, 290, 293, 299, 302, 305, 308, 310, 312, 314, 317, 319, 321, 323, 324, 327, 330, 334, 336, 337, 342, 345, 348, 350, 353, 355, 357, 359, 361, 363, 366, 369, 372, 375, 378, 381, 383, 386, 389, 391, 394, 396, 399, 401, 404, 407, 410, 413, 415, 417, 419, 420, 427, 430, 433, 436, 439, 442, 447, 450, 452, 457, 460, 462, 465, 468, 470, 473, 475, 478, 482, 484, 485, 486, 489, 490, 491, 496, 498, 501, 503, 506, 508, 510, 518, 521, 522, 526, 528, 530, 532, 533, 535, 539, 543, 546, 549, 551, 552, 554, 556, 560, 561, 564, 566, 570, 572, 575, 578, 580, 584, 586, 589, 592, 594, 598, 600, 606, 609, 613, 616, 618, 622, 624, 627, 628, 639, 642, 645, 648, 651, 656, 658, 661, 666, 669, 674, 675, 676, 677, 678, 679, 680, 682, 683, 685, 686, 689, 692, 694, 695, 696, 698, 702, 703, 704, 705, 707, 708, 709, 710, 711, 715, 719, 734, 740, 744, 745, 747, 751, 754, 755, 757], "challeng": [0, 1, 3], "capabl": [0, 1, 3, 261, 264, 704, 734, 756, 758, 759], "provid": [0, 1, 3, 4, 6, 8, 12, 74, 75, 242, 244, 245, 246, 248, 250, 256, 264, 337, 612, 684, 685, 687, 689, 691, 692, 694, 695, 696, 698, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 715, 717, 725, 728, 729, 734, 736, 745, 748, 751, 754, 755, 758, 759], "easi": [0, 7, 12, 704, 711], "both": [0, 1, 6, 7, 8, 75, 252, 264, 685, 687, 689, 691, 692, 695, 700, 703, 705, 708, 709, 710, 711, 712, 717, 718, 720, 723, 725, 736, 740, 745, 747, 748, 751, 752, 753, 754, 758], "develop": [0, 6, 7, 8, 242, 261, 703, 704, 706, 712, 734, 745, 759], "user": [0, 6, 7, 8, 11, 25, 26, 27, 36, 67, 75, 146, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 261, 685, 686, 687, 689, 691, 692, 694, 695, 696, 698, 699, 700, 701, 702, 703, 706, 707, 709, 710, 711, 714, 718, 725, 733, 734, 735, 739, 744, 745, 751, 753, 755, 756], "control": [0, 1, 244, 245, 246, 264, 485, 703, 708, 712, 725, 744, 746, 751, 753, 754, 755, 758, 759], "which": [0, 1, 3, 6, 7, 8, 12, 17, 31, 70, 71, 73, 75, 196, 245, 246, 248, 250, 256, 276, 281, 293, 302, 321, 454, 462, 489, 490, 685, 686, 687, 689, 690, 691, 695, 703, 704, 705, 709, 710, 711, 712, 715, 717, 718, 720, 721, 722, 723, 725, 726, 727, 729, 734, 736, 738, 740, 741, 743, 744, 745, 747, 748, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761], "case": [0, 6, 7, 8, 9, 11, 16, 17, 21, 22, 26, 27, 28, 30, 31, 32, 34, 35, 39, 43, 48, 50, 53, 55, 60, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 112, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 145, 147, 148, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 169, 171, 172, 173, 174, 175, 176, 178, 180, 181, 182, 184, 185, 187, 189, 193, 194, 195, 199, 200, 201, 202, 203, 204, 205, 209, 210, 211, 212, 213, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 261, 264, 265, 269, 270, 271, 273, 274, 279, 280, 281, 282, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 327, 329, 330, 334, 337, 338, 341, 342, 343, 345, 346, 348, 350, 351, 353, 355, 357, 359, 361, 363, 365, 366, 367, 369, 370, 372, 374, 375, 377, 378, 379, 381, 383, 384, 386, 387, 389, 391, 392, 394, 396, 397, 399, 400, 401, 402, 404, 405, 407, 408, 410, 411, 413, 414, 415, 416, 417, 418, 420, 424, 425, 427, 428, 430, 432, 433, 434, 436, 439, 441, 442, 445, 447, 448, 450, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 486, 487, 488, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 539, 543, 544, 546, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 564, 565, 566, 570, 572, 574, 575, 576, 578, 579, 580, 584, 586, 588, 589, 590, 592, 593, 594, 598, 600, 602, 604, 605, 606, 609, 610, 611, 613, 614, 616, 617, 618, 622, 624, 626, 628, 633, 635, 639, 640, 642, 644, 645, 646, 648, 650, 651, 654, 656, 657, 658, 659, 661, 662, 663, 665, 666, 667, 668, 669, 670, 671, 672, 674, 684, 685, 686, 687, 688, 690, 691, 692, 694, 695, 696, 697, 698, 699, 700, 701, 702, 705, 707, 708, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 738, 739, 740, 741, 742, 743, 744, 746, 748, 749, 750, 751, 752, 753, 754, 755, 756, 758, 761], "suit": [0, 1, 3, 7, 11, 26, 35, 39, 68, 69, 71, 261, 689, 705, 707, 708, 709, 710, 711, 712, 714, 722, 730, 731, 732, 733, 735, 739, 745, 749], "ar": [0, 1, 3, 6, 7, 8, 9, 11, 12, 20, 21, 23, 26, 31, 36, 63, 65, 69, 71, 75, 82, 85, 87, 95, 97, 99, 110, 112, 114, 135, 141, 148, 150, 156, 162, 164, 167, 169, 171, 211, 213, 229, 235, 237, 239, 242, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 261, 264, 267, 287, 308, 317, 345, 363, 375, 404, 407, 457, 465, 473, 485, 498, 506, 509, 526, 552, 558, 603, 605, 610, 662, 666, 676, 679, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 714, 715, 716, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761], "last": [0, 1, 3, 705, 715, 744, 759], "modifi": [0, 3, 8, 24, 28, 61, 125, 130, 280, 282, 285, 294, 297, 303, 307, 316, 338, 341, 343, 346, 351, 367, 370, 379, 384, 387, 392, 397, 402, 405, 408, 428, 434, 448, 453, 455, 463, 494, 640, 646, 659, 663, 665, 672, 687, 689, 695, 696, 703, 708, 709, 710, 711, 712, 718, 736, 745, 747, 748, 751, 757, 759], "defin": [0, 1, 7, 8, 11, 26, 50, 70, 71, 73, 146, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 256, 261, 264, 272, 275, 684, 685, 686, 687, 688, 689, 690, 691, 692, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 707, 708, 712, 717, 718, 720, 723, 725, 734, 738, 741, 742, 743, 744, 745, 747, 748, 750, 751, 752, 754, 755, 757, 758, 760, 761], "its": [0, 1, 6, 7, 8, 11, 28, 72, 191, 197, 214, 247, 252, 493, 609, 689, 696, 697, 703, 704, 705, 707, 709, 710, 711, 712, 717, 718, 719, 723, 725, 730, 744, 745, 751, 753, 759, 760], "attribut": [0, 1, 8, 20, 246, 248, 250, 256, 264, 689, 695, 709, 710, 711], "For": [0, 1, 3, 4, 6, 7, 8, 63, 71, 245, 246, 248, 250, 256, 257, 687, 689, 695, 703, 704, 705, 707, 709, 710, 711, 712, 714, 715, 719, 725, 730, 739, 743, 744, 745, 749, 751, 752, 754, 755, 756, 759, 760], "see": [0, 1, 6, 7, 8, 243, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 605, 685, 688, 689, 690, 692, 695, 697, 698, 699, 700, 702, 703, 705, 706, 709, 710, 711, 712, 714, 716, 718, 725, 728, 734, 739, 740, 744, 745, 748, 751, 753, 755, 758, 759, 760, 761], "mechan": [0, 1, 703], "comput": [0, 1, 7, 63, 261, 264, 266, 268, 328, 501, 506, 547, 603, 604, 611, 679, 680, 681, 685, 688, 689, 692, 694, 695, 696, 697, 698, 701, 702, 703, 705, 710, 722, 726, 727, 728, 731, 733, 734, 735, 736, 745, 751, 756, 757, 759], "There": [0, 1, 6, 248, 255, 256, 264, 676, 682, 683, 685, 689, 695, 703, 704, 705, 706, 710, 711, 712, 714, 716, 717, 718, 721, 722, 725, 726, 727, 728, 729, 735, 750, 751], "need": [0, 1, 3, 5, 6, 7, 8, 27, 36, 51, 63, 242, 273, 350, 353, 489, 506, 518, 684, 689, 695, 698, 703, 704, 705, 706, 708, 709, 710, 711, 712, 720, 725, 728, 730, 733, 734, 735, 736, 738, 740, 744, 745, 751, 753, 755, 756, 759, 761], "practic": [0, 1, 703, 704, 710, 736], "should": [0, 1, 3, 6, 7, 8, 12, 22, 26, 28, 37, 51, 60, 70, 71, 75, 101, 116, 137, 152, 173, 231, 241, 242, 255, 257, 258, 259, 260, 261, 262, 264, 272, 289, 292, 301, 459, 467, 488, 500, 533, 668, 684, 689, 695, 703, 705, 706, 709, 710, 711, 712, 715, 716, 722, 725, 740, 741, 745, 748, 750, 751, 759], "overli": [0, 7, 264, 268, 736, 745, 748, 751], "tediou": [0, 1], "manual": [0, 1, 6, 8, 26, 27, 243, 244, 245, 246, 250, 703, 709, 725, 748, 751, 760], "e": [0, 1, 7, 8, 11, 28, 31, 42, 252, 261, 264, 506, 606, 689, 703, 704, 705, 706, 707, 709, 710, 711, 712, 719, 725, 733, 735, 738, 741, 743, 745, 748, 750, 751, 752, 753, 754, 758, 759, 760, 761], "g": [0, 1, 7, 8, 11, 28, 31, 42, 114, 123, 246, 261, 606, 689, 703, 704, 705, 706, 707, 709, 710, 711, 712, 719, 725, 738, 741, 743, 745, 748, 750, 751, 752, 753, 758, 759, 761], "set": [0, 1, 5, 6, 7, 8, 11, 12, 14, 15, 17, 22, 35, 51, 66, 67, 70, 71, 73, 74, 75, 82, 99, 101, 116, 137, 152, 164, 173, 174, 194, 200, 210, 217, 231, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 257, 258, 259, 260, 261, 262, 264, 271, 289, 292, 301, 323, 325, 333, 336, 365, 374, 377, 432, 441, 459, 467, 488, 500, 505, 506, 536, 542, 544, 562, 569, 576, 583, 590, 597, 603, 605, 614, 621, 644, 650, 668, 676, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 694, 695, 696, 697, 698, 699, 701, 702, 703, 704, 706, 707, 708, 712, 716, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 729, 730, 731, 732, 733, 734, 735, 740, 741, 743, 744, 745, 746, 747, 748, 750, 751, 752, 753, 754, 755, 756, 757, 761], "flag": [0, 1, 6, 703, 704, 706, 707, 710, 711, 712, 714, 739, 741, 750, 759], "document": [0, 4, 8, 612, 689, 703, 704, 708, 712, 745, 750], "process": [0, 1, 3, 8, 65, 183, 184, 189, 195, 203, 205, 211, 213, 247, 249, 252, 264, 355, 357, 407, 490, 689, 703, 704, 705, 707, 708, 709, 710, 711, 725, 745, 747, 748], "creat": [0, 6, 8, 9, 11, 12, 20, 26, 31, 38, 43, 44, 50, 51, 55, 70, 71, 72, 73, 80, 82, 85, 87, 89, 91, 95, 97, 99, 102, 104, 106, 110, 112, 114, 117, 119, 121, 124, 127, 129, 132, 135, 138, 141, 143, 145, 148, 150, 153, 156, 158, 160, 162, 164, 167, 169, 171, 174, 176, 178, 180, 183, 184, 188, 189, 195, 203, 205, 211, 213, 219, 221, 224, 226, 229, 232, 235, 237, 239, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 256, 261, 264, 269, 272, 273, 277, 281, 284, 287, 290, 293, 296, 299, 302, 306, 308, 310, 312, 315, 317, 319, 321, 324, 327, 330, 334, 337, 342, 345, 348, 350, 353, 355, 357, 359, 361, 363, 366, 369, 372, 375, 378, 381, 382, 383, 386, 389, 390, 391, 394, 395, 396, 401, 404, 407, 411, 413, 415, 417, 420, 427, 430, 433, 436, 437, 439, 442, 447, 450, 451, 454, 457, 460, 462, 465, 468, 471, 473, 475, 477, 478, 480, 482, 486, 491, 493, 496, 498, 501, 503, 506, 518, 522, 524, 526, 528, 530, 533, 535, 539, 543, 546, 549, 552, 554, 556, 558, 561, 564, 566, 570, 572, 573, 575, 578, 580, 584, 586, 587, 589, 592, 594, 598, 600, 601, 606, 613, 616, 618, 622, 624, 625, 628, 639, 642, 645, 648, 651, 656, 658, 662, 666, 669, 671, 676, 682, 683, 687, 688, 689, 690, 691, 692, 695, 698, 703, 704, 706, 707, 708, 709, 711, 712, 715, 721, 722, 725, 726, 727, 729, 730, 731, 732, 733, 734, 735, 740, 744, 745, 751, 753, 755, 756, 757, 759], "upload": [0, 745], "give": [0, 6, 8, 703, 704, 705, 709, 710, 711, 712, 719, 755, 756, 759], "stamp": [0, 1, 6], "given": [0, 1, 6, 7, 8, 9, 25, 37, 45, 63, 65, 69, 74, 75, 243, 296, 328, 399, 400, 422, 477, 508, 510, 533, 547, 603, 604, 679, 685, 687, 689, 694, 699, 703, 706, 709, 710, 712, 718, 720, 721, 723, 725, 729, 736, 741, 745, 747, 750, 751, 758, 759, 761], "git": [0, 3, 8, 67, 242, 684, 705, 710, 711, 712, 759], "hash": 0, "releas": [0, 1, 704, 708, 714, 734, 735, 739, 759], "know": [0, 1, 8, 703, 704, 705, 710, 711, 736, 745], "older": [0, 6], "retain": [0, 6, 695, 711, 712, 745, 757], "so": [0, 1, 6, 7, 8, 24, 61, 77, 156, 242, 261, 269, 676, 682, 683, 684, 686, 689, 692, 695, 702, 703, 704, 705, 707, 709, 710, 711, 712, 713, 734, 735, 736, 738, 740, 744, 745, 751, 753, 755, 758, 759, 761], "can": [0, 3, 5, 6, 7, 8, 11, 12, 21, 26, 30, 47, 50, 52, 70, 71, 73, 75, 81, 157, 163, 242, 243, 244, 245, 247, 248, 250, 252, 256, 257, 258, 259, 260, 261, 262, 264, 268, 269, 348, 489, 559, 684, 689, 695, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 715, 716, 718, 719, 721, 722, 725, 729, 733, 734, 735, 736, 740, 744, 745, 747, 748, 751, 753, 754, 755, 756, 758, 759, 760, 761], "still": [0, 1, 711, 722, 751], "It": [0, 1, 3, 6, 11, 20, 243, 244, 245, 246, 248, 249, 250, 256, 264, 685, 686, 687, 689, 690, 691, 692, 694, 696, 703, 704, 705, 707, 709, 710, 711, 712, 722, 725, 728, 734, 745, 754, 755], "mai": [0, 1, 6, 7, 8, 16, 20, 25, 242, 247, 261, 272, 684, 687, 689, 695, 703, 705, 706, 707, 710, 711, 712, 715, 725, 728, 729, 733, 735, 745, 747, 751, 755, 757, 759, 760], "worthwhil": 0, "deprec": [0, 29, 86, 96, 98, 105, 111, 113, 120, 126, 131, 142, 144, 149, 154, 161, 168, 170, 177, 179, 222, 227, 233, 236, 238, 283, 286, 295, 298, 304, 352, 380, 449, 456, 464, 641, 647, 660, 664, 673, 703], "delet": [0, 6, 8, 704, 705, 706, 759], "old": [0, 6, 707, 709], "do": [0, 1, 3, 6, 8, 188, 249, 689, 703, 705, 706, 707, 708, 709, 710, 711, 721, 722, 725, 726, 727, 729, 734, 740, 745, 751, 754, 759], "abil": [0, 7, 755], "up": [0, 1, 5, 6, 7, 8, 11, 14, 15, 17, 22, 26, 35, 56, 67, 70, 71, 72, 73, 74, 75, 101, 116, 137, 152, 173, 174, 176, 194, 200, 210, 217, 231, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 257, 258, 259, 260, 261, 262, 264, 271, 289, 292, 301, 323, 336, 365, 374, 377, 432, 441, 459, 467, 488, 500, 644, 650, 668, 684, 685, 686, 687, 688, 689, 690, 691, 692, 694, 695, 696, 697, 698, 699, 701, 702, 703, 704, 706, 707, 708, 709, 712, 718, 722, 723, 724, 725, 730, 731, 732, 733, 735, 740, 744, 745, 747, 753, 755, 756, 757, 760], "same": [0, 1, 6, 7, 8, 12, 26, 74, 75, 80, 249, 505, 689, 695, 699, 703, 704, 705, 707, 709, 710, 711, 712, 715, 718, 719, 720, 721, 723, 725, 729, 730, 731, 732, 733, 734, 735, 736, 738, 740, 741, 745, 750, 751, 752, 753, 759, 760, 761], "within": [0, 6, 7, 8, 11, 12, 16, 21, 26, 72, 73, 74, 75, 91, 106, 180, 244, 247, 275, 369, 685, 689, 690, 692, 699, 703, 705, 707, 709, 710, 711, 712, 721, 722, 725, 726, 727, 729, 730, 731, 732, 733, 734, 735, 745, 746, 748, 751, 759], "If": [0, 1, 3, 6, 7, 8, 11, 12, 21, 27, 28, 38, 61, 63, 65, 66, 70, 74, 75, 82, 87, 99, 114, 135, 150, 164, 171, 229, 239, 257, 258, 259, 260, 261, 262, 287, 308, 317, 363, 375, 457, 465, 473, 493, 498, 526, 685, 687, 689, 692, 694, 695, 696, 698, 702, 703, 704, 705, 706, 707, 709, 710, 711, 712, 733, 734, 735, 738, 744, 753, 755, 756, 759], "place": [0, 1, 6, 8, 689, 703, 710, 711, 734, 744, 753, 754, 755], "import": [0, 1, 8, 252, 703, 704, 705, 707, 709, 710, 711, 736], "constraint": [0, 735, 759], "solut": [0, 1, 8, 174, 178, 250, 259, 321, 522, 609, 610, 687, 688, 690, 697, 699, 706, 709, 711, 717, 718, 721, 723, 729, 742, 743, 746, 754, 755, 757], "support": [0, 6, 8, 11, 245, 246, 248, 250, 256, 264, 676, 682, 683, 685, 687, 688, 698, 702, 703, 704, 708, 709, 710, 711, 712, 715, 716, 722, 730, 731, 732, 733, 735, 736, 738, 741, 745, 747, 748, 751, 757, 760], "databas": [0, 1, 6, 8, 9, 11, 12, 245, 628, 698, 701, 703, 725, 734, 757], "input": [0, 6, 8, 11, 12, 13, 16, 22, 59, 91, 101, 106, 116, 137, 152, 173, 180, 188, 191, 192, 197, 198, 206, 207, 208, 214, 215, 231, 241, 243, 244, 245, 246, 247, 248, 250, 255, 256, 269, 275, 289, 292, 301, 436, 459, 467, 488, 490, 500, 506, 567, 581, 595, 619, 636, 668, 685, 686, 687, 689, 691, 692, 694, 695, 696, 709, 710, 711, 715, 725, 747], "data": [0, 6, 8, 12, 183, 184, 188, 189, 191, 192, 195, 196, 197, 198, 203, 205, 207, 208, 211, 213, 214, 215, 252, 255, 261, 266, 269, 312, 321, 420, 421, 422, 425, 442, 443, 444, 446, 505, 506, 508, 510, 605, 610, 629, 630, 635, 651, 652, 653, 655, 656, 676, 682, 683, 686, 687, 689, 691, 695, 701, 703, 705, 708, 709, 712, 715, 725, 728, 729, 734, 742, 745, 747, 755, 757, 759, 760, 761], "e3sm": [0, 1, 6, 8, 11, 342, 350, 353, 355, 357, 359, 361, 400, 684, 689, 703, 705, 708, 710, 711, 712, 730, 731, 732, 733, 734, 735, 736, 738, 740, 745], "lcrc": [0, 1, 6, 8, 34, 245, 703, 704, 712, 730, 731, 734, 759], "server": [0, 1, 6, 8, 12, 34, 242, 245, 255, 684, 703, 704, 712, 733, 735, 745], "store": [0, 1, 8, 28, 689, 695, 703, 709, 710, 711, 745, 759], "new": [0, 1, 3, 6, 9, 11, 15, 23, 26, 31, 36, 38, 43, 50, 55, 82, 87, 99, 114, 135, 150, 164, 171, 229, 239, 264, 269, 273, 275, 287, 308, 317, 330, 355, 357, 359, 361, 363, 381, 389, 394, 413, 415, 430, 450, 457, 473, 485, 486, 526, 539, 554, 566, 572, 580, 586, 594, 600, 618, 624, 642, 666, 676, 682, 683, 695, 703, 704, 705, 706, 707, 708, 728, 729, 745, 751, 759], "compass_cach": [0, 6, 8, 9, 703], "core": [0, 6, 7, 8, 9, 10, 11, 12, 14, 15, 17, 18, 20, 21, 23, 24, 25, 26, 31, 41, 62, 64, 65, 67, 72, 73, 77, 78, 79, 84, 85, 93, 94, 95, 104, 108, 109, 110, 123, 134, 140, 141, 153, 155, 156, 166, 167, 176, 182, 183, 187, 202, 218, 223, 228, 234, 235, 244, 245, 246, 248, 249, 250, 256, 264, 265, 272, 276, 279, 281, 284, 305, 314, 323, 336, 345, 410, 419, 452, 470, 484, 521, 532, 538, 551, 560, 627, 661, 685, 686, 687, 689, 692, 694, 696, 698, 702, 707, 708, 709, 710, 711, 712, 713, 715, 719, 721, 722, 723, 725, 729, 730, 731, 732, 733, 734, 735, 737, 740, 745, 747, 756, 757, 759, 760, 761], "": [0, 1, 6, 7, 8, 11, 12, 16, 26, 28, 34, 56, 68, 72, 73, 75, 244, 245, 246, 247, 249, 250, 252, 253, 254, 685, 686, 687, 688, 689, 690, 691, 692, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 709, 710, 711, 712, 714, 718, 725, 727, 730, 731, 732, 733, 734, 735, 739, 744, 745, 747, 751, 753, 755, 756, 758, 759], "space": [0, 1, 6, 7, 8, 703, 705, 711, 721, 722, 726, 727, 729, 734, 754, 759], "appropri": [0, 1, 3, 6, 63, 242, 243, 244, 261, 533, 684, 685, 686, 687, 689, 692, 694, 695, 696, 698, 702, 703, 705, 708, 710, 711, 712, 715, 717, 730, 731, 732, 733, 734, 735, 740, 745, 751, 754, 759], "ad": [0, 1, 3, 6, 7, 8, 12, 22, 28, 36, 75, 101, 116, 137, 152, 173, 231, 241, 244, 245, 250, 264, 289, 292, 301, 459, 467, 488, 500, 668, 676, 682, 683, 685, 689, 692, 694, 705, 708, 728, 729, 730, 731, 732, 733, 735, 737, 745, 751, 757, 759], "where": [0, 1, 6, 7, 8, 11, 26, 35, 37, 67, 70, 71, 73, 242, 264, 268, 506, 518, 676, 679, 682, 683, 684, 689, 692, 695, 703, 705, 707, 708, 709, 710, 711, 712, 718, 719, 721, 723, 725, 729, 730, 731, 732, 733, 734, 735, 736, 738, 744, 745, 747, 748, 751, 757, 758, 759, 761], "target": [0, 1, 8, 12, 38, 245, 261, 689, 703, 709, 710, 711, 745], "local": [0, 1, 6, 8, 11, 12, 26, 242, 252, 684, 703, 705, 706, 712, 725, 733, 734, 735, 738, 745, 756], "futur": [0, 1, 20, 264, 689, 702, 703, 704, 705, 707, 708, 710, 728, 729, 736, 745, 747, 757, 760], "filenam": [0, 1, 12, 16, 75, 93, 108, 245, 446, 505, 689, 703, 705, 709, 710, 711], "correspond": [0, 1, 3, 7, 8, 74, 75, 184, 203, 211, 242, 275, 603, 609, 684, 689, 692, 695, 703, 705, 725, 746], "via": [0, 1, 3, 6, 703, 711, 734, 736], "python": [0, 2, 6, 7, 8, 20, 28, 378, 685, 686, 703, 704, 705, 707, 708, 709, 710, 711, 712, 733, 734, 735, 745, 759], "dictionari": [0, 1, 8, 9, 11, 15, 17, 23, 25, 26, 31, 36, 67, 71, 75, 337, 420, 604, 605, 610, 685, 702, 703, 704, 710, 711], "describ": [0, 1, 6, 7, 67, 74, 75, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 261, 264, 685, 686, 687, 688, 689, 691, 692, 694, 695, 696, 698, 701, 702, 703, 704, 705, 706, 709, 710, 711, 712, 715, 720, 725, 730, 731, 732, 733, 734, 735, 738, 744, 745, 748, 751, 754, 759], "08": [0, 710, 741, 750], "03": [0, 702], "indic": [0, 1, 7, 8, 71, 75, 264, 506, 679, 703, 706, 710, 712, 716, 725, 738, 745], "two": [0, 1, 6, 8, 85, 95, 97, 110, 112, 141, 148, 156, 162, 167, 169, 235, 237, 244, 245, 246, 248, 249, 250, 252, 256, 264, 293, 345, 404, 407, 462, 685, 687, 688, 689, 692, 703, 704, 705, 710, 711, 718, 719, 721, 722, 723, 725, 729, 740, 741, 743, 745, 746, 748, 750, 751, 756, 758, 759, 760], "all": [0, 1, 6, 7, 8, 9, 11, 21, 26, 62, 65, 67, 70, 71, 78, 82, 87, 99, 114, 135, 150, 164, 171, 201, 206, 207, 229, 239, 242, 243, 246, 252, 264, 265, 272, 275, 276, 287, 308, 317, 337, 363, 369, 375, 457, 465, 473, 498, 506, 507, 526, 558, 676, 682, 683, 684, 689, 695, 698, 703, 704, 705, 707, 708, 709, 710, 711, 712, 714, 715, 716, 718, 719, 720, 723, 725, 734, 738, 739, 740, 741, 743, 745, 747, 750, 752, 753, 754, 755, 757, 758, 759, 760], "follow": [0, 1, 5, 6, 7, 8, 42, 242, 247, 249, 261, 264, 676, 682, 683, 684, 689, 692, 695, 703, 705, 706, 709, 710, 711, 712, 715, 717, 722, 725, 726, 727, 733, 734, 735, 736, 738, 740, 744, 745, 746, 747, 748, 751, 753, 754, 757, 758, 759], "notat": [0, 703], "ocean": [0, 4, 6, 7, 8, 9, 31, 72, 73, 183, 203, 211, 242, 252, 685, 686, 687, 688, 689, 690, 691, 692, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 707, 708, 709, 710, 711, 712, 725, 730, 731, 732, 733, 734, 735, 736, 737, 738, 740, 741, 742, 743, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 756, 757, 758, 759, 760, 761], "global_ocean": [0, 1, 6, 8, 269, 427, 430, 436, 442, 639, 642, 684, 691, 693, 703, 704, 705, 707, 708, 710, 711, 712, 736, 739, 740, 747, 749, 757, 759, 760, 761], "qu240": [0, 1, 6, 606, 611, 703, 704, 705, 709, 712, 740, 759, 761], "phc": [0, 1, 6, 369, 372, 689, 703, 704, 738, 740, 745, 761], "init": [0, 1, 6, 14, 15, 17, 21, 242, 275, 276, 337, 341, 342, 345, 348, 350, 363, 366, 383, 386, 391, 396, 401, 404, 407, 427, 430, 639, 642, 684, 686, 687, 691, 698, 701, 702, 703, 704, 705, 710, 712, 740, 756, 759, 761], "onli": [0, 1, 6, 7, 8, 23, 26, 188, 242, 243, 255, 256, 261, 493, 506, 510, 554, 556, 558, 684, 688, 689, 695, 697, 703, 704, 708, 709, 710, 711, 712, 717, 718, 722, 725, 726, 727, 728, 729, 733, 734, 735, 738, 741, 744, 745, 748, 751, 753, 754, 755, 758, 759], "some": [0, 1, 6, 8, 26, 243, 506, 518, 689, 695, 698, 702, 703, 704, 705, 706, 709, 710, 711, 712, 714, 722, 725, 730, 731, 732, 733, 734, 735, 738, 739, 745, 759, 760, 761], "thei": [0, 1, 3, 6, 7, 8, 12, 28, 36, 50, 69, 246, 337, 684, 685, 689, 692, 694, 695, 703, 704, 707, 708, 709, 710, 711, 712, 715, 718, 719, 721, 723, 725, 729, 734, 736, 738, 740, 741, 744, 745, 748, 751, 754, 758, 759, 761], "list": [0, 1, 3, 7, 11, 26, 27, 34, 35, 62, 65, 69, 70, 71, 72, 73, 74, 75, 82, 87, 99, 114, 150, 156, 164, 171, 229, 239, 243, 245, 246, 248, 250, 256, 299, 321, 324, 327, 348, 383, 391, 396, 399, 478, 522, 535, 546, 561, 564, 575, 578, 589, 592, 605, 611, 613, 616, 628, 685, 703, 704, 705, 707, 708, 709, 710, 711, 712, 714, 715, 719, 721, 729, 733, 734, 735, 744, 751, 753, 755, 756, 759, 760, 761], "explicitli": [0, 6, 7, 8, 689, 703, 710, 711, 712, 745, 747, 757, 759], "initial_st": [0, 1, 6, 277, 688, 689, 697, 699, 703, 704, 709, 712, 741, 742, 743, 745, 747, 748, 750, 751, 752, 754, 757, 758], "similarli": [0, 1, 6, 8, 703, 705, 709, 710, 711, 734, 740, 759], "ha": [0, 1, 6, 8, 11, 16, 21, 26, 28, 66, 70, 71, 73, 75, 77, 82, 87, 99, 114, 135, 150, 164, 171, 206, 207, 229, 239, 242, 243, 244, 245, 246, 247, 248, 250, 252, 255, 256, 257, 258, 259, 260, 264, 287, 308, 317, 363, 375, 457, 465, 473, 498, 505, 526, 684, 685, 686, 687, 689, 692, 694, 695, 696, 698, 702, 703, 704, 705, 707, 708, 709, 710, 711, 712, 713, 717, 718, 719, 721, 722, 723, 725, 735, 736, 738, 741, 742, 743, 744, 745, 748, 750, 751, 753, 754, 755, 757, 758, 759], "specifi": [0, 6, 8, 12, 164, 243, 249, 269, 691, 695, 703, 705, 709, 710, 711, 712, 716, 722, 725, 733, 735, 744, 745, 747, 751, 753, 755, 756, 758, 759], "suffix": [0, 71, 82, 87, 99, 114, 150, 164, 171, 229, 239, 245, 246, 248, 249, 250, 256, 703, 745], "c": [0, 1, 6, 71, 114, 123, 246, 261, 264, 703, 705, 715, 719, 730, 731, 732, 733, 734, 735, 740, 751, 753, 755, 759, 761], "number": [0, 1, 6, 8, 11, 18, 20, 21, 23, 24, 35, 39, 43, 44, 45, 46, 47, 60, 61, 64, 65, 71, 82, 87, 99, 114, 135, 150, 164, 171, 187, 202, 206, 229, 239, 243, 247, 249, 252, 266, 267, 272, 276, 287, 308, 317, 328, 363, 375, 399, 400, 442, 457, 465, 473, 498, 505, 526, 538, 547, 684, 685, 689, 692, 695, 698, 702, 703, 704, 707, 710, 711, 712, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 725, 726, 727, 729, 734, 736, 738, 740, 741, 742, 743, 744, 745, 746, 747, 748, 750, 751, 752, 753, 754, 755, 756, 757, 759], "setup": [0, 11, 21, 23, 26, 85, 95, 97, 110, 112, 141, 148, 156, 162, 167, 169, 235, 237, 244, 245, 246, 248, 250, 256, 442, 685, 686, 689, 692, 694, 695, 698, 702, 704, 705, 707, 708, 709, 710, 711, 712, 744, 747, 753, 755, 756, 757, 759, 760], "n": [0, 1, 6, 44, 51, 52, 57, 382, 390, 395, 451, 573, 587, 601, 625, 703, 733, 734, 735, 754, 756, 759], "90c": [0, 703], "91c": [0, 703], "92": [0, 703, 738, 756], "approach": [0, 1, 703, 704, 705, 706, 709, 710, 711, 736, 738, 751], "effici": [0, 1, 342, 689, 703, 745], "doe": [0, 1, 3, 8, 187, 191, 197, 202, 207, 214, 264, 692, 703, 708, 710, 711, 715, 725, 734, 745, 748, 754, 756, 758], "ani": [0, 1, 6, 7, 8, 22, 70, 71, 101, 116, 137, 152, 173, 231, 241, 245, 246, 248, 250, 271, 289, 292, 301, 365, 374, 377, 432, 441, 459, 467, 488, 500, 644, 650, 668, 685, 686, 687, 689, 694, 695, 696, 703, 704, 705, 708, 709, 710, 711, 712, 715, 725, 734, 740, 741, 745, 751, 759], "much": [0, 1, 6, 8, 243, 485, 703, 709, 710, 711, 740, 745, 748, 751, 758], "more": [0, 4, 6, 8, 26, 34, 35, 51, 70, 71, 247, 685, 686, 687, 688, 689, 690, 692, 697, 699, 700, 702, 703, 704, 705, 707, 709, 710, 711, 714, 716, 721, 722, 724, 725, 728, 729, 734, 736, 737, 739, 740, 745, 747, 748, 749, 754, 757, 758, 759, 760], "verbos": [0, 6, 39, 41, 703, 709, 761], "must": [0, 1, 6, 7, 8, 11, 16, 17, 19, 72, 73, 275, 566, 580, 594, 618, 689, 703, 705, 710, 725, 738, 745, 756, 760], "own": [0, 1, 7, 8, 11, 247, 609, 689, 703, 704, 705, 707, 709, 710, 711, 712, 744, 745, 753, 755, 756, 759, 760], "t": [0, 1, 6, 7, 8, 245, 246, 248, 250, 605, 609, 685, 686, 687, 689, 694, 696, 698, 703, 704, 705, 706, 709, 710, 711, 712, 715, 732, 733, 734, 740, 744, 745, 753, 755, 756, 759, 760, 761], "These": [0, 1, 6, 8, 9, 11, 242, 567, 581, 595, 603, 619, 684, 685, 689, 694, 701, 703, 704, 705, 708, 710, 712, 715, 718, 734, 740, 742, 745, 746, 747, 751, 756, 757, 758, 759, 760, 761], "assum": [0, 28, 275, 276, 348, 703, 710, 711, 712, 733, 735, 736], "alwai": [0, 1, 7, 8, 36, 242, 684, 689, 703, 704, 705, 709, 710, 711, 712, 725, 745], "free": [0, 1, 699, 709, 710, 711, 712, 736], "choos": [0, 1, 6, 704, 710, 725, 730, 731, 732, 733, 735, 760], "between": [0, 1, 3, 6, 8, 12, 24, 44, 51, 52, 57, 61, 74, 75, 184, 203, 211, 244, 264, 293, 382, 390, 395, 442, 451, 462, 573, 587, 601, 625, 676, 682, 683, 686, 687, 688, 689, 691, 695, 697, 698, 699, 703, 704, 705, 710, 718, 719, 721, 723, 728, 729, 734, 736, 738, 741, 745, 748, 750, 751, 754], "long": [0, 1, 5, 11, 21, 65, 82, 87, 99, 114, 135, 150, 164, 171, 176, 229, 239, 243, 287, 308, 317, 363, 375, 400, 457, 465, 473, 498, 526, 554, 558, 662, 666, 689, 698, 702, 703, 704, 710, 715, 725, 740, 748, 751, 759], "been": [0, 1, 6, 8, 11, 26, 28, 35, 70, 71, 73, 242, 257, 258, 259, 260, 327, 546, 564, 578, 592, 616, 684, 689, 695, 703, 704, 705, 706, 708, 709, 710, 711, 712, 725, 730, 731, 732, 733, 734, 735, 738, 741, 745, 749, 750, 759], "cached_fil": [0, 6, 9, 703], "json": [0, 6, 8, 9, 34, 703, 733, 735], "command": [0, 1, 8, 20, 65, 67, 612, 703, 704, 705, 707, 708, 709, 710, 711, 733, 734, 735, 740, 759], "line": [0, 1, 7, 8, 65, 695, 703, 704, 705, 708, 709, 710, 711, 719, 729, 751, 759], "tool": [0, 1, 6, 8, 242, 244, 245, 246, 247, 250, 264, 684, 703, 705, 708, 709, 710, 711, 712, 715, 740, 745], "avail": [0, 1, 5, 6, 8, 11, 16, 18, 21, 39, 62, 64, 65, 82, 87, 99, 114, 135, 150, 164, 171, 229, 239, 243, 272, 287, 308, 317, 321, 363, 375, 457, 465, 473, 498, 526, 695, 703, 704, 705, 710, 714, 718, 722, 725, 730, 731, 732, 733, 735, 739, 741, 742, 743, 744, 745, 751, 753, 755, 759, 761], "chrysali": [0, 1, 6, 261, 703, 710, 711, 712, 734, 759], "anvil": [0, 1, 6, 261, 703, 712, 734, 759], "machin": [0, 6, 8, 11, 26, 67, 70, 71, 73, 93, 108, 123, 182, 242, 684, 689, 703, 704, 708, 710, 711, 712, 730, 731, 732, 733, 735], "work": [0, 1, 3, 6, 8, 11, 12, 16, 19, 22, 26, 34, 35, 67, 68, 70, 71, 73, 101, 116, 137, 152, 173, 231, 241, 245, 246, 248, 249, 250, 256, 259, 261, 271, 289, 292, 301, 365, 374, 377, 432, 441, 459, 467, 488, 500, 644, 650, 668, 703, 704, 705, 706, 707, 710, 711, 712, 734, 740, 744, 751, 753, 754, 755, 756, 758, 759, 760], "directori": [0, 6, 8, 11, 12, 16, 22, 26, 34, 35, 38, 67, 68, 70, 71, 72, 73, 74, 75, 91, 101, 106, 116, 137, 152, 173, 180, 231, 241, 242, 261, 271, 289, 292, 301, 365, 374, 377, 432, 441, 459, 467, 488, 500, 644, 650, 668, 684, 685, 689, 692, 695, 704, 705, 707, 708, 710, 711, 712, 718, 725, 733, 735, 744, 745, 751, 753, 755, 756, 759, 760], "copi": [0, 6, 8, 12, 34, 70, 71, 73, 248, 485, 710, 711, 759], "map": [0, 8, 9, 50, 51, 184, 187, 191, 197, 202, 203, 207, 211, 214, 252, 508, 510, 689, 705, 712, 725, 745], "those": [0, 1, 8, 23, 26, 74, 75, 261, 689, 702, 703, 704, 705, 707, 708, 709, 710, 711, 725, 744, 745, 748, 749, 751, 761], "exampl": [0, 1, 3, 4, 6, 7, 8, 264, 689, 703, 704, 705, 706, 707, 709, 710, 711, 712, 716, 718, 725, 738, 739, 745, 757, 759, 760, 761], "name": [0, 1, 6, 7, 8, 9, 11, 12, 14, 15, 17, 23, 24, 25, 26, 28, 31, 35, 37, 38, 39, 43, 50, 55, 59, 60, 61, 69, 70, 71, 72, 73, 74, 75, 80, 82, 87, 91, 99, 106, 114, 123, 135, 150, 164, 171, 180, 189, 191, 195, 197, 207, 214, 229, 239, 269, 272, 273, 278, 287, 308, 317, 328, 330, 334, 363, 366, 378, 381, 389, 394, 399, 400, 420, 423, 427, 430, 433, 436, 442, 447, 450, 457, 473, 486, 490, 506, 508, 510, 518, 522, 526, 528, 530, 535, 547, 606, 609, 610, 611, 612, 628, 642, 651, 658, 665, 666, 675, 685, 689, 694, 703, 704, 705, 707, 709, 710, 711, 712, 716, 718, 719, 720, 721, 723, 725, 729, 733, 735, 741, 745, 750, 759, 761], "culled_mesh": [0, 1, 6, 703, 710, 711], "nc": [0, 1, 6, 8, 91, 106, 180, 245, 248, 256, 264, 277, 348, 604, 609, 689, 695, 698, 702, 703, 704, 709, 710, 711, 725, 745], "becom": [0, 1, 7, 243, 264, 420, 703, 710, 711, 717, 736], "20210730": 0, "when": [0, 1, 6, 8, 14, 15, 17, 20, 26, 27, 36, 37, 38, 39, 68, 74, 75, 156, 243, 244, 245, 246, 248, 249, 250, 256, 261, 681, 685, 689, 692, 694, 695, 698, 702, 703, 704, 705, 708, 709, 710, 711, 715, 716, 717, 718, 719, 723, 725, 730, 731, 732, 733, 735, 738, 740, 745, 751, 759, 760], "call": [0, 1, 6, 8, 11, 20, 26, 27, 28, 42, 60, 68, 244, 245, 246, 248, 249, 250, 253, 254, 256, 261, 264, 348, 685, 689, 692, 695, 698, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 725, 733, 734, 735, 740, 745, 759], "default": [0, 1, 6, 7, 8, 11, 12, 14, 15, 17, 23, 24, 25, 26, 34, 51, 55, 61, 67, 69, 82, 87, 91, 93, 99, 104, 106, 108, 114, 123, 135, 150, 153, 164, 171, 180, 182, 221, 226, 229, 239, 242, 244, 245, 246, 248, 250, 253, 254, 256, 257, 258, 259, 260, 269, 272, 273, 287, 308, 310, 317, 319, 363, 430, 450, 457, 473, 480, 486, 493, 509, 526, 552, 642, 662, 666, 684, 688, 689, 695, 697, 698, 699, 700, 702, 703, 705, 708, 709, 711, 712, 717, 718, 719, 720, 721, 722, 723, 725, 726, 727, 729, 730, 731, 732, 733, 734, 735, 738, 740, 744, 745, 751, 753, 759, 760, 761], "being": [0, 1, 8, 11, 26, 68, 71, 75, 164, 264, 689, 692, 695, 703, 704, 705, 708, 709, 725, 738, 745, 749], "made": [0, 3, 6, 11, 16, 26, 75, 79, 228, 234, 689, 703, 704, 707, 709, 711, 723, 736, 760], "overridden": [0, 703], "contain": [0, 1, 3, 6, 7, 8, 9, 14, 17, 25, 62, 245, 246, 247, 248, 250, 264, 269, 278, 423, 436, 489, 490, 604, 628, 676, 682, 683, 685, 686, 687, 689, 694, 696, 703, 704, 705, 707, 709, 710, 711, 712, 714, 725, 739, 745, 747, 751, 759], "210803": [0, 6], "culled_graph": [0, 1, 6, 703, 710], "info": [0, 1, 6, 8, 59, 60, 61, 275, 276, 506, 518, 689, 698, 702, 703, 710, 711], "critical_passages_mask_fin": [0, 6], "init_mode_forcing_data": [0, 6, 703], "prototyp": [0, 1], "had": [0, 261, 703, 704], "separ": [0, 1, 6, 7, 8, 143, 243, 489, 703, 710, 711, 716, 719, 721, 722, 725, 729, 743, 744, 745, 753, 755, 756, 759], "depend": [0, 1, 6, 8, 22, 101, 116, 137, 152, 173, 231, 241, 252, 271, 289, 292, 301, 365, 374, 377, 432, 441, 459, 467, 488, 500, 509, 644, 650, 668, 686, 688, 689, 692, 703, 705, 707, 709, 710, 711, 712, 733, 734, 735, 738, 744, 745, 746, 759, 760], "earlier": [0, 1], "turn": [0, 1, 11, 703, 706, 710, 751, 752, 757], "out": [0, 1, 8, 14, 15, 17, 23, 24, 25, 66, 264, 490, 505, 508, 510, 689, 695, 703, 704, 705, 710, 711, 712, 718, 738, 745, 750, 751, 754, 759], "veri": [0, 1, 250, 490, 692, 703, 704, 705, 710, 711, 723, 725, 748, 751, 754, 758], "cumbersom": [0, 1], "mani": [0, 1, 6, 8, 703, 704, 705, 707, 708, 709, 710, 711, 716, 718, 720, 723, 739, 741, 744, 745, 749, 750, 753, 755], "subdirectori": [0, 1, 6, 8, 11, 12, 26, 39, 43, 50, 55, 82, 87, 91, 99, 106, 114, 135, 150, 164, 171, 180, 229, 239, 245, 269, 273, 287, 308, 317, 363, 369, 381, 389, 394, 430, 450, 457, 473, 486, 526, 642, 666, 703, 704, 709, 710, 711, 725, 745, 759, 760], "predetermin": 0, "allow": [0, 1, 3, 8, 11, 21, 36, 75, 255, 264, 689, 695, 703, 707, 710, 711, 712, 715, 716, 734, 736, 738, 742, 744, 745, 747, 751, 753, 755, 757, 760], "But": [0, 1, 261, 703, 704, 709, 710, 711, 712, 734], "did": [0, 1, 8, 75], "therefor": [0, 1, 261, 690, 703, 705, 707, 708, 710, 711, 715, 744, 745, 753, 755, 759], "propos": [0, 1, 3], "previou": [0, 6, 8, 247, 264, 401, 689, 703, 709, 711, 712, 725, 740, 754, 759, 761], "section": [0, 1, 3, 4, 7, 8, 51, 61, 242, 244, 245, 246, 250, 264, 468, 482, 506, 508, 512, 515, 516, 517, 674, 676, 682, 683, 684, 689, 690, 695, 698, 702, 703, 705, 706, 709, 710, 711, 712, 717, 718, 719, 725, 730, 731, 732, 733, 734, 735, 738, 744, 746, 750, 751, 752, 753, 755, 756, 759], "far": [0, 1, 77, 676, 682, 683, 692, 704, 710, 711, 713, 751], "flexibl": [0, 8, 688, 703, 705, 708], "about": [0, 1, 6, 7, 8, 11, 703, 704, 709, 710, 711, 712, 715, 716, 725, 751, 755], "clear": [0, 1, 3, 704, 709, 711], "me": [0, 1], "how": [0, 1, 3, 6, 8, 50, 264, 695, 703, 704, 709, 710, 711, 712, 725, 733, 734, 735, 736, 744, 751, 753, 754, 755, 758], "achiev": [0, 46, 711, 736], "without": [0, 1, 6, 8, 12, 245, 404, 662, 689, 702, 703, 704, 705, 712, 718, 721, 722, 732, 734, 745, 751, 759], "branch": [0, 1, 3, 6, 70, 71, 73, 242, 261, 684, 703, 705, 708, 709, 710, 711, 712, 759], "04": [0, 1, 702], "boolean": [0, 8, 679], "fals": [0, 1, 8, 11, 12, 27, 34, 39, 41, 68, 69, 71, 73, 75, 156, 162, 164, 244, 245, 250, 266, 269, 272, 276, 486, 490, 493, 498, 503, 510, 666, 695, 698, 702, 703, 710, 711, 712, 717, 718, 720, 721, 722, 725, 726, 727, 732, 735, 741, 743, 745, 750, 756], "true": [0, 1, 7, 8, 27, 37, 38, 61, 75, 257, 258, 259, 260, 262, 264, 272, 273, 276, 450, 457, 493, 507, 510, 520, 689, 692, 695, 703, 710, 711, 712, 717, 718, 719, 721, 722, 723, 725, 726, 727, 729, 730, 731, 732, 733, 734, 735, 745, 751, 753, 756, 759, 760], "usual": [0, 703, 705, 710, 759], "ignor": 0, "namelist": [0, 1, 7, 11, 14, 15, 22, 23, 24, 61, 82, 87, 99, 101, 114, 116, 137, 150, 152, 164, 171, 173, 229, 231, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 255, 256, 289, 292, 301, 333, 459, 467, 488, 500, 540, 542, 569, 583, 597, 621, 668, 684, 685, 686, 687, 688, 689, 692, 694, 695, 696, 697, 698, 699, 702, 704, 708, 709, 712, 718, 720, 741, 745, 748, 750, 758], "steam": 0, "also": [0, 1, 3, 6, 7, 8, 20, 36, 74, 75, 247, 255, 264, 676, 682, 683, 685, 689, 695, 698, 700, 702, 703, 704, 705, 710, 711, 712, 720, 722, 725, 733, 734, 735, 736, 738, 740, 741, 743, 745, 750, 751, 752, 754, 755, 757, 758, 759, 760], "along": [0, 1, 506, 685, 689, 692, 694, 695, 702, 703, 708, 710, 711, 736, 745, 751, 757], "path": [0, 1, 6, 8, 11, 12, 16, 26, 34, 35, 36, 37, 38, 39, 42, 67, 70, 71, 72, 73, 74, 75, 242, 245, 275, 276, 277, 684, 703, 704, 705, 707, 710, 712, 725, 730, 731, 732, 733, 734, 735, 745, 759, 760], "By": [0, 1, 6, 8, 242, 684, 695, 703, 710, 711, 712, 719, 741, 742, 743, 744, 748, 750, 751, 753], "empti": [0, 36, 703, 704, 707, 710, 711], "onc": [0, 1, 8, 244, 245, 246, 248, 250, 256, 685, 686, 689, 692, 695, 705, 712, 725, 736, 744, 745, 751, 759], "white": [0, 729], "strip": [0, 704], "awai": [0, 3, 178, 703, 711], "accomplish": [0, 1, 6, 704, 711], "special": [0, 1, 6, 707], "_all": [0, 70, 71], "first": [0, 1, 8, 70, 71, 245, 246, 247, 248, 250, 256, 272, 685, 686, 687, 689, 692, 694, 695, 696, 698, 702, 703, 704, 705, 706, 709, 710, 711, 718, 719, 720, 721, 723, 729, 730, 731, 732, 733, 734, 735, 744, 745, 747, 748, 751, 756, 759], "start": [0, 1, 6, 7, 8, 321, 685, 692, 695, 703, 704, 708, 714, 723, 725, 733, 734, 735, 736, 739, 745, 747, 751, 757], "after": [0, 1, 7, 11, 12, 16, 56, 61, 242, 261, 489, 677, 678, 684, 689, 690, 695, 703, 709, 712, 718, 733, 735, 745, 750, 759], "remaind": [0, 711], "append": [0, 6, 689], "conveni": [0, 1, 6, 676, 682, 683, 703, 707, 710, 711, 712, 728, 740, 745, 751, 759], "multipl": [0, 1, 6, 7, 8, 245, 246, 247, 248, 250, 256, 689, 703, 704, 709, 710, 711, 718, 719, 720, 721, 723, 729, 734, 741, 745, 750, 759], "global_converg": [0, 566, 580, 594, 598, 618, 622, 684, 693, 709, 710, 711, 739, 749, 755], "cosine_bel": [0, 535, 543, 710, 711], "qu60_mesh": 0, "qu60_init": 0, "qu90_mesh": 0, "qu90_init": 0, "qu120_mesh": 0, "qu120_init": 0, "qu150_mesh": 0, "qu150_init": 0, "qu180_mesh": 0, "qu180_init": 0, "qu210_mesh": 0, "qu210_init": 0, "qu240_mesh": 0, "qu240_init": 0, "individu": [0, 1, 8, 75, 703, 704, 710, 715, 716, 733, 734, 735, 759, 760], "while": [0, 1, 8, 245, 246, 248, 250, 256, 685, 689, 692, 703, 706, 707, 710, 711, 718, 745, 748, 751], "singl": [0, 1, 6, 8, 493, 690, 691, 701, 703, 704, 707, 709, 710, 711, 716, 717, 725, 726, 727, 728, 734, 740, 744, 746, 747, 751, 753, 755, 756, 757], "featur": [0, 1, 704, 707, 710, 711, 712, 740, 741, 750, 751, 754], "too": [0, 1, 11, 21, 65, 692, 703, 704, 710, 711, 736, 744, 745, 753, 755], "broadli": [0, 704], "probabl": [0, 1, 506, 710, 711, 734], "want": [0, 1, 3, 6, 8, 28, 703, 705, 706, 709, 710, 711, 712, 721, 722, 725, 726, 727, 729, 733, 735, 759, 760], "cosin": [0, 327, 330, 334, 570, 584, 598, 622, 688, 697, 699, 744, 755], "bell": [0, 327, 330, 334, 570, 584, 598, 622, 688, 697, 699, 744, 755], "abov": [0, 1, 6, 7, 8, 207, 264, 272, 485, 506, 689, 695, 703, 704, 705, 710, 711, 712, 721, 729, 744, 745, 747, 751, 753, 759, 761], "modul": [0, 1, 5, 6, 14, 17, 25, 42, 257, 258, 259, 260, 261, 264, 689, 703, 706, 707, 708, 709, 710, 711, 712, 730, 731, 732, 733, 734, 735, 759], "take": [0, 1, 6, 7, 8, 36, 243, 245, 689, 703, 705, 708, 709, 710, 711, 715, 722, 726, 727, 751, 761], "dry_run": [0, 6, 34], "doesn": [0, 1, 8, 245, 246, 248, 250, 685, 686, 687, 694, 696, 703, 704, 709, 710, 711, 734, 745], "date_str": [0, 6, 34], "let": [0, 6, 689, 705, 707, 710, 711, 712, 733, 735], "suppli": [0, 1, 6, 7, 8, 272, 703, 705, 710, 725, 751], "yymmdd": [0, 34, 689, 712, 745], "than": [0, 1, 6, 8, 11, 12, 21, 36, 82, 87, 99, 114, 135, 150, 164, 171, 211, 213, 229, 239, 261, 287, 308, 317, 363, 375, 457, 465, 473, 498, 526, 685, 692, 703, 704, 705, 706, 709, 710, 711, 716, 722, 725, 726, 727, 736, 738, 741, 745, 748, 750, 751, 755, 758, 761], "todai": [0, 6, 34], "As": [0, 1, 5, 6, 8, 45, 689, 703, 704, 705, 710, 711, 712, 716, 717, 738, 745, 754, 758, 761], "state": [0, 1, 63, 176, 250, 264, 277, 685, 686, 687, 688, 689, 690, 692, 694, 695, 696, 697, 698, 699, 702, 710, 723, 751, 758], "To": [0, 1, 3, 6, 8, 75, 242, 245, 246, 247, 248, 250, 256, 261, 264, 684, 703, 704, 705, 709, 710, 711, 722, 725, 730, 731, 732, 733, 734, 735, 738, 744, 753, 755, 756, 759], "produc": [0, 1, 8, 11, 16, 34, 82, 87, 99, 114, 150, 164, 171, 229, 239, 244, 245, 247, 250, 281, 293, 302, 337, 341, 342, 345, 348, 350, 363, 366, 383, 386, 391, 396, 401, 404, 407, 420, 427, 430, 442, 462, 489, 628, 639, 642, 651, 656, 685, 686, 687, 688, 689, 690, 692, 694, 695, 696, 697, 698, 699, 700, 702, 703, 704, 705, 710, 711, 715, 740, 743, 745, 751, 752, 757, 758, 759], "mpas_cor": [0, 1, 8, 11, 26, 31, 61, 72, 73, 79, 84, 94, 109, 134, 140, 155, 166, 183, 218, 223, 228, 234, 279, 305, 314, 323, 336, 410, 419, 452, 470, 484, 521, 532, 551, 560, 627, 661, 703, 704, 710, 711], "_cached_fil": [0, 8, 703], "base": [0, 1, 6, 8, 9, 11, 12, 18, 25, 26, 31, 34, 35, 49, 54, 55, 70, 71, 72, 73, 146, 190, 196, 242, 246, 248, 252, 261, 264, 269, 272, 333, 490, 542, 569, 583, 597, 621, 676, 677, 678, 679, 680, 681, 682, 683, 684, 688, 689, 691, 695, 697, 698, 702, 703, 704, 705, 707, 709, 711, 712, 721, 722, 725, 726, 727, 729, 730, 731, 732, 733, 734, 735, 738, 745, 747, 751, 757, 760], "alreadi": [0, 1, 5, 8, 28, 38, 505, 703, 704, 705, 710, 711, 712, 725, 728, 729, 734, 738, 744, 745, 753, 755, 756, 759], "exist": [0, 1, 7, 8, 11, 16, 23, 38, 72, 73, 187, 191, 196, 197, 202, 207, 214, 252, 630, 685, 703, 704, 705, 706, 709, 710, 711, 725, 734, 745, 751, 761], "befor": [0, 1, 6, 8, 20, 25, 206, 244, 245, 246, 247, 250, 489, 689, 695, 703, 704, 705, 706, 709, 710, 711, 725, 735, 738, 744, 745, 751, 753, 755, 756, 759], "inform": [0, 1, 6, 7, 8, 11, 75, 436, 628, 703, 705, 712, 714, 725, 739, 745, 759], "yet": [0, 1, 259, 689, 703, 704, 705, 709, 710, 711, 735, 745], "point": [0, 1, 6, 33, 38, 242, 245, 264, 272, 437, 485, 684, 703, 704, 705, 710, 711, 712, 720, 722, 726, 727, 734, 751, 759], "yesterdai": 0, "8": [0, 1, 8, 45, 345, 685, 689, 702, 703, 705, 710, 712, 725, 729, 741, 744, 745, 747, 751, 753, 755, 757, 758, 759], "3": [0, 1, 8, 45, 245, 246, 247, 248, 250, 252, 256, 264, 514, 554, 556, 558, 604, 605, 662, 666, 685, 689, 694, 695, 699, 702, 703, 705, 706, 709, 710, 711, 712, 715, 717, 718, 719, 720, 721, 722, 723, 725, 729, 733, 734, 735, 738, 740, 741, 742, 744, 750, 751, 752, 753, 754, 755, 756, 758, 759], "qu60": 0, "qu90": 0, "qu120": [0, 606], "qu150": 0, "qu180": 0, "qu210": 0, "done": [0, 1, 21, 703, 710, 711, 759], "wa": [0, 1, 8, 37, 74, 75, 261, 689, 703, 704, 705, 706, 709, 710, 711, 712, 716, 738, 743, 745, 748, 759], "ocean_cached_fil": [0, 6], "graph": [0, 1, 20, 59, 60, 61, 244, 245, 246, 247, 250, 275, 276, 685, 689, 692, 694, 695, 696, 698, 702, 703, 710, 711, 712, 745], "back": [0, 7, 247, 697, 710, 711, 720, 750, 756, 759], "repo": [0, 1, 3, 6, 242, 684, 708, 710, 711], "commit": [0, 1, 704, 705], "master": [0, 7, 684, 705, 710, 711, 762], "pull": [0, 1, 7, 689, 704, 710, 711, 712, 715, 745], "request": [0, 1, 7, 60, 61, 677, 678, 689, 703, 704, 706, 710, 711, 712, 715, 744, 745, 753, 755, 756], "string": [0, 1, 6, 8, 567, 581, 595, 619, 703], "end": [0, 1, 245, 246, 248, 250, 256, 350, 353, 355, 357, 359, 361, 420, 685, 689, 692, 695, 703, 704, 705, 707, 710, 725, 743, 744], "desir": [0, 1, 8, 75, 255, 264, 689, 703, 705, 710, 711, 712, 745, 759], "lean": 0, "heavili": [0, 1], "assumpt": 0, "part": [0, 1, 4, 6, 7, 8, 11, 26, 82, 87, 99, 114, 135, 150, 164, 171, 229, 239, 243, 275, 276, 287, 308, 317, 330, 363, 375, 415, 430, 457, 465, 473, 486, 498, 526, 539, 554, 566, 580, 594, 618, 642, 666, 695, 698, 702, 703, 704, 705, 708, 709, 710, 711, 715, 721, 729, 738, 745, 748], "nevertheless": 0, "were": [0, 1, 261, 506, 703, 704, 707, 709, 710, 711, 712, 732, 738], "necessari": [0, 7, 703, 710, 711, 725, 747], "make": [0, 5, 6, 12, 13, 36, 44, 45, 47, 59, 75, 242, 257, 258, 259, 260, 261, 262, 275, 281, 293, 302, 337, 345, 404, 407, 454, 462, 676, 682, 683, 684, 685, 689, 692, 694, 695, 696, 703, 704, 705, 707, 712, 717, 718, 719, 721, 722, 723, 729, 730, 731, 732, 733, 734, 735, 736, 741, 744, 745, 747, 748, 751, 759, 761], "symlink": [0, 1, 6, 11, 12, 485, 689, 704, 705, 710, 711, 745], "locat": [0, 1, 6, 8, 26, 70, 71, 73, 242, 264, 275, 423, 436, 506, 684, 691, 692, 695, 697, 703, 705, 707, 710, 712, 725, 730, 731, 732, 733, 734, 735, 738, 741, 744, 747, 750, 753, 757, 759], "uncach": [0, 34], "group": [0, 8, 9, 10, 11, 26, 31, 32, 79, 80, 84, 85, 94, 95, 97, 104, 109, 110, 112, 119, 124, 129, 134, 140, 141, 143, 148, 153, 155, 156, 160, 162, 166, 167, 169, 176, 178, 183, 184, 203, 211, 218, 221, 223, 226, 228, 232, 234, 235, 237, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 264, 279, 281, 284, 287, 293, 296, 299, 302, 305, 306, 314, 315, 323, 324, 336, 337, 342, 345, 348, 350, 366, 369, 378, 383, 386, 391, 396, 401, 404, 407, 410, 411, 419, 427, 433, 447, 452, 454, 462, 470, 471, 473, 477, 478, 480, 484, 493, 521, 522, 524, 530, 532, 535, 543, 551, 558, 560, 561, 575, 589, 604, 606, 609, 613, 627, 639, 645, 658, 661, 662, 671, 684, 685, 686, 687, 688, 689, 690, 691, 692, 694, 695, 696, 697, 698, 699, 700, 701, 702, 707, 708, 712, 714, 716, 717, 718, 719, 720, 721, 722, 723, 725, 726, 727, 728, 729, 730, 731, 733, 734, 735, 737, 738, 739, 741, 742, 743, 744, 745, 746, 747, 748, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761], "public_html": [0, 1, 730, 731, 734], "mpas_standalonedata": [0, 1, 8, 703, 712, 730, 731, 732, 733, 734, 735], "constructor": [0, 8, 245, 685, 687, 689, 694, 696, 710, 711], "construct": [0, 1, 78, 244, 245, 246, 247, 250, 265, 674, 676, 677, 678, 682, 683, 689, 703, 710, 711, 745], "quwisc240": [0, 1, 703, 704, 759, 761], "ssh_adjust": [0, 1, 684, 689, 703, 712, 748, 751], "ec30to60": [0, 1, 759, 761], "wc14": [0, 759, 761], "ecwisc30to60": [0, 1, 381, 759, 761], "sowisc12to60": [0, 703, 759, 761], "togeth": [0, 703, 707, 709, 710, 761], "performance_test": [0, 1, 703, 740, 761], "global": [0, 8, 31, 264, 269, 272, 273, 323, 324, 336, 337, 342, 345, 348, 350, 363, 366, 369, 378, 383, 386, 391, 396, 401, 404, 407, 433, 447, 535, 543, 561, 572, 575, 586, 589, 600, 613, 624, 645, 658, 688, 689, 691, 699, 700, 703, 708, 709, 712, 733, 735, 745, 747, 754, 757, 758, 759], "ran": [0, 1, 711], "successfulli": [0, 1, 243, 337], "bit": [0, 1, 156, 249, 703, 704, 707, 711, 715, 717, 718, 719, 721, 722, 723, 729, 736, 740, 741, 748, 759], "nightli": [0, 1, 3, 705, 745, 749, 759, 761], "cosine_bell_cached_init": [0, 759, 761], "fro": 0, "resolut": [0, 8, 43, 46, 50, 51, 85, 89, 91, 95, 97, 99, 102, 104, 106, 119, 143, 145, 156, 158, 162, 164, 219, 224, 245, 246, 248, 249, 250, 253, 254, 256, 273, 280, 281, 284, 287, 290, 293, 296, 299, 302, 306, 308, 315, 317, 324, 327, 328, 330, 381, 389, 394, 450, 453, 454, 457, 460, 462, 477, 478, 486, 491, 493, 496, 498, 501, 503, 522, 526, 528, 530, 533, 535, 539, 546, 547, 549, 552, 554, 556, 558, 561, 564, 566, 570, 572, 575, 578, 580, 584, 586, 589, 592, 594, 598, 600, 605, 606, 610, 611, 613, 616, 618, 622, 624, 662, 665, 666, 669, 671, 685, 686, 687, 688, 689, 690, 691, 692, 694, 695, 696, 697, 698, 699, 700, 702, 703, 709, 712, 715, 717, 718, 719, 720, 721, 722, 723, 725, 726, 727, 728, 729, 736, 741, 742, 743, 745, 746, 747, 748, 750, 751, 752, 754, 757, 758, 760], "remain": [0, 1, 489, 695, 709, 719, 736, 748, 751], "mention": [0, 1, 704], "40c": 0, "41c": 0, "42": [0, 1], "60c": 0, "61c": 0, "62": 0, "80c": 0, "81c": 0, "82": 0, "85c": 0, "86c": 0, "87": 0, "95c": 0, "96c": 0, "97": 0, "sere": 0, "expect": [0, 1, 3, 8, 156, 249, 264, 348, 567, 581, 595, 619, 689, 695, 703, 705, 708, 710, 715, 736, 737, 740, 745, 749, 755, 758], "basenam": 0, "extens": [0, 507, 711, 712], "altern": [0, 1, 6, 8, 710, 759], "No": [0, 1, 8, 708], "perform": [0, 1, 3, 6, 8, 19, 20, 22, 30, 43, 74, 75, 81, 82, 85, 87, 95, 97, 99, 101, 104, 110, 112, 114, 116, 119, 135, 137, 141, 148, 150, 152, 153, 156, 157, 162, 163, 164, 167, 169, 171, 173, 176, 229, 231, 235, 237, 239, 241, 244, 245, 246, 248, 249, 250, 252, 255, 256, 264, 267, 284, 287, 289, 292, 296, 301, 308, 317, 323, 330, 336, 337, 345, 348, 350, 363, 383, 386, 391, 396, 401, 404, 407, 411, 415, 427, 430, 454, 457, 459, 467, 473, 477, 486, 488, 500, 526, 539, 554, 558, 559, 566, 580, 594, 618, 634, 639, 642, 662, 666, 668, 671, 684, 685, 686, 687, 688, 689, 692, 694, 695, 696, 697, 699, 700, 701, 702, 703, 707, 708, 709, 710, 711, 712, 718, 719, 720, 721, 723, 725, 729, 734, 736, 740, 741, 742, 743, 745, 747, 748, 750, 752, 754, 755, 756, 757, 758, 761], "ensur": [0, 1, 3, 8, 36, 244, 245, 246, 248, 249, 250, 256, 685, 689, 692, 698, 702, 703, 704, 705, 711, 715, 740, 745], "don": [0, 1, 7, 8, 703, 704, 705, 709, 710, 711, 732, 733, 745, 760], "forese": 0, "problem": [0, 1, 8, 243, 703, 706, 710, 715, 740], "requr": 0, "howev": [0, 1, 703, 709, 736, 745], "relax": [0, 718], "outlin": 0, "author": [1, 689, 712, 745, 747, 757], "2020": [1, 690, 745, 746, 751], "11": [1, 8, 45, 276, 754, 758], "16": [1, 689, 703, 710, 711, 712, 722, 729, 745, 753, 754, 755, 759], "infrastructur": [1, 704, 745], "serv": [1, 70, 71, 72, 73, 686, 687, 703, 710], "u": [1, 689, 703, 711, 733, 734, 735, 745], "well": [1, 3, 8, 244, 245, 246, 248, 250, 256, 264, 312, 321, 350, 679, 685, 686, 687, 689, 692, 694, 695, 696, 702, 703, 707, 709, 710, 711, 712, 715, 716, 725, 740, 743, 757, 759, 760], "sever": [1, 8, 246, 247, 250, 511, 519, 689, 691, 698, 702, 703, 704, 705, 707, 710, 711, 715, 739, 740, 745, 751, 759, 761], "shortcom": 1, "emerg": 1, "over": [1, 6, 8, 36, 156, 261, 490, 493, 608, 695, 703, 704, 708, 709, 710, 711, 716, 734, 736, 738, 741, 745, 747, 748, 750, 751, 754, 755, 758, 759], "year": [1, 244, 245, 246, 247, 250, 255, 493, 554, 558, 662, 666, 689, 708, 718, 719, 720, 721, 722, 723, 725, 728, 745, 751, 754], "found": [1, 8, 689, 703, 704, 705, 708, 710, 711, 712, 734, 736], "current": [1, 3, 6, 8, 11, 21, 74, 75, 242, 261, 264, 684, 688, 689, 695, 697, 698, 702, 703, 704, 705, 707, 708, 710, 711, 712, 715, 716, 722, 734, 736, 738, 739, 740, 741, 744, 745, 747, 748, 751, 753, 757, 758, 759, 760, 761], "system": [1, 5, 6, 11, 21, 63, 65, 66, 82, 87, 99, 114, 135, 150, 164, 171, 229, 239, 257, 258, 259, 260, 261, 287, 308, 317, 363, 375, 457, 465, 473, 498, 526, 703, 706, 708, 710, 711, 712, 725, 730, 731, 732, 733, 734, 735, 747, 757, 759], "xml": [1, 703, 704, 707, 708, 711], "pars": [1, 8, 14, 15, 17, 703, 704, 709], "script": [1, 5, 6, 8, 33, 72, 244, 245, 246, 247, 250, 261, 262, 704, 707, 708, 711, 712, 718, 734, 751], "stream": [1, 7, 8, 11, 17, 22, 25, 61, 82, 87, 99, 101, 114, 116, 137, 150, 152, 164, 171, 173, 229, 231, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 255, 256, 289, 292, 301, 459, 467, 488, 500, 668, 684, 685, 686, 687, 689, 692, 694, 695, 696, 698, 702, 704, 708, 712, 745], "intuit": 1, "second": [1, 8, 82, 87, 99, 114, 150, 164, 171, 229, 239, 702, 703, 704, 710, 711, 716, 718, 719, 721, 723, 729, 741, 743, 745, 748, 751, 755, 756], "lend": 1, "themselv": [1, 695, 703, 704, 708, 711, 745], "reus": [1, 703, 704, 708, 710, 711], "lead": [1, 264, 751], "config": [1, 6, 7, 11, 25, 26, 28, 37, 49, 51, 54, 60, 61, 63, 64, 65, 66, 67, 70, 71, 73, 75, 93, 108, 123, 182, 187, 201, 202, 242, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 261, 264, 278, 280, 325, 333, 363, 378, 399, 400, 453, 536, 540, 542, 544, 562, 569, 576, 583, 590, 597, 614, 621, 665, 674, 676, 677, 678, 682, 683, 684, 685, 686, 687, 688, 689, 690, 692, 694, 695, 696, 697, 698, 699, 700, 702, 703, 704, 705, 706, 708, 709, 728, 738, 759, 760], "third": [1, 711, 716, 751], "edit": [1, 6, 7, 75, 705, 710, 711, 745, 751, 759], "step": [1, 2, 6, 7, 8, 26, 27, 29, 34, 43, 48, 50, 53, 55, 56, 60, 61, 64, 65, 67, 68, 69, 70, 71, 75, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 96, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 111, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 126, 127, 128, 131, 132, 133, 135, 136, 137, 138, 139, 142, 144, 145, 147, 149, 150, 151, 152, 154, 158, 159, 161, 164, 165, 168, 170, 171, 172, 173, 174, 175, 177, 179, 180, 181, 182, 187, 189, 193, 194, 195, 199, 200, 202, 205, 209, 210, 213, 216, 217, 219, 220, 222, 224, 225, 227, 229, 230, 231, 233, 236, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 264, 267, 269, 270, 272, 273, 274, 283, 286, 287, 288, 289, 290, 291, 292, 295, 298, 299, 300, 301, 304, 308, 309, 310, 311, 312, 313, 317, 318, 319, 320, 321, 322, 326, 327, 329, 330, 331, 332, 334, 335, 339, 344, 347, 348, 349, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 368, 371, 372, 373, 375, 376, 380, 381, 383, 385, 388, 389, 391, 393, 394, 396, 398, 399, 403, 406, 409, 413, 414, 415, 416, 417, 418, 420, 424, 429, 430, 431, 435, 436, 438, 439, 440, 442, 445, 449, 450, 456, 457, 458, 459, 460, 461, 464, 465, 466, 467, 468, 469, 473, 474, 475, 476, 478, 479, 482, 483, 486, 487, 488, 491, 492, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 522, 523, 526, 527, 528, 529, 530, 531, 533, 534, 537, 538, 539, 540, 541, 545, 546, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 563, 564, 565, 566, 567, 568, 570, 571, 572, 574, 577, 578, 579, 580, 581, 582, 584, 585, 586, 588, 591, 592, 593, 594, 595, 596, 598, 599, 600, 602, 604, 615, 616, 617, 618, 619, 620, 622, 623, 624, 626, 628, 633, 641, 642, 643, 647, 648, 649, 651, 654, 656, 657, 660, 664, 666, 667, 668, 669, 670, 673, 685, 686, 687, 688, 690, 691, 692, 694, 695, 696, 697, 698, 699, 700, 701, 702, 704, 705, 707, 708, 712, 716, 717, 718, 719, 720, 721, 722, 723, 725, 726, 727, 729, 733, 735, 738, 741, 742, 743, 748, 750, 751, 752, 754, 756, 758, 760, 761], "fourth": [1, 711, 721], "easili": [1, 710], "constrain": [1, 18, 264, 276], "us": [1, 6, 7, 8, 11, 12, 20, 21, 23, 25, 26, 29, 34, 37, 51, 59, 60, 63, 65, 68, 75, 79, 82, 86, 87, 95, 96, 97, 98, 99, 104, 105, 110, 111, 112, 113, 114, 120, 126, 131, 135, 141, 142, 144, 148, 149, 150, 153, 154, 156, 161, 162, 164, 168, 170, 171, 174, 177, 179, 187, 188, 191, 192, 197, 198, 202, 207, 208, 214, 215, 222, 227, 228, 229, 233, 234, 236, 238, 239, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 261, 264, 269, 272, 276, 283, 286, 287, 295, 298, 304, 308, 317, 321, 324, 327, 337, 342, 345, 348, 350, 352, 353, 355, 357, 359, 361, 363, 366, 369, 372, 375, 380, 383, 386, 391, 396, 401, 404, 407, 433, 436, 439, 442, 449, 456, 457, 464, 465, 473, 485, 489, 498, 508, 510, 526, 554, 556, 558, 567, 581, 595, 605, 612, 619, 628, 641, 645, 647, 648, 651, 656, 660, 664, 673, 674, 676, 677, 678, 682, 683, 684, 685, 686, 687, 689, 691, 692, 694, 695, 696, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 715, 716, 717, 718, 719, 721, 722, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 738, 740, 741, 742, 743, 744, 745, 747, 748, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761], "hard": [1, 687, 704, 710, 711, 736], "fifth": [1, 754], "better": [1, 8, 261, 709, 759], "autom": [1, 247, 708], "sixth": 1, "impos": 1, "test_group": [1, 8, 9, 10, 11, 26, 80, 85, 95, 97, 104, 110, 112, 119, 124, 129, 141, 143, 148, 153, 156, 160, 162, 167, 169, 176, 178, 184, 203, 211, 221, 226, 232, 235, 237, 281, 284, 293, 296, 302, 306, 315, 324, 337, 342, 345, 348, 350, 366, 369, 378, 383, 386, 391, 396, 401, 404, 407, 411, 427, 433, 447, 454, 462, 471, 477, 480, 493, 524, 535, 543, 558, 561, 575, 589, 613, 639, 645, 658, 662, 671, 689, 703, 709, 710, 711], "resoltuion": 1, "test_cas": [1, 6, 8, 11, 31, 32, 43, 50, 55, 67, 70, 71, 74, 75, 82, 87, 89, 91, 99, 102, 106, 114, 117, 121, 127, 132, 135, 138, 145, 150, 158, 164, 171, 174, 180, 189, 195, 205, 213, 219, 224, 229, 239, 244, 245, 250, 269, 273, 287, 290, 299, 308, 310, 312, 317, 319, 321, 327, 330, 334, 341, 353, 355, 357, 359, 361, 363, 372, 375, 381, 389, 394, 413, 415, 417, 420, 430, 436, 439, 442, 450, 457, 460, 465, 468, 473, 475, 478, 482, 486, 491, 496, 498, 501, 503, 522, 526, 528, 530, 533, 539, 546, 549, 552, 554, 556, 564, 566, 570, 572, 578, 580, 584, 586, 592, 594, 598, 600, 616, 618, 622, 624, 628, 642, 648, 651, 656, 666, 669, 685, 689, 694, 703, 709, 710, 711, 712, 751, 759], "rigid": [1, 755], "applic": [1, 704, 745], "final": [1, 3, 7, 190, 244, 245, 247, 250, 264, 272, 348, 604, 685, 689, 692, 694, 695, 696, 698, 702, 703, 709, 710, 711, 716, 720, 722, 745, 747, 751, 756], "help": [1, 6, 703, 708, 710, 711, 714, 734, 739, 745], "either": [1, 6, 7, 8, 45, 245, 692, 703, 705, 707, 709, 710, 711, 712, 718, 719, 721, 722, 725, 738, 745, 759], "interest": [1, 710, 711, 745, 751], "address": [1, 712], "hope": [1, 704], "significantli": [1, 8, 702, 716, 738, 745, 751], "easier": [1, 703, 704, 705, 710, 711, 712, 745, 759, 761], "12": [1, 8, 45, 520, 686, 687, 689, 690, 699, 702, 718, 745, 752, 755], "luke": 1, "van": 1, "roekel": 1, "written": [1, 7, 8, 11, 26, 506, 518, 689, 703, 710, 755], "primarili": [1, 715], "model": [1, 3, 6, 11, 12, 13, 14, 15, 17, 70, 71, 73, 82, 87, 99, 114, 150, 164, 171, 178, 201, 211, 213, 229, 239, 242, 244, 245, 246, 247, 248, 250, 252, 256, 257, 258, 259, 260, 261, 262, 264, 267, 281, 293, 296, 302, 410, 411, 413, 415, 417, 462, 470, 477, 684, 685, 689, 690, 691, 694, 705, 706, 707, 708, 710, 711, 712, 714, 715, 717, 718, 720, 721, 722, 723, 724, 725, 726, 727, 729, 730, 731, 732, 733, 734, 735, 736, 739, 740, 741, 742, 743, 745, 746, 747, 748, 750, 751, 752, 754, 757, 758, 759], "get": [1, 7, 8, 11, 14, 15, 17, 26, 27, 45, 60, 62, 64, 68, 261, 331, 363, 399, 400, 540, 703, 704, 705, 707, 712, 725, 738, 759], "direct": [1, 8, 685, 686, 687, 692, 694, 696, 702, 703, 710, 733, 735, 741, 748, 750, 751, 758], "common": [1, 7, 8, 20, 26, 31, 245, 247, 248, 255, 256, 685, 686, 687, 692, 694, 695, 696, 703, 704, 706, 707, 712, 735, 759, 760, 761], "languag": [1, 612, 733, 735], "rather": [1, 3, 8, 11, 12, 36, 211, 213, 261, 685, 692, 703, 706, 710, 711, 736, 738, 745], "custom": [1, 6, 8, 35, 36, 37, 70, 71, 73, 242, 684, 703, 709, 711, 712, 733, 735, 759], "tag": [1, 703, 708], "importantli": 1, "possibl": [1, 3, 8, 46, 264, 689, 692, 703, 704, 709, 710, 711, 738, 745, 747], "balanc": [1, 189, 195, 252, 689, 692, 695, 725, 745, 748, 751], "readabl": [1, 704, 711], "reusabl": 1, "risk": [1, 705, 748], "redesign": 1, "difficult": [1, 261, 703, 704, 734, 736], "contribut": [1, 704], "go": [1, 8, 521, 522, 524, 526, 528, 530, 696, 703, 704, 705, 709, 710, 711, 733, 735, 745, 752], "best": [1, 703], "reusibl": 1, "In": [1, 3, 7, 8, 11, 245, 247, 252, 264, 342, 688, 689, 698, 703, 705, 708, 709, 710, 711, 712, 715, 725, 728, 729, 734, 736, 738, 745, 747, 748, 751, 754, 755, 756, 757, 758, 759, 760, 761], "extern": [1, 11, 242, 684, 703, 704, 712, 714, 739], "often": [1, 11, 703, 704, 707, 709, 710, 712, 760, 761], "mpas_tool": [1, 8, 244, 245, 246, 247, 250, 264, 685, 686, 687, 691, 692, 694, 695, 696, 699, 700, 702, 703, 704, 710, 711, 745], "outsid": [1, 143, 703, 722, 726, 727, 751], "prefer": [1, 3, 703, 710, 711, 712, 715], "itself": [1, 7, 8, 11, 255, 703, 709, 710, 711, 759], "attempt": [1, 261, 708, 734, 736], "led": [1, 704], "frequent": [1, 242, 684], "unintend": 1, "consequ": 1, "link": [1, 3, 7, 8, 12, 13, 38, 261, 612, 689, 692, 695, 703, 704, 705, 710, 711, 714, 734, 739, 745, 759], "chang": [1, 6, 8, 25, 50, 242, 264, 684, 695, 703, 704, 705, 707, 709, 710, 711, 712, 715, 719, 720, 733, 735, 736, 738, 740, 745, 748, 751, 752, 754, 755, 758, 759, 761], "one": [1, 3, 6, 7, 8, 12, 24, 26, 34, 35, 38, 61, 70, 71, 73, 75, 85, 95, 97, 110, 112, 141, 148, 156, 162, 167, 169, 237, 244, 245, 246, 248, 249, 250, 252, 256, 267, 280, 293, 337, 404, 462, 493, 684, 685, 686, 687, 689, 692, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 715, 716, 721, 725, 729, 733, 734, 735, 736, 738, 743, 744, 745, 747, 748, 751, 753, 754, 755, 756, 759, 760, 761], "sophist": [1, 703], "method": [1, 8, 9, 11, 19, 20, 26, 27, 28, 29, 30, 31, 36, 42, 43, 47, 50, 51, 52, 55, 56, 78, 79, 80, 81, 82, 84, 85, 86, 87, 89, 91, 94, 95, 96, 97, 98, 99, 102, 104, 105, 106, 109, 110, 111, 112, 113, 114, 117, 119, 120, 121, 124, 126, 127, 129, 131, 132, 134, 135, 138, 140, 141, 142, 143, 144, 145, 148, 149, 150, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 174, 176, 177, 178, 179, 180, 183, 184, 187, 189, 191, 195, 197, 202, 203, 205, 207, 211, 213, 214, 218, 219, 221, 222, 223, 224, 226, 227, 228, 229, 232, 233, 234, 235, 236, 237, 238, 239, 243, 252, 264, 265, 269, 273, 276, 279, 281, 283, 284, 286, 287, 290, 293, 295, 296, 298, 299, 302, 304, 305, 306, 308, 310, 312, 314, 315, 317, 319, 321, 323, 324, 327, 330, 334, 336, 337, 342, 345, 348, 350, 352, 353, 355, 357, 359, 361, 363, 366, 369, 372, 375, 378, 380, 381, 383, 386, 389, 391, 394, 396, 401, 404, 407, 410, 411, 413, 415, 417, 419, 420, 427, 430, 433, 436, 439, 442, 447, 449, 450, 452, 454, 456, 457, 460, 462, 464, 465, 468, 470, 471, 473, 475, 477, 478, 480, 482, 484, 486, 491, 493, 496, 498, 501, 503, 506, 518, 521, 522, 524, 526, 528, 530, 532, 533, 535, 539, 543, 546, 549, 551, 552, 554, 556, 558, 559, 560, 561, 564, 566, 570, 572, 575, 578, 580, 584, 586, 589, 592, 594, 598, 600, 613, 616, 618, 622, 624, 627, 628, 639, 641, 642, 645, 647, 648, 651, 656, 658, 660, 661, 662, 664, 666, 669, 671, 673, 689, 691, 703, 704, 709, 716, 725, 745], "beyond": [1, 698, 717], "isol": 1, "read": [1, 8, 9, 11, 14, 17, 26, 421, 422, 423, 490, 612, 632, 689, 703, 704, 710, 711, 747, 756], "larg": [1, 8, 264, 689, 692, 695, 703, 717, 730, 736, 745, 748, 755], "unavail": 1, "files_for_e3sm": [1, 8, 703, 712, 740], "dedic": 1, "again": [1, 6, 259, 264, 703, 705, 706, 709, 710, 711, 745, 759], "from": [1, 2, 3, 6, 7, 8, 9, 11, 12, 14, 17, 26, 28, 34, 35, 37, 38, 59, 60, 61, 65, 69, 71, 74, 75, 91, 93, 106, 108, 121, 123, 127, 132, 135, 174, 178, 180, 182, 187, 202, 244, 245, 246, 247, 248, 250, 252, 255, 256, 261, 264, 268, 269, 272, 287, 327, 348, 350, 353, 355, 357, 359, 361, 363, 375, 383, 386, 391, 396, 399, 400, 421, 454, 465, 473, 485, 489, 490, 493, 496, 498, 501, 503, 506, 511, 518, 540, 546, 552, 564, 578, 592, 604, 605, 606, 612, 616, 628, 680, 685, 686, 687, 688, 689, 690, 691, 692, 694, 695, 696, 697, 698, 699, 701, 702, 704, 706, 707, 708, 709, 710, 711, 712, 715, 718, 719, 720, 721, 722, 723, 725, 726, 727, 729, 730, 731, 732, 733, 735, 736, 738, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761], "awkward": [1, 710], "involv": [1, 8, 75, 689, 703, 707, 756], "pio": [1, 24, 61, 685, 689, 692, 694, 695, 696, 698, 702, 703], "task": [1, 8, 11, 20, 21, 24, 60, 61, 65, 82, 87, 99, 114, 135, 150, 164, 171, 229, 239, 287, 308, 317, 363, 375, 457, 465, 473, 498, 526, 703, 704, 710, 711, 730, 731, 732, 733, 734, 735, 747], "node": [1, 8, 11, 21, 23, 24, 61, 63, 64, 65, 261, 704, 705, 712, 730, 731, 732, 733, 734, 735, 745, 759], "exacerb": 1, "even": [1, 8, 12, 36, 261, 703, 704, 705, 710, 711, 712, 725, 734, 745, 759], "processor": [1, 156, 689, 703, 711, 715, 717, 718, 741, 744, 753, 755], "overrid": [1, 6, 8, 19, 20, 22, 28, 30, 36, 47, 50, 51, 52, 81, 101, 116, 137, 152, 157, 163, 173, 231, 241, 289, 292, 301, 459, 467, 488, 500, 559, 668, 703, 704, 711, 712, 735, 759], "stride": [1, 24, 61, 703], "updat": [1, 6, 7, 11, 14, 20, 21, 23, 25, 242, 247, 259, 264, 275, 485, 538, 540, 684, 685, 686, 689, 691, 692, 694, 695, 696, 698, 702, 706, 708, 709, 710, 745, 747, 751, 759], "automat": [1, 7, 8, 689, 703, 704, 705, 710, 711, 712, 725, 730, 731, 732, 733, 734, 735, 745, 759], "accommod": [1, 11, 21, 65, 695, 710], "dataset": [1, 266, 369, 372, 489, 506, 518, 604, 609, 676, 682, 683, 703, 710, 711, 745], "load": [1, 261, 262, 275, 705, 710, 711, 712, 730, 731, 732, 733, 734, 735, 756, 757, 759], "conda": [1, 5, 6, 8, 67, 242, 257, 258, 259, 260, 261, 684, 689, 703, 704, 708, 710, 711, 712, 730, 731, 732, 733, 735], "environ": [1, 5, 6, 63, 242, 257, 258, 259, 260, 261, 684, 689, 703, 704, 708, 710, 711, 712, 730, 731, 732, 733, 734, 735, 745], "per": [1, 8, 11, 21, 24, 61, 65, 206, 407, 703, 712, 725, 730, 731, 732, 733, 734, 735, 741, 743, 744, 751, 753, 755, 759], "advantag": [1, 8, 261, 689, 704, 734], "aspect": [1, 743], "unnecessarili": 1, "redund": [1, 6, 676, 682, 683, 742], "converg": [1, 79, 80, 82, 243, 522, 533, 535, 539, 546, 549, 603, 605, 606, 611, 688, 697, 699, 700, 703, 708, 709, 715, 716, 744, 752, 753, 756], "sort": [1, 703], "anoth": [1, 3, 6, 7, 8, 12, 74, 75, 247, 267, 684, 687, 692, 695, 703, 704, 705, 707, 709, 710, 711, 712, 718, 720, 723, 736, 741, 745, 748, 750, 751, 759, 760, 761], "properti": [1, 8, 703, 711, 734, 744, 753], "besid": [1, 711], "uniqu": [1, 703, 704, 709, 710, 711], "overwrit": [1, 38, 507, 520], "activ": [1, 261, 551, 689, 698, 733, 734, 735, 745, 751, 754, 759], "build": [1, 6, 8, 47, 52, 184, 187, 191, 197, 202, 203, 207, 211, 214, 242, 248, 255, 256, 257, 258, 259, 260, 261, 262, 684, 688, 699, 700, 703, 704, 706, 708, 710, 711, 712, 718, 721, 725, 729, 730, 731, 732, 733, 734, 735], "queu": [1, 63], "10": [1, 8, 45, 245, 246, 247, 249, 250, 253, 264, 276, 493, 684, 685, 686, 689, 690, 692, 694, 695, 696, 702, 703, 710, 711, 712, 718, 719, 721, 722, 723, 726, 727, 729, 738, 741, 743, 745, 747, 748, 750, 751, 752, 758, 760], "matt": 1, "hoffman": [1, 714], "longer": [1, 293, 462, 685, 689, 694, 695, 710, 719, 741, 744, 745, 748, 751, 753, 754, 758, 761], "term": [1, 11, 696, 707, 708, 709, 710, 711, 752], "ot": [1, 7, 710], "add": [1, 3, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 27, 28, 32, 49, 54, 58, 248, 264, 272, 276, 399, 689, 703, 704, 705, 707, 709, 710, 711, 712, 718, 734, 735, 744, 745, 751, 753, 755, 756, 759], "reduc": [1, 264, 493, 703, 736, 748], "wall": [1, 758, 759], "clock": [1, 759], "differ": [1, 8, 36, 47, 52, 75, 235, 242, 243, 245, 246, 248, 249, 250, 256, 261, 287, 296, 473, 477, 605, 684, 685, 686, 687, 689, 691, 694, 696, 702, 703, 704, 705, 707, 709, 710, 711, 712, 715, 716, 717, 722, 725, 728, 729, 733, 735, 740, 741, 743, 744, 745, 750, 751, 752, 753, 754, 755, 756, 758], "viscos": [1, 287, 296, 299, 411, 473, 477, 478, 685, 686, 690, 692, 694, 703, 704, 710, 711, 741, 746, 750], "baroclin": [1, 31, 279, 280, 281, 284, 287, 290, 293, 296, 299, 302, 372, 685, 703, 710, 711, 741], "channel": [1, 31, 279, 281, 284, 287, 290, 293, 296, 299, 302, 372, 687, 703, 706, 710, 711, 734, 741, 743, 759], "rpe": [1, 296, 299, 477, 478, 703, 710, 741, 750], "full": [1, 8, 11, 69, 97, 112, 148, 162, 169, 237, 249, 493, 510, 677, 678, 685, 688, 689, 692, 697, 703, 705, 708, 710, 711, 718, 719, 721, 722, 723, 729, 734, 738, 741, 744, 745, 747, 748, 750, 751, 752, 753, 755, 757, 758, 759], "choic": [1, 689, 709, 716], "mind": [1, 3, 6], "addit": [1, 3, 7, 8, 11, 23, 272, 689, 703, 704, 705, 710, 711, 714, 715, 720, 722, 725, 728, 729, 740, 745, 751], "minim": [1, 686, 718], "modif": [1, 3, 7, 247, 703, 711], "particularli": [1, 8, 703, 706, 709, 710, 745, 748], "mark": [1, 705], "petersen": [1, 705, 710, 741, 750], "build_base_mesh": 1, "py": [1, 8, 42, 244, 245, 246, 247, 250, 261, 703, 704, 705, 707, 708, 709, 710, 711, 712], "complex": [1, 8, 51, 703, 704, 711, 736], "dx": 1, "min": [1, 703, 710, 721, 722, 726, 727, 729, 741, 748, 750, 752, 758], "max": [1, 703, 709, 710, 721, 722, 726, 727, 729, 744], "linear": [1, 276, 510, 695, 702, 710, 741, 743, 750, 754, 755, 758], "log": [1, 11, 26, 60, 65, 75, 93, 108, 123, 182, 187, 202, 272, 276, 510, 703, 705, 708, 711, 755, 756, 759], "someth": [1, 6, 7, 705], "fundament": [1, 703], "soft": [1, 730, 731, 734, 759], "add_initial_condit": 1, "quickli": [1, 8, 717, 748], "iter": [1, 264, 267, 375, 454, 465, 498, 684, 692, 695, 712, 736, 745, 748, 751], "until": [1, 176, 703, 704], "peopl": [1, 712], "workflow": [1, 703, 705], "ideal": [1, 11, 21, 65, 82, 87, 99, 114, 135, 150, 164, 171, 229, 239, 287, 308, 317, 363, 375, 457, 465, 473, 498, 526, 702, 703, 704, 708, 709, 710, 712, 728, 736, 751, 754, 758, 760], "possibli": [1, 8, 247, 703, 705, 710, 711], "cach": [1, 2, 9, 11, 12, 70, 71, 708, 712, 725, 730, 731, 732, 733, 734, 735, 759, 761], "version": [1, 6, 8, 36, 67, 74, 75, 242, 628, 684, 685, 689, 695, 703, 704, 705, 707, 710, 711, 712, 718, 721, 722, 728, 729, 733, 734, 735, 739, 741, 742, 743, 745, 750, 751, 752, 754, 757, 758, 759], "submit": [1, 734], "job": [1, 63, 261, 708, 715, 730, 731, 732, 733, 735, 751], "13": [1, 8, 45, 710, 741, 745, 750], "write": [1, 8, 14, 15, 17, 23, 24, 25, 264, 278, 446, 490, 636, 637, 655, 675, 689, 690, 695, 702, 703, 705, 710, 711], "function": [1, 7, 8, 22, 44, 51, 60, 101, 116, 137, 146, 152, 156, 173, 186, 188, 201, 207, 231, 241, 244, 245, 246, 247, 248, 250, 252, 256, 261, 264, 289, 292, 301, 340, 426, 459, 467, 488, 500, 567, 581, 595, 603, 604, 608, 619, 638, 668, 689, 691, 695, 700, 703, 704, 708, 709, 710, 711, 721, 722, 726, 727, 729, 740, 744, 745, 747, 750, 753, 755, 756, 758, 760], "class": [1, 8, 9, 11, 19, 26, 31, 36, 42, 43, 50, 55, 78, 79, 80, 82, 84, 85, 87, 89, 91, 94, 95, 97, 99, 102, 104, 106, 109, 110, 112, 114, 117, 119, 121, 124, 127, 129, 132, 134, 135, 138, 140, 141, 143, 145, 148, 150, 153, 155, 156, 158, 160, 162, 164, 166, 167, 169, 171, 174, 176, 178, 180, 183, 184, 189, 195, 203, 205, 211, 213, 218, 219, 221, 223, 224, 226, 228, 229, 232, 234, 235, 237, 239, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 256, 264, 265, 269, 273, 279, 281, 284, 287, 290, 293, 296, 299, 302, 305, 306, 308, 310, 312, 314, 315, 317, 319, 321, 323, 324, 327, 330, 334, 336, 337, 342, 345, 348, 350, 353, 355, 357, 359, 361, 363, 366, 369, 372, 375, 378, 381, 383, 386, 389, 391, 394, 396, 401, 404, 407, 410, 411, 413, 415, 417, 419, 420, 427, 430, 433, 436, 439, 442, 447, 450, 452, 454, 457, 460, 462, 465, 468, 470, 471, 473, 475, 477, 478, 480, 482, 484, 486, 491, 493, 496, 498, 501, 503, 506, 518, 521, 522, 524, 526, 528, 530, 532, 533, 535, 539, 543, 546, 549, 551, 552, 554, 556, 558, 560, 561, 564, 566, 570, 572, 575, 578, 580, 584, 586, 589, 592, 594, 598, 600, 613, 616, 618, 622, 624, 627, 628, 639, 642, 645, 648, 651, 656, 658, 661, 662, 666, 669, 671, 684, 685, 686, 687, 688, 690, 691, 692, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 709, 710, 711], "larger": [1, 243, 722, 726, 727], "descend": [1, 264, 689, 703, 704, 710, 711], "testcas": [1, 6, 8, 11, 32, 43, 50, 55, 70, 71, 74, 75, 82, 87, 89, 91, 99, 102, 106, 114, 117, 127, 132, 135, 138, 145, 150, 158, 164, 171, 174, 180, 219, 224, 229, 239, 273, 287, 290, 299, 308, 312, 317, 321, 326, 332, 335, 339, 341, 344, 347, 349, 354, 356, 358, 360, 362, 363, 364, 368, 371, 373, 376, 381, 385, 388, 389, 393, 394, 398, 403, 406, 409, 429, 431, 435, 438, 440, 450, 457, 460, 465, 468, 473, 475, 478, 482, 486, 491, 496, 498, 501, 503, 522, 526, 528, 530, 533, 537, 541, 545, 546, 549, 554, 556, 563, 568, 571, 577, 582, 585, 591, 596, 599, 615, 620, 623, 643, 649, 666, 669, 689, 702, 704, 709, 710, 711, 712, 725, 741, 745, 747, 748, 750, 752, 754, 757, 758, 759], "equival": [1, 703, 705, 711, 725, 730], "config_driv": [1, 711], "config_": [1, 711], "collect": [1, 7, 8, 31, 62, 78, 265, 605, 703, 707, 710, 711, 715], "struck": 1, "improv": [1, 689, 745], "jinja2": [1, 17, 25, 689, 703], "templat": [1, 2, 17, 25, 243, 264, 689, 695, 708, 711, 712], "manipul": [1, 704], "usr": [1, 42], "bin": [1, 705, 733, 735, 759], "env": [1, 705, 733, 735], "pickl": [1, 6, 8, 759], "configpars": [1, 8, 65, 703, 709, 710], "loggingcontext": [1, 8], "def": [1, 3, 7, 8, 689, 703, 704, 709, 710, 711], "main": [1, 4, 8, 19, 261, 689, 703, 704, 705, 710, 711, 715, 740, 745, 760], "open": [1, 5, 272, 490, 695, 710, 711, 745, 751], "test_case_": 1, "rb": 1, "handl": [1, 8, 243, 489, 695, 703, 710, 711, 734, 744, 753, 755], "steps_to_run": [1, 6, 8, 26, 69, 75, 703, 709, 712], "new_step_log_fil": [1, 26], "interpol": [1, 184, 187, 202, 203, 211, 266, 269, 442, 443, 444, 489, 496, 552, 651, 652, 653, 691, 695, 701, 709, 710, 712, 725, 748, 751, 756], "extendedinterpol": [1, 709], "config_filenam": [1, 11, 26, 703], "stdout": [1, 6, 8, 11, 26, 272, 703, 711], "stderr": [1, 8, 11, 26, 703], "test_nam": 1, "replac": [1, 7, 8, 14, 15, 17, 23, 25, 26, 38, 490, 689, 703, 704, 709, 710, 711, 712, 745, 759], "_": [1, 689, 703, 705, 710, 725], "logger": [1, 8, 11, 26, 42, 60, 65, 93, 108, 123, 182, 187, 202, 272, 698, 702, 703, 710, 711], "__name__": 1, "__main__": 1, "curli": 1, "brace": 1, "element": [1, 676, 682, 683], "variabl": [1, 3, 6, 9, 11, 26, 30, 31, 43, 50, 55, 59, 63, 74, 75, 80, 81, 82, 85, 87, 89, 91, 95, 97, 99, 102, 104, 106, 114, 135, 145, 150, 156, 157, 158, 162, 163, 164, 174, 184, 192, 198, 203, 206, 207, 208, 211, 213, 215, 219, 224, 229, 239, 245, 248, 249, 252, 253, 254, 256, 261, 264, 267, 269, 273, 281, 284, 287, 290, 293, 296, 299, 302, 306, 315, 321, 324, 327, 330, 337, 348, 350, 353, 361, 363, 366, 369, 372, 378, 383, 391, 396, 412, 420, 427, 430, 433, 436, 439, 442, 454, 457, 460, 462, 472, 478, 481, 486, 491, 493, 496, 501, 503, 506, 508, 510, 511, 518, 519, 522, 525, 526, 528, 530, 533, 535, 539, 547, 552, 554, 556, 558, 559, 561, 564, 566, 572, 575, 578, 580, 586, 589, 592, 594, 600, 613, 616, 618, 624, 628, 639, 642, 645, 648, 651, 656, 662, 666, 669, 671, 676, 682, 683, 689, 692, 695, 696, 698, 702, 703, 704, 705, 706, 710, 711, 714, 715, 718, 719, 721, 722, 723, 725, 726, 727, 729, 730, 731, 732, 733, 734, 735, 736, 739, 740, 741, 745, 748, 750, 751, 752, 754, 758, 759], "valu": [1, 7, 8, 15, 23, 75, 80, 82, 156, 164, 243, 264, 276, 296, 317, 477, 506, 508, 509, 510, 513, 514, 603, 604, 605, 606, 610, 611, 685, 687, 689, 694, 695, 698, 701, 702, 703, 704, 708, 709, 710, 711, 712, 716, 721, 722, 725, 726, 727, 729, 738, 741, 743, 745, 746, 747, 750, 751, 752, 754, 755, 756, 757, 758], "content": [1, 6, 8, 703, 704, 710, 711, 759], "normal": [1, 703, 705, 734, 751], "contrast": [1, 8, 709, 736, 745, 754], "seri": [1, 79, 80, 243, 264, 267, 299, 478, 506, 508, 509, 510, 511, 513, 514, 515, 516, 517, 518, 519, 688, 689, 695, 697, 699, 700, 703, 708, 710, 715, 716, 722, 740, 742, 748, 751], "format": [1, 7, 8, 252, 420, 457, 567, 581, 595, 610, 619, 666, 669, 671, 689, 692, 695, 698, 702, 703, 704, 709, 710, 711, 712, 740, 743, 745, 748, 751, 755], "statement": [1, 3, 8, 703, 707, 711], "syntax": [1, 3, 704, 711], "immutable_stream": [1, 689, 703, 710, 711], "filename_templ": [1, 689, 703, 710, 711], "restart": [1, 26, 97, 112, 135, 148, 162, 169, 237, 243, 244, 245, 246, 247, 248, 249, 250, 255, 256, 293, 348, 350, 353, 355, 357, 359, 361, 383, 391, 396, 400, 404, 462, 685, 687, 689, 692, 694, 695, 696, 703, 704, 707, 710, 715, 718, 719, 721, 722, 723, 729, 740, 741, 745, 748], "type": [1, 7, 89, 91, 95, 97, 99, 102, 104, 106, 119, 143, 145, 156, 158, 162, 164, 174, 219, 224, 264, 276, 315, 453, 454, 462, 491, 493, 687, 689, 698, 702, 703, 704, 706, 707, 709, 710, 711, 712, 718, 723, 741, 743, 744, 745, 748, 750, 751, 752, 753, 757, 758, 761], "output_interv": [1, 689, 703, 710, 711], "0000_00": [1, 702, 703, 710, 711], "00": [1, 8, 702, 703, 710, 711, 733, 735, 751, 759], "01": [1, 687, 702, 703, 710, 711, 743, 751], "clobber_mod": [1, 703, 710, 711], "truncat": [1, 700, 703, 710, 711, 756], "var_struct": [1, 703, 710], "tracer": [1, 264, 521, 560, 604, 609, 685, 688, 689, 694, 696, 697, 699, 703, 710, 744, 745, 752, 753, 755], "var": [1, 443, 446, 703, 710, 711], "xtime": [1, 446, 689, 703, 710, 711], "normalveloc": [1, 8, 244, 245, 248, 685, 689, 696, 703, 710, 711], "layerthick": [1, 8, 264, 676, 680, 681, 682, 683, 685, 689, 698, 702, 703, 710, 711], "basic": [1, 6, 7, 705, 712, 734, 759], "config_write_output_on_startup": [1, 703, 710], "config_run_dur": [1, 703, 710, 711], "15": [1, 8, 45, 247, 454, 685, 689, 690, 692, 694, 695, 703, 710, 711, 715, 719, 720, 741, 744, 746, 748, 750, 751, 753, 759], "config_use_mom_del2": [1, 703, 710], "config_implicit_bottom_drag_coeff": [1, 703, 710, 711], "1": [1, 6, 7, 8, 11, 45, 82, 87, 99, 114, 135, 150, 164, 171, 229, 239, 244, 245, 246, 247, 248, 249, 250, 253, 255, 256, 264, 268, 272, 281, 287, 302, 308, 317, 407, 457, 465, 473, 490, 493, 498, 526, 566, 580, 594, 604, 618, 676, 682, 683, 685, 686, 687, 689, 690, 694, 695, 698, 702, 703, 706, 709, 710, 711, 712, 716, 717, 718, 719, 721, 722, 723, 725, 726, 727, 729, 733, 734, 735, 736, 738, 741, 742, 743, 744, 745, 746, 747, 748, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 762], "0e": [1, 703, 710, 711], "2": [1, 3, 8, 245, 246, 247, 248, 250, 256, 262, 264, 302, 407, 605, 609, 685, 689, 690, 692, 696, 697, 702, 703, 709, 710, 711, 712, 715, 718, 719, 720, 721, 722, 723, 725, 726, 727, 729, 733, 734, 735, 738, 741, 743, 744, 745, 748, 750, 751, 752, 753, 755, 756, 758, 759], "config_use_cvmix_background": [1, 703, 710], "config_cvmix_background_diffus": [1, 703, 710], "0": [1, 3, 6, 7, 8, 45, 75, 247, 257, 258, 259, 260, 261, 262, 264, 268, 272, 276, 490, 513, 514, 609, 676, 681, 682, 683, 687, 689, 692, 702, 703, 704, 706, 710, 711, 712, 714, 716, 717, 718, 719, 720, 721, 722, 723, 725, 726, 727, 729, 734, 735, 738, 739, 741, 742, 743, 744, 745, 746, 747, 748, 750, 751, 752, 753, 754, 755, 758, 759, 762], "config_cvmix_background_viscos": [1, 703, 710], "4": [1, 7, 8, 104, 176, 234, 244, 245, 246, 248, 250, 256, 281, 284, 345, 411, 685, 687, 689, 690, 692, 694, 696, 698, 699, 702, 703, 704, 708, 709, 710, 711, 712, 717, 718, 719, 721, 722, 723, 725, 727, 729, 734, 739, 740, 741, 743, 744, 745, 746, 748, 750, 751, 752, 753, 754, 755, 758, 759], "regard": [1, 3], "whole": [1, 26, 703, 704, 710, 748, 751, 759], "degre": [1, 44, 51, 52, 57, 382, 390, 395, 451, 573, 587, 601, 625, 689, 712, 741, 745, 748, 750, 751, 752], "left": [1, 6, 264, 710, 716, 738, 744, 752, 758], "across": [1, 7, 8, 156, 246, 264, 276, 685, 687, 692, 697, 703, 704, 707, 708, 710, 711, 737, 745], "increas": [1, 493, 605, 689, 704, 709, 716, 720, 751], "simpler": [1, 705, 710, 711, 736], "perhap": [1, 16, 703], "less": [1, 324, 327, 703, 716, 725, 738, 745], "creation": [1, 689, 712, 745], "comment": [1, 7, 703, 709, 712, 719], "certain": [1, 8, 36, 276, 420, 703, 705, 712, 756], "familiar": [1, 710, 711], "somewher": 1, "recommend": [1, 6, 7, 8, 703, 704, 705, 734], "With": [1, 705, 710, 711, 751], "essenti": [1, 6, 703], "inevit": 1, "minimum": [1, 8, 276, 489, 490, 508, 509, 510, 513, 514, 689, 703, 709, 710, 711, 712, 721, 722, 726, 727, 729, 738, 741, 742, 743, 744, 745, 747, 748, 750, 751, 752, 753, 755, 757, 758], "level": [1, 3, 8, 247, 264, 276, 399, 400, 453, 454, 462, 485, 491, 493, 604, 676, 677, 678, 679, 680, 681, 682, 683, 685, 689, 692, 695, 703, 704, 710, 711, 712, 717, 718, 719, 720, 721, 722, 723, 726, 727, 729, 741, 742, 743, 745, 746, 748, 750, 751, 752, 753, 758, 761], "learn": [1, 704], "curv": [1, 704, 754], "skill": [1, 704], "pai": 1, "off": [1, 6, 276, 686, 705, 706, 725, 728, 752], "cannot": [1, 8, 243, 703, 710], "organ": [1, 708], "greatli": 1, "simplifi": [1, 8, 692, 748], "cfg": [1, 8, 28, 703, 704, 705, 709, 710, 711, 712, 745, 751, 759], "mpas_core_framework_modul": 1, "mpas_core_framework_packag": 1, "shared_step": 1, "test_group_shared_modul": 1, "framework_modul": 1, "framework_packag": 1, "slightli": [1, 8, 703], "convent": [1, 689, 710, 711, 745], "mpascor": [1, 11, 26, 31, 62, 279, 305, 314, 336, 410, 452, 470, 521, 551, 661, 703, 704, 710, 711], "now": [1, 703, 705, 710, 711, 712, 734, 754], "dynam": [1, 264, 267, 323, 336, 348, 350, 353, 355, 357, 359, 361, 383, 386, 391, 396, 490, 684, 689, 692, 703, 707, 708, 712, 718, 736, 745, 748, 751, 754, 758, 760], "landic": [1, 4, 6, 8, 9, 42, 72, 73, 77, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 703, 705, 707, 708, 710, 711, 712, 713, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 759, 760, 761], "testgroup": [1, 10, 11, 26, 703, 704, 710, 711], "legaci": [1, 6, 261, 264, 689, 703, 704, 707, 709, 710, 712, 714, 734, 739, 745, 749, 758, 762], "mismip3d": 1, "least": [1, 8, 703, 705, 745], "reason": [1, 20, 703, 704, 709, 710, 711, 745, 761], "next": [1, 7, 247, 703, 710, 711, 720, 725, 738, 745, 747, 748, 751, 759], "hierarchi": 1, "rel": [1, 3, 6, 8, 12, 16, 34, 35, 36, 70, 71, 73, 74, 75, 242, 245, 603, 604, 684, 703, 704, 705, 707, 710, 712, 741, 745, 748, 750, 751, 759, 760], "distinguish": [1, 489, 718, 720, 721, 723, 729, 741, 750], "variant": [1, 34, 244, 245, 246, 247, 250, 685, 686, 687, 689, 694, 695, 696, 698, 702, 703, 705, 710, 711, 716, 718, 719, 720, 721, 722, 723, 729, 734, 738, 741, 744, 745, 751, 754, 758], "vari": [1, 442, 486, 491, 493, 688, 689, 691, 695, 697, 699, 700, 703, 706, 709, 734, 738, 744, 745, 747, 748, 751, 753, 754], "characterist": 1, "base_mesh": [1, 8, 43, 50, 273, 381, 389, 394, 450, 703, 710], "refer": [1, 7, 11, 264, 268, 296, 477, 676, 679, 682, 683, 703, 704, 705, 707, 708, 709, 710, 711, 738, 741, 750, 758], "confus": [1, 6, 703, 704, 705, 708, 709, 710, 711], "tri": [1, 704], "clearer": 1, "distinct": [1, 704], "clean": [1, 3, 72, 703, 705, 708], "what": [1, 3, 8, 261, 689, 704, 710, 711, 733, 735, 759], "here": [1, 8, 243, 244, 245, 246, 248, 249, 250, 255, 256, 685, 686, 687, 689, 692, 694, 695, 696, 698, 702, 703, 704, 705, 709, 710, 711, 712, 719, 720, 723, 725, 730, 731, 732, 733, 734, 735, 745, 746, 755, 756, 759, 761], "combin": [1, 11, 12, 26, 36, 67, 93, 108, 123, 182, 205, 206, 207, 252, 264, 272, 698, 702, 703, 706, 709, 712, 715, 722, 725, 745, 759], "self": [1, 8, 28, 57, 244, 245, 250, 264, 442, 685, 689, 692, 694, 698, 702, 703, 704, 709, 710, 711, 712, 756, 757], "add_input_fil": [1, 8, 245, 703, 709, 710, 711], "run_model": [1, 8, 91, 106, 114, 180, 243, 244, 245, 698, 702, 703, 710, 711, 717, 718, 720, 721, 723, 729], "str": [1, 8, 9, 11, 12, 14, 15, 16, 17, 23, 24, 25, 26, 31, 34, 35, 37, 38, 39, 43, 50, 55, 59, 60, 61, 65, 67, 69, 70, 71, 72, 73, 74, 75, 80, 82, 85, 87, 89, 91, 93, 95, 97, 99, 102, 104, 106, 108, 114, 119, 135, 145, 150, 156, 158, 162, 164, 171, 180, 187, 188, 190, 191, 192, 196, 197, 198, 202, 206, 207, 208, 214, 215, 219, 224, 229, 239, 269, 272, 273, 275, 276, 277, 278, 280, 281, 284, 287, 290, 293, 296, 299, 302, 308, 315, 317, 321, 328, 330, 331, 334, 348, 350, 353, 355, 357, 359, 361, 363, 366, 369, 378, 381, 383, 389, 391, 394, 396, 399, 400, 420, 427, 430, 433, 436, 442, 447, 450, 453, 454, 457, 460, 462, 473, 478, 485, 486, 490, 491, 493, 506, 508, 510, 518, 522, 526, 528, 530, 535, 547, 552, 554, 556, 558, 606, 609, 610, 611, 612, 628, 642, 651, 658, 662, 665, 666, 669, 671, 675, 703, 709, 710, 711], "__init__": [1, 8, 9, 11, 26, 31, 36, 42, 43, 50, 55, 78, 79, 80, 82, 84, 85, 87, 89, 91, 94, 95, 97, 99, 102, 104, 106, 109, 110, 112, 114, 117, 119, 121, 124, 127, 129, 132, 134, 135, 138, 140, 141, 143, 145, 148, 150, 153, 155, 156, 158, 160, 162, 164, 166, 167, 169, 171, 174, 176, 178, 180, 183, 184, 189, 195, 203, 205, 211, 213, 218, 219, 221, 223, 224, 226, 228, 229, 232, 234, 235, 237, 239, 265, 269, 273, 279, 281, 284, 287, 290, 293, 296, 299, 302, 305, 306, 308, 310, 312, 314, 315, 317, 319, 321, 323, 324, 327, 330, 334, 336, 337, 342, 345, 348, 350, 353, 355, 357, 359, 361, 363, 366, 369, 372, 375, 378, 381, 383, 386, 389, 391, 394, 396, 401, 404, 407, 410, 411, 413, 415, 417, 419, 420, 427, 430, 433, 436, 439, 442, 447, 450, 452, 454, 457, 460, 462, 465, 468, 470, 471, 473, 475, 477, 478, 480, 482, 484, 486, 491, 493, 496, 498, 501, 503, 506, 518, 521, 522, 524, 526, 528, 530, 532, 533, 535, 539, 543, 546, 549, 551, 552, 554, 556, 558, 560, 561, 564, 566, 570, 572, 575, 578, 580, 584, 586, 589, 592, 594, 598, 600, 613, 616, 618, 622, 624, 627, 628, 639, 642, 645, 648, 651, 656, 658, 661, 662, 666, 669, 671, 689, 703, 704, 707, 709, 710, 711], "subdir": [1, 6, 11, 26, 43, 50, 55, 82, 87, 91, 99, 106, 114, 135, 150, 164, 171, 180, 229, 239, 269, 273, 287, 308, 317, 363, 381, 389, 394, 430, 450, 457, 473, 486, 526, 642, 666, 685, 694, 703, 709, 710, 711], "none": [1, 7, 8, 11, 12, 14, 15, 17, 21, 23, 24, 25, 26, 34, 35, 37, 39, 41, 43, 50, 55, 59, 61, 67, 69, 71, 72, 73, 74, 75, 82, 87, 91, 99, 106, 114, 135, 150, 156, 162, 164, 171, 180, 187, 189, 195, 202, 229, 239, 269, 272, 273, 276, 287, 308, 317, 321, 341, 363, 375, 381, 389, 394, 430, 450, 457, 465, 473, 486, 493, 498, 508, 509, 510, 518, 519, 520, 526, 642, 666, 703, 709, 710, 715, 716, 733, 738, 741, 748, 750, 751, 752, 753, 758], "min_cor": 1, "thread": [1, 8, 11, 20, 21, 26, 61, 65, 82, 87, 99, 114, 135, 150, 164, 171, 229, 239, 287, 302, 308, 317, 363, 375, 407, 457, 465, 473, 498, 526, 685, 689, 703, 707, 709, 710, 711, 712, 735, 740, 741, 745, 747, 757], "nu": [1, 287, 299, 473, 478, 685, 694, 703, 710, 711], "belong": [1, 8, 11, 21, 26, 31, 35, 43, 50, 55, 79, 80, 82, 84, 85, 87, 89, 91, 94, 95, 97, 99, 102, 104, 106, 109, 110, 112, 114, 117, 119, 121, 124, 127, 129, 132, 134, 135, 138, 140, 141, 143, 145, 148, 150, 153, 155, 156, 158, 160, 162, 164, 166, 167, 169, 171, 174, 176, 178, 180, 183, 184, 189, 195, 203, 205, 211, 213, 218, 219, 221, 223, 224, 226, 228, 229, 232, 234, 235, 237, 239, 269, 273, 279, 281, 284, 287, 290, 293, 296, 299, 302, 305, 306, 308, 310, 312, 314, 315, 317, 319, 321, 323, 324, 327, 330, 334, 336, 337, 342, 345, 348, 350, 353, 355, 357, 359, 361, 363, 366, 369, 372, 375, 378, 381, 383, 386, 389, 391, 394, 396, 401, 404, 407, 410, 411, 413, 415, 417, 419, 420, 427, 430, 433, 436, 439, 442, 447, 450, 452, 454, 457, 460, 462, 465, 468, 470, 471, 473, 475, 477, 478, 480, 482, 484, 486, 491, 493, 496, 498, 501, 503, 521, 522, 524, 526, 528, 530, 532, 533, 535, 539, 543, 546, 549, 551, 552, 554, 556, 558, 560, 561, 564, 566, 570, 572, 575, 578, 580, 584, 586, 589, 592, 594, 598, 600, 613, 616, 618, 622, 624, 627, 628, 639, 642, 645, 648, 651, 656, 658, 661, 662, 666, 669, 671, 689, 703, 704, 709, 710, 711, 761], "int": [1, 11, 18, 21, 35, 39, 43, 44, 45, 46, 47, 60, 64, 65, 82, 87, 99, 114, 135, 150, 164, 171, 187, 202, 229, 239, 267, 272, 276, 287, 308, 317, 324, 327, 328, 330, 363, 375, 400, 442, 457, 465, 473, 498, 526, 533, 535, 539, 546, 547, 549, 561, 564, 566, 570, 572, 575, 578, 580, 584, 586, 589, 592, 594, 598, 600, 604, 613, 616, 618, 622, 624, 689, 703, 709, 710], "fewer": [1, 11, 21, 65, 82, 87, 99, 114, 135, 150, 164, 171, 229, 239, 287, 308, 317, 363, 375, 457, 465, 473, 498, 526, 692, 703, 710, 748, 759], "below": [1, 6, 11, 21, 65, 82, 87, 99, 114, 135, 150, 164, 171, 229, 239, 247, 252, 261, 287, 308, 317, 363, 375, 457, 465, 473, 489, 490, 491, 493, 498, 526, 684, 689, 692, 703, 705, 709, 710, 711, 712, 714, 716, 721, 725, 729, 734, 736, 738, 744, 745, 747, 748, 751, 753, 755, 756, 757, 759], "fail": [1, 8, 11, 21, 26, 37, 75, 82, 87, 99, 114, 135, 150, 164, 171, 229, 239, 287, 308, 317, 363, 375, 457, 465, 473, 498, 526, 689, 703, 708, 710, 711, 712, 744, 745, 747, 753, 755, 757], "float": [1, 7, 8, 43, 45, 46, 50, 75, 82, 164, 268, 273, 276, 287, 299, 306, 315, 317, 321, 328, 381, 389, 394, 450, 473, 478, 486, 489, 490, 491, 493, 496, 498, 501, 503, 506, 508, 509, 510, 513, 514, 547, 685, 694, 695, 703, 710, 715, 717, 736], "super": [1, 689, 703, 704, 709, 710, 711], "add_namelist_fil": [1, 11, 689, 703, 710, 711], "baroclinic_channel": [1, 7, 8, 684, 693, 703, 704, 707, 710, 711, 739, 740, 749, 759, 760, 761], "config_mom_del2": [1, 685, 694, 703, 710], "add_namelist_opt": [1, 11, 692, 703, 710, 711], "add_streams_fil": [1, 11, 689, 692, 703, 710, 711], "add_output_fil": [1, 8, 689, 703, 710, 711], "add_model_as_input": [1, 8, 703, 710, 711], "popul": 1, "dure": [1, 8, 11, 23, 25, 26, 685, 686, 687, 689, 692, 694, 703, 704, 709, 712, 736, 745, 757, 758, 759, 760, 761], "phase": [1, 25, 247, 751, 757], "idea": [1, 8, 710, 711, 755], "runtim": [1, 8, 20, 23, 244, 245, 246, 247, 250, 692, 698, 702], "hopefulli": [1, 712], "tedium": 1, "later": [1, 8, 11, 21, 36, 75, 685, 694, 695, 703, 709, 710, 711, 712, 728, 745, 751], "order": [1, 6, 8, 689, 698, 700, 703, 705, 710, 711, 715, 725, 736, 745, 747, 751, 755, 756, 759], "top": [1, 264, 508, 676, 677, 678, 679, 680, 681, 682, 683, 692, 695, 703, 716, 736, 738, 750, 751], "partit": [1, 20, 59, 61, 244, 245, 246, 247, 250, 264, 275, 276, 685, 689, 692, 694, 695, 696, 698, 702, 703, 711, 712, 730, 731, 732, 733, 735, 745, 759], "execut": [1, 6, 8, 13, 60, 61, 70, 71, 73, 242, 684, 692, 695, 703, 705, 710, 711, 712, 730, 731, 732, 733, 734, 735, 759], "pass": [1, 6, 8, 26, 75, 689, 703, 704, 705, 707, 709, 710, 711, 715, 759], "directli": [1, 8, 11, 703, 704, 707, 708, 710, 711, 722, 745, 756, 757], "tread": 1, "maximum": [1, 8, 75, 276, 399, 508, 509, 510, 513, 514, 689, 712, 721, 722, 726, 727, 729, 738, 744, 745, 747, 753, 755, 757, 758], "memori": [1, 11, 21, 689, 703, 712, 745, 747, 756, 757], "amount": [1, 11, 21, 264, 689, 703, 704, 722, 726, 727, 737, 751], "disk": [1, 705, 712, 733, 735, 745], "workerqueu": 1, "explain": [1, 703, 704], "total": [1, 18, 64, 249, 519, 690, 692, 695, 703, 704, 716], "determin": [1, 8, 12, 20, 26, 61, 63, 146, 264, 685, 688, 689, 695, 697, 699, 703, 709, 710, 711, 715, 726, 727, 736, 738, 740, 741, 744, 745, 750, 751, 752, 753, 755, 757], "slurm": [1, 63, 66, 708, 712, 730, 731, 732, 733, 735, 759], "error": [1, 8, 11, 26, 243, 264, 328, 547, 603, 604, 605, 606, 608, 611, 628, 631, 688, 696, 697, 700, 701, 703, 704, 705, 708, 709, 710, 717, 755, 756, 757], "rais": [1, 7, 8, 11, 16, 37, 38, 63, 75, 685, 703, 710, 711, 755], "few": [1, 6, 11, 21, 65, 245, 248, 255, 256, 261, 685, 686, 687, 689, 692, 694, 695, 696, 703, 704, 710, 711, 712, 734, 739, 744, 745, 751, 753, 755], "particular": [1, 261, 689, 703, 705, 708, 709, 710, 711, 734, 745, 759], "otherwis": [1, 8, 493, 689, 703, 710, 730, 731, 732, 733, 734, 735, 754, 758], "mean": [1, 6, 8, 63, 174, 250, 328, 505, 506, 519, 547, 688, 695, 696, 697, 705, 710, 711, 736, 738, 740, 741, 745, 750, 758, 761], "non": [1, 8, 698, 702, 717, 745, 751, 758], "known": [1, 23, 688, 697, 699, 703, 709, 710, 711, 717, 745], "strategi": [1, 8], "happen": [1, 8, 75, 703, 710, 711, 722, 726, 727, 735, 744, 753, 755, 756], "care": [1, 8, 689, 703, 705, 711], "suffici": [1, 275], "worri": [1, 703], "globalocean": [1, 324, 337, 342, 345, 348, 350, 366, 369, 378, 383, 386, 391, 396, 401, 404, 407, 535, 543, 689, 703, 704, 709, 710, 711], "getint": [1, 698, 703, 709, 710, 711], "init_cor": [1, 712, 757], "init_min_cor": [1, 712, 757], "init_thread": [1, 712, 745, 747, 757], "forward_cor": [1, 712], "forward_min_cor": [1, 712], "forward_thread": [1, 712, 745, 747, 757], "ref_": 1, "alg_machine_data": 1, "root": [1, 70, 71, 73, 242, 328, 547, 684, 688, 696, 697, 703, 704, 705, 707, 712, 725, 730, 731, 732, 733, 734, 735, 738, 759], "mesh_databas": [1, 712, 730, 731, 732, 733, 734, 735, 759], "initial_condition_databas": [1, 712, 730, 731, 732, 733, 734, 735, 759], "bathymetry_databas": [1, 8, 264, 703, 712, 730, 731, 732, 733, 734, 735, 759], "ocean_database_root": [1, 8, 703, 712, 730, 731, 732, 733, 734, 735, 759], "project": [1, 3, 6, 42, 684, 705, 710, 711, 712, 725, 730, 734, 751], "regionalclim": 1, "common_mpa": 1, "grid": [1, 44, 51, 57, 184, 187, 188, 191, 197, 202, 203, 206, 211, 214, 244, 245, 246, 247, 250, 252, 264, 275, 278, 382, 390, 395, 411, 437, 443, 444, 451, 489, 496, 573, 587, 601, 625, 652, 653, 674, 675, 676, 677, 678, 679, 682, 683, 685, 687, 689, 690, 692, 694, 695, 696, 698, 702, 703, 710, 711, 712, 717, 725, 726, 727, 741, 742, 743, 744, 745, 746, 748, 750, 751, 752, 753, 756, 758], "mali": [1, 6, 78, 82, 85, 87, 95, 97, 99, 110, 112, 114, 135, 141, 148, 150, 156, 162, 164, 167, 169, 171, 184, 187, 190, 191, 192, 196, 197, 198, 202, 203, 206, 207, 208, 211, 214, 215, 229, 235, 237, 239, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 255, 256, 261, 703, 705, 707, 708, 712, 714, 715, 716, 718, 720, 721, 722, 725, 728, 729, 730, 731, 732, 733, 734, 735, 736, 759, 760], "landice_database_root": [1, 712, 725, 730, 731, 732, 733, 734, 735, 759], "albani": [1, 6, 242, 248, 255, 256, 257, 258, 260, 261, 703, 712, 714, 715, 717, 718, 721, 729, 730, 731, 732, 733, 734, 735, 759], "compass_env": [1, 730, 731, 732, 733, 734, 735], "climat": [1, 42, 725, 730, 731, 734, 745, 754, 759], "shared_clim": 1, "anaconda_env": 1, "single_nod": [1, 712, 730, 731, 732, 733, 734, 735, 759], "whether": [1, 6, 8, 11, 12, 26, 27, 34, 37, 38, 39, 61, 63, 68, 69, 70, 71, 73, 75, 156, 162, 164, 201, 211, 213, 264, 266, 269, 272, 273, 324, 327, 353, 359, 361, 363, 369, 372, 378, 442, 450, 457, 486, 490, 491, 493, 506, 510, 554, 556, 558, 651, 656, 662, 666, 669, 689, 703, 705, 706, 710, 711, 712, 717, 718, 719, 720, 723, 725, 730, 731, 732, 733, 734, 735, 738, 741, 743, 745, 748, 750, 751, 752, 753, 755, 757, 758, 759], "mpirun": [1, 706, 712, 730, 731, 732, 733, 734, 735, 759], "srun": [1, 706, 712, 730, 731, 732, 733, 734, 735, 759], "parallel_execut": [1, 706, 712, 730, 731, 732, 733, 734, 735, 759], "cores_per_nod": [1, 712, 730, 731, 732, 733, 734, 735, 759], "36": [1, 153, 685, 689, 695, 702, 703, 710, 730, 734, 745, 747, 751, 757, 759], "account": [1, 715, 730, 732, 733, 734, 735, 759], "multiprocess": [1, 703, 704, 709, 712], "dask": [1, 712], "18": [1, 702, 712, 745, 747, 756, 757], "variou": [1, 79, 535, 689, 695, 699, 700, 703, 705, 751], "find": [1, 7, 37, 46, 66, 437, 505, 704, 705, 706, 710, 712, 747, 759], "compil": [1, 5, 6, 257, 258, 259, 260, 261, 262, 703, 706, 708, 710, 711, 715, 730, 731, 732, 733, 734, 735, 756, 759], "mpi": [1, 8, 257, 259, 261, 407, 703, 705, 706, 708, 709, 710, 711, 730, 731, 732, 733, 735, 747, 756, 759], "explor": [1, 695, 703, 710, 738, 751, 755], "intend": [1, 3, 8, 247, 687, 689, 695, 711, 712, 745, 760], "incorpor": [1, 252, 703, 745], "come": [1, 12, 689, 695, 703, 705, 710, 711, 715, 730, 731, 732, 733, 734, 735, 737, 745, 749, 758, 759], "placehold": [1, 11, 21, 703, 759], "conceptu": [1, 703, 704, 710, 711, 748, 751], "most": [1, 8, 20, 82, 87, 99, 114, 150, 164, 171, 229, 239, 242, 250, 261, 684, 689, 702, 703, 704, 705, 707, 709, 710, 712, 722, 725, 728, 734, 735, 736, 738, 739, 745, 754, 755, 760], "stick": [1, 710, 711], "inde": 1, "seemingli": 1, "unrel": 1, "argument": [1, 6, 7, 8, 65, 245, 248, 685, 686, 687, 689, 694, 696, 703, 704, 705, 709, 710, 711, 761], "taken": [1, 61, 400, 688, 697, 699, 703, 711, 733, 735, 751, 759], "restart_test": [1, 82, 87, 99, 114, 150, 164, 171, 229, 239, 245, 703, 710, 715, 740, 759, 761], "sinc": [1, 6, 8, 321, 685, 689, 692, 703, 704, 705, 709, 710, 711, 712, 740, 744, 745, 747, 750, 756], "identifi": [1, 760], "sphinx": [1, 7], "readthedoc": 1, "built": [1, 6, 70, 71, 73, 242, 684, 703, 705, 711, 712, 734, 759], "manner": [1, 710], "similar": [1, 3, 6, 8, 261, 262, 264, 687, 703, 704, 705, 709, 710, 711, 716, 745, 751, 754, 755, 759], "geometric_featur": [1, 264, 272, 689, 745], "pyremap": 1, "analysi": [1, 243, 337, 342, 350, 353, 436, 558, 605, 662, 666, 685, 689, 694, 695, 696, 702, 703, 704, 712, 740, 744, 745, 752, 753, 754, 755, 756, 760], "guid": [1, 7, 244, 245, 246, 247, 249, 250, 252, 253, 254, 685, 686, 687, 689, 691, 692, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 709, 710, 711, 714, 718, 734, 739, 745], "detail": [1, 3, 4, 6, 7, 8, 39, 75, 688, 689, 690, 697, 699, 700, 703, 704, 705, 706, 709, 710, 711, 725, 728, 736, 758, 759], "instruct": [1, 705, 710, 711, 725], "quick": [1, 264, 692, 708, 710, 714, 725, 739, 748, 761], "overview": [1, 7, 708, 733, 735], "philosophi": [1, 704], "subsect": 1, "sub": [1, 506, 736, 745, 748], "descript": [1, 6, 7, 689, 695, 709, 710, 711, 712, 714, 719, 720, 723, 728, 739, 745], "manag": [1, 3, 706, 734], "api": [1, 7, 8, 708, 710, 711], "docstr": [1, 704, 708, 710], "eventu": [1, 751], "tutori": [1, 704], "plan": [1, 3, 242, 684, 686, 703, 707, 751, 760], "parsl": 1, "begin": [1, 7, 8, 245, 246, 248, 250, 256, 420, 685, 692, 703, 705, 708, 710, 711, 718, 719, 721, 723, 729, 734, 744, 747, 748, 751, 754, 757], "seem": [1, 703, 709, 710, 711, 735], "workqueueexecutor": 1, "enough": [1, 8, 685, 694, 696, 703, 704, 711, 744, 745, 748, 751, 753, 755, 758], "consid": [1, 704, 751], "beta": 1, "latest": [1, 242, 684, 695, 705, 714, 739, 751, 759, 762], "v1": [1, 8, 708, 735, 738, 745], "prematur": 1, "settl": [1, 710, 711], "except": [1, 8, 11, 16, 37, 75, 689, 695, 703, 704, 709, 710, 725, 745, 750, 751, 754, 755], "accordingli": [1, 66, 248, 264, 687], "accur": [1, 716, 722, 728, 736, 752], "race": 1, "unnecessari": [1, 711, 745], "block": [1, 3, 703, 710, 745], "prerequisit": [1, 612], "subsequ": [1, 703, 707, 729, 745, 761], "associ": [1, 8, 603, 604, 676, 682, 683, 685, 687, 689, 694, 703, 707, 710, 725, 745, 748], "datafutur": 1, "usag": [1, 243, 689, 712, 715, 722, 726, 727, 733, 735, 745, 747, 757], "arbitrari": 1, "1gb": 1, "calibr": 1, "actual": [1, 3, 6, 8, 703, 705, 710, 716], "approxim": [1, 8, 43, 45, 46, 50, 273, 381, 389, 394, 450, 603, 611, 700, 705, 715, 718, 719, 723, 725, 744, 745, 751, 753, 755, 756], "debug": [1, 8, 257, 258, 259, 260, 262, 604, 696, 730, 731, 732, 733, 735, 752], "flesh": [1, 710, 711], "further": [1, 7, 689, 703, 719, 720, 723, 725, 733, 735], "restrict": [1, 8, 710, 711], "facilit": 1, "m": [1, 6, 44, 51, 52, 57, 245, 247, 306, 382, 390, 395, 451, 573, 587, 601, 625, 685, 686, 689, 690, 692, 694, 695, 696, 702, 703, 705, 711, 717, 718, 719, 720, 722, 723, 725, 726, 727, 730, 731, 732, 733, 735, 738, 741, 742, 744, 746, 748, 750, 751, 752, 754, 758, 759], "oppos": [1, 324, 327, 751], "origin": [1, 8, 34, 252, 444, 485, 489, 490, 653, 697, 700, 705, 709, 710, 711, 725, 743, 753, 758, 759], "simpli": [1, 8, 36, 104, 143, 153, 160, 221, 226, 284, 662, 671, 690, 703, 705, 710, 711, 718, 738, 759, 761], "anyth": [1, 710], "discuss": [1, 3, 8, 703, 704, 710, 711, 744, 745, 755], "decid": [1, 709, 711, 745], "misunderstood": 1, "select": [1, 6, 8, 703, 705], "skip": [1, 6, 8, 75, 703, 761], "latter": [1, 6, 26, 245, 246, 248, 250, 256, 261, 751], "suggest": [1, 706, 751], "put": [1, 705, 710, 711, 754], "under": [1, 3, 74, 261, 485, 493, 511, 608, 689, 695, 705, 708, 718, 725, 738, 740, 748, 751, 755, 760], "break": [1, 305, 308, 310, 312, 686, 742, 758], "backward": 1, "compat": [1, 242, 275, 684, 705, 706, 708, 745, 748], "scope": 1, "hinder": 1, "effort": [1, 745], "14": [1, 256, 689, 706, 729, 745], "scratch": [1, 6, 705, 709, 710, 733, 735, 759], "simper": 1, "underwai": 1, "aid": [1, 6], "compass_1": 1, "http": [1, 6, 7, 8, 38, 612, 689, 703, 704, 705, 706, 708, 711, 712, 714, 733, 735, 739, 745, 759], "github": [1, 6, 7, 689, 704, 705, 708, 710, 711, 712, 714, 739, 745, 759, 762], "com": [1, 6, 7, 38, 689, 704, 705, 708, 710, 711, 712, 745, 759], "dev": [1, 6, 7, 242, 689, 703, 704, 705, 708, 710, 711, 712, 714, 739, 745, 759], "28": [1, 712, 745], "somewhat": 1, "conflict": 1, "tend": [1, 264], "child": [1, 19, 533, 703, 704], "just": [1, 6, 11, 21, 39, 82, 87, 99, 114, 150, 164, 171, 229, 239, 245, 246, 248, 250, 256, 261, 703, 704, 705, 707, 708, 709, 710, 711, 733, 735, 751], "instanti": 1, "becaus": [1, 7, 8, 243, 489, 703, 704, 705, 709, 710, 711, 717, 721, 722, 725, 726, 727, 729, 732, 735, 736, 745, 747, 751, 753, 759], "parent": [1, 348, 366, 689, 703], "object": [1, 8, 14, 17, 25, 74, 75, 506, 518, 689, 703, 704, 710, 711, 736, 745], "respect": [1, 3, 8, 264, 696, 703, 704, 710, 725, 743, 745, 751, 758], "baroclinicchannel": [1, 281, 284, 293, 296, 302, 685, 703, 704, 710, 711], "short": [1, 6, 104, 153, 176, 248, 249, 255, 256, 264, 267, 284, 337, 345, 400, 401, 407, 411, 454, 662, 671, 689, 703, 704, 710, 711, 715, 716, 718, 721, 723, 729, 736, 740, 741, 743, 745, 750, 752, 754, 758], "add_step": [1, 244, 245, 250, 685, 689, 694, 703, 709, 710, 711], "initialst": [1, 685, 686, 687, 689, 691, 692, 694, 695, 696, 698, 701, 702, 703, 710], "And": [1, 7, 703, 705], "save": [1, 8, 37, 57, 685, 692, 703, 717, 718, 719, 721, 723, 725, 729, 734, 741, 745, 748], "res_param": [1, 685, 702, 703, 710, 711], "10km": [1, 8, 685, 702, 703, 710, 711, 722, 726, 740, 741, 759, 760, 761], "nx": [1, 703, 710, 711, 717, 718, 719, 720, 723, 743, 746, 748, 750], "ny": [1, 703, 710, 711, 717, 718, 719, 720, 723, 746, 748, 750], "50": [1, 247, 685, 696, 702, 703, 710, 711, 720, 723, 741, 748, 750, 752, 753], "dc": [1, 703, 710, 711, 717, 718, 719, 720, 723, 746, 748, 750], "10e3": [1, 703, 710, 711], "4km": [1, 254, 256, 685, 703, 710, 711, 727, 741, 754, 759], "40": [1, 686, 695, 703, 710, 711, 717, 732, 742, 751, 756], "126": [1, 703, 710, 711], "4e3": [1, 703, 710, 711], "1km": [1, 6, 156, 162, 164, 685, 703, 710, 711, 741, 743, 759], "160": [1, 703, 710, 711, 757], "500": [1, 689, 698, 702, 703, 710, 711, 712, 738, 748, 752, 758], "1e3": [1, 703, 710, 711], "valueerror": [1, 8, 63, 685, 703, 710, 711], "unsupport": [1, 685, 703, 710, 711], "param": [1, 143, 203, 685, 689, 703, 710, 711], "recip": [1, 703], "elsewher": [1, 689, 705, 711, 736], "might": [1, 3, 8, 264, 703, 710, 711, 712, 725, 758, 759], "you": [1, 3, 5, 6, 7, 8, 242, 257, 258, 259, 260, 261, 262, 264, 684, 695, 703, 704, 705, 706, 707, 709, 710, 711, 712, 721, 722, 726, 727, 729, 730, 731, 732, 733, 734, 735, 744, 745, 748, 751, 753, 755, 756, 759, 760, 761], "kei": [1, 9, 26, 31, 71, 420, 605, 610, 703, 722], "config_time_integr": [1, 711], "split_explicit": [1, 337, 342, 345, 348, 363, 366, 383, 386, 391, 396, 401, 404, 407, 689, 711, 745, 755], "config_dt": [1, 696, 710, 711], "02": 1, "config_btr_dt": [1, 710, 711], "06": [1, 702, 746], "0000_06": 1, "config_hmix_use_ref_cell_width": 1, "config_use_debugtrac": 1, "Such": 1, "forwardstep": [1, 689, 691, 701, 703], "time_integr": [1, 337, 342, 345, 348, 363, 366, 383, 386, 391, 396, 401, 404, 407, 689, 755], "with_ice_shelf_cav": [1, 269, 353, 359, 361, 378, 689, 703, 745], "wisc": [1, 689, 745], "littl": [1, 8, 704, 705, 708, 709, 710, 711], "trickier": 1, "typic": [1, 6, 7, 8, 11, 23, 69, 264, 400, 689, 703, 705, 707, 709, 710, 711, 712, 715, 717, 718, 719, 722, 723, 726, 727, 734, 736, 738, 745, 754, 759, 760], "look": [1, 6, 7, 8, 689, 703, 704, 709, 710, 711, 712, 756], "forcing_data": [1, 695, 703], "mixedlayerdepthsoutput": 1, "var_arrai": [1, 703], "constant": [1, 8, 43, 50, 51, 273, 381, 389, 394, 450, 687, 698, 702, 711, 717, 720, 741, 743, 744, 748, 750, 751, 752, 753, 755, 758], "remov": [1, 6, 8, 69, 72, 490, 685, 686, 687, 692, 694, 695, 696, 698, 702, 703, 709, 745, 751, 757], "etc": [1, 8, 72, 73, 315, 453, 454, 462, 491, 493, 689, 703, 741, 745, 750], "rare": [1, 705], "One": [1, 8, 261, 686, 687, 704, 709, 711, 734, 740, 745, 759, 761], "add_config": [1, 709], "io": [1, 703, 704, 708, 710, 711, 712, 714, 739], "enthalpy_benchmark": [1, 242, 251, 703, 714, 715, 724], "readm": [1, 8, 247, 703, 720], "work_dir": [1, 6, 8, 11, 26, 35, 67, 70, 71, 72, 73, 74, 75, 703], "visual": [1, 8, 247, 312, 321, 327, 468, 482, 503, 546, 564, 578, 592, 616, 686, 687, 692, 695, 703, 707, 717, 718, 719, 720, 721, 723, 729, 742, 743, 750, 751, 752], "eismint2_viz": [1, 246, 719], "experi": [1, 114, 119, 123, 246, 261, 485, 486, 491, 493, 496, 501, 503, 506, 518, 695, 704, 719, 738, 751], "b": [1, 3, 6, 114, 123, 246, 705, 707, 719, 759], "d": [1, 114, 123, 246, 505, 506, 518, 676, 682, 683, 703, 710, 711, 719, 743], "f": [1, 6, 8, 114, 123, 246, 685, 703, 705, 709, 710, 712, 719, 725, 733, 735, 748, 759], "unchang": [1, 745], "eismint2": [1, 31, 242, 251, 714, 715, 724], "whichev": [1, 242, 684, 738], "sens": [1, 708, 710], "appli": [1, 7, 8, 39, 190, 196, 276, 485, 493, 695, 703, 710, 715, 716, 725, 735, 736, 743, 745, 748, 751, 758], "shown": [1, 703, 729, 754, 758], "oper": [1, 8, 22, 101, 116, 137, 152, 173, 231, 241, 289, 292, 301, 459, 467, 488, 500, 668, 703, 715, 740, 761], "explicit": [1, 8, 687, 689, 704, 710, 711, 729, 740, 743, 745, 755], "neither": 1, "timer": [1, 6, 26, 30, 74, 81, 157, 163, 689, 698, 702, 703, 704], "compare_vari": [1, 8, 703, 711], "mesh_step": [1, 703], "mesh_cor": [1, 712], "mesh_min_cor": [1, 712], "xcell": [1, 689, 703, 710], "ycell": [1, 689, 703, 710], "zcell": [1, 689], "filename1": [1, 8, 75, 703, 711], "purpos": [1, 3, 31, 686, 687, 703, 704, 707, 710, 711, 717, 728, 729, 745, 760], "meti": [1, 59, 711], "split": [1, 689, 704, 709, 710, 711, 740, 745, 755], "domain": [1, 60, 61, 249, 253, 254, 264, 275, 468, 490, 506, 686, 689, 695, 703, 710, 711, 715, 718, 719, 720, 723, 736, 741, 742, 743, 744, 745, 747, 748, 750, 751, 752, 753, 754, 757, 758, 760], "trivial": 1, "quit": [1, 3, 689, 703, 748], "compar": [1, 6, 8, 26, 70, 71, 73, 74, 75, 247, 255, 348, 401, 604, 686, 687, 688, 689, 690, 691, 696, 697, 699, 700, 702, 704, 707, 709, 710, 711, 715, 718, 719, 721, 722, 723, 729, 740, 741, 742, 745, 746, 747, 748, 751, 754, 756, 757, 759, 761], "signific": [1, 703, 704, 716, 751], "dynamic_adjust": [1, 350, 703, 712, 740], "rk4": [1, 337, 342, 345, 348, 363, 366, 383, 386, 391, 396, 401, 404, 407, 689, 704, 710, 711, 740, 745, 755, 761], "intermedi": [1, 745], "meshstep": [1, 372, 439, 648, 691, 703], "build_cell_width_lat_lon": [1, 8, 50, 691], "numpi": [1, 8, 44, 51, 52, 57, 382, 390, 395, 451, 506, 573, 587, 601, 603, 606, 611, 625, 674, 675, 703, 710, 711], "np": [1, 698, 710, 711], "qu240mesh": 1, "mesh_nam": [1, 328, 330, 334, 378, 447, 658, 689, 745], "bool": [1, 11, 12, 26, 27, 34, 37, 38, 39, 61, 68, 69, 70, 71, 73, 75, 156, 162, 164, 201, 211, 213, 264, 266, 269, 272, 273, 276, 324, 327, 353, 359, 361, 363, 369, 372, 378, 442, 450, 457, 486, 490, 491, 493, 506, 510, 554, 556, 558, 651, 656, 662, 666, 669], "ic": [1, 7, 141, 146, 148, 174, 242, 247, 248, 250, 252, 267, 268, 269, 272, 353, 359, 361, 375, 378, 400, 452, 454, 457, 460, 462, 465, 468, 484, 486, 489, 490, 491, 493, 498, 506, 508, 511, 515, 516, 517, 519, 684, 689, 692, 695, 702, 704, 705, 708, 710, 711, 712, 714, 715, 717, 718, 719, 720, 721, 722, 723, 725, 726, 727, 728, 729, 737, 738, 739, 740, 748, 751, 757, 758, 760], "shelf": [1, 7, 84, 85, 268, 269, 272, 353, 359, 361, 375, 378, 452, 454, 457, 460, 462, 465, 468, 484, 486, 493, 498, 506, 511, 519, 554, 556, 558, 689, 692, 695, 703, 704, 710, 711, 712, 717, 718, 728, 729, 737, 738, 739, 740, 748, 751, 754, 758], "caviti": [1, 269, 272, 353, 359, 361, 378, 506, 510, 689, 692, 695, 704, 710, 711, 712, 737, 738, 739, 740, 748, 751], "__module__": [1, 689, 709], "mesh_config_filenam": [1, 378, 689], "cell": [1, 8, 43, 44, 45, 46, 50, 51, 52, 57, 146, 264, 266, 269, 272, 273, 275, 276, 328, 381, 382, 389, 390, 394, 395, 411, 450, 451, 489, 506, 547, 573, 587, 601, 625, 676, 677, 678, 679, 682, 683, 686, 689, 690, 695, 698, 703, 709, 710, 711, 717, 718, 719, 720, 721, 722, 723, 726, 727, 729, 738, 741, 743, 744, 745, 746, 747, 748, 750, 751, 752, 753, 754, 755, 757, 758], "width": [1, 8, 43, 44, 45, 50, 51, 52, 57, 273, 381, 382, 389, 390, 394, 395, 450, 451, 573, 587, 601, 625, 710, 741, 743, 748, 750, 753, 754, 758], "arrai": [1, 8, 44, 51, 52, 57, 266, 382, 390, 395, 451, 508, 510, 573, 587, 601, 605, 606, 625, 674, 675, 677, 678, 679, 680], "regular": [1, 6, 39, 44, 51, 324, 327, 382, 390, 395, 451, 573, 587, 601, 625, 710, 730, 732, 733, 734, 735, 740, 759], "latitud": [1, 44, 51, 382, 390, 395, 451, 573, 587, 601, 625, 689, 744, 745, 754, 756], "longitud": [1, 44, 51, 52, 57, 382, 390, 395, 451, 573, 587, 601, 625, 689, 744, 754], "return": [1, 3, 7, 37, 44, 45, 46, 51, 62, 64, 71, 266, 268, 328, 331, 382, 390, 395, 400, 451, 489, 540, 547, 573, 587, 601, 603, 604, 605, 612, 625, 674, 677, 678, 679, 680, 681, 704, 709, 710, 711, 744, 753, 756], "cellwidth": [1, 382, 390, 395, 451, 573, 587, 601, 625], "x": [1, 44, 51, 52, 57, 188, 382, 390, 395, 411, 451, 506, 508, 515, 516, 517, 573, 587, 601, 625, 686, 689, 690, 692, 696, 703, 710, 711, 743, 746, 748, 750, 753], "km": [1, 8, 43, 44, 45, 46, 50, 51, 52, 57, 246, 248, 249, 250, 253, 256, 273, 306, 315, 330, 381, 382, 389, 390, 394, 395, 450, 451, 486, 490, 491, 493, 496, 498, 501, 503, 539, 547, 566, 570, 572, 573, 580, 584, 586, 587, 594, 598, 600, 601, 618, 622, 624, 625, 685, 688, 689, 690, 695, 697, 698, 699, 700, 702, 709, 710, 711, 712, 715, 719, 721, 722, 723, 726, 727, 729, 736, 741, 743, 744, 745, 748, 750, 751, 753, 754, 755, 756, 758, 760], "lon": [1, 8, 44, 50, 51, 52, 57, 188, 382, 390, 395, 451, 573, 587, 601, 625, 712, 745], "length": [1, 44, 51, 52, 57, 382, 390, 395, 451, 573, 587, 601, 625, 689, 702, 743, 746, 758], "180": [1, 44, 51, 52, 57, 382, 390, 395, 451, 573, 587, 601, 625, 744, 747, 755, 757], "lat": [1, 8, 44, 50, 51, 52, 57, 188, 382, 390, 395, 451, 573, 587, 601, 625, 712, 745], "90": [1, 44, 51, 52, 57, 382, 390, 395, 451, 573, 587, 601, 625, 702, 703, 744, 755], "dlon": 1, "dlat": 1, "constantcellwidth": 1, "240": [1, 8, 45, 606, 611, 688, 689, 699, 712, 736, 744, 745, 751, 755], "nlat": [1, 756], "nlon": 1, "360": 1, "linspac": [1, 8, 698], "ones": [1, 6, 192, 198, 208, 215, 506, 676, 682, 683, 704, 709], "size": [1, 3, 8, 45, 46, 146, 512, 566, 580, 594, 603, 605, 606, 611, 618, 703, 710, 711, 712, 717, 718, 719, 720, 723, 744, 745, 746, 748, 750, 753], "integr": [1, 8, 296, 337, 342, 345, 348, 363, 366, 383, 386, 391, 396, 401, 404, 407, 477, 685, 689, 694, 695, 701, 703, 704, 710, 711, 715, 716, 718, 719, 720, 721, 722, 723, 724, 726, 727, 729, 740, 741, 744, 745, 748, 750, 751, 752, 753, 754, 755, 757, 758], "0000_01": 1, "1000": [1, 247, 689, 710, 712, 720, 723, 738, 741, 745, 747, 750, 757, 758], "config_mom_del4": 1, "2e11": 1, "config_hmix_scalewithmesh": 1, "config_use_gm": 1, "vertic": [1, 245, 246, 250, 276, 278, 315, 399, 400, 411, 453, 454, 462, 491, 493, 554, 556, 558, 604, 685, 687, 689, 690, 691, 692, 694, 695, 696, 698, 701, 702, 703, 709, 711, 712, 717, 718, 719, 720, 723, 736, 737, 739, 741, 742, 743, 745, 746, 747, 748, 750, 751, 752, 753, 754, 757, 758], "layer": [1, 245, 246, 250, 264, 266, 512, 554, 556, 558, 674, 675, 676, 680, 681, 682, 683, 685, 689, 690, 691, 692, 694, 695, 696, 698, 701, 702, 710, 712, 717, 718, 719, 723, 736, 738, 740, 741, 742, 743, 745, 746, 747, 748, 750, 751, 752, 753, 754, 757, 758], "metadata": [1, 712], "vertical_grid": [1, 264, 278, 674, 676, 682, 683, 689, 703, 710, 712, 738, 741, 742, 743, 748, 750, 751, 752, 753, 757, 758], "grid_typ": [1, 689, 710, 712, 738, 741, 748, 750, 751, 752, 753, 757, 758], "60layerphc": [1, 689, 745], "mb": [1, 11, 21, 689, 712, 745, 747, 757], "init_max_memori": [1, 689, 712, 745, 747, 757], "init_max_disk": [1, 712], "128": [1, 689, 731, 735], "forward_max_memori": [1, 689, 712, 745, 747, 757], "forward_max_disk": [1, 712], "prefix": [1, 508, 510, 520, 689, 703, 705, 712, 745], "qu": [1, 688, 689, 709, 712, 744, 745, 756], "ec": [1, 689, 712, 745], "wc": [1, 689, 712, 745], "mesh_descript": [1, 689, 712, 745], "eddi": [1, 685, 689, 741, 745, 754], "closur": [1, 689, 745, 746], "e3sm_vers": [1, 689, 712, 745], "enhanc": [1, 689], "around": [1, 276, 686, 688, 689, 699, 710, 711, 712, 736, 741, 744, 745, 750, 754], "equat": [1, 264, 689, 692, 710, 718, 744, 745, 746], "south": [1, 689], "pole": [1, 197, 689, 725, 745], "35": [1, 689, 710, 741, 743, 744, 745, 750, 752, 753, 756, 759], "greenland": [1, 31, 242, 251, 254, 689, 703, 707, 714, 715, 722, 724, 726, 727, 760], "min_r": [1, 689, 712, 745], "max_r": [1, 689, 712, 745], "mid": [1, 264, 689, 695, 745], "revis": [1, 6, 689, 712, 745], "increment": [1, 689, 712, 745], "mesh_revis": [1, 689, 712, 745], "finest": [1, 689, 712, 744, 745, 753, 755], "coarsest": [1, 689, 710, 712, 745], "60": [1, 8, 45, 264, 272, 566, 580, 594, 618, 688, 689, 699, 700, 703, 738, 744, 745, 748, 754, 755, 756], "url": [1, 8, 12, 37, 689, 703, 706, 712, 745], "pull_request": [1, 689, 712, 745], "miss": [1, 8, 689, 703, 712, 745], "dynamical_adjust": 1, "spin": [1, 176, 703, 723, 740, 745], "kind": [1, 709, 710], "dynamicaladjust": 1, "dynamicadjust": [1, 350, 689], "qu240dynamicadjust": [1, 689, 703], "adjust": [1, 248, 264, 267, 323, 336, 348, 350, 353, 355, 357, 359, 361, 375, 383, 386, 391, 396, 454, 465, 498, 684, 689, 692, 695, 703, 712, 722, 726, 727, 728, 740, 745, 748, 751, 755], "dissip": [1, 348, 350, 355, 357, 383, 386, 391, 396, 689, 710, 741, 745, 750], "fast": [1, 348, 350, 355, 357, 383, 386, 391, 396, 689, 722, 745, 756], "move": [1, 243, 264, 348, 350, 383, 386, 391, 396, 689, 703, 704, 710, 751], "wave": [1, 348, 350, 355, 357, 383, 386, 391, 396, 471, 473, 475, 477, 478, 480, 482, 651, 689, 694, 701, 703, 710, 741, 745, 750], "restart_tim": 1, "0001": [1, 751], "02_00": 1, "03_00": 1, "restart_filenam": [1, 135, 348, 350, 353, 355, 357, 359, 361, 383, 391, 396, 689], "rst": [1, 7, 82, 87, 99, 114, 150, 164, 171, 229, 239, 245, 246, 248, 249, 250, 256, 689, 703, 710, 711], "step_nam": 1, "damped_adjustment_1": [1, 689], "namelist_opt": 1, "01_00": [1, 703, 751], "config_rayleigh_frict": 1, "config_rayleigh_damping_coeff": [1, 687], "stream_replac": [1, 703], "restart_interv": [1, 689, 703], "template_replac": [1, 17, 25, 703], "simul": [1, 249, 252, 312, 321, 348, 411, 419, 457, 496, 501, 503, 506, 518, 551, 554, 556, 558, 627, 662, 666, 669, 689, 692, 695, 698, 699, 703, 707, 709, 710, 711, 722, 725, 736, 741, 743, 745, 746, 747, 748, 754, 756, 757, 758, 759], "config_do_restart": 1, "config_start_tim": 1, "whew": 1, "That": [1, 703, 704, 707, 710, 711, 725, 759], "lot": [1, 8, 703, 704, 711], "thank": 1, "bear": [1, 711], "myriad": 1, "highlight": 1, "roughli": [1, 704, 710, 744, 753, 755], "broken": [1, 97, 112, 148, 162, 169, 237, 703, 704], "ident": [1, 3, 6, 8, 85, 95, 97, 110, 112, 141, 148, 156, 162, 167, 169, 235, 237, 245, 246, 248, 249, 250, 256, 281, 293, 302, 337, 345, 404, 407, 462, 685, 689, 692, 698, 702, 704, 710, 711, 715, 718, 719, 721, 722, 723, 729, 741, 745, 748, 750, 751, 754, 755, 758], "analog": [1, 704], "get_available_cores_and_nod": [1, 704], "abl": [1, 6, 257, 258, 259, 260, 262, 703, 704, 705, 710, 711, 734], "unless": [1, 38, 69, 695, 704, 705, 710, 711], "am": 1, "theoret": [1, 704], "my": 1, "ambit": 1, "gradual": [1, 689, 752], "sea": [1, 7, 264, 266, 267, 268, 361, 375, 400, 454, 465, 485, 498, 508, 512, 515, 516, 517, 678, 679, 680, 681, 684, 689, 691, 692, 695, 711, 712, 738, 740, 742, 743, 745, 746, 748, 751], "surfac": [1, 7, 189, 195, 247, 252, 264, 266, 267, 268, 276, 375, 454, 465, 485, 498, 508, 512, 515, 516, 517, 554, 556, 558, 678, 679, 680, 681, 684, 689, 691, 692, 695, 710, 712, 720, 725, 738, 740, 741, 742, 743, 745, 748, 750, 751, 753, 754, 758], "height": [1, 7, 264, 266, 267, 268, 375, 454, 465, 498, 512, 678, 679, 680, 681, 684, 689, 691, 692, 695, 712, 738, 740, 742, 743, 745, 748, 751], "frazil": [1, 264, 457, 662, 666, 669, 671, 692, 702, 740, 748, 758], "land": [1, 7, 242, 264, 267, 268, 269, 272, 273, 450, 486, 489, 491, 493, 684, 689, 692, 695, 698, 708, 711, 712, 714, 715, 738, 745, 747, 748, 751, 754, 757, 760], "flux": [1, 247, 264, 485, 511, 519, 689, 692, 695, 716, 720, 740, 745, 748, 751], "1d": [1, 264, 674, 675, 676, 677, 678, 679, 680, 682, 683, 692, 695], "coordin": [1, 187, 188, 202, 315, 453, 454, 462, 491, 493, 506, 637, 676, 682, 683, 687, 689, 692, 695, 709, 736, 737, 739, 741, 743, 745, 748, 750, 751, 752, 753, 758], "3d": [1, 276, 508], "z": [1, 264, 272, 453, 454, 462, 486, 491, 493, 498, 506, 508, 515, 516, 517, 677, 678, 679, 680, 681, 682, 683, 692, 695, 710, 711, 736, 741, 743, 748, 750, 751, 752, 753, 755, 758, 761], "iceshelf": [1, 264], "pressur": [1, 7, 264, 267, 268, 375, 442, 454, 465, 493, 498, 684, 689, 691, 692, 695, 712, 736, 745, 747, 748, 751], "match": [1, 375, 454, 465, 498, 612, 686, 687, 692, 695, 705, 725, 752], "particl": [1, 552, 554, 558, 662, 666, 698, 702, 740], "plot": [1, 8, 57, 93, 108, 123, 182, 243, 244, 245, 246, 247, 250, 299, 411, 413, 420, 442, 444, 478, 522, 530, 604, 605, 606, 607, 608, 609, 610, 628, 651, 653, 656, 685, 686, 687, 688, 690, 691, 694, 695, 696, 697, 698, 699, 700, 701, 709, 710, 711, 716, 717, 718, 719, 720, 723, 742, 743, 744, 747, 748, 751, 752, 753, 755, 756, 757, 760], "nearli": [1, 174, 250, 337, 689, 703, 704, 707, 708, 710, 711, 723, 736, 745, 755], "netcdf": [1, 275, 276, 277, 278, 399, 446, 655, 689, 710, 712, 730, 731, 732, 733, 734, 735, 745], "maintain": [1, 264, 755, 759], "hundr": 1, "en4": [1, 689, 704, 745], "1900": [1, 689, 704, 745], "bgc": [1, 369, 372, 689, 704], "overkil": [1, 703], "never": [1, 703, 707], "note": [1, 7, 8, 188, 243, 275, 708, 710, 721, 722, 725, 728, 729, 733, 735, 745, 747, 757], "show": [1, 3, 7, 8, 266, 506, 508, 686, 687, 703, 710, 711, 716, 720, 733, 734, 735, 741, 744, 745, 750, 751, 753], "recent": [1, 739], "issu": [1, 3, 695, 703, 744, 753, 757], "777": 1, "aren": [1, 8, 689, 703, 704, 705, 709, 710, 711, 744, 753, 755, 761], "occur": [1, 143, 243, 695, 706], "rpe_test": [1, 703, 704, 759], "5": [1, 6, 8, 45, 246, 248, 255, 256, 276, 296, 477, 512, 607, 685, 689, 690, 692, 694, 698, 702, 703, 704, 706, 710, 711, 712, 717, 719, 721, 722, 725, 726, 727, 728, 729, 740, 741, 743, 745, 746, 748, 750, 751, 752, 754, 757, 758, 759], "sourc": [1, 3, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 99, 100, 102, 103, 104, 106, 107, 108, 109, 110, 112, 114, 115, 117, 118, 119, 121, 122, 123, 124, 125, 127, 128, 129, 130, 132, 133, 134, 135, 136, 138, 139, 140, 141, 143, 145, 146, 147, 148, 150, 151, 153, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 169, 171, 172, 174, 175, 176, 178, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 228, 229, 230, 232, 234, 235, 237, 239, 240, 252, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 287, 288, 290, 291, 293, 294, 296, 297, 299, 300, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 341, 342, 345, 348, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 386, 389, 390, 391, 394, 395, 396, 399, 400, 401, 404, 407, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 457, 458, 460, 461, 462, 463, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 639, 640, 642, 643, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 661, 662, 663, 665, 666, 667, 669, 670, 671, 672, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 703, 705, 710, 711, 712, 725, 728, 729, 730, 731, 732, 733, 734, 735, 752, 759], "major": [1, 261, 703, 711, 734, 736, 745, 754, 757], "assembl": [1, 350], "check": [1, 6, 8, 63, 75, 80, 201, 249, 264, 337, 630, 692, 695, 705, 707, 709, 710, 711, 712, 733, 735, 740, 758, 759, 761], "extend": [1, 712, 751, 754], "opiton": 1, "mpas_model": [1, 6, 242, 684, 703, 712], "ocean_model": [1, 684, 705, 711, 712], "previous": [1, 703, 709], "resourc": [1, 8, 21, 65, 685, 694, 696, 703, 710, 722, 726, 727, 745], "Then": [1, 5, 7, 8, 242, 247, 257, 258, 259, 260, 261, 262, 684, 685, 686, 687, 689, 692, 694, 695, 696, 698, 702, 703, 709, 711, 718, 719, 721, 723, 725, 729, 734, 741, 745, 748, 751, 759], "configure_global_ocean": [1, 689, 703], "initial_condit": [1, 174, 369, 372, 549, 704], "polar": [1, 689, 712, 738, 745], "scienc": [1, 689, 738, 745], "center": [1, 264, 266, 275, 276, 689, 703, 710, 717, 718, 719, 723, 738, 741, 745, 747, 748, 750, 751, 752, 753, 757, 758], "hydrograph": [1, 689, 738, 745], "climatologi": [1, 190, 252, 689, 725, 738, 745], "en4_1900": [1, 369, 372, 689, 740, 745], "met": [1, 3], "offic": 1, "hadlei": 1, "centr": 1, "init_descript": [1, 689, 712, 745], "bathymetri": [1, 8, 264, 269, 490, 506, 689, 703, 712, 745, 747, 758], "bathy_descript": [1, 689, 712, 745], "gebco": [1, 712, 745], "2019": 1, "bedmachin": [1, 272, 712, 745], "antarctica": [1, 272, 689, 712, 736, 745], "with_bgc": [1, 369, 372, 703], "todo": 1, "fill": [1, 243, 264, 272, 695, 745], "bgc_descript": 1, "wisc_descript": 1, "shelv": [1, 684, 689, 692, 712, 725, 736, 738, 740, 745, 748, 751, 757], "although": [1, 8, 709], "config_fil": [1, 6, 70, 71, 73], "commandlin": 1, "w": [1, 6, 247, 705, 707, 720, 754, 759], "test_baroclinic_channel": 1, "test_nightli": 1, "check_siz": [1, 712], "verifi": [1, 8, 85, 95, 97, 110, 112, 141, 148, 156, 162, 167, 169, 235, 237, 552, 687, 712, 757], "home": [1, 8, 705, 710, 711, 712, 733, 734, 735], "default_input": [1, 242, 684, 703, 712], "mesh_max_memori": [1, 712], "mesh_max_disk": [1, 712], "add_metadata": [1, 689, 712, 745], "quasi": [1, 8, 50, 176, 178, 554, 558, 662, 666, 689, 709, 712, 723, 745, 748, 751, 755, 756], "uniform": [1, 8, 50, 206, 245, 250, 330, 539, 547, 566, 570, 572, 580, 584, 586, 594, 598, 600, 618, 622, 624, 685, 688, 689, 692, 694, 698, 699, 700, 702, 703, 709, 710, 711, 712, 717, 718, 719, 723, 741, 745, 748, 750, 751, 752, 753, 755, 756, 757, 758], "max_depth": [1, 689, 712, 745], "autodetect": [1, 689, 712, 745, 747, 757], "creation_d": [1, 689, 712, 745], "email": [1, 689, 712, 745, 747, 757], "lanl": [1, 708, 712, 745], "gov": [1, 8, 703, 706, 712, 733, 735, 745], "enable_ocean_initial_condit": [1, 712, 745], "enable_ocean_graph_partit": [1, 712, 745], "enable_seaice_initial_condit": [1, 712, 745], "enable_scrip": [1, 712, 745], "enable_diagnostics_fil": [1, 712, 745], "comparisonlatresolut": [1, 712, 745], "comparisonlonresolut": [1, 712, 745], "comparisonantarcticstereowidth": [1, 712, 745], "6000": [1, 689, 712, 738, 745, 757], "comparisonantarcticstereoresolut": [1, 712, 745], "comparisonarcticstereowidth": [1, 712, 745], "comparisonarcticstereoresolut": [1, 712, 745], "tanh_dz": [1, 689, 712, 745], "vert_level": [1, 689, 703, 710, 711, 712, 738, 741, 742, 743, 746, 748, 750, 751, 752, 753, 757], "bottom_depth": [1, 689, 703, 710, 711, 712, 738, 741, 746, 748, 750, 751, 752, 753, 754, 757, 758], "3000": [1, 689, 709, 712, 744, 745, 753, 755], "min_layer_thick": [1, 689, 712, 738, 751], "max_layer_thick": [1, 689, 712, 738], "unfortun": 1, "lost": 1, "standard": [1, 119, 272, 689, 695, 699, 704, 705, 745, 755, 759], "search": [1, 6, 39, 275], "through": [1, 3, 71, 468, 482, 689, 695, 704, 711, 714, 722, 726, 727, 736, 739, 742, 743, 750, 751, 752], "our": [1, 704, 709, 710, 711, 733, 759], "preserv": [1, 272, 273, 759], "lower": [1, 8, 703, 710, 725, 741, 750, 752], "hpc": [1, 705, 734], "laptop": [1, 705, 710, 711, 712], "desktop": [1, 710, 711, 725], "varieti": [1, 724], "straightforward": [1, 703], "Or": [1, 6, 712], "late": 1, "run_step": [1, 703, 718], "subset": [1, 6, 695], "run_by_default": [1, 27, 244, 245, 250, 703], "mesh_typ": [1, 85, 89, 91, 95, 97, 99, 102, 104, 106, 119, 145, 156, 158, 162, 164, 219, 224, 244, 245, 703], "dome": [1, 8, 42, 85, 127, 132, 135, 169, 174, 180, 213, 242, 251, 703, 707, 714, 715, 724, 759, 760], "tye": [1, 85], "smoke_test": [1, 245, 703], "setupmesh": [1, 8, 246, 247, 250, 703], "runmodel": [1, 247, 248, 249, 250, 255, 256, 703], "unifi": [1, 705, 733, 735], "detect": [1, 264, 689, 703, 712, 730, 731, 732, 734, 745, 747, 755, 757, 759], "fulli": [1, 695], "cori": [1, 261, 725, 734, 759], "haswel": [1, 261, 759], "compi": [1, 261, 732, 759], "nest": [1, 710, 711], "27": 1, "29": [1, 756], "31": 1, "decomp_test": [1, 7, 710, 740, 759, 761], "32": [1, 697, 698, 702, 722, 729, 733, 753, 755, 759], "threads_test": [1, 8, 710, 740, 759, 761], "33": [1, 712, 745, 750, 751, 759], "analysis_test": [1, 740, 761], "34": [1, 703, 718, 748, 751, 754, 758, 759], "daily_output_test": 1, "37": [1, 689, 759], "38": [1, 759], "39": 1, "41": 1, "43": 1, "44": [1, 748], "45": [1, 689, 745], "phc_bgc": [1, 740, 745], "46": [1, 717], "cull": [1, 8, 489, 685, 686, 687, 689, 692, 694, 695, 696, 698, 702, 703, 710, 711, 719, 721, 722, 726, 727, 729, 745, 747, 754, 757], "switch": [1, 705, 710, 712, 758], "treat": [1, 703, 704], "progress": [1, 69, 266, 272, 508, 510], "intermix": 1, "continu": [1, 3, 135, 703, 709, 710, 715, 740, 745, 751], "azur": 1, "pipelin": 1, "doc": [1, 5, 7, 703, 710, 711, 733, 735, 762], "renam": [1, 184, 190, 192, 196, 198, 203, 205, 208, 211, 215, 252, 704, 725], "titl": [1, 508, 510], "tabl": [1, 8, 611, 705, 734, 759], "tree": [1, 7, 708, 711], "0_doc": 1, "brows": [1, 710, 711], "index": [1, 5, 8, 264, 676, 677, 678, 679, 680, 681, 682, 683, 703, 710, 711, 717, 718, 723], "html": [1, 5, 714, 739], "keep": [1, 3, 6, 8, 11, 36, 485, 689, 703, 705, 711, 712, 725, 751], "track": [1, 8, 11, 689, 703, 705, 754, 758], "thorough": 1, "absolut": [1, 6, 8, 11, 12, 36, 70, 71, 73, 242, 684, 703, 705, 712, 759], "sure": [1, 6, 8, 75, 242, 261, 281, 293, 302, 337, 345, 404, 407, 462, 684, 685, 689, 692, 695, 703, 704, 705, 707, 710, 711, 712, 717, 718, 719, 721, 722, 723, 729, 733, 734, 735, 741, 744, 745, 748], "present": [1, 264, 272, 493, 689, 705, 709, 710, 711, 743], "figur": [1, 8, 512, 607, 609, 703, 711, 712, 717, 718, 719, 723], "implicitli": 1, "repositori": [1, 703, 708, 710, 711, 759], "affect": [1, 8, 703, 715, 736, 740], "immedi": [1, 42, 703, 705, 710, 711], "noth": [1, 8, 689, 706, 725, 744, 753, 755, 756], "preclud": 1, "wouldn": 1, "limit": [1, 705, 708, 716], "review": 1, "agre": 1, "column": [1, 609, 690, 695, 705, 711, 720, 736, 746, 748, 751, 759], "eas": [1, 710], "shallow": [1, 9, 705, 715, 718, 755, 757], "water": [1, 9, 689, 695, 710, 736, 741, 742, 743, 745, 748, 750, 751, 754], "he": 1, "down": [1, 676, 677, 678, 679, 680, 681, 682, 683, 692, 695, 738], "road": 1, "86": 1, "higher": [1, 689, 710, 745, 758], "subject": 1, "thing": [1, 6, 257, 258, 260, 261, 262, 703, 704, 708, 710, 711], "proof": 1, "concept": [1, 703, 704, 707, 760], "250": [1, 689, 690, 711, 738, 746, 758], "thick": [1, 174, 245, 246, 247, 248, 256, 264, 266, 485, 490, 493, 676, 680, 681, 682, 683, 685, 689, 690, 692, 694, 695, 696, 712, 715, 717, 720, 722, 726, 727, 738, 740, 741, 742, 743, 745, 746, 748, 750, 751], "245": 1, "imposs": 1, "effect": [1, 751, 757], "ask": [1, 716, 745], "evolv": [1, 264, 708, 736, 738, 751], "declar": [1, 3, 7], "good": [1, 8, 11, 703, 705, 709, 710, 711], "merg": 1, "intent": [1, 8], "ongo": 1, "basi": [1, 350, 353, 355, 357, 359, 361, 740], "demonstr": [1, 703, 710, 711, 752, 758], "compass": [2, 3, 5, 7, 8, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 684, 685, 686, 687, 688, 689, 690, 691, 692, 694, 695, 696, 697, 698, 699, 700, 701, 702, 706, 707, 709, 710, 712, 714, 715, 718, 722, 726, 727, 730, 731, 732, 733, 734, 735, 739, 740, 745, 746, 749, 751, 754, 758, 760, 761], "packag": [2, 5, 6, 7, 8, 12, 14, 17, 25, 28, 67, 72, 73, 261, 264, 378, 689, 703, 705, 706, 707, 708, 709, 710, 711, 725, 730, 731, 732, 733, 734, 735, 745, 749, 759], "output": [2, 6, 7, 8, 9, 11, 16, 22, 26, 34, 58, 59, 60, 65, 69, 75, 91, 93, 101, 106, 108, 116, 121, 123, 127, 132, 137, 152, 173, 180, 182, 187, 188, 202, 206, 207, 231, 241, 243, 244, 245, 246, 247, 248, 250, 255, 256, 264, 272, 275, 276, 277, 289, 292, 301, 312, 327, 337, 342, 348, 399, 420, 436, 442, 459, 467, 488, 496, 500, 503, 506, 518, 546, 547, 564, 578, 592, 604, 609, 616, 632, 651, 668, 675, 685, 686, 687, 689, 690, 692, 694, 695, 696, 698, 702, 707, 708, 709, 711, 712, 722, 725, 733, 735, 742, 745, 747, 757, 759, 761], "yyyi": 3, "mm": [3, 331, 567, 581, 595, 619], "dd": 3, "summar": [3, 715], "code": [3, 6, 7, 8, 11, 242, 247, 264, 684, 687, 703, 705, 707, 708, 710, 711, 712, 715, 720, 724, 737, 740, 755, 759], "softwar": [3, 59, 733, 735, 759], "success": [3, 37, 242, 684, 703, 712], "your": [3, 5, 6, 8, 242, 261, 684, 704, 705, 706, 709, 710, 711, 712, 730, 733, 734, 735, 744, 745, 753, 755, 756, 759], "appear": [3, 261, 695, 703], "head": 3, "technic": [3, 7], "focu": [3, 709], "extent": [3, 146, 758], "independ": [3, 6, 703, 707, 725], "thu": [3, 7, 703, 710, 725, 745, 751], "meet": [3, 750], "pde": 3, "solver": [3, 95, 97, 99, 104, 141, 148, 150, 153, 156, 162, 164, 243, 246, 247, 248, 255, 256, 703, 705, 708, 715, 716, 717, 718, 719, 721, 722, 729, 759], "steer": [3, 725], "low": [3, 150, 234, 508, 510, 745, 751, 752], "interfac": [3, 8, 264, 266, 508, 511, 512, 515, 516, 517, 519, 674, 675, 676, 682, 683, 692, 695, 703, 704, 705, 708, 710, 711, 736, 738], "sequenc": [3, 245, 246, 248, 250, 256, 507, 689, 703, 704, 707, 759, 760, 761], "math": 3, "almost": [3, 8, 709], "latex": 3, "2ab": 3, "imag": [3, 7, 277, 278, 506, 507, 508, 509, 510, 511, 513, 514, 515, 516, 517, 518, 519, 703, 710, 715, 717, 718, 719, 723, 745, 756], "small": [3, 8, 20, 244, 264, 690, 703, 715, 716, 717, 718, 722, 730, 737, 738, 748, 751, 755, 759], "jpeg": 3, "png": [3, 8, 277, 278, 688, 697, 700, 710, 711, 715, 717, 718, 720, 723], "okai": [3, 703, 711], "centric": 3, "pseudo": 3, "item": 3, "timelin": 3, "staf": 3, "example_funct": 3, "foo": [3, 704], "configur": [3, 6, 7, 8, 11, 21, 26, 37, 60, 63, 64, 65, 66, 67, 70, 71, 73, 80, 93, 108, 123, 182, 187, 202, 232, 249, 261, 278, 399, 400, 674, 676, 677, 678, 682, 683, 686, 687, 700, 704, 708, 709, 710, 711, 712, 718, 722, 725, 728, 733, 734, 735, 736, 738, 740, 745, 747, 751, 754, 757, 758, 759, 760], "properli": [3, 257, 258, 259, 260, 710, 712, 740, 756, 759], "page": [4, 7, 612, 730], "auto": 4, "summari": [4, 243, 716, 725], "relev": [4, 7, 8, 249, 493, 710, 711, 725, 730, 731, 732, 733, 734, 735, 759], "procedur": [5, 243, 261, 264, 705, 709, 733, 735], "export": [5, 706], "docs_vers": 5, "test": [5, 6, 7, 8, 9, 10, 11, 16, 21, 22, 26, 27, 28, 30, 31, 32, 34, 35, 39, 42, 43, 48, 50, 53, 55, 60, 62, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 261, 264, 265, 269, 270, 271, 273, 274, 674, 684, 685, 686, 687, 688, 690, 691, 692, 694, 695, 696, 697, 698, 699, 700, 701, 702, 705, 706, 707, 708, 714, 716, 717, 718, 719, 720, 721, 722, 723, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 744, 746, 748, 750, 751, 752, 753, 754, 755, 756, 758], "cd": [5, 242, 684, 705, 710, 711, 759], "rm": [5, 757], "rf": 5, "developers_guid": [5, 710, 711], "_build": 5, "view": [5, 686, 705], "act": [6, 485, 704, 711, 738], "instal": [6, 705, 710, 733, 734, 735, 759], "reflect": [6, 686, 705], "h": [6, 689, 703, 711, 758], "v": [6, 264, 705, 745, 761], "example_compact": [6, 242, 684, 703, 712], "test1": 6, "test2": 6, "displai": [6, 8, 272, 733, 735], "messag": [6, 8, 703, 706, 733, 735], "test_expr": [6, 39], "substr": 6, "express": [6, 39], "think": [6, 710], "tempat": 6, "step1": 6, "step2": 6, "underli": 6, "framework": [6, 7, 26, 68, 75, 242, 684, 703, 707, 708, 710, 714, 739, 754, 758], "standalon": [6, 259, 703, 736], "num": 6, "mach": [6, 11, 730, 731, 732, 733, 734, 735, 759], "p": [6, 705, 710, 712, 759], "suite_nam": [6, 8, 35, 69, 71, 72, 73, 759], "case_numb": 6, "comma": [6, 8, 719, 744, 753, 755, 756], "requir": [6, 8, 11, 21, 82, 87, 99, 114, 135, 150, 164, 171, 229, 239, 242, 247, 248, 255, 256, 287, 308, 317, 363, 375, 457, 465, 473, 498, 526, 567, 581, 595, 619, 684, 689, 698, 702, 703, 704, 705, 706, 708, 709, 710, 711, 712, 714, 715, 718, 720, 721, 722, 725, 726, 727, 729, 734, 738, 739, 745, 759, 760], "piec": [6, 703, 710], "r": [6, 689, 733, 735, 744], "tell": [6, 705], "re": [6, 150, 234, 685, 687, 689, 702, 703, 704, 705, 707, 709, 710, 711, 712, 733, 734, 735, 744, 747, 751, 753, 755, 756, 759], "leav": [6, 269, 703, 712, 725, 748, 751], "unknown": [6, 261, 734], "temp": 6, "baseline_dir": [6, 26, 70, 71, 73], "predefin": [6, 754], "afther": 6, "behind": [6, 704, 710], "fresh": [6, 709], "resid": 6, "test_suit": [6, 703], "proven": [6, 36, 708, 712, 745], "entir": [6, 709, 710, 741, 748, 750, 751, 761], "complet": [6, 8, 14, 17, 243, 264, 705, 710, 711, 715, 745, 759], "comparison": [6, 8, 26, 74, 75, 312, 321, 687, 689, 703, 712, 743, 745, 748, 751], "against": [6, 8, 75, 255, 348, 412, 472, 481, 525, 689, 690, 698, 702, 703, 711, 715, 718, 740, 742, 743], "no_step": 6, "wherea": [6, 8, 703, 748, 758, 760], "clone": [6, 242, 684, 703, 705, 710, 711, 759], "tab": [6, 759], "full_run": [6, 689, 718, 719, 721, 723, 729, 741, 745, 748], "restart_run": [6, 82, 87, 99, 114, 150, 164, 171, 229, 239, 689, 718, 719, 721, 723, 729, 741, 745, 748], "preced": [6, 36], "serial": [6, 20, 700, 703, 756], "structur": [6, 8, 708, 711, 725, 745], "onto": [6, 191, 197, 206, 207, 214, 252, 264, 275, 442, 651, 656, 691, 701, 705, 725, 747, 756, 757], "whose": [6, 605, 609, 610, 703], "pr": [6, 759, 761], "saniti": [6, 264], "print": [6, 8, 39, 75, 610, 611, 703, 704, 711, 761], "restructuredtext": 7, "label": [7, 711, 734, 759], "_ocean": 7, "dev_": 7, "prepend": 7, "_dev_ocean": 7, "_ocean_baroclinic_channel": 7, "_ocean_baroclinic_channel_default": 7, "_dev_ocean_baroclinic_channel": 7, "_dev_ocean_baroclinic_channel_default": 7, "who": [7, 705, 710, 711, 712, 733, 735], "citat": 7, "brief": [7, 710, 711], "awar": [7, 261, 703, 710, 711, 725, 734], "wish": [7, 8, 264, 703, 705, 709, 710, 745, 759, 761], "specif": [7, 8, 28, 242, 261, 684, 687, 689, 702, 703, 705, 708, 709, 710, 711, 712, 725, 728, 734, 745, 759, 761], "share": [7, 77, 201, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 264, 684, 685, 686, 687, 689, 692, 694, 695, 696, 698, 702, 703, 705, 708, 710, 711, 713, 718, 719, 720, 723, 725, 732, 733, 734, 735, 737, 741, 750, 752, 759], "public": [7, 8, 703, 712, 725], "underscor": [7, 710, 711], "currentmodul": 7, "autosummari": 7, "toctre": 7, "numpydoc": 7, "compute_land_ice_pressure_and_draft": [7, 264], "ssh": [7, 264, 266, 267, 268, 420, 422, 676, 678, 679, 680, 681, 682, 683, 684, 686, 687, 689, 692, 695, 703, 710, 712, 733, 735, 736, 742, 743, 745, 747, 748, 751], "modifysshmask": 7, "ref_dens": [7, 268], "draft": [7, 268, 490, 692, 695, 736, 738, 745, 751], "paramet": [7, 9, 10, 11, 12, 14, 15, 16, 17, 18, 21, 23, 24, 25, 26, 27, 31, 32, 34, 35, 37, 38, 39, 42, 43, 45, 46, 47, 50, 55, 57, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 80, 82, 85, 87, 89, 91, 93, 95, 97, 99, 102, 104, 106, 108, 110, 112, 114, 117, 119, 121, 123, 124, 127, 129, 132, 135, 138, 141, 145, 148, 150, 153, 156, 158, 160, 162, 164, 167, 169, 171, 174, 176, 178, 180, 182, 183, 184, 187, 188, 189, 190, 191, 192, 195, 196, 197, 198, 201, 202, 203, 205, 206, 207, 208, 211, 213, 214, 215, 219, 221, 224, 226, 229, 232, 235, 237, 239, 266, 267, 268, 269, 272, 273, 275, 276, 277, 278, 280, 281, 284, 287, 290, 293, 296, 299, 302, 306, 308, 310, 312, 315, 317, 319, 321, 324, 327, 328, 330, 334, 337, 341, 342, 345, 348, 350, 353, 355, 357, 359, 361, 363, 366, 369, 372, 375, 378, 381, 383, 386, 389, 391, 394, 396, 399, 400, 401, 404, 407, 411, 413, 415, 417, 420, 427, 430, 433, 436, 439, 442, 447, 450, 453, 454, 457, 460, 462, 465, 468, 471, 473, 475, 477, 478, 480, 482, 485, 486, 489, 490, 491, 493, 496, 498, 501, 503, 506, 508, 509, 510, 512, 513, 514, 518, 522, 524, 526, 528, 530, 533, 535, 539, 543, 546, 547, 549, 552, 554, 556, 558, 561, 564, 566, 570, 572, 575, 578, 580, 584, 586, 589, 592, 594, 598, 600, 603, 604, 605, 606, 609, 610, 611, 612, 613, 616, 618, 622, 624, 628, 639, 642, 645, 648, 651, 656, 658, 662, 665, 666, 669, 671, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 689, 698, 702, 703, 708, 721, 722, 725, 726, 727, 729, 741, 745, 748, 750, 751, 754, 758], "xarrai": [7, 266, 268, 489, 506, 508, 510, 518, 676, 677, 678, 679, 680, 681, 682, 683, 703, 710, 711], "dataarrai": [7, 266, 268, 508, 510, 677, 678, 679, 680, 681, 703], "mask": [7, 264, 268, 272, 489, 506, 676, 679, 682, 683, 689, 695, 703, 710, 712, 738, 745, 747], "landicepressur": [7, 264, 267, 268, 689, 695, 703, 736, 745, 748, 751], "deviat": [7, 268], "densiti": [7, 8, 146, 264, 268, 276, 710, 721, 722, 726, 727, 729, 736, 751, 754], "seawat": [7, 268, 751], "displac": [7, 268, 736], "landicedraft": [7, 264, 268, 695, 751], "equal": [7, 249, 268, 704, 742], "entri": [7, 33, 70, 71, 695, 751], "side": [7, 752], "colon": 7, "doubl": [7, 493, 703, 754], "quot": 7, "interfer": 7, "keyword": [7, 8, 703, 711], "arg": [7, 8, 65], "On": [7, 8, 711, 734, 762], "indent": [7, 703], "obviou": [7, 703, 710], "els": [7, 8, 703, 710], "meant": [8, 704, 711, 712, 715, 717, 718, 722, 728, 740], "list_cas": 8, "list_machin": [8, 704], "list_suit": 8, "anywher": [8, 705], "setup_cas": 8, "clean_cas": 8, "setup_suit": 8, "clean_suit": 8, "product": [8, 420, 702, 747], "ntask": [8, 11, 18, 21, 60, 65, 82, 87, 99, 114, 135, 150, 164, 171, 229, 239, 287, 308, 317, 363, 375, 457, 465, 473, 498, 526, 685, 689, 694, 703, 709, 710, 711], "cpus_per_task": [8, 11, 18, 21, 65, 703], "caveat": 8, "sit": 8, "idl": 8, "fraction": [8, 82, 243, 489, 490, 695, 710, 716, 738, 741, 748, 750, 751, 752, 753, 754, 758], "min_task": [8, 11, 21, 65, 82, 87, 99, 114, 135, 150, 164, 171, 229, 239, 287, 308, 317, 363, 375, 457, 465, 473, 498, 526, 538, 685, 689, 702, 703, 709, 710, 711], "min_cpus_per_task": [8, 11, 21, 65, 703], "fewest": 8, "run_test": [8, 703, 711], "run_single_step": 8, "cpu": [8, 261, 703, 759], "retriev": [8, 706], "text": [8, 744], "txt": [8, 72, 73, 703, 706], "case_output": 8, "implement": [8, 243, 244, 245, 246, 247, 250, 264, 490, 685, 686, 687, 688, 690, 691, 692, 694, 695, 696, 697, 698, 699, 700, 701, 702, 704, 710, 711, 715, 716, 717, 718, 719, 720, 723, 736, 741, 744, 745, 746, 753, 754, 755, 756, 758], "termin": [8, 703, 711], "window": [8, 717, 718, 720, 723], "update_cach": 8, "enabl": [8, 666, 689, 698, 702, 703, 706, 712, 715, 733, 735, 745, 758], "parser": [8, 36], "mpasconfigpars": 8, "compassconfigpars": [8, 11, 26, 37, 60, 63, 64, 66, 67, 93, 108, 123, 182, 187, 201, 202, 278, 280, 399, 400, 453, 665, 674, 676, 677, 678, 682, 683], "convert": [8, 507, 567, 581, 595, 619, 703, 709, 710, 711], "add_from_packag": 8, "make_diagnostics_fil": [8, 745], "makediagnosticsfil": 8, "behavior": [8, 69, 493, 703, 709, 710, 715, 718, 740, 751], "getinteg": 8, "getfloat": [8, 698, 703, 709, 710, 711], "getboolean": [8, 703, 710], "getlist": 8, "integ": [8, 606], "getexpress": 8, "tupl": [8, 512], "rang": [8, 264, 508, 510, 689, 722, 736, 754], "arang": 8, "check_cal": [8, 703], "won": [8, 704, 709, 710, 711, 712], "captur": [8, 711], "insid": [8, 703, 704, 710, 751], "subprocess": [8, 11, 65, 68, 703, 704, 706, 711], "trick": [8, 245, 703], "snippet": [8, 710], "setup_mesh": [8, 244, 245, 703, 717, 718, 720, 723], "create_landice_grid_from_generic_mpas_grid": [8, 244, 245, 246, 247, 250], "mpas_grid": [8, 245, 703], "o": [8, 628, 689, 701, 704, 705, 711, 712, 757, 759], "landice_grid": [8, 703], "l": [8, 75, 733, 735], "relat": [8, 23, 79, 242, 245, 248, 250, 255, 256, 264, 511, 519, 684, 685, 686, 687, 689, 692, 694, 695, 696, 698, 702, 703, 704, 705, 706, 710, 712, 715, 717, 718, 719, 720, 723, 730, 731, 732, 733, 734, 735, 736, 738, 741, 742, 743, 745, 747, 748, 750, 751, 752, 753, 754, 756, 757, 758, 759], "intern": [8, 11, 26, 471, 473, 475, 477, 478, 480, 482, 694, 703, 706, 750], "importlib": [8, 703], "though": [8, 11, 703, 704, 710, 711, 745], "whenev": [8, 703, 710, 711], "step_dir": 8, "database_root": 8, "download_path": 8, "join": 8, "remote_filenam": 8, "bedmachineantarctica_and_gebco_2019_0": 8, "05_degre": 8, "200128": 8, "local_filenam": 8, "topographi": [8, 264, 489, 490, 512, 679, 689, 695, 703, 710, 736, 738, 741, 747, 748, 750, 751, 752, 753, 754, 758, 760], "file_nam": 8, "web": [8, 612, 703, 712], "anl": [8, 703, 712], "dest_path": [8, 37], "remot": [8, 12, 705], "quasiuniformsphericalmeshstep": [8, 264, 688, 689], "icosahedralmeshstep": [8, 688, 689], "jigsaw": [8, 43, 47, 49, 50, 52, 54, 55, 324, 327, 703, 721, 729, 745], "opt": [8, 55], "make_jigsaw_mesh": [8, 50], "icosahedr": [8, 43, 45, 324, 327, 689, 744, 757], "smooth": [8, 490, 695, 736, 751], "hand": [8, 704], "subdivis": [8, 43, 44, 45, 46, 47, 757], "icosahedron": [8, 44, 45, 46, 47], "6": [8, 45, 246, 520, 689, 690, 696, 702, 703, 710, 711, 719, 722, 725, 739, 742, 743, 752, 758, 759], "120": [8, 45, 606, 689, 702, 742, 744, 755], "7": [8, 45, 695, 702, 717, 725, 733, 735, 744, 745, 748, 751, 757, 758, 759], "9": [8, 45, 512, 689, 702, 711, 734, 745, 751, 753, 759], "94": [8, 45], "spherical_mesh": [8, 51, 264, 745, 747, 757], "cell_width": [8, 43, 44, 45, 46, 50, 51, 52, 57, 273, 381, 389, 394, 450, 757], "icosahedral_method": [8, 757], "jigsaw_mesh_filenam": 8, "msh": 8, "jigsaw_geom_filenam": 8, "geom": 8, "jigsaw_jcfg_filenam": 8, "jig": 8, "jigsaw_hfun_filenam": 8, "spac": 8, "triangles_filenam": 8, "mesh_triangl": 8, "mpas_mesh_filenam": 8, "plot_cell_width": 8, "cell_width_filenam": [8, 57], "cellwidthvslatlon": 8, "cell_width_image_filenam": 8, "cellwidthglob": 8, "cell_width_colormap": 8, "3wbgy5": 8, "add_mesh_dens": 8, "vtk": 8, "convert_to_vtk": 8, "vtk_dir": 8, "base_mesh_vtk": 8, "extract": [8, 628, 632, 634, 636, 637, 689, 701, 757], "sphere": [8, 560, 561, 575, 589, 613, 688, 697, 699, 700, 744, 755, 756], "vtk_lat_lon": 8, "librari": [8, 248, 255, 256, 257, 261, 705, 710, 711, 715, 730, 731, 732, 733, 734, 735, 746, 756, 759], "moment": 8, "openmp_thread": [8, 11, 21, 65, 82, 87, 99, 114, 135, 150, 164, 171, 229, 239, 287, 308, 317, 363, 375, 457, 465, 473, 498, 526, 689, 694, 703, 710, 711], "gpmeti": [8, 712, 745], "divid": [8, 566, 580, 594, 618, 690, 711, 716, 738, 742], "partition_graph": [8, 61, 698, 702], "circumst": [8, 736], "wast": 8, "update_namelist_pio": 8, "config_pio_num_iotask": [8, 703], "config_pio_strid": [8, 703], "v2": [8, 689, 708, 712, 738, 745], "feel": [8, 703, 709, 710, 711], "safe": [8, 703, 705], "update_pio": [8, 61], "yourself": [8, 710, 734], "fact": [8, 11, 710], "culler": [8, 711], "make_graph_fil": [8, 703], "field": [8, 57, 59, 190, 196, 252, 255, 264, 272, 275, 443, 444, 485, 489, 652, 653, 676, 682, 683, 685, 689, 692, 694, 695, 696, 698, 699, 702, 710, 715, 722, 725, 736, 741, 743, 744, 745, 747, 748, 750, 751, 752, 753, 754, 755, 757, 758], "weight": [8, 59, 187, 202, 264, 375, 454, 465, 498, 676, 682, 683, 718, 736, 738, 745], "weight_field": [8, 59], "critic": [8, 264, 272, 709, 710, 745], "filename2": [8, 75], "simpl": [8, 490, 695, 704, 710, 711, 751, 759], "temperatur": [8, 110, 112, 206, 246, 247, 264, 517, 552, 685, 687, 689, 690, 692, 694, 695, 696, 698, 702, 703, 710, 719, 720, 725, 740, 741, 743, 744, 745, 748, 750, 751, 752, 753, 754, 758], "salin": [8, 264, 515, 516, 552, 685, 687, 689, 690, 692, 694, 695, 696, 698, 702, 703, 710, 725, 740, 741, 743, 744, 745, 748, 750, 751, 752, 753, 754, 758], "prognost": [8, 689, 692, 695, 715, 718, 719, 721, 722, 723, 729, 740, 741, 745, 748, 750, 752, 754, 758], "4proc": [8, 741, 745], "8proc": [8, 741, 745], "alter": [8, 485, 677, 678, 695, 703, 708, 710, 738, 741, 744, 745, 748, 750, 751, 752, 753, 754, 755, 756, 758], "skip_if_step_not_run": [8, 75, 703], "forc": [8, 164, 183, 184, 187, 188, 189, 191, 195, 197, 201, 202, 203, 211, 214, 252, 264, 442, 485, 486, 491, 493, 687, 691, 695, 698, 725, 751, 754, 756, 757, 758, 760], "failur": 8, "quiet": [8, 69, 75, 711], "report": 8, "threshold": [8, 264, 490, 695, 722, 744, 745, 747, 751, 753], "l1": [8, 75], "00000000000000e": 8, "l2": [8, 75, 603, 604, 605, 606, 611], "l_infin": 8, "linf": [8, 75, 603, 604, 605, 606, 611], "test_nightly_latest": 8, "1thread": [8, 741, 745], "2thread": [8, 741, 745], "test_20210616": 8, "further_valid": 8, "disabl": [8, 696, 715, 722, 745, 760], "check_output": [8, 75], "unlik": [8, 710, 711, 712, 725, 754, 758], "zero": [8, 174, 250, 485, 493, 677, 678, 679, 680, 681, 685, 690, 692, 694, 695, 702, 709, 711, 719, 723, 748, 751], "l1_norm": [8, 75], "l2_norm": [8, 75], "linf_norm": [8, 75], "nonzero": [8, 75, 699, 755], "easiest": [8, 710], "clobber": 8, "qualit": [8, 703], "judgment": 8, "compare_tim": 8, "rundir1": [8, 74], "92264": 8, "82317": 8, "percent": 8, "781019682649793": 8, "speedup": 8, "1208377370409515": 8, "hous": [9, 745], "sw": 9, "dict": [9, 11, 15, 17, 23, 25, 26, 31, 67, 71, 337, 420, 540, 604, 605, 610, 703, 709, 711], "max_memori": [11, 21], "run_as_subprocess": [11, 703], "smallest": [11, 703, 707, 738, 760], "unit": [11, 508, 510, 520, 567, 581, 595, 619, 703, 707, 741, 743, 750, 752, 760], "necessarili": [11, 12, 707, 745], "openmp": [11, 21, 65, 82, 87, 99, 114, 135, 150, 164, 171, 229, 239, 257, 258, 259, 260, 287, 317, 363, 375, 457, 465, 473, 498, 526, 703, 710, 730, 731, 732, 733, 735, 756], "parallel": [11, 20, 21, 700, 703, 704, 705, 706, 707, 710, 712, 730, 731, 732, 733, 734, 735, 756, 759, 760], "input_data": 11, "namelist_data": 11, "streams_data": 11, "machine_info": 11, "machineinfo": 11, "base_work_dir": [11, 26, 703], "log_filenam": [11, 26, 703], "At": [11, 26, 689, 703, 710, 711, 722, 726, 727, 751], "redirect": [11, 703], "work_dir_target": [12, 703], "out_nam": [14, 15, 17, 23, 24, 25, 703], "render": [17, 25, 703, 711], "available_cor": 18, "everi": [19, 685, 692, 703, 704, 705, 706, 707, 709, 710, 711, 741, 748], "subtask": 21, "runtime_setup": [21, 29, 86, 96, 98, 105, 111, 113, 120, 126, 131, 142, 144, 149, 154, 161, 168, 170, 177, 179, 222, 227, 233, 236, 238, 283, 286, 295, 298, 304, 352, 380, 449, 456, 464, 641, 647, 660, 664, 673], "consist": [24, 61, 267, 552, 684, 692, 703, 710, 711, 712, 717, 736, 748, 751], "decomposit": [26, 156, 264, 275, 281, 707, 715, 717, 719, 721, 722, 729], "stdout_logg": 26, "goe": [26, 703, 710, 711], "regardless": [26, 689], "statu": 26, "prior": [28, 703], "constrain_resourc": [29, 86, 96, 98, 105, 111, 113, 120, 126, 131, 142, 144, 149, 154, 161, 168, 170, 177, 179, 222, 227, 233, 236, 238, 283, 286, 295, 298, 304, 352, 380, 449, 456, 464, 641, 647, 660, 664, 673], "step_path": 34, "datestamp": 34, "dry": [34, 305, 314, 317, 319, 321, 686, 687, 695, 743, 747, 751, 757], "meta": 36, "link_nam": 38, "stackoverflow": 38, "55742015": 38, "7728169": 38, "symbol": [38, 703], "fileexistserror": 38, "try": [38, 703, 704, 705, 706, 710, 711, 712, 735, 745, 759], "isadirectoryerror": 38, "decomposition_test": [42, 244, 245, 703, 715, 759], "decompositiontest": [42, 246, 248, 249, 250, 256, 703], "turquois": 42, "mhoffman": 42, "ndarrai": [44, 51, 52, 57, 506, 603, 606, 611, 674, 675], "static": [45, 46, 711], "rule": 45, "thumb": 45, "close": [46, 156, 272, 692, 708, 744], "subclass": [47, 50, 51, 52, 56], "jigsawpi": [55, 703], "jigsaw_jig_t": 55, "finish": 56, "mesh_filenam": [59, 745], "graph_filenam": [59, 275, 276, 702], "graph_fil": [60, 61], "interact": [63, 689, 733, 734, 735, 759], "batch": 63, "slurm_job_id": 63, "substep": 65, "cpus_per_nod": 66, "step_is_subprocess": 68, "is_test_cas": 69, "steps_not_to_run": 69, "mpas_model_path": [70, 71, 73], "cached_step": 70, "copy_execut": [70, 71, 73, 759], "rundir2": 74, "norm": [75, 605, 607, 755], "infin": [75, 755], "toler": [75, 244, 715, 722], "exclud": [75, 745, 759], "assess": [79, 178, 243, 401, 689, 716, 724], "timestep": [79, 243, 715, 716], "calv": [79, 80, 82, 156, 162, 164, 243, 248, 256, 490, 695, 715, 716, 722, 751], "pre": [79, 228, 234, 249, 716, 721, 722, 729], "veloc": [79, 82, 95, 97, 99, 104, 141, 148, 150, 153, 156, 162, 164, 243, 255, 256, 411, 442, 511, 519, 685, 689, 690, 692, 694, 695, 696, 702, 703, 705, 711, 715, 716, 717, 718, 721, 722, 729, 740, 744, 745, 746, 748, 753, 755, 758, 759], "velo": [80, 82, 715], "config_adaptive_timestep_calvingcfl_fract": [80, 243], "calvingdtconverg": [80, 243], "calv_dt_frac": 82, "dt": [82, 331, 702, 716, 744, 753], "mesh_fil": [82, 164, 436, 437, 725], "twice": [82, 87, 99, 114, 150, 164, 171, 229, 239], "mismip": [82, 228, 229, 232, 255, 715, 728, 751], "humboldt": [82, 242, 251, 714, 715, 716, 724], "thwait": [82, 242, 251, 714, 715, 724], "specified_calving_veloc": [82, 164, 715, 716], "eigencalv": [82, 164, 715], "von_mises_stress": [82, 164, 715], "fo": [82, 95, 97, 99, 104, 141, 148, 150, 153, 156, 162, 164, 243, 248, 255, 256, 703, 715, 717, 718, 721, 722, 729], "circular": [84, 85, 717, 754], "four": [85, 95, 110, 156, 252, 264, 703, 725, 751, 754], "input_dir": [91, 106, 180], "velo_solv": [95, 97, 99, 104, 141, 148, 150, 153, 156, 162, 164, 248, 703], "sia": [95, 97, 99, 104, 141, 148, 150, 153, 156, 162, 164, 248, 703, 705, 715, 718, 721], "segment": [97, 112, 148, 162, 169, 237, 689], "thermal_solv": [110, 112], "enthalpi": [110, 112, 124, 129, 134, 138, 246, 247, 719, 720], "formul": [110, 112], "thermodynam": [110, 112, 715], "standardexperi": [121, 246], "kleiner": [124, 129, 247, 720], "benchmark": [124, 129, 134, 138, 247, 720], "enthalpybenchmark": [124, 129, 247], "sheet": [141, 148, 247, 248, 250, 252, 489, 695, 718, 719, 720, 721, 723, 725, 736, 745, 751], "eight": 141, "high": [143, 704, 731, 734, 745, 751, 752, 754, 758], "basal": [143, 207, 247, 252, 717, 719, 720, 721, 722, 725, 726, 727, 729], "friction": [143, 511, 519, 689, 717, 721, 722, 726, 727, 729, 745], "optim": [143, 721, 722, 726, 727, 729], "definit": [146, 703, 709, 710, 711], "region": [146, 195, 249, 253, 254, 686, 689, 691, 708, 712, 742, 745, 747, 748, 751, 758], "observ": [146, 211, 213, 252, 420, 422, 436, 437, 691, 708, 725, 726, 727, 747], "flow": [146, 699, 718, 742, 743, 744, 751, 753, 755], "speed": [146, 721, 722, 726, 727, 729], "distanc": [146, 490, 695, 710, 721, 722, 726, 727, 729, 741, 750, 758], "margin": [146, 721, 722, 726, 727, 729], "20km": [150, 702, 740, 758, 761], "calving_law": [156, 162, 164], "damag": [156, 162, 164, 722], "face_melt": [156, 162, 164], "law": [156, 162, 164, 715, 716, 722], "face": [156, 162, 164], "melt": [156, 162, 164, 206, 207, 252, 513, 519, 689, 695, 725, 736, 745, 748, 751], "proc_list": 156, "pair": [156, 605, 722, 755], "count": [156, 235, 689, 709, 745], "3km": [156, 162, 164], "forcing_fil": [164, 442], "damagecalv": [164, 715], "ismip6_retreat": [164, 715], "radial": [166, 167, 169, 171, 176, 250, 717, 718, 723], "symmetr": [166, 167, 169, 171, 176, 250, 717, 718, 719, 723, 750], "hydrologi": [166, 250, 703, 718], "hydrolog": [167, 169, 171, 176, 250, 723], "three": [167, 276, 696, 710, 711, 721, 724, 725, 729, 734, 745, 752, 755], "hydroradi": [167, 176, 178, 250], "exact": [174, 178, 250, 688, 697, 699, 704, 723], "precomput": 174, "steadi": [176, 250, 723, 751], "reach": [176, 751], "drift": 178, "ismip6": [183, 184, 187, 188, 189, 190, 191, 192, 195, 196, 197, 198, 201, 202, 203, 205, 206, 207, 208, 211, 214, 215, 252, 689, 725], "atmospher": [183, 442, 651, 689, 691, 757], "8km": [184, 191, 203, 211, 214, 725, 754], "polarstereo": [184, 191, 203, 211, 214, 252, 725], "regrid": [184, 203, 206, 211, 252, 725], "ismip6forc": [184, 203, 211, 252], "ismip6_grid_fil": [187, 202], "mapping_fil": [187, 202], "mali_mesh_fil": [187, 191, 196, 197, 202, 207, 214, 725], "method_remap": [187, 191, 197, 202, 207, 214, 725], "remap": [187, 190, 191, 192, 196, 197, 198, 202, 205, 207, 208, 214, 215, 252, 264, 275, 656, 701, 725], "polarstero": [187, 202], "unstructur": [187, 202, 252, 725, 756], "esmf_regridweightgen": [187, 202], "source_grid_fil": 188, "source_grid_scripfil": 188, "scripfil": 188, "y": [188, 506, 512, 685, 686, 687, 689, 692, 694, 695, 702, 703, 710, 711, 733, 735, 741, 743, 746, 748, 750, 751, 753, 758], "dimens": [188, 743, 752], "smb": [188, 190, 191, 196, 197, 252, 725], "scrip": [188, 252, 689, 711, 712, 745], "input_fil": [189, 191, 195, 197, 207, 214], "mass": [189, 195, 252, 725, 736, 755], "racmo_clim_fil": 190, "output_clim_ismip6_fil": 190, "output_file_fin": 190, "anomali": [190, 196, 252, 725, 758], "racmo": [190, 195, 197, 725], "1995": [190, 725], "2017": [190, 725, 738], "correct": [190, 206, 252, 264, 705, 725], "output_fil": [191, 192, 196, 197, 198, 207, 208, 214, 215, 703], "mali_mesh_nam": [191, 197, 207, 214, 725], "nativ": [191, 197, 214, 252, 725], "remapped_file_temp": [192, 198, 208, 215], "temporari": [192, 198, 206, 207, 208, 215], "rotat": [197, 699, 725, 744, 755], "check_model_opt": 201, "scenario": [201, 725], "period_endyear": [201, 725], "basalmelt": [203, 205], "coeff": 203, "oceanbas": [205, 252], "basin_fil": 206, "coeff_gamma0_deltat_fil": 206, "combined_file_temp": [206, 207], "imbie2": [206, 252, 725], "basin": [206, 252, 689, 698, 725, 754], "rate": [206, 513, 519, 603, 611, 688, 695, 697, 699, 719, 736, 744, 745, 751, 753, 755], "coeffici": [206, 252, 317, 321, 687, 702, 711, 725, 743, 746, 754, 758], "gamma0": 206, "process_ob": [211, 213], "thermal": [211, 214, 246, 247, 252, 511, 519, 719, 725, 754], "cmip": [211, 213, 252], "oceantherm": [213, 252], "kogebugt": [226, 254], "smoke": [232, 255, 689, 728, 729], "14km": [234, 729], "landice_model": [242, 703, 705, 712], "core_path": [242, 245, 684, 703, 712], "submodul": [242, 684, 703, 705, 710, 711, 759], "guarante": [242, 684, 705], "recurs": [242, 684, 704, 705, 710, 711, 759], "calving_dt_converg": [242, 251, 714, 724], "circular_shelf": [242, 251, 714, 715, 724, 759], "hydro_radi": [242, 251, 714, 715, 724, 760], "ismip6_forc": [242, 251, 714, 724], "kangerlussuaq": [242, 251, 714, 724], "koge_bugt_": [242, 251, 714, 724], "mismipplu": [242, 251, 714, 724], "physic": [243, 710, 715, 716, 722, 724, 753], "addition": [243, 244, 245, 246, 247, 250, 685, 686, 687, 689, 692, 694, 695, 696, 698, 702, 722, 725, 730, 731, 732, 733, 735], "globalstat": [243, 745], "hardcod": 243, "smaller": [243, 264, 689, 759], "cost": [243, 728], "analyz": [243, 547, 698, 709, 755], "annoy": 243, "occasion": 243, "fine": [243, 687, 703, 710, 711], "logic": [243, 710, 741, 750], "circularshelf": 244, "horizont": [244, 245, 246, 247, 250, 264, 454, 486, 491, 493, 496, 498, 501, 503, 532, 543, 685, 689, 690, 692, 694, 695, 709, 711, 718, 719, 723, 736, 741, 742, 743, 745, 746, 747, 748, 750, 751, 752, 753, 757, 758], "planar_hex": [244, 245, 246, 247, 250, 685, 686, 687, 692, 694, 695, 696, 702, 703, 710, 711], "make_planar_hex_mesh": [244, 245, 246, 247, 250, 685, 686, 687, 692, 694, 695, 696, 702, 703, 710, 711], "privat": [244, 245, 246, 247, 250, 709], "_setup_circular_shelf_initial_condit": 244, "circular_shelf_viz": [244, 717], "200": [244, 245, 246, 247, 702, 703, 710, 718, 719, 720, 751], "ureconstructx": 244, "ureconstructi": 244, "2000": [245, 692, 703, 718, 719, 748, 751, 758], "durat": [245, 247, 248, 249, 250, 255, 256, 486, 540, 685, 686, 687, 689, 692, 694, 695, 696, 703, 718, 745, 750, 753], "dome_varres_grid": [245, 703], "server_base_url": [245, 712], "_setup_dome_initial_condit": [245, 247], "dome_viz": [245, 703, 718], "former": [245, 246, 248, 250, 256], "25": [246, 247, 690, 694, 711, 719, 743, 750, 752, 754], "globalstatsoutput": [246, 692, 695], "runexperi": 246, "letter": [246, 710, 711, 725], "_setup_eismint2_initial_condit": 246, "000": [246, 247, 250, 711, 719, 720, 723], "basaltemperatur": 246, "heatdissip": 246, "restarttest": [246, 248, 249, 250, 256, 685, 689, 692, 703], "et": [247, 250, 312, 710, 714, 718, 719, 720, 723, 738, 741, 742, 743, 744, 750, 751, 754, 755, 758], "al": [247, 250, 312, 710, 714, 718, 719, 720, 723, 738, 741, 742, 743, 744, 750, 751, 754, 755, 758], "2015": [247, 250, 710, 720, 723, 741, 750, 754, 758], "air": [247, 719, 720], "temper": 247, "heat": [247, 485, 511, 720, 748, 751], "basal_heat_flux": [247, 720], "042": [247, 720], "k": [247, 264, 711, 719, 720, 738, 746], "surface_air_temperatur": [247, 720], "243": [247, 720], "100": [247, 513, 689, 692, 698, 702, 710, 711, 715, 719, 720, 738, 751, 754, 758], "phase1_surface_air_temperatur": [247, 720], "phase2_surface_air_temperatur": [247, 720], "268": [247, 720], "150": [247, 720, 744, 754, 755], "phase3_surface_air_temperatur": [247, 720], "analyt": [247, 321, 687, 690, 700, 711, 717, 718, 743, 746, 754, 756, 760], "mat": [247, 703], "400": [247, 720], "270": [247, 720], "dai": [248, 256, 296, 321, 477, 566, 580, 594, 618, 685, 688, 689, 694, 697, 699, 703, 710, 721, 729, 741, 743, 744, 745, 750, 751, 757, 758], "coars": [248, 256, 721, 729, 745, 751], "20": [248, 296, 477, 685, 689, 692, 694, 695, 702, 703, 710, 721, 741, 743, 748, 750, 751, 752, 754, 755, 758], "albany_input": [248, 255], "yaml": [248, 255, 735], "gis20km": 248, "210608": [248, 256], "smoketest": [248, 255, 703], "highresmesh": [248, 256], "glacier": [249, 253, 256, 715, 722, 726, 728, 729], "meshgen": [249, 253, 254], "restartn_test": 249, "plu": [249, 707, 722], "_setup_hydro_radial_initial_condit": 250, "thin": [250, 264, 490, 491, 493, 695, 723, 745, 747, 751], "numer": [250, 264, 703, 736], "bueler": [250, 718, 723], "iscontrol": 250, "hydro_radial_viz": [250, 723], "spinuptest": 250, "steadystatedrifttest": 250, "month": [250, 695, 719, 722, 723, 737, 745, 749, 751, 758], "waterthick": 250, "waterpressur": 250, "ismip6_": 252, "intercomparison": [252, 725, 751], "cmip6": [252, 725], "protocol": [252, 725, 751], "ocean_thermal_ob": 252, "process_smb": [252, 725], "process_smb_racmo": [252, 725], "process_basal_melt": [252, 725], "process_thermal_forc": [252, 725], "build_mapping_fil": 252, "destin": 252, "parameter": [252, 725, 745, 748, 757], "util": [252, 704, 725], "500m": [254, 727], "koge": [254, 727], "bugt": [254, 727], "surfacespe": 256, "load_dev_compass_1": [257, 258, 259, 260, 261, 262, 710, 711], "0_anvil_intel_impi": [257, 261], "sh": [257, 258, 259, 260, 261, 262, 705, 706, 710, 711, 730, 731, 732, 733, 735, 759], "openmpi": [257, 261, 705, 708, 730, 731, 759], "mvapich": [257, 261, 730], "impi": [257, 261, 730, 732, 734], "ifort": [257, 258, 261, 730, 731], "ve": [257, 258, 260, 262, 703, 710], "0_anvil_gnu_openmpi": 257, "gfortran": [257, 258, 261, 705, 730, 731], "0_chrysalis_intel_openmpi": 258, "0_chrysalis_gnu_openmpi": 258, "soon": [259, 725, 759], "0_compy_intel_impi": 259, "architectur": 260, "0_cori": 260, "haswell_intel_mpt": 260, "nersc": [260, 261, 262, 733, 735], "haswell_gnu_mpt": 260, "load_compass_env": [261, 705, 759], "right": [261, 264, 689, 703, 705, 710, 711, 712, 716, 738, 744, 752, 758, 759], "gnu": [261, 705, 732, 734, 759], "lib": 261, "intel": [261, 705, 710, 711, 734], "mpt": [261, 733], "pm": [261, 735, 759], "mpich": [261, 705, 708, 735, 759], "compymcnodefac": [261, 734], "perlmutt": [261, 734, 759], "pretti": [261, 703, 704, 710, 712], "forg": [261, 708, 759], "linux": [261, 705, 734], "configure_compass_env": [261, 705, 706, 710, 711], "conda_path": [261, 705], "osx": [261, 734], "clang": [261, 705], "0_": 261, "alpha": 262, "2_pm": 262, "cpu_gnu_mpich": 262, "expand": [264, 738], "grid_1d": 264, "generate_1d_grid": 264, "star": [264, 453, 454, 462, 486, 491, 493, 498, 681, 683, 692, 695, 710, 741, 743, 748, 750, 751, 752, 753, 758, 761], "init_vertical_coord": [264, 710], "minlevelcel": [264, 676, 678, 679, 680, 681, 682, 683], "maxlevelcel": [264, 676, 677, 678, 679, 680, 681, 682, 683, 703, 711], "cellmask": [264, 676, 679, 682, 683], "zmid": [264, 676, 682, 683], "restingthick": [264, 676, 681, 682, 683, 703, 711], "bottomdepth": [264, 676, 677, 679, 680, 681, 682, 683, 703, 710, 711], "spheric": [264, 269, 688, 689, 700, 744, 745, 747, 756, 757], "cullmeshstep": [264, 689], "cull_mesh": [264, 269], "natur": [264, 272, 745], "earth": [264, 272, 745], "coverag": [264, 272, 715, 757], "north": [264, 272, 689, 741, 745], "antarct": [264, 272, 689, 712, 725, 736, 745, 751], "ground": [264, 272, 489, 490, 491, 493, 695, 717, 729, 745, 751], "bedmachineantarctica": [264, 272, 745], "transect": [264, 272, 506, 689, 712, 745], "passag": [264, 272, 745], "with_critical_passag": [264, 272], "seed": [264, 272, 276], "flood": [264, 272, 686, 745], "lock": [264, 272], "floodplainmeshstep": 264, "preserve_floodplain": [264, 269, 272, 273, 450], "srtm15_plus_earth_relief_15": 264, "elev": [264, 272, 676, 682, 683, 695, 738, 745, 747], "floodplain_elev": [264, 745, 747], "inject_bathymetri": 264, "inject_preserve_floodplain": 264, "compute_haney_numb": 264, "1991": [264, 736], "measur": [264, 745, 754], "gradient": [264, 710, 736, 741, 750, 754, 758], "tilt": 264, "r_": 264, "x1": 264, "frac": [264, 703, 710, 738, 758], "z_": [264, 738], "textrm": 264, "c_2": 264, "c_1": 264, "edg": [264, 266, 745, 748, 752], "adjac": [264, 738, 748], "middl": [264, 676, 682, 683, 695, 751], "boussinesq": 264, "adjust_ssh": 264, "imbal": 264, "period": [264, 411, 420, 493, 535, 543, 685, 686, 687, 690, 692, 694, 696, 697, 702, 703, 710, 711, 716, 725, 741, 743, 747, 748, 750, 753, 757, 758], "hour": [264, 687, 689, 690, 695, 696, 703, 733, 735, 736, 751, 752, 753, 759], "translat": 264, "compens": [264, 736], "repeat": [264, 725], "fix": [264, 276, 512, 688, 695, 703, 748, 751], "elimin": 264, "substanti": [264, 705, 710], "prevent": [264, 485, 695, 703, 736, 751, 757], "caus": [264, 705, 735, 738], "instabl": 264, "agnost": 264, "light": [264, 754, 758], "buoyanc": [264, 276, 702], "isopycn": [264, 276], "passiv": [264, 276, 560], "remap_particl": 264, "plot_initial_st": 264, "histogram": [264, 277], "bottom": [264, 512, 676, 677, 678, 679, 680, 681, 682, 683, 687, 689, 695, 702, 710, 712, 738, 741, 743, 746, 748, 750, 751, 752, 753, 754, 758], "depth": [264, 399, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 689, 690, 695, 702, 710, 711, 712, 738, 741, 745, 746, 748, 750, 751, 752, 753, 754, 757, 758], "distribut": [264, 688, 697, 698, 699, 702, 745, 754, 756, 758], "plot_vertical_grid": 264, "bound": [264, 758], "ds_mesh": 266, "layer_thick": 266, "show_progress": 266, "rx1": 266, "bar": [266, 272, 508, 510], "haney_edg": 266, "haney_cel": 266, "iteration_count": 267, "modify_mask": 268, "base_mesh_step": 269, "do_inject_bathymetri": 269, "sphericalbasestep": [269, 689], "criteria": 269, "with_cav": 272, "custom_critical_passag": 272, "custom_land_blockag": 272, "use_progress_bar": 272, "process_count": 272, "blockag": [272, 745], "geojson": [272, 711], "cellseedmask": 272, "floodplain": [272, 686, 742, 747], "problemat": [272, 703], "init_filenam": [275, 276, 399, 702], "particle_filenam": [275, 276, 702], "posit": [275, 276, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 695, 729, 738, 758], "goal": 275, "currentblock": 275, "compli": 275, "nearest": [275, 437, 744], "neighbor": [275, 745], "form": [275, 276, 704, 711, 758, 760], "n_vert_level": 276, "vert_seed_typ": 276, "n_buoy_surf": 276, "pot_dens_min": 276, "1028": [276, 754], "pot_dens_max": 276, "1030": [276, 754], "spatial_filt": 276, "downsampl": 276, "seed_cent": 276, "seed_vertex": 276, "add_nois": 276, "cfl_min": 276, "005": 276, "densecent": 276, "southernoceanplanar": 276, "southernoceanxyz": 276, "spatial": [276, 757], "filter": 276, "amg": 276, "epsilon": [276, 746], "vertex": 276, "gaussian": [276, 697, 753, 756], "nois": 276, "cfl": [276, 716], "perturb": [276, 741, 744, 750, 751], "input_file_nam": 277, "output_file_nam": 277, "grid_filenam": 278, "out_filenam": [278, 675], "shorter": [293, 462, 715, 719, 740], "energi": [296, 477, 703, 710, 741, 750], "dam": [305, 308, 310, 312, 686, 742], "wet": [305, 314, 686, 695, 747, 751, 757], "dambreak": [306, 686], "experiment": [312, 686, 725, 742], "rom": [312, 321, 686, 687, 742, 743], "warner": [312, 742, 743], "2013": [312, 742, 743, 758], "slope": [314, 317, 319, 321, 687, 736, 743, 748, 754, 755, 758], "coord_typ": [315, 317, 319, 453, 454, 462, 687, 710, 738, 741, 743, 748, 750, 751, 752, 753, 758], "sigma": [315, 317, 319, 687, 743, 751], "single_lay": [315, 687, 743, 751], "dryingslop": [315, 687], "damping_coeff": [317, 321, 687], "rayleigh": [317, 321, 687, 689, 743, 745], "damp": [317, 321, 687, 689, 743, 745], "datatyp": 321, "cosinebel": [327, 330, 334, 688, 709], "rmsevalu": 328, "squar": [328, 547, 688, 696, 697, 753], "ncell": [328, 547, 689, 703, 710, 711], "hh": [331, 567, 581, 595, 619], "ss": [331, 567, 581, 595, 619], "member": [337, 342, 350, 353, 436, 558, 662, 666, 689, 691, 695, 698, 702, 711, 712, 740, 745, 747], "timeseriesstatmonthli": 342, "daili": [342, 745], "stage": [348, 703, 745, 751], "seaic": [350, 689, 745], "diagnost": [350, 353, 689, 712, 717, 730, 732, 733, 734, 735, 745, 759], "meridion": [350, 353, 689, 741, 750, 752, 758], "overturn": [350, 353, 501, 514, 689, 695, 751], "circul": [350, 353, 689, 751], "filesfore3sm": [353, 355, 357, 359, 361, 689, 703], "ntasks_from_config": 363, "min_tasks_from_config": 363, "threads_from_config": 363, "biogeochemistri": [369, 372, 689, 710, 711], "init_subdir": 369, "2d": [375, 452, 454, 457, 460, 462, 465, 468, 484, 486, 498, 561, 575, 589, 613, 748], "output_filenam": 399, "short_mesh_nam": [400, 689], "long_mesh_nam": [400, 689], "turbul": [410, 411, 413, 415, 417, 470, 690, 710, 711, 746], "doubli": [411, 535, 543, 690, 711, 753], "storm": [420, 427, 433, 436, 442, 747], "station": [420, 422, 423, 436, 437, 691, 747, 757], "frmt": 420, "datetim": [420, 703], "min_dat": [420, 422], "max_data": 420, "pointstats_fil": [420, 421, 436], "pointwisestat": [420, 421, 436, 437, 691, 747], "labl": 420, "legend": [420, 711], "obs_fil": 422, "obs_typ": 422, "max_dat": 422, "timeseri": [422, 691, 747, 757], "station_fil": [423, 436], "contiain": 436, "pointstat": 436, "stations_fil": 437, "wind": [442, 689, 691, 698, 747, 754, 758], "plot_interv": 442, "snap": [442, 443, 652], "wind_fil": 442, "pres_fil": 442, "grid_fil": [442, 443, 628, 651, 652], "data_fil": [443, 652], "orig_data": [444, 653], "interp_data": [444, 653], "var_label": 444, "var_abrev": 444, "iceshelf2d": [454, 462, 692, 703, 704, 710, 711], "with_frazil": [457, 666, 669, 692, 740, 761], "cross": [468, 482, 506, 512, 695, 717, 750, 751, 752], "gotm": [470, 684, 693, 710, 711, 739, 749], "internalwav": [471, 477, 480, 694], "in_forcing_fil": 485, "out_forcing_fil": 485, "out_forcing_link": 485, "evapor": [485, 695, 751], "isomip": [485, 486, 490, 491, 493, 496, 501, 503, 506, 518, 695, 751], "evaporationflux": 485, "seaicesalinityflux": 485, "seaiceheatflux": 485, "salt": 485, "northern": [485, 689, 695, 710, 741, 748, 750, 751, 758], "boundari": [485, 686, 687, 689, 695, 697, 708, 721, 736, 741, 748, 750, 751, 752, 758, 760], "spillwai": [485, 686, 695], "rise": [485, 695, 748, 751], "run_dur": [486, 702], "vertical_coordin": [486, 491, 493, 498], "tidal_forc": [486, 493, 503], "time_varying_forc": [486, 491, 493], "thin_film_pres": [486, 490, 491, 493, 498, 695], "ocean0": [486, 491, 493, 496, 501, 503, 506, 518, 695], "ocean1": [486, 491, 493, 496, 501, 503, 506, 518, 695], "ocean2": [486, 491, 493, 496, 501, 503, 506, 518, 695], "dsmesh": [489, 506, 518, 703, 710, 711], "dsgeom": 489, "min_ocean_fract": [489, 751], "bisicl": [489, 490, 695, 751], "process_input_geometri": [489, 695], "dsmask": 489, "regioncellmask": 489, "infilenam": 490, "outfilenam": 490, "filtersigma": 490, "minicethick": 490, "scale": [490, 695, 702, 708, 745, 746, 751, 754, 755, 758, 759], "geometri": [490, 686, 695, 748, 751, 758], "scheme": [490, 695, 699, 701, 725, 747, 751, 752, 755], "film": [490, 491, 493, 695, 751], "time_varying_load": 493, "isomipplu": [493, 695], "decreas": [493, 720, 751], "grow": [493, 737], "tidal": [493, 627, 639, 648, 687, 695, 701, 743, 751, 757], "misomip1": 496, "barotrop": [501, 509, 691, 695, 701, 747, 751, 757], "slice": 505, "monthli": 505, "infold": [506, 518], "streamfunctionfold": 506, "outfold": [506, 507, 518], "expt": [506, 509, 518, 719], "sectioni": 506, "showprogress": 506, "plotter": [506, 518], "hold": [506, 518], "folder": [506, 518], "streamfunct": [506, 509, 514, 751], "axi": [506, 703, 710, 716, 755], "plane": 506, "montli": 506, "oceanmask": 506, "cavitymask": 506, "oceanpatch": 506, "patchcollect": 506, "polygon": 506, "cover": [506, 695, 725, 740, 745], "cavitypatch": 506, "horiz": 506, "vert": 506, "sectionmask": 506, "progressbar": 506, "framespersecond": 507, "mp4": [507, 743, 751], "movi": [507, 687, 695, 743, 751], "ffmpeg": 507, "da": [508, 510, 520], "nameintitl": [508, 510, 520], "vmin": [508, 509, 510, 513, 514], "vmax": [508, 509, 510, 513, 514], "cmap": [508, 510], "cmap_set_und": [508, 510], "floor": [508, 515, 516, 517, 711, 738, 746, 748, 751], "nae": [508, 510], "subfold": [508, 510], "colorbar": [508, 509, 510, 513, 514], "colormap": [508, 510, 612], "color": [508, 510, 520], "chosen": [509, 703, 725], "oceandomain": 510, "cmap_scal": 510, "logarithm": 510, "drive": [511, 519, 687, 751], "halin": 511, "figsiz": [512, 520], "sshmax": 519, "advect": [521, 532, 543, 546, 549, 560, 688, 697, 699, 715, 740, 744, 752, 753], "merri": [521, 522, 524, 526, 528, 530, 696, 752], "round": [521, 522, 524, 526, 528, 530, 696, 709, 744, 752], "merrygoround": [524, 696], "5m": [526, 752], "planar": [533, 535, 539, 543, 710, 753], "convergence_test_cas": 539, "convergencetestcas": 539, "rms_error": 547, "mesoscal": [551, 698, 745, 754], "profil": [552, 687, 689, 690, 692, 695, 698, 702, 706, 746, 751, 754, 758], "with_particl": [554, 558, 662, 666, 698, 702], "with_surface_restor": [554, 556, 558], "three_lay": [554, 556, 558, 698], "lagrangian": [554, 740, 754, 758], "restor": [554, 556, 558, 695, 751, 754, 758], "equilibrium": [554, 558, 662, 666, 719, 754], "continent": [554, 556, 558, 689, 745, 751, 754], "algorithm": [560, 695, 703, 736, 751, 756], "transport": [561, 575, 589, 613, 689, 699, 744, 755], "spheretransport": [561, 575, 589, 613], "correlatedtracers2d": [564, 566, 570, 572, 699, 755], "dt_minut": [566, 580, 594, 618], "minut": [566, 567, 580, 581, 594, 595, 618, 619, 685, 686, 689, 690, 692, 694, 703, 710, 715, 725, 741, 748, 755, 761], "24": [566, 580, 594, 618, 688, 689, 695, 697, 744, 751, 753, 755], "divergent2d": [578, 580, 584, 586, 699], "nondivergent2d": [592, 594, 598, 600, 699], "dlambda": [603, 605, 606, 611], "compute_error_from_output_ncfil": [603, 611], "tracer1": [603, 605, 606, 611, 696, 752, 755], "linfrat": [603, 611], "l2rate": [603, 611], "lev": 604, "netcdf4": [604, 609, 710, 712], "tcdata": [605, 610], "appx": [605, 611], "linf1": [605, 606], "linf2": [605, 606], "tracer2": [605, 606, 752, 755], "linf3": [605, 606], "tracer3": [605, 606, 752, 755], "l21": [605, 606], "l22": [605, 606], "l23": [605, 606], "filament": [605, 607, 755], "sec": [605, 744, 758], "lspt2012": [605, 607], "ax": [606, 607, 608], "tcname": [606, 607, 608, 609, 610, 611], "resval": [606, 607, 608, 611], "matplotlib": [606, 609, 612, 710, 711], "instanc": [606, 609, 710, 711], "u1": [608, 733, 735], "o1": 608, "u2": 608, "o2": [608, 703], "u3": 608, "o3": 608, "shoot": [608, 755], "fig": [609, 703], "row": 609, "csv": [610, 755], "consol": 611, "compute_convergence_r": 611, "cmap_filenam": 612, "rgb": 612, "ncar": 612, "ncl": 612, "www": 612, "ucar": 612, "edu": 612, "graphic": 612, "color_table_galleri": 612, "shtml": 612, "usabl": 612, "rotation2d": [616, 618, 622, 624, 699, 755], "tos": 618, "harmon": [628, 629, 630, 700, 701, 756, 757], "constitu": [628, 701, 757], "harmonic_analysis_fil": 628, "constit": 628, "tpxo": [628, 629, 630, 632, 634, 636, 637, 701, 757], "tpxo_vers": [628, 757], "inject": 629, "calcul": [631, 703, 725], "consititu": 631, "idx": [632, 637], "hurrican": [639, 684, 693, 739, 749], "topograph": [651, 701, 745, 757], "drag": [651, 687, 701, 711, 743, 746], "rinv_fil": 651, "rinv": 651, "wave_drag_fil": 651, "bathymetr": [656, 757], "zonal": [661, 702, 741, 745, 750, 752, 758], "invari": [661, 692, 745], "southern": [661, 689, 702, 710, 741, 745, 750, 751, 758], "with_analysi": 666, "meter": [674, 675, 721, 722, 726, 727, 729, 748], "stretch": [676, 682, 683, 738], "midpoint": [676, 682, 683], "reftopdepth": [676, 679, 680, 682, 683], "ref": [676, 682, 683, 689, 725, 745], "refzmid": [676, 682, 683, 703, 710], "refbottomdepth": [676, 677, 678, 679, 680, 682, 683, 703, 710, 711], "refinterfac": [676, 682, 683], "nvertlevel": [676, 682, 683, 703, 710, 738], "vertcoordmovementweight": [676, 682, 683, 703, 711], "movement": [676, 682, 683], "consider": [676, 682, 683], "sometim": [676, 682, 683, 703, 707, 711, 745], "partial": [677, 678, 710, 738, 741, 748, 750, 751, 752, 753, 758], "seafloor": [677, 679, 680, 681, 738], "rest": [681, 709, 711, 738, 745], "unstretch": 681, "dam_break": [684, 693, 739, 749], "drying_slop": [684, 693, 739, 749], "ice_shelf_2d": [684, 693, 703, 710, 711, 736, 739, 740, 749, 761], "internal_wav": [684, 693, 739, 749], "isomip_plu": [684, 693, 739, 749], "merry_go_round": [684, 693, 739, 749], "planar_converg": [684, 693, 703, 739, 749], "soma": [684, 693, 739, 749], "sphere_transport": [684, 693, 739, 749], "spherical_harmonic_transform": [684, 693, 739, 749], "tide": [684, 693, 739, 747, 749, 756], "ziso": [684, 693, 703, 704, 710, 711, 738, 739, 740, 749, 760, 761], "momentum": [685, 694], "diffus": [685, 694, 715, 718, 740, 752, 754], "decomptest": [685, 689], "threadstest": [685, 689], "frequenc": [685, 692], "rpetest": [685, 694, 703, 710], "144": [685, 689, 703, 710], "intens": [685, 694, 696], "cullcel": 686, "tailor": [686, 687], "multipanel": 686, "evolut": [686, 687, 695, 718, 742], "site": [686, 706, 742], "subplot": 686, "accept": [686, 687], "plain": 686, "coord": [687, 751], "plug": 687, "background": [687, 704, 711, 744, 750, 752, 753], "emploi": [687, 703], "0025": [687, 743], "grain": 687, "interv": [687, 691, 703, 747], "globalconverg": [688, 710, 711], "studi": [688, 697, 708, 710, 711, 744, 745, 753, 754, 755], "globe": [688, 697, 744, 745, 755], "ico": [688, 744], "shape": [688, 697, 699, 744], "blob": [688, 697, 753], "dt_per_km": [688, 744], "rmse": [688, 697], "realist": [689, 703, 708, 729, 736, 745, 747, 748, 754, 757, 760], "gitconfig": [689, 712, 745, 747, 757], "enter": [689, 712, 745, 747, 757], "get_e3sm_mesh_nam": 689, "mesh_prefix": 689, "kml": 689, "e3smv": 689, "qu240e2r1": [689, 745], "qu240kml16e3smv2r1": [689, 745], "forwardtestcas": 689, "performancetest": 689, "land_ice_flux": [689, 695], "forward_": [689, 745], "focus": [689, 745, 754], "init_ntask": [689, 745, 747], "init_min_task": [689, 745, 747], "forward_ntask": [689, 745, 747, 757], "forward_min_task": [689, 745, 747, 757], "subdivid": 689, "asid": 689, "pure": 689, "ec30to60mesh": 689, "refin": [689, 691, 696, 745, 747, 752], "atlant": [689, 745], "pacif": [689, 745], "arctic": [689, 712, 745], "so12to60": 689, "so12to60mesh": 689, "1296": 689, "band": 689, "cycl": [689, 745], "gulf": 689, "wc14mesh": 689, "720": [689, 751], "america": 689, "628": 689, "uk": [689, 745], "metoffic": [689, 745], "estim": [689, 736, 745], "biogeochemsitri": 689, "stress": [689, 736, 758], "shortwav": 689, "ecosystem": [689, 730, 745], "sshadjust": [689, 692, 695], "closer": [689, 709], "clearli": 689, "wrong": 689, "half": [689, 710, 741, 748, 750, 751, 758], "analysistest": 689, "dailyoutputtest": 689, "timeseriesstatsdaili": [689, 745], "timeseriesstatsmonthli": [689, 745], "averag": [689, 695, 736, 745, 751], "rapid": [689, 715], "artifici": 689, "global_ocean_mesh": 689, "d_": [689, 703], "strong": [689, 710, 750, 751], "1e": [689, 711, 758], "jinja": 689, "ec30to60dynamicadjust": 689, "so12to60dynamicadjust": 689, "damped_adjustment_3": 689, "weaken": 689, "4e": 689, "wc14dynamicadjust": 689, "damped_adjustment_6": 689, "prepar": [689, 745, 747, 757], "assembled_fil": [689, 745], "ocean_initial_condit": 689, "oceaninitialcondit": 689, "inputdata": 689, "ocn": 689, "mesh_short_nam": 689, "_no_xtim": 689, "ocean_graph_partit": 689, "oceangraphpartit": 689, "wide": [689, 706, 748, 752, 754], "min_graph_s": 689, "max_graph_s": 689, "power": [689, 753], "1200": [689, 702, 718], "core_count": 689, "seaice_initial_condit": 689, "seaiceinitialcondit": 689, "keep_var": 689, "areacel": 689, "cellsoncel": 689, "edgesoncel": 689, "fcell": [689, 703, 710], "indextocellid": 689, "latcel": 689, "loncel": 689, "meshdens": 689, "nedgesoncel": 689, "verticesoncel": 689, "angleedg": 689, "cellsonedg": 689, "dcedg": 689, "dvedg": 689, "edgesonedg": 689, "fedg": [689, 703, 710], "indextoedgeid": 689, "latedg": 689, "lonedg": 689, "nedgesonedg": 689, "verticesonedg": 689, "weightsonedg": 689, "xedg": [689, 703, 710], "yedg": 689, "zedg": 689, "areatriangl": 689, "cellsonvertex": 689, "edgesonvertex": 689, "fvertex": [689, 703, 710], "indextovertexid": 689, "kiteareasonvertex": 689, "latvertex": 689, "lonvertex": 689, "xvertex": [689, 703, 710], "yvertex": 689, "zvertex": 689, "landicemask": [689, 751], "cice": 689, "coupl": [689, 706, 708, 719, 736, 745], "nomask": 689, "diagnostics_fil": 689, "diagnosticsfil": 689, "aggreg": 689, "get_aggregator_by_nam": 689, "region_group": 689, "subbasin": 689, "mpas_analysi": 689, "region_mask": 689, "ref_dat": 689, "moc": 689, "repres": [689, 710, 711, 725, 738, 744, 745, 748], "_moc_masks_and_transect": 689, "stereograph": [689, 712, 745], "map_": 689, "_to_0": 689, "5x0": 689, "5degree_bilinear": 689, "_to_6000": 689, "0x6000": 689, "0km_10": 689, "0km_antarctic_stereo_bilinear": 689, "0km_arctic_stereo_bilinear": 689, "k\u00e4rn\u00e4": [690, 746], "cm": [690, 742], "ever": [690, 704], "tropic": [691, 747], "cyclon": [691, 747], "dequ120at30cr10rr2": 691, "dequ120at30cr10rr2mesh": 691, "inherit": [691, 704], "coastal_tool": 691, "coastal_refined_mesh": 691, "interpolateatmforc": 691, "cfsv2": [691, 747], "reanalysi": [691, 747], "hourli": [691, 747], "createpointstatsfil": 691, "noaa": [691, 747], "usg": [691, 747], "squash": [692, 695, 702, 738, 751], "config_use_frazil_ice_form": 692, "config_frazil_maximum_depth": 692, "dirti": 692, "cut": 692, "tendaytest": 694, "timeseriesstatsmonthlyoutput": 695, "update_evaporation_flux": 695, "mimic": [695, 709], "indefinit": 695, "due": [695, 716, 751], "freshwat": [695, 740, 745, 748], "factor": [695, 743, 752, 754, 757], "interpolate_ocean_mask": 695, "interpolate_geom": 695, "geometr": 695, "bottomdepthobserv": 695, "bedrock": 695, "oceanfracobserv": 695, "landicefract": 695, "smootheddraftmask": 695, "reli": [695, 703, 710], "nx_thin_film": 695, "runawai": 695, "incom": 695, "meltwat": [695, 751], "landicepressureforc": 695, "landicedraftforc": 695, "isomip_plus_forc": [695, 751], "time_varying_ocean0": 695, "consecut": 695, "land_ice_forc": 695, "motion": [695, 751], "front": [695, 758], "held": [695, 703], "landicefractionforc": 695, "presur": 695, "readi": [695, 703, 710, 711, 733, 735], "fuller": 695, "repeatedli": [695, 716, 751], "plot_streamfunct": [695, 751], "isomip_plus_viz": [695, 751], "frame": [695, 743, 751], "deepest": [695, 702, 738], "timeseriesbelow300m": 695, "correctli": 695, "resolv": [695, 747], "isomipplustest": 695, "tendenc": 696, "convergencetest": 696, "concomitt": 696, "covergence_test": 696, "conveg": 696, "planarconverg": 697, "horizontaladvect": 697, "dt_1km": [697, 753], "surface_restor": 698, "radiu": [698, 719, 744], "accord": [698, 702, 745, 759], "100layere3smv1": [698, 702, 745, 758], "32km": [698, 754], "min_den": 698, "min_particle_dens": [698, 754], "max_den": 698, "max_particle_dens": [698, 754], "nsurf": 698, "surface_count": [698, 754], "build_particle_simpl": 698, "f_grid": 698, "f_name": 698, "f_decomp": 698, "buoysurf": 698, "somatestcas": 698, "solid": [699, 741, 744, 748, 750, 752], "bodi": [699, 744], "build_mesh": [699, 700], "build_spherical_mesh": [699, 700], "timestep_munut": 699, "rotation_2d_converg": 699, "pdf": 699, "_sol": 699, "diverg": [699, 755], "nondivergent2d_converg": 699, "divergent2d_converg": 699, "correlatedtracers2d_triplot": 699, "quconverg": 700, "transform": [700, 756], "implemnt": 700, "runnin": 700, "test_sht": 700, "interpolatewavedrag": 701, "hycom": [701, 757], "remapbathymetri": 701, "bathyetri": 701, "ey": 702, "toward": 702, "2500": [702, 711, 738, 746, 754, 758], "cores_with_particl": 702, "min_cores_with_particl": 702, "btr_dt": 702, "mom_del4": 702, "0e10": 702, "80": 702, "130": 702, "25e9": 702, "5km": [702, 711, 740, 748, 751, 761], "300": [702, 709, 744, 753, 754, 755, 758], "09": 702, "8e8": 702, "2100": [702, 725], "900": 702, "8e7": 702, "zisotestcas": 702, "withfrazil": 702, "initial_temp_t1": [702, 758], "tanh": [702, 738, 758], "initial_temp_t2": [702, 758], "initial_temp_h1": [702, 758], "initial_temp_mt": [702, 758], "green": 703, "blue": [703, 730, 759], "orang": 703, "red": 703, "laid": 703, "among": [703, 705, 710, 711, 725], "organiz": 703, "encompass": 703, "perspect": 703, "add_test_group": [703, 704, 710, 711], "univers": 703, "mix": [703, 745, 750], "2000m": [703, 715, 718, 721, 759], "halfar": [703, 718], "cism": [703, 718], "dome_typ": [703, 718], "closest": [703, 718, 747], "put_origin_on_a_cel": [703, 718], "hydro": [703, 718], "time_slic": [703, 717, 718, 723], "save_imag": [703, 717, 718, 719, 723], "hide": [703, 717, 718, 719, 723], "hide_fig": [703, 717, 718, 719, 723], "add_test_cas": [703, 710, 711], "variable_resolut": [703, 715, 759], "talk": 703, "complic": [703, 704, 705, 710, 711], "access": [703, 704, 705, 710, 711, 725, 730, 733, 734, 735], "0200": 703, "00_00": [703, 711], "enumer": [703, 710], "rpe_test_": [703, 710], "_nu_": [703, 710], "deliber": 703, "fairli": [703, 704, 705, 710, 748, 751], "clumsi": [703, 704, 709], "rpe_test_1_nu_1": [703, 741, 750], "rpe_test_2_nu_5": [703, 741, 750], "po4": 703, "no3": 703, "sio3": 703, "nh4": 703, "fe": 703, "dic": 703, "dic_alt_co2": 703, "alk": 703, "dofe": 703, "dop": 703, "dopr": 703, "donr": 703, "zooc": 703, "spchl": 703, "spc": 703, "spfe": 703, "spcaco3": 703, "diatchl": 703, "diatc": 703, "diatf": 703, "diatsi": 703, "diazchl": 703, "diazc": 703, "diazf": 703, "phaeochl": 703, "phaeoc": 703, "phaeof": 703, "dm": 703, "dmsp": 703, "prot": 703, "poli": 703, "lip": 703, "adjusted_init": 703, "unwant": 703, "outer": 703, "inner": [703, 710, 711], "question": [703, 712], "neglig": [703, 736, 748], "precis": 703, "mesh_cpus_per_task": 703, "mesh_min_cpus_per_task": 703, "write_netcdf": [703, 710, 711], "convers": [703, 710, 711], "generate_grid": 703, "nonperiodic_x": [703, 710, 711], "nonperiodic_i": [703, 710, 711], "graphinfofilenam": [703, 710, 711], "use_dist": [703, 710, 741, 750], "gradient_width_dist": [703, 710, 741, 750], "gradient_width_frac": [703, 710, 741, 750], "bottom_temperatur": [703, 710, 741, 750], "surface_temperatur": [703, 710, 741, 750, 754], "temperature_differ": [703, 710, 741, 750], "coriolis_paramet": [703, 710, 741, 750, 751], "len": 703, "ones_lik": [703, 710], "xmin": [703, 710], "xmax": [703, 710], "ymin": [703, 710], "ymax": [703, 710], "ymid": [703, 710], "xperturbmin": [703, 710], "xperturbmax": [703, 710], "perturbationwidth": [703, 710], "yoffset": [703, 710], "sin": [703, 710, 741, 743, 750], "pi": [703, 710, 738, 743, 744], "temp_vert": [703, 710], "logical_and": [703, 710], "transpos": [703, 710], "3rd": [703, 710, 755], "crest": [703, 710], "expand_dim": [703, 710], "dim": [703, 710], "broadcast": [703, 710], "zeros_lik": [703, 710, 711], "nedg": [703, 710], "dtype": 703, "harm": 703, "likewis": [703, 710], "arisen": 703, "omit": [703, 711, 759], "open_dataset": [703, 711], "isn": [703, 704, 710, 711], "mesh_path": 703, "initial_state_target": 703, "entha_analy_result": 703, "ourselv": 703, "firewal": 703, "bedmachineantarctica_v2_and_gebco_2022_0": 703, "05_degree_20220729": 703, "slate": 703, "commonli": [703, 728], "expens": [703, 718], "word": 703, "clariti": 703, "ff": 703, "91": 703, "transfer": 703, "design": [703, 704, 708, 709, 734, 745, 753, 754], "substitut": 703, "beforehand": 703, "update_namelist_at_runtim": [703, 711], "pio_num_iotask": 703, "pio_strid": 703, "mostli": [703, 710, 711, 745], "synchron": [703, 708], "update_streams_at_runtim": 703, "timedelta": 703, "3600": 703, "delta": [703, 738], "03d": 703, "02d": 703, "forgotten": 703, "dig": [704, 712], "adher": [704, 710, 711], "strictli": [704, 710], "pep8": 704, "bot": [704, 738], "violat": 704, "pleas": [704, 705, 709, 710], "editor": 704, "pycharm": [704, 710, 711], "spyder": 704, "linter": 704, "flake8": 704, "discourag": 704, "reformat": 704, "autopep8": 704, "undesir": 704, "lint": 704, "wildcard": 704, "vim": [704, 710, 711], "plugin": 704, "id": 704, "why": [704, 711, 715], "sound": 704, "subpackag": 704, "understand": [704, 712], "downstream": 704, "clu": 704, "intro": 704, "hidden": 704, "shortcut": [704, 759], "referenc": [704, 709, 710], "ll": [704, 710, 711, 725, 733, 735], "dot": 704, "charact": 704, "unix": [704, 708], "mayb": 704, "machine_config": 704, "endswith": 704, "splitext": 704, "exactli": [704, 705, 710, 711, 715, 725, 738, 740], "visa": 704, "versa": 704, "comfort": [704, 710, 711], "orient": 704, "program": [704, 712], "felt": 704, "hesit": 704, "harder": 704, "outcom": 704, "augment": 704, "compos": [704, 748, 751], "dens": 704, "worth": [704, 710], "endeavor": 704, "took": 704, "138": 704, "bash": [705, 706, 759], "ksh": 705, "mac": [705, 708], "csh": 705, "tcsh": 705, "temporarili": 705, "obtain": [705, 725], "recogn": 705, "miniconda3": [705, 710, 711, 734, 759], "permiss": 705, "anyon": 705, "person": [705, 706], "base_path_to_install_or_update_conda": 705, "with_albani": 705, "with_netlib_lapack": 705, "with_petsc": 705, "flavor": 705, "login": [705, 733, 735], "troubl": 705, "recognit": 705, "trilino": 705, "spack": [705, 730, 731, 732, 733, 734, 735], "downsid": 705, "unneed": 705, "workstat": 705, "deploy": 705, "touch": 705, "miniconda": [705, 734, 759], "update_speck": 705, "reinstal": 705, "scorpio": [705, 734, 759], "esmf": [705, 733, 759], "load_": 705, "encod": 705, "load_dev_compass_": 705, "dev_compass_": [705, 706], "safest": 705, "rerun": 705, "load_dev_compass": 705, "echo": 705, "rememb": 705, "recreat": [705, 706], "incorrect": 705, "unus": 705, "pip": 705, "extra": [705, 754], "wih": 705, "env_onli": 705, "mpas_make_target": [705, 759], "scientif": [705, 745, 754, 758, 759], "situat": [705, 710, 711, 759], "platform": [705, 759], "wiki": [705, 759], "workdir": [705, 759], "es3m": 705, "mkdir": 705, "fetch": [705, 710], "new_branch_nam": 705, "respons": [705, 747, 756, 757], "simplest": [705, 755], "your_new_branch": 705, "checkout": 705, "encount": 706, "solv": [706, 717, 718, 738], "geo": 706, "cartopi": 706, "np110py27_4": 706, "calledprocesserror": 706, "spec": [706, 733, 735], "vpn": 706, "shell": [706, 708], "honor": 706, "spawn": 706, "usernam": [706, 710, 733, 735], "proxy_en": 706, "all_proxi": 706, "proxyout": 706, "8080": 706, "no_proxi": 706, "localhost": [706, 733, 734, 735, 759], "127": 706, "proxy_dis": 706, "unset": 706, "anytim": 706, "fatal": 706, "mpi_init": 706, "stack": 706, "mpir_init_thread": 706, "159": 706, "mpid_init": 706, "164": 706, "mpidi_ch3_init": 706, "95": 706, "mpid_nem_init": 706, "314": 706, "mpid_nem_tcp_init": 706, "173": 706, "mpid_nem_tcp_get_business_card": 706, "395": 706, "getsockinterfaceaddr": 706, "369": 706, "pn2034311": 706, "errno": 706, "host": [706, 734, 759], "unexpect": [707, 710, 711, 715, 740], "Of": 708, "predict": 708, "kept": [708, 745], "expert": [708, 722, 726, 727, 745], "team": [708, 745], "launch": 708, "benefit": 708, "queue": 708, "beginn": [708, 710, 711], "worktre": [708, 710, 711], "advanc": [708, 710, 711], "style": [708, 710, 711], "troubleshoot": 708, "proxi": 708, "gethostbynam": 708, "port": [708, 709, 710, 733, 735, 745, 749, 758], "list_testcas": 708, "setup_testcas": 708, "clean_testcas": 708, "manage_regression_suit": 708, "strict": [708, 710, 734, 759], "experienc": 708, "seriou": 708, "anticip": [708, 710, 745], "persist": 708, "medium": [708, 730], "glossari": [709, 710, 711], "rapidli": [709, 751], "companion": 709, "liber": 709, "add_cosine_bel": 709, "add_baroclinic_channel": [709, 710], "fit": [709, 712, 755], "camel": 709, "welcom": 709, "_mesh": 709, "bring": 709, "_namelist": 709, "_init": 709, "_output": 709, "wasn": 709, "becam": 709, "didn": [709, 711], "_setup_step": 709, "haven": [709, 710, 711], "_ntask": 709, "heurist": 709, "refus": 709, "update_cor": 709, "goal_cells_per_cor": [709, 744, 753, 755], "max_cells_per_cor": [709, 744, 753, 755], "qu30": 709, "65275": 709, "10383": 709, "approx_cel": 709, "6e8": 709, "pinch": 709, "_forward": 709, "_min_task": 709, "consult": [710, 711, 745], "0_chrysalis_intel_impi": [710, 711], "fork": 710, "push": 710, "lowercas": [710, 711], "hyphen": 710, "realli": [710, 711, 733, 735], "nice": [710, 711, 733, 735], "supercomput": [710, 711], "highli": [710, 711], "camelcas": [710, 711], "capit": [710, 711], "cap": [710, 711], "promot": 710, "pattern": [710, 711], "seen": [710, 716], "seldom": 710, "outweigh": 710, "equip": 710, "hexagon": 710, "variat": [710, 751], "pain": 710, "pick": [710, 711], "partial_cell_typ": [710, 738, 741, 748, 750, 751, 752, 753, 758], "min_pc_fract": [710, 738, 741, 748, 750, 751, 752, 753, 758], "halv": [710, 741, 750], "500km": [710, 741, 750], "40e3": [710, 741, 750, 751], "corioli": [710, 741, 748, 750, 751, 758], "2e": [710, 741, 750], "connect": [710, 733, 735, 745], "handi": 710, "05": [710, 754, 758], "techiniqu": 710, "input_interv": [710, 711], "initial_onli": [710, 711], "__init": 710, "spuriou": [710, 741, 750], "pop": [710, 741, 750], "mom": [710, 741, 750], "mitgcm": [710, 741, 750], "heavi": 710, "context": 710, "analogi": 710, "tet": 710, "20_00": 710, "0000": [710, 711], "dayssincestartofsim": 710, "relativevort": 710, "pyplot": [710, 711], "plt": [710, 711], "cmocean": 710, "output_": 710, "sections_baroclinic_channel_": 710, "_plot": 710, "compact": 710, "anymor": 710, "bc_configur": 710, "users_guid": [710, 711], "alphabet": [710, 711], "daunt": [710, 711], "tini": 711, "add_gotm": 711, "driver": 711, "Its": 711, "driver_script": 711, "pre_messag": 711, "post_messag": 711, "config_init": 711, "add_execut": 711, "dest": 711, "config_init_configur": 711, "periodic_planar": 711, "config_vert_level": 711, "config_periodic_planar_vert_level": 711, "config_periodic_planar_bottom_depth": 711, "config_periodic_planar_velocity_strength": 711, "config_ocean_run_mod": 711, "config_write_cull_cell_mask": 711, "config_vertical_grid": 711, "immut": 711, "input_init": 711, "output_init": 711, "add_cont": 711, "edgemask": 711, "run_script": 711, "mpascellcul": 711, "mpasmeshconvert": 711, "model_run": 711, "proc": 711, "gotmturb": 711, "nml": 711, "plot_profil": 711, "jump": 711, "encourag": 711, "plai": 711, "role": 711, "barotropic_channel": 711, "excerpt": 711, "slight": 711, "hasn": 711, "real": 711, "deep": [711, 754, 757], "uniformli": 711, "wrapper": 711, "conform": 711, "add_link": 711, "copy_fil": 711, "source_path": 711, "script_test_dir": 711, "0000_12": 711, "config_zonal_ssh_grad": 711, "config_pressure_gradient_typ": 711, "constant_forc": 711, "config_use_cvmix": 711, "config_use_gotm": 711, "config_gotm_namelist_fil": 711, "config_gotm_constant_bottom_drag_coeff": 711, "73e": 711, "config_use_implicit_bottom_drag": 711, "velocityzon": 711, "velocitymeridion": 711, "vertvisctopofcel": 711, "nor": 711, "velocity_profil": 711, "viscosity_profil": 711, "xr": 711, "switch_backend": 711, "agg": 711, "kappa": 711, "z0b": 711, "5e": [711, 758], "gssh": 711, "81": 711, "isel": 711, "zi": 711, "ustarb": 711, "sqrt": [711, 745], "u_a": 711, "nu_a": 711, "infer": [711, 746], "c_d": 711, "4g": 711, "xlabel": 711, "ylabel": 711, "savefig": 711, "introduc": 711, "got": 711, "newli": 711, "explanatori": 712, "wherev": 712, "my_machin": 712, "customize_config_pars": 712, "inej": 712, "ssl": 712, "certif": 712, "partition_execut": 712, "netcdf4_class": 712, "netcdf3_64bit": 712, "netcdf3_class": 712, "engin": 712, "scipi": 712, "2022": [712, 745], "contact": [712, 725], "temperaturemax": [712, 745], "statist": [712, 745], "temperature_max": [712, 745], "offlin": [712, 745], "coarser": [712, 744, 745, 753], "finer": [712, 745, 758], "2018": 714, "websit": [714, 739], "v6": 714, "land_ic": 714, "sia_restart_test": [715, 759], "sia_decomposition_test": [715, 759], "enthalpy_decomposition_test": 715, "enthalpy_restart_test": 715, "expos": [715, 740], "fo_decomposition_test": [715, 759], "fo_restart_test": [715, 759], "3km_restart_test": 715, "fo_calv": 715, "von_mises_stress_damag": 715, "threshold_facemelt": 715, "3km_decomposition_test": 715, "none_calv": 715, "adp": 716, "timestepp": [716, 728], "ratio": [716, 743], "warn": [716, 744, 753], "greater": [716, 718], "panel": 716, "cumul": 716, "adapt": [716, 728], "lag": 716, "trigger": 716, "routin": [716, 724], "unabl": 716, "volum": 716, "unground": 717, "iceberg": 717, "presenc": 717, "1250": [717, 758], "dirichlet": 717, "bed": 717, "use_mu": 717, "area": [717, 745], "use_7cel": 717, "1proc_run": [717, 718, 719, 721, 723], "4proc_run": [717, 718, 719, 721], "1983": 718, "2005": [718, 743, 745], "rectangular": [718, 719, 723, 742, 754], "circularli": [718, 719], "accumul": [718, 719], "ablat": 718, "16700": 718, "varr": 718, "payn": 719, "750": 719, "exmapl": [719, 723], "25000m": 719, "64": [719, 738, 756], "74": 719, "25000": 719, "thermomechan": 719, "warm": [719, 751, 758], "altitud": 719, "cooler": [719, 741, 758], "slip": [719, 721, 758], "throughout": [719, 741, 743, 750, 751, 752], "exismint2_viz": 719, "enthalpy_benchmark_viz": 720, "display_imag": 720, "prescrib": [720, 751, 754], "paraview": [721, 729], "cull_dist": [721, 722, 726, 727, 729], "min_spac": [721, 722, 726, 727, 729], "e3": [721, 722, 726, 727, 729], "max_spac": [721, 722, 726, 727, 729], "log10": [721, 722, 726, 727, 729], "high_log_spe": [721, 722, 726, 727, 729], "low_log_spe": [721, 722, 726, 727, 729], "75": [721, 722, 726, 727, 729, 748, 751], "high_dist": [721, 722, 726, 727, 729], "e5": [721, 722, 726, 727, 729], "low_dist": [721, 722, 726, 727, 729], "e4": [721, 722, 726, 727, 729], "use_spe": [721, 722, 726, 727, 729], "use_dist_to_grounding_lin": [721, 722, 726, 727, 729], "use_dist_to_edg": [721, 722, 726, 727, 729], "newer": [721, 729], "notabl": 722, "slower": 722, "humboldt_mesh": 722, "yr": [722, 726, 727, 751], "16proc_run": [722, 729], "32proc_run": [722, 729], "fot": 722, "bfb": 722, "von": 722, "mise": 722, "marin": [722, 751], "facemelt": 722, "exercis": [722, 745], "widest": 722, "1000m": 723, "58": 723, "3proc_run": 723, "specialti": 724, "carefulli": 724, "2300": 725, "ob": 725, "overal": 725, "publicli": 725, "process_racmo_smb": 725, "harmless": 725, "six": 725, "modern": 725, "committe": 725, "globu": 725, "base_path_ismip6": 725, "ghub": 725, "endpoint": 725, "ce": 725, "ssp585": 725, "ukesm1": 725, "ai": [725, 745], "atmosphere_forc": 725, "regridded_8km": 725, "ll_anomaly_ssp585_1995": 725, "2100_8km": 725, "ocean_forc": 725, "ll_ssp585": 725, "ll_ssp585_thermal_forcing_8km_x_60m": 725, "atmospheric_forc": 725, "ccsm4": 725, "rcp85": 725, "rcp26": 725, "racmo2": 725, "3p2_ant27_smb_yearly_1979_2018": 725, "obs_thermal_forcing_1995": 725, "2017_8km_x_60m": 725, "ocean_f": 725, "orc": 725, "climatology_from_obs_1995": 725, "imbie2_basin_numbers_8km": 725, "coeff_gamma0_deltat_quadratic_loc": 725, "underneath": 725, "landice_ismip6_forcing_config": 725, "basal_melt": 725, "ocean_thermal_forc": 725, "ismip6_ai": 725, "ismip6_ais_atmospher": 725, "ismip6_ais_ocean_therm": 725, "ismip6_ais_ocean_bas": 725, "bilinear": 725, "neareststod": 725, "conserv": [725, 755], "hollyhan": 725, "research": 725, "ismip6_2300_protocol": 725, "base_path_mali": 725, "output_base_path": 725, "process_forcing_testcas": 725, "cesm2": 725, "cnrm_cm6": 725, "cnrm_esm2": 725, "csiro": 725, "mk3": 725, "hadgem2": 725, "ipsl": 725, "cm5a": 725, "mr": 725, "miroc": 725, "esm": 725, "chem": 725, "noresm1": 725, "waccm": 725, "ssp126": 725, "ssp585v1": 725, "ssp585v2": 725, "map_ismip6_8km_to_": 725, "antarctica_8to30km": 725, "antarctic_8to80km_20220407": 725, "ais_8to30km_r01_20220607": 725, "process_obs_data": 725, "rcp2": 725, "80km": 725, "atmosphereprocess_smb_racmo": 725, "notavail": 725, "high_res_kangerlussuaq_mesh": 726, "high_res_kogebugts_mesh": 727, "e2": 727, "2km": [728, 751], "paper": [728, 754, 758, 759], "trade": 728, "accuraci": 728, "includess": 729, "gain": [730, 745], "confluenc": 730, "deploi": [730, 731, 732, 733, 734, 735, 754], "mpi_intel": [730, 731, 732, 733, 734], "mpi_gnu": [730, 731, 733, 734, 735], "hdf5": [730, 731, 732, 733, 734, 735], "fortran": [730, 731, 732, 733, 734, 735], "pnetcdf": [730, 731, 732, 733, 734, 735], "use_e3sm_hdf5_netcdf": [730, 731, 732, 733, 734, 735], "cobalt": [730, 731, 732, 733, 734, 735], "condo": [730, 759], "acm": [730, 733, 759], "qualiti": [730, 732, 733, 734, 735, 759], "servic": [730, 732, 733, 734, 735, 759], "qo": [730, 732, 733, 734, 735, 759], "acme_high": 730, "load_latest_compass_intel_impi": [730, 732], "load_latest_compass_gnu_mvapich": 730, "load_latest_compass_intel_openmpi": 731, "load_latest_compass_gnu_openmpi": [731, 759], "compyf": 732, "app": [732, 759], "conda_env": [732, 759], "mpi_pgi": 732, "mvapich2": 732, "pmi2": 732, "my_usernam": [733, 734, 735], "salloc": [733, 734, 735], "knl": 733, "nim": 733, "filesystem": [733, 735], "cscratch1": 733, "sd": 733, "myquota": [733, 735], "prjquota": [733, 735], "projectid": [733, 735], "m2833": 733, "archiv": [733, 735], "hpss": [733, 735], "hsi": [733, 735], "htar": [733, 735], "zstash": [733, 735], "cf": [733, 735, 745, 759], "cdir": [733, 735, 759], "premium": [733, 735], "load_latest_compass_intel_mpt": 733, "load_latest_compass_gnu_mpt": 733, "8844": [733, 735], "monik": [733, 735], "browser": [733, 735], "grab": [733, 735], "logon": [733, 735], "kernel": [733, 735], "myenv": [733, 735], "ipykernel": [733, 735], "kernelspec": [733, 735], "Be": [733, 735], "interpret": [733, 735], "argv": [733, 735], "ipykernel_launch": [733, 735], "connection_fil": [733, 735], "display_nam": [733, 735], "sai": [734, 751], "workload": 734, "sbatch": [734, 759], "squeue": 734, "scancel": 734, "jobid": 734, "cancel": 734, "emtpi": 734, "channel_prior": [734, 759], "mpi_mpich": [734, 759], "mpi_openmpi": [734, 759], "nompi": [734, 759], "p1": 735, "gpu": 735, "iri": 735, "m1795": 735, "hyperthread": 735, "hang": 735, "threads_per_cor": 735, "256": 735, "modules_befor": 735, "modules_aft": 735, "crai": 735, "cray_compil": 735, "load_latest_compass_gnu_mpich": 735, "inclus": [736, 745], "cryospher": [736, 745], "campaign": [736, 745], "loss": 736, "depress": [736, 738, 748, 751], "thicker": 736, "hanei": [736, 751], "stationari": 736, "freeli": 736, "guess": 736, "robust": [736, 751], "stewart": [738, 758], "z_2": 738, "z_1": 738, "mathrm": [738, 758], "rightarrow": 738, "infti": 738, "z_k": 738, "z_0": 738, "finder": 738, "n_z": 738, "h_": [738, 758], "210": [738, 744], "5500": 738, "renorm": [738, 758], "51": 738, "221": 738, "63": 738, "flat": 738, "collaps": 738, "adcroft": 738, "campin": 738, "2004": 738, "absenc": 738, "proport": [738, 744, 753, 755], "watercolumn": 738, "press": 738, "batymetri": 738, "stair": 738, "release_6": 739, "unexpectedli": 740, "proper": [740, 745], "equilibr": 740, "ilicak": [741, 750], "2012": [741, 750, 755], "psu": [741, 743, 748, 750, 751, 752, 753, 754, 758], "sinusoid": [741, 743, 750], "warmer": [741, 750], "mk": [741, 743, 750, 752], "celsiu": [741, 748, 750, 751, 752], "reproduc": [742, 743, 745], "box": 742, "viz": [742, 743, 748, 750, 751, 752], "config_dam_break_vert_level": 742, "40cm": 742, "inspect": [742, 743], "oei": 743, "6km": 743, "seaward": [743, 751], "oscil": 743, "zeta_": 743, "east": 743, "5t": 743, "degc": [743, 752], "rough": 743, "250m": 743, "coordiant": 743, "ouptut": [743, 751], "drying_slope_viz": 743, "generate_movi": 743, "frames_per_second": [743, 751], "movie_format": [743, 751], "12h": 743, "williamson": 744, "1992": 744, "3a": 744, "skamarock": 744, "gassmann": 744, "psi": 744, "psi_0": 744, "co": [744, 745], "ge": 744, "equatori": 744, "u_0": 744, "aim": [744, 745, 753, 755], "central": 744, "rad": 744, "lat_cent": 744, "lon_cent": 744, "14159265": 744, "2123666": 744, "6667": 744, "hill": 744, "psi0": 744, "transit": [744, 745, 751, 752], "vel_pd": 744, "qu_conv_thresh": 744, "qu_conv_max": 744, "icos_conv_thresh": 744, "icos_conv_max": 744, "480": 744, "multipli": [744, 753], "alloc": [744, 753, 755], "cull_mesh_cpus_per_task": [745, 747, 757], "cull_mesh_min_cpus_per_task": [745, 747, 757], "cull_mesh_max_memori": [745, 747, 757], "cull_mesh_": 745, "init_": 745, "april": 745, "mpas_mesh_short_nam": 745, "mpas_mesh_long_nam": 745, "mpas_mesh_prefix": 745, "mpas_mesh_e3sm_vers": 745, "mpas_mesh_pull_request": 745, "mpas_mesh_qu_revis": 745, "mpas_mesh_qu_version_author": 745, "mpas_mesh_qu_version_author_": 745, "mail": 745, "mpas_mesh_qu_version_creation_d": 745, "210116": 745, "mpas_mesh_qu_minimum_resolution_km": 745, "mpas_mesh_qu_maximum_resolution_km": 745, "mpas_mesh_qu_maximum_depth_m": 745, "mpas_mesh_qu_number_of_level": 745, "mpas_mesh_descript": 745, "mpas_mesh_bathymetri": 745, "mpas_initial_condit": 745, "mpas_mesh_compass_vers": 745, "mpas_mesh_jigsaw_vers": 745, "mpas_mesh_jigsaw": 745, "python_vers": 745, "mpas_mesh_mpa": 745, "tools_vers": 745, "mpas_mesh_nco_vers": 745, "mpas_mesh_esmf_vers": 745, "mpas_mesh_geometric_features_vers": 745, "mpas_mesh_metis_vers": 745, "mpas_mesh_pyremap_vers": 745, "lowest": 745, "everywher": 745, "impli": 745, "treatment": 745, "gent": 745, "mcwilliam": 745, "doi": 745, "org": 745, "1175": 745, "1520": 745, "0485": 745, "1990": [745, 748, 751], "020": 745, "0150": 745, "imiocm": 745, "a_c": 745, "smoothli": 745, "sorrm": 745, "taper": 745, "attach": 745, "global_ocean_dynamic_adjust": 745, "coastlin": [745, 754], "portion": 745, "gibraltar": 745, "mediterranean": 745, "contigu": 745, "peninsula": 745, "deriv": 745, "en4_1900_bgc": 745, "thought": 745, "explict": 745, "higdon": 745, "4th": [745, 755], "rung": [745, 755], "kutta": [745, 755], "infeas": 745, "surfaceareaweightedaverag": 745, "watermasscensu": 745, "layervolumeweightedaverag": 745, "zonalmean": 745, "okuboweiss": 745, "meridionalheattransport": 745, "highfrequencyoutput": 745, "eliassenpalm": 745, "mixedlayerdepth": 745, "debugdiagnost": 745, "eddyproductvari": 745, "oceanheatcont": 745, "mixedlayerheatbudget": 745, "sync": 745, "confid": 745, "complianc": 745, "cfconvent": 745, "transient": [745, 748], "amplitud": [745, 757], "aggress": 745, "gentli": 745, "global_ocean_mesh_quwisc240": 745, "global_ocean_mesh_ecwisc30to60": 745, "qu240_for_e3sm": [745, 759, 761], "quwisc240_for_e3sm": [745, 759, 761], "mocstreamfunct": 745, "weren": 745, "ofr": 745, "wcatl12to45e2r4": 745, "210318": 745, "gl": 746, "umlauf": 746, "burchard": 746, "2003": 746, "67": 746, "69": 746, "0173": 746, "event": 747, "coastal": 747, "estuari": 747, "surg": 747, "inund": 747, "strm15": 747, "carri": 747, "vector": 747, "recor": 747, "spinup": [747, 757], "ramp": [747, 757], "shock": [747, 757], "dimension": 748, "linearli": [748, 751, 754], "bui": [748, 751], "1490": [748, 751], "abruptli": [748, 751], "occupi": [748, 751], "cavity_thick": 748, "slope_height": 748, "angl": 748, "edge_width": 748, "0e3": 748, "y1": 748, "y2": 748, "surface_salin": [748, 754], "bottom_salin": 748, "5e3": 748, "strenuou": 748, "live": [748, 759], "induc": [750, 752], "propag": [750, 751], "stratif": [750, 754], "5000": 750, "amplitude_width_frac": 750, "amplitude_width_dist": 750, "50e3": 750, "2016": [751, 758], "sheetmodel": 751, "cornford": 751, "ocean3": 751, "ocean4": 751, "inflow": 751, "misomip": 751, "topo_smooth": 751, "min_ice_thick": 751, "scalar": 751, "draft_scal": 751, "minimum_level": 751, "min_column_thick": 751, "min_smoothed_draft_mask": 751, "min_land_ice_fract": 751, "init_top_temp": 751, "init_bot_temp": 751, "init_top_s": 751, "init_bot_s": 751, "restore_top_temp": 751, "restore_bot_temp": 751, "restore_top_s": 751, "restore_bot_s": 751, "restore_r": 751, "restore_evap_r": 751, "restore_xmin": 751, "790e3": 751, "restore_xmax": 751, "800e3": 751, "409e": 751, "kg": 751, "effective_dens": 751, "1026": 751, "0002": 751, "0003": 751, "isomip_plus_streamfunct": 751, "osf_dx": 751, "2e3": 751, "osf_dz": 751, "plot_hanei": 751, "section_i": 751, "warmest": 751, "amundsen": 751, "bellingshausen": 751, "vigor": 751, "rigor": 751, "cold": [751, 758], "weddel": 751, "ross": 751, "weak": 751, "decad": 751, "opposit": 751, "misimp": 751, "undergon": 751, "retreat": 751, "exponenti": 751, "cours": 751, "stai": 751, "monoton": 751, "thin_film_time_varying_ocean0": 751, "thin_film_wetting_ocean0": 751, "thin_film_drying_ocean0": 751, "landward": 751, "computation": 751, "inexpens": 751, "setup_to_run": 751, "loop": 751, "convect": 752, "perod": 752, "concentr": 752, "contour": 752, "streamlin": 752, "temperature_right": 752, "temperature_left": 752, "salinity_background": 752, "tracer2_background": 752, "tracer3_background": 752, "6h": 752, "stagger": 753, "hex": 753, "nx_1km": 753, "512": 753, "ny_1km": 753, "640": 753, "deg": 753, "x_center": 753, "y_center": 753, "gaussian_width": 753, "advect_x": 753, "advect_i": 753, "conv_thresh": 753, "conv_max": 753, "wolfram": [754, 758], "investig": 754, "midlatitud": 754, "21": 754, "48": 754, "gyre": 754, "appendix": 754, "16km": 754, "expans": 754, "eos_linear_alpha": 754, "density_differ": 754, "salinity_gradi": 754, "0008": 754, "thermocline_depth": 754, "density_difference_linear": 754, "phi": 754, "shelf_depth": [754, 758], "unequ": 754, "trajectori": 754, "situ": [754, 758], "lauritzen": 755, "debugtrac": 755, "discontinu": 755, "slot": 755, "cylind": 755, "offset": 755, "timestep_minut": 755, "tracer1_conv_thresh": 755, "tracer2_conv_thresh": 755, "tracer3_conv_thresh": 755, "appreci": 755, "degrad": 755, "revers": 755, "deform": 755, "nonlinearli": 755, "correl": 755, "invers": 756, "attract": [756, 757], "guassian": 756, "shperic": 756, "shtn": 756, "dosen": 756, "gather": 756, "rank": 756, "scatter": 756, "impliment": 756, "algoritm": 756, "all_reduc": 756, "use_shtn": 756, "analyit": 756, "sprial": 756, "harmoic": 756, "26": 756, "220": 756, "980": 756, "spherial": 756, "decompos": 757, "icosaher": 757, "tpxo9": 757, "beneath": 757, "timescal": 757, "125": 757, "ringler": 758, "span": 758, "l_x": 758, "l_y": 758, "y_": 758, "w_": 758, "easterli": 758, "wind_transition_posit": 758, "800000": 758, "antarctic_shelf_front_width": 758, "600000": 758, "wind_stress_shelf_front_max": 758, "meridional_ext": 758, "0e6": 758, "slope_half_width": 758, "0e5": 758, "slope_center_posit": 758, "reference_corioli": 758, "coriolis_gradi": 758, "wind_stress_max": 758, "mean_restoring_temp": 758, "restoring_temp_dev_ta": 758, "restoring_temp_dev_tb": 758, "interior": 758, "restoring_temp_tau": 758, "piston": 758, "restoring_temp_piston_vel": 758, "93e": 758, "fold": 758, "restoring_temp_z": 758, "spong": 758, "restoring_sponge_l": 758, "0e4": 758, "frazil_temperature_anomali": 758, "load_latest_compass": 759, "minu": 759, "create_compass_load_script": 759, "load_compass_1": 759, "0_mpich": 759, "sia_smoke_test": 759, "fo_smoke_test": 759, "grep": 759, "mpas_path": 759, "17": 759, "210131_test_new_branch": 759, "fall": 759, "landice_datafil": 759, "ocean_databas": 759, "_database_root": 759, "previous_workdir": 759, "recompil": 759, "safer": 759, "test_subdir": 759, "whatev": 759, "job_script": 759, "j": 759, "exclus": 759, "job_nam": 759, "wall_tim": 759, "fo_integr": [759, 761], "full_integr": [759, 761], "sia_integr": [759, 761], "suitenam": 759, "prohibit": 761}, "objects": {"compass": [[9, 0, 1, "", "MpasCore"], [11, 0, 1, "", "Step"], [26, 0, 1, "", "TestCase"], [31, 0, 1, "", "TestGroup"]], "compass.MpasCore": [[9, 1, 1, "", "__init__"], [10, 1, 1, "", "add_test_group"]], "compass.Step": [[11, 1, 1, "", "__init__"], [12, 1, 1, "", "add_input_file"], [13, 1, 1, "", "add_model_as_input"], [14, 1, 1, "", "add_namelist_file"], [15, 1, 1, "", "add_namelist_options"], [16, 1, 1, "", "add_output_file"], [17, 1, 1, "", "add_streams_file"], [18, 1, 1, "", "constrain_resources"], [19, 1, 1, "", "run"], [20, 1, 1, "", "runtime_setup"], [21, 1, 1, "", "set_resources"], [22, 1, 1, "", "setup"], [23, 1, 1, "", "update_namelist_at_runtime"], [24, 1, 1, "", "update_namelist_pio"], [25, 1, 1, "", "update_streams_at_runtime"]], "compass.TestCase": [[26, 1, 1, "", "__init__"], [27, 1, 1, "", "add_step"], [28, 1, 1, "", "configure"], [29, 1, 1, "", "run"], [30, 1, 1, "", "validate"]], "compass.TestGroup": [[31, 1, 1, "", "__init__"], [32, 1, 1, "", "add_test_case"]], "compass.__main__": [[33, 2, 1, "", "main"]], "compass.cache": [[34, 2, 1, "", "update_cache"]], "compass.clean": [[35, 2, 1, "", "clean_cases"]], "compass.config": [[36, 0, 1, "", "CompassConfigParser"]], "compass.config.CompassConfigParser": [[36, 1, 1, "", "__init__"]], "compass.io": [[37, 2, 1, "", "download"], [38, 2, 1, "", "symlink"]], "compass.landice": [[78, 0, 1, "", "Landice"]], "compass.landice.Landice": [[78, 1, 1, "", "__init__"]], "compass.landice.tests.calving_dt_convergence": [[79, 0, 1, "", "CalvingDtConvergence"]], "compass.landice.tests.calving_dt_convergence.CalvingDtConvergence": [[79, 1, 1, "", "__init__"]], "compass.landice.tests.calving_dt_convergence.dt_convergence_test": [[80, 0, 1, "", "DtConvergenceTest"]], "compass.landice.tests.calving_dt_convergence.dt_convergence_test.DtConvergenceTest": [[80, 1, 1, "", "__init__"], [81, 1, 1, "", "validate"]], "compass.landice.tests.calving_dt_convergence.run_model": [[82, 0, 1, "", "RunModel"]], "compass.landice.tests.calving_dt_convergence.run_model.RunModel": [[82, 1, 1, "", "__init__"], [83, 1, 1, "", "run"]], "compass.landice.tests.circular_shelf": [[84, 0, 1, "", "CircularShelf"]], "compass.landice.tests.circular_shelf.CircularShelf": [[84, 1, 1, "", "__init__"]], "compass.landice.tests.circular_shelf.decomposition_test": [[85, 0, 1, "", "DecompositionTest"]], "compass.landice.tests.circular_shelf.decomposition_test.DecompositionTest": [[85, 1, 1, "", "__init__"], [86, 1, 1, "", "run"]], "compass.landice.tests.circular_shelf.run_model": [[87, 0, 1, "", "RunModel"]], "compass.landice.tests.circular_shelf.run_model.RunModel": [[87, 1, 1, "", "__init__"], [88, 1, 1, "", "run"]], "compass.landice.tests.circular_shelf.setup_mesh": [[89, 0, 1, "", "SetupMesh"]], "compass.landice.tests.circular_shelf.setup_mesh.SetupMesh": [[89, 1, 1, "", "__init__"], [90, 1, 1, "", "run"]], "compass.landice.tests.circular_shelf.visualize": [[91, 0, 1, "", "Visualize"], [93, 2, 1, "", "visualize_circular_shelf"]], "compass.landice.tests.circular_shelf.visualize.Visualize": [[91, 1, 1, "", "__init__"], [92, 1, 1, "", "run"]], "compass.landice.tests.dome": [[94, 0, 1, "", "Dome"]], "compass.landice.tests.dome.Dome": [[94, 1, 1, "", "__init__"]], "compass.landice.tests.dome.decomposition_test": [[95, 0, 1, "", "DecompositionTest"]], "compass.landice.tests.dome.decomposition_test.DecompositionTest": [[95, 1, 1, "", "__init__"], [96, 1, 1, "", "run"]], "compass.landice.tests.dome.restart_test": [[97, 0, 1, "", "RestartTest"]], "compass.landice.tests.dome.restart_test.RestartTest": [[97, 1, 1, "", "__init__"], [98, 1, 1, "", "run"]], "compass.landice.tests.dome.run_model": [[99, 0, 1, "", "RunModel"]], "compass.landice.tests.dome.run_model.RunModel": [[99, 1, 1, "", "__init__"], [100, 1, 1, "", "run"], [101, 1, 1, "", "setup"]], "compass.landice.tests.dome.setup_mesh": [[102, 0, 1, "", "SetupMesh"]], "compass.landice.tests.dome.setup_mesh.SetupMesh": [[102, 1, 1, "", "__init__"], [103, 1, 1, "", "run"]], "compass.landice.tests.dome.smoke_test": [[104, 0, 1, "", "SmokeTest"]], "compass.landice.tests.dome.smoke_test.SmokeTest": [[104, 1, 1, "", "__init__"], [105, 1, 1, "", "run"]], "compass.landice.tests.dome.visualize": [[106, 0, 1, "", "Visualize"], [108, 2, 1, "", "visualize_dome"]], "compass.landice.tests.dome.visualize.Visualize": [[106, 1, 1, "", "__init__"], [107, 1, 1, "", "run"]], "compass.landice.tests.eismint2": [[109, 0, 1, "", "Eismint2"]], "compass.landice.tests.eismint2.Eismint2": [[109, 1, 1, "", "__init__"]], "compass.landice.tests.eismint2.decomposition_test": [[110, 0, 1, "", "DecompositionTest"]], "compass.landice.tests.eismint2.decomposition_test.DecompositionTest": [[110, 1, 1, "", "__init__"], [111, 1, 1, "", "run"]], "compass.landice.tests.eismint2.restart_test": [[112, 0, 1, "", "RestartTest"]], "compass.landice.tests.eismint2.restart_test.RestartTest": [[112, 1, 1, "", "__init__"], [113, 1, 1, "", "run"]], "compass.landice.tests.eismint2.run_experiment": [[114, 0, 1, "", "RunExperiment"]], "compass.landice.tests.eismint2.run_experiment.RunExperiment": [[114, 1, 1, "", "__init__"], [115, 1, 1, "", "run"], [116, 1, 1, "", "setup"]], "compass.landice.tests.eismint2.setup_mesh": [[117, 0, 1, "", "SetupMesh"]], "compass.landice.tests.eismint2.setup_mesh.SetupMesh": [[117, 1, 1, "", "__init__"], [118, 1, 1, "", "run"]], "compass.landice.tests.eismint2.standard_experiments": [[119, 0, 1, "", "StandardExperiments"]], "compass.landice.tests.eismint2.standard_experiments.StandardExperiments": [[119, 1, 1, "", "__init__"], [120, 1, 1, "", "run"]], "compass.landice.tests.eismint2.standard_experiments.visualize": [[121, 0, 1, "", "Visualize"], [123, 2, 1, "", "visualize_eismint2"]], "compass.landice.tests.eismint2.standard_experiments.visualize.Visualize": [[121, 1, 1, "", "__init__"], [122, 1, 1, "", "run"]], "compass.landice.tests.enthalpy_benchmark.A": [[124, 0, 1, "", "A"]], "compass.landice.tests.enthalpy_benchmark.A.A": [[124, 1, 1, "", "__init__"], [125, 1, 1, "", "configure"], [126, 1, 1, "", "run"]], "compass.landice.tests.enthalpy_benchmark.A.visualize": [[127, 0, 1, "", "Visualize"]], "compass.landice.tests.enthalpy_benchmark.A.visualize.Visualize": [[127, 1, 1, "", "__init__"], [128, 1, 1, "", "run"]], "compass.landice.tests.enthalpy_benchmark.B": [[129, 0, 1, "", "B"]], "compass.landice.tests.enthalpy_benchmark.B.B": [[129, 1, 1, "", "__init__"], [130, 1, 1, "", "configure"], [131, 1, 1, "", "run"]], "compass.landice.tests.enthalpy_benchmark.B.visualize": [[132, 0, 1, "", "Visualize"]], "compass.landice.tests.enthalpy_benchmark.B.visualize.Visualize": [[132, 1, 1, "", "__init__"], [133, 1, 1, "", "run"]], "compass.landice.tests.enthalpy_benchmark": [[134, 0, 1, "", "EnthalpyBenchmark"]], "compass.landice.tests.enthalpy_benchmark.EnthalpyBenchmark": [[134, 1, 1, "", "__init__"]], "compass.landice.tests.enthalpy_benchmark.run_model": [[135, 0, 1, "", "RunModel"]], "compass.landice.tests.enthalpy_benchmark.run_model.RunModel": [[135, 1, 1, "", "__init__"], [136, 1, 1, "", "run"], [137, 1, 1, "", "setup"]], "compass.landice.tests.enthalpy_benchmark.setup_mesh": [[138, 0, 1, "", "SetupMesh"]], "compass.landice.tests.enthalpy_benchmark.setup_mesh.SetupMesh": [[138, 1, 1, "", "__init__"], [139, 1, 1, "", "run"]], "compass.landice.tests.greenland": [[140, 0, 1, "", "Greenland"]], "compass.landice.tests.greenland.Greenland": [[140, 1, 1, "", "__init__"]], "compass.landice.tests.greenland.decomposition_test": [[141, 0, 1, "", "DecompositionTest"]], "compass.landice.tests.greenland.decomposition_test.DecompositionTest": [[141, 1, 1, "", "__init__"], [142, 1, 1, "", "run"]], "compass.landice.tests.greenland.high_res_mesh": [[143, 0, 1, "", "HighResMesh"]], "compass.landice.tests.greenland.high_res_mesh.HighResMesh": [[143, 1, 1, "", "__init__"], [144, 1, 1, "", "run"]], "compass.landice.tests.greenland.mesh": [[145, 0, 1, "", "Mesh"]], "compass.landice.tests.greenland.mesh.Mesh": [[145, 1, 1, "", "__init__"], [146, 1, 1, "", "build_cell_width"], [147, 1, 1, "", "run"]], "compass.landice.tests.greenland.restart_test": [[148, 0, 1, "", "RestartTest"]], "compass.landice.tests.greenland.restart_test.RestartTest": [[148, 1, 1, "", "__init__"], [149, 1, 1, "", "run"]], "compass.landice.tests.greenland.run_model": [[150, 0, 1, "", "RunModel"]], "compass.landice.tests.greenland.run_model.RunModel": [[150, 1, 1, "", "__init__"], [151, 1, 1, "", "run"], [152, 1, 1, "", "setup"]], "compass.landice.tests.greenland.smoke_test": [[153, 0, 1, "", "SmokeTest"]], "compass.landice.tests.greenland.smoke_test.SmokeTest": [[153, 1, 1, "", "__init__"], [154, 1, 1, "", "run"]], "compass.landice.tests.humboldt": [[155, 0, 1, "", "Humboldt"]], "compass.landice.tests.humboldt.Humboldt": [[155, 1, 1, "", "__init__"]], "compass.landice.tests.humboldt.decomposition_test": [[156, 0, 1, "", "DecompositionTest"]], "compass.landice.tests.humboldt.decomposition_test.DecompositionTest": [[156, 1, 1, "", "__init__"], [157, 1, 1, "", "validate"]], "compass.landice.tests.humboldt.mesh": [[158, 0, 1, "", "Mesh"]], "compass.landice.tests.humboldt.mesh.Mesh": [[158, 1, 1, "", "__init__"], [159, 1, 1, "", "run"]], "compass.landice.tests.humboldt.mesh_gen": [[160, 0, 1, "", "MeshGen"]], "compass.landice.tests.humboldt.mesh_gen.MeshGen": [[160, 1, 1, "", "__init__"], [161, 1, 1, "", "run"]], "compass.landice.tests.humboldt.restart_test": [[162, 0, 1, "", "RestartTest"]], "compass.landice.tests.humboldt.restart_test.RestartTest": [[162, 1, 1, "", "__init__"], [163, 1, 1, "", "validate"]], "compass.landice.tests.humboldt.run_model": [[164, 0, 1, "", "RunModel"]], "compass.landice.tests.humboldt.run_model.RunModel": [[164, 1, 1, "", "__init__"], [165, 1, 1, "", "run"]], "compass.landice.tests.hydro_radial": [[166, 0, 1, "", "HydroRadial"]], "compass.landice.tests.hydro_radial.HydroRadial": [[166, 1, 1, "", "__init__"]], "compass.landice.tests.hydro_radial.decomposition_test": [[167, 0, 1, "", "DecompositionTest"]], "compass.landice.tests.hydro_radial.decomposition_test.DecompositionTest": [[167, 1, 1, "", "__init__"], [168, 1, 1, "", "run"]], "compass.landice.tests.hydro_radial.restart_test": [[169, 0, 1, "", "RestartTest"]], "compass.landice.tests.hydro_radial.restart_test.RestartTest": [[169, 1, 1, "", "__init__"], [170, 1, 1, "", "run"]], "compass.landice.tests.hydro_radial.run_model": [[171, 0, 1, "", "RunModel"]], "compass.landice.tests.hydro_radial.run_model.RunModel": [[171, 1, 1, "", "__init__"], [172, 1, 1, "", "run"], [173, 1, 1, "", "setup"]], "compass.landice.tests.hydro_radial.setup_mesh": [[174, 0, 1, "", "SetupMesh"]], "compass.landice.tests.hydro_radial.setup_mesh.SetupMesh": [[174, 1, 1, "", "__init__"], [175, 1, 1, "", "run"]], "compass.landice.tests.hydro_radial.spinup_test": [[176, 0, 1, "", "SpinupTest"]], "compass.landice.tests.hydro_radial.spinup_test.SpinupTest": [[176, 1, 1, "", "__init__"], [177, 1, 1, "", "run"]], "compass.landice.tests.hydro_radial.steady_state_drift_test": [[178, 0, 1, "", "SteadyStateDriftTest"]], "compass.landice.tests.hydro_radial.steady_state_drift_test.SteadyStateDriftTest": [[178, 1, 1, "", "__init__"], [179, 1, 1, "", "run"]], "compass.landice.tests.hydro_radial.visualize": [[180, 0, 1, "", "Visualize"], [182, 2, 1, "", "visualize_hydro_radial"]], "compass.landice.tests.hydro_radial.visualize.Visualize": [[180, 1, 1, "", "__init__"], [181, 1, 1, "", "run"]], "compass.landice.tests.ismip6_forcing": [[183, 0, 1, "", "Ismip6Forcing"]], "compass.landice.tests.ismip6_forcing.Ismip6Forcing": [[183, 1, 1, "", "__init__"]], "compass.landice.tests.ismip6_forcing.atmosphere": [[184, 0, 1, "", "Atmosphere"], [186, 3, 0, "-", "create_mapfile_smb"]], "compass.landice.tests.ismip6_forcing.atmosphere.Atmosphere": [[184, 1, 1, "", "__init__"], [185, 1, 1, "", "configure"]], "compass.landice.tests.ismip6_forcing.atmosphere.create_mapfile_smb": [[187, 2, 1, "", "build_mapping_file"], [188, 2, 1, "", "create_atm_scrip"]], "compass.landice.tests.ismip6_forcing.atmosphere.process_smb": [[189, 0, 1, "", "ProcessSMB"]], "compass.landice.tests.ismip6_forcing.atmosphere.process_smb.ProcessSMB": [[189, 1, 1, "", "__init__"], [190, 1, 1, "", "correct_smb_anomaly_for_climatology"], [191, 1, 1, "", "remap_ismip6_smb_to_mali"], [192, 1, 1, "", "rename_ismip6_smb_to_mali_vars"], [193, 1, 1, "", "run"], [194, 1, 1, "", "setup"]], "compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo": [[195, 0, 1, "", "ProcessSmbRacmo"]], "compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.ProcessSmbRacmo": [[195, 1, 1, "", "__init__"], [196, 1, 1, "", "correct_smb_anomaly_for_base_smb"], [197, 1, 1, "", "remap_source_smb_to_mali"], [198, 1, 1, "", "rename_source_smb_to_mali_vars"], [199, 1, 1, "", "run"], [200, 1, 1, "", "setup"]], "compass.landice.tests.ismip6_forcing.configure": [[201, 2, 1, "", "configure"]], "compass.landice.tests.ismip6_forcing.create_mapfile": [[202, 2, 1, "", "build_mapping_file"]], "compass.landice.tests.ismip6_forcing.ocean_basal": [[203, 0, 1, "", "OceanBasal"]], "compass.landice.tests.ismip6_forcing.ocean_basal.OceanBasal": [[203, 1, 1, "", "__init__"], [204, 1, 1, "", "configure"]], "compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt": [[205, 0, 1, "", "ProcessBasalMelt"]], "compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.ProcessBasalMelt": [[205, 1, 1, "", "__init__"], [206, 1, 1, "", "combine_ismip6_inputfiles"], [207, 1, 1, "", "remap_ismip6_basal_melt_to_mali_vars"], [208, 1, 1, "", "rename_ismip6_basal_melt_to_mali_vars"], [209, 1, 1, "", "run"], [210, 1, 1, "", "setup"]], "compass.landice.tests.ismip6_forcing.ocean_thermal": [[211, 0, 1, "", "OceanThermal"]], "compass.landice.tests.ismip6_forcing.ocean_thermal.OceanThermal": [[211, 1, 1, "", "__init__"], [212, 1, 1, "", "configure"]], "compass.landice.tests.ismip6_forcing.ocean_thermal.process_thermal_forcing": [[213, 0, 1, "", "ProcessThermalForcing"]], "compass.landice.tests.ismip6_forcing.ocean_thermal.process_thermal_forcing.ProcessThermalForcing": [[213, 1, 1, "", "__init__"], [214, 1, 1, "", "remap_ismip6_thermal_forcing_to_mali_vars"], [215, 1, 1, "", "rename_ismip6_thermal_forcing_to_mali_vars"], [216, 1, 1, "", "run"], [217, 1, 1, "", "setup"]], "compass.landice.tests.kangerlussuaq": [[218, 0, 1, "", "Kangerlussuaq"]], "compass.landice.tests.kangerlussuaq.Kangerlussuaq": [[218, 1, 1, "", "__init__"]], "compass.landice.tests.kangerlussuaq.mesh": [[219, 0, 1, "", "Mesh"]], "compass.landice.tests.kangerlussuaq.mesh.Mesh": [[219, 1, 1, "", "__init__"], [220, 1, 1, "", "run"]], "compass.landice.tests.kangerlussuaq.mesh_gen": [[221, 0, 1, "", "MeshGen"]], "compass.landice.tests.kangerlussuaq.mesh_gen.MeshGen": [[221, 1, 1, "", "__init__"], [222, 1, 1, "", "run"]], "compass.landice.tests.koge_bugt_s": [[223, 0, 1, "", "KogeBugtS"]], "compass.landice.tests.koge_bugt_s.KogeBugtS": [[223, 1, 1, "", "__init__"]], "compass.landice.tests.koge_bugt_s.mesh": [[224, 0, 1, "", "Mesh"]], "compass.landice.tests.koge_bugt_s.mesh.Mesh": [[224, 1, 1, "", "__init__"], [225, 1, 1, "", "run"]], "compass.landice.tests.koge_bugt_s.mesh_gen": [[226, 0, 1, "", "MeshGen"]], "compass.landice.tests.koge_bugt_s.mesh_gen.MeshGen": [[226, 1, 1, "", "__init__"], [227, 1, 1, "", "run"]], "compass.landice.tests.mismipplus": [[228, 0, 1, "", "MISMIPplus"]], "compass.landice.tests.mismipplus.MISMIPplus": [[228, 1, 1, "", "__init__"]], "compass.landice.tests.mismipplus.run_model": [[229, 0, 1, "", "RunModel"]], "compass.landice.tests.mismipplus.run_model.RunModel": [[229, 1, 1, "", "__init__"], [230, 1, 1, "", "run"], [231, 1, 1, "", "setup"]], "compass.landice.tests.mismipplus.smoke_test": [[232, 0, 1, "", "SmokeTest"]], "compass.landice.tests.mismipplus.smoke_test.SmokeTest": [[232, 1, 1, "", "__init__"], [233, 1, 1, "", "run"]], "compass.landice.tests.thwaites": [[234, 0, 1, "", "Thwaites"]], "compass.landice.tests.thwaites.Thwaites": [[234, 1, 1, "", "__init__"]], "compass.landice.tests.thwaites.decomposition_test": [[235, 0, 1, "", "DecompositionTest"]], "compass.landice.tests.thwaites.decomposition_test.DecompositionTest": [[235, 1, 1, "", "__init__"], [236, 1, 1, "", "run"]], "compass.landice.tests.thwaites.restart_test": [[237, 0, 1, "", "RestartTest"]], "compass.landice.tests.thwaites.restart_test.RestartTest": [[237, 1, 1, "", "__init__"], [238, 1, 1, "", "run"]], "compass.landice.tests.thwaites.run_model": [[239, 0, 1, "", "RunModel"]], "compass.landice.tests.thwaites.run_model.RunModel": [[239, 1, 1, "", "__init__"], [240, 1, 1, "", "run"], [241, 1, 1, "", "setup"]], "compass.list": [[39, 2, 1, "", "list_cases"], [40, 2, 1, "", "list_machines"], [41, 2, 1, "", "list_suites"]], "compass.logging": [[42, 2, 1, "", "log_method_call"]], "compass.mesh": [[43, 0, 1, "", "IcosahedralMeshStep"], [50, 0, 1, "", "QuasiUniformSphericalMeshStep"]], "compass.mesh.IcosahedralMeshStep": [[43, 1, 1, "", "__init__"], [44, 1, 1, "", "build_subdivisions_cell_width_lat_lon"], [45, 1, 1, "", "get_cell_width"], [46, 1, 1, "", "get_subdivisions"], [47, 1, 1, "", "make_jigsaw_mesh"], [48, 1, 1, "", "run"], [49, 1, 1, "", "setup"]], "compass.mesh.QuasiUniformSphericalMeshStep": [[50, 1, 1, "", "__init__"], [51, 1, 1, "", "build_cell_width_lat_lon"], [52, 1, 1, "", "make_jigsaw_mesh"], [53, 1, 1, "", "run"], [54, 1, 1, "", "setup"]], "compass.mesh.spherical": [[55, 0, 1, "", "SphericalBaseStep"]], "compass.mesh.spherical.SphericalBaseStep": [[55, 1, 1, "", "__init__"], [56, 1, 1, "", "run"], [57, 1, 1, "", "save_and_plot_cell_width"], [58, 1, 1, "", "setup"]], "compass.model": [[59, 2, 1, "", "make_graph_file"], [60, 2, 1, "", "partition"], [61, 2, 1, "", "run_model"]], "compass.mpas_cores": [[62, 2, 1, "", "get_mpas_cores"]], "compass.ocean": [[265, 0, 1, "", "Ocean"]], "compass.ocean.Ocean": [[265, 1, 1, "", "__init__"]], "compass.ocean.haney": [[266, 2, 1, "", "compute_haney_number"]], "compass.ocean.iceshelf": [[267, 2, 1, "", "adjust_ssh"], [268, 2, 1, "", "compute_land_ice_pressure_and_draft"]], "compass.ocean.mesh.cull": [[269, 0, 1, "", "CullMeshStep"], [272, 2, 1, "", "cull_mesh"]], "compass.ocean.mesh.cull.CullMeshStep": [[269, 1, 1, "", "__init__"], [270, 1, 1, "", "run"], [271, 1, 1, "", "setup"]], "compass.ocean.mesh.floodplain": [[273, 0, 1, "", "FloodplainMeshStep"]], "compass.ocean.mesh.floodplain.FloodplainMeshStep": [[273, 1, 1, "", "__init__"], [274, 1, 1, "", "run"]], "compass.ocean.particles": [[275, 2, 1, "", "remap_particles"], [276, 2, 1, "", "write"]], "compass.ocean.plot": [[277, 2, 1, "", "plot_initial_state"], [278, 2, 1, "", "plot_vertical_grid"]], "compass.ocean.tests.baroclinic_channel": [[279, 0, 1, "", "BaroclinicChannel"], [280, 2, 1, "", "configure"]], "compass.ocean.tests.baroclinic_channel.BaroclinicChannel": [[279, 1, 1, "", "__init__"]], "compass.ocean.tests.baroclinic_channel.decomp_test": [[281, 0, 1, "", "DecompTest"]], "compass.ocean.tests.baroclinic_channel.decomp_test.DecompTest": [[281, 1, 1, "", "__init__"], [282, 1, 1, "", "configure"], [283, 1, 1, "", "run"]], "compass.ocean.tests.baroclinic_channel.default": [[284, 0, 1, "", "Default"]], "compass.ocean.tests.baroclinic_channel.default.Default": [[284, 1, 1, "", "__init__"], [285, 1, 1, "", "configure"], [286, 1, 1, "", "run"]], "compass.ocean.tests.baroclinic_channel.forward": [[287, 0, 1, "", "Forward"]], "compass.ocean.tests.baroclinic_channel.forward.Forward": [[287, 1, 1, "", "__init__"], [288, 1, 1, "", "run"], [289, 1, 1, "", "setup"]], "compass.ocean.tests.baroclinic_channel.initial_state": [[290, 0, 1, "", "InitialState"]], "compass.ocean.tests.baroclinic_channel.initial_state.InitialState": [[290, 1, 1, "", "__init__"], [291, 1, 1, "", "run"], [292, 1, 1, "", "setup"]], "compass.ocean.tests.baroclinic_channel.restart_test": [[293, 0, 1, "", "RestartTest"]], "compass.ocean.tests.baroclinic_channel.restart_test.RestartTest": [[293, 1, 1, "", "__init__"], [294, 1, 1, "", "configure"], [295, 1, 1, "", "run"]], "compass.ocean.tests.baroclinic_channel.rpe_test": [[296, 0, 1, "", "RpeTest"]], "compass.ocean.tests.baroclinic_channel.rpe_test.RpeTest": [[296, 1, 1, "", "__init__"], [297, 1, 1, "", "configure"], [298, 1, 1, "", "run"]], "compass.ocean.tests.baroclinic_channel.rpe_test.analysis": [[299, 0, 1, "", "Analysis"]], "compass.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis": [[299, 1, 1, "", "__init__"], [300, 1, 1, "", "run"], [301, 1, 1, "", "setup"]], "compass.ocean.tests.baroclinic_channel.threads_test": [[302, 0, 1, "", "ThreadsTest"]], "compass.ocean.tests.baroclinic_channel.threads_test.ThreadsTest": [[302, 1, 1, "", "__init__"], [303, 1, 1, "", "configure"], [304, 1, 1, "", "run"]], "compass.ocean.tests.dam_break": [[305, 0, 1, "", "DamBreak"]], "compass.ocean.tests.dam_break.DamBreak": [[305, 1, 1, "", "__init__"]], "compass.ocean.tests.dam_break.default": [[306, 0, 1, "", "Default"]], "compass.ocean.tests.dam_break.default.Default": [[306, 1, 1, "", "__init__"], [307, 1, 1, "", "configure"]], "compass.ocean.tests.dam_break.forward": [[308, 0, 1, "", "Forward"]], "compass.ocean.tests.dam_break.forward.Forward": [[308, 1, 1, "", "__init__"], [309, 1, 1, "", "run"]], "compass.ocean.tests.dam_break.initial_state": [[310, 0, 1, "", "InitialState"]], "compass.ocean.tests.dam_break.initial_state.InitialState": [[310, 1, 1, "", "__init__"], [311, 1, 1, "", "run"]], "compass.ocean.tests.dam_break.viz": [[312, 0, 1, "", "Viz"]], "compass.ocean.tests.dam_break.viz.Viz": [[312, 1, 1, "", "__init__"], [313, 1, 1, "", "run"]], "compass.ocean.tests.drying_slope": [[314, 0, 1, "", "DryingSlope"]], "compass.ocean.tests.drying_slope.DryingSlope": [[314, 1, 1, "", "__init__"]], "compass.ocean.tests.drying_slope.default": [[315, 0, 1, "", "Default"]], "compass.ocean.tests.drying_slope.default.Default": [[315, 1, 1, "", "__init__"], [316, 1, 1, "", "configure"]], "compass.ocean.tests.drying_slope.forward": [[317, 0, 1, "", "Forward"]], "compass.ocean.tests.drying_slope.forward.Forward": [[317, 1, 1, "", "__init__"], [318, 1, 1, "", "run"]], "compass.ocean.tests.drying_slope.initial_state": [[319, 0, 1, "", "InitialState"]], "compass.ocean.tests.drying_slope.initial_state.InitialState": [[319, 1, 1, "", "__init__"], [320, 1, 1, "", "run"]], "compass.ocean.tests.drying_slope.viz": [[321, 0, 1, "", "Viz"]], "compass.ocean.tests.drying_slope.viz.Viz": [[321, 1, 1, "", "__init__"], [322, 1, 1, "", "run"]], "compass.ocean.tests.global_convergence": [[323, 0, 1, "", "GlobalConvergence"]], "compass.ocean.tests.global_convergence.GlobalConvergence": [[323, 1, 1, "", "__init__"]], "compass.ocean.tests.global_convergence.cosine_bell": [[324, 0, 1, "", "CosineBell"]], "compass.ocean.tests.global_convergence.cosine_bell.CosineBell": [[324, 1, 1, "", "__init__"], [325, 1, 1, "", "configure"], [326, 1, 1, "", "run"]], "compass.ocean.tests.global_convergence.cosine_bell.analysis": [[327, 0, 1, "", "Analysis"]], "compass.ocean.tests.global_convergence.cosine_bell.analysis.Analysis": [[327, 1, 1, "", "__init__"], [328, 1, 1, "", "rmse"], [329, 1, 1, "", "run"]], "compass.ocean.tests.global_convergence.cosine_bell.forward": [[330, 0, 1, "", "Forward"]], "compass.ocean.tests.global_convergence.cosine_bell.forward.Forward": [[330, 1, 1, "", "__init__"], [331, 1, 1, "", "get_dt"], [332, 1, 1, "", "run"], [333, 1, 1, "", "setup"]], "compass.ocean.tests.global_convergence.cosine_bell.init": [[334, 0, 1, "", "Init"]], "compass.ocean.tests.global_convergence.cosine_bell.init.Init": [[334, 1, 1, "", "__init__"], [335, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean": [[336, 0, 1, "", "GlobalOcean"], [340, 3, 0, "-", "configure"]], "compass.ocean.tests.global_ocean.GlobalOcean": [[336, 1, 1, "", "__init__"]], "compass.ocean.tests.global_ocean.analysis_test": [[337, 0, 1, "", "AnalysisTest"]], "compass.ocean.tests.global_ocean.analysis_test.AnalysisTest": [[337, 1, 1, "", "__init__"], [338, 1, 1, "", "configure"], [339, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.configure": [[341, 2, 1, "", "configure_global_ocean"]], "compass.ocean.tests.global_ocean.daily_output_test": [[342, 0, 1, "", "DailyOutputTest"]], "compass.ocean.tests.global_ocean.daily_output_test.DailyOutputTest": [[342, 1, 1, "", "__init__"], [343, 1, 1, "", "configure"], [344, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.decomp_test": [[345, 0, 1, "", "DecompTest"]], "compass.ocean.tests.global_ocean.decomp_test.DecompTest": [[345, 1, 1, "", "__init__"], [346, 1, 1, "", "configure"], [347, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.dynamic_adjustment": [[348, 0, 1, "", "DynamicAdjustment"]], "compass.ocean.tests.global_ocean.dynamic_adjustment.DynamicAdjustment": [[348, 1, 1, "", "__init__"], [349, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.files_for_e3sm": [[350, 0, 1, "", "FilesForE3SM"]], "compass.ocean.tests.global_ocean.files_for_e3sm.FilesForE3SM": [[350, 1, 1, "", "__init__"], [351, 1, 1, "", "configure"], [352, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.files_for_e3sm.diagnostics_files": [[353, 0, 1, "", "DiagnosticsFiles"]], "compass.ocean.tests.global_ocean.files_for_e3sm.diagnostics_files.DiagnosticsFiles": [[353, 1, 1, "", "__init__"], [354, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.files_for_e3sm.ocean_graph_partition": [[355, 0, 1, "", "OceanGraphPartition"]], "compass.ocean.tests.global_ocean.files_for_e3sm.ocean_graph_partition.OceanGraphPartition": [[355, 1, 1, "", "__init__"], [356, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.files_for_e3sm.ocean_initial_condition": [[357, 0, 1, "", "OceanInitialCondition"]], "compass.ocean.tests.global_ocean.files_for_e3sm.ocean_initial_condition.OceanInitialCondition": [[357, 1, 1, "", "__init__"], [358, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.files_for_e3sm.scrip": [[359, 0, 1, "", "Scrip"]], "compass.ocean.tests.global_ocean.files_for_e3sm.scrip.Scrip": [[359, 1, 1, "", "__init__"], [360, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.files_for_e3sm.seaice_initial_condition": [[361, 0, 1, "", "SeaiceInitialCondition"]], "compass.ocean.tests.global_ocean.files_for_e3sm.seaice_initial_condition.SeaiceInitialCondition": [[361, 1, 1, "", "__init__"], [362, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.forward": [[363, 0, 1, "", "ForwardStep"], [366, 0, 1, "", "ForwardTestCase"]], "compass.ocean.tests.global_ocean.forward.ForwardStep": [[363, 1, 1, "", "__init__"], [364, 1, 1, "", "run"], [365, 1, 1, "", "setup"]], "compass.ocean.tests.global_ocean.forward.ForwardTestCase": [[366, 1, 1, "", "__init__"], [367, 1, 1, "", "configure"], [368, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.init": [[369, 0, 1, "", "Init"]], "compass.ocean.tests.global_ocean.init.Init": [[369, 1, 1, "", "__init__"], [370, 1, 1, "", "configure"], [371, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.init.initial_state": [[372, 0, 1, "", "InitialState"]], "compass.ocean.tests.global_ocean.init.initial_state.InitialState": [[372, 1, 1, "", "__init__"], [373, 1, 1, "", "run"], [374, 1, 1, "", "setup"]], "compass.ocean.tests.global_ocean.init.ssh_adjustment": [[375, 0, 1, "", "SshAdjustment"]], "compass.ocean.tests.global_ocean.init.ssh_adjustment.SshAdjustment": [[375, 1, 1, "", "__init__"], [376, 1, 1, "", "run"], [377, 1, 1, "", "setup"]], "compass.ocean.tests.global_ocean.mesh": [[378, 0, 1, "", "Mesh"]], "compass.ocean.tests.global_ocean.mesh.Mesh": [[378, 1, 1, "", "__init__"], [379, 1, 1, "", "configure"], [380, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.mesh.ec30to60": [[381, 0, 1, "", "EC30to60BaseMesh"]], "compass.ocean.tests.global_ocean.mesh.ec30to60.EC30to60BaseMesh": [[381, 1, 1, "", "__init__"], [382, 1, 1, "", "build_cell_width_lat_lon"]], "compass.ocean.tests.global_ocean.mesh.ec30to60.dynamic_adjustment": [[383, 0, 1, "", "EC30to60DynamicAdjustment"]], "compass.ocean.tests.global_ocean.mesh.ec30to60.dynamic_adjustment.EC30to60DynamicAdjustment": [[383, 1, 1, "", "__init__"], [384, 1, 1, "", "configure"], [385, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.mesh.qu240.dynamic_adjustment": [[386, 0, 1, "", "QU240DynamicAdjustment"]], "compass.ocean.tests.global_ocean.mesh.qu240.dynamic_adjustment.QU240DynamicAdjustment": [[386, 1, 1, "", "__init__"], [387, 1, 1, "", "configure"], [388, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.mesh.so12to60": [[389, 0, 1, "", "SO12to60BaseMesh"]], "compass.ocean.tests.global_ocean.mesh.so12to60.SO12to60BaseMesh": [[389, 1, 1, "", "__init__"], [390, 1, 1, "", "build_cell_width_lat_lon"]], "compass.ocean.tests.global_ocean.mesh.so12to60.dynamic_adjustment": [[391, 0, 1, "", "SO12to60DynamicAdjustment"]], "compass.ocean.tests.global_ocean.mesh.so12to60.dynamic_adjustment.SO12to60DynamicAdjustment": [[391, 1, 1, "", "__init__"], [392, 1, 1, "", "configure"], [393, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.mesh.wc14": [[394, 0, 1, "", "WC14BaseMesh"]], "compass.ocean.tests.global_ocean.mesh.wc14.WC14BaseMesh": [[394, 1, 1, "", "__init__"], [395, 1, 1, "", "build_cell_width_lat_lon"]], "compass.ocean.tests.global_ocean.mesh.wc14.dynamic_adjustment": [[396, 0, 1, "", "WC14DynamicAdjustment"]], "compass.ocean.tests.global_ocean.mesh.wc14.dynamic_adjustment.WC14DynamicAdjustment": [[396, 1, 1, "", "__init__"], [397, 1, 1, "", "configure"], [398, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.metadata": [[399, 2, 1, "", "add_mesh_and_init_metadata"], [400, 2, 1, "", "get_e3sm_mesh_names"]], "compass.ocean.tests.global_ocean.performance_test": [[401, 0, 1, "", "PerformanceTest"]], "compass.ocean.tests.global_ocean.performance_test.PerformanceTest": [[401, 1, 1, "", "__init__"], [402, 1, 1, "", "configure"], [403, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.restart_test": [[404, 0, 1, "", "RestartTest"]], "compass.ocean.tests.global_ocean.restart_test.RestartTest": [[404, 1, 1, "", "__init__"], [405, 1, 1, "", "configure"], [406, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.threads_test": [[407, 0, 1, "", "ThreadsTest"]], "compass.ocean.tests.global_ocean.threads_test.ThreadsTest": [[407, 1, 1, "", "__init__"], [408, 1, 1, "", "configure"], [409, 1, 1, "", "run"]], "compass.ocean.tests.gotm": [[410, 0, 1, "", "Gotm"]], "compass.ocean.tests.gotm.Gotm": [[410, 1, 1, "", "__init__"]], "compass.ocean.tests.gotm.default": [[411, 0, 1, "", "Default"]], "compass.ocean.tests.gotm.default.Default": [[411, 1, 1, "", "__init__"], [412, 1, 1, "", "validate"]], "compass.ocean.tests.gotm.default.analysis": [[413, 0, 1, "", "Analysis"]], "compass.ocean.tests.gotm.default.analysis.Analysis": [[413, 1, 1, "", "__init__"], [414, 1, 1, "", "run"]], "compass.ocean.tests.gotm.default.forward": [[415, 0, 1, "", "Forward"]], "compass.ocean.tests.gotm.default.forward.Forward": [[415, 1, 1, "", "__init__"], [416, 1, 1, "", "run"]], "compass.ocean.tests.gotm.default.init": [[417, 0, 1, "", "Init"]], "compass.ocean.tests.gotm.default.init.Init": [[417, 1, 1, "", "__init__"], [418, 1, 1, "", "run"]], "compass.ocean.tests.hurricane": [[419, 0, 1, "", "Hurricane"], [426, 3, 0, "-", "configure"]], "compass.ocean.tests.hurricane.Hurricane": [[419, 1, 1, "", "__init__"]], "compass.ocean.tests.hurricane.analysis": [[420, 0, 1, "", "Analysis"]], "compass.ocean.tests.hurricane.analysis.Analysis": [[420, 1, 1, "", "__init__"], [421, 1, 1, "", "read_pointstats"], [422, 1, 1, "", "read_station_data"], [423, 1, 1, "", "read_station_file"], [424, 1, 1, "", "run"], [425, 1, 1, "", "setup"]], "compass.ocean.tests.hurricane.forward": [[427, 0, 1, "", "Forward"]], "compass.ocean.tests.hurricane.forward.Forward": [[427, 1, 1, "", "__init__"], [428, 1, 1, "", "configure"], [429, 1, 1, "", "run"]], "compass.ocean.tests.hurricane.forward.forward": [[430, 0, 1, "", "ForwardStep"]], "compass.ocean.tests.hurricane.forward.forward.ForwardStep": [[430, 1, 1, "", "__init__"], [431, 1, 1, "", "run"], [432, 1, 1, "", "setup"]], "compass.ocean.tests.hurricane.init": [[433, 0, 1, "", "Init"]], "compass.ocean.tests.hurricane.init.Init": [[433, 1, 1, "", "__init__"], [434, 1, 1, "", "configure"], [435, 1, 1, "", "run"]], "compass.ocean.tests.hurricane.init.create_pointstats_file": [[436, 0, 1, "", "CreatePointstatsFile"]], "compass.ocean.tests.hurricane.init.create_pointstats_file.CreatePointstatsFile": [[436, 1, 1, "", "__init__"], [437, 1, 1, "", "create_pointstats_file"], [438, 1, 1, "", "run"]], "compass.ocean.tests.hurricane.init.initial_state": [[439, 0, 1, "", "InitialState"]], "compass.ocean.tests.hurricane.init.initial_state.InitialState": [[439, 1, 1, "", "__init__"], [440, 1, 1, "", "run"], [441, 1, 1, "", "setup"]], "compass.ocean.tests.hurricane.init.interpolate_atm_forcing": [[442, 0, 1, "", "InterpolateAtmForcing"]], "compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing": [[442, 1, 1, "", "__init__"], [443, 1, 1, "", "interpolate_data_to_grid"], [444, 1, 1, "", "plot_interp_data"], [445, 1, 1, "", "run"], [446, 1, 1, "", "write_to_file"]], "compass.ocean.tests.hurricane.mesh": [[447, 0, 1, "", "Mesh"]], "compass.ocean.tests.hurricane.mesh.Mesh": [[447, 1, 1, "", "__init__"], [448, 1, 1, "", "configure"], [449, 1, 1, "", "run"]], "compass.ocean.tests.hurricane.mesh.dequ120at30cr10rr2": [[450, 0, 1, "", "DEQU120at30cr10rr2BaseMesh"]], "compass.ocean.tests.hurricane.mesh.dequ120at30cr10rr2.DEQU120at30cr10rr2BaseMesh": [[450, 1, 1, "", "__init__"], [451, 1, 1, "", "build_cell_width_lat_lon"]], "compass.ocean.tests.ice_shelf_2d": [[452, 0, 1, "", "IceShelf2d"], [453, 2, 1, "", "configure"]], "compass.ocean.tests.ice_shelf_2d.IceShelf2d": [[452, 1, 1, "", "__init__"]], "compass.ocean.tests.ice_shelf_2d.default": [[454, 0, 1, "", "Default"]], "compass.ocean.tests.ice_shelf_2d.default.Default": [[454, 1, 1, "", "__init__"], [455, 1, 1, "", "configure"], [456, 1, 1, "", "run"]], "compass.ocean.tests.ice_shelf_2d.forward": [[457, 0, 1, "", "Forward"]], "compass.ocean.tests.ice_shelf_2d.forward.Forward": [[457, 1, 1, "", "__init__"], [458, 1, 1, "", "run"], [459, 1, 1, "", "setup"]], "compass.ocean.tests.ice_shelf_2d.initial_state": [[460, 0, 1, "", "InitialState"]], "compass.ocean.tests.ice_shelf_2d.initial_state.InitialState": [[460, 1, 1, "", "__init__"], [461, 1, 1, "", "run"]], "compass.ocean.tests.ice_shelf_2d.restart_test": [[462, 0, 1, "", "RestartTest"]], "compass.ocean.tests.ice_shelf_2d.restart_test.RestartTest": [[462, 1, 1, "", "__init__"], [463, 1, 1, "", "configure"], [464, 1, 1, "", "run"]], "compass.ocean.tests.ice_shelf_2d.ssh_adjustment": [[465, 0, 1, "", "SshAdjustment"]], "compass.ocean.tests.ice_shelf_2d.ssh_adjustment.SshAdjustment": [[465, 1, 1, "", "__init__"], [466, 1, 1, "", "run"], [467, 1, 1, "", "setup"]], "compass.ocean.tests.ice_shelf_2d.viz": [[468, 0, 1, "", "Viz"]], "compass.ocean.tests.ice_shelf_2d.viz.Viz": [[468, 1, 1, "", "__init__"], [469, 1, 1, "", "run"]], "compass.ocean.tests.internal_wave": [[470, 0, 1, "", "InternalWave"]], "compass.ocean.tests.internal_wave.InternalWave": [[470, 1, 1, "", "__init__"]], "compass.ocean.tests.internal_wave.default": [[471, 0, 1, "", "Default"]], "compass.ocean.tests.internal_wave.default.Default": [[471, 1, 1, "", "__init__"], [472, 1, 1, "", "validate"]], "compass.ocean.tests.internal_wave.forward": [[473, 0, 1, "", "Forward"]], "compass.ocean.tests.internal_wave.forward.Forward": [[473, 1, 1, "", "__init__"], [474, 1, 1, "", "run"]], "compass.ocean.tests.internal_wave.initial_state": [[475, 0, 1, "", "InitialState"]], "compass.ocean.tests.internal_wave.initial_state.InitialState": [[475, 1, 1, "", "__init__"], [476, 1, 1, "", "run"]], "compass.ocean.tests.internal_wave.rpe_test": [[477, 0, 1, "", "RpeTest"]], "compass.ocean.tests.internal_wave.rpe_test.RpeTest": [[477, 1, 1, "", "__init__"]], "compass.ocean.tests.internal_wave.rpe_test.analysis": [[478, 0, 1, "", "Analysis"]], "compass.ocean.tests.internal_wave.rpe_test.analysis.Analysis": [[478, 1, 1, "", "__init__"], [479, 1, 1, "", "run"]], "compass.ocean.tests.internal_wave.ten_day_test": [[480, 0, 1, "", "TenDayTest"]], "compass.ocean.tests.internal_wave.ten_day_test.TenDayTest": [[480, 1, 1, "", "__init__"], [481, 1, 1, "", "validate"]], "compass.ocean.tests.internal_wave.viz": [[482, 0, 1, "", "Viz"]], "compass.ocean.tests.internal_wave.viz.Viz": [[482, 1, 1, "", "__init__"], [483, 1, 1, "", "run"]], "compass.ocean.tests.isomip_plus": [[484, 0, 1, "", "IsomipPlus"]], "compass.ocean.tests.isomip_plus.IsomipPlus": [[484, 1, 1, "", "__init__"]], "compass.ocean.tests.isomip_plus.evap": [[485, 2, 1, "", "update_evaporation_flux"]], "compass.ocean.tests.isomip_plus.forward": [[486, 0, 1, "", "Forward"]], "compass.ocean.tests.isomip_plus.forward.Forward": [[486, 1, 1, "", "__init__"], [487, 1, 1, "", "run"], [488, 1, 1, "", "setup"]], "compass.ocean.tests.isomip_plus.geom": [[489, 2, 1, "", "interpolate_ocean_mask"], [490, 2, 1, "", "process_input_geometry"]], "compass.ocean.tests.isomip_plus.initial_state": [[491, 0, 1, "", "InitialState"]], "compass.ocean.tests.isomip_plus.initial_state.InitialState": [[491, 1, 1, "", "__init__"], [492, 1, 1, "", "run"]], "compass.ocean.tests.isomip_plus.isomip_plus_test": [[493, 0, 1, "", "IsomipPlusTest"]], "compass.ocean.tests.isomip_plus.isomip_plus_test.IsomipPlusTest": [[493, 1, 1, "", "__init__"], [494, 1, 1, "", "configure"], [495, 1, 1, "", "run"]], "compass.ocean.tests.isomip_plus.misomip": [[496, 0, 1, "", "Misomip"]], "compass.ocean.tests.isomip_plus.misomip.Misomip": [[496, 1, 1, "", "__init__"], [497, 1, 1, "", "run"]], "compass.ocean.tests.isomip_plus.ssh_adjustment": [[498, 0, 1, "", "SshAdjustment"]], "compass.ocean.tests.isomip_plus.ssh_adjustment.SshAdjustment": [[498, 1, 1, "", "__init__"], [499, 1, 1, "", "run"], [500, 1, 1, "", "setup"]], "compass.ocean.tests.isomip_plus.streamfunction": [[501, 0, 1, "", "Streamfunction"]], "compass.ocean.tests.isomip_plus.streamfunction.Streamfunction": [[501, 1, 1, "", "__init__"], [502, 1, 1, "", "run"]], "compass.ocean.tests.isomip_plus.viz": [[503, 0, 1, "", "Viz"], [505, 2, 1, "", "file_complete"]], "compass.ocean.tests.isomip_plus.viz.Viz": [[503, 1, 1, "", "__init__"], [504, 1, 1, "", "run"]], "compass.ocean.tests.isomip_plus.viz.plot": [[506, 0, 1, "", "MoviePlotter"], [518, 0, 1, "", "TimeSeriesPlotter"]], "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter": [[506, 1, 1, "", "__init__"], [507, 1, 1, "", "images_to_movies"], [508, 1, 1, "", "plot_3d_field_top_bot_section"], [509, 1, 1, "", "plot_barotropic_streamfunction"], [510, 1, 1, "", "plot_horiz_series"], [511, 1, 1, "", "plot_ice_shelf_boundary_variables"], [512, 1, 1, "", "plot_layer_interfaces"], [513, 1, 1, "", "plot_melt_rates"], [514, 1, 1, "", "plot_overturning_streamfunction"], [515, 1, 1, "", "plot_potential_density"], [516, 1, 1, "", "plot_salinity"], [517, 1, 1, "", "plot_temperature"]], "compass.ocean.tests.isomip_plus.viz.plot.TimeSeriesPlotter": [[518, 1, 1, "", "__init__"], [519, 1, 1, "", "plot_melt_time_series"], [520, 1, 1, "", "plot_time_series"]], "compass.ocean.tests.merry_go_round": [[521, 0, 1, "", "MerryGoRound"]], "compass.ocean.tests.merry_go_round.MerryGoRound": [[521, 1, 1, "", "__init__"]], "compass.ocean.tests.merry_go_round.convergence_test.analysis": [[522, 0, 1, "", "Analysis"]], "compass.ocean.tests.merry_go_round.convergence_test.analysis.Analysis": [[522, 1, 1, "", "__init__"], [523, 1, 1, "", "run"]], "compass.ocean.tests.merry_go_round.default": [[524, 0, 1, "", "Default"]], "compass.ocean.tests.merry_go_round.default.Default": [[524, 1, 1, "", "__init__"], [525, 1, 1, "", "validate"]], "compass.ocean.tests.merry_go_round.forward": [[526, 0, 1, "", "Forward"]], "compass.ocean.tests.merry_go_round.forward.Forward": [[526, 1, 1, "", "__init__"], [527, 1, 1, "", "run"]], "compass.ocean.tests.merry_go_round.initial_state": [[528, 0, 1, "", "InitialState"]], "compass.ocean.tests.merry_go_round.initial_state.InitialState": [[528, 1, 1, "", "__init__"], [529, 1, 1, "", "run"]], "compass.ocean.tests.merry_go_round.viz": [[530, 0, 1, "", "Viz"]], "compass.ocean.tests.merry_go_round.viz.Viz": [[530, 1, 1, "", "__init__"], [531, 1, 1, "", "run"]], "compass.ocean.tests.planar_convergence": [[532, 0, 1, "", "PlanarConvergence"]], "compass.ocean.tests.planar_convergence.PlanarConvergence": [[532, 1, 1, "", "__init__"]], "compass.ocean.tests.planar_convergence.conv_init": [[533, 0, 1, "", "ConvInit"]], "compass.ocean.tests.planar_convergence.conv_init.ConvInit": [[533, 1, 1, "", "__init__"], [534, 1, 1, "", "run"]], "compass.ocean.tests.planar_convergence.conv_test_case": [[535, 0, 1, "", "ConvTestCase"]], "compass.ocean.tests.planar_convergence.conv_test_case.ConvTestCase": [[535, 1, 1, "", "__init__"], [536, 1, 1, "", "configure"], [537, 1, 1, "", "run"], [538, 1, 1, "", "update_cores"]], "compass.ocean.tests.planar_convergence.forward": [[539, 0, 1, "", "Forward"]], "compass.ocean.tests.planar_convergence.forward.Forward": [[539, 1, 1, "", "__init__"], [540, 1, 1, "", "get_dt_duration"], [541, 1, 1, "", "run"], [542, 1, 1, "", "setup"]], "compass.ocean.tests.planar_convergence.horizontal_advection": [[543, 0, 1, "", "HorizontalAdvection"]], "compass.ocean.tests.planar_convergence.horizontal_advection.HorizontalAdvection": [[543, 1, 1, "", "__init__"], [544, 1, 1, "", "configure"], [545, 1, 1, "", "run"]], "compass.ocean.tests.planar_convergence.horizontal_advection.analysis": [[546, 0, 1, "", "Analysis"]], "compass.ocean.tests.planar_convergence.horizontal_advection.analysis.Analysis": [[546, 1, 1, "", "__init__"], [547, 1, 1, "", "rmse"], [548, 1, 1, "", "run"]], "compass.ocean.tests.planar_convergence.horizontal_advection.init": [[549, 0, 1, "", "Init"]], "compass.ocean.tests.planar_convergence.horizontal_advection.init.Init": [[549, 1, 1, "", "__init__"], [550, 1, 1, "", "run"]], "compass.ocean.tests.soma": [[551, 0, 1, "", "Soma"]], "compass.ocean.tests.soma.Soma": [[551, 1, 1, "", "__init__"]], "compass.ocean.tests.soma.analysis": [[552, 0, 1, "", "Analysis"]], "compass.ocean.tests.soma.analysis.Analysis": [[552, 1, 1, "", "__init__"], [553, 1, 1, "", "run"]], "compass.ocean.tests.soma.forward": [[554, 0, 1, "", "Forward"]], "compass.ocean.tests.soma.forward.Forward": [[554, 1, 1, "", "__init__"], [555, 1, 1, "", "run"]], "compass.ocean.tests.soma.initial_state": [[556, 0, 1, "", "InitialState"]], "compass.ocean.tests.soma.initial_state.InitialState": [[556, 1, 1, "", "__init__"], [557, 1, 1, "", "run"]], "compass.ocean.tests.soma.soma_test_case": [[558, 0, 1, "", "SomaTestCase"]], "compass.ocean.tests.soma.soma_test_case.SomaTestCase": [[558, 1, 1, "", "__init__"], [559, 1, 1, "", "validate"]], "compass.ocean.tests.sphere_transport": [[560, 0, 1, "", "SphereTransport"]], "compass.ocean.tests.sphere_transport.SphereTransport": [[560, 1, 1, "", "__init__"]], "compass.ocean.tests.sphere_transport.correlated_tracers_2d": [[561, 0, 1, "", "CorrelatedTracers2D"]], "compass.ocean.tests.sphere_transport.correlated_tracers_2d.CorrelatedTracers2D": [[561, 1, 1, "", "__init__"], [562, 1, 1, "", "configure"], [563, 1, 1, "", "run"]], "compass.ocean.tests.sphere_transport.correlated_tracers_2d.analysis": [[564, 0, 1, "", "Analysis"]], "compass.ocean.tests.sphere_transport.correlated_tracers_2d.analysis.Analysis": [[564, 1, 1, "", "__init__"], [565, 1, 1, "", "run"]], "compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward": [[566, 0, 1, "", "Forward"]], "compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.Forward": [[566, 1, 1, "", "__init__"], [567, 1, 1, "", "get_timestep_str"], [568, 1, 1, "", "run"], [569, 1, 1, "", "setup"]], "compass.ocean.tests.sphere_transport.correlated_tracers_2d.init": [[570, 0, 1, "", "Init"]], "compass.ocean.tests.sphere_transport.correlated_tracers_2d.init.Init": [[570, 1, 1, "", "__init__"], [571, 1, 1, "", "run"]], "compass.ocean.tests.sphere_transport.correlated_tracers_2d.mesh": [[572, 0, 1, "", "Mesh"]], "compass.ocean.tests.sphere_transport.correlated_tracers_2d.mesh.Mesh": [[572, 1, 1, "", "__init__"], [573, 1, 1, "", "build_cell_width_lat_lon"], [574, 1, 1, "", "run"]], "compass.ocean.tests.sphere_transport.divergent_2d": [[575, 0, 1, "", "Divergent2D"]], "compass.ocean.tests.sphere_transport.divergent_2d.Divergent2D": [[575, 1, 1, "", "__init__"], [576, 1, 1, "", "configure"], [577, 1, 1, "", "run"]], "compass.ocean.tests.sphere_transport.divergent_2d.analysis": [[578, 0, 1, "", "Analysis"]], "compass.ocean.tests.sphere_transport.divergent_2d.analysis.Analysis": [[578, 1, 1, "", "__init__"], [579, 1, 1, "", "run"]], "compass.ocean.tests.sphere_transport.divergent_2d.forward": [[580, 0, 1, "", "Forward"]], "compass.ocean.tests.sphere_transport.divergent_2d.forward.Forward": [[580, 1, 1, "", "__init__"], [581, 1, 1, "", "get_timestep_str"], [582, 1, 1, "", "run"], [583, 1, 1, "", "setup"]], "compass.ocean.tests.sphere_transport.divergent_2d.init": [[584, 0, 1, "", "Init"]], "compass.ocean.tests.sphere_transport.divergent_2d.init.Init": [[584, 1, 1, "", "__init__"], [585, 1, 1, "", "run"]], "compass.ocean.tests.sphere_transport.divergent_2d.mesh": [[586, 0, 1, "", "Mesh"]], "compass.ocean.tests.sphere_transport.divergent_2d.mesh.Mesh": [[586, 1, 1, "", "__init__"], [587, 1, 1, "", "build_cell_width_lat_lon"], [588, 1, 1, "", "run"]], "compass.ocean.tests.sphere_transport.nondivergent_2d": [[589, 0, 1, "", "Nondivergent2D"]], "compass.ocean.tests.sphere_transport.nondivergent_2d.Nondivergent2D": [[589, 1, 1, "", "__init__"], [590, 1, 1, "", "configure"], [591, 1, 1, "", "run"]], "compass.ocean.tests.sphere_transport.nondivergent_2d.analysis": [[592, 0, 1, "", "Analysis"]], "compass.ocean.tests.sphere_transport.nondivergent_2d.analysis.Analysis": [[592, 1, 1, "", "__init__"], [593, 1, 1, "", "run"]], "compass.ocean.tests.sphere_transport.nondivergent_2d.forward": [[594, 0, 1, "", "Forward"]], "compass.ocean.tests.sphere_transport.nondivergent_2d.forward.Forward": [[594, 1, 1, "", "__init__"], [595, 1, 1, "", "get_timestep_str"], [596, 1, 1, "", "run"], [597, 1, 1, "", "setup"]], "compass.ocean.tests.sphere_transport.nondivergent_2d.init": [[598, 0, 1, "", "Init"]], "compass.ocean.tests.sphere_transport.nondivergent_2d.init.Init": [[598, 1, 1, "", "__init__"], [599, 1, 1, "", "run"]], "compass.ocean.tests.sphere_transport.nondivergent_2d.mesh": [[600, 0, 1, "", "Mesh"]], "compass.ocean.tests.sphere_transport.nondivergent_2d.mesh.Mesh": [[600, 1, 1, "", "__init__"], [601, 1, 1, "", "build_cell_width_lat_lon"], [602, 1, 1, "", "run"]], "compass.ocean.tests.sphere_transport.process_output": [[603, 2, 1, "", "compute_convergence_rates"], [604, 2, 1, "", "compute_error_from_output_ncfile"], [605, 2, 1, "", "make_convergence_arrays"], [606, 2, 1, "", "plot_convergence"], [607, 2, 1, "", "plot_filament"], [608, 2, 1, "", "plot_over_and_undershoot_errors"], [609, 2, 1, "", "plot_sol"], [610, 2, 1, "", "print_data_as_csv"], [611, 2, 1, "", "print_error_conv_table"], [612, 2, 1, "", "read_ncl_rgb_file"]], "compass.ocean.tests.sphere_transport.rotation_2d": [[613, 0, 1, "", "Rotation2D"]], "compass.ocean.tests.sphere_transport.rotation_2d.Rotation2D": [[613, 1, 1, "", "__init__"], [614, 1, 1, "", "configure"], [615, 1, 1, "", "run"]], "compass.ocean.tests.sphere_transport.rotation_2d.analysis": [[616, 0, 1, "", "Analysis"]], "compass.ocean.tests.sphere_transport.rotation_2d.analysis.Analysis": [[616, 1, 1, "", "__init__"], [617, 1, 1, "", "run"]], "compass.ocean.tests.sphere_transport.rotation_2d.forward": [[618, 0, 1, "", "Forward"]], "compass.ocean.tests.sphere_transport.rotation_2d.forward.Forward": [[618, 1, 1, "", "__init__"], [619, 1, 1, "", "get_timestep_str"], [620, 1, 1, "", "run"], [621, 1, 1, "", "setup"]], "compass.ocean.tests.sphere_transport.rotation_2d.init": [[622, 0, 1, "", "Init"]], "compass.ocean.tests.sphere_transport.rotation_2d.init.Init": [[622, 1, 1, "", "__init__"], [623, 1, 1, "", "run"]], "compass.ocean.tests.sphere_transport.rotation_2d.mesh": [[624, 0, 1, "", "Mesh"]], "compass.ocean.tests.sphere_transport.rotation_2d.mesh.Mesh": [[624, 1, 1, "", "__init__"], [625, 1, 1, "", "build_cell_width_lat_lon"], [626, 1, 1, "", "run"]], "compass.ocean.tests.tides": [[627, 0, 1, "", "Tides"], [638, 3, 0, "-", "configure"]], "compass.ocean.tests.tides.Tides": [[627, 1, 1, "", "__init__"]], "compass.ocean.tests.tides.analysis": [[628, 0, 1, "", "Analysis"]], "compass.ocean.tests.tides.analysis.Analysis": [[628, 1, 1, "", "__init__"], [629, 1, 1, "", "append_tpxo_data"], [630, 1, 1, "", "check_tpxo_data"], [631, 1, 1, "", "plot"], [632, 1, 1, "", "read_otps2_output"], [633, 1, 1, "", "run"], [634, 1, 1, "", "run_otps2"], [635, 1, 1, "", "setup"], [636, 1, 1, "", "setup_otps2"], [637, 1, 1, "", "write_coordinate_file"]], "compass.ocean.tests.tides.forward": [[639, 0, 1, "", "Forward"]], "compass.ocean.tests.tides.forward.Forward": [[639, 1, 1, "", "__init__"], [640, 1, 1, "", "configure"], [641, 1, 1, "", "run"]], "compass.ocean.tests.tides.forward.forward": [[642, 0, 1, "", "ForwardStep"]], "compass.ocean.tests.tides.forward.forward.ForwardStep": [[642, 1, 1, "", "__init__"], [643, 1, 1, "", "run"], [644, 1, 1, "", "setup"]], "compass.ocean.tests.tides.init": [[645, 0, 1, "", "Init"]], "compass.ocean.tests.tides.init.Init": [[645, 1, 1, "", "__init__"], [646, 1, 1, "", "configure"], [647, 1, 1, "", "run"]], "compass.ocean.tests.tides.init.initial_state": [[648, 0, 1, "", "InitialState"]], "compass.ocean.tests.tides.init.initial_state.InitialState": [[648, 1, 1, "", "__init__"], [649, 1, 1, "", "run"], [650, 1, 1, "", "setup"]], "compass.ocean.tests.tides.init.interpolate_wave_drag": [[651, 0, 1, "", "InterpolateWaveDrag"]], "compass.ocean.tests.tides.init.interpolate_wave_drag.InterpolateWaveDrag": [[651, 1, 1, "", "__init__"], [652, 1, 1, "", "interpolate_data_to_grid"], [653, 1, 1, "", "plot_interp_data"], [654, 1, 1, "", "run"], [655, 1, 1, "", "write_to_file"]], "compass.ocean.tests.tides.init.remap_bathymetry": [[656, 0, 1, "", "RemapBathymetry"]], "compass.ocean.tests.tides.init.remap_bathymetry.RemapBathymetry": [[656, 1, 1, "", "__init__"], [657, 1, 1, "", "run"]], "compass.ocean.tests.tides.mesh": [[658, 0, 1, "", "Mesh"]], "compass.ocean.tests.tides.mesh.Mesh": [[658, 1, 1, "", "__init__"], [659, 1, 1, "", "configure"], [660, 1, 1, "", "run"]], "compass.ocean.tests.ziso": [[661, 0, 1, "", "Ziso"], [662, 0, 1, "", "ZisoTestCase"], [665, 2, 1, "", "configure"]], "compass.ocean.tests.ziso.Ziso": [[661, 1, 1, "", "__init__"]], "compass.ocean.tests.ziso.ZisoTestCase": [[662, 1, 1, "", "__init__"], [663, 1, 1, "", "configure"], [664, 1, 1, "", "run"]], "compass.ocean.tests.ziso.forward": [[666, 0, 1, "", "Forward"]], "compass.ocean.tests.ziso.forward.Forward": [[666, 1, 1, "", "__init__"], [667, 1, 1, "", "run"], [668, 1, 1, "", "setup"]], "compass.ocean.tests.ziso.initial_state": [[669, 0, 1, "", "InitialState"]], "compass.ocean.tests.ziso.initial_state.InitialState": [[669, 1, 1, "", "__init__"], [670, 1, 1, "", "run"]], "compass.ocean.tests.ziso.with_frazil": [[671, 0, 1, "", "WithFrazil"]], "compass.ocean.tests.ziso.with_frazil.WithFrazil": [[671, 1, 1, "", "__init__"], [672, 1, 1, "", "configure"], [673, 1, 1, "", "run"]], "compass.ocean.vertical.grid_1d": [[674, 2, 1, "", "generate_1d_grid"], [675, 2, 1, "", "write_1d_grid"]], "compass.ocean.vertical": [[676, 2, 1, "", "init_vertical_coord"]], "compass.ocean.vertical.partial_cells": [[677, 2, 1, "", "alter_bottom_depth"], [678, 2, 1, "", "alter_ssh"]], "compass.ocean.vertical.zlevel": [[679, 2, 1, "", "compute_min_max_level_cell"], [680, 2, 1, "", "compute_z_level_layer_thickness"], [681, 2, 1, "", "compute_z_level_resting_thickness"], [682, 2, 1, "", "init_z_level_vertical_coord"]], "compass.ocean.vertical.zstar": [[683, 2, 1, "", "init_z_star_vertical_coord"]], "compass.parallel": [[63, 2, 1, "", "check_parallel_system"], [64, 2, 1, "", "get_available_cores_and_nodes"], [65, 2, 1, "", "run_command"], [66, 2, 1, "", "set_cores_per_node"]], "compass.provenance": [[67, 2, 1, "", "write"]], "compass.run.serial": [[68, 2, 1, "", "run_single_step"], [69, 2, 1, "", "run_tests"]], "compass.setup": [[70, 2, 1, "", "setup_case"], [71, 2, 1, "", "setup_cases"]], "compass.suite": [[72, 2, 1, "", "clean_suite"], [73, 2, 1, "", "setup_suite"]], "compass.validate": [[74, 2, 1, "", "compare_timers"], [75, 2, 1, "", "compare_variables"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:module"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "module", "Python module"]}, "titleterms": {"cach": [0, 4, 6, 8, 34, 703], "output": [0, 1, 703, 710], "from": [0, 703, 705, 734], "compass": [0, 1, 4, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 703, 704, 705, 708, 711, 759], "step": [0, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 263, 689, 703, 709, 710, 711, 744, 745, 747, 753, 755, 757], "summari": [0, 1, 3], "requir": [0, 1, 3], "select": 0, "whether": 0, "us": 0, "updat": [0, 8, 703, 705, 711], "uniqu": 0, "identifi": 0, "either": 0, "normal": 0, "version": [0, 708, 762], "design": [0, 1, 2, 3], "implement": [0, 1, 3], "test": [0, 1, 3, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 251, 263, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 689, 693, 703, 704, 709, 710, 711, 712, 715, 724, 740, 745, 747, 749, 757, 759, 760, 761], "python": 1, "packag": [1, 704], "make": [1, 8, 709, 710, 711], "case": [1, 263, 689, 703, 704, 709, 710, 711, 712, 745, 747, 757, 759, 760], "easi": 1, "understand": 1, "modifi": 1, "creat": [1, 705, 710, 747], "share": [1, 704, 745, 747, 748, 751, 753, 754, 757, 758], "code": [1, 704, 762], "configur": [1, 28, 125, 130, 185, 201, 204, 212, 280, 282, 285, 294, 297, 303, 307, 316, 325, 338, 340, 341, 343, 346, 351, 367, 370, 379, 384, 387, 392, 397, 402, 405, 408, 426, 428, 434, 448, 453, 455, 463, 494, 536, 544, 562, 576, 590, 614, 638, 640, 646, 659, 663, 665, 672, 689, 703, 706], "option": [1, 3, 8, 703, 705, 710, 711, 716, 717, 718, 719, 720, 721, 722, 723, 725, 726, 727, 729, 730, 731, 732, 733, 734, 735, 741, 742, 743, 744, 745, 746, 747, 748, 750, 751, 752, 753, 754, 755, 756, 757, 758], "abil": 1, "specifi": 1, "core": [1, 4, 242, 684, 703, 704, 714, 739, 744, 753, 755], "count": 1, "machin": [1, 261, 705, 734, 759], "specif": 1, "data": [1, 733, 735], "looser": 1, "more": 1, "flexibl": 1, "directori": [1, 703], "structur": [1, 703], "user": [1, 705, 708, 712, 759], "develop": [1, 705, 708, 709, 710, 711], "friendli": 1, "document": [1, 2, 5, 7, 709, 710, 711, 762], "consider": 1, "relat": 1, "run": [1, 4, 6, 8, 19, 29, 48, 53, 56, 68, 69, 83, 86, 88, 90, 92, 96, 98, 100, 103, 105, 107, 111, 113, 115, 118, 120, 122, 126, 128, 131, 133, 136, 139, 142, 144, 147, 149, 151, 154, 159, 161, 165, 168, 170, 172, 175, 177, 179, 181, 193, 199, 209, 216, 220, 222, 225, 227, 230, 233, 236, 238, 240, 270, 274, 283, 286, 288, 291, 295, 298, 300, 304, 309, 311, 313, 318, 320, 322, 326, 329, 332, 335, 339, 344, 347, 349, 352, 354, 356, 358, 360, 362, 364, 368, 371, 373, 376, 380, 385, 388, 393, 398, 403, 406, 409, 414, 416, 418, 424, 429, 431, 435, 438, 440, 445, 449, 456, 458, 461, 464, 466, 469, 474, 476, 479, 483, 487, 492, 495, 497, 499, 502, 504, 523, 527, 529, 531, 534, 537, 541, 545, 548, 550, 553, 555, 557, 563, 565, 568, 571, 574, 577, 579, 582, 585, 588, 591, 593, 596, 599, 602, 615, 617, 620, 623, 626, 633, 641, 643, 647, 649, 654, 657, 660, 664, 667, 670, 673, 703, 705, 710, 711, 751, 759], "parallel": [1, 4, 63, 64, 65, 66], "resolut": [1, 710, 711, 744, 753, 755, 756], "can": 1, "paramet": [1, 709, 710, 711], "i": 1, "alter": 1, "rerun": 1, "support": [1, 261, 705, 734, 759], "pre": 1, "made": 1, "initi": [1, 710, 747, 757], "condit": [1, 710], "file": [1, 8, 264, 703, 710, 712, 747], "batch": 1, "submiss": 1, "algorithm": [1, 3], "constructor": [1, 703], "setup": [1, 4, 6, 8, 22, 49, 54, 58, 70, 71, 101, 116, 137, 152, 173, 194, 200, 210, 217, 231, 241, 271, 289, 292, 301, 333, 365, 374, 377, 425, 432, 441, 459, 467, 488, 500, 542, 569, 583, 597, 621, 635, 644, 650, 668, 703], "global": 1, "ocean": [1, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 739], "group": [1, 76, 251, 263, 693, 703, 704, 709, 710, 711, 724, 749], "framework": [1, 4, 8, 77, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 263, 264, 685, 686, 687, 689, 692, 694, 695, 696, 698, 702, 704, 713, 737], "within": [1, 704], "an": [1, 703, 704, 709, 710], "mpa": [1, 4, 8, 703, 704, 705, 759], "max_memori": 1, "max_disk": 1, "input": [1, 703], "templat": [3, 703], "name": 3, "topic": 3, "here": 3, "same": 3, "valid": [3, 4, 8, 30, 74, 75, 81, 157, 163, 412, 472, 481, 525, 559, 703, 711], "api": 4, "refer": 4, "command": [4, 6], "line": [4, 6], "interfac": [4, 6], "list": [4, 6, 8, 39, 40, 41], "clean": [4, 6, 8, 35], "suit": [4, 6, 8, 72, 73, 703, 715, 740, 759, 761], "base": [4, 710], "class": [4, 689, 704], "mpas_cor": [4, 62], "testgroup": [4, 31, 32], "testcas": [4, 26, 27, 28, 29, 30, 703], "config": [4, 8, 36, 710, 711, 712, 716, 717, 718, 719, 720, 721, 722, 723, 725, 726, 727, 729, 730, 731, 732, 733, 734, 735, 741, 742, 743, 744, 745, 746, 747, 748, 750, 751, 752, 753, 754, 755, 756, 757, 758], "io": [4, 8, 37, 38], "log": [4, 8, 42], "mesh": [4, 8, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 145, 146, 147, 158, 159, 219, 220, 224, 225, 248, 249, 253, 254, 256, 264, 269, 270, 271, 272, 273, 274, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 447, 448, 449, 450, 451, 572, 573, 574, 586, 587, 588, 600, 601, 602, 624, 625, 626, 658, 659, 660, 688, 689, 691, 699, 700, 709, 710, 745, 747, 757], "model": [4, 8, 59, 60, 61, 703], "proven": [4, 8, 67], "build": [5, 705, 759], "docstr": 7, "modul": [8, 704, 705], "serial": [8, 68, 69], "comment": 8, "symlink": [8, 38, 703], "download": [8, 37, 703], "spheric": [8, 55, 56, 57, 58], "partit": [8, 60], "pio": 8, "namelist": [8, 264, 703, 710, 711], "graph": 8, "variabl": 8, "norm": 8, "timer": 8, "mpascor": [9, 10], "add_test_group": 10, "add_input_fil": 12, "add_model_as_input": 13, "add_namelist_fil": 14, "add_namelist_opt": 15, "add_output_fil": 16, "add_streams_fil": 17, "constrain_resourc": [18, 703], "runtime_setup": [20, 703], "set_resourc": 21, "update_namelist_at_runtim": 23, "update_namelist_pio": 24, "update_streams_at_runtim": 25, "add_step": 27, "add_test_cas": 32, "__main__": 33, "main": 33, "update_cach": 34, "clean_cas": 35, "compassconfigpars": 36, "list_cas": 39, "list_machin": 40, "list_suit": 41, "log_method_cal": 42, "icosahedralmeshstep": [43, 44, 45, 46, 47, 48, 49], "build_subdivisions_cell_width_lat_lon": 44, "get_cell_width": 45, "get_subdivis": 46, "make_jigsaw_mesh": [47, 52], "quasiuniformsphericalmeshstep": [50, 51, 52, 53, 54], "build_cell_width_lat_lon": [51, 382, 390, 395, 451, 573, 587, 601, 625], "sphericalbasestep": [55, 56, 57, 58], "save_and_plot_cell_width": 57, "make_graph_fil": 59, "run_model": [61, 82, 83, 87, 88, 99, 100, 101, 135, 136, 137, 150, 151, 152, 164, 165, 171, 172, 173, 229, 230, 231, 239, 240, 241, 247, 248, 249, 250, 255, 256], "get_mpas_cor": 62, "check_parallel_system": 63, "get_available_cores_and_nod": 64, "run_command": 65, "set_cores_per_nod": 66, "write": [67, 276], "run_single_step": 68, "run_test": 69, "setup_cas": [70, 71], "clean_suit": 72, "setup_suit": 73, "compare_tim": 74, "compare_vari": 75, "landic": [76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 714], "calving_dt_converg": [76, 79, 80, 81, 82, 83, 243, 715, 716], "circular_shelf": [76, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 244, 717], "dome": [76, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 245, 718], "enthalpy_benchmark": [76, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 247, 720], "eismint2": [76, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 246, 719], "greenland": [76, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 248, 721], "humboldt": [76, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 249, 722], "hydro_radi": [76, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 250, 723], "ismip6_forc": [76, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 252, 725], "kangerlussuaq": [76, 218, 219, 220, 221, 222, 253, 726], "koge_bugt_": [76, 223, 224, 225, 226, 227, 254, 727], "mismipplu": [76, 228, 229, 230, 231, 232, 233, 255, 728], "thwait": [76, 234, 235, 236, 237, 238, 239, 240, 241, 256, 729], "land": 77, "ic": [77, 264, 736, 745], "calvingdtconverg": 79, "dt_convergence_test": [80, 81, 716], "dtconvergencetest": [80, 81, 243], "runmodel": [82, 83, 87, 88, 99, 100, 101, 135, 136, 137, 150, 151, 152, 164, 165, 171, 172, 173, 229, 230, 231, 239, 240, 241, 243, 244, 245], "circularshelf": 84, "decomposition_test": [85, 86, 95, 96, 110, 111, 141, 142, 156, 157, 167, 168, 235, 236, 246, 248, 249, 250, 256, 717, 718, 719, 721, 722, 723, 729], "decompositiontest": [85, 86, 95, 96, 110, 111, 141, 142, 156, 157, 167, 168, 235, 236, 244, 245], "setup_mesh": [89, 90, 102, 103, 117, 118, 138, 139, 174, 175, 246, 247, 250], "setupmesh": [89, 90, 102, 103, 117, 118, 138, 139, 174, 175, 244, 245], "visual": [91, 92, 93, 106, 107, 108, 121, 122, 123, 127, 128, 132, 133, 180, 181, 182, 244, 245, 246, 250], "visualize_circular_shelf": 93, "restart_test": [97, 98, 112, 113, 148, 149, 162, 163, 169, 170, 237, 238, 246, 248, 249, 250, 256, 293, 294, 295, 404, 405, 406, 462, 463, 464, 685, 689, 692, 718, 719, 721, 722, 723, 729, 741, 745, 748], "restarttest": [97, 98, 112, 113, 148, 149, 162, 163, 169, 170, 237, 238, 245, 293, 294, 295, 404, 405, 406, 462, 463, 464], "smoke_test": [104, 105, 153, 154, 232, 233, 248, 255, 718, 721, 728], "smoketest": [104, 105, 153, 154, 232, 233, 245], "visualize_dom": 108, "run_experi": [114, 115, 116, 246], "runexperi": [114, 115, 116], "standard_experi": [119, 120, 121, 122, 123, 246, 719], "standardexperi": [119, 120], "visualize_eismint2": 123, "A": [124, 125, 126, 127, 128, 247, 712, 720], "b": [129, 130, 131, 132, 133, 247, 720], "enthalpybenchmark": 134, "high_res_mesh": [143, 144, 248, 256, 721, 729], "highresmesh": [143, 144], "build_cell_width": 146, "mesh_gen": [160, 161, 221, 222, 226, 227, 249, 253, 254, 722, 726, 727], "meshgen": [160, 161, 221, 222, 226, 227], "hydroradi": 166, "spinup_test": [176, 177, 250, 723], "spinuptest": [176, 177], "steady_state_drift_test": [178, 179, 250, 723], "steadystatedrifttest": [178, 179], "visualize_hydro_radi": 182, "ismip6forc": 183, "atmospher": [184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 252, 725, 747], "create_mapfile_smb": [186, 187, 188], "build_mapping_fil": [187, 202], "create_atm_scrip": 188, "process_smb": [189, 190, 191, 192, 193, 194], "processsmb": [189, 190, 191, 192, 193, 194], "correct_smb_anomaly_for_climatologi": 190, "remap_ismip6_smb_to_mali": 191, "rename_ismip6_smb_to_mali_var": 192, "process_smb_racmo": [195, 196, 197, 198, 199, 200], "processsmbracmo": [195, 196, 197, 198, 199, 200], "correct_smb_anomaly_for_base_smb": 196, "remap_source_smb_to_mali": 197, "rename_source_smb_to_mali_var": 198, "create_mapfil": 202, "ocean_bas": [203, 204, 205, 206, 207, 208, 209, 210, 252, 725], "oceanbas": [203, 204], "process_basal_melt": [205, 206, 207, 208, 209, 210], "processbasalmelt": [205, 206, 207, 208, 209, 210], "combine_ismip6_inputfil": 206, "remap_ismip6_basal_melt_to_mali_var": 207, "rename_ismip6_basal_melt_to_mali_var": 208, "ocean_therm": [211, 212, 213, 214, 215, 216, 217, 252, 725], "oceantherm": [211, 212], "process_thermal_forc": [213, 214, 215, 216, 217], "processthermalforc": [213, 214, 215, 216, 217], "remap_ismip6_thermal_forcing_to_mali_var": 214, "rename_ismip6_thermal_forcing_to_mali_var": 215, "kogebugt": 223, "enthalpy_decomposition_test": [246, 719], "enthalpy_restart_test": [246, 719], "anvil": [257, 730], "intel": [257, 258, 259, 260, 730, 731, 732, 733], "gnu": [257, 258, 260, 262, 730, 731, 733, 735], "chrysali": [258, 731], "compymcnodefac": [259, 732], "cori": [260, 733], "haswel": [260, 733], "other": [261, 710, 711, 734, 759], "perlmutt": [262, 735], "pm": 262, "cpu": [262, 709, 735], "baroclinic_channel": [263, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 685, 741], "dam_break": [263, 305, 306, 307, 308, 309, 310, 311, 312, 313, 686, 742], "drying_slop": [263, 314, 315, 316, 317, 318, 319, 320, 321, 322, 687, 743], "global_converg": [263, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 688, 744], "cosine_bel": [263, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 688, 709, 744], "global_ocean": [263, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 689, 745], "gotm": [263, 410, 411, 412, 413, 414, 415, 416, 417, 418, 690, 746], "default": [263, 284, 285, 286, 306, 307, 315, 316, 411, 412, 413, 414, 415, 416, 417, 418, 454, 455, 456, 471, 472, 524, 525, 685, 686, 687, 690, 692, 694, 696, 710, 741, 742, 743, 746, 748, 750, 752, 754, 758], "hurrican": [263, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 691, 747], "ice_shelf_2d": [263, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 692, 748], "internal_wav": [263, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 694, 750], "isomip_plu": [263, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 695, 751], "merry_go_round": [263, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 696, 752], "planar_converg": [263, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 697, 753], "horizontal_advect": [263, 543, 544, 545, 546, 547, 548, 549, 550, 697, 753], "soma": [263, 551, 552, 553, 554, 555, 556, 557, 558, 559, 698, 754], "sphere_transport": [263, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 699, 755], "correlated_tracers_2d": [263, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 699, 755], "divergent_2d": [263, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 699, 755], "nondivergent_2d": [263, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 699, 755], "rotation_2d": [263, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 699, 755], "tide": [263, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 701, 757], "ziso": [263, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 702, 758], "replac": 264, "stream": [264, 703, 710, 711], "vertic": [264, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 710, 738], "coordin": [264, 710, 738], "cull": [264, 269, 270, 271, 272], "includ": 264, "floodplain": [264, 273, 274], "hanei": [264, 266], "number": [264, 709], "shelf": [264, 736, 745], "caviti": [264, 736, 745], "particl": [264, 275, 276, 754, 758], "plot": [264, 277, 278, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 631], "compute_haney_numb": 266, "iceshelf": [267, 268], "adjust_ssh": 267, "compute_land_ice_pressure_and_draft": 268, "cullmeshstep": [269, 270, 271], "cull_mesh": 272, "floodplainmeshstep": [273, 274], "remap_particl": 275, "plot_initial_st": 277, "plot_vertical_grid": 278, "baroclinicchannel": 279, "decomp_test": [281, 282, 283, 345, 346, 347, 685, 689, 741, 745], "decomptest": [281, 282, 283, 345, 346, 347], "forward": [287, 288, 289, 308, 309, 317, 318, 330, 331, 332, 333, 363, 364, 365, 366, 367, 368, 415, 416, 427, 428, 429, 430, 431, 432, 457, 458, 459, 473, 474, 486, 487, 488, 526, 527, 539, 540, 541, 542, 554, 555, 566, 567, 568, 569, 580, 581, 582, 583, 594, 595, 596, 597, 618, 619, 620, 621, 639, 640, 641, 642, 643, 644, 666, 667, 668, 685, 686, 687, 688, 689, 690, 691, 692, 694, 695, 696, 697, 698, 699, 701, 702, 709, 710, 711, 745, 747, 757], "initial_st": [290, 291, 292, 310, 311, 319, 320, 372, 373, 374, 439, 440, 441, 460, 461, 475, 476, 491, 492, 528, 529, 556, 557, 648, 649, 650, 669, 670, 685, 686, 687, 691, 692, 694, 695, 696, 698, 701, 702, 710], "initialst": [290, 291, 292, 310, 311, 319, 320, 372, 373, 374, 439, 440, 441, 460, 461, 475, 476, 491, 492, 528, 529, 556, 557, 648, 649, 650, 669, 670], "rpe_test": [296, 297, 298, 299, 300, 301, 477, 478, 479, 685, 694, 710, 741, 750], "rpetest": [296, 297, 298, 477], "analysi": [299, 300, 301, 327, 328, 329, 413, 414, 420, 421, 422, 423, 424, 425, 478, 479, 522, 523, 546, 547, 548, 552, 553, 564, 565, 578, 579, 592, 593, 616, 617, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 688, 690, 691, 697, 698, 699, 700, 701, 709, 710, 711, 747, 757], "threads_test": [302, 303, 304, 407, 408, 409, 685, 689, 745], "threadstest": [302, 303, 304, 407, 408, 409], "dambreak": 305, "viz": [312, 313, 321, 322, 468, 469, 482, 483, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 530, 531, 686, 687, 692, 695], "dryingslop": 314, "globalconverg": 323, "cosinebel": [324, 325, 326], "rmse": [328, 547], "get_dt": 331, "init": [334, 335, 369, 370, 371, 372, 373, 374, 375, 376, 377, 417, 418, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 549, 550, 570, 571, 584, 585, 598, 599, 622, 623, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 688, 689, 690, 697, 699, 700, 709, 711, 745, 747, 757], "globalocean": 336, "analysis_test": [337, 338, 339, 689, 745], "analysistest": [337, 338, 339], "configure_global_ocean": 341, "daily_output_test": [342, 343, 344, 689, 745], "dailyoutputtest": [342, 343, 344], "dynamic_adjust": [348, 349, 383, 384, 385, 386, 387, 388, 391, 392, 393, 396, 397, 398, 689, 745], "dynamicadjust": [348, 349], "files_for_e3sm": [350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 689, 745], "filesfore3sm": [350, 351, 352], "diagnostics_fil": [353, 354], "diagnosticsfil": [353, 354], "ocean_graph_partit": [355, 356], "oceangraphpartit": [355, 356], "ocean_initial_condit": [357, 358], "oceaninitialcondit": [357, 358], "scrip": [359, 360], "seaice_initial_condit": [361, 362], "seaiceinitialcondit": [361, 362], "forwardstep": [363, 364, 365, 430, 431, 432, 642, 643, 644], "forwardtestcas": [366, 367, 368], "ssh_adjust": [375, 376, 377, 465, 466, 467, 498, 499, 500, 692, 695], "sshadjust": [375, 376, 377, 465, 466, 467, 498, 499, 500], "ec30to60": [381, 382, 383, 384, 385, 689, 740, 745], "ec30to60basemesh": [381, 382], "ec30to60dynamicadjust": [383, 384, 385], "qu240": [386, 387, 388, 689, 745], "qu240dynamicadjust": [386, 387, 388], "so12to60": [389, 390, 391, 392, 393], "so12to60basemesh": [389, 390], "so12to60dynamicadjust": [391, 392, 393], "wc14": [394, 395, 396, 397, 398, 689, 745], "wc14basemesh": [394, 395], "wc14dynamicadjust": [396, 397, 398], "metadata": [399, 400, 689, 745], "add_mesh_and_init_metadata": 399, "get_e3sm_mesh_nam": 400, "performance_test": [401, 402, 403, 689, 745], "performancetest": [401, 402, 403], "read_pointstat": 421, "read_station_data": 422, "read_station_fil": 423, "create_pointstats_fil": [436, 437, 438, 691], "createpointstatsfil": [436, 437, 438], "interpolate_atm_forc": [442, 443, 444, 445, 446, 691], "interpolateatmforc": [442, 443, 444, 445, 446], "interpolate_data_to_grid": [443, 652], "plot_interp_data": [444, 653], "write_to_fil": [446, 655], "dequ120at30cr10rr2": [450, 451], "dequ120at30cr10rr2basemesh": [450, 451], "iceshelf2d": 452, "internalwav": 470, "ten_day_test": [480, 481, 694, 750], "tendaytest": [480, 481], "isomipplu": 484, "evap": [485, 695], "update_evaporation_flux": 485, "geom": [489, 490, 695], "interpolate_ocean_mask": 489, "process_input_geometri": 490, "isomip_plus_test": [493, 494, 495, 695], "isomipplustest": [493, 494, 495], "misomip": [496, 497, 695], "streamfunct": [501, 502, 695], "file_complet": 505, "movieplott": [506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517], "images_to_movi": 507, "plot_3d_field_top_bot_sect": 508, "plot_barotropic_streamfunct": 509, "plot_horiz_seri": 510, "plot_ice_shelf_boundary_vari": 511, "plot_layer_interfac": 512, "plot_melt_r": 513, "plot_overturning_streamfunct": 514, "plot_potential_dens": 515, "plot_salin": 516, "plot_temperatur": 517, "timeseriesplott": [518, 519, 520], "plot_melt_time_seri": 519, "plot_time_seri": 520, "merrygoround": 521, "convergence_test": [522, 523, 696, 752], "planarconverg": 532, "conv_init": [533, 534], "convinit": [533, 534], "conv_test_cas": [535, 536, 537, 538], "convtestcas": [535, 536, 537, 538], "update_cor": 538, "get_dt_dur": 540, "horizontaladvect": [543, 544, 545], "soma_test_cas": [558, 559, 698], "somatestcas": [558, 559], "spheretransport": 560, "correlatedtracers2d": [561, 562, 563], "get_timestep_str": [567, 581, 595, 619], "divergent2d": [575, 576, 577], "nondivergent2d": [589, 590, 591], "process_output": [603, 604, 605, 606, 607, 608, 609, 610, 611, 612], "compute_convergence_r": 603, "compute_error_from_output_ncfil": 604, "make_convergence_arrai": 605, "plot_converg": 606, "plot_fila": 607, "plot_over_and_undershoot_error": 608, "plot_sol": 609, "print_data_as_csv": 610, "print_error_conv_t": 611, "read_ncl_rgb_fil": 612, "rotation2d": [613, 614, 615], "append_tpxo_data": 629, "check_tpxo_data": 630, "read_otps2_output": 632, "run_otps2": 634, "setup_otps2": 636, "write_coordinate_fil": 637, "interpolate_wave_drag": [651, 652, 653, 654, 655, 701], "interpolatewavedrag": [651, 652, 653, 654, 655], "remap_bathymetri": [656, 657, 701], "remapbathymetri": [656, 657], "zisotestcas": [662, 663, 664], "with_frazil": [671, 672, 673, 702, 758], "withfrazil": [671, 672, 673], "grid_1d": [674, 675], "generate_1d_grid": 674, "write_1d_grid": 675, "init_vertical_coord": 676, "partial_cel": [677, 678], "alter_bottom_depth": 677, "alter_ssh": 678, "zlevel": [679, 680, 681, 682], "compute_min_max_level_cel": 679, "compute_z_level_layer_thick": 680, "compute_z_level_resting_thick": 681, "init_z_level_vertical_coord": 682, "zstar": 683, "init_z_star_vertical_coord": 683, "type": [688, 738], "quwisc240": [689, 740, 745], "icos240": 689, "icoswisc240": 689, "ecwisc30to60": [689, 740, 745], "sowisc12to60": [689, 745], "child": 689, "spherical_harmonic_transform": [700, 756], "qu_converg": [700, 756], "ziso_test_cas": 702, "organ": 703, "attribut": 703, "copi": 703, "ad": [703, 709, 710, 711], "runtim": 703, "overview": 704, "style": 704, "In": 704, "quick": [705, 759], "start": [705, 709, 710, 711, 759], "unix": 705, "shell": 705, "set": [705, 709, 710, 711, 759], "up": [705, 710, 711, 759], "repositori": 705, "beginn": 705, "conda": [705, 706, 734, 759], "environ": [705, 706, 759], "compil": 705, "system": 705, "albani": 705, "petsc": 705, "netlib": 705, "lapack": 705, "unknown": 705, "what": 705, "script": [705, 759], "doe": 705, "flag": 705, "activ": 705, "troubleshoot": [705, 706], "onli": 705, "compon": [705, 759], "repo": 705, "worktre": 705, "advanc": 705, "solver": 706, "error": 706, "when": 706, "proxi": 706, "lanl": 706, "mac": 706, "gethostbynam": 706, "fail": 706, "glossari": [707, 708], "": 708, "guid": 708, "tutori": [708, 709, 710, 711], "legaci": [708, 711], "studi": 709, "get": [709, 710, 711], "new": [709, 710, 711], "task": 709, "per": 709, "vari": [710, 711], "horizont": 710, "defin": [710, 711], "method": [710, 711], "port": 711, "The": 711, "sia_integr": 715, "fo_integr": 715, "full_integr": 715, "humboldt_calving_test": 715, "humboldt_calving_tests_fo": 715, "ocean_thermal_ob": 725, "jupyt": [733, 735], "notebook": [733, 735], "remot": [733, 735], "slurm": 734, "job": [734, 759], "queue": 734, "mpich": 734, "openmpi": 734, "No": 734, "mpi": 734, "forg": 734, "sea": 736, "surfac": 736, "height": 736, "adjust": 736, "1d": 738, "grid": 738, "uniform": 738, "tanh_dz": 738, "60layerphc": 738, "100layere3smv1": 738, "3d": 738, "z": 738, "star": 738, "level": 738, "nightli": 740, "qu240_for_e3sm": 740, "quwisc240_for_e3sm": 740, "thread_test": 741, "time": [744, 753, 755], "biogeochemsitri": 745, "make_diagnostic_fil": 745, "state": [747, 757], "interpol": [747, 757], "forc": 747, "pointstat": 747, "sandi": 747, "ocean0": 751, "ocean1": 751, "ocean2": 751, "time_varying_ocean0": 751, "thin_film_ocean0": 751, "thin_film_tidal_forcing_ocean0": 751, "perform": 751, "simul": 751, "long": [754, 758], "surface_restor": 754, "three_lay": 754, "converg": 755, "threshold": 755, "parallel_n": 756, "serial_nlat": 756, "remap": 757, "bathymetri": 757, "wave": 757, "drag": 757, "e3sm": 759}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Caching outputs from compass steps": [[0, "caching-outputs-from-compass-steps"]], "Summary": [[0, "summary"], [1, "summary"], [3, "summary"]], "Requirements": [[0, "requirements"], [1, "requirements"], [3, "requirements"]], "Requirement: cached outputs": [[0, "requirement-cached-outputs"]], "Requirement: selecting whether to use cached outputs": [[0, "requirement-selecting-whether-to-use-cached-outputs"]], "Requirement: updating cached outputs": [[0, "requirement-updating-cached-outputs"]], "Requirement: unique identifier for cached outputs": [[0, "requirement-unique-identifier-for-cached-outputs"]], "Requirement: either \u201cnormal\u201d or \u201ccached\u201d versions of a step": [[0, "requirement-either-normal-or-cached-versions-of-a-step"]], "Design": [[0, "design"]], "Design: cached outputs": [[0, "design-cached-outputs"]], "Design: selecting whether to use cached outputs": [[0, "design-selecting-whether-to-use-cached-outputs"]], "Design: updating cached outputs": [[0, "design-updating-cached-outputs"]], "Design: unique identifier for cached outputs": [[0, "design-unique-identifier-for-cached-outputs"]], "Design: either \u201cnormal\u201d or \u201ccached\u201d versions of a step": [[0, "design-either-normal-or-cached-versions-of-a-step"]], "Implementation": [[0, "implementation"], [1, "implementation"], [3, "implementation"]], "Implementation: cached outputs": [[0, "implementation-cached-outputs"]], "Implementation: selecting whether to use cached outputs": [[0, "implementation-selecting-whether-to-use-cached-outputs"]], "Implementation: updating cached outputs": [[0, "implementation-updating-cached-outputs"]], "Implementation: unique identifier for cached outputs": [[0, "implementation-unique-identifier-for-cached-outputs"]], "Implementation: either \u201cnormal\u201d or \u201ccached\u201d versions of a step": [[0, "implementation-either-normal-or-cached-versions-of-a-step"]], "Testing": [[0, "testing"], [1, "testing"], [3, "testing"]], "Testing: cached outputs": [[0, "testing-cached-outputs"]], "Testing: selecting whether to use cached outputs": [[0, "testing-selecting-whether-to-use-cached-outputs"]], "Testing: updating cached outputs": [[0, "testing-updating-cached-outputs"]], "Testing: unique identifier for cached outputs": [[0, "testing-unique-identifier-for-cached-outputs"]], "Testing: either \u201cnormal\u201d or \u201ccached\u201d versions of a step": [[0, "testing-either-normal-or-cached-versions-of-a-step"]], "compass python package": [[1, "compass-python-package"]], "Requirement: Make test cases easy to understand, modify and create": [[1, "requirement-make-test-cases-easy-to-understand-modify-and-create"]], "Requirement: Shared code": [[1, "requirement-shared-code"]], "Requirement: Shared configuration options": [[1, "requirement-shared-configuration-options"]], "Requirement: Ability specify/modify core counts": [[1, "requirement-ability-specify-modify-core-counts"]], "Requirement: Machine-specific data": [[1, "requirement-machine-specific-data"]], "Requirement: Looser, more flexible directory structure": [[1, "requirement-looser-more-flexible-directory-structure"]], "Requirement: User- and developer-friendly documentation": [[1, "requirement-user-and-developer-friendly-documentation"]], "Requirement: Considerations related to running test cases in parallel": [[1, "requirement-considerations-related-to-running-test-cases-in-parallel"]], "Requirement: Resolution can be a test case parameter": [[1, "requirement-resolution-can-be-a-test-case-parameter"]], "Requirement: Test case code is easy to alter and rerun": [[1, "requirement-test-case-code-is-easy-to-alter-and-rerun"]], "Requirement: Support for pre-made initial condition files": [[1, "requirement-support-for-pre-made-initial-condition-files"]], "Requirement: Easy batch submission": [[1, "requirement-easy-batch-submission"]], "Algorithm Design": [[1, "algorithm-design"]], "Algorithm design: Make test cases easy to understand, modify and  and create": [[1, "algorithm-design-make-test-cases-easy-to-understand-modify-and-and-create"]], "Algorithm design: Shared code": [[1, "algorithm-design-shared-code"]], "Algorithm design: Shared configuration options": [[1, "algorithm-design-shared-configuration-options"]], "Algorithm design: Ability specify/modify core counts": [[1, "algorithm-design-ability-specify-modify-core-counts"]], "Algorithm design: Machine-specific data": [[1, "algorithm-design-machine-specific-data"]], "Algorithm design: Looser, more flexible directory structure": [[1, "algorithm-design-looser-more-flexible-directory-structure"]], "Algorithm design: User- and developer-friendly documentation": [[1, "algorithm-design-user-and-developer-friendly-documentation"]], "Algorithm design: Considerations related to running test cases in parallel": [[1, "algorithm-design-considerations-related-to-running-test-cases-in-parallel"]], "Algorithm design: Resolution can be a test case parameter": [[1, "algorithm-design-resolution-can-be-a-test-case-parameter"]], "Algorithm design: Test case code is easy to alter and rerun": [[1, "algorithm-design-test-case-code-is-easy-to-alter-and-rerun"]], "Algorithm design: Support for pre-made initial condition files": [[1, "algorithm-design-support-for-pre-made-initial-condition-files"]], "Algorithm design: Easy batch submission": [[1, "algorithm-design-easy-batch-submission"]], "Implementation: Make test cases easy to understand, modify and  and create": [[1, "implementation-make-test-cases-easy-to-understand-modify-and-and-create"]], "constructors": [[1, "constructors"]], "configure()": [[1, "configure"], [703, "configure"]], "setup()": [[1, "setup"], [703, "setup"]], "run": [[1, "run"], [4, "run"]], "global ocean test group": [[1, "global-ocean-test-group"]], "Implementation: Shared code": [[1, "implementation-shared-code"]], "compass framework": [[1, "compass-framework"], [4, "compass-framework"]], "within an MPAS core": [[1, "within-an-mpas-core"]], "within a test group": [[1, "within-a-test-group"]], "within a test case": [[1, "within-a-test-case"]], "Implementation: Shared configuration options": [[1, "implementation-shared-configuration-options"]], "Implementation: Ability specify/modify core counts": [[1, "implementation-ability-specify-modify-core-counts"]], "Implementation: Machine-specific data": [[1, "implementation-machine-specific-data"]], "Implementation: Looser, more flexible directory structure": [[1, "implementation-looser-more-flexible-directory-structure"]], "Implementation: User- and developer-friendly documentation": [[1, "implementation-user-and-developer-friendly-documentation"]], "Implementation: Considerations related to running test cases in parallel": [[1, "implementation-considerations-related-to-running-test-cases-in-parallel"]], "cores, max_memory and max_disk": [[1, "cores-max-memory-and-max-disk"]], "inputs and outputs": [[1, "inputs-and-outputs"], [703, "inputs-and-outputs"]], "Implementation: Resolution can be a test case parameter": [[1, "implementation-resolution-can-be-a-test-case-parameter"]], "Implementation: Test case code is easy to alter and rerun": [[1, "implementation-test-case-code-is-easy-to-alter-and-rerun"]], "Implementation: Support for pre-made initial condition files": [[1, "implementation-support-for-pre-made-initial-condition-files"]], "Implementation: Easy batch submission": [[1, "implementation-easy-batch-submission"]], "Testing: Make test cases easy to understand, modify and create": [[1, "testing-make-test-cases-easy-to-understand-modify-and-create"]], "Testing: Shared code": [[1, "testing-shared-code"]], "Testing: Shared configuration options": [[1, "testing-shared-configuration-options"]], "Testing: Ability specify/modify core counts": [[1, "testing-ability-specify-modify-core-counts"]], "Testing: Machine-specific data": [[1, "testing-machine-specific-data"]], "Testing: Looser, more flexible directory structure": [[1, "testing-looser-more-flexible-directory-structure"]], "Testing: User- and developer-friendly documentation": [[1, "testing-user-and-developer-friendly-documentation"]], "Testing: Considerations related to running test cases in parallel": [[1, "testing-considerations-related-to-running-test-cases-in-parallel"]], "Testing: Resolution can be a test case parameter": [[1, "testing-resolution-can-be-a-test-case-parameter"]], "Testing: Test case code is easy to alter and rerun": [[1, "testing-test-case-code-is-easy-to-alter-and-rerun"]], "Testing: Support for pre-made initial condition files": [[1, "testing-support-for-pre-made-initial-condition-files"]], "Testing: Easy batch submission": [[1, "testing-easy-batch-submission"]], "Design Documents": [[2, "design-documents"]], "Template": [[3, "template"]], "Requirement: name-of-topic-here": [[3, "requirement-name-of-topic-here"]], "Algorithm Design (optional)": [[3, "algorithm-design-optional"]], "Algorithm Design: name-of-topic-here (same as Requirement)": [[3, "algorithm-design-name-of-topic-here-same-as-requirement"]], "Implementation: name-of-topic-here (same as Requirement)": [[3, "implementation-name-of-topic-here-same-as-requirement"]], "Testing and Validation: name-of-topic-here (same as Requirement)": [[3, "testing-and-validation-name-of-topic-here-same-as-requirement"]], "API reference": [[4, "api-reference"]], "MPAS Cores": [[4, "mpas-cores"], [703, "mpas-cores"]], "Command-line interface": [[4, "command-line-interface"], [6, "command-line-interface"]], "list": [[4, "list"]], "setup": [[4, "setup"]], "clean": [[4, "clean"]], "suite": [[4, "suite"]], "cache": [[4, "cache"]], "Base Classes": [[4, "base-classes"]], "mpas_core": [[4, "mpas-core"]], "testgroup": [[4, "testgroup"]], "testcase": [[4, "testcase"]], "step": [[4, "step"]], "config": [[4, "config"]], "io": [[4, "io"]], "logging": [[4, "logging"]], "mesh": [[4, "mesh"], [248, "mesh"], [249, "mesh"], [253, "mesh"], [254, "mesh"], [256, "mesh"], [688, "mesh"], [691, "mesh"], [699, "mesh"], [699, "id1"], [699, "id5"], [699, "id9"], [700, "mesh"]], "model": [[4, "model"]], "mpas_cores": [[4, "id1"]], "parallel": [[4, "parallel"]], "provenance": [[4, "provenance"]], "validate": [[4, "validate"]], "Building the Documentation": [[5, "building-the-documentation"]], "compass list": [[6, "compass-list"]], "compass setup": [[6, "compass-setup"]], "compass clean": [[6, "compass-clean"]], "compass suite": [[6, "compass-suite"]], "compass run": [[6, "compass-run"]], "compass cache": [[6, "compass-cache"]], "Documentation": [[7, "documentation"], [709, "documentation"], [710, "documentation"], [711, "documentation"]], "Docstrings": [[7, "docstrings"]], "Framework": [[8, "framework"], [689, "framework"], [713, "framework"], [737, "framework"]], "list module": [[8, "list-module"]], "setup module": [[8, "setup-module"]], "clean module": [[8, "clean-module"]], "suite module": [[8, "suite-module"]], "run.serial module": [[8, "run-serial-module"]], "cache module": [[8, "cache-module"]], "Config files": [[8, "config-files"]], "Comments in config files": [[8, "comments-in-config-files"]], "Logging": [[8, "logging"]], "IO": [[8, "io"]], "Symlinks": [[8, "symlinks"]], "Download": [[8, "download"]], "Mesh": [[8, "mesh"], [264, "mesh"]], "Spherical Meshes": [[8, "spherical-meshes"]], "Model": [[8, "model"]], "Running MPAS": [[8, "running-mpas"]], "Partitioning the mesh": [[8, "partitioning-the-mesh"]], "Updating PIO namelist options": [[8, "updating-pio-namelist-options"]], "Making a graph file": [[8, "making-a-graph-file"]], "Validation": [[8, "validation"]], "Validating variables": [[8, "validating-variables"]], "Norms": [[8, "norms"]], "Validating timers": [[8, "validating-timers"]], "Provenance": [[8, "provenance"]], "compass.MpasCore": [[9, "compass-mpascore"]], "compass.MpasCore.add_test_group": [[10, "compass-mpascore-add-test-group"]], "compass.Step": [[11, "compass-step"]], "compass.Step.add_input_file": [[12, "compass-step-add-input-file"]], "compass.Step.add_model_as_input": [[13, "compass-step-add-model-as-input"]], "compass.Step.add_namelist_file": [[14, "compass-step-add-namelist-file"]], "compass.Step.add_namelist_options": [[15, "compass-step-add-namelist-options"]], "compass.Step.add_output_file": [[16, "compass-step-add-output-file"]], "compass.Step.add_streams_file": [[17, "compass-step-add-streams-file"]], "compass.Step.constrain_resources": [[18, "compass-step-constrain-resources"]], "compass.Step.run": [[19, "compass-step-run"]], "compass.Step.runtime_setup": [[20, "compass-step-runtime-setup"]], "compass.Step.set_resources": [[21, "compass-step-set-resources"]], "compass.Step.setup": [[22, "compass-step-setup"]], "compass.Step.update_namelist_at_runtime": [[23, "compass-step-update-namelist-at-runtime"]], "compass.Step.update_namelist_pio": [[24, "compass-step-update-namelist-pio"]], "compass.Step.update_streams_at_runtime": [[25, "compass-step-update-streams-at-runtime"]], "compass.TestCase": [[26, "compass-testcase"]], "compass.TestCase.add_step": [[27, "compass-testcase-add-step"]], "compass.TestCase.configure": [[28, "compass-testcase-configure"]], "compass.TestCase.run": [[29, "compass-testcase-run"]], "compass.TestCase.validate": [[30, "compass-testcase-validate"]], "compass.TestGroup": [[31, "compass-testgroup"]], "compass.TestGroup.add_test_case": [[32, "compass-testgroup-add-test-case"]], "compass.__main__.main": [[33, "compass-main-main"]], "compass.cache.update_cache": [[34, "compass-cache-update-cache"]], "compass.clean.clean_cases": [[35, "compass-clean-clean-cases"]], "compass.config.CompassConfigParser": [[36, "compass-config-compassconfigparser"]], "compass.io.download": [[37, "compass-io-download"]], "compass.io.symlink": [[38, "compass-io-symlink"]], "compass.list.list_cases": [[39, "compass-list-list-cases"]], "compass.list.list_machines": [[40, "compass-list-list-machines"]], "compass.list.list_suites": [[41, "compass-list-list-suites"]], "compass.logging.log_method_call": [[42, "compass-logging-log-method-call"]], "compass.mesh.IcosahedralMeshStep": [[43, "compass-mesh-icosahedralmeshstep"]], "compass.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon": [[44, "compass-mesh-icosahedralmeshstep-build-subdivisions-cell-width-lat-lon"]], "compass.mesh.IcosahedralMeshStep.get_cell_width": [[45, "compass-mesh-icosahedralmeshstep-get-cell-width"]], "compass.mesh.IcosahedralMeshStep.get_subdivisions": [[46, "compass-mesh-icosahedralmeshstep-get-subdivisions"]], "compass.mesh.IcosahedralMeshStep.make_jigsaw_mesh": [[47, "compass-mesh-icosahedralmeshstep-make-jigsaw-mesh"]], "compass.mesh.IcosahedralMeshStep.run": [[48, "compass-mesh-icosahedralmeshstep-run"]], "compass.mesh.IcosahedralMeshStep.setup": [[49, "compass-mesh-icosahedralmeshstep-setup"]], "compass.mesh.QuasiUniformSphericalMeshStep": [[50, "compass-mesh-quasiuniformsphericalmeshstep"]], "compass.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon": [[51, "compass-mesh-quasiuniformsphericalmeshstep-build-cell-width-lat-lon"]], "compass.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh": [[52, "compass-mesh-quasiuniformsphericalmeshstep-make-jigsaw-mesh"]], "compass.mesh.QuasiUniformSphericalMeshStep.run": [[53, "compass-mesh-quasiuniformsphericalmeshstep-run"]], "compass.mesh.QuasiUniformSphericalMeshStep.setup": [[54, "compass-mesh-quasiuniformsphericalmeshstep-setup"]], "compass.mesh.spherical.SphericalBaseStep": [[55, "compass-mesh-spherical-sphericalbasestep"]], "compass.mesh.spherical.SphericalBaseStep.run": [[56, "compass-mesh-spherical-sphericalbasestep-run"]], "compass.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width": [[57, "compass-mesh-spherical-sphericalbasestep-save-and-plot-cell-width"]], "compass.mesh.spherical.SphericalBaseStep.setup": [[58, "compass-mesh-spherical-sphericalbasestep-setup"]], "compass.model.make_graph_file": [[59, "compass-model-make-graph-file"]], "compass.model.partition": [[60, "compass-model-partition"]], "compass.model.run_model": [[61, "compass-model-run-model"]], "compass.mpas_cores.get_mpas_cores": [[62, "compass-mpas-cores-get-mpas-cores"]], "compass.parallel.check_parallel_system": [[63, "compass-parallel-check-parallel-system"]], "compass.parallel.get_available_cores_and_nodes": [[64, "compass-parallel-get-available-cores-and-nodes"]], "compass.parallel.run_command": [[65, "compass-parallel-run-command"]], "compass.parallel.set_cores_per_node": [[66, "compass-parallel-set-cores-per-node"]], "compass.provenance.write": [[67, "compass-provenance-write"]], "compass.run.serial.run_single_step": [[68, "compass-run-serial-run-single-step"]], "compass.run.serial.run_tests": [[69, "compass-run-serial-run-tests"]], "compass.setup.setup_case": [[70, "compass-setup-setup-case"]], "compass.setup.setup_cases": [[71, "compass-setup-setup-cases"]], "compass.suite.clean_suite": [[72, "compass-suite-clean-suite"]], "compass.suite.setup_suite": [[73, "compass-suite-setup-suite"]], "compass.validate.compare_timers": [[74, "compass-validate-compare-timers"]], "compass.validate.compare_variables": [[75, "compass-validate-compare-variables"]], "landice": [[76, "landice"]], "Test Groups": [[76, "test-groups"], [263, "test-groups"], [703, "test-groups"], [724, "test-groups"]], "calving_dt_convergence": [[76, "calving-dt-convergence"], [243, "calving-dt-convergence"], [715, "calving-dt-convergence"], [716, "calving-dt-convergence"]], "circular_shelf": [[76, "circular-shelf"], [244, "circular-shelf"], [717, "circular-shelf"]], "dome": [[76, "dome"], [245, "dome"], [718, "dome"]], "enthalpy_benchmark": [[76, "enthalpy-benchmark"], [247, "enthalpy-benchmark"], [720, "enthalpy-benchmark"]], "eismint2": [[76, "eismint2"], [246, "eismint2"], [719, "eismint2"]], "greenland": [[76, "greenland"], [248, "greenland"], [721, "greenland"]], "humboldt": [[76, "humboldt"], [249, "humboldt"], [722, "humboldt"]], "hydro_radial": [[76, "hydro-radial"], [250, "hydro-radial"], [723, "hydro-radial"]], "ismip6_forcing": [[76, "ismip6-forcing"], [252, "ismip6-forcing"], [725, "ismip6-forcing"]], "kangerlussuaq": [[76, "kangerlussuaq"], [253, "kangerlussuaq"], [726, "kangerlussuaq"]], "koge_bugt_s": [[76, "koge-bugt-s"], [254, "koge-bugt-s"], [727, "koge-bugt-s"]], "mismipplus": [[76, "mismipplus"], [255, "mismipplus"], [728, "mismipplus"]], "thwaites": [[76, "thwaites"], [256, "thwaites"], [729, "thwaites"]], "Land-ice Framework": [[77, "land-ice-framework"]], "compass.landice.Landice": [[78, "compass-landice-landice"]], "compass.landice.tests.calving_dt_convergence.CalvingDtConvergence": [[79, "compass-landice-tests-calving-dt-convergence-calvingdtconvergence"]], "compass.landice.tests.calving_dt_convergence.dt_convergence_test.DtConvergenceTest": [[80, "compass-landice-tests-calving-dt-convergence-dt-convergence-test-dtconvergencetest"]], "compass.landice.tests.calving_dt_convergence.dt_convergence_test.DtConvergenceTest.validate": [[81, "compass-landice-tests-calving-dt-convergence-dt-convergence-test-dtconvergencetest-validate"]], "compass.landice.tests.calving_dt_convergence.run_model.RunModel": [[82, "compass-landice-tests-calving-dt-convergence-run-model-runmodel"]], "compass.landice.tests.calving_dt_convergence.run_model.RunModel.run": [[83, "compass-landice-tests-calving-dt-convergence-run-model-runmodel-run"]], "compass.landice.tests.circular_shelf.CircularShelf": [[84, "compass-landice-tests-circular-shelf-circularshelf"]], "compass.landice.tests.circular_shelf.decomposition_test.DecompositionTest": [[85, "compass-landice-tests-circular-shelf-decomposition-test-decompositiontest"]], "compass.landice.tests.circular_shelf.decomposition_test.DecompositionTest.run": [[86, "compass-landice-tests-circular-shelf-decomposition-test-decompositiontest-run"]], "compass.landice.tests.circular_shelf.run_model.RunModel": [[87, "compass-landice-tests-circular-shelf-run-model-runmodel"]], "compass.landice.tests.circular_shelf.run_model.RunModel.run": [[88, "compass-landice-tests-circular-shelf-run-model-runmodel-run"]], "compass.landice.tests.circular_shelf.setup_mesh.SetupMesh": [[89, "compass-landice-tests-circular-shelf-setup-mesh-setupmesh"]], "compass.landice.tests.circular_shelf.setup_mesh.SetupMesh.run": [[90, "compass-landice-tests-circular-shelf-setup-mesh-setupmesh-run"]], "compass.landice.tests.circular_shelf.visualize.Visualize": [[91, "compass-landice-tests-circular-shelf-visualize-visualize"]], "compass.landice.tests.circular_shelf.visualize.Visualize.run": [[92, "compass-landice-tests-circular-shelf-visualize-visualize-run"]], "compass.landice.tests.circular_shelf.visualize.visualize_circular_shelf": [[93, "compass-landice-tests-circular-shelf-visualize-visualize-circular-shelf"]], "compass.landice.tests.dome.Dome": [[94, "compass-landice-tests-dome-dome"]], "compass.landice.tests.dome.decomposition_test.DecompositionTest": [[95, "compass-landice-tests-dome-decomposition-test-decompositiontest"]], "compass.landice.tests.dome.decomposition_test.DecompositionTest.run": [[96, "compass-landice-tests-dome-decomposition-test-decompositiontest-run"]], "compass.landice.tests.dome.restart_test.RestartTest": [[97, "compass-landice-tests-dome-restart-test-restarttest"]], "compass.landice.tests.dome.restart_test.RestartTest.run": [[98, "compass-landice-tests-dome-restart-test-restarttest-run"]], "compass.landice.tests.dome.run_model.RunModel": [[99, "compass-landice-tests-dome-run-model-runmodel"]], "compass.landice.tests.dome.run_model.RunModel.run": [[100, "compass-landice-tests-dome-run-model-runmodel-run"]], "compass.landice.tests.dome.run_model.RunModel.setup": [[101, "compass-landice-tests-dome-run-model-runmodel-setup"]], "compass.landice.tests.dome.setup_mesh.SetupMesh": [[102, "compass-landice-tests-dome-setup-mesh-setupmesh"]], "compass.landice.tests.dome.setup_mesh.SetupMesh.run": [[103, "compass-landice-tests-dome-setup-mesh-setupmesh-run"]], "compass.landice.tests.dome.smoke_test.SmokeTest": [[104, "compass-landice-tests-dome-smoke-test-smoketest"]], "compass.landice.tests.dome.smoke_test.SmokeTest.run": [[105, "compass-landice-tests-dome-smoke-test-smoketest-run"]], "compass.landice.tests.dome.visualize.Visualize": [[106, "compass-landice-tests-dome-visualize-visualize"]], "compass.landice.tests.dome.visualize.Visualize.run": [[107, "compass-landice-tests-dome-visualize-visualize-run"]], "compass.landice.tests.dome.visualize.visualize_dome": [[108, "compass-landice-tests-dome-visualize-visualize-dome"]], "compass.landice.tests.eismint2.Eismint2": [[109, "compass-landice-tests-eismint2-eismint2"]], "compass.landice.tests.eismint2.decomposition_test.DecompositionTest": [[110, "compass-landice-tests-eismint2-decomposition-test-decompositiontest"]], "compass.landice.tests.eismint2.decomposition_test.DecompositionTest.run": [[111, "compass-landice-tests-eismint2-decomposition-test-decompositiontest-run"]], "compass.landice.tests.eismint2.restart_test.RestartTest": [[112, "compass-landice-tests-eismint2-restart-test-restarttest"]], "compass.landice.tests.eismint2.restart_test.RestartTest.run": [[113, "compass-landice-tests-eismint2-restart-test-restarttest-run"]], "compass.landice.tests.eismint2.run_experiment.RunExperiment": [[114, "compass-landice-tests-eismint2-run-experiment-runexperiment"]], "compass.landice.tests.eismint2.run_experiment.RunExperiment.run": [[115, "compass-landice-tests-eismint2-run-experiment-runexperiment-run"]], "compass.landice.tests.eismint2.run_experiment.RunExperiment.setup": [[116, "compass-landice-tests-eismint2-run-experiment-runexperiment-setup"]], "compass.landice.tests.eismint2.setup_mesh.SetupMesh": [[117, "compass-landice-tests-eismint2-setup-mesh-setupmesh"]], "compass.landice.tests.eismint2.setup_mesh.SetupMesh.run": [[118, "compass-landice-tests-eismint2-setup-mesh-setupmesh-run"]], "compass.landice.tests.eismint2.standard_experiments.StandardExperiments": [[119, "compass-landice-tests-eismint2-standard-experiments-standardexperiments"]], "compass.landice.tests.eismint2.standard_experiments.StandardExperiments.run": [[120, "compass-landice-tests-eismint2-standard-experiments-standardexperiments-run"]], "compass.landice.tests.eismint2.standard_experiments.visualize.Visualize": [[121, "compass-landice-tests-eismint2-standard-experiments-visualize-visualize"]], "compass.landice.tests.eismint2.standard_experiments.visualize.Visualize.run": [[122, "compass-landice-tests-eismint2-standard-experiments-visualize-visualize-run"]], "compass.landice.tests.eismint2.standard_experiments.visualize.visualize_eismint2": [[123, "compass-landice-tests-eismint2-standard-experiments-visualize-visualize-eismint2"]], "compass.landice.tests.enthalpy_benchmark.A.A": [[124, "compass-landice-tests-enthalpy-benchmark-a-a"]], "compass.landice.tests.enthalpy_benchmark.A.A.configure": [[125, "compass-landice-tests-enthalpy-benchmark-a-a-configure"]], "compass.landice.tests.enthalpy_benchmark.A.A.run": [[126, "compass-landice-tests-enthalpy-benchmark-a-a-run"]], "compass.landice.tests.enthalpy_benchmark.A.visualize.Visualize": [[127, "compass-landice-tests-enthalpy-benchmark-a-visualize-visualize"]], "compass.landice.tests.enthalpy_benchmark.A.visualize.Visualize.run": [[128, "compass-landice-tests-enthalpy-benchmark-a-visualize-visualize-run"]], "compass.landice.tests.enthalpy_benchmark.B.B": [[129, "compass-landice-tests-enthalpy-benchmark-b-b"]], "compass.landice.tests.enthalpy_benchmark.B.B.configure": [[130, "compass-landice-tests-enthalpy-benchmark-b-b-configure"]], "compass.landice.tests.enthalpy_benchmark.B.B.run": [[131, "compass-landice-tests-enthalpy-benchmark-b-b-run"]], "compass.landice.tests.enthalpy_benchmark.B.visualize.Visualize": [[132, "compass-landice-tests-enthalpy-benchmark-b-visualize-visualize"]], "compass.landice.tests.enthalpy_benchmark.B.visualize.Visualize.run": [[133, "compass-landice-tests-enthalpy-benchmark-b-visualize-visualize-run"]], "compass.landice.tests.enthalpy_benchmark.EnthalpyBenchmark": [[134, "compass-landice-tests-enthalpy-benchmark-enthalpybenchmark"]], "compass.landice.tests.enthalpy_benchmark.run_model.RunModel": [[135, "compass-landice-tests-enthalpy-benchmark-run-model-runmodel"]], "compass.landice.tests.enthalpy_benchmark.run_model.RunModel.run": [[136, "compass-landice-tests-enthalpy-benchmark-run-model-runmodel-run"]], "compass.landice.tests.enthalpy_benchmark.run_model.RunModel.setup": [[137, "compass-landice-tests-enthalpy-benchmark-run-model-runmodel-setup"]], "compass.landice.tests.enthalpy_benchmark.setup_mesh.SetupMesh": [[138, "compass-landice-tests-enthalpy-benchmark-setup-mesh-setupmesh"]], "compass.landice.tests.enthalpy_benchmark.setup_mesh.SetupMesh.run": [[139, "compass-landice-tests-enthalpy-benchmark-setup-mesh-setupmesh-run"]], "compass.landice.tests.greenland.Greenland": [[140, "compass-landice-tests-greenland-greenland"]], "compass.landice.tests.greenland.decomposition_test.DecompositionTest": [[141, "compass-landice-tests-greenland-decomposition-test-decompositiontest"]], "compass.landice.tests.greenland.decomposition_test.DecompositionTest.run": [[142, "compass-landice-tests-greenland-decomposition-test-decompositiontest-run"]], "compass.landice.tests.greenland.high_res_mesh.HighResMesh": [[143, "compass-landice-tests-greenland-high-res-mesh-highresmesh"]], "compass.landice.tests.greenland.high_res_mesh.HighResMesh.run": [[144, "compass-landice-tests-greenland-high-res-mesh-highresmesh-run"]], "compass.landice.tests.greenland.mesh.Mesh": [[145, "compass-landice-tests-greenland-mesh-mesh"]], "compass.landice.tests.greenland.mesh.Mesh.build_cell_width": [[146, "compass-landice-tests-greenland-mesh-mesh-build-cell-width"]], "compass.landice.tests.greenland.mesh.Mesh.run": [[147, "compass-landice-tests-greenland-mesh-mesh-run"]], "compass.landice.tests.greenland.restart_test.RestartTest": [[148, "compass-landice-tests-greenland-restart-test-restarttest"]], "compass.landice.tests.greenland.restart_test.RestartTest.run": [[149, "compass-landice-tests-greenland-restart-test-restarttest-run"]], "compass.landice.tests.greenland.run_model.RunModel": [[150, "compass-landice-tests-greenland-run-model-runmodel"]], "compass.landice.tests.greenland.run_model.RunModel.run": [[151, "compass-landice-tests-greenland-run-model-runmodel-run"]], "compass.landice.tests.greenland.run_model.RunModel.setup": [[152, "compass-landice-tests-greenland-run-model-runmodel-setup"]], "compass.landice.tests.greenland.smoke_test.SmokeTest": [[153, "compass-landice-tests-greenland-smoke-test-smoketest"]], "compass.landice.tests.greenland.smoke_test.SmokeTest.run": [[154, "compass-landice-tests-greenland-smoke-test-smoketest-run"]], "compass.landice.tests.humboldt.Humboldt": [[155, "compass-landice-tests-humboldt-humboldt"]], "compass.landice.tests.humboldt.decomposition_test.DecompositionTest": [[156, "compass-landice-tests-humboldt-decomposition-test-decompositiontest"]], "compass.landice.tests.humboldt.decomposition_test.DecompositionTest.validate": [[157, "compass-landice-tests-humboldt-decomposition-test-decompositiontest-validate"]], "compass.landice.tests.humboldt.mesh.Mesh": [[158, "compass-landice-tests-humboldt-mesh-mesh"]], "compass.landice.tests.humboldt.mesh.Mesh.run": [[159, "compass-landice-tests-humboldt-mesh-mesh-run"]], "compass.landice.tests.humboldt.mesh_gen.MeshGen": [[160, "compass-landice-tests-humboldt-mesh-gen-meshgen"]], "compass.landice.tests.humboldt.mesh_gen.MeshGen.run": [[161, "compass-landice-tests-humboldt-mesh-gen-meshgen-run"]], "compass.landice.tests.humboldt.restart_test.RestartTest": [[162, "compass-landice-tests-humboldt-restart-test-restarttest"]], "compass.landice.tests.humboldt.restart_test.RestartTest.validate": [[163, "compass-landice-tests-humboldt-restart-test-restarttest-validate"]], "compass.landice.tests.humboldt.run_model.RunModel": [[164, "compass-landice-tests-humboldt-run-model-runmodel"]], "compass.landice.tests.humboldt.run_model.RunModel.run": [[165, "compass-landice-tests-humboldt-run-model-runmodel-run"]], "compass.landice.tests.hydro_radial.HydroRadial": [[166, "compass-landice-tests-hydro-radial-hydroradial"]], "compass.landice.tests.hydro_radial.decomposition_test.DecompositionTest": [[167, "compass-landice-tests-hydro-radial-decomposition-test-decompositiontest"]], "compass.landice.tests.hydro_radial.decomposition_test.DecompositionTest.run": [[168, "compass-landice-tests-hydro-radial-decomposition-test-decompositiontest-run"]], "compass.landice.tests.hydro_radial.restart_test.RestartTest": [[169, "compass-landice-tests-hydro-radial-restart-test-restarttest"]], "compass.landice.tests.hydro_radial.restart_test.RestartTest.run": [[170, "compass-landice-tests-hydro-radial-restart-test-restarttest-run"]], "compass.landice.tests.hydro_radial.run_model.RunModel": [[171, "compass-landice-tests-hydro-radial-run-model-runmodel"]], "compass.landice.tests.hydro_radial.run_model.RunModel.run": [[172, "compass-landice-tests-hydro-radial-run-model-runmodel-run"]], "compass.landice.tests.hydro_radial.run_model.RunModel.setup": [[173, "compass-landice-tests-hydro-radial-run-model-runmodel-setup"]], "compass.landice.tests.hydro_radial.setup_mesh.SetupMesh": [[174, "compass-landice-tests-hydro-radial-setup-mesh-setupmesh"]], "compass.landice.tests.hydro_radial.setup_mesh.SetupMesh.run": [[175, "compass-landice-tests-hydro-radial-setup-mesh-setupmesh-run"]], "compass.landice.tests.hydro_radial.spinup_test.SpinupTest": [[176, "compass-landice-tests-hydro-radial-spinup-test-spinuptest"]], "compass.landice.tests.hydro_radial.spinup_test.SpinupTest.run": [[177, "compass-landice-tests-hydro-radial-spinup-test-spinuptest-run"]], "compass.landice.tests.hydro_radial.steady_state_drift_test.SteadyStateDriftTest": [[178, "compass-landice-tests-hydro-radial-steady-state-drift-test-steadystatedrifttest"]], "compass.landice.tests.hydro_radial.steady_state_drift_test.SteadyStateDriftTest.run": [[179, "compass-landice-tests-hydro-radial-steady-state-drift-test-steadystatedrifttest-run"]], "compass.landice.tests.hydro_radial.visualize.Visualize": [[180, "compass-landice-tests-hydro-radial-visualize-visualize"]], "compass.landice.tests.hydro_radial.visualize.Visualize.run": [[181, "compass-landice-tests-hydro-radial-visualize-visualize-run"]], "compass.landice.tests.hydro_radial.visualize.visualize_hydro_radial": [[182, "compass-landice-tests-hydro-radial-visualize-visualize-hydro-radial"]], "compass.landice.tests.ismip6_forcing.Ismip6Forcing": [[183, "compass-landice-tests-ismip6-forcing-ismip6forcing"]], "compass.landice.tests.ismip6_forcing.atmosphere.Atmosphere": [[184, "compass-landice-tests-ismip6-forcing-atmosphere-atmosphere"]], "compass.landice.tests.ismip6_forcing.atmosphere.Atmosphere.configure": [[185, "compass-landice-tests-ismip6-forcing-atmosphere-atmosphere-configure"]], "compass.landice.tests.ismip6_forcing.atmosphere.create_mapfile_smb": [[186, "module-compass.landice.tests.ismip6_forcing.atmosphere.create_mapfile_smb"]], "compass.landice.tests.ismip6_forcing.atmosphere.create_mapfile_smb.build_mapping_file": [[187, "compass-landice-tests-ismip6-forcing-atmosphere-create-mapfile-smb-build-mapping-file"]], "compass.landice.tests.ismip6_forcing.atmosphere.create_mapfile_smb.create_atm_scrip": [[188, "compass-landice-tests-ismip6-forcing-atmosphere-create-mapfile-smb-create-atm-scrip"]], "compass.landice.tests.ismip6_forcing.atmosphere.process_smb.ProcessSMB": [[189, "compass-landice-tests-ismip6-forcing-atmosphere-process-smb-processsmb"]], "compass.landice.tests.ismip6_forcing.atmosphere.process_smb.ProcessSMB.correct_smb_anomaly_for_climatology": [[190, "compass-landice-tests-ismip6-forcing-atmosphere-process-smb-processsmb-correct-smb-anomaly-for-climatology"]], "compass.landice.tests.ismip6_forcing.atmosphere.process_smb.ProcessSMB.remap_ismip6_smb_to_mali": [[191, "compass-landice-tests-ismip6-forcing-atmosphere-process-smb-processsmb-remap-ismip6-smb-to-mali"]], "compass.landice.tests.ismip6_forcing.atmosphere.process_smb.ProcessSMB.rename_ismip6_smb_to_mali_vars": [[192, "compass-landice-tests-ismip6-forcing-atmosphere-process-smb-processsmb-rename-ismip6-smb-to-mali-vars"]], "compass.landice.tests.ismip6_forcing.atmosphere.process_smb.ProcessSMB.run": [[193, "compass-landice-tests-ismip6-forcing-atmosphere-process-smb-processsmb-run"]], "compass.landice.tests.ismip6_forcing.atmosphere.process_smb.ProcessSMB.setup": [[194, "compass-landice-tests-ismip6-forcing-atmosphere-process-smb-processsmb-setup"]], "compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.ProcessSmbRacmo": [[195, "compass-landice-tests-ismip6-forcing-atmosphere-process-smb-racmo-processsmbracmo"]], "compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.ProcessSmbRacmo.correct_smb_anomaly_for_base_smb": [[196, "compass-landice-tests-ismip6-forcing-atmosphere-process-smb-racmo-processsmbracmo-correct-smb-anomaly-for-base-smb"]], "compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.ProcessSmbRacmo.remap_source_smb_to_mali": [[197, "compass-landice-tests-ismip6-forcing-atmosphere-process-smb-racmo-processsmbracmo-remap-source-smb-to-mali"]], "compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.ProcessSmbRacmo.rename_source_smb_to_mali_vars": [[198, "compass-landice-tests-ismip6-forcing-atmosphere-process-smb-racmo-processsmbracmo-rename-source-smb-to-mali-vars"]], "compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.ProcessSmbRacmo.run": [[199, "compass-landice-tests-ismip6-forcing-atmosphere-process-smb-racmo-processsmbracmo-run"]], "compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.ProcessSmbRacmo.setup": [[200, "compass-landice-tests-ismip6-forcing-atmosphere-process-smb-racmo-processsmbracmo-setup"]], "compass.landice.tests.ismip6_forcing.configure.configure": [[201, "compass-landice-tests-ismip6-forcing-configure-configure"]], "compass.landice.tests.ismip6_forcing.create_mapfile.build_mapping_file": [[202, "compass-landice-tests-ismip6-forcing-create-mapfile-build-mapping-file"]], "compass.landice.tests.ismip6_forcing.ocean_basal.OceanBasal": [[203, "compass-landice-tests-ismip6-forcing-ocean-basal-oceanbasal"]], "compass.landice.tests.ismip6_forcing.ocean_basal.OceanBasal.configure": [[204, "compass-landice-tests-ismip6-forcing-ocean-basal-oceanbasal-configure"]], "compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.ProcessBasalMelt": [[205, "compass-landice-tests-ismip6-forcing-ocean-basal-process-basal-melt-processbasalmelt"]], "compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.ProcessBasalMelt.combine_ismip6_inputfiles": [[206, "compass-landice-tests-ismip6-forcing-ocean-basal-process-basal-melt-processbasalmelt-combine-ismip6-inputfiles"]], "compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.ProcessBasalMelt.remap_ismip6_basal_melt_to_mali_vars": [[207, "compass-landice-tests-ismip6-forcing-ocean-basal-process-basal-melt-processbasalmelt-remap-ismip6-basal-melt-to-mali-vars"]], "compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.ProcessBasalMelt.rename_ismip6_basal_melt_to_mali_vars": [[208, "compass-landice-tests-ismip6-forcing-ocean-basal-process-basal-melt-processbasalmelt-rename-ismip6-basal-melt-to-mali-vars"]], "compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.ProcessBasalMelt.run": [[209, "compass-landice-tests-ismip6-forcing-ocean-basal-process-basal-melt-processbasalmelt-run"]], "compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.ProcessBasalMelt.setup": [[210, "compass-landice-tests-ismip6-forcing-ocean-basal-process-basal-melt-processbasalmelt-setup"]], "compass.landice.tests.ismip6_forcing.ocean_thermal.OceanThermal": [[211, "compass-landice-tests-ismip6-forcing-ocean-thermal-oceanthermal"]], "compass.landice.tests.ismip6_forcing.ocean_thermal.OceanThermal.configure": [[212, "compass-landice-tests-ismip6-forcing-ocean-thermal-oceanthermal-configure"]], "compass.landice.tests.ismip6_forcing.ocean_thermal.process_thermal_forcing.ProcessThermalForcing": [[213, "compass-landice-tests-ismip6-forcing-ocean-thermal-process-thermal-forcing-processthermalforcing"]], "compass.landice.tests.ismip6_forcing.ocean_thermal.process_thermal_forcing.ProcessThermalForcing.remap_ismip6_thermal_forcing_to_mali_vars": [[214, "compass-landice-tests-ismip6-forcing-ocean-thermal-process-thermal-forcing-processthermalforcing-remap-ismip6-thermal-forcing-to-mali-vars"]], "compass.landice.tests.ismip6_forcing.ocean_thermal.process_thermal_forcing.ProcessThermalForcing.rename_ismip6_thermal_forcing_to_mali_vars": [[215, "compass-landice-tests-ismip6-forcing-ocean-thermal-process-thermal-forcing-processthermalforcing-rename-ismip6-thermal-forcing-to-mali-vars"]], "compass.landice.tests.ismip6_forcing.ocean_thermal.process_thermal_forcing.ProcessThermalForcing.run": [[216, "compass-landice-tests-ismip6-forcing-ocean-thermal-process-thermal-forcing-processthermalforcing-run"]], "compass.landice.tests.ismip6_forcing.ocean_thermal.process_thermal_forcing.ProcessThermalForcing.setup": [[217, "compass-landice-tests-ismip6-forcing-ocean-thermal-process-thermal-forcing-processthermalforcing-setup"]], "compass.landice.tests.kangerlussuaq.Kangerlussuaq": [[218, "compass-landice-tests-kangerlussuaq-kangerlussuaq"]], "compass.landice.tests.kangerlussuaq.mesh.Mesh": [[219, "compass-landice-tests-kangerlussuaq-mesh-mesh"]], "compass.landice.tests.kangerlussuaq.mesh.Mesh.run": [[220, "compass-landice-tests-kangerlussuaq-mesh-mesh-run"]], "compass.landice.tests.kangerlussuaq.mesh_gen.MeshGen": [[221, "compass-landice-tests-kangerlussuaq-mesh-gen-meshgen"]], "compass.landice.tests.kangerlussuaq.mesh_gen.MeshGen.run": [[222, "compass-landice-tests-kangerlussuaq-mesh-gen-meshgen-run"]], "compass.landice.tests.koge_bugt_s.KogeBugtS": [[223, "compass-landice-tests-koge-bugt-s-kogebugts"]], "compass.landice.tests.koge_bugt_s.mesh.Mesh": [[224, "compass-landice-tests-koge-bugt-s-mesh-mesh"]], "compass.landice.tests.koge_bugt_s.mesh.Mesh.run": [[225, "compass-landice-tests-koge-bugt-s-mesh-mesh-run"]], "compass.landice.tests.koge_bugt_s.mesh_gen.MeshGen": [[226, "compass-landice-tests-koge-bugt-s-mesh-gen-meshgen"]], "compass.landice.tests.koge_bugt_s.mesh_gen.MeshGen.run": [[227, "compass-landice-tests-koge-bugt-s-mesh-gen-meshgen-run"]], "compass.landice.tests.mismipplus.MISMIPplus": [[228, "compass-landice-tests-mismipplus-mismipplus"]], "compass.landice.tests.mismipplus.run_model.RunModel": [[229, "compass-landice-tests-mismipplus-run-model-runmodel"]], "compass.landice.tests.mismipplus.run_model.RunModel.run": [[230, "compass-landice-tests-mismipplus-run-model-runmodel-run"]], "compass.landice.tests.mismipplus.run_model.RunModel.setup": [[231, "compass-landice-tests-mismipplus-run-model-runmodel-setup"]], "compass.landice.tests.mismipplus.smoke_test.SmokeTest": [[232, "compass-landice-tests-mismipplus-smoke-test-smoketest"]], "compass.landice.tests.mismipplus.smoke_test.SmokeTest.run": [[233, "compass-landice-tests-mismipplus-smoke-test-smoketest-run"]], "compass.landice.tests.thwaites.Thwaites": [[234, "compass-landice-tests-thwaites-thwaites"]], "compass.landice.tests.thwaites.decomposition_test.DecompositionTest": [[235, "compass-landice-tests-thwaites-decomposition-test-decompositiontest"]], "compass.landice.tests.thwaites.decomposition_test.DecompositionTest.run": [[236, "compass-landice-tests-thwaites-decomposition-test-decompositiontest-run"]], "compass.landice.tests.thwaites.restart_test.RestartTest": [[237, "compass-landice-tests-thwaites-restart-test-restarttest"]], "compass.landice.tests.thwaites.restart_test.RestartTest.run": [[238, "compass-landice-tests-thwaites-restart-test-restarttest-run"]], "compass.landice.tests.thwaites.run_model.RunModel": [[239, "compass-landice-tests-thwaites-run-model-runmodel"]], "compass.landice.tests.thwaites.run_model.RunModel.run": [[240, "compass-landice-tests-thwaites-run-model-runmodel-run"]], "compass.landice.tests.thwaites.run_model.RunModel.setup": [[241, "compass-landice-tests-thwaites-run-model-runmodel-setup"]], "Landice core": [[242, "landice-core"], [714, "landice-core"]], "framework": [[243, "framework"], [244, "framework"], [245, "framework"], [246, "framework"], [247, "framework"], [248, "framework"], [249, "framework"], [250, "framework"], [252, "framework"], [253, "framework"], [254, "framework"], [255, "framework"], [256, "framework"], [685, "framework"], [686, "framework"], [687, "framework"], [692, "framework"], [694, "framework"], [695, "framework"], [696, "framework"], [698, "framework"], [702, "framework"]], "DtConvergenceTest": [[243, "dtconvergencetest"]], "RunModel": [[243, "runmodel"], [244, "runmodel"], [245, "runmodel"]], "SetupMesh": [[244, "setupmesh"], [245, "setupmesh"]], "Visualize": [[244, "visualize"], [245, "visualize"]], "DecompositionTest": [[244, "decompositiontest"], [245, "decompositiontest"]], "SmokeTest": [[245, "smoketest"]], "RestartTest": [[245, "restarttest"]], "setup_mesh": [[246, "setup-mesh"], [247, "setup-mesh"], [250, "setup-mesh"]], "run_experiment": [[246, "run-experiment"]], "standard_experiments": [[246, "standard-experiments"], [719, "standard-experiments"]], "visualize": [[246, "visualize"], [250, "visualize"]], "decomposition_test and enthalpy_decomposition_test": [[246, "decomposition-test-and-enthalpy-decomposition-test"], [719, "decomposition-test-and-enthalpy-decomposition-test"]], "restart_test and enthalpy_restart_test": [[246, "restart-test-and-enthalpy-restart-test"], [719, "restart-test-and-enthalpy-restart-test"]], "run_model": [[247, "run-model"], [248, "run-model"], [249, "run-model"], [250, "run-model"], [255, "run-model"], [256, "run-model"]], "A": [[247, "a"], [720, "a"]], "B": [[247, "b"], [720, "b"]], "smoke_test": [[248, "smoke-test"], [255, "smoke-test"], [718, "smoke-test"], [721, "smoke-test"], [728, "smoke-test"]], "decomposition_test": [[248, "decomposition-test"], [249, "decomposition-test"], [250, "decomposition-test"], [256, "decomposition-test"], [717, "decomposition-test"], [718, "decomposition-test"], [721, "decomposition-test"], [723, "decomposition-test"], [729, "decomposition-test"]], "restart_test": [[248, "restart-test"], [249, "restart-test"], [250, "restart-test"], [256, "restart-test"], [685, "restart-test"], [692, "restart-test"], [718, "restart-test"], [721, "restart-test"], [723, "restart-test"], [729, "restart-test"], [741, "restart-test"], [748, "restart-test"]], "high_res_mesh": [[248, "high-res-mesh"], [256, "high-res-mesh"], [721, "high-res-mesh"], [729, "high-res-mesh"]], "mesh_gen": [[249, "mesh-gen"], [253, "mesh-gen"], [254, "mesh-gen"], [722, "mesh-gen"], [726, "mesh-gen"], [727, "mesh-gen"]], "spinup_test": [[250, "spinup-test"], [723, "spinup-test"]], "steady_state_drift_test": [[250, "steady-state-drift-test"], [723, "steady-state-drift-test"]], "Test groups": [[251, "test-groups"], [693, "test-groups"], [749, "test-groups"]], "atmosphere": [[252, "atmosphere"], [725, "atmosphere"]], "ocean_basal": [[252, "ocean-basal"], [725, "ocean-basal"]], "ocean_thermal": [[252, "ocean-thermal"], [725, "ocean-thermal"]], "Anvil": [[257, "anvil"], [730, "anvil"]], "intel": [[257, "intel"], [258, "intel"], [259, "intel"]], "gnu": [[257, "gnu"], [258, "gnu"]], "Chrysalis": [[258, "chrysalis"], [731, "chrysalis"]], "CompyMcNodeFace": [[259, "compymcnodeface"], [732, "compymcnodeface"]], "Cori": [[260, "cori"], [733, "cori"]], "cori-haswell, intel": [[260, "cori-haswell-intel"]], "cori-haswell, gnu": [[260, "cori-haswell-gnu"]], "Machines": [[261, "machines"], [734, "machines"]], "Supported Machines": [[261, "supported-machines"], [734, "supported-machines"]], "Other Machines": [[261, "other-machines"], [734, "other-machines"]], "Perlmutter": [[262, "perlmutter"], [735, "perlmutter"]], "pm-cpu, gnu": [[262, "pm-cpu-gnu"]], "ocean": [[263, "ocean"]], "baroclinic_channel": [[263, "baroclinic-channel"], [685, "baroclinic-channel"], [741, "baroclinic-channel"]], "dam_break": [[263, "dam-break"], [686, "dam-break"], [742, "dam-break"]], "drying_slope": [[263, "drying-slope"], [687, "drying-slope"], [743, "drying-slope"]], "global_convergence": [[263, "global-convergence"], [688, "global-convergence"], [744, "global-convergence"]], "cosine_bell": [[263, "cosine-bell"], [688, "cosine-bell"], [744, "cosine-bell"]], "global_ocean": [[263, "global-ocean"], [689, "global-ocean"], [745, "global-ocean"]], "test cases and steps": [[263, "test-cases-and-steps"], [263, "id1"], [263, "id2"]], "global_ocean framework": [[263, "global-ocean-framework"]], "gotm": [[263, "gotm"], [690, "gotm"], [746, "gotm"]], "default": [[263, "default"], [685, "default"], [686, "default"], [687, "default"], [690, "default"], [692, "default"], [694, "default"], [696, "default"], [741, "default"], [742, "default"], [743, "default"], [746, "default"], [748, "default"], [750, "default"], [752, "default"], [754, "default"], [758, "default"]], "hurricane": [[263, "hurricane"], [691, "hurricane"], [747, "hurricane"]], "ice_shelf_2d": [[263, "ice-shelf-2d"], [692, "ice-shelf-2d"], [748, "ice-shelf-2d"]], "internal_wave": [[263, "internal-wave"], [694, "internal-wave"], [750, "internal-wave"]], "isomip_plus": [[263, "isomip-plus"], [695, "isomip-plus"], [751, "isomip-plus"]], "merry_go_round": [[263, "merry-go-round"], [696, "merry-go-round"], [752, "merry-go-round"]], "planar_convergence": [[263, "planar-convergence"], [697, "planar-convergence"], [753, "planar-convergence"]], "horizontal_advection": [[263, "horizontal-advection"], [697, "horizontal-advection"], [753, "horizontal-advection"]], "soma": [[263, "soma"], [698, "soma"], [754, "soma"]], "sphere_transport": [[263, "sphere-transport"], [699, "sphere-transport"], [755, "sphere-transport"]], "correlated_tracers_2d": [[263, "correlated-tracers-2d"], [699, "correlated-tracers-2d"], [755, "correlated-tracers-2d"]], "divergent_2d": [[263, "divergent-2d"], [699, "divergent-2d"], [755, "divergent-2d"]], "nondivergent_2d": [[263, "nondivergent-2d"], [699, "nondivergent-2d"], [755, "nondivergent-2d"]], "rotation_2d": [[263, "rotation-2d"], [699, "rotation-2d"], [755, "rotation-2d"]], "sphere_transport framework": [[263, "sphere-transport-framework"]], "tides": [[263, "tides"], [701, "tides"], [757, "tides"]], "ziso": [[263, "ziso"], [702, "ziso"], [758, "ziso"]], "ocean framework": [[263, "ocean-framework"]], "Ocean framework": [[264, "ocean-framework"]], "Namelist replacements and streams files": [[264, "namelist-replacements-and-streams-files"]], "Vertical coordinate": [[264, "vertical-coordinate"], [738, "vertical-coordinate"]], "Culling Meshes": [[264, "culling-meshes"]], "Including a Floodplain": [[264, "including-a-floodplain"]], "Haney number": [[264, "haney-number"]], "Ice-shelf cavities": [[264, "ice-shelf-cavities"], [745, "ice-shelf-cavities"]], "Particles": [[264, "particles"]], "Plotting": [[264, "plotting"]], "compass.ocean.Ocean": [[265, "compass-ocean-ocean"]], "compass.ocean.haney.compute_haney_number": [[266, "compass-ocean-haney-compute-haney-number"]], "compass.ocean.iceshelf.adjust_ssh": [[267, "compass-ocean-iceshelf-adjust-ssh"]], "compass.ocean.iceshelf.compute_land_ice_pressure_and_draft": [[268, "compass-ocean-iceshelf-compute-land-ice-pressure-and-draft"]], "compass.ocean.mesh.cull.CullMeshStep": [[269, "compass-ocean-mesh-cull-cullmeshstep"]], "compass.ocean.mesh.cull.CullMeshStep.run": [[270, "compass-ocean-mesh-cull-cullmeshstep-run"]], "compass.ocean.mesh.cull.CullMeshStep.setup": [[271, "compass-ocean-mesh-cull-cullmeshstep-setup"]], "compass.ocean.mesh.cull.cull_mesh": [[272, "compass-ocean-mesh-cull-cull-mesh"]], "compass.ocean.mesh.floodplain.FloodplainMeshStep": [[273, "compass-ocean-mesh-floodplain-floodplainmeshstep"]], "compass.ocean.mesh.floodplain.FloodplainMeshStep.run": [[274, "compass-ocean-mesh-floodplain-floodplainmeshstep-run"]], "compass.ocean.particles.remap_particles": [[275, "compass-ocean-particles-remap-particles"]], "compass.ocean.particles.write": [[276, "compass-ocean-particles-write"]], "compass.ocean.plot.plot_initial_state": [[277, "compass-ocean-plot-plot-initial-state"]], "compass.ocean.plot.plot_vertical_grid": [[278, "compass-ocean-plot-plot-vertical-grid"]], "compass.ocean.tests.baroclinic_channel.BaroclinicChannel": [[279, "compass-ocean-tests-baroclinic-channel-baroclinicchannel"]], "compass.ocean.tests.baroclinic_channel.configure": [[280, "compass-ocean-tests-baroclinic-channel-configure"]], "compass.ocean.tests.baroclinic_channel.decomp_test.DecompTest": [[281, "compass-ocean-tests-baroclinic-channel-decomp-test-decomptest"]], "compass.ocean.tests.baroclinic_channel.decomp_test.DecompTest.configure": [[282, "compass-ocean-tests-baroclinic-channel-decomp-test-decomptest-configure"]], "compass.ocean.tests.baroclinic_channel.decomp_test.DecompTest.run": [[283, "compass-ocean-tests-baroclinic-channel-decomp-test-decomptest-run"]], "compass.ocean.tests.baroclinic_channel.default.Default": [[284, "compass-ocean-tests-baroclinic-channel-default-default"]], "compass.ocean.tests.baroclinic_channel.default.Default.configure": [[285, "compass-ocean-tests-baroclinic-channel-default-default-configure"]], "compass.ocean.tests.baroclinic_channel.default.Default.run": [[286, "compass-ocean-tests-baroclinic-channel-default-default-run"]], "compass.ocean.tests.baroclinic_channel.forward.Forward": [[287, "compass-ocean-tests-baroclinic-channel-forward-forward"]], "compass.ocean.tests.baroclinic_channel.forward.Forward.run": [[288, "compass-ocean-tests-baroclinic-channel-forward-forward-run"]], "compass.ocean.tests.baroclinic_channel.forward.Forward.setup": [[289, "compass-ocean-tests-baroclinic-channel-forward-forward-setup"]], "compass.ocean.tests.baroclinic_channel.initial_state.InitialState": [[290, "compass-ocean-tests-baroclinic-channel-initial-state-initialstate"]], "compass.ocean.tests.baroclinic_channel.initial_state.InitialState.run": [[291, "compass-ocean-tests-baroclinic-channel-initial-state-initialstate-run"]], "compass.ocean.tests.baroclinic_channel.initial_state.InitialState.setup": [[292, "compass-ocean-tests-baroclinic-channel-initial-state-initialstate-setup"]], "compass.ocean.tests.baroclinic_channel.restart_test.RestartTest": [[293, "compass-ocean-tests-baroclinic-channel-restart-test-restarttest"]], "compass.ocean.tests.baroclinic_channel.restart_test.RestartTest.configure": [[294, "compass-ocean-tests-baroclinic-channel-restart-test-restarttest-configure"]], "compass.ocean.tests.baroclinic_channel.restart_test.RestartTest.run": [[295, "compass-ocean-tests-baroclinic-channel-restart-test-restarttest-run"]], "compass.ocean.tests.baroclinic_channel.rpe_test.RpeTest": [[296, "compass-ocean-tests-baroclinic-channel-rpe-test-rpetest"]], "compass.ocean.tests.baroclinic_channel.rpe_test.RpeTest.configure": [[297, "compass-ocean-tests-baroclinic-channel-rpe-test-rpetest-configure"]], "compass.ocean.tests.baroclinic_channel.rpe_test.RpeTest.run": [[298, "compass-ocean-tests-baroclinic-channel-rpe-test-rpetest-run"]], "compass.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis": [[299, "compass-ocean-tests-baroclinic-channel-rpe-test-analysis-analysis"]], "compass.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.run": [[300, "compass-ocean-tests-baroclinic-channel-rpe-test-analysis-analysis-run"]], "compass.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.setup": [[301, "compass-ocean-tests-baroclinic-channel-rpe-test-analysis-analysis-setup"]], "compass.ocean.tests.baroclinic_channel.threads_test.ThreadsTest": [[302, "compass-ocean-tests-baroclinic-channel-threads-test-threadstest"]], "compass.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.configure": [[303, "compass-ocean-tests-baroclinic-channel-threads-test-threadstest-configure"]], "compass.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.run": [[304, "compass-ocean-tests-baroclinic-channel-threads-test-threadstest-run"]], "compass.ocean.tests.dam_break.DamBreak": [[305, "compass-ocean-tests-dam-break-dambreak"]], "compass.ocean.tests.dam_break.default.Default": [[306, "compass-ocean-tests-dam-break-default-default"]], "compass.ocean.tests.dam_break.default.Default.configure": [[307, "compass-ocean-tests-dam-break-default-default-configure"]], "compass.ocean.tests.dam_break.forward.Forward": [[308, "compass-ocean-tests-dam-break-forward-forward"]], "compass.ocean.tests.dam_break.forward.Forward.run": [[309, "compass-ocean-tests-dam-break-forward-forward-run"]], "compass.ocean.tests.dam_break.initial_state.InitialState": [[310, "compass-ocean-tests-dam-break-initial-state-initialstate"]], "compass.ocean.tests.dam_break.initial_state.InitialState.run": [[311, "compass-ocean-tests-dam-break-initial-state-initialstate-run"]], "compass.ocean.tests.dam_break.viz.Viz": [[312, "compass-ocean-tests-dam-break-viz-viz"]], "compass.ocean.tests.dam_break.viz.Viz.run": [[313, "compass-ocean-tests-dam-break-viz-viz-run"]], "compass.ocean.tests.drying_slope.DryingSlope": [[314, "compass-ocean-tests-drying-slope-dryingslope"]], "compass.ocean.tests.drying_slope.default.Default": [[315, "compass-ocean-tests-drying-slope-default-default"]], "compass.ocean.tests.drying_slope.default.Default.configure": [[316, "compass-ocean-tests-drying-slope-default-default-configure"]], "compass.ocean.tests.drying_slope.forward.Forward": [[317, "compass-ocean-tests-drying-slope-forward-forward"]], "compass.ocean.tests.drying_slope.forward.Forward.run": [[318, "compass-ocean-tests-drying-slope-forward-forward-run"]], "compass.ocean.tests.drying_slope.initial_state.InitialState": [[319, "compass-ocean-tests-drying-slope-initial-state-initialstate"]], "compass.ocean.tests.drying_slope.initial_state.InitialState.run": [[320, "compass-ocean-tests-drying-slope-initial-state-initialstate-run"]], "compass.ocean.tests.drying_slope.viz.Viz": [[321, "compass-ocean-tests-drying-slope-viz-viz"]], "compass.ocean.tests.drying_slope.viz.Viz.run": [[322, "compass-ocean-tests-drying-slope-viz-viz-run"]], "compass.ocean.tests.global_convergence.GlobalConvergence": [[323, "compass-ocean-tests-global-convergence-globalconvergence"]], "compass.ocean.tests.global_convergence.cosine_bell.CosineBell": [[324, "compass-ocean-tests-global-convergence-cosine-bell-cosinebell"]], "compass.ocean.tests.global_convergence.cosine_bell.CosineBell.configure": [[325, "compass-ocean-tests-global-convergence-cosine-bell-cosinebell-configure"]], "compass.ocean.tests.global_convergence.cosine_bell.CosineBell.run": [[326, "compass-ocean-tests-global-convergence-cosine-bell-cosinebell-run"]], "compass.ocean.tests.global_convergence.cosine_bell.analysis.Analysis": [[327, "compass-ocean-tests-global-convergence-cosine-bell-analysis-analysis"]], "compass.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rmse": [[328, "compass-ocean-tests-global-convergence-cosine-bell-analysis-analysis-rmse"]], "compass.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.run": [[329, "compass-ocean-tests-global-convergence-cosine-bell-analysis-analysis-run"]], "compass.ocean.tests.global_convergence.cosine_bell.forward.Forward": [[330, "compass-ocean-tests-global-convergence-cosine-bell-forward-forward"]], "compass.ocean.tests.global_convergence.cosine_bell.forward.Forward.get_dt": [[331, "compass-ocean-tests-global-convergence-cosine-bell-forward-forward-get-dt"]], "compass.ocean.tests.global_convergence.cosine_bell.forward.Forward.run": [[332, "compass-ocean-tests-global-convergence-cosine-bell-forward-forward-run"]], "compass.ocean.tests.global_convergence.cosine_bell.forward.Forward.setup": [[333, "compass-ocean-tests-global-convergence-cosine-bell-forward-forward-setup"]], "compass.ocean.tests.global_convergence.cosine_bell.init.Init": [[334, "compass-ocean-tests-global-convergence-cosine-bell-init-init"]], "compass.ocean.tests.global_convergence.cosine_bell.init.Init.run": [[335, "compass-ocean-tests-global-convergence-cosine-bell-init-init-run"]], "compass.ocean.tests.global_ocean.GlobalOcean": [[336, "compass-ocean-tests-global-ocean-globalocean"]], "compass.ocean.tests.global_ocean.analysis_test.AnalysisTest": [[337, "compass-ocean-tests-global-ocean-analysis-test-analysistest"]], "compass.ocean.tests.global_ocean.analysis_test.AnalysisTest.configure": [[338, "compass-ocean-tests-global-ocean-analysis-test-analysistest-configure"]], "compass.ocean.tests.global_ocean.analysis_test.AnalysisTest.run": [[339, "compass-ocean-tests-global-ocean-analysis-test-analysistest-run"]], "compass.ocean.tests.global_ocean.configure": [[340, "module-compass.ocean.tests.global_ocean.configure"]], "compass.ocean.tests.global_ocean.configure.configure_global_ocean": [[341, "compass-ocean-tests-global-ocean-configure-configure-global-ocean"]], "compass.ocean.tests.global_ocean.daily_output_test.DailyOutputTest": [[342, "compass-ocean-tests-global-ocean-daily-output-test-dailyoutputtest"]], "compass.ocean.tests.global_ocean.daily_output_test.DailyOutputTest.configure": [[343, "compass-ocean-tests-global-ocean-daily-output-test-dailyoutputtest-configure"]], "compass.ocean.tests.global_ocean.daily_output_test.DailyOutputTest.run": [[344, "compass-ocean-tests-global-ocean-daily-output-test-dailyoutputtest-run"]], "compass.ocean.tests.global_ocean.decomp_test.DecompTest": [[345, "compass-ocean-tests-global-ocean-decomp-test-decomptest"]], "compass.ocean.tests.global_ocean.decomp_test.DecompTest.configure": [[346, "compass-ocean-tests-global-ocean-decomp-test-decomptest-configure"]], "compass.ocean.tests.global_ocean.decomp_test.DecompTest.run": [[347, "compass-ocean-tests-global-ocean-decomp-test-decomptest-run"]], "compass.ocean.tests.global_ocean.dynamic_adjustment.DynamicAdjustment": [[348, "compass-ocean-tests-global-ocean-dynamic-adjustment-dynamicadjustment"]], "compass.ocean.tests.global_ocean.dynamic_adjustment.DynamicAdjustment.run": [[349, "compass-ocean-tests-global-ocean-dynamic-adjustment-dynamicadjustment-run"]], "compass.ocean.tests.global_ocean.files_for_e3sm.FilesForE3SM": [[350, "compass-ocean-tests-global-ocean-files-for-e3sm-filesfore3sm"]], "compass.ocean.tests.global_ocean.files_for_e3sm.FilesForE3SM.configure": [[351, "compass-ocean-tests-global-ocean-files-for-e3sm-filesfore3sm-configure"]], "compass.ocean.tests.global_ocean.files_for_e3sm.FilesForE3SM.run": [[352, "compass-ocean-tests-global-ocean-files-for-e3sm-filesfore3sm-run"]], "compass.ocean.tests.global_ocean.files_for_e3sm.diagnostics_files.DiagnosticsFiles": [[353, "compass-ocean-tests-global-ocean-files-for-e3sm-diagnostics-files-diagnosticsfiles"]], "compass.ocean.tests.global_ocean.files_for_e3sm.diagnostics_files.DiagnosticsFiles.run": [[354, "compass-ocean-tests-global-ocean-files-for-e3sm-diagnostics-files-diagnosticsfiles-run"]], "compass.ocean.tests.global_ocean.files_for_e3sm.ocean_graph_partition.OceanGraphPartition": [[355, "compass-ocean-tests-global-ocean-files-for-e3sm-ocean-graph-partition-oceangraphpartition"]], "compass.ocean.tests.global_ocean.files_for_e3sm.ocean_graph_partition.OceanGraphPartition.run": [[356, "compass-ocean-tests-global-ocean-files-for-e3sm-ocean-graph-partition-oceangraphpartition-run"]], "compass.ocean.tests.global_ocean.files_for_e3sm.ocean_initial_condition.OceanInitialCondition": [[357, "compass-ocean-tests-global-ocean-files-for-e3sm-ocean-initial-condition-oceaninitialcondition"]], "compass.ocean.tests.global_ocean.files_for_e3sm.ocean_initial_condition.OceanInitialCondition.run": [[358, "compass-ocean-tests-global-ocean-files-for-e3sm-ocean-initial-condition-oceaninitialcondition-run"]], "compass.ocean.tests.global_ocean.files_for_e3sm.scrip.Scrip": [[359, "compass-ocean-tests-global-ocean-files-for-e3sm-scrip-scrip"]], "compass.ocean.tests.global_ocean.files_for_e3sm.scrip.Scrip.run": [[360, "compass-ocean-tests-global-ocean-files-for-e3sm-scrip-scrip-run"]], "compass.ocean.tests.global_ocean.files_for_e3sm.seaice_initial_condition.SeaiceInitialCondition": [[361, "compass-ocean-tests-global-ocean-files-for-e3sm-seaice-initial-condition-seaiceinitialcondition"]], "compass.ocean.tests.global_ocean.files_for_e3sm.seaice_initial_condition.SeaiceInitialCondition.run": [[362, "compass-ocean-tests-global-ocean-files-for-e3sm-seaice-initial-condition-seaiceinitialcondition-run"]], "compass.ocean.tests.global_ocean.forward.ForwardStep": [[363, "compass-ocean-tests-global-ocean-forward-forwardstep"]], "compass.ocean.tests.global_ocean.forward.ForwardStep.run": [[364, "compass-ocean-tests-global-ocean-forward-forwardstep-run"]], "compass.ocean.tests.global_ocean.forward.ForwardStep.setup": [[365, "compass-ocean-tests-global-ocean-forward-forwardstep-setup"]], "compass.ocean.tests.global_ocean.forward.ForwardTestCase": [[366, "compass-ocean-tests-global-ocean-forward-forwardtestcase"]], "compass.ocean.tests.global_ocean.forward.ForwardTestCase.configure": [[367, "compass-ocean-tests-global-ocean-forward-forwardtestcase-configure"]], "compass.ocean.tests.global_ocean.forward.ForwardTestCase.run": [[368, "compass-ocean-tests-global-ocean-forward-forwardtestcase-run"]], "compass.ocean.tests.global_ocean.init.Init": [[369, "compass-ocean-tests-global-ocean-init-init"]], "compass.ocean.tests.global_ocean.init.Init.configure": [[370, "compass-ocean-tests-global-ocean-init-init-configure"]], "compass.ocean.tests.global_ocean.init.Init.run": [[371, "compass-ocean-tests-global-ocean-init-init-run"]], "compass.ocean.tests.global_ocean.init.initial_state.InitialState": [[372, "compass-ocean-tests-global-ocean-init-initial-state-initialstate"]], "compass.ocean.tests.global_ocean.init.initial_state.InitialState.run": [[373, "compass-ocean-tests-global-ocean-init-initial-state-initialstate-run"]], "compass.ocean.tests.global_ocean.init.initial_state.InitialState.setup": [[374, "compass-ocean-tests-global-ocean-init-initial-state-initialstate-setup"]], "compass.ocean.tests.global_ocean.init.ssh_adjustment.SshAdjustment": [[375, "compass-ocean-tests-global-ocean-init-ssh-adjustment-sshadjustment"]], "compass.ocean.tests.global_ocean.init.ssh_adjustment.SshAdjustment.run": [[376, "compass-ocean-tests-global-ocean-init-ssh-adjustment-sshadjustment-run"]], "compass.ocean.tests.global_ocean.init.ssh_adjustment.SshAdjustment.setup": [[377, "compass-ocean-tests-global-ocean-init-ssh-adjustment-sshadjustment-setup"]], "compass.ocean.tests.global_ocean.mesh.Mesh": [[378, "compass-ocean-tests-global-ocean-mesh-mesh"]], "compass.ocean.tests.global_ocean.mesh.Mesh.configure": [[379, "compass-ocean-tests-global-ocean-mesh-mesh-configure"]], "compass.ocean.tests.global_ocean.mesh.Mesh.run": [[380, "compass-ocean-tests-global-ocean-mesh-mesh-run"]], "compass.ocean.tests.global_ocean.mesh.ec30to60.EC30to60BaseMesh": [[381, "compass-ocean-tests-global-ocean-mesh-ec30to60-ec30to60basemesh"]], "compass.ocean.tests.global_ocean.mesh.ec30to60.EC30to60BaseMesh.build_cell_width_lat_lon": [[382, "compass-ocean-tests-global-ocean-mesh-ec30to60-ec30to60basemesh-build-cell-width-lat-lon"]], "compass.ocean.tests.global_ocean.mesh.ec30to60.dynamic_adjustment.EC30to60DynamicAdjustment": [[383, "compass-ocean-tests-global-ocean-mesh-ec30to60-dynamic-adjustment-ec30to60dynamicadjustment"]], "compass.ocean.tests.global_ocean.mesh.ec30to60.dynamic_adjustment.EC30to60DynamicAdjustment.configure": [[384, "compass-ocean-tests-global-ocean-mesh-ec30to60-dynamic-adjustment-ec30to60dynamicadjustment-configure"]], "compass.ocean.tests.global_ocean.mesh.ec30to60.dynamic_adjustment.EC30to60DynamicAdjustment.run": [[385, "compass-ocean-tests-global-ocean-mesh-ec30to60-dynamic-adjustment-ec30to60dynamicadjustment-run"]], "compass.ocean.tests.global_ocean.mesh.qu240.dynamic_adjustment.QU240DynamicAdjustment": [[386, "compass-ocean-tests-global-ocean-mesh-qu240-dynamic-adjustment-qu240dynamicadjustment"]], "compass.ocean.tests.global_ocean.mesh.qu240.dynamic_adjustment.QU240DynamicAdjustment.configure": [[387, "compass-ocean-tests-global-ocean-mesh-qu240-dynamic-adjustment-qu240dynamicadjustment-configure"]], "compass.ocean.tests.global_ocean.mesh.qu240.dynamic_adjustment.QU240DynamicAdjustment.run": [[388, "compass-ocean-tests-global-ocean-mesh-qu240-dynamic-adjustment-qu240dynamicadjustment-run"]], "compass.ocean.tests.global_ocean.mesh.so12to60.SO12to60BaseMesh": [[389, "compass-ocean-tests-global-ocean-mesh-so12to60-so12to60basemesh"]], "compass.ocean.tests.global_ocean.mesh.so12to60.SO12to60BaseMesh.build_cell_width_lat_lon": [[390, "compass-ocean-tests-global-ocean-mesh-so12to60-so12to60basemesh-build-cell-width-lat-lon"]], "compass.ocean.tests.global_ocean.mesh.so12to60.dynamic_adjustment.SO12to60DynamicAdjustment": [[391, "compass-ocean-tests-global-ocean-mesh-so12to60-dynamic-adjustment-so12to60dynamicadjustment"]], "compass.ocean.tests.global_ocean.mesh.so12to60.dynamic_adjustment.SO12to60DynamicAdjustment.configure": [[392, "compass-ocean-tests-global-ocean-mesh-so12to60-dynamic-adjustment-so12to60dynamicadjustment-configure"]], "compass.ocean.tests.global_ocean.mesh.so12to60.dynamic_adjustment.SO12to60DynamicAdjustment.run": [[393, "compass-ocean-tests-global-ocean-mesh-so12to60-dynamic-adjustment-so12to60dynamicadjustment-run"]], "compass.ocean.tests.global_ocean.mesh.wc14.WC14BaseMesh": [[394, "compass-ocean-tests-global-ocean-mesh-wc14-wc14basemesh"]], "compass.ocean.tests.global_ocean.mesh.wc14.WC14BaseMesh.build_cell_width_lat_lon": [[395, "compass-ocean-tests-global-ocean-mesh-wc14-wc14basemesh-build-cell-width-lat-lon"]], "compass.ocean.tests.global_ocean.mesh.wc14.dynamic_adjustment.WC14DynamicAdjustment": [[396, "compass-ocean-tests-global-ocean-mesh-wc14-dynamic-adjustment-wc14dynamicadjustment"]], "compass.ocean.tests.global_ocean.mesh.wc14.dynamic_adjustment.WC14DynamicAdjustment.configure": [[397, "compass-ocean-tests-global-ocean-mesh-wc14-dynamic-adjustment-wc14dynamicadjustment-configure"]], "compass.ocean.tests.global_ocean.mesh.wc14.dynamic_adjustment.WC14DynamicAdjustment.run": [[398, "compass-ocean-tests-global-ocean-mesh-wc14-dynamic-adjustment-wc14dynamicadjustment-run"]], "compass.ocean.tests.global_ocean.metadata.add_mesh_and_init_metadata": [[399, "compass-ocean-tests-global-ocean-metadata-add-mesh-and-init-metadata"]], "compass.ocean.tests.global_ocean.metadata.get_e3sm_mesh_names": [[400, "compass-ocean-tests-global-ocean-metadata-get-e3sm-mesh-names"]], "compass.ocean.tests.global_ocean.performance_test.PerformanceTest": [[401, "compass-ocean-tests-global-ocean-performance-test-performancetest"]], "compass.ocean.tests.global_ocean.performance_test.PerformanceTest.configure": [[402, "compass-ocean-tests-global-ocean-performance-test-performancetest-configure"]], "compass.ocean.tests.global_ocean.performance_test.PerformanceTest.run": [[403, "compass-ocean-tests-global-ocean-performance-test-performancetest-run"]], "compass.ocean.tests.global_ocean.restart_test.RestartTest": [[404, "compass-ocean-tests-global-ocean-restart-test-restarttest"]], "compass.ocean.tests.global_ocean.restart_test.RestartTest.configure": [[405, "compass-ocean-tests-global-ocean-restart-test-restarttest-configure"]], "compass.ocean.tests.global_ocean.restart_test.RestartTest.run": [[406, "compass-ocean-tests-global-ocean-restart-test-restarttest-run"]], "compass.ocean.tests.global_ocean.threads_test.ThreadsTest": [[407, "compass-ocean-tests-global-ocean-threads-test-threadstest"]], "compass.ocean.tests.global_ocean.threads_test.ThreadsTest.configure": [[408, "compass-ocean-tests-global-ocean-threads-test-threadstest-configure"]], "compass.ocean.tests.global_ocean.threads_test.ThreadsTest.run": [[409, "compass-ocean-tests-global-ocean-threads-test-threadstest-run"]], "compass.ocean.tests.gotm.Gotm": [[410, "compass-ocean-tests-gotm-gotm"]], "compass.ocean.tests.gotm.default.Default": [[411, "compass-ocean-tests-gotm-default-default"]], "compass.ocean.tests.gotm.default.Default.validate": [[412, "compass-ocean-tests-gotm-default-default-validate"]], "compass.ocean.tests.gotm.default.analysis.Analysis": [[413, "compass-ocean-tests-gotm-default-analysis-analysis"]], "compass.ocean.tests.gotm.default.analysis.Analysis.run": [[414, "compass-ocean-tests-gotm-default-analysis-analysis-run"]], "compass.ocean.tests.gotm.default.forward.Forward": [[415, "compass-ocean-tests-gotm-default-forward-forward"]], "compass.ocean.tests.gotm.default.forward.Forward.run": [[416, "compass-ocean-tests-gotm-default-forward-forward-run"]], "compass.ocean.tests.gotm.default.init.Init": [[417, "compass-ocean-tests-gotm-default-init-init"]], "compass.ocean.tests.gotm.default.init.Init.run": [[418, "compass-ocean-tests-gotm-default-init-init-run"]], "compass.ocean.tests.hurricane.Hurricane": [[419, "compass-ocean-tests-hurricane-hurricane"]], "compass.ocean.tests.hurricane.analysis.Analysis": [[420, "compass-ocean-tests-hurricane-analysis-analysis"]], "compass.ocean.tests.hurricane.analysis.Analysis.read_pointstats": [[421, "compass-ocean-tests-hurricane-analysis-analysis-read-pointstats"]], "compass.ocean.tests.hurricane.analysis.Analysis.read_station_data": [[422, "compass-ocean-tests-hurricane-analysis-analysis-read-station-data"]], "compass.ocean.tests.hurricane.analysis.Analysis.read_station_file": [[423, "compass-ocean-tests-hurricane-analysis-analysis-read-station-file"]], "compass.ocean.tests.hurricane.analysis.Analysis.run": [[424, "compass-ocean-tests-hurricane-analysis-analysis-run"]], "compass.ocean.tests.hurricane.analysis.Analysis.setup": [[425, "compass-ocean-tests-hurricane-analysis-analysis-setup"]], "compass.ocean.tests.hurricane.configure": [[426, "module-compass.ocean.tests.hurricane.configure"]], "compass.ocean.tests.hurricane.forward.Forward": [[427, "compass-ocean-tests-hurricane-forward-forward"]], "compass.ocean.tests.hurricane.forward.Forward.configure": [[428, "compass-ocean-tests-hurricane-forward-forward-configure"]], "compass.ocean.tests.hurricane.forward.Forward.run": [[429, "compass-ocean-tests-hurricane-forward-forward-run"]], "compass.ocean.tests.hurricane.forward.forward.ForwardStep": [[430, "compass-ocean-tests-hurricane-forward-forward-forwardstep"]], "compass.ocean.tests.hurricane.forward.forward.ForwardStep.run": [[431, "compass-ocean-tests-hurricane-forward-forward-forwardstep-run"]], "compass.ocean.tests.hurricane.forward.forward.ForwardStep.setup": [[432, "compass-ocean-tests-hurricane-forward-forward-forwardstep-setup"]], "compass.ocean.tests.hurricane.init.Init": [[433, "compass-ocean-tests-hurricane-init-init"]], "compass.ocean.tests.hurricane.init.Init.configure": [[434, "compass-ocean-tests-hurricane-init-init-configure"]], "compass.ocean.tests.hurricane.init.Init.run": [[435, "compass-ocean-tests-hurricane-init-init-run"]], "compass.ocean.tests.hurricane.init.create_pointstats_file.CreatePointstatsFile": [[436, "compass-ocean-tests-hurricane-init-create-pointstats-file-createpointstatsfile"]], "compass.ocean.tests.hurricane.init.create_pointstats_file.CreatePointstatsFile.create_pointstats_file": [[437, "compass-ocean-tests-hurricane-init-create-pointstats-file-createpointstatsfile-create-pointstats-file"]], "compass.ocean.tests.hurricane.init.create_pointstats_file.CreatePointstatsFile.run": [[438, "compass-ocean-tests-hurricane-init-create-pointstats-file-createpointstatsfile-run"]], "compass.ocean.tests.hurricane.init.initial_state.InitialState": [[439, "compass-ocean-tests-hurricane-init-initial-state-initialstate"]], "compass.ocean.tests.hurricane.init.initial_state.InitialState.run": [[440, "compass-ocean-tests-hurricane-init-initial-state-initialstate-run"]], "compass.ocean.tests.hurricane.init.initial_state.InitialState.setup": [[441, "compass-ocean-tests-hurricane-init-initial-state-initialstate-setup"]], "compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing": [[442, "compass-ocean-tests-hurricane-init-interpolate-atm-forcing-interpolateatmforcing"]], "compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing.interpolate_data_to_grid": [[443, "compass-ocean-tests-hurricane-init-interpolate-atm-forcing-interpolateatmforcing-interpolate-data-to-grid"]], "compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing.plot_interp_data": [[444, "compass-ocean-tests-hurricane-init-interpolate-atm-forcing-interpolateatmforcing-plot-interp-data"]], "compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing.run": [[445, "compass-ocean-tests-hurricane-init-interpolate-atm-forcing-interpolateatmforcing-run"]], "compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing.write_to_file": [[446, "compass-ocean-tests-hurricane-init-interpolate-atm-forcing-interpolateatmforcing-write-to-file"]], "compass.ocean.tests.hurricane.mesh.Mesh": [[447, "compass-ocean-tests-hurricane-mesh-mesh"]], "compass.ocean.tests.hurricane.mesh.Mesh.configure": [[448, "compass-ocean-tests-hurricane-mesh-mesh-configure"]], "compass.ocean.tests.hurricane.mesh.Mesh.run": [[449, "compass-ocean-tests-hurricane-mesh-mesh-run"]], "compass.ocean.tests.hurricane.mesh.dequ120at30cr10rr2.DEQU120at30cr10rr2BaseMesh": [[450, "compass-ocean-tests-hurricane-mesh-dequ120at30cr10rr2-dequ120at30cr10rr2basemesh"]], "compass.ocean.tests.hurricane.mesh.dequ120at30cr10rr2.DEQU120at30cr10rr2BaseMesh.build_cell_width_lat_lon": [[451, "compass-ocean-tests-hurricane-mesh-dequ120at30cr10rr2-dequ120at30cr10rr2basemesh-build-cell-width-lat-lon"]], "compass.ocean.tests.ice_shelf_2d.IceShelf2d": [[452, "compass-ocean-tests-ice-shelf-2d-iceshelf2d"]], "compass.ocean.tests.ice_shelf_2d.configure": [[453, "compass-ocean-tests-ice-shelf-2d-configure"]], "compass.ocean.tests.ice_shelf_2d.default.Default": [[454, "compass-ocean-tests-ice-shelf-2d-default-default"]], "compass.ocean.tests.ice_shelf_2d.default.Default.configure": [[455, "compass-ocean-tests-ice-shelf-2d-default-default-configure"]], "compass.ocean.tests.ice_shelf_2d.default.Default.run": [[456, "compass-ocean-tests-ice-shelf-2d-default-default-run"]], "compass.ocean.tests.ice_shelf_2d.forward.Forward": [[457, "compass-ocean-tests-ice-shelf-2d-forward-forward"]], "compass.ocean.tests.ice_shelf_2d.forward.Forward.run": [[458, "compass-ocean-tests-ice-shelf-2d-forward-forward-run"]], "compass.ocean.tests.ice_shelf_2d.forward.Forward.setup": [[459, "compass-ocean-tests-ice-shelf-2d-forward-forward-setup"]], "compass.ocean.tests.ice_shelf_2d.initial_state.InitialState": [[460, "compass-ocean-tests-ice-shelf-2d-initial-state-initialstate"]], "compass.ocean.tests.ice_shelf_2d.initial_state.InitialState.run": [[461, "compass-ocean-tests-ice-shelf-2d-initial-state-initialstate-run"]], "compass.ocean.tests.ice_shelf_2d.restart_test.RestartTest": [[462, "compass-ocean-tests-ice-shelf-2d-restart-test-restarttest"]], "compass.ocean.tests.ice_shelf_2d.restart_test.RestartTest.configure": [[463, "compass-ocean-tests-ice-shelf-2d-restart-test-restarttest-configure"]], "compass.ocean.tests.ice_shelf_2d.restart_test.RestartTest.run": [[464, "compass-ocean-tests-ice-shelf-2d-restart-test-restarttest-run"]], "compass.ocean.tests.ice_shelf_2d.ssh_adjustment.SshAdjustment": [[465, "compass-ocean-tests-ice-shelf-2d-ssh-adjustment-sshadjustment"]], "compass.ocean.tests.ice_shelf_2d.ssh_adjustment.SshAdjustment.run": [[466, "compass-ocean-tests-ice-shelf-2d-ssh-adjustment-sshadjustment-run"]], "compass.ocean.tests.ice_shelf_2d.ssh_adjustment.SshAdjustment.setup": [[467, "compass-ocean-tests-ice-shelf-2d-ssh-adjustment-sshadjustment-setup"]], "compass.ocean.tests.ice_shelf_2d.viz.Viz": [[468, "compass-ocean-tests-ice-shelf-2d-viz-viz"]], "compass.ocean.tests.ice_shelf_2d.viz.Viz.run": [[469, "compass-ocean-tests-ice-shelf-2d-viz-viz-run"]], "compass.ocean.tests.internal_wave.InternalWave": [[470, "compass-ocean-tests-internal-wave-internalwave"]], "compass.ocean.tests.internal_wave.default.Default": [[471, "compass-ocean-tests-internal-wave-default-default"]], "compass.ocean.tests.internal_wave.default.Default.validate": [[472, "compass-ocean-tests-internal-wave-default-default-validate"]], "compass.ocean.tests.internal_wave.forward.Forward": [[473, "compass-ocean-tests-internal-wave-forward-forward"]], "compass.ocean.tests.internal_wave.forward.Forward.run": [[474, "compass-ocean-tests-internal-wave-forward-forward-run"]], "compass.ocean.tests.internal_wave.initial_state.InitialState": [[475, "compass-ocean-tests-internal-wave-initial-state-initialstate"]], "compass.ocean.tests.internal_wave.initial_state.InitialState.run": [[476, "compass-ocean-tests-internal-wave-initial-state-initialstate-run"]], "compass.ocean.tests.internal_wave.rpe_test.RpeTest": [[477, "compass-ocean-tests-internal-wave-rpe-test-rpetest"]], "compass.ocean.tests.internal_wave.rpe_test.analysis.Analysis": [[478, "compass-ocean-tests-internal-wave-rpe-test-analysis-analysis"]], "compass.ocean.tests.internal_wave.rpe_test.analysis.Analysis.run": [[479, "compass-ocean-tests-internal-wave-rpe-test-analysis-analysis-run"]], "compass.ocean.tests.internal_wave.ten_day_test.TenDayTest": [[480, "compass-ocean-tests-internal-wave-ten-day-test-tendaytest"]], "compass.ocean.tests.internal_wave.ten_day_test.TenDayTest.validate": [[481, "compass-ocean-tests-internal-wave-ten-day-test-tendaytest-validate"]], "compass.ocean.tests.internal_wave.viz.Viz": [[482, "compass-ocean-tests-internal-wave-viz-viz"]], "compass.ocean.tests.internal_wave.viz.Viz.run": [[483, "compass-ocean-tests-internal-wave-viz-viz-run"]], "compass.ocean.tests.isomip_plus.IsomipPlus": [[484, "compass-ocean-tests-isomip-plus-isomipplus"]], "compass.ocean.tests.isomip_plus.evap.update_evaporation_flux": [[485, "compass-ocean-tests-isomip-plus-evap-update-evaporation-flux"]], "compass.ocean.tests.isomip_plus.forward.Forward": [[486, "compass-ocean-tests-isomip-plus-forward-forward"]], "compass.ocean.tests.isomip_plus.forward.Forward.run": [[487, "compass-ocean-tests-isomip-plus-forward-forward-run"]], "compass.ocean.tests.isomip_plus.forward.Forward.setup": [[488, "compass-ocean-tests-isomip-plus-forward-forward-setup"]], "compass.ocean.tests.isomip_plus.geom.interpolate_ocean_mask": [[489, "compass-ocean-tests-isomip-plus-geom-interpolate-ocean-mask"]], "compass.ocean.tests.isomip_plus.geom.process_input_geometry": [[490, "compass-ocean-tests-isomip-plus-geom-process-input-geometry"]], "compass.ocean.tests.isomip_plus.initial_state.InitialState": [[491, "compass-ocean-tests-isomip-plus-initial-state-initialstate"]], "compass.ocean.tests.isomip_plus.initial_state.InitialState.run": [[492, "compass-ocean-tests-isomip-plus-initial-state-initialstate-run"]], "compass.ocean.tests.isomip_plus.isomip_plus_test.IsomipPlusTest": [[493, "compass-ocean-tests-isomip-plus-isomip-plus-test-isomipplustest"]], "compass.ocean.tests.isomip_plus.isomip_plus_test.IsomipPlusTest.configure": [[494, "compass-ocean-tests-isomip-plus-isomip-plus-test-isomipplustest-configure"]], "compass.ocean.tests.isomip_plus.isomip_plus_test.IsomipPlusTest.run": [[495, "compass-ocean-tests-isomip-plus-isomip-plus-test-isomipplustest-run"]], "compass.ocean.tests.isomip_plus.misomip.Misomip": [[496, "compass-ocean-tests-isomip-plus-misomip-misomip"]], "compass.ocean.tests.isomip_plus.misomip.Misomip.run": [[497, "compass-ocean-tests-isomip-plus-misomip-misomip-run"]], "compass.ocean.tests.isomip_plus.ssh_adjustment.SshAdjustment": [[498, "compass-ocean-tests-isomip-plus-ssh-adjustment-sshadjustment"]], "compass.ocean.tests.isomip_plus.ssh_adjustment.SshAdjustment.run": [[499, "compass-ocean-tests-isomip-plus-ssh-adjustment-sshadjustment-run"]], "compass.ocean.tests.isomip_plus.ssh_adjustment.SshAdjustment.setup": [[500, "compass-ocean-tests-isomip-plus-ssh-adjustment-sshadjustment-setup"]], "compass.ocean.tests.isomip_plus.streamfunction.Streamfunction": [[501, "compass-ocean-tests-isomip-plus-streamfunction-streamfunction"]], "compass.ocean.tests.isomip_plus.streamfunction.Streamfunction.run": [[502, "compass-ocean-tests-isomip-plus-streamfunction-streamfunction-run"]], "compass.ocean.tests.isomip_plus.viz.Viz": [[503, "compass-ocean-tests-isomip-plus-viz-viz"]], "compass.ocean.tests.isomip_plus.viz.Viz.run": [[504, "compass-ocean-tests-isomip-plus-viz-viz-run"]], "compass.ocean.tests.isomip_plus.viz.file_complete": [[505, "compass-ocean-tests-isomip-plus-viz-file-complete"]], "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter": [[506, "compass-ocean-tests-isomip-plus-viz-plot-movieplotter"]], "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.images_to_movies": [[507, "compass-ocean-tests-isomip-plus-viz-plot-movieplotter-images-to-movies"]], "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_3d_field_top_bot_section": [[508, "compass-ocean-tests-isomip-plus-viz-plot-movieplotter-plot-3d-field-top-bot-section"]], "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_barotropic_streamfunction": [[509, "compass-ocean-tests-isomip-plus-viz-plot-movieplotter-plot-barotropic-streamfunction"]], "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_horiz_series": [[510, "compass-ocean-tests-isomip-plus-viz-plot-movieplotter-plot-horiz-series"]], "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_ice_shelf_boundary_variables": [[511, "compass-ocean-tests-isomip-plus-viz-plot-movieplotter-plot-ice-shelf-boundary-variables"]], "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_layer_interfaces": [[512, "compass-ocean-tests-isomip-plus-viz-plot-movieplotter-plot-layer-interfaces"]], "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_melt_rates": [[513, "compass-ocean-tests-isomip-plus-viz-plot-movieplotter-plot-melt-rates"]], "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_overturning_streamfunction": [[514, "compass-ocean-tests-isomip-plus-viz-plot-movieplotter-plot-overturning-streamfunction"]], "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_potential_density": [[515, "compass-ocean-tests-isomip-plus-viz-plot-movieplotter-plot-potential-density"]], "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_salinity": [[516, "compass-ocean-tests-isomip-plus-viz-plot-movieplotter-plot-salinity"]], "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_temperature": [[517, "compass-ocean-tests-isomip-plus-viz-plot-movieplotter-plot-temperature"]], "compass.ocean.tests.isomip_plus.viz.plot.TimeSeriesPlotter": [[518, "compass-ocean-tests-isomip-plus-viz-plot-timeseriesplotter"]], "compass.ocean.tests.isomip_plus.viz.plot.TimeSeriesPlotter.plot_melt_time_series": [[519, "compass-ocean-tests-isomip-plus-viz-plot-timeseriesplotter-plot-melt-time-series"]], "compass.ocean.tests.isomip_plus.viz.plot.TimeSeriesPlotter.plot_time_series": [[520, "compass-ocean-tests-isomip-plus-viz-plot-timeseriesplotter-plot-time-series"]], "compass.ocean.tests.merry_go_round.MerryGoRound": [[521, "compass-ocean-tests-merry-go-round-merrygoround"]], "compass.ocean.tests.merry_go_round.convergence_test.analysis.Analysis": [[522, "compass-ocean-tests-merry-go-round-convergence-test-analysis-analysis"]], "compass.ocean.tests.merry_go_round.convergence_test.analysis.Analysis.run": [[523, "compass-ocean-tests-merry-go-round-convergence-test-analysis-analysis-run"]], "compass.ocean.tests.merry_go_round.default.Default": [[524, "compass-ocean-tests-merry-go-round-default-default"]], "compass.ocean.tests.merry_go_round.default.Default.validate": [[525, "compass-ocean-tests-merry-go-round-default-default-validate"]], "compass.ocean.tests.merry_go_round.forward.Forward": [[526, "compass-ocean-tests-merry-go-round-forward-forward"]], "compass.ocean.tests.merry_go_round.forward.Forward.run": [[527, "compass-ocean-tests-merry-go-round-forward-forward-run"]], "compass.ocean.tests.merry_go_round.initial_state.InitialState": [[528, "compass-ocean-tests-merry-go-round-initial-state-initialstate"]], "compass.ocean.tests.merry_go_round.initial_state.InitialState.run": [[529, "compass-ocean-tests-merry-go-round-initial-state-initialstate-run"]], "compass.ocean.tests.merry_go_round.viz.Viz": [[530, "compass-ocean-tests-merry-go-round-viz-viz"]], "compass.ocean.tests.merry_go_round.viz.Viz.run": [[531, "compass-ocean-tests-merry-go-round-viz-viz-run"]], "compass.ocean.tests.planar_convergence.PlanarConvergence": [[532, "compass-ocean-tests-planar-convergence-planarconvergence"]], "compass.ocean.tests.planar_convergence.conv_init.ConvInit": [[533, "compass-ocean-tests-planar-convergence-conv-init-convinit"]], "compass.ocean.tests.planar_convergence.conv_init.ConvInit.run": [[534, "compass-ocean-tests-planar-convergence-conv-init-convinit-run"]], "compass.ocean.tests.planar_convergence.conv_test_case.ConvTestCase": [[535, "compass-ocean-tests-planar-convergence-conv-test-case-convtestcase"]], "compass.ocean.tests.planar_convergence.conv_test_case.ConvTestCase.configure": [[536, "compass-ocean-tests-planar-convergence-conv-test-case-convtestcase-configure"]], "compass.ocean.tests.planar_convergence.conv_test_case.ConvTestCase.run": [[537, "compass-ocean-tests-planar-convergence-conv-test-case-convtestcase-run"]], "compass.ocean.tests.planar_convergence.conv_test_case.ConvTestCase.update_cores": [[538, "compass-ocean-tests-planar-convergence-conv-test-case-convtestcase-update-cores"]], "compass.ocean.tests.planar_convergence.forward.Forward": [[539, "compass-ocean-tests-planar-convergence-forward-forward"]], "compass.ocean.tests.planar_convergence.forward.Forward.get_dt_duration": [[540, "compass-ocean-tests-planar-convergence-forward-forward-get-dt-duration"]], "compass.ocean.tests.planar_convergence.forward.Forward.run": [[541, "compass-ocean-tests-planar-convergence-forward-forward-run"]], "compass.ocean.tests.planar_convergence.forward.Forward.setup": [[542, "compass-ocean-tests-planar-convergence-forward-forward-setup"]], "compass.ocean.tests.planar_convergence.horizontal_advection.HorizontalAdvection": [[543, "compass-ocean-tests-planar-convergence-horizontal-advection-horizontaladvection"]], "compass.ocean.tests.planar_convergence.horizontal_advection.HorizontalAdvection.configure": [[544, "compass-ocean-tests-planar-convergence-horizontal-advection-horizontaladvection-configure"]], "compass.ocean.tests.planar_convergence.horizontal_advection.HorizontalAdvection.run": [[545, "compass-ocean-tests-planar-convergence-horizontal-advection-horizontaladvection-run"]], "compass.ocean.tests.planar_convergence.horizontal_advection.analysis.Analysis": [[546, "compass-ocean-tests-planar-convergence-horizontal-advection-analysis-analysis"]], "compass.ocean.tests.planar_convergence.horizontal_advection.analysis.Analysis.rmse": [[547, "compass-ocean-tests-planar-convergence-horizontal-advection-analysis-analysis-rmse"]], "compass.ocean.tests.planar_convergence.horizontal_advection.analysis.Analysis.run": [[548, "compass-ocean-tests-planar-convergence-horizontal-advection-analysis-analysis-run"]], "compass.ocean.tests.planar_convergence.horizontal_advection.init.Init": [[549, "compass-ocean-tests-planar-convergence-horizontal-advection-init-init"]], "compass.ocean.tests.planar_convergence.horizontal_advection.init.Init.run": [[550, "compass-ocean-tests-planar-convergence-horizontal-advection-init-init-run"]], "compass.ocean.tests.soma.Soma": [[551, "compass-ocean-tests-soma-soma"]], "compass.ocean.tests.soma.analysis.Analysis": [[552, "compass-ocean-tests-soma-analysis-analysis"]], "compass.ocean.tests.soma.analysis.Analysis.run": [[553, "compass-ocean-tests-soma-analysis-analysis-run"]], "compass.ocean.tests.soma.forward.Forward": [[554, "compass-ocean-tests-soma-forward-forward"]], "compass.ocean.tests.soma.forward.Forward.run": [[555, "compass-ocean-tests-soma-forward-forward-run"]], "compass.ocean.tests.soma.initial_state.InitialState": [[556, "compass-ocean-tests-soma-initial-state-initialstate"]], "compass.ocean.tests.soma.initial_state.InitialState.run": [[557, "compass-ocean-tests-soma-initial-state-initialstate-run"]], "compass.ocean.tests.soma.soma_test_case.SomaTestCase": [[558, "compass-ocean-tests-soma-soma-test-case-somatestcase"]], "compass.ocean.tests.soma.soma_test_case.SomaTestCase.validate": [[559, "compass-ocean-tests-soma-soma-test-case-somatestcase-validate"]], "compass.ocean.tests.sphere_transport.SphereTransport": [[560, "compass-ocean-tests-sphere-transport-spheretransport"]], "compass.ocean.tests.sphere_transport.correlated_tracers_2d.CorrelatedTracers2D": [[561, "compass-ocean-tests-sphere-transport-correlated-tracers-2d-correlatedtracers2d"]], "compass.ocean.tests.sphere_transport.correlated_tracers_2d.CorrelatedTracers2D.configure": [[562, "compass-ocean-tests-sphere-transport-correlated-tracers-2d-correlatedtracers2d-configure"]], "compass.ocean.tests.sphere_transport.correlated_tracers_2d.CorrelatedTracers2D.run": [[563, "compass-ocean-tests-sphere-transport-correlated-tracers-2d-correlatedtracers2d-run"]], "compass.ocean.tests.sphere_transport.correlated_tracers_2d.analysis.Analysis": [[564, "compass-ocean-tests-sphere-transport-correlated-tracers-2d-analysis-analysis"]], "compass.ocean.tests.sphere_transport.correlated_tracers_2d.analysis.Analysis.run": [[565, "compass-ocean-tests-sphere-transport-correlated-tracers-2d-analysis-analysis-run"]], "compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.Forward": [[566, "compass-ocean-tests-sphere-transport-correlated-tracers-2d-forward-forward"]], "compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.Forward.get_timestep_str": [[567, "compass-ocean-tests-sphere-transport-correlated-tracers-2d-forward-forward-get-timestep-str"]], "compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.Forward.run": [[568, "compass-ocean-tests-sphere-transport-correlated-tracers-2d-forward-forward-run"]], "compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.Forward.setup": [[569, "compass-ocean-tests-sphere-transport-correlated-tracers-2d-forward-forward-setup"]], "compass.ocean.tests.sphere_transport.correlated_tracers_2d.init.Init": [[570, "compass-ocean-tests-sphere-transport-correlated-tracers-2d-init-init"]], "compass.ocean.tests.sphere_transport.correlated_tracers_2d.init.Init.run": [[571, "compass-ocean-tests-sphere-transport-correlated-tracers-2d-init-init-run"]], "compass.ocean.tests.sphere_transport.correlated_tracers_2d.mesh.Mesh": [[572, "compass-ocean-tests-sphere-transport-correlated-tracers-2d-mesh-mesh"]], "compass.ocean.tests.sphere_transport.correlated_tracers_2d.mesh.Mesh.build_cell_width_lat_lon": [[573, "compass-ocean-tests-sphere-transport-correlated-tracers-2d-mesh-mesh-build-cell-width-lat-lon"]], "compass.ocean.tests.sphere_transport.correlated_tracers_2d.mesh.Mesh.run": [[574, "compass-ocean-tests-sphere-transport-correlated-tracers-2d-mesh-mesh-run"]], "compass.ocean.tests.sphere_transport.divergent_2d.Divergent2D": [[575, "compass-ocean-tests-sphere-transport-divergent-2d-divergent2d"]], "compass.ocean.tests.sphere_transport.divergent_2d.Divergent2D.configure": [[576, "compass-ocean-tests-sphere-transport-divergent-2d-divergent2d-configure"]], "compass.ocean.tests.sphere_transport.divergent_2d.Divergent2D.run": [[577, "compass-ocean-tests-sphere-transport-divergent-2d-divergent2d-run"]], "compass.ocean.tests.sphere_transport.divergent_2d.analysis.Analysis": [[578, "compass-ocean-tests-sphere-transport-divergent-2d-analysis-analysis"]], "compass.ocean.tests.sphere_transport.divergent_2d.analysis.Analysis.run": [[579, "compass-ocean-tests-sphere-transport-divergent-2d-analysis-analysis-run"]], "compass.ocean.tests.sphere_transport.divergent_2d.forward.Forward": [[580, "compass-ocean-tests-sphere-transport-divergent-2d-forward-forward"]], "compass.ocean.tests.sphere_transport.divergent_2d.forward.Forward.get_timestep_str": [[581, "compass-ocean-tests-sphere-transport-divergent-2d-forward-forward-get-timestep-str"]], "compass.ocean.tests.sphere_transport.divergent_2d.forward.Forward.run": [[582, "compass-ocean-tests-sphere-transport-divergent-2d-forward-forward-run"]], "compass.ocean.tests.sphere_transport.divergent_2d.forward.Forward.setup": [[583, "compass-ocean-tests-sphere-transport-divergent-2d-forward-forward-setup"]], "compass.ocean.tests.sphere_transport.divergent_2d.init.Init": [[584, "compass-ocean-tests-sphere-transport-divergent-2d-init-init"]], "compass.ocean.tests.sphere_transport.divergent_2d.init.Init.run": [[585, "compass-ocean-tests-sphere-transport-divergent-2d-init-init-run"]], "compass.ocean.tests.sphere_transport.divergent_2d.mesh.Mesh": [[586, "compass-ocean-tests-sphere-transport-divergent-2d-mesh-mesh"]], "compass.ocean.tests.sphere_transport.divergent_2d.mesh.Mesh.build_cell_width_lat_lon": [[587, "compass-ocean-tests-sphere-transport-divergent-2d-mesh-mesh-build-cell-width-lat-lon"]], "compass.ocean.tests.sphere_transport.divergent_2d.mesh.Mesh.run": [[588, "compass-ocean-tests-sphere-transport-divergent-2d-mesh-mesh-run"]], "compass.ocean.tests.sphere_transport.nondivergent_2d.Nondivergent2D": [[589, "compass-ocean-tests-sphere-transport-nondivergent-2d-nondivergent2d"]], "compass.ocean.tests.sphere_transport.nondivergent_2d.Nondivergent2D.configure": [[590, "compass-ocean-tests-sphere-transport-nondivergent-2d-nondivergent2d-configure"]], "compass.ocean.tests.sphere_transport.nondivergent_2d.Nondivergent2D.run": [[591, "compass-ocean-tests-sphere-transport-nondivergent-2d-nondivergent2d-run"]], "compass.ocean.tests.sphere_transport.nondivergent_2d.analysis.Analysis": [[592, "compass-ocean-tests-sphere-transport-nondivergent-2d-analysis-analysis"]], "compass.ocean.tests.sphere_transport.nondivergent_2d.analysis.Analysis.run": [[593, "compass-ocean-tests-sphere-transport-nondivergent-2d-analysis-analysis-run"]], "compass.ocean.tests.sphere_transport.nondivergent_2d.forward.Forward": [[594, "compass-ocean-tests-sphere-transport-nondivergent-2d-forward-forward"]], "compass.ocean.tests.sphere_transport.nondivergent_2d.forward.Forward.get_timestep_str": [[595, "compass-ocean-tests-sphere-transport-nondivergent-2d-forward-forward-get-timestep-str"]], "compass.ocean.tests.sphere_transport.nondivergent_2d.forward.Forward.run": [[596, "compass-ocean-tests-sphere-transport-nondivergent-2d-forward-forward-run"]], "compass.ocean.tests.sphere_transport.nondivergent_2d.forward.Forward.setup": [[597, "compass-ocean-tests-sphere-transport-nondivergent-2d-forward-forward-setup"]], "compass.ocean.tests.sphere_transport.nondivergent_2d.init.Init": [[598, "compass-ocean-tests-sphere-transport-nondivergent-2d-init-init"]], "compass.ocean.tests.sphere_transport.nondivergent_2d.init.Init.run": [[599, "compass-ocean-tests-sphere-transport-nondivergent-2d-init-init-run"]], "compass.ocean.tests.sphere_transport.nondivergent_2d.mesh.Mesh": [[600, "compass-ocean-tests-sphere-transport-nondivergent-2d-mesh-mesh"]], "compass.ocean.tests.sphere_transport.nondivergent_2d.mesh.Mesh.build_cell_width_lat_lon": [[601, "compass-ocean-tests-sphere-transport-nondivergent-2d-mesh-mesh-build-cell-width-lat-lon"]], "compass.ocean.tests.sphere_transport.nondivergent_2d.mesh.Mesh.run": [[602, "compass-ocean-tests-sphere-transport-nondivergent-2d-mesh-mesh-run"]], "compass.ocean.tests.sphere_transport.process_output.compute_convergence_rates": [[603, "compass-ocean-tests-sphere-transport-process-output-compute-convergence-rates"]], "compass.ocean.tests.sphere_transport.process_output.compute_error_from_output_ncfile": [[604, "compass-ocean-tests-sphere-transport-process-output-compute-error-from-output-ncfile"]], "compass.ocean.tests.sphere_transport.process_output.make_convergence_arrays": [[605, "compass-ocean-tests-sphere-transport-process-output-make-convergence-arrays"]], "compass.ocean.tests.sphere_transport.process_output.plot_convergence": [[606, "compass-ocean-tests-sphere-transport-process-output-plot-convergence"]], "compass.ocean.tests.sphere_transport.process_output.plot_filament": [[607, "compass-ocean-tests-sphere-transport-process-output-plot-filament"]], "compass.ocean.tests.sphere_transport.process_output.plot_over_and_undershoot_errors": [[608, "compass-ocean-tests-sphere-transport-process-output-plot-over-and-undershoot-errors"]], "compass.ocean.tests.sphere_transport.process_output.plot_sol": [[609, "compass-ocean-tests-sphere-transport-process-output-plot-sol"]], "compass.ocean.tests.sphere_transport.process_output.print_data_as_csv": [[610, "compass-ocean-tests-sphere-transport-process-output-print-data-as-csv"]], "compass.ocean.tests.sphere_transport.process_output.print_error_conv_table": [[611, "compass-ocean-tests-sphere-transport-process-output-print-error-conv-table"]], "compass.ocean.tests.sphere_transport.process_output.read_ncl_rgb_file": [[612, "compass-ocean-tests-sphere-transport-process-output-read-ncl-rgb-file"]], "compass.ocean.tests.sphere_transport.rotation_2d.Rotation2D": [[613, "compass-ocean-tests-sphere-transport-rotation-2d-rotation2d"]], "compass.ocean.tests.sphere_transport.rotation_2d.Rotation2D.configure": [[614, "compass-ocean-tests-sphere-transport-rotation-2d-rotation2d-configure"]], "compass.ocean.tests.sphere_transport.rotation_2d.Rotation2D.run": [[615, "compass-ocean-tests-sphere-transport-rotation-2d-rotation2d-run"]], "compass.ocean.tests.sphere_transport.rotation_2d.analysis.Analysis": [[616, "compass-ocean-tests-sphere-transport-rotation-2d-analysis-analysis"]], "compass.ocean.tests.sphere_transport.rotation_2d.analysis.Analysis.run": [[617, "compass-ocean-tests-sphere-transport-rotation-2d-analysis-analysis-run"]], "compass.ocean.tests.sphere_transport.rotation_2d.forward.Forward": [[618, "compass-ocean-tests-sphere-transport-rotation-2d-forward-forward"]], "compass.ocean.tests.sphere_transport.rotation_2d.forward.Forward.get_timestep_str": [[619, "compass-ocean-tests-sphere-transport-rotation-2d-forward-forward-get-timestep-str"]], "compass.ocean.tests.sphere_transport.rotation_2d.forward.Forward.run": [[620, "compass-ocean-tests-sphere-transport-rotation-2d-forward-forward-run"]], "compass.ocean.tests.sphere_transport.rotation_2d.forward.Forward.setup": [[621, "compass-ocean-tests-sphere-transport-rotation-2d-forward-forward-setup"]], "compass.ocean.tests.sphere_transport.rotation_2d.init.Init": [[622, "compass-ocean-tests-sphere-transport-rotation-2d-init-init"]], "compass.ocean.tests.sphere_transport.rotation_2d.init.Init.run": [[623, "compass-ocean-tests-sphere-transport-rotation-2d-init-init-run"]], "compass.ocean.tests.sphere_transport.rotation_2d.mesh.Mesh": [[624, "compass-ocean-tests-sphere-transport-rotation-2d-mesh-mesh"]], "compass.ocean.tests.sphere_transport.rotation_2d.mesh.Mesh.build_cell_width_lat_lon": [[625, "compass-ocean-tests-sphere-transport-rotation-2d-mesh-mesh-build-cell-width-lat-lon"]], "compass.ocean.tests.sphere_transport.rotation_2d.mesh.Mesh.run": [[626, "compass-ocean-tests-sphere-transport-rotation-2d-mesh-mesh-run"]], "compass.ocean.tests.tides.Tides": [[627, "compass-ocean-tests-tides-tides"]], "compass.ocean.tests.tides.analysis.Analysis": [[628, "compass-ocean-tests-tides-analysis-analysis"]], "compass.ocean.tests.tides.analysis.Analysis.append_tpxo_data": [[629, "compass-ocean-tests-tides-analysis-analysis-append-tpxo-data"]], "compass.ocean.tests.tides.analysis.Analysis.check_tpxo_data": [[630, "compass-ocean-tests-tides-analysis-analysis-check-tpxo-data"]], "compass.ocean.tests.tides.analysis.Analysis.plot": [[631, "compass-ocean-tests-tides-analysis-analysis-plot"]], "compass.ocean.tests.tides.analysis.Analysis.read_otps2_output": [[632, "compass-ocean-tests-tides-analysis-analysis-read-otps2-output"]], "compass.ocean.tests.tides.analysis.Analysis.run": [[633, "compass-ocean-tests-tides-analysis-analysis-run"]], "compass.ocean.tests.tides.analysis.Analysis.run_otps2": [[634, "compass-ocean-tests-tides-analysis-analysis-run-otps2"]], "compass.ocean.tests.tides.analysis.Analysis.setup": [[635, "compass-ocean-tests-tides-analysis-analysis-setup"]], "compass.ocean.tests.tides.analysis.Analysis.setup_otps2": [[636, "compass-ocean-tests-tides-analysis-analysis-setup-otps2"]], "compass.ocean.tests.tides.analysis.Analysis.write_coordinate_file": [[637, "compass-ocean-tests-tides-analysis-analysis-write-coordinate-file"]], "compass.ocean.tests.tides.configure": [[638, "module-compass.ocean.tests.tides.configure"]], "compass.ocean.tests.tides.forward.Forward": [[639, "compass-ocean-tests-tides-forward-forward"]], "compass.ocean.tests.tides.forward.Forward.configure": [[640, "compass-ocean-tests-tides-forward-forward-configure"]], "compass.ocean.tests.tides.forward.Forward.run": [[641, "compass-ocean-tests-tides-forward-forward-run"]], "compass.ocean.tests.tides.forward.forward.ForwardStep": [[642, "compass-ocean-tests-tides-forward-forward-forwardstep"]], "compass.ocean.tests.tides.forward.forward.ForwardStep.run": [[643, "compass-ocean-tests-tides-forward-forward-forwardstep-run"]], "compass.ocean.tests.tides.forward.forward.ForwardStep.setup": [[644, "compass-ocean-tests-tides-forward-forward-forwardstep-setup"]], "compass.ocean.tests.tides.init.Init": [[645, "compass-ocean-tests-tides-init-init"]], "compass.ocean.tests.tides.init.Init.configure": [[646, "compass-ocean-tests-tides-init-init-configure"]], "compass.ocean.tests.tides.init.Init.run": [[647, "compass-ocean-tests-tides-init-init-run"]], "compass.ocean.tests.tides.init.initial_state.InitialState": [[648, "compass-ocean-tests-tides-init-initial-state-initialstate"]], "compass.ocean.tests.tides.init.initial_state.InitialState.run": [[649, "compass-ocean-tests-tides-init-initial-state-initialstate-run"]], "compass.ocean.tests.tides.init.initial_state.InitialState.setup": [[650, "compass-ocean-tests-tides-init-initial-state-initialstate-setup"]], "compass.ocean.tests.tides.init.interpolate_wave_drag.InterpolateWaveDrag": [[651, "compass-ocean-tests-tides-init-interpolate-wave-drag-interpolatewavedrag"]], "compass.ocean.tests.tides.init.interpolate_wave_drag.InterpolateWaveDrag.interpolate_data_to_grid": [[652, "compass-ocean-tests-tides-init-interpolate-wave-drag-interpolatewavedrag-interpolate-data-to-grid"]], "compass.ocean.tests.tides.init.interpolate_wave_drag.InterpolateWaveDrag.plot_interp_data": [[653, "compass-ocean-tests-tides-init-interpolate-wave-drag-interpolatewavedrag-plot-interp-data"]], "compass.ocean.tests.tides.init.interpolate_wave_drag.InterpolateWaveDrag.run": [[654, "compass-ocean-tests-tides-init-interpolate-wave-drag-interpolatewavedrag-run"]], "compass.ocean.tests.tides.init.interpolate_wave_drag.InterpolateWaveDrag.write_to_file": [[655, "compass-ocean-tests-tides-init-interpolate-wave-drag-interpolatewavedrag-write-to-file"]], "compass.ocean.tests.tides.init.remap_bathymetry.RemapBathymetry": [[656, "compass-ocean-tests-tides-init-remap-bathymetry-remapbathymetry"]], "compass.ocean.tests.tides.init.remap_bathymetry.RemapBathymetry.run": [[657, "compass-ocean-tests-tides-init-remap-bathymetry-remapbathymetry-run"]], "compass.ocean.tests.tides.mesh.Mesh": [[658, "compass-ocean-tests-tides-mesh-mesh"]], "compass.ocean.tests.tides.mesh.Mesh.configure": [[659, "compass-ocean-tests-tides-mesh-mesh-configure"]], "compass.ocean.tests.tides.mesh.Mesh.run": [[660, "compass-ocean-tests-tides-mesh-mesh-run"]], "compass.ocean.tests.ziso.Ziso": [[661, "compass-ocean-tests-ziso-ziso"]], "compass.ocean.tests.ziso.ZisoTestCase": [[662, "compass-ocean-tests-ziso-zisotestcase"]], "compass.ocean.tests.ziso.ZisoTestCase.configure": [[663, "compass-ocean-tests-ziso-zisotestcase-configure"]], "compass.ocean.tests.ziso.ZisoTestCase.run": [[664, "compass-ocean-tests-ziso-zisotestcase-run"]], "compass.ocean.tests.ziso.configure": [[665, "compass-ocean-tests-ziso-configure"]], "compass.ocean.tests.ziso.forward.Forward": [[666, "compass-ocean-tests-ziso-forward-forward"]], "compass.ocean.tests.ziso.forward.Forward.run": [[667, "compass-ocean-tests-ziso-forward-forward-run"]], "compass.ocean.tests.ziso.forward.Forward.setup": [[668, "compass-ocean-tests-ziso-forward-forward-setup"]], "compass.ocean.tests.ziso.initial_state.InitialState": [[669, "compass-ocean-tests-ziso-initial-state-initialstate"]], "compass.ocean.tests.ziso.initial_state.InitialState.run": [[670, "compass-ocean-tests-ziso-initial-state-initialstate-run"]], "compass.ocean.tests.ziso.with_frazil.WithFrazil": [[671, "compass-ocean-tests-ziso-with-frazil-withfrazil"]], "compass.ocean.tests.ziso.with_frazil.WithFrazil.configure": [[672, "compass-ocean-tests-ziso-with-frazil-withfrazil-configure"]], "compass.ocean.tests.ziso.with_frazil.WithFrazil.run": [[673, "compass-ocean-tests-ziso-with-frazil-withfrazil-run"]], "compass.ocean.vertical.grid_1d.generate_1d_grid": [[674, "compass-ocean-vertical-grid-1d-generate-1d-grid"]], "compass.ocean.vertical.grid_1d.write_1d_grid": [[675, "compass-ocean-vertical-grid-1d-write-1d-grid"]], "compass.ocean.vertical.init_vertical_coord": [[676, "compass-ocean-vertical-init-vertical-coord"]], "compass.ocean.vertical.partial_cells.alter_bottom_depth": [[677, "compass-ocean-vertical-partial-cells-alter-bottom-depth"]], "compass.ocean.vertical.partial_cells.alter_ssh": [[678, "compass-ocean-vertical-partial-cells-alter-ssh"]], "compass.ocean.vertical.zlevel.compute_min_max_level_cell": [[679, "compass-ocean-vertical-zlevel-compute-min-max-level-cell"]], "compass.ocean.vertical.zlevel.compute_z_level_layer_thickness": [[680, "compass-ocean-vertical-zlevel-compute-z-level-layer-thickness"]], "compass.ocean.vertical.zlevel.compute_z_level_resting_thickness": [[681, "compass-ocean-vertical-zlevel-compute-z-level-resting-thickness"]], "compass.ocean.vertical.zlevel.init_z_level_vertical_coord": [[682, "compass-ocean-vertical-zlevel-init-z-level-vertical-coord"]], "compass.ocean.vertical.zstar.init_z_star_vertical_coord": [[683, "compass-ocean-vertical-zstar-init-z-star-vertical-coord"]], "Ocean core": [[684, "ocean-core"], [739, "ocean-core"]], "initial_state": [[685, "initial-state"], [686, "initial-state"], [687, "initial-state"], [691, "initial-state"], [692, "initial-state"], [694, "initial-state"], [695, "initial-state"], [696, "initial-state"], [698, "initial-state"], [701, "initial-state"], [702, "initial-state"]], "forward": [[685, "forward"], [686, "forward"], [687, "forward"], [688, "forward"], [690, "forward"], [691, "forward"], [692, "forward"], [694, "forward"], [695, "forward"], [696, "forward"], [697, "forward"], [698, "forward"], [699, "forward"], [699, "id3"], [699, "id7"], [699, "id11"], [701, "forward"], [702, "forward"]], "decomp_test": [[685, "decomp-test"], [741, "decomp-test"]], "threads_test": [[685, "threads-test"]], "rpe_test": [[685, "rpe-test"], [694, "rpe-test"], [741, "rpe-test"], [750, "rpe-test"]], "viz": [[686, "viz"], [687, "viz"], [692, "viz"], [695, "viz"]], "mesh types": [[688, "mesh-types"]], "init": [[688, "init"], [690, "init"], [697, "init"], [699, "init"], [699, "id2"], [699, "id6"], [699, "id10"], [700, "init"]], "analysis": [[688, "analysis"], [690, "analysis"], [691, "analysis"], [697, "analysis"], [698, "analysis"], [699, "analysis"], [699, "id4"], [699, "id8"], [699, "id12"], [700, "analysis"], [701, "analysis"]], "configure": [[689, "configure"]], "metadata": [[689, "metadata"]], "forward test case": [[689, "forward-test-case"], [757, "forward-test-case"]], "forward step": [[689, "forward-step"], [747, "forward-step"], [757, "forward-step"]], "Test cases": [[689, "test-cases"], [703, "test-cases"], [745, "test-cases"]], "mesh test case": [[689, "mesh-test-case"], [745, "mesh-test-case"], [747, "mesh-test-case"], [757, "mesh-test-case"]], "meshes": [[689, "meshes"]], "QU240 and QUwISC240": [[689, "qu240-and-quwisc240"], [689, "id1"]], "Icos240 and IcoswISC240": [[689, "icos240-and-icoswisc240"]], "EC30to60 and ECwISC30to60": [[689, "ec30to60-and-ecwisc30to60"], [689, "id2"]], "SOwISC12to60": [[689, "sowisc12to60"], [689, "id3"], [745, "sowisc12to60"]], "WC14": [[689, "wc14"], [689, "id4"], [745, "wc14"]], "init test case": [[689, "init-test-case"], [745, "init-test-case"], [747, "init-test-case"], [757, "init-test-case"]], "performance_test test case": [[689, "performance-test-test-case"], [745, "performance-test-test-case"]], "restart_test test case": [[689, "restart-test-test-case"], [745, "restart-test-test-case"]], "decomp_test test case": [[689, "decomp-test-test-case"], [745, "decomp-test-test-case"]], "threads_test test case": [[689, "threads-test-test-case"], [745, "threads-test-test-case"]], "analysis_test test case": [[689, "analysis-test-test-case"], [745, "analysis-test-test-case"]], "daily_output_test test case": [[689, "daily-output-test-test-case"], [745, "daily-output-test-test-case"]], "dynamic_adjustment test case": [[689, "dynamic-adjustment-test-case"], [745, "dynamic-adjustment-test-case"]], "child classes": [[689, "child-classes"]], "files_for_e3sm test case": [[689, "files-for-e3sm-test-case"], [745, "files-for-e3sm-test-case"]], "interpolate_atm_forcing": [[691, "interpolate-atm-forcing"]], "create_pointstats_file": [[691, "create-pointstats-file"]], "ssh_adjustment": [[692, "ssh-adjustment"], [695, "ssh-adjustment"]], "ten_day_test": [[694, "ten-day-test"], [750, "ten-day-test"]], "evap": [[695, "evap"]], "geom": [[695, "geom"]], "streamfunction": [[695, "streamfunction"]], "misomip": [[695, "misomip"]], "isomip_plus_test": [[695, "isomip-plus-test"]], "convergence_test": [[696, "convergence-test"], [752, "convergence-test"]], "soma_test_case": [[698, "soma-test-case"]], "spherical_harmonic_transform": [[700, "spherical-harmonic-transform"], [756, "spherical-harmonic-transform"]], "qu_convergence": [[700, "qu-convergence"], [756, "qu-convergence"]], "interpolate_wave_drag": [[701, "interpolate-wave-drag"]], "remap_bathymetry": [[701, "remap-bathymetry"]], "ziso_test_case": [[702, "ziso-test-case"]], "with_frazil": [[702, "with-frazil"], [758, "with-frazil"]], "Organization of Tests": [[703, "organization-of-tests"]], "Directory structure": [[703, "directory-structure"]], "TestCase attributes": [[703, "testcase-attributes"]], "constructor": [[703, "constructor"], [703, "dev-step-init"]], "run()": [[703, "run"], [703, "dev-step-run"]], "validate()": [[703, "validate"]], "Steps": [[703, "steps"]], "Step attributes": [[703, "step-attributes"]], "constrain_resources()": [[703, "constrain-resources"]], "runtime_setup()": [[703, "runtime-setup"]], "Input files": [[703, "input-files"]], "Symlinks to input files": [[703, "symlinks-to-input-files"]], "Symlink to input files from compass": [[703, "symlink-to-input-files-from-compass"]], "Downloading and symlinking input files": [[703, "downloading-and-symlinking-input-files"]], "Copying input files": [[703, "copying-input-files"]], "Output files": [[703, "output-files"]], "Cached output files": [[703, "cached-output-files"]], "Adding namelist and streams files": [[703, "adding-namelist-and-streams-files"]], "Adding a namelist file": [[703, "adding-a-namelist-file"]], "Adding namelist options": [[703, "adding-namelist-options"]], "Updating namelist options at runtime": [[703, "updating-namelist-options-at-runtime"]], "Adding a streams file": [[703, "adding-a-streams-file"]], "Adding a template streams file": [[703, "adding-a-template-streams-file"]], "Updating a streams file at runtime": [[703, "updating-a-streams-file-at-runtime"]], "Adding MPAS model as an input": [[703, "adding-mpas-model-as-an-input"]], "Test Suites": [[703, "test-suites"], [759, "test-suites"], [761, "test-suites"]], "Overview": [[704, "overview"]], "Code Style": [[704, "code-style"]], "Packages and Modules": [[704, "packages-and-modules"]], "Packages": [[704, "packages"]], "Modules": [[704, "modules"]], "Classes": [[704, "classes"]], "Code sharing": [[704, "code-sharing"]], "In compass framework": [[704, "in-compass-framework"]], "Within an MPAS core": [[704, "within-an-mpas-core"]], "Within a test group": [[704, "within-a-test-group"]], "Within a test case": [[704, "within-a-test-case"]], "Quick Start for Developers": [[705, "quick-start-for-developers"]], "Unix Shell": [[705, "unix-shell"]], "Set up a compass repository: for beginners": [[705, "set-up-a-compass-repository-for-beginners"]], "compass conda environment, compilers and system modules": [[705, "compass-conda-environment-compilers-and-system-modules"]], "Supported machines": [[705, "supported-machines"]], "Environments with Albany": [[705, "environments-with-albany"]], "Environments with PETSc and Netlib-LAPACK": [[705, "environments-with-petsc-and-netlib-lapack"]], "Unknown machines": [[705, "unknown-machines"]], "What the script does": [[705, "what-the-script-does"]], "Optional flags": [[705, "optional-flags"]], "Activating the environment": [[705, "activating-the-environment"]], "Troubleshooting": [[705, "troubleshooting"], [706, "troubleshooting"]], "Creating/updating only the compass environment": [[705, "creating-updating-only-the-compass-environment"]], "Building MPAS components": [[705, "building-mpas-components"], [759, "building-mpas-components"]], "Running compass from the repo": [[705, "running-compass-from-the-repo"]], "Set up a compass repository with worktrees: for advanced users": [[705, "set-up-a-compass-repository-with-worktrees-for-advanced-users"]], "Solver errors when configuring conda environment": [[706, "solver-errors-when-configuring-conda-environment"]], "Proxy on LANL Macs": [[706, "proxy-on-lanl-macs"]], "gethostbyname failed": [[706, "gethostbyname-failed"]], "Glossary": [[707, "glossary"], [708, null]], "compass": [[708, "compass"]], "User's guide": [[708, null]], "Developer's guide": [[708, null]], "Tutorials": [[708, null]], "Versions": [[708, null]], "Legacy COMPASS": [[708, "legacy-compass"]], "Developer Tutorial: Adding a parameter study": [[709, "developer-tutorial-adding-a-parameter-study"]], "Getting started": [[709, "getting-started"], [710, "getting-started"], [711, "getting-started"]], "Making a new test group and \u201ccosine_bell\u201d test case": [[709, "making-a-new-test-group-and-cosine-bell-test-case"]], "Adding \u201cmesh\u201d, \u201cinit\u201d and \u201cforward\u201d steps": [[709, "adding-mesh-init-and-forward-steps"]], "Adding an \u201canalysis\u201d step": [[709, "adding-an-analysis-step"]], "Adding the steps to the test case": [[709, "adding-the-steps-to-the-test-case"], [710, "adding-the-steps-to-the-test-case"], [710, "id1"]], "Setting the number of tasks and CPUs per task": [[709, "setting-the-number-of-tasks-and-cpus-per-task"]], "Developer Tutorial: Adding a new test group": [[710, "developer-tutorial-adding-a-new-test-group"]], "Making a new test group": [[710, "making-a-new-test-group"], [711, "making-a-new-test-group"]], "Adding a \u201cdefault\u201d test case": [[710, "adding-a-default-test-case"]], "Varying resolution (or other parameters)": [[710, "varying-resolution-or-other-parameters"], [711, "varying-resolution-or-other-parameters"]], "Adding the initial_state step": [[710, "adding-the-initial-state-step"]], "Creating a horizontal mesh": [[710, "creating-a-horizontal-mesh"]], "Setting config options based on resolution": [[710, "setting-config-options-based-on-resolution"], [710, "id2"]], "Creating a vertical coordinate": [[710, "creating-a-vertical-coordinate"]], "Creating an initial condition": [[710, "creating-an-initial-condition"]], "Adding step outputs": [[710, "adding-step-outputs"]], "Adding the forward step": [[710, "adding-the-forward-step"], [711, "adding-the-forward-step"]], "Defining namelist options": [[710, "defining-namelist-options"], [711, "defining-namelist-options"]], "Defining streams": [[710, "defining-streams"], [711, "defining-streams"]], "Defining the run method": [[710, "defining-the-run-method"], [711, "defining-the-run-method"]], "Adding an \u201crpe_test\u201d test case": [[710, "adding-an-rpe-test-test-case"]], "Defining namelist options and streams files": [[710, "defining-namelist-options-and-streams-files"]], "Adding the analysis step": [[710, "adding-the-analysis-step"], [711, "adding-the-analysis-step"]], "Set up and run": [[710, "set-up-and-run"], [711, "set-up-and-run"]], "Developer Tutorial: Porting a legacy COMPASS test group": [[711, "developer-tutorial-porting-a-legacy-compass-test-group"]], "The legacy COMPASS test group": [[711, "the-legacy-compass-test-group"]], "Adding a test case": [[711, "adding-a-test-case"]], "Adding the init step": [[711, "adding-the-init-step"]], "Defining config options": [[711, "defining-config-options"]], "Updating the test case and test group": [[711, "updating-the-test-case-and-test-group"]], "Adding validation": [[711, "adding-validation"]], "Config Files": [[712, "config-files"]], "A \u201cuser\u201d config file": [[712, "a-user-config-file"]], "Test-case config files": [[712, "test-case-config-files"]], "Test suites": [[715, "test-suites"], [740, "test-suites"]], "sia_integration test suite": [[715, "sia-integration-test-suite"]], "fo_integration test suite": [[715, "fo-integration-test-suite"]], "full_integration test suite": [[715, "full-integration-test-suite"]], "humboldt_calving_tests": [[715, "humboldt-calving-tests"]], "humboldt_calving_tests_fo": [[715, "humboldt-calving-tests-fo"]], "config options": [[716, "config-options"], [717, "config-options"], [718, "config-options"], [719, "config-options"], [720, "config-options"], [721, "config-options"], [722, "config-options"], [723, "config-options"], [725, "config-options"], [726, "config-options"], [727, "config-options"], [729, "config-options"], [730, "config-options"], [731, "config-options"], [732, "config-options"], [733, "config-options"], [734, "config-options"], [735, "config-options"], [741, "config-options"], [742, "config-options"], [743, "config-options"], [744, "config-options"], [746, "config-options"], [750, "config-options"], [752, "config-options"], [753, "config-options"], [755, "config-options"], [756, "config-options"]], "dt_convergence_test": [[716, "dt-convergence-test"]], "decomposition_tests": [[722, "decomposition-tests"]], "restart_tests": [[722, "restart-tests"]], "ocean_thermal_obs": [[725, "ocean-thermal-obs"]], "Intel on Anvil": [[730, "intel-on-anvil"]], "Gnu on Anvil": [[730, "gnu-on-anvil"]], "Intel on Chrysalis": [[731, "intel-on-chrysalis"]], "Gnu on Chrysalis": [[731, "gnu-on-chrysalis"]], "Intel on CompyMcNodeFace": [[732, "intel-on-compymcnodeface"]], "Cori-Haswell": [[733, "cori-haswell"]], "Intel on Cori-Haswell": [[733, "intel-on-cori-haswell"]], "Gnu on Cori-Haswell": [[733, "gnu-on-cori-haswell"]], "Jupyter notebook on remote data": [[733, "jupyter-notebook-on-remote-data"], [735, "jupyter-notebook-on-remote-data"]], "Slurm job queueing": [[734, "slurm-job-queueing"]], "MPICH": [[734, "id4"]], "OpenMPI": [[734, "id5"]], "No MPI from conda-forge": [[734, "no-mpi-from-conda-forge"]], "Perlmutter-CPU": [[735, "perlmutter-cpu"]], "Gnu on Perlmutter-CPU": [[735, "gnu-on-perlmutter-cpu"]], "Ice shelf-cavities": [[736, "ice-shelf-cavities"]], "Sea surface height adjustment": [[736, "sea-surface-height-adjustment"]], "1D Grid type": [[738, "d-grid-type"]], "uniform": [[738, "uniform"]], "tanh_dz": [[738, "tanh-dz"]], "60layerPHC": [[738, "layerphc"]], "100layerE3SMv1": [[738, "layere3smv1"]], "3D vertical coordinates": [[738, "d-vertical-coordinates"]], "z-star": [[738, "z-star"]], "z-level": [[738, "z-level"]], "nightly test suite": [[740, "nightly-test-suite"]], "quwisc240 test suite": [[740, "quwisc240-test-suite"]], "qu240_for_e3sm test suite": [[740, "qu240-for-e3sm-test-suite"]], "quwisc240_for_e3sm test suite": [[740, "quwisc240-for-e3sm-test-suite"]], "ec30to60 test suite": [[740, "ec30to60-test-suite"]], "ecwisc30to60 test suite": [[740, "ecwisc30to60-test-suite"]], "thread_test": [[741, "thread-test"]], "resolutions": [[744, "resolutions"], [753, "resolutions"], [755, "resolutions"], [756, "resolutions"]], "time step": [[744, "time-step"], [753, "time-step"], [755, "time-step"]], "cores": [[744, "cores"], [753, "cores"], [755, "cores"]], "Shared config options": [[745, "shared-config-options"], [747, "shared-config-options"], [757, "shared-config-options"]], "Metadata": [[745, "metadata"]], "Meshes": [[745, "meshes"]], "QU240": [[745, "qu240"]], "QUwISC240": [[745, "quwisc240"]], "EC30to60": [[745, "ec30to60"]], "ECwISC30to60": [[745, "ecwisc30to60"]], "Biogeochemsitry": [[745, "biogeochemsitry"]], "Forward step": [[745, "forward-step"]], "make_diagnostic_files test case": [[745, "make-diagnostic-files-test-case"]], "initial state step": [[747, "initial-state-step"], [757, "initial-state-step"]], "interpolate atmosphere forcing step": [[747, "interpolate-atmosphere-forcing-step"]], "create pointstats file step": [[747, "create-pointstats-file-step"]], "sandy test case": [[747, "sandy-test-case"]], "analysis step": [[747, "analysis-step"], [757, "analysis-step"]], "shared config options": [[748, "shared-config-options"], [751, "shared-config-options"], [753, "shared-config-options"], [754, "shared-config-options"], [758, "shared-config-options"]], "Ocean0": [[751, "ocean0"]], "Ocean1": [[751, "ocean1"]], "Ocean2": [[751, "ocean2"]], "time_varying_Ocean0": [[751, "time-varying-ocean0"]], "thin_film_Ocean0": [[751, "thin-film-ocean0"]], "thin_film_tidal_forcing_Ocean0": [[751, "thin-film-tidal-forcing-ocean0"]], "Performance run": [[751, "performance-run"]], "Simulation run": [[751, "simulation-run"]], "long": [[754, "long"], [758, "long"]], "particles": [[754, "particles"], [758, "particles"]], "surface_restoring": [[754, "surface-restoring"]], "three_layer": [[754, "three-layer"]], "convergence thresholds": [[755, "convergence-thresholds"]], "parallel_N": [[756, "parallel-n"]], "serial_nLat": [[756, "serial-nlat"]], "remap bathymetry step": [[757, "remap-bathymetry-step"]], "interpolate wave drag step": [[757, "interpolate-wave-drag-step"]], "Quick Start for Users": [[759, "quick-start-for-users"]], "compass conda environment": [[759, "compass-conda-environment"]], "E3SM supported machines": [[759, "e3sm-supported-machines"]], "other machines": [[759, "other-machines"]], "Setting up test cases": [[759, "setting-up-test-cases"]], "Running a test case": [[759, "running-a-test-case"]], "Running with a job script": [[759, "running-with-a-job-script"]], "Test Cases": [[760, "test-cases"]], "Code and Documentation Versions": [[762, "code-and-documentation-versions"]]}, "indexentries": {"mpascore (class in compass)": [[9, "compass.MpasCore"]], "__init__() (compass.mpascore method)": [[9, "compass.MpasCore.__init__"]], "add_test_group() (compass.mpascore method)": [[10, "compass.MpasCore.add_test_group"]], "step (class in compass)": [[11, "compass.Step"]], "__init__() (compass.step method)": [[11, "compass.Step.__init__"]], "add_input_file() (compass.step method)": [[12, "compass.Step.add_input_file"]], "add_model_as_input() (compass.step method)": [[13, "compass.Step.add_model_as_input"]], "add_namelist_file() (compass.step method)": [[14, "compass.Step.add_namelist_file"]], "add_namelist_options() (compass.step method)": [[15, "compass.Step.add_namelist_options"]], "add_output_file() (compass.step method)": [[16, "compass.Step.add_output_file"]], "add_streams_file() (compass.step method)": [[17, "compass.Step.add_streams_file"]], "constrain_resources() (compass.step method)": [[18, "compass.Step.constrain_resources"]], "run() (compass.step method)": [[19, "compass.Step.run"]], "runtime_setup() (compass.step method)": [[20, "compass.Step.runtime_setup"]], "set_resources() (compass.step method)": [[21, "compass.Step.set_resources"]], "setup() (compass.step method)": [[22, "compass.Step.setup"]], "update_namelist_at_runtime() (compass.step method)": [[23, "compass.Step.update_namelist_at_runtime"]], "update_namelist_pio() (compass.step method)": [[24, "compass.Step.update_namelist_pio"]], "update_streams_at_runtime() (compass.step method)": [[25, "compass.Step.update_streams_at_runtime"]], "testcase (class in compass)": [[26, "compass.TestCase"]], "__init__() (compass.testcase method)": [[26, "compass.TestCase.__init__"]], "add_step() (compass.testcase method)": [[27, "compass.TestCase.add_step"]], "configure() (compass.testcase method)": [[28, "compass.TestCase.configure"]], "run() (compass.testcase method)": [[29, "compass.TestCase.run"]], "validate() (compass.testcase method)": [[30, "compass.TestCase.validate"]], "testgroup (class in compass)": [[31, "compass.TestGroup"]], "__init__() (compass.testgroup method)": [[31, "compass.TestGroup.__init__"]], "add_test_case() (compass.testgroup method)": [[32, "compass.TestGroup.add_test_case"]], "main() (in module compass.__main__)": [[33, "compass.__main__.main"]], "update_cache() (in module compass.cache)": [[34, "compass.cache.update_cache"]], "clean_cases() (in module compass.clean)": [[35, "compass.clean.clean_cases"]], "compassconfigparser (class in compass.config)": [[36, "compass.config.CompassConfigParser"]], "__init__() (compass.config.compassconfigparser method)": [[36, "compass.config.CompassConfigParser.__init__"]], "download() (in module compass.io)": [[37, "compass.io.download"]], "symlink() (in module compass.io)": [[38, "compass.io.symlink"]], "list_cases() (in module compass.list)": [[39, "compass.list.list_cases"]], "list_machines() (in module compass.list)": [[40, "compass.list.list_machines"]], "list_suites() (in module compass.list)": [[41, "compass.list.list_suites"]], "log_method_call() (in module compass.logging)": [[42, "compass.logging.log_method_call"]], "icosahedralmeshstep (class in compass.mesh)": [[43, "compass.mesh.IcosahedralMeshStep"]], "__init__() (compass.mesh.icosahedralmeshstep method)": [[43, "compass.mesh.IcosahedralMeshStep.__init__"]], "build_subdivisions_cell_width_lat_lon() (compass.mesh.icosahedralmeshstep method)": [[44, "compass.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon"]], "get_cell_width() (compass.mesh.icosahedralmeshstep static method)": [[45, "compass.mesh.IcosahedralMeshStep.get_cell_width"]], "get_subdivisions() (compass.mesh.icosahedralmeshstep static method)": [[46, "compass.mesh.IcosahedralMeshStep.get_subdivisions"]], "make_jigsaw_mesh() (compass.mesh.icosahedralmeshstep method)": [[47, "compass.mesh.IcosahedralMeshStep.make_jigsaw_mesh"]], "run() (compass.mesh.icosahedralmeshstep method)": [[48, "compass.mesh.IcosahedralMeshStep.run"]], "setup() (compass.mesh.icosahedralmeshstep method)": [[49, "compass.mesh.IcosahedralMeshStep.setup"]], "quasiuniformsphericalmeshstep (class in compass.mesh)": [[50, "compass.mesh.QuasiUniformSphericalMeshStep"]], "__init__() (compass.mesh.quasiuniformsphericalmeshstep method)": [[50, "compass.mesh.QuasiUniformSphericalMeshStep.__init__"]], "build_cell_width_lat_lon() (compass.mesh.quasiuniformsphericalmeshstep method)": [[51, "compass.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon"]], "make_jigsaw_mesh() (compass.mesh.quasiuniformsphericalmeshstep method)": [[52, "compass.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh"]], "run() (compass.mesh.quasiuniformsphericalmeshstep method)": [[53, "compass.mesh.QuasiUniformSphericalMeshStep.run"]], "setup() (compass.mesh.quasiuniformsphericalmeshstep method)": [[54, "compass.mesh.QuasiUniformSphericalMeshStep.setup"]], "sphericalbasestep (class in compass.mesh.spherical)": [[55, "compass.mesh.spherical.SphericalBaseStep"]], "__init__() (compass.mesh.spherical.sphericalbasestep method)": [[55, "compass.mesh.spherical.SphericalBaseStep.__init__"]], "run() (compass.mesh.spherical.sphericalbasestep method)": [[56, "compass.mesh.spherical.SphericalBaseStep.run"]], "save_and_plot_cell_width() (compass.mesh.spherical.sphericalbasestep method)": [[57, "compass.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width"]], "setup() (compass.mesh.spherical.sphericalbasestep method)": [[58, "compass.mesh.spherical.SphericalBaseStep.setup"]], "make_graph_file() (in module compass.model)": [[59, "compass.model.make_graph_file"]], "partition() (in module compass.model)": [[60, "compass.model.partition"]], "run_model() (in module compass.model)": [[61, "compass.model.run_model"]], "get_mpas_cores() (in module compass.mpas_cores)": [[62, "compass.mpas_cores.get_mpas_cores"]], "check_parallel_system() (in module compass.parallel)": [[63, "compass.parallel.check_parallel_system"]], "get_available_cores_and_nodes() (in module compass.parallel)": [[64, "compass.parallel.get_available_cores_and_nodes"]], "run_command() (in module compass.parallel)": [[65, "compass.parallel.run_command"]], "set_cores_per_node() (in module compass.parallel)": [[66, "compass.parallel.set_cores_per_node"]], "write() (in module compass.provenance)": [[67, "compass.provenance.write"]], "run_single_step() (in module compass.run.serial)": [[68, "compass.run.serial.run_single_step"]], "run_tests() (in module compass.run.serial)": [[69, "compass.run.serial.run_tests"]], "setup_case() (in module compass.setup)": [[70, "compass.setup.setup_case"]], "setup_cases() (in module compass.setup)": [[71, "compass.setup.setup_cases"]], "clean_suite() (in module compass.suite)": [[72, "compass.suite.clean_suite"]], "setup_suite() (in module compass.suite)": [[73, "compass.suite.setup_suite"]], "compare_timers() (in module compass.validate)": [[74, "compass.validate.compare_timers"]], "compare_variables() (in module compass.validate)": [[75, "compass.validate.compare_variables"]], "landice (class in compass.landice)": [[78, "compass.landice.Landice"]], "__init__() (compass.landice.landice method)": [[78, "compass.landice.Landice.__init__"]], "calvingdtconvergence (class in compass.landice.tests.calving_dt_convergence)": [[79, "compass.landice.tests.calving_dt_convergence.CalvingDtConvergence"]], "__init__() (compass.landice.tests.calving_dt_convergence.calvingdtconvergence method)": [[79, "compass.landice.tests.calving_dt_convergence.CalvingDtConvergence.__init__"]], "dtconvergencetest (class in compass.landice.tests.calving_dt_convergence.dt_convergence_test)": [[80, "compass.landice.tests.calving_dt_convergence.dt_convergence_test.DtConvergenceTest"]], "__init__() (compass.landice.tests.calving_dt_convergence.dt_convergence_test.dtconvergencetest method)": [[80, "compass.landice.tests.calving_dt_convergence.dt_convergence_test.DtConvergenceTest.__init__"]], "validate() (compass.landice.tests.calving_dt_convergence.dt_convergence_test.dtconvergencetest method)": [[81, "compass.landice.tests.calving_dt_convergence.dt_convergence_test.DtConvergenceTest.validate"]], "runmodel (class in compass.landice.tests.calving_dt_convergence.run_model)": [[82, "compass.landice.tests.calving_dt_convergence.run_model.RunModel"]], "__init__() (compass.landice.tests.calving_dt_convergence.run_model.runmodel method)": [[82, "compass.landice.tests.calving_dt_convergence.run_model.RunModel.__init__"]], "run() (compass.landice.tests.calving_dt_convergence.run_model.runmodel method)": [[83, "compass.landice.tests.calving_dt_convergence.run_model.RunModel.run"]], "circularshelf (class in compass.landice.tests.circular_shelf)": [[84, "compass.landice.tests.circular_shelf.CircularShelf"]], "__init__() (compass.landice.tests.circular_shelf.circularshelf method)": [[84, "compass.landice.tests.circular_shelf.CircularShelf.__init__"]], "decompositiontest (class in compass.landice.tests.circular_shelf.decomposition_test)": [[85, "compass.landice.tests.circular_shelf.decomposition_test.DecompositionTest"]], "__init__() (compass.landice.tests.circular_shelf.decomposition_test.decompositiontest method)": [[85, "compass.landice.tests.circular_shelf.decomposition_test.DecompositionTest.__init__"]], "run() (compass.landice.tests.circular_shelf.decomposition_test.decompositiontest method)": [[86, "compass.landice.tests.circular_shelf.decomposition_test.DecompositionTest.run"]], "runmodel (class in compass.landice.tests.circular_shelf.run_model)": [[87, "compass.landice.tests.circular_shelf.run_model.RunModel"]], "__init__() (compass.landice.tests.circular_shelf.run_model.runmodel method)": [[87, "compass.landice.tests.circular_shelf.run_model.RunModel.__init__"]], "run() (compass.landice.tests.circular_shelf.run_model.runmodel method)": [[88, "compass.landice.tests.circular_shelf.run_model.RunModel.run"]], "setupmesh (class in compass.landice.tests.circular_shelf.setup_mesh)": [[89, "compass.landice.tests.circular_shelf.setup_mesh.SetupMesh"]], "__init__() (compass.landice.tests.circular_shelf.setup_mesh.setupmesh method)": [[89, "compass.landice.tests.circular_shelf.setup_mesh.SetupMesh.__init__"]], "run() (compass.landice.tests.circular_shelf.setup_mesh.setupmesh method)": [[90, "compass.landice.tests.circular_shelf.setup_mesh.SetupMesh.run"]], "visualize (class in compass.landice.tests.circular_shelf.visualize)": [[91, "compass.landice.tests.circular_shelf.visualize.Visualize"]], "__init__() (compass.landice.tests.circular_shelf.visualize.visualize method)": [[91, "compass.landice.tests.circular_shelf.visualize.Visualize.__init__"]], "run() (compass.landice.tests.circular_shelf.visualize.visualize method)": [[92, "compass.landice.tests.circular_shelf.visualize.Visualize.run"]], "visualize_circular_shelf() (in module compass.landice.tests.circular_shelf.visualize)": [[93, "compass.landice.tests.circular_shelf.visualize.visualize_circular_shelf"]], "dome (class in compass.landice.tests.dome)": [[94, "compass.landice.tests.dome.Dome"]], "__init__() (compass.landice.tests.dome.dome method)": [[94, "compass.landice.tests.dome.Dome.__init__"]], "decompositiontest (class in compass.landice.tests.dome.decomposition_test)": [[95, "compass.landice.tests.dome.decomposition_test.DecompositionTest"]], "__init__() (compass.landice.tests.dome.decomposition_test.decompositiontest method)": [[95, "compass.landice.tests.dome.decomposition_test.DecompositionTest.__init__"]], "run() (compass.landice.tests.dome.decomposition_test.decompositiontest method)": [[96, "compass.landice.tests.dome.decomposition_test.DecompositionTest.run"]], "restarttest (class in compass.landice.tests.dome.restart_test)": [[97, "compass.landice.tests.dome.restart_test.RestartTest"]], "__init__() (compass.landice.tests.dome.restart_test.restarttest method)": [[97, "compass.landice.tests.dome.restart_test.RestartTest.__init__"]], "run() (compass.landice.tests.dome.restart_test.restarttest method)": [[98, "compass.landice.tests.dome.restart_test.RestartTest.run"]], "runmodel (class in compass.landice.tests.dome.run_model)": [[99, "compass.landice.tests.dome.run_model.RunModel"]], "__init__() (compass.landice.tests.dome.run_model.runmodel method)": [[99, "compass.landice.tests.dome.run_model.RunModel.__init__"]], "run() (compass.landice.tests.dome.run_model.runmodel method)": [[100, "compass.landice.tests.dome.run_model.RunModel.run"]], "setup() (compass.landice.tests.dome.run_model.runmodel method)": [[101, "compass.landice.tests.dome.run_model.RunModel.setup"]], "setupmesh (class in compass.landice.tests.dome.setup_mesh)": [[102, "compass.landice.tests.dome.setup_mesh.SetupMesh"]], "__init__() (compass.landice.tests.dome.setup_mesh.setupmesh method)": [[102, "compass.landice.tests.dome.setup_mesh.SetupMesh.__init__"]], "run() (compass.landice.tests.dome.setup_mesh.setupmesh method)": [[103, "compass.landice.tests.dome.setup_mesh.SetupMesh.run"]], "smoketest (class in compass.landice.tests.dome.smoke_test)": [[104, "compass.landice.tests.dome.smoke_test.SmokeTest"]], "__init__() (compass.landice.tests.dome.smoke_test.smoketest method)": [[104, "compass.landice.tests.dome.smoke_test.SmokeTest.__init__"]], "run() (compass.landice.tests.dome.smoke_test.smoketest method)": [[105, "compass.landice.tests.dome.smoke_test.SmokeTest.run"]], "visualize (class in compass.landice.tests.dome.visualize)": [[106, "compass.landice.tests.dome.visualize.Visualize"]], "__init__() (compass.landice.tests.dome.visualize.visualize method)": [[106, "compass.landice.tests.dome.visualize.Visualize.__init__"]], "run() (compass.landice.tests.dome.visualize.visualize method)": [[107, "compass.landice.tests.dome.visualize.Visualize.run"]], "visualize_dome() (in module compass.landice.tests.dome.visualize)": [[108, "compass.landice.tests.dome.visualize.visualize_dome"]], "eismint2 (class in compass.landice.tests.eismint2)": [[109, "compass.landice.tests.eismint2.Eismint2"]], "__init__() (compass.landice.tests.eismint2.eismint2 method)": [[109, "compass.landice.tests.eismint2.Eismint2.__init__"]], "decompositiontest (class in compass.landice.tests.eismint2.decomposition_test)": [[110, "compass.landice.tests.eismint2.decomposition_test.DecompositionTest"]], "__init__() (compass.landice.tests.eismint2.decomposition_test.decompositiontest method)": [[110, "compass.landice.tests.eismint2.decomposition_test.DecompositionTest.__init__"]], "run() (compass.landice.tests.eismint2.decomposition_test.decompositiontest method)": [[111, "compass.landice.tests.eismint2.decomposition_test.DecompositionTest.run"]], "restarttest (class in compass.landice.tests.eismint2.restart_test)": [[112, "compass.landice.tests.eismint2.restart_test.RestartTest"]], "__init__() (compass.landice.tests.eismint2.restart_test.restarttest method)": [[112, "compass.landice.tests.eismint2.restart_test.RestartTest.__init__"]], "run() (compass.landice.tests.eismint2.restart_test.restarttest method)": [[113, "compass.landice.tests.eismint2.restart_test.RestartTest.run"]], "runexperiment (class in compass.landice.tests.eismint2.run_experiment)": [[114, "compass.landice.tests.eismint2.run_experiment.RunExperiment"]], "__init__() (compass.landice.tests.eismint2.run_experiment.runexperiment method)": [[114, "compass.landice.tests.eismint2.run_experiment.RunExperiment.__init__"]], "run() (compass.landice.tests.eismint2.run_experiment.runexperiment method)": [[115, "compass.landice.tests.eismint2.run_experiment.RunExperiment.run"]], "setup() (compass.landice.tests.eismint2.run_experiment.runexperiment method)": [[116, "compass.landice.tests.eismint2.run_experiment.RunExperiment.setup"]], "setupmesh (class in compass.landice.tests.eismint2.setup_mesh)": [[117, "compass.landice.tests.eismint2.setup_mesh.SetupMesh"]], "__init__() (compass.landice.tests.eismint2.setup_mesh.setupmesh method)": [[117, "compass.landice.tests.eismint2.setup_mesh.SetupMesh.__init__"]], "run() (compass.landice.tests.eismint2.setup_mesh.setupmesh method)": [[118, "compass.landice.tests.eismint2.setup_mesh.SetupMesh.run"]], "standardexperiments (class in compass.landice.tests.eismint2.standard_experiments)": [[119, "compass.landice.tests.eismint2.standard_experiments.StandardExperiments"]], "__init__() (compass.landice.tests.eismint2.standard_experiments.standardexperiments method)": [[119, "compass.landice.tests.eismint2.standard_experiments.StandardExperiments.__init__"]], "run() (compass.landice.tests.eismint2.standard_experiments.standardexperiments method)": [[120, "compass.landice.tests.eismint2.standard_experiments.StandardExperiments.run"]], "visualize (class in compass.landice.tests.eismint2.standard_experiments.visualize)": [[121, "compass.landice.tests.eismint2.standard_experiments.visualize.Visualize"]], "__init__() (compass.landice.tests.eismint2.standard_experiments.visualize.visualize method)": [[121, "compass.landice.tests.eismint2.standard_experiments.visualize.Visualize.__init__"]], "run() (compass.landice.tests.eismint2.standard_experiments.visualize.visualize method)": [[122, "compass.landice.tests.eismint2.standard_experiments.visualize.Visualize.run"]], "visualize_eismint2() (in module compass.landice.tests.eismint2.standard_experiments.visualize)": [[123, "compass.landice.tests.eismint2.standard_experiments.visualize.visualize_eismint2"]], "a (class in compass.landice.tests.enthalpy_benchmark.a)": [[124, "compass.landice.tests.enthalpy_benchmark.A.A"]], "__init__() (compass.landice.tests.enthalpy_benchmark.a.a method)": [[124, "compass.landice.tests.enthalpy_benchmark.A.A.__init__"]], "configure() (compass.landice.tests.enthalpy_benchmark.a.a method)": [[125, "compass.landice.tests.enthalpy_benchmark.A.A.configure"]], "run() (compass.landice.tests.enthalpy_benchmark.a.a method)": [[126, "compass.landice.tests.enthalpy_benchmark.A.A.run"]], "visualize (class in compass.landice.tests.enthalpy_benchmark.a.visualize)": [[127, "compass.landice.tests.enthalpy_benchmark.A.visualize.Visualize"]], "__init__() (compass.landice.tests.enthalpy_benchmark.a.visualize.visualize method)": [[127, "compass.landice.tests.enthalpy_benchmark.A.visualize.Visualize.__init__"]], "run() (compass.landice.tests.enthalpy_benchmark.a.visualize.visualize method)": [[128, "compass.landice.tests.enthalpy_benchmark.A.visualize.Visualize.run"]], "b (class in compass.landice.tests.enthalpy_benchmark.b)": [[129, "compass.landice.tests.enthalpy_benchmark.B.B"]], "__init__() (compass.landice.tests.enthalpy_benchmark.b.b method)": [[129, "compass.landice.tests.enthalpy_benchmark.B.B.__init__"]], "configure() (compass.landice.tests.enthalpy_benchmark.b.b method)": [[130, "compass.landice.tests.enthalpy_benchmark.B.B.configure"]], "run() (compass.landice.tests.enthalpy_benchmark.b.b method)": [[131, "compass.landice.tests.enthalpy_benchmark.B.B.run"]], "visualize (class in compass.landice.tests.enthalpy_benchmark.b.visualize)": [[132, "compass.landice.tests.enthalpy_benchmark.B.visualize.Visualize"]], "__init__() (compass.landice.tests.enthalpy_benchmark.b.visualize.visualize method)": [[132, "compass.landice.tests.enthalpy_benchmark.B.visualize.Visualize.__init__"]], "run() (compass.landice.tests.enthalpy_benchmark.b.visualize.visualize method)": [[133, "compass.landice.tests.enthalpy_benchmark.B.visualize.Visualize.run"]], "enthalpybenchmark (class in compass.landice.tests.enthalpy_benchmark)": [[134, "compass.landice.tests.enthalpy_benchmark.EnthalpyBenchmark"]], "__init__() (compass.landice.tests.enthalpy_benchmark.enthalpybenchmark method)": [[134, "compass.landice.tests.enthalpy_benchmark.EnthalpyBenchmark.__init__"]], "runmodel (class in compass.landice.tests.enthalpy_benchmark.run_model)": [[135, "compass.landice.tests.enthalpy_benchmark.run_model.RunModel"]], "__init__() (compass.landice.tests.enthalpy_benchmark.run_model.runmodel method)": [[135, "compass.landice.tests.enthalpy_benchmark.run_model.RunModel.__init__"]], "run() (compass.landice.tests.enthalpy_benchmark.run_model.runmodel method)": [[136, "compass.landice.tests.enthalpy_benchmark.run_model.RunModel.run"]], "setup() (compass.landice.tests.enthalpy_benchmark.run_model.runmodel method)": [[137, "compass.landice.tests.enthalpy_benchmark.run_model.RunModel.setup"]], "setupmesh (class in compass.landice.tests.enthalpy_benchmark.setup_mesh)": [[138, "compass.landice.tests.enthalpy_benchmark.setup_mesh.SetupMesh"]], "__init__() (compass.landice.tests.enthalpy_benchmark.setup_mesh.setupmesh method)": [[138, "compass.landice.tests.enthalpy_benchmark.setup_mesh.SetupMesh.__init__"]], "run() (compass.landice.tests.enthalpy_benchmark.setup_mesh.setupmesh method)": [[139, "compass.landice.tests.enthalpy_benchmark.setup_mesh.SetupMesh.run"]], "greenland (class in compass.landice.tests.greenland)": [[140, "compass.landice.tests.greenland.Greenland"]], "__init__() (compass.landice.tests.greenland.greenland method)": [[140, "compass.landice.tests.greenland.Greenland.__init__"]], "decompositiontest (class in compass.landice.tests.greenland.decomposition_test)": [[141, "compass.landice.tests.greenland.decomposition_test.DecompositionTest"]], "__init__() (compass.landice.tests.greenland.decomposition_test.decompositiontest method)": [[141, "compass.landice.tests.greenland.decomposition_test.DecompositionTest.__init__"]], "run() (compass.landice.tests.greenland.decomposition_test.decompositiontest method)": [[142, "compass.landice.tests.greenland.decomposition_test.DecompositionTest.run"]], "highresmesh (class in compass.landice.tests.greenland.high_res_mesh)": [[143, "compass.landice.tests.greenland.high_res_mesh.HighResMesh"]], "__init__() (compass.landice.tests.greenland.high_res_mesh.highresmesh method)": [[143, "compass.landice.tests.greenland.high_res_mesh.HighResMesh.__init__"]], "run() (compass.landice.tests.greenland.high_res_mesh.highresmesh method)": [[144, "compass.landice.tests.greenland.high_res_mesh.HighResMesh.run"]], "mesh (class in compass.landice.tests.greenland.mesh)": [[145, "compass.landice.tests.greenland.mesh.Mesh"]], "__init__() (compass.landice.tests.greenland.mesh.mesh method)": [[145, "compass.landice.tests.greenland.mesh.Mesh.__init__"]], "build_cell_width() (compass.landice.tests.greenland.mesh.mesh method)": [[146, "compass.landice.tests.greenland.mesh.Mesh.build_cell_width"]], "run() (compass.landice.tests.greenland.mesh.mesh method)": [[147, "compass.landice.tests.greenland.mesh.Mesh.run"]], "restarttest (class in compass.landice.tests.greenland.restart_test)": [[148, "compass.landice.tests.greenland.restart_test.RestartTest"]], "__init__() (compass.landice.tests.greenland.restart_test.restarttest method)": [[148, "compass.landice.tests.greenland.restart_test.RestartTest.__init__"]], "run() (compass.landice.tests.greenland.restart_test.restarttest method)": [[149, "compass.landice.tests.greenland.restart_test.RestartTest.run"]], "runmodel (class in compass.landice.tests.greenland.run_model)": [[150, "compass.landice.tests.greenland.run_model.RunModel"]], "__init__() (compass.landice.tests.greenland.run_model.runmodel method)": [[150, "compass.landice.tests.greenland.run_model.RunModel.__init__"]], "run() (compass.landice.tests.greenland.run_model.runmodel method)": [[151, "compass.landice.tests.greenland.run_model.RunModel.run"]], "setup() (compass.landice.tests.greenland.run_model.runmodel method)": [[152, "compass.landice.tests.greenland.run_model.RunModel.setup"]], "smoketest (class in compass.landice.tests.greenland.smoke_test)": [[153, "compass.landice.tests.greenland.smoke_test.SmokeTest"]], "__init__() (compass.landice.tests.greenland.smoke_test.smoketest method)": [[153, "compass.landice.tests.greenland.smoke_test.SmokeTest.__init__"]], "run() (compass.landice.tests.greenland.smoke_test.smoketest method)": [[154, "compass.landice.tests.greenland.smoke_test.SmokeTest.run"]], "humboldt (class in compass.landice.tests.humboldt)": [[155, "compass.landice.tests.humboldt.Humboldt"]], "__init__() (compass.landice.tests.humboldt.humboldt method)": [[155, "compass.landice.tests.humboldt.Humboldt.__init__"]], "decompositiontest (class in compass.landice.tests.humboldt.decomposition_test)": [[156, "compass.landice.tests.humboldt.decomposition_test.DecompositionTest"]], "__init__() (compass.landice.tests.humboldt.decomposition_test.decompositiontest method)": [[156, "compass.landice.tests.humboldt.decomposition_test.DecompositionTest.__init__"]], "validate() (compass.landice.tests.humboldt.decomposition_test.decompositiontest method)": [[157, "compass.landice.tests.humboldt.decomposition_test.DecompositionTest.validate"]], "mesh (class in compass.landice.tests.humboldt.mesh)": [[158, "compass.landice.tests.humboldt.mesh.Mesh"]], "__init__() (compass.landice.tests.humboldt.mesh.mesh method)": [[158, "compass.landice.tests.humboldt.mesh.Mesh.__init__"]], "run() (compass.landice.tests.humboldt.mesh.mesh method)": [[159, "compass.landice.tests.humboldt.mesh.Mesh.run"]], "meshgen (class in compass.landice.tests.humboldt.mesh_gen)": [[160, "compass.landice.tests.humboldt.mesh_gen.MeshGen"]], "__init__() (compass.landice.tests.humboldt.mesh_gen.meshgen method)": [[160, "compass.landice.tests.humboldt.mesh_gen.MeshGen.__init__"]], "run() (compass.landice.tests.humboldt.mesh_gen.meshgen method)": [[161, "compass.landice.tests.humboldt.mesh_gen.MeshGen.run"]], "restarttest (class in compass.landice.tests.humboldt.restart_test)": [[162, "compass.landice.tests.humboldt.restart_test.RestartTest"]], "__init__() (compass.landice.tests.humboldt.restart_test.restarttest method)": [[162, "compass.landice.tests.humboldt.restart_test.RestartTest.__init__"]], "validate() (compass.landice.tests.humboldt.restart_test.restarttest method)": [[163, "compass.landice.tests.humboldt.restart_test.RestartTest.validate"]], "runmodel (class in compass.landice.tests.humboldt.run_model)": [[164, "compass.landice.tests.humboldt.run_model.RunModel"]], "__init__() (compass.landice.tests.humboldt.run_model.runmodel method)": [[164, "compass.landice.tests.humboldt.run_model.RunModel.__init__"]], "run() (compass.landice.tests.humboldt.run_model.runmodel method)": [[165, "compass.landice.tests.humboldt.run_model.RunModel.run"]], "hydroradial (class in compass.landice.tests.hydro_radial)": [[166, "compass.landice.tests.hydro_radial.HydroRadial"]], "__init__() (compass.landice.tests.hydro_radial.hydroradial method)": [[166, "compass.landice.tests.hydro_radial.HydroRadial.__init__"]], "decompositiontest (class in compass.landice.tests.hydro_radial.decomposition_test)": [[167, "compass.landice.tests.hydro_radial.decomposition_test.DecompositionTest"]], "__init__() (compass.landice.tests.hydro_radial.decomposition_test.decompositiontest method)": [[167, "compass.landice.tests.hydro_radial.decomposition_test.DecompositionTest.__init__"]], "run() (compass.landice.tests.hydro_radial.decomposition_test.decompositiontest method)": [[168, "compass.landice.tests.hydro_radial.decomposition_test.DecompositionTest.run"]], "restarttest (class in compass.landice.tests.hydro_radial.restart_test)": [[169, "compass.landice.tests.hydro_radial.restart_test.RestartTest"]], "__init__() (compass.landice.tests.hydro_radial.restart_test.restarttest method)": [[169, "compass.landice.tests.hydro_radial.restart_test.RestartTest.__init__"]], "run() (compass.landice.tests.hydro_radial.restart_test.restarttest method)": [[170, "compass.landice.tests.hydro_radial.restart_test.RestartTest.run"]], "runmodel (class in compass.landice.tests.hydro_radial.run_model)": [[171, "compass.landice.tests.hydro_radial.run_model.RunModel"]], "__init__() (compass.landice.tests.hydro_radial.run_model.runmodel method)": [[171, "compass.landice.tests.hydro_radial.run_model.RunModel.__init__"]], "run() (compass.landice.tests.hydro_radial.run_model.runmodel method)": [[172, "compass.landice.tests.hydro_radial.run_model.RunModel.run"]], "setup() (compass.landice.tests.hydro_radial.run_model.runmodel method)": [[173, "compass.landice.tests.hydro_radial.run_model.RunModel.setup"]], "setupmesh (class in compass.landice.tests.hydro_radial.setup_mesh)": [[174, "compass.landice.tests.hydro_radial.setup_mesh.SetupMesh"]], "__init__() (compass.landice.tests.hydro_radial.setup_mesh.setupmesh method)": [[174, "compass.landice.tests.hydro_radial.setup_mesh.SetupMesh.__init__"]], "run() (compass.landice.tests.hydro_radial.setup_mesh.setupmesh method)": [[175, "compass.landice.tests.hydro_radial.setup_mesh.SetupMesh.run"]], "spinuptest (class in compass.landice.tests.hydro_radial.spinup_test)": [[176, "compass.landice.tests.hydro_radial.spinup_test.SpinupTest"]], "__init__() (compass.landice.tests.hydro_radial.spinup_test.spinuptest method)": [[176, "compass.landice.tests.hydro_radial.spinup_test.SpinupTest.__init__"]], "run() (compass.landice.tests.hydro_radial.spinup_test.spinuptest method)": [[177, "compass.landice.tests.hydro_radial.spinup_test.SpinupTest.run"]], "steadystatedrifttest (class in compass.landice.tests.hydro_radial.steady_state_drift_test)": [[178, "compass.landice.tests.hydro_radial.steady_state_drift_test.SteadyStateDriftTest"]], "__init__() (compass.landice.tests.hydro_radial.steady_state_drift_test.steadystatedrifttest method)": [[178, "compass.landice.tests.hydro_radial.steady_state_drift_test.SteadyStateDriftTest.__init__"]], "run() (compass.landice.tests.hydro_radial.steady_state_drift_test.steadystatedrifttest method)": [[179, "compass.landice.tests.hydro_radial.steady_state_drift_test.SteadyStateDriftTest.run"]], "visualize (class in compass.landice.tests.hydro_radial.visualize)": [[180, "compass.landice.tests.hydro_radial.visualize.Visualize"]], "__init__() (compass.landice.tests.hydro_radial.visualize.visualize method)": [[180, "compass.landice.tests.hydro_radial.visualize.Visualize.__init__"]], "run() (compass.landice.tests.hydro_radial.visualize.visualize method)": [[181, "compass.landice.tests.hydro_radial.visualize.Visualize.run"]], "visualize_hydro_radial() (in module compass.landice.tests.hydro_radial.visualize)": [[182, "compass.landice.tests.hydro_radial.visualize.visualize_hydro_radial"]], "ismip6forcing (class in compass.landice.tests.ismip6_forcing)": [[183, "compass.landice.tests.ismip6_forcing.Ismip6Forcing"]], "__init__() (compass.landice.tests.ismip6_forcing.ismip6forcing method)": [[183, "compass.landice.tests.ismip6_forcing.Ismip6Forcing.__init__"]], "atmosphere (class in compass.landice.tests.ismip6_forcing.atmosphere)": [[184, "compass.landice.tests.ismip6_forcing.atmosphere.Atmosphere"]], "__init__() (compass.landice.tests.ismip6_forcing.atmosphere.atmosphere method)": [[184, "compass.landice.tests.ismip6_forcing.atmosphere.Atmosphere.__init__"]], "configure() (compass.landice.tests.ismip6_forcing.atmosphere.atmosphere method)": [[185, "compass.landice.tests.ismip6_forcing.atmosphere.Atmosphere.configure"]], "compass.landice.tests.ismip6_forcing.atmosphere.create_mapfile_smb": [[186, "module-compass.landice.tests.ismip6_forcing.atmosphere.create_mapfile_smb"]], "module": [[186, "module-compass.landice.tests.ismip6_forcing.atmosphere.create_mapfile_smb"], [340, "module-compass.ocean.tests.global_ocean.configure"], [426, "module-compass.ocean.tests.hurricane.configure"], [638, "module-compass.ocean.tests.tides.configure"]], "build_mapping_file() (in module compass.landice.tests.ismip6_forcing.atmosphere.create_mapfile_smb)": [[187, "compass.landice.tests.ismip6_forcing.atmosphere.create_mapfile_smb.build_mapping_file"]], "create_atm_scrip() (in module compass.landice.tests.ismip6_forcing.atmosphere.create_mapfile_smb)": [[188, "compass.landice.tests.ismip6_forcing.atmosphere.create_mapfile_smb.create_atm_scrip"]], "processsmb (class in compass.landice.tests.ismip6_forcing.atmosphere.process_smb)": [[189, "compass.landice.tests.ismip6_forcing.atmosphere.process_smb.ProcessSMB"]], "__init__() (compass.landice.tests.ismip6_forcing.atmosphere.process_smb.processsmb method)": [[189, "compass.landice.tests.ismip6_forcing.atmosphere.process_smb.ProcessSMB.__init__"]], "correct_smb_anomaly_for_climatology() (compass.landice.tests.ismip6_forcing.atmosphere.process_smb.processsmb method)": [[190, "compass.landice.tests.ismip6_forcing.atmosphere.process_smb.ProcessSMB.correct_smb_anomaly_for_climatology"]], "remap_ismip6_smb_to_mali() (compass.landice.tests.ismip6_forcing.atmosphere.process_smb.processsmb method)": [[191, "compass.landice.tests.ismip6_forcing.atmosphere.process_smb.ProcessSMB.remap_ismip6_smb_to_mali"]], "rename_ismip6_smb_to_mali_vars() (compass.landice.tests.ismip6_forcing.atmosphere.process_smb.processsmb method)": [[192, "compass.landice.tests.ismip6_forcing.atmosphere.process_smb.ProcessSMB.rename_ismip6_smb_to_mali_vars"]], "run() (compass.landice.tests.ismip6_forcing.atmosphere.process_smb.processsmb method)": [[193, "compass.landice.tests.ismip6_forcing.atmosphere.process_smb.ProcessSMB.run"]], "setup() (compass.landice.tests.ismip6_forcing.atmosphere.process_smb.processsmb method)": [[194, "compass.landice.tests.ismip6_forcing.atmosphere.process_smb.ProcessSMB.setup"]], "processsmbracmo (class in compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo)": [[195, "compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.ProcessSmbRacmo"]], "__init__() (compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.processsmbracmo method)": [[195, "compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.ProcessSmbRacmo.__init__"]], "correct_smb_anomaly_for_base_smb() (compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.processsmbracmo method)": [[196, "compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.ProcessSmbRacmo.correct_smb_anomaly_for_base_smb"]], "remap_source_smb_to_mali() (compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.processsmbracmo method)": [[197, "compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.ProcessSmbRacmo.remap_source_smb_to_mali"]], "rename_source_smb_to_mali_vars() (compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.processsmbracmo method)": [[198, "compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.ProcessSmbRacmo.rename_source_smb_to_mali_vars"]], "run() (compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.processsmbracmo method)": [[199, "compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.ProcessSmbRacmo.run"]], "setup() (compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.processsmbracmo method)": [[200, "compass.landice.tests.ismip6_forcing.atmosphere.process_smb_racmo.ProcessSmbRacmo.setup"]], "configure() (in module compass.landice.tests.ismip6_forcing.configure)": [[201, "compass.landice.tests.ismip6_forcing.configure.configure"]], "build_mapping_file() (in module compass.landice.tests.ismip6_forcing.create_mapfile)": [[202, "compass.landice.tests.ismip6_forcing.create_mapfile.build_mapping_file"]], "oceanbasal (class in compass.landice.tests.ismip6_forcing.ocean_basal)": [[203, "compass.landice.tests.ismip6_forcing.ocean_basal.OceanBasal"]], "__init__() (compass.landice.tests.ismip6_forcing.ocean_basal.oceanbasal method)": [[203, "compass.landice.tests.ismip6_forcing.ocean_basal.OceanBasal.__init__"]], "configure() (compass.landice.tests.ismip6_forcing.ocean_basal.oceanbasal method)": [[204, "compass.landice.tests.ismip6_forcing.ocean_basal.OceanBasal.configure"]], "processbasalmelt (class in compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt)": [[205, "compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.ProcessBasalMelt"]], "__init__() (compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.processbasalmelt method)": [[205, "compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.ProcessBasalMelt.__init__"]], "combine_ismip6_inputfiles() (compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.processbasalmelt method)": [[206, "compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.ProcessBasalMelt.combine_ismip6_inputfiles"]], "remap_ismip6_basal_melt_to_mali_vars() (compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.processbasalmelt method)": [[207, "compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.ProcessBasalMelt.remap_ismip6_basal_melt_to_mali_vars"]], "rename_ismip6_basal_melt_to_mali_vars() (compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.processbasalmelt method)": [[208, "compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.ProcessBasalMelt.rename_ismip6_basal_melt_to_mali_vars"]], "run() (compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.processbasalmelt method)": [[209, "compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.ProcessBasalMelt.run"]], "setup() (compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.processbasalmelt method)": [[210, "compass.landice.tests.ismip6_forcing.ocean_basal.process_basal_melt.ProcessBasalMelt.setup"]], "oceanthermal (class in compass.landice.tests.ismip6_forcing.ocean_thermal)": [[211, "compass.landice.tests.ismip6_forcing.ocean_thermal.OceanThermal"]], "__init__() (compass.landice.tests.ismip6_forcing.ocean_thermal.oceanthermal method)": [[211, "compass.landice.tests.ismip6_forcing.ocean_thermal.OceanThermal.__init__"]], "configure() (compass.landice.tests.ismip6_forcing.ocean_thermal.oceanthermal method)": [[212, "compass.landice.tests.ismip6_forcing.ocean_thermal.OceanThermal.configure"]], "processthermalforcing (class in compass.landice.tests.ismip6_forcing.ocean_thermal.process_thermal_forcing)": [[213, "compass.landice.tests.ismip6_forcing.ocean_thermal.process_thermal_forcing.ProcessThermalForcing"]], "__init__() (compass.landice.tests.ismip6_forcing.ocean_thermal.process_thermal_forcing.processthermalforcing method)": [[213, "compass.landice.tests.ismip6_forcing.ocean_thermal.process_thermal_forcing.ProcessThermalForcing.__init__"]], "remap_ismip6_thermal_forcing_to_mali_vars() (compass.landice.tests.ismip6_forcing.ocean_thermal.process_thermal_forcing.processthermalforcing method)": [[214, "compass.landice.tests.ismip6_forcing.ocean_thermal.process_thermal_forcing.ProcessThermalForcing.remap_ismip6_thermal_forcing_to_mali_vars"]], "rename_ismip6_thermal_forcing_to_mali_vars() (compass.landice.tests.ismip6_forcing.ocean_thermal.process_thermal_forcing.processthermalforcing method)": [[215, "compass.landice.tests.ismip6_forcing.ocean_thermal.process_thermal_forcing.ProcessThermalForcing.rename_ismip6_thermal_forcing_to_mali_vars"]], "run() (compass.landice.tests.ismip6_forcing.ocean_thermal.process_thermal_forcing.processthermalforcing method)": [[216, "compass.landice.tests.ismip6_forcing.ocean_thermal.process_thermal_forcing.ProcessThermalForcing.run"]], "setup() (compass.landice.tests.ismip6_forcing.ocean_thermal.process_thermal_forcing.processthermalforcing method)": [[217, "compass.landice.tests.ismip6_forcing.ocean_thermal.process_thermal_forcing.ProcessThermalForcing.setup"]], "kangerlussuaq (class in compass.landice.tests.kangerlussuaq)": [[218, "compass.landice.tests.kangerlussuaq.Kangerlussuaq"]], "__init__() (compass.landice.tests.kangerlussuaq.kangerlussuaq method)": [[218, "compass.landice.tests.kangerlussuaq.Kangerlussuaq.__init__"]], "mesh (class in compass.landice.tests.kangerlussuaq.mesh)": [[219, "compass.landice.tests.kangerlussuaq.mesh.Mesh"]], "__init__() (compass.landice.tests.kangerlussuaq.mesh.mesh method)": [[219, "compass.landice.tests.kangerlussuaq.mesh.Mesh.__init__"]], "run() (compass.landice.tests.kangerlussuaq.mesh.mesh method)": [[220, "compass.landice.tests.kangerlussuaq.mesh.Mesh.run"]], "meshgen (class in compass.landice.tests.kangerlussuaq.mesh_gen)": [[221, "compass.landice.tests.kangerlussuaq.mesh_gen.MeshGen"]], "__init__() (compass.landice.tests.kangerlussuaq.mesh_gen.meshgen method)": [[221, "compass.landice.tests.kangerlussuaq.mesh_gen.MeshGen.__init__"]], "run() (compass.landice.tests.kangerlussuaq.mesh_gen.meshgen method)": [[222, "compass.landice.tests.kangerlussuaq.mesh_gen.MeshGen.run"]], "kogebugts (class in compass.landice.tests.koge_bugt_s)": [[223, "compass.landice.tests.koge_bugt_s.KogeBugtS"]], "__init__() (compass.landice.tests.koge_bugt_s.kogebugts method)": [[223, "compass.landice.tests.koge_bugt_s.KogeBugtS.__init__"]], "mesh (class in compass.landice.tests.koge_bugt_s.mesh)": [[224, "compass.landice.tests.koge_bugt_s.mesh.Mesh"]], "__init__() (compass.landice.tests.koge_bugt_s.mesh.mesh method)": [[224, "compass.landice.tests.koge_bugt_s.mesh.Mesh.__init__"]], "run() (compass.landice.tests.koge_bugt_s.mesh.mesh method)": [[225, "compass.landice.tests.koge_bugt_s.mesh.Mesh.run"]], "meshgen (class in compass.landice.tests.koge_bugt_s.mesh_gen)": [[226, "compass.landice.tests.koge_bugt_s.mesh_gen.MeshGen"]], "__init__() (compass.landice.tests.koge_bugt_s.mesh_gen.meshgen method)": [[226, "compass.landice.tests.koge_bugt_s.mesh_gen.MeshGen.__init__"]], "run() (compass.landice.tests.koge_bugt_s.mesh_gen.meshgen method)": [[227, "compass.landice.tests.koge_bugt_s.mesh_gen.MeshGen.run"]], "mismipplus (class in compass.landice.tests.mismipplus)": [[228, "compass.landice.tests.mismipplus.MISMIPplus"]], "__init__() (compass.landice.tests.mismipplus.mismipplus method)": [[228, "compass.landice.tests.mismipplus.MISMIPplus.__init__"]], "runmodel (class in compass.landice.tests.mismipplus.run_model)": [[229, "compass.landice.tests.mismipplus.run_model.RunModel"]], "__init__() (compass.landice.tests.mismipplus.run_model.runmodel method)": [[229, "compass.landice.tests.mismipplus.run_model.RunModel.__init__"]], "run() (compass.landice.tests.mismipplus.run_model.runmodel method)": [[230, "compass.landice.tests.mismipplus.run_model.RunModel.run"]], "setup() (compass.landice.tests.mismipplus.run_model.runmodel method)": [[231, "compass.landice.tests.mismipplus.run_model.RunModel.setup"]], "smoketest (class in compass.landice.tests.mismipplus.smoke_test)": [[232, "compass.landice.tests.mismipplus.smoke_test.SmokeTest"]], "__init__() (compass.landice.tests.mismipplus.smoke_test.smoketest method)": [[232, "compass.landice.tests.mismipplus.smoke_test.SmokeTest.__init__"]], "run() (compass.landice.tests.mismipplus.smoke_test.smoketest method)": [[233, "compass.landice.tests.mismipplus.smoke_test.SmokeTest.run"]], "thwaites (class in compass.landice.tests.thwaites)": [[234, "compass.landice.tests.thwaites.Thwaites"]], "__init__() (compass.landice.tests.thwaites.thwaites method)": [[234, "compass.landice.tests.thwaites.Thwaites.__init__"]], "decompositiontest (class in compass.landice.tests.thwaites.decomposition_test)": [[235, "compass.landice.tests.thwaites.decomposition_test.DecompositionTest"]], "__init__() (compass.landice.tests.thwaites.decomposition_test.decompositiontest method)": [[235, "compass.landice.tests.thwaites.decomposition_test.DecompositionTest.__init__"]], "run() (compass.landice.tests.thwaites.decomposition_test.decompositiontest method)": [[236, "compass.landice.tests.thwaites.decomposition_test.DecompositionTest.run"]], "restarttest (class in compass.landice.tests.thwaites.restart_test)": [[237, "compass.landice.tests.thwaites.restart_test.RestartTest"]], "__init__() (compass.landice.tests.thwaites.restart_test.restarttest method)": [[237, "compass.landice.tests.thwaites.restart_test.RestartTest.__init__"]], "run() (compass.landice.tests.thwaites.restart_test.restarttest method)": [[238, "compass.landice.tests.thwaites.restart_test.RestartTest.run"]], "runmodel (class in compass.landice.tests.thwaites.run_model)": [[239, "compass.landice.tests.thwaites.run_model.RunModel"]], "__init__() (compass.landice.tests.thwaites.run_model.runmodel method)": [[239, "compass.landice.tests.thwaites.run_model.RunModel.__init__"]], "run() (compass.landice.tests.thwaites.run_model.runmodel method)": [[240, "compass.landice.tests.thwaites.run_model.RunModel.run"]], "setup() (compass.landice.tests.thwaites.run_model.runmodel method)": [[241, "compass.landice.tests.thwaites.run_model.RunModel.setup"]], "ocean (class in compass.ocean)": [[265, "compass.ocean.Ocean"]], "__init__() (compass.ocean.ocean method)": [[265, "compass.ocean.Ocean.__init__"]], "compute_haney_number() (in module compass.ocean.haney)": [[266, "compass.ocean.haney.compute_haney_number"]], "adjust_ssh() (in module compass.ocean.iceshelf)": [[267, "compass.ocean.iceshelf.adjust_ssh"]], "compute_land_ice_pressure_and_draft() (in module compass.ocean.iceshelf)": [[268, "compass.ocean.iceshelf.compute_land_ice_pressure_and_draft"]], "cullmeshstep (class in compass.ocean.mesh.cull)": [[269, "compass.ocean.mesh.cull.CullMeshStep"]], "__init__() (compass.ocean.mesh.cull.cullmeshstep method)": [[269, "compass.ocean.mesh.cull.CullMeshStep.__init__"]], "run() (compass.ocean.mesh.cull.cullmeshstep method)": [[270, "compass.ocean.mesh.cull.CullMeshStep.run"]], "setup() (compass.ocean.mesh.cull.cullmeshstep method)": [[271, "compass.ocean.mesh.cull.CullMeshStep.setup"]], "cull_mesh() (in module compass.ocean.mesh.cull)": [[272, "compass.ocean.mesh.cull.cull_mesh"]], "floodplainmeshstep (class in compass.ocean.mesh.floodplain)": [[273, "compass.ocean.mesh.floodplain.FloodplainMeshStep"]], "__init__() (compass.ocean.mesh.floodplain.floodplainmeshstep method)": [[273, "compass.ocean.mesh.floodplain.FloodplainMeshStep.__init__"]], "run() (compass.ocean.mesh.floodplain.floodplainmeshstep method)": [[274, "compass.ocean.mesh.floodplain.FloodplainMeshStep.run"]], "remap_particles() (in module compass.ocean.particles)": [[275, "compass.ocean.particles.remap_particles"]], "write() (in module compass.ocean.particles)": [[276, "compass.ocean.particles.write"]], "plot_initial_state() (in module compass.ocean.plot)": [[277, "compass.ocean.plot.plot_initial_state"]], "plot_vertical_grid() (in module compass.ocean.plot)": [[278, "compass.ocean.plot.plot_vertical_grid"]], "baroclinicchannel (class in compass.ocean.tests.baroclinic_channel)": [[279, "compass.ocean.tests.baroclinic_channel.BaroclinicChannel"]], "__init__() (compass.ocean.tests.baroclinic_channel.baroclinicchannel method)": [[279, "compass.ocean.tests.baroclinic_channel.BaroclinicChannel.__init__"]], "configure() (in module compass.ocean.tests.baroclinic_channel)": [[280, "compass.ocean.tests.baroclinic_channel.configure"]], "decomptest (class in compass.ocean.tests.baroclinic_channel.decomp_test)": [[281, "compass.ocean.tests.baroclinic_channel.decomp_test.DecompTest"]], "__init__() (compass.ocean.tests.baroclinic_channel.decomp_test.decomptest method)": [[281, "compass.ocean.tests.baroclinic_channel.decomp_test.DecompTest.__init__"]], "configure() (compass.ocean.tests.baroclinic_channel.decomp_test.decomptest method)": [[282, "compass.ocean.tests.baroclinic_channel.decomp_test.DecompTest.configure"]], "run() (compass.ocean.tests.baroclinic_channel.decomp_test.decomptest method)": [[283, "compass.ocean.tests.baroclinic_channel.decomp_test.DecompTest.run"]], "default (class in compass.ocean.tests.baroclinic_channel.default)": [[284, "compass.ocean.tests.baroclinic_channel.default.Default"]], "__init__() (compass.ocean.tests.baroclinic_channel.default.default method)": [[284, "compass.ocean.tests.baroclinic_channel.default.Default.__init__"]], "configure() (compass.ocean.tests.baroclinic_channel.default.default method)": [[285, "compass.ocean.tests.baroclinic_channel.default.Default.configure"]], "run() (compass.ocean.tests.baroclinic_channel.default.default method)": [[286, "compass.ocean.tests.baroclinic_channel.default.Default.run"]], "forward (class in compass.ocean.tests.baroclinic_channel.forward)": [[287, "compass.ocean.tests.baroclinic_channel.forward.Forward"]], "__init__() (compass.ocean.tests.baroclinic_channel.forward.forward method)": [[287, "compass.ocean.tests.baroclinic_channel.forward.Forward.__init__"]], "run() (compass.ocean.tests.baroclinic_channel.forward.forward method)": [[288, "compass.ocean.tests.baroclinic_channel.forward.Forward.run"]], "setup() (compass.ocean.tests.baroclinic_channel.forward.forward method)": [[289, "compass.ocean.tests.baroclinic_channel.forward.Forward.setup"]], "initialstate (class in compass.ocean.tests.baroclinic_channel.initial_state)": [[290, "compass.ocean.tests.baroclinic_channel.initial_state.InitialState"]], "__init__() (compass.ocean.tests.baroclinic_channel.initial_state.initialstate method)": [[290, "compass.ocean.tests.baroclinic_channel.initial_state.InitialState.__init__"]], "run() (compass.ocean.tests.baroclinic_channel.initial_state.initialstate method)": [[291, "compass.ocean.tests.baroclinic_channel.initial_state.InitialState.run"]], "setup() (compass.ocean.tests.baroclinic_channel.initial_state.initialstate method)": [[292, "compass.ocean.tests.baroclinic_channel.initial_state.InitialState.setup"]], "restarttest (class in compass.ocean.tests.baroclinic_channel.restart_test)": [[293, "compass.ocean.tests.baroclinic_channel.restart_test.RestartTest"]], "__init__() (compass.ocean.tests.baroclinic_channel.restart_test.restarttest method)": [[293, "compass.ocean.tests.baroclinic_channel.restart_test.RestartTest.__init__"]], "configure() (compass.ocean.tests.baroclinic_channel.restart_test.restarttest method)": [[294, "compass.ocean.tests.baroclinic_channel.restart_test.RestartTest.configure"]], "run() (compass.ocean.tests.baroclinic_channel.restart_test.restarttest method)": [[295, "compass.ocean.tests.baroclinic_channel.restart_test.RestartTest.run"]], "rpetest (class in compass.ocean.tests.baroclinic_channel.rpe_test)": [[296, "compass.ocean.tests.baroclinic_channel.rpe_test.RpeTest"]], "__init__() (compass.ocean.tests.baroclinic_channel.rpe_test.rpetest method)": [[296, "compass.ocean.tests.baroclinic_channel.rpe_test.RpeTest.__init__"]], "configure() (compass.ocean.tests.baroclinic_channel.rpe_test.rpetest method)": [[297, "compass.ocean.tests.baroclinic_channel.rpe_test.RpeTest.configure"]], "run() (compass.ocean.tests.baroclinic_channel.rpe_test.rpetest method)": [[298, "compass.ocean.tests.baroclinic_channel.rpe_test.RpeTest.run"]], "analysis (class in compass.ocean.tests.baroclinic_channel.rpe_test.analysis)": [[299, "compass.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis"]], "__init__() (compass.ocean.tests.baroclinic_channel.rpe_test.analysis.analysis method)": [[299, "compass.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.__init__"]], "run() (compass.ocean.tests.baroclinic_channel.rpe_test.analysis.analysis method)": [[300, "compass.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.run"]], "setup() (compass.ocean.tests.baroclinic_channel.rpe_test.analysis.analysis method)": [[301, "compass.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.setup"]], "threadstest (class in compass.ocean.tests.baroclinic_channel.threads_test)": [[302, "compass.ocean.tests.baroclinic_channel.threads_test.ThreadsTest"]], "__init__() (compass.ocean.tests.baroclinic_channel.threads_test.threadstest method)": [[302, "compass.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.__init__"]], "configure() (compass.ocean.tests.baroclinic_channel.threads_test.threadstest method)": [[303, "compass.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.configure"]], "run() (compass.ocean.tests.baroclinic_channel.threads_test.threadstest method)": [[304, "compass.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.run"]], "dambreak (class in compass.ocean.tests.dam_break)": [[305, "compass.ocean.tests.dam_break.DamBreak"]], "__init__() (compass.ocean.tests.dam_break.dambreak method)": [[305, "compass.ocean.tests.dam_break.DamBreak.__init__"]], "default (class in compass.ocean.tests.dam_break.default)": [[306, "compass.ocean.tests.dam_break.default.Default"]], "__init__() (compass.ocean.tests.dam_break.default.default method)": [[306, "compass.ocean.tests.dam_break.default.Default.__init__"]], "configure() (compass.ocean.tests.dam_break.default.default method)": [[307, "compass.ocean.tests.dam_break.default.Default.configure"]], "forward (class in compass.ocean.tests.dam_break.forward)": [[308, "compass.ocean.tests.dam_break.forward.Forward"]], "__init__() (compass.ocean.tests.dam_break.forward.forward method)": [[308, "compass.ocean.tests.dam_break.forward.Forward.__init__"]], "run() (compass.ocean.tests.dam_break.forward.forward method)": [[309, "compass.ocean.tests.dam_break.forward.Forward.run"]], "initialstate (class in compass.ocean.tests.dam_break.initial_state)": [[310, "compass.ocean.tests.dam_break.initial_state.InitialState"]], "__init__() (compass.ocean.tests.dam_break.initial_state.initialstate method)": [[310, "compass.ocean.tests.dam_break.initial_state.InitialState.__init__"]], "run() (compass.ocean.tests.dam_break.initial_state.initialstate method)": [[311, "compass.ocean.tests.dam_break.initial_state.InitialState.run"]], "viz (class in compass.ocean.tests.dam_break.viz)": [[312, "compass.ocean.tests.dam_break.viz.Viz"]], "__init__() (compass.ocean.tests.dam_break.viz.viz method)": [[312, "compass.ocean.tests.dam_break.viz.Viz.__init__"]], "run() (compass.ocean.tests.dam_break.viz.viz method)": [[313, "compass.ocean.tests.dam_break.viz.Viz.run"]], "dryingslope (class in compass.ocean.tests.drying_slope)": [[314, "compass.ocean.tests.drying_slope.DryingSlope"]], "__init__() (compass.ocean.tests.drying_slope.dryingslope method)": [[314, "compass.ocean.tests.drying_slope.DryingSlope.__init__"]], "default (class in compass.ocean.tests.drying_slope.default)": [[315, "compass.ocean.tests.drying_slope.default.Default"]], "__init__() (compass.ocean.tests.drying_slope.default.default method)": [[315, "compass.ocean.tests.drying_slope.default.Default.__init__"]], "configure() (compass.ocean.tests.drying_slope.default.default method)": [[316, "compass.ocean.tests.drying_slope.default.Default.configure"]], "forward (class in compass.ocean.tests.drying_slope.forward)": [[317, "compass.ocean.tests.drying_slope.forward.Forward"]], "__init__() (compass.ocean.tests.drying_slope.forward.forward method)": [[317, "compass.ocean.tests.drying_slope.forward.Forward.__init__"]], "run() (compass.ocean.tests.drying_slope.forward.forward method)": [[318, "compass.ocean.tests.drying_slope.forward.Forward.run"]], "initialstate (class in compass.ocean.tests.drying_slope.initial_state)": [[319, "compass.ocean.tests.drying_slope.initial_state.InitialState"]], "__init__() (compass.ocean.tests.drying_slope.initial_state.initialstate method)": [[319, "compass.ocean.tests.drying_slope.initial_state.InitialState.__init__"]], "run() (compass.ocean.tests.drying_slope.initial_state.initialstate method)": [[320, "compass.ocean.tests.drying_slope.initial_state.InitialState.run"]], "viz (class in compass.ocean.tests.drying_slope.viz)": [[321, "compass.ocean.tests.drying_slope.viz.Viz"]], "__init__() (compass.ocean.tests.drying_slope.viz.viz method)": [[321, "compass.ocean.tests.drying_slope.viz.Viz.__init__"]], "run() (compass.ocean.tests.drying_slope.viz.viz method)": [[322, "compass.ocean.tests.drying_slope.viz.Viz.run"]], "globalconvergence (class in compass.ocean.tests.global_convergence)": [[323, "compass.ocean.tests.global_convergence.GlobalConvergence"]], "__init__() (compass.ocean.tests.global_convergence.globalconvergence method)": [[323, "compass.ocean.tests.global_convergence.GlobalConvergence.__init__"]], "cosinebell (class in compass.ocean.tests.global_convergence.cosine_bell)": [[324, "compass.ocean.tests.global_convergence.cosine_bell.CosineBell"]], "__init__() (compass.ocean.tests.global_convergence.cosine_bell.cosinebell method)": [[324, "compass.ocean.tests.global_convergence.cosine_bell.CosineBell.__init__"]], "configure() (compass.ocean.tests.global_convergence.cosine_bell.cosinebell method)": [[325, "compass.ocean.tests.global_convergence.cosine_bell.CosineBell.configure"]], "run() (compass.ocean.tests.global_convergence.cosine_bell.cosinebell method)": [[326, "compass.ocean.tests.global_convergence.cosine_bell.CosineBell.run"]], "analysis (class in compass.ocean.tests.global_convergence.cosine_bell.analysis)": [[327, "compass.ocean.tests.global_convergence.cosine_bell.analysis.Analysis"]], "__init__() (compass.ocean.tests.global_convergence.cosine_bell.analysis.analysis method)": [[327, "compass.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.__init__"]], "rmse() (compass.ocean.tests.global_convergence.cosine_bell.analysis.analysis method)": [[328, "compass.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rmse"]], "run() (compass.ocean.tests.global_convergence.cosine_bell.analysis.analysis method)": [[329, "compass.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.run"]], "forward (class in compass.ocean.tests.global_convergence.cosine_bell.forward)": [[330, "compass.ocean.tests.global_convergence.cosine_bell.forward.Forward"]], "__init__() (compass.ocean.tests.global_convergence.cosine_bell.forward.forward method)": [[330, "compass.ocean.tests.global_convergence.cosine_bell.forward.Forward.__init__"]], "get_dt() (compass.ocean.tests.global_convergence.cosine_bell.forward.forward method)": [[331, "compass.ocean.tests.global_convergence.cosine_bell.forward.Forward.get_dt"]], "run() (compass.ocean.tests.global_convergence.cosine_bell.forward.forward method)": [[332, "compass.ocean.tests.global_convergence.cosine_bell.forward.Forward.run"]], "setup() (compass.ocean.tests.global_convergence.cosine_bell.forward.forward method)": [[333, "compass.ocean.tests.global_convergence.cosine_bell.forward.Forward.setup"]], "init (class in compass.ocean.tests.global_convergence.cosine_bell.init)": [[334, "compass.ocean.tests.global_convergence.cosine_bell.init.Init"]], "__init__() (compass.ocean.tests.global_convergence.cosine_bell.init.init method)": [[334, "compass.ocean.tests.global_convergence.cosine_bell.init.Init.__init__"]], "run() (compass.ocean.tests.global_convergence.cosine_bell.init.init method)": [[335, "compass.ocean.tests.global_convergence.cosine_bell.init.Init.run"]], "globalocean (class in compass.ocean.tests.global_ocean)": [[336, "compass.ocean.tests.global_ocean.GlobalOcean"]], "__init__() (compass.ocean.tests.global_ocean.globalocean method)": [[336, "compass.ocean.tests.global_ocean.GlobalOcean.__init__"]], "analysistest (class in compass.ocean.tests.global_ocean.analysis_test)": [[337, "compass.ocean.tests.global_ocean.analysis_test.AnalysisTest"]], "__init__() (compass.ocean.tests.global_ocean.analysis_test.analysistest method)": [[337, "compass.ocean.tests.global_ocean.analysis_test.AnalysisTest.__init__"]], "configure() (compass.ocean.tests.global_ocean.analysis_test.analysistest method)": [[338, "compass.ocean.tests.global_ocean.analysis_test.AnalysisTest.configure"]], "run() (compass.ocean.tests.global_ocean.analysis_test.analysistest method)": [[339, "compass.ocean.tests.global_ocean.analysis_test.AnalysisTest.run"]], "compass.ocean.tests.global_ocean.configure": [[340, "module-compass.ocean.tests.global_ocean.configure"]], "configure_global_ocean() (in module compass.ocean.tests.global_ocean.configure)": [[341, "compass.ocean.tests.global_ocean.configure.configure_global_ocean"]], "dailyoutputtest (class in compass.ocean.tests.global_ocean.daily_output_test)": [[342, "compass.ocean.tests.global_ocean.daily_output_test.DailyOutputTest"]], "__init__() (compass.ocean.tests.global_ocean.daily_output_test.dailyoutputtest method)": [[342, "compass.ocean.tests.global_ocean.daily_output_test.DailyOutputTest.__init__"]], "configure() (compass.ocean.tests.global_ocean.daily_output_test.dailyoutputtest method)": [[343, "compass.ocean.tests.global_ocean.daily_output_test.DailyOutputTest.configure"]], "run() (compass.ocean.tests.global_ocean.daily_output_test.dailyoutputtest method)": [[344, "compass.ocean.tests.global_ocean.daily_output_test.DailyOutputTest.run"]], "decomptest (class in compass.ocean.tests.global_ocean.decomp_test)": [[345, "compass.ocean.tests.global_ocean.decomp_test.DecompTest"]], "__init__() (compass.ocean.tests.global_ocean.decomp_test.decomptest method)": [[345, "compass.ocean.tests.global_ocean.decomp_test.DecompTest.__init__"]], "configure() (compass.ocean.tests.global_ocean.decomp_test.decomptest method)": [[346, "compass.ocean.tests.global_ocean.decomp_test.DecompTest.configure"]], "run() (compass.ocean.tests.global_ocean.decomp_test.decomptest method)": [[347, "compass.ocean.tests.global_ocean.decomp_test.DecompTest.run"]], "dynamicadjustment (class in compass.ocean.tests.global_ocean.dynamic_adjustment)": [[348, "compass.ocean.tests.global_ocean.dynamic_adjustment.DynamicAdjustment"]], "__init__() (compass.ocean.tests.global_ocean.dynamic_adjustment.dynamicadjustment method)": [[348, "compass.ocean.tests.global_ocean.dynamic_adjustment.DynamicAdjustment.__init__"]], "run() (compass.ocean.tests.global_ocean.dynamic_adjustment.dynamicadjustment method)": [[349, "compass.ocean.tests.global_ocean.dynamic_adjustment.DynamicAdjustment.run"]], "filesfore3sm (class in compass.ocean.tests.global_ocean.files_for_e3sm)": [[350, "compass.ocean.tests.global_ocean.files_for_e3sm.FilesForE3SM"]], "__init__() (compass.ocean.tests.global_ocean.files_for_e3sm.filesfore3sm method)": [[350, "compass.ocean.tests.global_ocean.files_for_e3sm.FilesForE3SM.__init__"]], "configure() (compass.ocean.tests.global_ocean.files_for_e3sm.filesfore3sm method)": [[351, "compass.ocean.tests.global_ocean.files_for_e3sm.FilesForE3SM.configure"]], "run() (compass.ocean.tests.global_ocean.files_for_e3sm.filesfore3sm method)": [[352, "compass.ocean.tests.global_ocean.files_for_e3sm.FilesForE3SM.run"]], "diagnosticsfiles (class in compass.ocean.tests.global_ocean.files_for_e3sm.diagnostics_files)": [[353, "compass.ocean.tests.global_ocean.files_for_e3sm.diagnostics_files.DiagnosticsFiles"]], "__init__() (compass.ocean.tests.global_ocean.files_for_e3sm.diagnostics_files.diagnosticsfiles method)": [[353, "compass.ocean.tests.global_ocean.files_for_e3sm.diagnostics_files.DiagnosticsFiles.__init__"]], "run() (compass.ocean.tests.global_ocean.files_for_e3sm.diagnostics_files.diagnosticsfiles method)": [[354, "compass.ocean.tests.global_ocean.files_for_e3sm.diagnostics_files.DiagnosticsFiles.run"]], "oceangraphpartition (class in compass.ocean.tests.global_ocean.files_for_e3sm.ocean_graph_partition)": [[355, "compass.ocean.tests.global_ocean.files_for_e3sm.ocean_graph_partition.OceanGraphPartition"]], "__init__() (compass.ocean.tests.global_ocean.files_for_e3sm.ocean_graph_partition.oceangraphpartition method)": [[355, "compass.ocean.tests.global_ocean.files_for_e3sm.ocean_graph_partition.OceanGraphPartition.__init__"]], "run() (compass.ocean.tests.global_ocean.files_for_e3sm.ocean_graph_partition.oceangraphpartition method)": [[356, "compass.ocean.tests.global_ocean.files_for_e3sm.ocean_graph_partition.OceanGraphPartition.run"]], "oceaninitialcondition (class in compass.ocean.tests.global_ocean.files_for_e3sm.ocean_initial_condition)": [[357, "compass.ocean.tests.global_ocean.files_for_e3sm.ocean_initial_condition.OceanInitialCondition"]], "__init__() (compass.ocean.tests.global_ocean.files_for_e3sm.ocean_initial_condition.oceaninitialcondition method)": [[357, "compass.ocean.tests.global_ocean.files_for_e3sm.ocean_initial_condition.OceanInitialCondition.__init__"]], "run() (compass.ocean.tests.global_ocean.files_for_e3sm.ocean_initial_condition.oceaninitialcondition method)": [[358, "compass.ocean.tests.global_ocean.files_for_e3sm.ocean_initial_condition.OceanInitialCondition.run"]], "scrip (class in compass.ocean.tests.global_ocean.files_for_e3sm.scrip)": [[359, "compass.ocean.tests.global_ocean.files_for_e3sm.scrip.Scrip"]], "__init__() (compass.ocean.tests.global_ocean.files_for_e3sm.scrip.scrip method)": [[359, "compass.ocean.tests.global_ocean.files_for_e3sm.scrip.Scrip.__init__"]], "run() (compass.ocean.tests.global_ocean.files_for_e3sm.scrip.scrip method)": [[360, "compass.ocean.tests.global_ocean.files_for_e3sm.scrip.Scrip.run"]], "seaiceinitialcondition (class in compass.ocean.tests.global_ocean.files_for_e3sm.seaice_initial_condition)": [[361, "compass.ocean.tests.global_ocean.files_for_e3sm.seaice_initial_condition.SeaiceInitialCondition"]], "__init__() (compass.ocean.tests.global_ocean.files_for_e3sm.seaice_initial_condition.seaiceinitialcondition method)": [[361, "compass.ocean.tests.global_ocean.files_for_e3sm.seaice_initial_condition.SeaiceInitialCondition.__init__"]], "run() (compass.ocean.tests.global_ocean.files_for_e3sm.seaice_initial_condition.seaiceinitialcondition method)": [[362, "compass.ocean.tests.global_ocean.files_for_e3sm.seaice_initial_condition.SeaiceInitialCondition.run"]], "forwardstep (class in compass.ocean.tests.global_ocean.forward)": [[363, "compass.ocean.tests.global_ocean.forward.ForwardStep"]], "__init__() (compass.ocean.tests.global_ocean.forward.forwardstep method)": [[363, "compass.ocean.tests.global_ocean.forward.ForwardStep.__init__"]], "run() (compass.ocean.tests.global_ocean.forward.forwardstep method)": [[364, "compass.ocean.tests.global_ocean.forward.ForwardStep.run"]], "setup() (compass.ocean.tests.global_ocean.forward.forwardstep method)": [[365, "compass.ocean.tests.global_ocean.forward.ForwardStep.setup"]], "forwardtestcase (class in compass.ocean.tests.global_ocean.forward)": [[366, "compass.ocean.tests.global_ocean.forward.ForwardTestCase"]], "__init__() (compass.ocean.tests.global_ocean.forward.forwardtestcase method)": [[366, "compass.ocean.tests.global_ocean.forward.ForwardTestCase.__init__"]], "configure() (compass.ocean.tests.global_ocean.forward.forwardtestcase method)": [[367, "compass.ocean.tests.global_ocean.forward.ForwardTestCase.configure"]], "run() (compass.ocean.tests.global_ocean.forward.forwardtestcase method)": [[368, "compass.ocean.tests.global_ocean.forward.ForwardTestCase.run"]], "init (class in compass.ocean.tests.global_ocean.init)": [[369, "compass.ocean.tests.global_ocean.init.Init"]], "__init__() (compass.ocean.tests.global_ocean.init.init method)": [[369, "compass.ocean.tests.global_ocean.init.Init.__init__"]], "configure() (compass.ocean.tests.global_ocean.init.init method)": [[370, "compass.ocean.tests.global_ocean.init.Init.configure"]], "run() (compass.ocean.tests.global_ocean.init.init method)": [[371, "compass.ocean.tests.global_ocean.init.Init.run"]], "initialstate (class in compass.ocean.tests.global_ocean.init.initial_state)": [[372, "compass.ocean.tests.global_ocean.init.initial_state.InitialState"]], "__init__() (compass.ocean.tests.global_ocean.init.initial_state.initialstate method)": [[372, "compass.ocean.tests.global_ocean.init.initial_state.InitialState.__init__"]], "run() (compass.ocean.tests.global_ocean.init.initial_state.initialstate method)": [[373, "compass.ocean.tests.global_ocean.init.initial_state.InitialState.run"]], "setup() (compass.ocean.tests.global_ocean.init.initial_state.initialstate method)": [[374, "compass.ocean.tests.global_ocean.init.initial_state.InitialState.setup"]], "sshadjustment (class in compass.ocean.tests.global_ocean.init.ssh_adjustment)": [[375, "compass.ocean.tests.global_ocean.init.ssh_adjustment.SshAdjustment"]], "__init__() (compass.ocean.tests.global_ocean.init.ssh_adjustment.sshadjustment method)": [[375, "compass.ocean.tests.global_ocean.init.ssh_adjustment.SshAdjustment.__init__"]], "run() (compass.ocean.tests.global_ocean.init.ssh_adjustment.sshadjustment method)": [[376, "compass.ocean.tests.global_ocean.init.ssh_adjustment.SshAdjustment.run"]], "setup() (compass.ocean.tests.global_ocean.init.ssh_adjustment.sshadjustment method)": [[377, "compass.ocean.tests.global_ocean.init.ssh_adjustment.SshAdjustment.setup"]], "mesh (class in compass.ocean.tests.global_ocean.mesh)": [[378, "compass.ocean.tests.global_ocean.mesh.Mesh"]], "__init__() (compass.ocean.tests.global_ocean.mesh.mesh method)": [[378, "compass.ocean.tests.global_ocean.mesh.Mesh.__init__"]], "configure() (compass.ocean.tests.global_ocean.mesh.mesh method)": [[379, "compass.ocean.tests.global_ocean.mesh.Mesh.configure"]], "run() (compass.ocean.tests.global_ocean.mesh.mesh method)": [[380, "compass.ocean.tests.global_ocean.mesh.Mesh.run"]], "ec30to60basemesh (class in compass.ocean.tests.global_ocean.mesh.ec30to60)": [[381, "compass.ocean.tests.global_ocean.mesh.ec30to60.EC30to60BaseMesh"]], "__init__() (compass.ocean.tests.global_ocean.mesh.ec30to60.ec30to60basemesh method)": [[381, "compass.ocean.tests.global_ocean.mesh.ec30to60.EC30to60BaseMesh.__init__"]], "build_cell_width_lat_lon() (compass.ocean.tests.global_ocean.mesh.ec30to60.ec30to60basemesh method)": [[382, "compass.ocean.tests.global_ocean.mesh.ec30to60.EC30to60BaseMesh.build_cell_width_lat_lon"]], "ec30to60dynamicadjustment (class in compass.ocean.tests.global_ocean.mesh.ec30to60.dynamic_adjustment)": [[383, "compass.ocean.tests.global_ocean.mesh.ec30to60.dynamic_adjustment.EC30to60DynamicAdjustment"]], "__init__() (compass.ocean.tests.global_ocean.mesh.ec30to60.dynamic_adjustment.ec30to60dynamicadjustment method)": [[383, "compass.ocean.tests.global_ocean.mesh.ec30to60.dynamic_adjustment.EC30to60DynamicAdjustment.__init__"]], "configure() (compass.ocean.tests.global_ocean.mesh.ec30to60.dynamic_adjustment.ec30to60dynamicadjustment method)": [[384, "compass.ocean.tests.global_ocean.mesh.ec30to60.dynamic_adjustment.EC30to60DynamicAdjustment.configure"]], "run() (compass.ocean.tests.global_ocean.mesh.ec30to60.dynamic_adjustment.ec30to60dynamicadjustment method)": [[385, "compass.ocean.tests.global_ocean.mesh.ec30to60.dynamic_adjustment.EC30to60DynamicAdjustment.run"]], "qu240dynamicadjustment (class in compass.ocean.tests.global_ocean.mesh.qu240.dynamic_adjustment)": [[386, "compass.ocean.tests.global_ocean.mesh.qu240.dynamic_adjustment.QU240DynamicAdjustment"]], "__init__() (compass.ocean.tests.global_ocean.mesh.qu240.dynamic_adjustment.qu240dynamicadjustment method)": [[386, "compass.ocean.tests.global_ocean.mesh.qu240.dynamic_adjustment.QU240DynamicAdjustment.__init__"]], "configure() (compass.ocean.tests.global_ocean.mesh.qu240.dynamic_adjustment.qu240dynamicadjustment method)": [[387, "compass.ocean.tests.global_ocean.mesh.qu240.dynamic_adjustment.QU240DynamicAdjustment.configure"]], "run() (compass.ocean.tests.global_ocean.mesh.qu240.dynamic_adjustment.qu240dynamicadjustment method)": [[388, "compass.ocean.tests.global_ocean.mesh.qu240.dynamic_adjustment.QU240DynamicAdjustment.run"]], "so12to60basemesh (class in compass.ocean.tests.global_ocean.mesh.so12to60)": [[389, "compass.ocean.tests.global_ocean.mesh.so12to60.SO12to60BaseMesh"]], "__init__() (compass.ocean.tests.global_ocean.mesh.so12to60.so12to60basemesh method)": [[389, "compass.ocean.tests.global_ocean.mesh.so12to60.SO12to60BaseMesh.__init__"]], "build_cell_width_lat_lon() (compass.ocean.tests.global_ocean.mesh.so12to60.so12to60basemesh method)": [[390, "compass.ocean.tests.global_ocean.mesh.so12to60.SO12to60BaseMesh.build_cell_width_lat_lon"]], "so12to60dynamicadjustment (class in compass.ocean.tests.global_ocean.mesh.so12to60.dynamic_adjustment)": [[391, "compass.ocean.tests.global_ocean.mesh.so12to60.dynamic_adjustment.SO12to60DynamicAdjustment"]], "__init__() (compass.ocean.tests.global_ocean.mesh.so12to60.dynamic_adjustment.so12to60dynamicadjustment method)": [[391, "compass.ocean.tests.global_ocean.mesh.so12to60.dynamic_adjustment.SO12to60DynamicAdjustment.__init__"]], "configure() (compass.ocean.tests.global_ocean.mesh.so12to60.dynamic_adjustment.so12to60dynamicadjustment method)": [[392, "compass.ocean.tests.global_ocean.mesh.so12to60.dynamic_adjustment.SO12to60DynamicAdjustment.configure"]], "run() (compass.ocean.tests.global_ocean.mesh.so12to60.dynamic_adjustment.so12to60dynamicadjustment method)": [[393, "compass.ocean.tests.global_ocean.mesh.so12to60.dynamic_adjustment.SO12to60DynamicAdjustment.run"]], "wc14basemesh (class in compass.ocean.tests.global_ocean.mesh.wc14)": [[394, "compass.ocean.tests.global_ocean.mesh.wc14.WC14BaseMesh"]], "__init__() (compass.ocean.tests.global_ocean.mesh.wc14.wc14basemesh method)": [[394, "compass.ocean.tests.global_ocean.mesh.wc14.WC14BaseMesh.__init__"]], "build_cell_width_lat_lon() (compass.ocean.tests.global_ocean.mesh.wc14.wc14basemesh method)": [[395, "compass.ocean.tests.global_ocean.mesh.wc14.WC14BaseMesh.build_cell_width_lat_lon"]], "wc14dynamicadjustment (class in compass.ocean.tests.global_ocean.mesh.wc14.dynamic_adjustment)": [[396, "compass.ocean.tests.global_ocean.mesh.wc14.dynamic_adjustment.WC14DynamicAdjustment"]], "__init__() (compass.ocean.tests.global_ocean.mesh.wc14.dynamic_adjustment.wc14dynamicadjustment method)": [[396, "compass.ocean.tests.global_ocean.mesh.wc14.dynamic_adjustment.WC14DynamicAdjustment.__init__"]], "configure() (compass.ocean.tests.global_ocean.mesh.wc14.dynamic_adjustment.wc14dynamicadjustment method)": [[397, "compass.ocean.tests.global_ocean.mesh.wc14.dynamic_adjustment.WC14DynamicAdjustment.configure"]], "run() (compass.ocean.tests.global_ocean.mesh.wc14.dynamic_adjustment.wc14dynamicadjustment method)": [[398, "compass.ocean.tests.global_ocean.mesh.wc14.dynamic_adjustment.WC14DynamicAdjustment.run"]], "add_mesh_and_init_metadata() (in module compass.ocean.tests.global_ocean.metadata)": [[399, "compass.ocean.tests.global_ocean.metadata.add_mesh_and_init_metadata"]], "get_e3sm_mesh_names() (in module compass.ocean.tests.global_ocean.metadata)": [[400, "compass.ocean.tests.global_ocean.metadata.get_e3sm_mesh_names"]], "performancetest (class in compass.ocean.tests.global_ocean.performance_test)": [[401, "compass.ocean.tests.global_ocean.performance_test.PerformanceTest"]], "__init__() (compass.ocean.tests.global_ocean.performance_test.performancetest method)": [[401, "compass.ocean.tests.global_ocean.performance_test.PerformanceTest.__init__"]], "configure() (compass.ocean.tests.global_ocean.performance_test.performancetest method)": [[402, "compass.ocean.tests.global_ocean.performance_test.PerformanceTest.configure"]], "run() (compass.ocean.tests.global_ocean.performance_test.performancetest method)": [[403, "compass.ocean.tests.global_ocean.performance_test.PerformanceTest.run"]], "restarttest (class in compass.ocean.tests.global_ocean.restart_test)": [[404, "compass.ocean.tests.global_ocean.restart_test.RestartTest"]], "__init__() (compass.ocean.tests.global_ocean.restart_test.restarttest method)": [[404, "compass.ocean.tests.global_ocean.restart_test.RestartTest.__init__"]], "configure() (compass.ocean.tests.global_ocean.restart_test.restarttest method)": [[405, "compass.ocean.tests.global_ocean.restart_test.RestartTest.configure"]], "run() (compass.ocean.tests.global_ocean.restart_test.restarttest method)": [[406, "compass.ocean.tests.global_ocean.restart_test.RestartTest.run"]], "threadstest (class in compass.ocean.tests.global_ocean.threads_test)": [[407, "compass.ocean.tests.global_ocean.threads_test.ThreadsTest"]], "__init__() (compass.ocean.tests.global_ocean.threads_test.threadstest method)": [[407, "compass.ocean.tests.global_ocean.threads_test.ThreadsTest.__init__"]], "configure() (compass.ocean.tests.global_ocean.threads_test.threadstest method)": [[408, "compass.ocean.tests.global_ocean.threads_test.ThreadsTest.configure"]], "run() (compass.ocean.tests.global_ocean.threads_test.threadstest method)": [[409, "compass.ocean.tests.global_ocean.threads_test.ThreadsTest.run"]], "gotm (class in compass.ocean.tests.gotm)": [[410, "compass.ocean.tests.gotm.Gotm"]], "__init__() (compass.ocean.tests.gotm.gotm method)": [[410, "compass.ocean.tests.gotm.Gotm.__init__"]], "default (class in compass.ocean.tests.gotm.default)": [[411, "compass.ocean.tests.gotm.default.Default"]], "__init__() (compass.ocean.tests.gotm.default.default method)": [[411, "compass.ocean.tests.gotm.default.Default.__init__"]], "validate() (compass.ocean.tests.gotm.default.default method)": [[412, "compass.ocean.tests.gotm.default.Default.validate"]], "analysis (class in compass.ocean.tests.gotm.default.analysis)": [[413, "compass.ocean.tests.gotm.default.analysis.Analysis"]], "__init__() (compass.ocean.tests.gotm.default.analysis.analysis method)": [[413, "compass.ocean.tests.gotm.default.analysis.Analysis.__init__"]], "run() (compass.ocean.tests.gotm.default.analysis.analysis method)": [[414, "compass.ocean.tests.gotm.default.analysis.Analysis.run"]], "forward (class in compass.ocean.tests.gotm.default.forward)": [[415, "compass.ocean.tests.gotm.default.forward.Forward"]], "__init__() (compass.ocean.tests.gotm.default.forward.forward method)": [[415, "compass.ocean.tests.gotm.default.forward.Forward.__init__"]], "run() (compass.ocean.tests.gotm.default.forward.forward method)": [[416, "compass.ocean.tests.gotm.default.forward.Forward.run"]], "init (class in compass.ocean.tests.gotm.default.init)": [[417, "compass.ocean.tests.gotm.default.init.Init"]], "__init__() (compass.ocean.tests.gotm.default.init.init method)": [[417, "compass.ocean.tests.gotm.default.init.Init.__init__"]], "run() (compass.ocean.tests.gotm.default.init.init method)": [[418, "compass.ocean.tests.gotm.default.init.Init.run"]], "hurricane (class in compass.ocean.tests.hurricane)": [[419, "compass.ocean.tests.hurricane.Hurricane"]], "__init__() (compass.ocean.tests.hurricane.hurricane method)": [[419, "compass.ocean.tests.hurricane.Hurricane.__init__"]], "analysis (class in compass.ocean.tests.hurricane.analysis)": [[420, "compass.ocean.tests.hurricane.analysis.Analysis"]], "__init__() (compass.ocean.tests.hurricane.analysis.analysis method)": [[420, "compass.ocean.tests.hurricane.analysis.Analysis.__init__"]], "read_pointstats() (compass.ocean.tests.hurricane.analysis.analysis method)": [[421, "compass.ocean.tests.hurricane.analysis.Analysis.read_pointstats"]], "read_station_data() (compass.ocean.tests.hurricane.analysis.analysis method)": [[422, "compass.ocean.tests.hurricane.analysis.Analysis.read_station_data"]], "read_station_file() (compass.ocean.tests.hurricane.analysis.analysis method)": [[423, "compass.ocean.tests.hurricane.analysis.Analysis.read_station_file"]], "run() (compass.ocean.tests.hurricane.analysis.analysis method)": [[424, "compass.ocean.tests.hurricane.analysis.Analysis.run"]], "setup() (compass.ocean.tests.hurricane.analysis.analysis method)": [[425, "compass.ocean.tests.hurricane.analysis.Analysis.setup"]], "compass.ocean.tests.hurricane.configure": [[426, "module-compass.ocean.tests.hurricane.configure"]], "forward (class in compass.ocean.tests.hurricane.forward)": [[427, "compass.ocean.tests.hurricane.forward.Forward"]], "__init__() (compass.ocean.tests.hurricane.forward.forward method)": [[427, "compass.ocean.tests.hurricane.forward.Forward.__init__"]], "configure() (compass.ocean.tests.hurricane.forward.forward method)": [[428, "compass.ocean.tests.hurricane.forward.Forward.configure"]], "run() (compass.ocean.tests.hurricane.forward.forward method)": [[429, "compass.ocean.tests.hurricane.forward.Forward.run"]], "forwardstep (class in compass.ocean.tests.hurricane.forward.forward)": [[430, "compass.ocean.tests.hurricane.forward.forward.ForwardStep"]], "__init__() (compass.ocean.tests.hurricane.forward.forward.forwardstep method)": [[430, "compass.ocean.tests.hurricane.forward.forward.ForwardStep.__init__"]], "run() (compass.ocean.tests.hurricane.forward.forward.forwardstep method)": [[431, "compass.ocean.tests.hurricane.forward.forward.ForwardStep.run"]], "setup() (compass.ocean.tests.hurricane.forward.forward.forwardstep method)": [[432, "compass.ocean.tests.hurricane.forward.forward.ForwardStep.setup"]], "init (class in compass.ocean.tests.hurricane.init)": [[433, "compass.ocean.tests.hurricane.init.Init"]], "__init__() (compass.ocean.tests.hurricane.init.init method)": [[433, "compass.ocean.tests.hurricane.init.Init.__init__"]], "configure() (compass.ocean.tests.hurricane.init.init method)": [[434, "compass.ocean.tests.hurricane.init.Init.configure"]], "run() (compass.ocean.tests.hurricane.init.init method)": [[435, "compass.ocean.tests.hurricane.init.Init.run"]], "createpointstatsfile (class in compass.ocean.tests.hurricane.init.create_pointstats_file)": [[436, "compass.ocean.tests.hurricane.init.create_pointstats_file.CreatePointstatsFile"]], "__init__() (compass.ocean.tests.hurricane.init.create_pointstats_file.createpointstatsfile method)": [[436, "compass.ocean.tests.hurricane.init.create_pointstats_file.CreatePointstatsFile.__init__"]], "create_pointstats_file() (compass.ocean.tests.hurricane.init.create_pointstats_file.createpointstatsfile method)": [[437, "compass.ocean.tests.hurricane.init.create_pointstats_file.CreatePointstatsFile.create_pointstats_file"]], "run() (compass.ocean.tests.hurricane.init.create_pointstats_file.createpointstatsfile method)": [[438, "compass.ocean.tests.hurricane.init.create_pointstats_file.CreatePointstatsFile.run"]], "initialstate (class in compass.ocean.tests.hurricane.init.initial_state)": [[439, "compass.ocean.tests.hurricane.init.initial_state.InitialState"]], "__init__() (compass.ocean.tests.hurricane.init.initial_state.initialstate method)": [[439, "compass.ocean.tests.hurricane.init.initial_state.InitialState.__init__"]], "run() (compass.ocean.tests.hurricane.init.initial_state.initialstate method)": [[440, "compass.ocean.tests.hurricane.init.initial_state.InitialState.run"]], "setup() (compass.ocean.tests.hurricane.init.initial_state.initialstate method)": [[441, "compass.ocean.tests.hurricane.init.initial_state.InitialState.setup"]], "interpolateatmforcing (class in compass.ocean.tests.hurricane.init.interpolate_atm_forcing)": [[442, "compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing"]], "__init__() (compass.ocean.tests.hurricane.init.interpolate_atm_forcing.interpolateatmforcing method)": [[442, "compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing.__init__"]], "interpolate_data_to_grid() (compass.ocean.tests.hurricane.init.interpolate_atm_forcing.interpolateatmforcing method)": [[443, "compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing.interpolate_data_to_grid"]], "plot_interp_data() (compass.ocean.tests.hurricane.init.interpolate_atm_forcing.interpolateatmforcing method)": [[444, "compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing.plot_interp_data"]], "run() (compass.ocean.tests.hurricane.init.interpolate_atm_forcing.interpolateatmforcing method)": [[445, "compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing.run"]], "write_to_file() (compass.ocean.tests.hurricane.init.interpolate_atm_forcing.interpolateatmforcing method)": [[446, "compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing.write_to_file"]], "mesh (class in compass.ocean.tests.hurricane.mesh)": [[447, "compass.ocean.tests.hurricane.mesh.Mesh"]], "__init__() (compass.ocean.tests.hurricane.mesh.mesh method)": [[447, "compass.ocean.tests.hurricane.mesh.Mesh.__init__"]], "configure() (compass.ocean.tests.hurricane.mesh.mesh method)": [[448, "compass.ocean.tests.hurricane.mesh.Mesh.configure"]], "run() (compass.ocean.tests.hurricane.mesh.mesh method)": [[449, "compass.ocean.tests.hurricane.mesh.Mesh.run"]], "dequ120at30cr10rr2basemesh (class in compass.ocean.tests.hurricane.mesh.dequ120at30cr10rr2)": [[450, "compass.ocean.tests.hurricane.mesh.dequ120at30cr10rr2.DEQU120at30cr10rr2BaseMesh"]], "__init__() (compass.ocean.tests.hurricane.mesh.dequ120at30cr10rr2.dequ120at30cr10rr2basemesh method)": [[450, "compass.ocean.tests.hurricane.mesh.dequ120at30cr10rr2.DEQU120at30cr10rr2BaseMesh.__init__"]], "build_cell_width_lat_lon() (compass.ocean.tests.hurricane.mesh.dequ120at30cr10rr2.dequ120at30cr10rr2basemesh method)": [[451, "compass.ocean.tests.hurricane.mesh.dequ120at30cr10rr2.DEQU120at30cr10rr2BaseMesh.build_cell_width_lat_lon"]], "iceshelf2d (class in compass.ocean.tests.ice_shelf_2d)": [[452, "compass.ocean.tests.ice_shelf_2d.IceShelf2d"]], "__init__() (compass.ocean.tests.ice_shelf_2d.iceshelf2d method)": [[452, "compass.ocean.tests.ice_shelf_2d.IceShelf2d.__init__"]], "configure() (in module compass.ocean.tests.ice_shelf_2d)": [[453, "compass.ocean.tests.ice_shelf_2d.configure"]], "default (class in compass.ocean.tests.ice_shelf_2d.default)": [[454, "compass.ocean.tests.ice_shelf_2d.default.Default"]], "__init__() (compass.ocean.tests.ice_shelf_2d.default.default method)": [[454, "compass.ocean.tests.ice_shelf_2d.default.Default.__init__"]], "configure() (compass.ocean.tests.ice_shelf_2d.default.default method)": [[455, "compass.ocean.tests.ice_shelf_2d.default.Default.configure"]], "run() (compass.ocean.tests.ice_shelf_2d.default.default method)": [[456, "compass.ocean.tests.ice_shelf_2d.default.Default.run"]], "forward (class in compass.ocean.tests.ice_shelf_2d.forward)": [[457, "compass.ocean.tests.ice_shelf_2d.forward.Forward"]], "__init__() (compass.ocean.tests.ice_shelf_2d.forward.forward method)": [[457, "compass.ocean.tests.ice_shelf_2d.forward.Forward.__init__"]], "run() (compass.ocean.tests.ice_shelf_2d.forward.forward method)": [[458, "compass.ocean.tests.ice_shelf_2d.forward.Forward.run"]], "setup() (compass.ocean.tests.ice_shelf_2d.forward.forward method)": [[459, "compass.ocean.tests.ice_shelf_2d.forward.Forward.setup"]], "initialstate (class in compass.ocean.tests.ice_shelf_2d.initial_state)": [[460, "compass.ocean.tests.ice_shelf_2d.initial_state.InitialState"]], "__init__() (compass.ocean.tests.ice_shelf_2d.initial_state.initialstate method)": [[460, "compass.ocean.tests.ice_shelf_2d.initial_state.InitialState.__init__"]], "run() (compass.ocean.tests.ice_shelf_2d.initial_state.initialstate method)": [[461, "compass.ocean.tests.ice_shelf_2d.initial_state.InitialState.run"]], "restarttest (class in compass.ocean.tests.ice_shelf_2d.restart_test)": [[462, "compass.ocean.tests.ice_shelf_2d.restart_test.RestartTest"]], "__init__() (compass.ocean.tests.ice_shelf_2d.restart_test.restarttest method)": [[462, "compass.ocean.tests.ice_shelf_2d.restart_test.RestartTest.__init__"]], "configure() (compass.ocean.tests.ice_shelf_2d.restart_test.restarttest method)": [[463, "compass.ocean.tests.ice_shelf_2d.restart_test.RestartTest.configure"]], "run() (compass.ocean.tests.ice_shelf_2d.restart_test.restarttest method)": [[464, "compass.ocean.tests.ice_shelf_2d.restart_test.RestartTest.run"]], "sshadjustment (class in compass.ocean.tests.ice_shelf_2d.ssh_adjustment)": [[465, "compass.ocean.tests.ice_shelf_2d.ssh_adjustment.SshAdjustment"]], "__init__() (compass.ocean.tests.ice_shelf_2d.ssh_adjustment.sshadjustment method)": [[465, "compass.ocean.tests.ice_shelf_2d.ssh_adjustment.SshAdjustment.__init__"]], "run() (compass.ocean.tests.ice_shelf_2d.ssh_adjustment.sshadjustment method)": [[466, "compass.ocean.tests.ice_shelf_2d.ssh_adjustment.SshAdjustment.run"]], "setup() (compass.ocean.tests.ice_shelf_2d.ssh_adjustment.sshadjustment method)": [[467, "compass.ocean.tests.ice_shelf_2d.ssh_adjustment.SshAdjustment.setup"]], "viz (class in compass.ocean.tests.ice_shelf_2d.viz)": [[468, "compass.ocean.tests.ice_shelf_2d.viz.Viz"]], "__init__() (compass.ocean.tests.ice_shelf_2d.viz.viz method)": [[468, "compass.ocean.tests.ice_shelf_2d.viz.Viz.__init__"]], "run() (compass.ocean.tests.ice_shelf_2d.viz.viz method)": [[469, "compass.ocean.tests.ice_shelf_2d.viz.Viz.run"]], "internalwave (class in compass.ocean.tests.internal_wave)": [[470, "compass.ocean.tests.internal_wave.InternalWave"]], "__init__() (compass.ocean.tests.internal_wave.internalwave method)": [[470, "compass.ocean.tests.internal_wave.InternalWave.__init__"]], "default (class in compass.ocean.tests.internal_wave.default)": [[471, "compass.ocean.tests.internal_wave.default.Default"]], "__init__() (compass.ocean.tests.internal_wave.default.default method)": [[471, "compass.ocean.tests.internal_wave.default.Default.__init__"]], "validate() (compass.ocean.tests.internal_wave.default.default method)": [[472, "compass.ocean.tests.internal_wave.default.Default.validate"]], "forward (class in compass.ocean.tests.internal_wave.forward)": [[473, "compass.ocean.tests.internal_wave.forward.Forward"]], "__init__() (compass.ocean.tests.internal_wave.forward.forward method)": [[473, "compass.ocean.tests.internal_wave.forward.Forward.__init__"]], "run() (compass.ocean.tests.internal_wave.forward.forward method)": [[474, "compass.ocean.tests.internal_wave.forward.Forward.run"]], "initialstate (class in compass.ocean.tests.internal_wave.initial_state)": [[475, "compass.ocean.tests.internal_wave.initial_state.InitialState"]], "__init__() (compass.ocean.tests.internal_wave.initial_state.initialstate method)": [[475, "compass.ocean.tests.internal_wave.initial_state.InitialState.__init__"]], "run() (compass.ocean.tests.internal_wave.initial_state.initialstate method)": [[476, "compass.ocean.tests.internal_wave.initial_state.InitialState.run"]], "rpetest (class in compass.ocean.tests.internal_wave.rpe_test)": [[477, "compass.ocean.tests.internal_wave.rpe_test.RpeTest"]], "__init__() (compass.ocean.tests.internal_wave.rpe_test.rpetest method)": [[477, "compass.ocean.tests.internal_wave.rpe_test.RpeTest.__init__"]], "analysis (class in compass.ocean.tests.internal_wave.rpe_test.analysis)": [[478, "compass.ocean.tests.internal_wave.rpe_test.analysis.Analysis"]], "__init__() (compass.ocean.tests.internal_wave.rpe_test.analysis.analysis method)": [[478, "compass.ocean.tests.internal_wave.rpe_test.analysis.Analysis.__init__"]], "run() (compass.ocean.tests.internal_wave.rpe_test.analysis.analysis method)": [[479, "compass.ocean.tests.internal_wave.rpe_test.analysis.Analysis.run"]], "tendaytest (class in compass.ocean.tests.internal_wave.ten_day_test)": [[480, "compass.ocean.tests.internal_wave.ten_day_test.TenDayTest"]], "__init__() (compass.ocean.tests.internal_wave.ten_day_test.tendaytest method)": [[480, "compass.ocean.tests.internal_wave.ten_day_test.TenDayTest.__init__"]], "validate() (compass.ocean.tests.internal_wave.ten_day_test.tendaytest method)": [[481, "compass.ocean.tests.internal_wave.ten_day_test.TenDayTest.validate"]], "viz (class in compass.ocean.tests.internal_wave.viz)": [[482, "compass.ocean.tests.internal_wave.viz.Viz"]], "__init__() (compass.ocean.tests.internal_wave.viz.viz method)": [[482, "compass.ocean.tests.internal_wave.viz.Viz.__init__"]], "run() (compass.ocean.tests.internal_wave.viz.viz method)": [[483, "compass.ocean.tests.internal_wave.viz.Viz.run"]], "isomipplus (class in compass.ocean.tests.isomip_plus)": [[484, "compass.ocean.tests.isomip_plus.IsomipPlus"]], "__init__() (compass.ocean.tests.isomip_plus.isomipplus method)": [[484, "compass.ocean.tests.isomip_plus.IsomipPlus.__init__"]], "update_evaporation_flux() (in module compass.ocean.tests.isomip_plus.evap)": [[485, "compass.ocean.tests.isomip_plus.evap.update_evaporation_flux"]], "forward (class in compass.ocean.tests.isomip_plus.forward)": [[486, "compass.ocean.tests.isomip_plus.forward.Forward"]], "__init__() (compass.ocean.tests.isomip_plus.forward.forward method)": [[486, "compass.ocean.tests.isomip_plus.forward.Forward.__init__"]], "run() (compass.ocean.tests.isomip_plus.forward.forward method)": [[487, "compass.ocean.tests.isomip_plus.forward.Forward.run"]], "setup() (compass.ocean.tests.isomip_plus.forward.forward method)": [[488, "compass.ocean.tests.isomip_plus.forward.Forward.setup"]], "interpolate_ocean_mask() (in module compass.ocean.tests.isomip_plus.geom)": [[489, "compass.ocean.tests.isomip_plus.geom.interpolate_ocean_mask"]], "process_input_geometry() (in module compass.ocean.tests.isomip_plus.geom)": [[490, "compass.ocean.tests.isomip_plus.geom.process_input_geometry"]], "initialstate (class in compass.ocean.tests.isomip_plus.initial_state)": [[491, "compass.ocean.tests.isomip_plus.initial_state.InitialState"]], "__init__() (compass.ocean.tests.isomip_plus.initial_state.initialstate method)": [[491, "compass.ocean.tests.isomip_plus.initial_state.InitialState.__init__"]], "run() (compass.ocean.tests.isomip_plus.initial_state.initialstate method)": [[492, "compass.ocean.tests.isomip_plus.initial_state.InitialState.run"]], "isomipplustest (class in compass.ocean.tests.isomip_plus.isomip_plus_test)": [[493, "compass.ocean.tests.isomip_plus.isomip_plus_test.IsomipPlusTest"]], "__init__() (compass.ocean.tests.isomip_plus.isomip_plus_test.isomipplustest method)": [[493, "compass.ocean.tests.isomip_plus.isomip_plus_test.IsomipPlusTest.__init__"]], "configure() (compass.ocean.tests.isomip_plus.isomip_plus_test.isomipplustest method)": [[494, "compass.ocean.tests.isomip_plus.isomip_plus_test.IsomipPlusTest.configure"]], "run() (compass.ocean.tests.isomip_plus.isomip_plus_test.isomipplustest method)": [[495, "compass.ocean.tests.isomip_plus.isomip_plus_test.IsomipPlusTest.run"]], "misomip (class in compass.ocean.tests.isomip_plus.misomip)": [[496, "compass.ocean.tests.isomip_plus.misomip.Misomip"]], "__init__() (compass.ocean.tests.isomip_plus.misomip.misomip method)": [[496, "compass.ocean.tests.isomip_plus.misomip.Misomip.__init__"]], "run() (compass.ocean.tests.isomip_plus.misomip.misomip method)": [[497, "compass.ocean.tests.isomip_plus.misomip.Misomip.run"]], "sshadjustment (class in compass.ocean.tests.isomip_plus.ssh_adjustment)": [[498, "compass.ocean.tests.isomip_plus.ssh_adjustment.SshAdjustment"]], "__init__() (compass.ocean.tests.isomip_plus.ssh_adjustment.sshadjustment method)": [[498, "compass.ocean.tests.isomip_plus.ssh_adjustment.SshAdjustment.__init__"]], "run() (compass.ocean.tests.isomip_plus.ssh_adjustment.sshadjustment method)": [[499, "compass.ocean.tests.isomip_plus.ssh_adjustment.SshAdjustment.run"]], "setup() (compass.ocean.tests.isomip_plus.ssh_adjustment.sshadjustment method)": [[500, "compass.ocean.tests.isomip_plus.ssh_adjustment.SshAdjustment.setup"]], "streamfunction (class in compass.ocean.tests.isomip_plus.streamfunction)": [[501, "compass.ocean.tests.isomip_plus.streamfunction.Streamfunction"]], "__init__() (compass.ocean.tests.isomip_plus.streamfunction.streamfunction method)": [[501, "compass.ocean.tests.isomip_plus.streamfunction.Streamfunction.__init__"]], "run() (compass.ocean.tests.isomip_plus.streamfunction.streamfunction method)": [[502, "compass.ocean.tests.isomip_plus.streamfunction.Streamfunction.run"]], "viz (class in compass.ocean.tests.isomip_plus.viz)": [[503, "compass.ocean.tests.isomip_plus.viz.Viz"]], "__init__() (compass.ocean.tests.isomip_plus.viz.viz method)": [[503, "compass.ocean.tests.isomip_plus.viz.Viz.__init__"]], "run() (compass.ocean.tests.isomip_plus.viz.viz method)": [[504, "compass.ocean.tests.isomip_plus.viz.Viz.run"]], "file_complete() (in module compass.ocean.tests.isomip_plus.viz)": [[505, "compass.ocean.tests.isomip_plus.viz.file_complete"]], "movieplotter (class in compass.ocean.tests.isomip_plus.viz.plot)": [[506, "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter"]], "__init__() (compass.ocean.tests.isomip_plus.viz.plot.movieplotter method)": [[506, "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.__init__"]], "images_to_movies() (compass.ocean.tests.isomip_plus.viz.plot.movieplotter method)": [[507, "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.images_to_movies"]], "plot_3d_field_top_bot_section() (compass.ocean.tests.isomip_plus.viz.plot.movieplotter method)": [[508, "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_3d_field_top_bot_section"]], "plot_barotropic_streamfunction() (compass.ocean.tests.isomip_plus.viz.plot.movieplotter method)": [[509, "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_barotropic_streamfunction"]], "plot_horiz_series() (compass.ocean.tests.isomip_plus.viz.plot.movieplotter method)": [[510, "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_horiz_series"]], "plot_ice_shelf_boundary_variables() (compass.ocean.tests.isomip_plus.viz.plot.movieplotter method)": [[511, "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_ice_shelf_boundary_variables"]], "plot_layer_interfaces() (compass.ocean.tests.isomip_plus.viz.plot.movieplotter method)": [[512, "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_layer_interfaces"]], "plot_melt_rates() (compass.ocean.tests.isomip_plus.viz.plot.movieplotter method)": [[513, "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_melt_rates"]], "plot_overturning_streamfunction() (compass.ocean.tests.isomip_plus.viz.plot.movieplotter method)": [[514, "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_overturning_streamfunction"]], "plot_potential_density() (compass.ocean.tests.isomip_plus.viz.plot.movieplotter method)": [[515, "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_potential_density"]], "plot_salinity() (compass.ocean.tests.isomip_plus.viz.plot.movieplotter method)": [[516, "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_salinity"]], "plot_temperature() (compass.ocean.tests.isomip_plus.viz.plot.movieplotter method)": [[517, "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_temperature"]], "timeseriesplotter (class in compass.ocean.tests.isomip_plus.viz.plot)": [[518, "compass.ocean.tests.isomip_plus.viz.plot.TimeSeriesPlotter"]], "__init__() (compass.ocean.tests.isomip_plus.viz.plot.timeseriesplotter method)": [[518, "compass.ocean.tests.isomip_plus.viz.plot.TimeSeriesPlotter.__init__"]], "plot_melt_time_series() (compass.ocean.tests.isomip_plus.viz.plot.timeseriesplotter method)": [[519, "compass.ocean.tests.isomip_plus.viz.plot.TimeSeriesPlotter.plot_melt_time_series"]], "plot_time_series() (compass.ocean.tests.isomip_plus.viz.plot.timeseriesplotter method)": [[520, "compass.ocean.tests.isomip_plus.viz.plot.TimeSeriesPlotter.plot_time_series"]], "merrygoround (class in compass.ocean.tests.merry_go_round)": [[521, "compass.ocean.tests.merry_go_round.MerryGoRound"]], "__init__() (compass.ocean.tests.merry_go_round.merrygoround method)": [[521, "compass.ocean.tests.merry_go_round.MerryGoRound.__init__"]], "analysis (class in compass.ocean.tests.merry_go_round.convergence_test.analysis)": [[522, "compass.ocean.tests.merry_go_round.convergence_test.analysis.Analysis"]], "__init__() (compass.ocean.tests.merry_go_round.convergence_test.analysis.analysis method)": [[522, "compass.ocean.tests.merry_go_round.convergence_test.analysis.Analysis.__init__"]], "run() (compass.ocean.tests.merry_go_round.convergence_test.analysis.analysis method)": [[523, "compass.ocean.tests.merry_go_round.convergence_test.analysis.Analysis.run"]], "default (class in compass.ocean.tests.merry_go_round.default)": [[524, "compass.ocean.tests.merry_go_round.default.Default"]], "__init__() (compass.ocean.tests.merry_go_round.default.default method)": [[524, "compass.ocean.tests.merry_go_round.default.Default.__init__"]], "validate() (compass.ocean.tests.merry_go_round.default.default method)": [[525, "compass.ocean.tests.merry_go_round.default.Default.validate"]], "forward (class in compass.ocean.tests.merry_go_round.forward)": [[526, "compass.ocean.tests.merry_go_round.forward.Forward"]], "__init__() (compass.ocean.tests.merry_go_round.forward.forward method)": [[526, "compass.ocean.tests.merry_go_round.forward.Forward.__init__"]], "run() (compass.ocean.tests.merry_go_round.forward.forward method)": [[527, "compass.ocean.tests.merry_go_round.forward.Forward.run"]], "initialstate (class in compass.ocean.tests.merry_go_round.initial_state)": [[528, "compass.ocean.tests.merry_go_round.initial_state.InitialState"]], "__init__() (compass.ocean.tests.merry_go_round.initial_state.initialstate method)": [[528, "compass.ocean.tests.merry_go_round.initial_state.InitialState.__init__"]], "run() (compass.ocean.tests.merry_go_round.initial_state.initialstate method)": [[529, "compass.ocean.tests.merry_go_round.initial_state.InitialState.run"]], "viz (class in compass.ocean.tests.merry_go_round.viz)": [[530, "compass.ocean.tests.merry_go_round.viz.Viz"]], "__init__() (compass.ocean.tests.merry_go_round.viz.viz method)": [[530, "compass.ocean.tests.merry_go_round.viz.Viz.__init__"]], "run() (compass.ocean.tests.merry_go_round.viz.viz method)": [[531, "compass.ocean.tests.merry_go_round.viz.Viz.run"]], "planarconvergence (class in compass.ocean.tests.planar_convergence)": [[532, "compass.ocean.tests.planar_convergence.PlanarConvergence"]], "__init__() (compass.ocean.tests.planar_convergence.planarconvergence method)": [[532, "compass.ocean.tests.planar_convergence.PlanarConvergence.__init__"]], "convinit (class in compass.ocean.tests.planar_convergence.conv_init)": [[533, "compass.ocean.tests.planar_convergence.conv_init.ConvInit"]], "__init__() (compass.ocean.tests.planar_convergence.conv_init.convinit method)": [[533, "compass.ocean.tests.planar_convergence.conv_init.ConvInit.__init__"]], "run() (compass.ocean.tests.planar_convergence.conv_init.convinit method)": [[534, "compass.ocean.tests.planar_convergence.conv_init.ConvInit.run"]], "convtestcase (class in compass.ocean.tests.planar_convergence.conv_test_case)": [[535, "compass.ocean.tests.planar_convergence.conv_test_case.ConvTestCase"]], "__init__() (compass.ocean.tests.planar_convergence.conv_test_case.convtestcase method)": [[535, "compass.ocean.tests.planar_convergence.conv_test_case.ConvTestCase.__init__"]], "configure() (compass.ocean.tests.planar_convergence.conv_test_case.convtestcase method)": [[536, "compass.ocean.tests.planar_convergence.conv_test_case.ConvTestCase.configure"]], "run() (compass.ocean.tests.planar_convergence.conv_test_case.convtestcase method)": [[537, "compass.ocean.tests.planar_convergence.conv_test_case.ConvTestCase.run"]], "update_cores() (compass.ocean.tests.planar_convergence.conv_test_case.convtestcase method)": [[538, "compass.ocean.tests.planar_convergence.conv_test_case.ConvTestCase.update_cores"]], "forward (class in compass.ocean.tests.planar_convergence.forward)": [[539, "compass.ocean.tests.planar_convergence.forward.Forward"]], "__init__() (compass.ocean.tests.planar_convergence.forward.forward method)": [[539, "compass.ocean.tests.planar_convergence.forward.Forward.__init__"]], "get_dt_duration() (compass.ocean.tests.planar_convergence.forward.forward method)": [[540, "compass.ocean.tests.planar_convergence.forward.Forward.get_dt_duration"]], "run() (compass.ocean.tests.planar_convergence.forward.forward method)": [[541, "compass.ocean.tests.planar_convergence.forward.Forward.run"]], "setup() (compass.ocean.tests.planar_convergence.forward.forward method)": [[542, "compass.ocean.tests.planar_convergence.forward.Forward.setup"]], "horizontaladvection (class in compass.ocean.tests.planar_convergence.horizontal_advection)": [[543, "compass.ocean.tests.planar_convergence.horizontal_advection.HorizontalAdvection"]], "__init__() (compass.ocean.tests.planar_convergence.horizontal_advection.horizontaladvection method)": [[543, "compass.ocean.tests.planar_convergence.horizontal_advection.HorizontalAdvection.__init__"]], "configure() (compass.ocean.tests.planar_convergence.horizontal_advection.horizontaladvection method)": [[544, "compass.ocean.tests.planar_convergence.horizontal_advection.HorizontalAdvection.configure"]], "run() (compass.ocean.tests.planar_convergence.horizontal_advection.horizontaladvection method)": [[545, "compass.ocean.tests.planar_convergence.horizontal_advection.HorizontalAdvection.run"]], "analysis (class in compass.ocean.tests.planar_convergence.horizontal_advection.analysis)": [[546, "compass.ocean.tests.planar_convergence.horizontal_advection.analysis.Analysis"]], "__init__() (compass.ocean.tests.planar_convergence.horizontal_advection.analysis.analysis method)": [[546, "compass.ocean.tests.planar_convergence.horizontal_advection.analysis.Analysis.__init__"]], "rmse() (compass.ocean.tests.planar_convergence.horizontal_advection.analysis.analysis method)": [[547, "compass.ocean.tests.planar_convergence.horizontal_advection.analysis.Analysis.rmse"]], "run() (compass.ocean.tests.planar_convergence.horizontal_advection.analysis.analysis method)": [[548, "compass.ocean.tests.planar_convergence.horizontal_advection.analysis.Analysis.run"]], "init (class in compass.ocean.tests.planar_convergence.horizontal_advection.init)": [[549, "compass.ocean.tests.planar_convergence.horizontal_advection.init.Init"]], "__init__() (compass.ocean.tests.planar_convergence.horizontal_advection.init.init method)": [[549, "compass.ocean.tests.planar_convergence.horizontal_advection.init.Init.__init__"]], "run() (compass.ocean.tests.planar_convergence.horizontal_advection.init.init method)": [[550, "compass.ocean.tests.planar_convergence.horizontal_advection.init.Init.run"]], "soma (class in compass.ocean.tests.soma)": [[551, "compass.ocean.tests.soma.Soma"]], "__init__() (compass.ocean.tests.soma.soma method)": [[551, "compass.ocean.tests.soma.Soma.__init__"]], "analysis (class in compass.ocean.tests.soma.analysis)": [[552, "compass.ocean.tests.soma.analysis.Analysis"]], "__init__() (compass.ocean.tests.soma.analysis.analysis method)": [[552, "compass.ocean.tests.soma.analysis.Analysis.__init__"]], "run() (compass.ocean.tests.soma.analysis.analysis method)": [[553, "compass.ocean.tests.soma.analysis.Analysis.run"]], "forward (class in compass.ocean.tests.soma.forward)": [[554, "compass.ocean.tests.soma.forward.Forward"]], "__init__() (compass.ocean.tests.soma.forward.forward method)": [[554, "compass.ocean.tests.soma.forward.Forward.__init__"]], "run() (compass.ocean.tests.soma.forward.forward method)": [[555, "compass.ocean.tests.soma.forward.Forward.run"]], "initialstate (class in compass.ocean.tests.soma.initial_state)": [[556, "compass.ocean.tests.soma.initial_state.InitialState"]], "__init__() (compass.ocean.tests.soma.initial_state.initialstate method)": [[556, "compass.ocean.tests.soma.initial_state.InitialState.__init__"]], "run() (compass.ocean.tests.soma.initial_state.initialstate method)": [[557, "compass.ocean.tests.soma.initial_state.InitialState.run"]], "somatestcase (class in compass.ocean.tests.soma.soma_test_case)": [[558, "compass.ocean.tests.soma.soma_test_case.SomaTestCase"]], "__init__() (compass.ocean.tests.soma.soma_test_case.somatestcase method)": [[558, "compass.ocean.tests.soma.soma_test_case.SomaTestCase.__init__"]], "validate() (compass.ocean.tests.soma.soma_test_case.somatestcase method)": [[559, "compass.ocean.tests.soma.soma_test_case.SomaTestCase.validate"]], "spheretransport (class in compass.ocean.tests.sphere_transport)": [[560, "compass.ocean.tests.sphere_transport.SphereTransport"]], "__init__() (compass.ocean.tests.sphere_transport.spheretransport method)": [[560, "compass.ocean.tests.sphere_transport.SphereTransport.__init__"]], "correlatedtracers2d (class in compass.ocean.tests.sphere_transport.correlated_tracers_2d)": [[561, "compass.ocean.tests.sphere_transport.correlated_tracers_2d.CorrelatedTracers2D"]], "__init__() (compass.ocean.tests.sphere_transport.correlated_tracers_2d.correlatedtracers2d method)": [[561, "compass.ocean.tests.sphere_transport.correlated_tracers_2d.CorrelatedTracers2D.__init__"]], "configure() (compass.ocean.tests.sphere_transport.correlated_tracers_2d.correlatedtracers2d method)": [[562, "compass.ocean.tests.sphere_transport.correlated_tracers_2d.CorrelatedTracers2D.configure"]], "run() (compass.ocean.tests.sphere_transport.correlated_tracers_2d.correlatedtracers2d method)": [[563, "compass.ocean.tests.sphere_transport.correlated_tracers_2d.CorrelatedTracers2D.run"]], "analysis (class in compass.ocean.tests.sphere_transport.correlated_tracers_2d.analysis)": [[564, "compass.ocean.tests.sphere_transport.correlated_tracers_2d.analysis.Analysis"]], "__init__() (compass.ocean.tests.sphere_transport.correlated_tracers_2d.analysis.analysis method)": [[564, "compass.ocean.tests.sphere_transport.correlated_tracers_2d.analysis.Analysis.__init__"]], "run() (compass.ocean.tests.sphere_transport.correlated_tracers_2d.analysis.analysis method)": [[565, "compass.ocean.tests.sphere_transport.correlated_tracers_2d.analysis.Analysis.run"]], "forward (class in compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward)": [[566, "compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.Forward"]], "__init__() (compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.forward method)": [[566, "compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.Forward.__init__"]], "get_timestep_str() (compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.forward method)": [[567, "compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.Forward.get_timestep_str"]], "run() (compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.forward method)": [[568, "compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.Forward.run"]], "setup() (compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.forward method)": [[569, "compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.Forward.setup"]], "init (class in compass.ocean.tests.sphere_transport.correlated_tracers_2d.init)": [[570, "compass.ocean.tests.sphere_transport.correlated_tracers_2d.init.Init"]], "__init__() (compass.ocean.tests.sphere_transport.correlated_tracers_2d.init.init method)": [[570, "compass.ocean.tests.sphere_transport.correlated_tracers_2d.init.Init.__init__"]], "run() (compass.ocean.tests.sphere_transport.correlated_tracers_2d.init.init method)": [[571, "compass.ocean.tests.sphere_transport.correlated_tracers_2d.init.Init.run"]], "mesh (class in compass.ocean.tests.sphere_transport.correlated_tracers_2d.mesh)": [[572, "compass.ocean.tests.sphere_transport.correlated_tracers_2d.mesh.Mesh"]], "__init__() (compass.ocean.tests.sphere_transport.correlated_tracers_2d.mesh.mesh method)": [[572, "compass.ocean.tests.sphere_transport.correlated_tracers_2d.mesh.Mesh.__init__"]], "build_cell_width_lat_lon() (compass.ocean.tests.sphere_transport.correlated_tracers_2d.mesh.mesh method)": [[573, "compass.ocean.tests.sphere_transport.correlated_tracers_2d.mesh.Mesh.build_cell_width_lat_lon"]], "run() (compass.ocean.tests.sphere_transport.correlated_tracers_2d.mesh.mesh method)": [[574, "compass.ocean.tests.sphere_transport.correlated_tracers_2d.mesh.Mesh.run"]], "divergent2d (class in compass.ocean.tests.sphere_transport.divergent_2d)": [[575, "compass.ocean.tests.sphere_transport.divergent_2d.Divergent2D"]], "__init__() (compass.ocean.tests.sphere_transport.divergent_2d.divergent2d method)": [[575, "compass.ocean.tests.sphere_transport.divergent_2d.Divergent2D.__init__"]], "configure() (compass.ocean.tests.sphere_transport.divergent_2d.divergent2d method)": [[576, "compass.ocean.tests.sphere_transport.divergent_2d.Divergent2D.configure"]], "run() (compass.ocean.tests.sphere_transport.divergent_2d.divergent2d method)": [[577, "compass.ocean.tests.sphere_transport.divergent_2d.Divergent2D.run"]], "analysis (class in compass.ocean.tests.sphere_transport.divergent_2d.analysis)": [[578, "compass.ocean.tests.sphere_transport.divergent_2d.analysis.Analysis"]], "__init__() (compass.ocean.tests.sphere_transport.divergent_2d.analysis.analysis method)": [[578, "compass.ocean.tests.sphere_transport.divergent_2d.analysis.Analysis.__init__"]], "run() (compass.ocean.tests.sphere_transport.divergent_2d.analysis.analysis method)": [[579, "compass.ocean.tests.sphere_transport.divergent_2d.analysis.Analysis.run"]], "forward (class in compass.ocean.tests.sphere_transport.divergent_2d.forward)": [[580, "compass.ocean.tests.sphere_transport.divergent_2d.forward.Forward"]], "__init__() (compass.ocean.tests.sphere_transport.divergent_2d.forward.forward method)": [[580, "compass.ocean.tests.sphere_transport.divergent_2d.forward.Forward.__init__"]], "get_timestep_str() (compass.ocean.tests.sphere_transport.divergent_2d.forward.forward method)": [[581, "compass.ocean.tests.sphere_transport.divergent_2d.forward.Forward.get_timestep_str"]], "run() (compass.ocean.tests.sphere_transport.divergent_2d.forward.forward method)": [[582, "compass.ocean.tests.sphere_transport.divergent_2d.forward.Forward.run"]], "setup() (compass.ocean.tests.sphere_transport.divergent_2d.forward.forward method)": [[583, "compass.ocean.tests.sphere_transport.divergent_2d.forward.Forward.setup"]], "init (class in compass.ocean.tests.sphere_transport.divergent_2d.init)": [[584, "compass.ocean.tests.sphere_transport.divergent_2d.init.Init"]], "__init__() (compass.ocean.tests.sphere_transport.divergent_2d.init.init method)": [[584, "compass.ocean.tests.sphere_transport.divergent_2d.init.Init.__init__"]], "run() (compass.ocean.tests.sphere_transport.divergent_2d.init.init method)": [[585, "compass.ocean.tests.sphere_transport.divergent_2d.init.Init.run"]], "mesh (class in compass.ocean.tests.sphere_transport.divergent_2d.mesh)": [[586, "compass.ocean.tests.sphere_transport.divergent_2d.mesh.Mesh"]], "__init__() (compass.ocean.tests.sphere_transport.divergent_2d.mesh.mesh method)": [[586, "compass.ocean.tests.sphere_transport.divergent_2d.mesh.Mesh.__init__"]], "build_cell_width_lat_lon() (compass.ocean.tests.sphere_transport.divergent_2d.mesh.mesh method)": [[587, "compass.ocean.tests.sphere_transport.divergent_2d.mesh.Mesh.build_cell_width_lat_lon"]], "run() (compass.ocean.tests.sphere_transport.divergent_2d.mesh.mesh method)": [[588, "compass.ocean.tests.sphere_transport.divergent_2d.mesh.Mesh.run"]], "nondivergent2d (class in compass.ocean.tests.sphere_transport.nondivergent_2d)": [[589, "compass.ocean.tests.sphere_transport.nondivergent_2d.Nondivergent2D"]], "__init__() (compass.ocean.tests.sphere_transport.nondivergent_2d.nondivergent2d method)": [[589, "compass.ocean.tests.sphere_transport.nondivergent_2d.Nondivergent2D.__init__"]], "configure() (compass.ocean.tests.sphere_transport.nondivergent_2d.nondivergent2d method)": [[590, "compass.ocean.tests.sphere_transport.nondivergent_2d.Nondivergent2D.configure"]], "run() (compass.ocean.tests.sphere_transport.nondivergent_2d.nondivergent2d method)": [[591, "compass.ocean.tests.sphere_transport.nondivergent_2d.Nondivergent2D.run"]], "analysis (class in compass.ocean.tests.sphere_transport.nondivergent_2d.analysis)": [[592, "compass.ocean.tests.sphere_transport.nondivergent_2d.analysis.Analysis"]], "__init__() (compass.ocean.tests.sphere_transport.nondivergent_2d.analysis.analysis method)": [[592, "compass.ocean.tests.sphere_transport.nondivergent_2d.analysis.Analysis.__init__"]], "run() (compass.ocean.tests.sphere_transport.nondivergent_2d.analysis.analysis method)": [[593, "compass.ocean.tests.sphere_transport.nondivergent_2d.analysis.Analysis.run"]], "forward (class in compass.ocean.tests.sphere_transport.nondivergent_2d.forward)": [[594, "compass.ocean.tests.sphere_transport.nondivergent_2d.forward.Forward"]], "__init__() (compass.ocean.tests.sphere_transport.nondivergent_2d.forward.forward method)": [[594, "compass.ocean.tests.sphere_transport.nondivergent_2d.forward.Forward.__init__"]], "get_timestep_str() (compass.ocean.tests.sphere_transport.nondivergent_2d.forward.forward method)": [[595, "compass.ocean.tests.sphere_transport.nondivergent_2d.forward.Forward.get_timestep_str"]], "run() (compass.ocean.tests.sphere_transport.nondivergent_2d.forward.forward method)": [[596, "compass.ocean.tests.sphere_transport.nondivergent_2d.forward.Forward.run"]], "setup() (compass.ocean.tests.sphere_transport.nondivergent_2d.forward.forward method)": [[597, "compass.ocean.tests.sphere_transport.nondivergent_2d.forward.Forward.setup"]], "init (class in compass.ocean.tests.sphere_transport.nondivergent_2d.init)": [[598, "compass.ocean.tests.sphere_transport.nondivergent_2d.init.Init"]], "__init__() (compass.ocean.tests.sphere_transport.nondivergent_2d.init.init method)": [[598, "compass.ocean.tests.sphere_transport.nondivergent_2d.init.Init.__init__"]], "run() (compass.ocean.tests.sphere_transport.nondivergent_2d.init.init method)": [[599, "compass.ocean.tests.sphere_transport.nondivergent_2d.init.Init.run"]], "mesh (class in compass.ocean.tests.sphere_transport.nondivergent_2d.mesh)": [[600, "compass.ocean.tests.sphere_transport.nondivergent_2d.mesh.Mesh"]], "__init__() (compass.ocean.tests.sphere_transport.nondivergent_2d.mesh.mesh method)": [[600, "compass.ocean.tests.sphere_transport.nondivergent_2d.mesh.Mesh.__init__"]], "build_cell_width_lat_lon() (compass.ocean.tests.sphere_transport.nondivergent_2d.mesh.mesh method)": [[601, "compass.ocean.tests.sphere_transport.nondivergent_2d.mesh.Mesh.build_cell_width_lat_lon"]], "run() (compass.ocean.tests.sphere_transport.nondivergent_2d.mesh.mesh method)": [[602, "compass.ocean.tests.sphere_transport.nondivergent_2d.mesh.Mesh.run"]], "compute_convergence_rates() (in module compass.ocean.tests.sphere_transport.process_output)": [[603, "compass.ocean.tests.sphere_transport.process_output.compute_convergence_rates"]], "compute_error_from_output_ncfile() (in module compass.ocean.tests.sphere_transport.process_output)": [[604, "compass.ocean.tests.sphere_transport.process_output.compute_error_from_output_ncfile"]], "make_convergence_arrays() (in module compass.ocean.tests.sphere_transport.process_output)": [[605, "compass.ocean.tests.sphere_transport.process_output.make_convergence_arrays"]], "plot_convergence() (in module compass.ocean.tests.sphere_transport.process_output)": [[606, "compass.ocean.tests.sphere_transport.process_output.plot_convergence"]], "plot_filament() (in module compass.ocean.tests.sphere_transport.process_output)": [[607, "compass.ocean.tests.sphere_transport.process_output.plot_filament"]], "plot_over_and_undershoot_errors() (in module compass.ocean.tests.sphere_transport.process_output)": [[608, "compass.ocean.tests.sphere_transport.process_output.plot_over_and_undershoot_errors"]], "plot_sol() (in module compass.ocean.tests.sphere_transport.process_output)": [[609, "compass.ocean.tests.sphere_transport.process_output.plot_sol"]], "print_data_as_csv() (in module compass.ocean.tests.sphere_transport.process_output)": [[610, "compass.ocean.tests.sphere_transport.process_output.print_data_as_csv"]], "print_error_conv_table() (in module compass.ocean.tests.sphere_transport.process_output)": [[611, "compass.ocean.tests.sphere_transport.process_output.print_error_conv_table"]], "read_ncl_rgb_file() (in module compass.ocean.tests.sphere_transport.process_output)": [[612, "compass.ocean.tests.sphere_transport.process_output.read_ncl_rgb_file"]], "rotation2d (class in compass.ocean.tests.sphere_transport.rotation_2d)": [[613, "compass.ocean.tests.sphere_transport.rotation_2d.Rotation2D"]], "__init__() (compass.ocean.tests.sphere_transport.rotation_2d.rotation2d method)": [[613, "compass.ocean.tests.sphere_transport.rotation_2d.Rotation2D.__init__"]], "configure() (compass.ocean.tests.sphere_transport.rotation_2d.rotation2d method)": [[614, "compass.ocean.tests.sphere_transport.rotation_2d.Rotation2D.configure"]], "run() (compass.ocean.tests.sphere_transport.rotation_2d.rotation2d method)": [[615, "compass.ocean.tests.sphere_transport.rotation_2d.Rotation2D.run"]], "analysis (class in compass.ocean.tests.sphere_transport.rotation_2d.analysis)": [[616, "compass.ocean.tests.sphere_transport.rotation_2d.analysis.Analysis"]], "__init__() (compass.ocean.tests.sphere_transport.rotation_2d.analysis.analysis method)": [[616, "compass.ocean.tests.sphere_transport.rotation_2d.analysis.Analysis.__init__"]], "run() (compass.ocean.tests.sphere_transport.rotation_2d.analysis.analysis method)": [[617, "compass.ocean.tests.sphere_transport.rotation_2d.analysis.Analysis.run"]], "forward (class in compass.ocean.tests.sphere_transport.rotation_2d.forward)": [[618, "compass.ocean.tests.sphere_transport.rotation_2d.forward.Forward"]], "__init__() (compass.ocean.tests.sphere_transport.rotation_2d.forward.forward method)": [[618, "compass.ocean.tests.sphere_transport.rotation_2d.forward.Forward.__init__"]], "get_timestep_str() (compass.ocean.tests.sphere_transport.rotation_2d.forward.forward method)": [[619, "compass.ocean.tests.sphere_transport.rotation_2d.forward.Forward.get_timestep_str"]], "run() (compass.ocean.tests.sphere_transport.rotation_2d.forward.forward method)": [[620, "compass.ocean.tests.sphere_transport.rotation_2d.forward.Forward.run"]], "setup() (compass.ocean.tests.sphere_transport.rotation_2d.forward.forward method)": [[621, "compass.ocean.tests.sphere_transport.rotation_2d.forward.Forward.setup"]], "init (class in compass.ocean.tests.sphere_transport.rotation_2d.init)": [[622, "compass.ocean.tests.sphere_transport.rotation_2d.init.Init"]], "__init__() (compass.ocean.tests.sphere_transport.rotation_2d.init.init method)": [[622, "compass.ocean.tests.sphere_transport.rotation_2d.init.Init.__init__"]], "run() (compass.ocean.tests.sphere_transport.rotation_2d.init.init method)": [[623, "compass.ocean.tests.sphere_transport.rotation_2d.init.Init.run"]], "mesh (class in compass.ocean.tests.sphere_transport.rotation_2d.mesh)": [[624, "compass.ocean.tests.sphere_transport.rotation_2d.mesh.Mesh"]], "__init__() (compass.ocean.tests.sphere_transport.rotation_2d.mesh.mesh method)": [[624, "compass.ocean.tests.sphere_transport.rotation_2d.mesh.Mesh.__init__"]], "build_cell_width_lat_lon() (compass.ocean.tests.sphere_transport.rotation_2d.mesh.mesh method)": [[625, "compass.ocean.tests.sphere_transport.rotation_2d.mesh.Mesh.build_cell_width_lat_lon"]], "run() (compass.ocean.tests.sphere_transport.rotation_2d.mesh.mesh method)": [[626, "compass.ocean.tests.sphere_transport.rotation_2d.mesh.Mesh.run"]], "tides (class in compass.ocean.tests.tides)": [[627, "compass.ocean.tests.tides.Tides"]], "__init__() (compass.ocean.tests.tides.tides method)": [[627, "compass.ocean.tests.tides.Tides.__init__"]], "analysis (class in compass.ocean.tests.tides.analysis)": [[628, "compass.ocean.tests.tides.analysis.Analysis"]], "__init__() (compass.ocean.tests.tides.analysis.analysis method)": [[628, "compass.ocean.tests.tides.analysis.Analysis.__init__"]], "append_tpxo_data() (compass.ocean.tests.tides.analysis.analysis method)": [[629, "compass.ocean.tests.tides.analysis.Analysis.append_tpxo_data"]], "check_tpxo_data() (compass.ocean.tests.tides.analysis.analysis method)": [[630, "compass.ocean.tests.tides.analysis.Analysis.check_tpxo_data"]], "plot() (compass.ocean.tests.tides.analysis.analysis method)": [[631, "compass.ocean.tests.tides.analysis.Analysis.plot"]], "read_otps2_output() (compass.ocean.tests.tides.analysis.analysis method)": [[632, "compass.ocean.tests.tides.analysis.Analysis.read_otps2_output"]], "run() (compass.ocean.tests.tides.analysis.analysis method)": [[633, "compass.ocean.tests.tides.analysis.Analysis.run"]], "run_otps2() (compass.ocean.tests.tides.analysis.analysis method)": [[634, "compass.ocean.tests.tides.analysis.Analysis.run_otps2"]], "setup() (compass.ocean.tests.tides.analysis.analysis method)": [[635, "compass.ocean.tests.tides.analysis.Analysis.setup"]], "setup_otps2() (compass.ocean.tests.tides.analysis.analysis method)": [[636, "compass.ocean.tests.tides.analysis.Analysis.setup_otps2"]], "write_coordinate_file() (compass.ocean.tests.tides.analysis.analysis method)": [[637, "compass.ocean.tests.tides.analysis.Analysis.write_coordinate_file"]], "compass.ocean.tests.tides.configure": [[638, "module-compass.ocean.tests.tides.configure"]], "forward (class in compass.ocean.tests.tides.forward)": [[639, "compass.ocean.tests.tides.forward.Forward"]], "__init__() (compass.ocean.tests.tides.forward.forward method)": [[639, "compass.ocean.tests.tides.forward.Forward.__init__"]], "configure() (compass.ocean.tests.tides.forward.forward method)": [[640, "compass.ocean.tests.tides.forward.Forward.configure"]], "run() (compass.ocean.tests.tides.forward.forward method)": [[641, "compass.ocean.tests.tides.forward.Forward.run"]], "forwardstep (class in compass.ocean.tests.tides.forward.forward)": [[642, "compass.ocean.tests.tides.forward.forward.ForwardStep"]], "__init__() (compass.ocean.tests.tides.forward.forward.forwardstep method)": [[642, "compass.ocean.tests.tides.forward.forward.ForwardStep.__init__"]], "run() (compass.ocean.tests.tides.forward.forward.forwardstep method)": [[643, "compass.ocean.tests.tides.forward.forward.ForwardStep.run"]], "setup() (compass.ocean.tests.tides.forward.forward.forwardstep method)": [[644, "compass.ocean.tests.tides.forward.forward.ForwardStep.setup"]], "init (class in compass.ocean.tests.tides.init)": [[645, "compass.ocean.tests.tides.init.Init"]], "__init__() (compass.ocean.tests.tides.init.init method)": [[645, "compass.ocean.tests.tides.init.Init.__init__"]], "configure() (compass.ocean.tests.tides.init.init method)": [[646, "compass.ocean.tests.tides.init.Init.configure"]], "run() (compass.ocean.tests.tides.init.init method)": [[647, "compass.ocean.tests.tides.init.Init.run"]], "initialstate (class in compass.ocean.tests.tides.init.initial_state)": [[648, "compass.ocean.tests.tides.init.initial_state.InitialState"]], "__init__() (compass.ocean.tests.tides.init.initial_state.initialstate method)": [[648, "compass.ocean.tests.tides.init.initial_state.InitialState.__init__"]], "run() (compass.ocean.tests.tides.init.initial_state.initialstate method)": [[649, "compass.ocean.tests.tides.init.initial_state.InitialState.run"]], "setup() (compass.ocean.tests.tides.init.initial_state.initialstate method)": [[650, "compass.ocean.tests.tides.init.initial_state.InitialState.setup"]], "interpolatewavedrag (class in compass.ocean.tests.tides.init.interpolate_wave_drag)": [[651, "compass.ocean.tests.tides.init.interpolate_wave_drag.InterpolateWaveDrag"]], "__init__() (compass.ocean.tests.tides.init.interpolate_wave_drag.interpolatewavedrag method)": [[651, "compass.ocean.tests.tides.init.interpolate_wave_drag.InterpolateWaveDrag.__init__"]], "interpolate_data_to_grid() (compass.ocean.tests.tides.init.interpolate_wave_drag.interpolatewavedrag method)": [[652, "compass.ocean.tests.tides.init.interpolate_wave_drag.InterpolateWaveDrag.interpolate_data_to_grid"]], "plot_interp_data() (compass.ocean.tests.tides.init.interpolate_wave_drag.interpolatewavedrag method)": [[653, "compass.ocean.tests.tides.init.interpolate_wave_drag.InterpolateWaveDrag.plot_interp_data"]], "run() (compass.ocean.tests.tides.init.interpolate_wave_drag.interpolatewavedrag method)": [[654, "compass.ocean.tests.tides.init.interpolate_wave_drag.InterpolateWaveDrag.run"]], "write_to_file() (compass.ocean.tests.tides.init.interpolate_wave_drag.interpolatewavedrag method)": [[655, "compass.ocean.tests.tides.init.interpolate_wave_drag.InterpolateWaveDrag.write_to_file"]], "remapbathymetry (class in compass.ocean.tests.tides.init.remap_bathymetry)": [[656, "compass.ocean.tests.tides.init.remap_bathymetry.RemapBathymetry"]], "__init__() (compass.ocean.tests.tides.init.remap_bathymetry.remapbathymetry method)": [[656, "compass.ocean.tests.tides.init.remap_bathymetry.RemapBathymetry.__init__"]], "run() (compass.ocean.tests.tides.init.remap_bathymetry.remapbathymetry method)": [[657, "compass.ocean.tests.tides.init.remap_bathymetry.RemapBathymetry.run"]], "mesh (class in compass.ocean.tests.tides.mesh)": [[658, "compass.ocean.tests.tides.mesh.Mesh"]], "__init__() (compass.ocean.tests.tides.mesh.mesh method)": [[658, "compass.ocean.tests.tides.mesh.Mesh.__init__"]], "configure() (compass.ocean.tests.tides.mesh.mesh method)": [[659, "compass.ocean.tests.tides.mesh.Mesh.configure"]], "run() (compass.ocean.tests.tides.mesh.mesh method)": [[660, "compass.ocean.tests.tides.mesh.Mesh.run"]], "ziso (class in compass.ocean.tests.ziso)": [[661, "compass.ocean.tests.ziso.Ziso"]], "__init__() (compass.ocean.tests.ziso.ziso method)": [[661, "compass.ocean.tests.ziso.Ziso.__init__"]], "zisotestcase (class in compass.ocean.tests.ziso)": [[662, "compass.ocean.tests.ziso.ZisoTestCase"]], "__init__() (compass.ocean.tests.ziso.zisotestcase method)": [[662, "compass.ocean.tests.ziso.ZisoTestCase.__init__"]], "configure() (compass.ocean.tests.ziso.zisotestcase method)": [[663, "compass.ocean.tests.ziso.ZisoTestCase.configure"]], "run() (compass.ocean.tests.ziso.zisotestcase method)": [[664, "compass.ocean.tests.ziso.ZisoTestCase.run"]], "configure() (in module compass.ocean.tests.ziso)": [[665, "compass.ocean.tests.ziso.configure"]], "forward (class in compass.ocean.tests.ziso.forward)": [[666, "compass.ocean.tests.ziso.forward.Forward"]], "__init__() (compass.ocean.tests.ziso.forward.forward method)": [[666, "compass.ocean.tests.ziso.forward.Forward.__init__"]], "run() (compass.ocean.tests.ziso.forward.forward method)": [[667, "compass.ocean.tests.ziso.forward.Forward.run"]], "setup() (compass.ocean.tests.ziso.forward.forward method)": [[668, "compass.ocean.tests.ziso.forward.Forward.setup"]], "initialstate (class in compass.ocean.tests.ziso.initial_state)": [[669, "compass.ocean.tests.ziso.initial_state.InitialState"]], "__init__() (compass.ocean.tests.ziso.initial_state.initialstate method)": [[669, "compass.ocean.tests.ziso.initial_state.InitialState.__init__"]], "run() (compass.ocean.tests.ziso.initial_state.initialstate method)": [[670, "compass.ocean.tests.ziso.initial_state.InitialState.run"]], "withfrazil (class in compass.ocean.tests.ziso.with_frazil)": [[671, "compass.ocean.tests.ziso.with_frazil.WithFrazil"]], "__init__() (compass.ocean.tests.ziso.with_frazil.withfrazil method)": [[671, "compass.ocean.tests.ziso.with_frazil.WithFrazil.__init__"]], "configure() (compass.ocean.tests.ziso.with_frazil.withfrazil method)": [[672, "compass.ocean.tests.ziso.with_frazil.WithFrazil.configure"]], "run() (compass.ocean.tests.ziso.with_frazil.withfrazil method)": [[673, "compass.ocean.tests.ziso.with_frazil.WithFrazil.run"]], "generate_1d_grid() (in module compass.ocean.vertical.grid_1d)": [[674, "compass.ocean.vertical.grid_1d.generate_1d_grid"]], "write_1d_grid() (in module compass.ocean.vertical.grid_1d)": [[675, "compass.ocean.vertical.grid_1d.write_1d_grid"]], "init_vertical_coord() (in module compass.ocean.vertical)": [[676, "compass.ocean.vertical.init_vertical_coord"]], "alter_bottom_depth() (in module compass.ocean.vertical.partial_cells)": [[677, "compass.ocean.vertical.partial_cells.alter_bottom_depth"]], "alter_ssh() (in module compass.ocean.vertical.partial_cells)": [[678, "compass.ocean.vertical.partial_cells.alter_ssh"]], "compute_min_max_level_cell() (in module compass.ocean.vertical.zlevel)": [[679, "compass.ocean.vertical.zlevel.compute_min_max_level_cell"]], "compute_z_level_layer_thickness() (in module compass.ocean.vertical.zlevel)": [[680, "compass.ocean.vertical.zlevel.compute_z_level_layer_thickness"]], "compute_z_level_resting_thickness() (in module compass.ocean.vertical.zlevel)": [[681, "compass.ocean.vertical.zlevel.compute_z_level_resting_thickness"]], "init_z_level_vertical_coord() (in module compass.ocean.vertical.zlevel)": [[682, "compass.ocean.vertical.zlevel.init_z_level_vertical_coord"]], "init_z_star_vertical_coord() (in module compass.ocean.vertical.zstar)": [[683, "compass.ocean.vertical.zstar.init_z_star_vertical_coord"]]}})