Search.setIndex({"docnames": ["design_docs/cached_outputs", "design_docs/compass_package", "design_docs/index", "design_docs/template", "developers_guide/api", "developers_guide/building_docs", "developers_guide/command_line", "developers_guide/docs", "developers_guide/framework", "developers_guide/generated/compass.MpasCore", "developers_guide/generated/compass.MpasCore.add_test_group", "developers_guide/generated/compass.Step", "developers_guide/generated/compass.Step.add_input_file", "developers_guide/generated/compass.Step.add_model_as_input", "developers_guide/generated/compass.Step.add_namelist_file", "developers_guide/generated/compass.Step.add_namelist_options", "developers_guide/generated/compass.Step.add_output_file", "developers_guide/generated/compass.Step.add_streams_file", "developers_guide/generated/compass.Step.constrain_resources", "developers_guide/generated/compass.Step.run", "developers_guide/generated/compass.Step.runtime_setup", "developers_guide/generated/compass.Step.set_resources", "developers_guide/generated/compass.Step.setup", "developers_guide/generated/compass.Step.update_namelist_at_runtime", "developers_guide/generated/compass.Step.update_namelist_pio", "developers_guide/generated/compass.Step.update_streams_at_runtime", "developers_guide/generated/compass.TestCase", "developers_guide/generated/compass.TestCase.add_step", "developers_guide/generated/compass.TestCase.configure", "developers_guide/generated/compass.TestCase.run", "developers_guide/generated/compass.TestCase.validate", "developers_guide/generated/compass.TestGroup", "developers_guide/generated/compass.TestGroup.add_test_case", "developers_guide/generated/compass.__main__.main", "developers_guide/generated/compass.cache.update_cache", "developers_guide/generated/compass.clean.clean_cases", "developers_guide/generated/compass.config.CompassConfigParser", "developers_guide/generated/compass.io.download", "developers_guide/generated/compass.io.symlink", "developers_guide/generated/compass.list.list_cases", "developers_guide/generated/compass.list.list_machines", "developers_guide/generated/compass.list.list_suites", "developers_guide/generated/compass.logging.log_method_call", "developers_guide/generated/compass.mesh.IcosahedralMeshStep", "developers_guide/generated/compass.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon", "developers_guide/generated/compass.mesh.IcosahedralMeshStep.get_cell_width", "developers_guide/generated/compass.mesh.IcosahedralMeshStep.get_subdivisions", "developers_guide/generated/compass.mesh.IcosahedralMeshStep.make_jigsaw_mesh", "developers_guide/generated/compass.mesh.IcosahedralMeshStep.run", "developers_guide/generated/compass.mesh.IcosahedralMeshStep.setup", "developers_guide/generated/compass.mesh.QuasiUniformSphericalMeshStep", "developers_guide/generated/compass.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon", "developers_guide/generated/compass.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh", "developers_guide/generated/compass.mesh.QuasiUniformSphericalMeshStep.run", "developers_guide/generated/compass.mesh.QuasiUniformSphericalMeshStep.setup", "developers_guide/generated/compass.mesh.spherical.SphericalBaseStep", "developers_guide/generated/compass.mesh.spherical.SphericalBaseStep.run", "developers_guide/generated/compass.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width", "developers_guide/generated/compass.mesh.spherical.SphericalBaseStep.setup", "developers_guide/generated/compass.model.make_graph_file", "developers_guide/generated/compass.model.partition", "developers_guide/generated/compass.model.run_model", "developers_guide/generated/compass.mpas_cores.get_mpas_cores", "developers_guide/generated/compass.parallel.check_parallel_system", "developers_guide/generated/compass.parallel.get_available_cores_and_nodes", "developers_guide/generated/compass.parallel.run_command", "developers_guide/generated/compass.parallel.set_cores_per_node", "developers_guide/generated/compass.provenance.write", "developers_guide/generated/compass.run.serial.run_single_step", "developers_guide/generated/compass.run.serial.run_tests", "developers_guide/generated/compass.setup.setup_case", "developers_guide/generated/compass.setup.setup_cases", "developers_guide/generated/compass.suite.clean_suite", "developers_guide/generated/compass.suite.setup_suite", "developers_guide/generated/compass.validate.compare_timers", "developers_guide/generated/compass.validate.compare_variables", "developers_guide/landice/api", "developers_guide/landice/framework", "developers_guide/landice/generated/compass.landice.Landice", "developers_guide/landice/generated/compass.landice.tests.calving_dt_convergence.CalvingDtConvergence", "developers_guide/landice/generated/compass.landice.tests.calving_dt_convergence.dt_convergence_test.DtConvergenceTest", "developers_guide/landice/generated/compass.landice.tests.calving_dt_convergence.dt_convergence_test.DtConvergenceTest.validate", "developers_guide/landice/generated/compass.landice.tests.calving_dt_convergence.run_model.RunModel", "developers_guide/landice/generated/compass.landice.tests.calving_dt_convergence.run_model.RunModel.run", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.CircularShelf", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.decomposition_test.DecompositionTest", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.decomposition_test.DecompositionTest.run", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.run_model.RunModel", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.run_model.RunModel.run", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.setup_mesh.SetupMesh", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.setup_mesh.SetupMesh.run", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.visualize.Visualize", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.visualize.Visualize.run", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.visualize.visualize_circular_shelf", "developers_guide/landice/generated/compass.landice.tests.dome.Dome", "developers_guide/landice/generated/compass.landice.tests.dome.decomposition_test.DecompositionTest", "developers_guide/landice/generated/compass.landice.tests.dome.decomposition_test.DecompositionTest.run", "developers_guide/landice/generated/compass.landice.tests.dome.restart_test.RestartTest", "developers_guide/landice/generated/compass.landice.tests.dome.restart_test.RestartTest.run", "developers_guide/landice/generated/compass.landice.tests.dome.run_model.RunModel", "developers_guide/landice/generated/compass.landice.tests.dome.run_model.RunModel.run", "developers_guide/landice/generated/compass.landice.tests.dome.run_model.RunModel.setup", "developers_guide/landice/generated/compass.landice.tests.dome.setup_mesh.SetupMesh", "developers_guide/landice/generated/compass.landice.tests.dome.setup_mesh.SetupMesh.run", "developers_guide/landice/generated/compass.landice.tests.dome.smoke_test.SmokeTest", "developers_guide/landice/generated/compass.landice.tests.dome.smoke_test.SmokeTest.run", "developers_guide/landice/generated/compass.landice.tests.dome.visualize.Visualize", "developers_guide/landice/generated/compass.landice.tests.dome.visualize.Visualize.run", "developers_guide/landice/generated/compass.landice.tests.dome.visualize.visualize_dome", "developers_guide/landice/generated/compass.landice.tests.eismint2.Eismint2", "developers_guide/landice/generated/compass.landice.tests.eismint2.decomposition_test.DecompositionTest", "developers_guide/landice/generated/compass.landice.tests.eismint2.decomposition_test.DecompositionTest.run", "developers_guide/landice/generated/compass.landice.tests.eismint2.restart_test.RestartTest", "developers_guide/landice/generated/compass.landice.tests.eismint2.restart_test.RestartTest.run", "developers_guide/landice/generated/compass.landice.tests.eismint2.run_experiment.RunExperiment", "developers_guide/landice/generated/compass.landice.tests.eismint2.run_experiment.RunExperiment.run", "developers_guide/landice/generated/compass.landice.tests.eismint2.run_experiment.RunExperiment.setup", "developers_guide/landice/generated/compass.landice.tests.eismint2.setup_mesh.SetupMesh", "developers_guide/landice/generated/compass.landice.tests.eismint2.setup_mesh.SetupMesh.run", "developers_guide/landice/generated/compass.landice.tests.eismint2.standard_experiments.StandardExperiments", "developers_guide/landice/generated/compass.landice.tests.eismint2.standard_experiments.StandardExperiments.run", "developers_guide/landice/generated/compass.landice.tests.eismint2.standard_experiments.visualize.Visualize", "developers_guide/landice/generated/compass.landice.tests.eismint2.standard_experiments.visualize.Visualize.run", "developers_guide/landice/generated/compass.landice.tests.eismint2.standard_experiments.visualize.visualize_eismint2", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.A.A", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.A.A.configure", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.A.A.run", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.A.visualize.Visualize", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.A.visualize.Visualize.run", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.B.B", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.B.B.configure", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.B.B.run", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.B.visualize.Visualize", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.B.visualize.Visualize.run", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.EnthalpyBenchmark", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.run_model.RunModel", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.run_model.RunModel.run", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.run_model.RunModel.setup", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.setup_mesh.SetupMesh", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.setup_mesh.SetupMesh.run", "developers_guide/landice/generated/compass.landice.tests.greenland.Greenland", "developers_guide/landice/generated/compass.landice.tests.greenland.decomposition_test.DecompositionTest", "developers_guide/landice/generated/compass.landice.tests.greenland.decomposition_test.DecompositionTest.run", "developers_guide/landice/generated/compass.landice.tests.greenland.high_res_mesh.HighResMesh", "developers_guide/landice/generated/compass.landice.tests.greenland.high_res_mesh.HighResMesh.run", "developers_guide/landice/generated/compass.landice.tests.greenland.mesh.Mesh", "developers_guide/landice/generated/compass.landice.tests.greenland.mesh.Mesh.build_cell_width", "developers_guide/landice/generated/compass.landice.tests.greenland.mesh.Mesh.run", "developers_guide/landice/generated/compass.landice.tests.greenland.restart_test.RestartTest", "developers_guide/landice/generated/compass.landice.tests.greenland.restart_test.RestartTest.run", "developers_guide/landice/generated/compass.landice.tests.greenland.run_model.RunModel", "developers_guide/landice/generated/compass.landice.tests.greenland.run_model.RunModel.run", "developers_guide/landice/generated/compass.landice.tests.greenland.run_model.RunModel.setup", "developers_guide/landice/generated/compass.landice.tests.greenland.smoke_test.SmokeTest", "developers_guide/landice/generated/compass.landice.tests.greenland.smoke_test.SmokeTest.run", "developers_guide/landice/generated/compass.landice.tests.humboldt.Humboldt", "developers_guide/landice/generated/compass.landice.tests.humboldt.decomposition_test.DecompositionTest", "developers_guide/landice/generated/compass.landice.tests.humboldt.decomposition_test.DecompositionTest.validate", "developers_guide/landice/generated/compass.landice.tests.humboldt.mesh.Mesh", "developers_guide/landice/generated/compass.landice.tests.humboldt.mesh.Mesh.run", "developers_guide/landice/generated/compass.landice.tests.humboldt.mesh_gen.MeshGen", "developers_guide/landice/generated/compass.landice.tests.humboldt.mesh_gen.MeshGen.run", "developers_guide/landice/generated/compass.landice.tests.humboldt.restart_test.RestartTest", "developers_guide/landice/generated/compass.landice.tests.humboldt.restart_test.RestartTest.validate", "developers_guide/landice/generated/compass.landice.tests.humboldt.run_model.RunModel", "developers_guide/landice/generated/compass.landice.tests.humboldt.run_model.RunModel.run", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.HydroRadial", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.decomposition_test.DecompositionTest", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.decomposition_test.DecompositionTest.run", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.restart_test.RestartTest", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.restart_test.RestartTest.run", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.run_model.RunModel", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.run_model.RunModel.run", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.run_model.RunModel.setup", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.setup_mesh.SetupMesh", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.setup_mesh.SetupMesh.run", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.spinup_test.SpinupTest", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.spinup_test.SpinupTest.run", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.steady_state_drift_test.SteadyStateDriftTest", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.steady_state_drift_test.SteadyStateDriftTest.run", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.visualize.Visualize", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.visualize.Visualize.run", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.visualize.visualize_hydro_radial", "developers_guide/landice/generated/compass.landice.tests.kangerlussuaq.Kangerlussuaq", "developers_guide/landice/generated/compass.landice.tests.kangerlussuaq.mesh.Mesh", "developers_guide/landice/generated/compass.landice.tests.kangerlussuaq.mesh.Mesh.run", "developers_guide/landice/generated/compass.landice.tests.kangerlussuaq.mesh_gen.MeshGen", "developers_guide/landice/generated/compass.landice.tests.kangerlussuaq.mesh_gen.MeshGen.run", "developers_guide/landice/generated/compass.landice.tests.koge_bugt_s.KogeBugtS", "developers_guide/landice/generated/compass.landice.tests.koge_bugt_s.mesh.Mesh", "developers_guide/landice/generated/compass.landice.tests.koge_bugt_s.mesh.Mesh.run", "developers_guide/landice/generated/compass.landice.tests.koge_bugt_s.mesh_gen.MeshGen", "developers_guide/landice/generated/compass.landice.tests.koge_bugt_s.mesh_gen.MeshGen.run", "developers_guide/landice/generated/compass.landice.tests.mismipplus.MISMIPplus", "developers_guide/landice/generated/compass.landice.tests.mismipplus.run_model.RunModel", "developers_guide/landice/generated/compass.landice.tests.mismipplus.run_model.RunModel.run", "developers_guide/landice/generated/compass.landice.tests.mismipplus.run_model.RunModel.setup", "developers_guide/landice/generated/compass.landice.tests.mismipplus.smoke_test.SmokeTest", "developers_guide/landice/generated/compass.landice.tests.mismipplus.smoke_test.SmokeTest.run", "developers_guide/landice/generated/compass.landice.tests.thwaites.Thwaites", "developers_guide/landice/generated/compass.landice.tests.thwaites.decomposition_test.DecompositionTest", "developers_guide/landice/generated/compass.landice.tests.thwaites.decomposition_test.DecompositionTest.run", "developers_guide/landice/generated/compass.landice.tests.thwaites.restart_test.RestartTest", "developers_guide/landice/generated/compass.landice.tests.thwaites.restart_test.RestartTest.run", "developers_guide/landice/generated/compass.landice.tests.thwaites.run_model.RunModel", "developers_guide/landice/generated/compass.landice.tests.thwaites.run_model.RunModel.run", "developers_guide/landice/generated/compass.landice.tests.thwaites.run_model.RunModel.setup", "developers_guide/landice/index", "developers_guide/landice/test_groups/calving_dt_convergence", "developers_guide/landice/test_groups/circular_shelf", "developers_guide/landice/test_groups/dome", "developers_guide/landice/test_groups/eismint2", "developers_guide/landice/test_groups/enthalpy_benchmark", "developers_guide/landice/test_groups/greenland", "developers_guide/landice/test_groups/humboldt", "developers_guide/landice/test_groups/hydro_radial", "developers_guide/landice/test_groups/index", "developers_guide/landice/test_groups/kangerlussuaq", "developers_guide/landice/test_groups/koge_bugt_s", "developers_guide/landice/test_groups/mismipplus", "developers_guide/landice/test_groups/thwaites", "developers_guide/machines/anvil", "developers_guide/machines/badger", "developers_guide/machines/chrysalis", "developers_guide/machines/compy", "developers_guide/machines/cori", "developers_guide/machines/index", "developers_guide/ocean/api", "developers_guide/ocean/framework", "developers_guide/ocean/generated/compass.ocean.Ocean", "developers_guide/ocean/generated/compass.ocean.haney.compute_haney_number", "developers_guide/ocean/generated/compass.ocean.iceshelf.adjust_ssh", "developers_guide/ocean/generated/compass.ocean.iceshelf.compute_land_ice_pressure_and_draft", "developers_guide/ocean/generated/compass.ocean.particles.remap_particles", "developers_guide/ocean/generated/compass.ocean.particles.write", "developers_guide/ocean/generated/compass.ocean.plot.plot_initial_state", "developers_guide/ocean/generated/compass.ocean.plot.plot_vertical_grid", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.BaroclinicChannel", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.configure", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.decomp_test.DecompTest", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.decomp_test.DecompTest.configure", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.decomp_test.DecompTest.run", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.default.Default", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.default.Default.configure", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.default.Default.run", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.forward.Forward", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.forward.Forward.run", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.forward.Forward.setup", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.initial_state.InitialState", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.initial_state.InitialState.run", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.initial_state.InitialState.setup", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.restart_test.RestartTest", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.restart_test.RestartTest.configure", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.restart_test.RestartTest.run", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.rpe_test.RpeTest", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.rpe_test.RpeTest.configure", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.rpe_test.RpeTest.run", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.run", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.setup", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.threads_test.ThreadsTest", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.configure", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.run", "developers_guide/ocean/generated/compass.ocean.tests.drying_slope.DryingSlope", "developers_guide/ocean/generated/compass.ocean.tests.drying_slope.default.Default", "developers_guide/ocean/generated/compass.ocean.tests.drying_slope.default.Default.configure", "developers_guide/ocean/generated/compass.ocean.tests.drying_slope.forward.Forward", "developers_guide/ocean/generated/compass.ocean.tests.drying_slope.forward.Forward.run", "developers_guide/ocean/generated/compass.ocean.tests.drying_slope.initial_state.InitialState", "developers_guide/ocean/generated/compass.ocean.tests.drying_slope.initial_state.InitialState.run", "developers_guide/ocean/generated/compass.ocean.tests.drying_slope.viz.Viz", "developers_guide/ocean/generated/compass.ocean.tests.drying_slope.viz.Viz.run", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.GlobalConvergence", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.CosineBell", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.CosineBell.configure", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.CosineBell.run", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.analysis.Analysis", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rmse", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.run", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.forward.Forward", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.forward.Forward.get_dt", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.forward.Forward.run", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.forward.Forward.setup", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.init.Init", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.init.Init.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.GlobalOcean", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.analysis_test.AnalysisTest", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.analysis_test.AnalysisTest.configure", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.analysis_test.AnalysisTest.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.configure", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.configure.configure_global_ocean", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.daily_output_test.DailyOutputTest", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.daily_output_test.DailyOutputTest.configure", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.daily_output_test.DailyOutputTest.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.decomp_test.DecompTest", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.decomp_test.DecompTest.configure", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.decomp_test.DecompTest.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.dynamic_adjustment.DynamicAdjustment", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.dynamic_adjustment.DynamicAdjustment.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.FilesForE3SM", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.FilesForE3SM.configure", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.FilesForE3SM.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.diagnostics_files.DiagnosticsFiles", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.diagnostics_files.DiagnosticsFiles.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.ocean_graph_partition.OceanGraphPartition", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.ocean_graph_partition.OceanGraphPartition.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.ocean_initial_condition.OceanInitialCondition", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.ocean_initial_condition.OceanInitialCondition.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.scrip.Scrip", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.scrip.Scrip.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.seaice_initial_condition.SeaiceInitialCondition", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.seaice_initial_condition.SeaiceInitialCondition.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.forward.ForwardStep", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.forward.ForwardStep.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.forward.ForwardStep.setup", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.forward.ForwardTestCase", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.forward.ForwardTestCase.configure", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.forward.ForwardTestCase.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.init.Init", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.init.Init.configure", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.init.Init.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.init.initial_state.InitialState", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.init.initial_state.InitialState.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.init.initial_state.InitialState.setup", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.init.ssh_adjustment.SshAdjustment", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.init.ssh_adjustment.SshAdjustment.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.init.ssh_adjustment.SshAdjustment.setup", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.Mesh", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.Mesh.configure", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.Mesh.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.cull.cull_mesh", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.ec30to60.EC30to60Mesh", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.ec30to60.EC30to60Mesh.build_cell_width_lat_lon", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.ec30to60.dynamic_adjustment.EC30to60DynamicAdjustment", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.ec30to60.dynamic_adjustment.EC30to60DynamicAdjustment.configure", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.ec30to60.dynamic_adjustment.EC30to60DynamicAdjustment.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.mesh.MeshStep", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.mesh.MeshStep.build_cell_width_lat_lon", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.mesh.MeshStep.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.mesh.MeshStep.setup", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.qu240.QU240Mesh", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.qu240.QU240Mesh.build_cell_width_lat_lon", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.qu240.dynamic_adjustment.QU240DynamicAdjustment", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.qu240.dynamic_adjustment.QU240DynamicAdjustment.configure", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.qu240.dynamic_adjustment.QU240DynamicAdjustment.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.so12to60.SO12to60Mesh", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.so12to60.SO12to60Mesh.build_cell_width_lat_lon", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.so12to60.dynamic_adjustment.SO12to60DynamicAdjustment", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.so12to60.dynamic_adjustment.SO12to60DynamicAdjustment.configure", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.so12to60.dynamic_adjustment.SO12to60DynamicAdjustment.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.wc14.WC14Mesh", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.wc14.WC14Mesh.build_cell_width_lat_lon", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.wc14.dynamic_adjustment.WC14DynamicAdjustment", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.wc14.dynamic_adjustment.WC14DynamicAdjustment.configure", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.wc14.dynamic_adjustment.WC14DynamicAdjustment.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.metadata.add_mesh_and_init_metadata", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.metadata.get_e3sm_mesh_names", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.performance_test.PerformanceTest", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.performance_test.PerformanceTest.configure", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.performance_test.PerformanceTest.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.restart_test.RestartTest", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.restart_test.RestartTest.configure", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.restart_test.RestartTest.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.threads_test.ThreadsTest", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.threads_test.ThreadsTest.configure", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.threads_test.ThreadsTest.run", "developers_guide/ocean/generated/compass.ocean.tests.gotm.Gotm", "developers_guide/ocean/generated/compass.ocean.tests.gotm.default.Default", "developers_guide/ocean/generated/compass.ocean.tests.gotm.default.Default.validate", "developers_guide/ocean/generated/compass.ocean.tests.gotm.default.analysis.Analysis", "developers_guide/ocean/generated/compass.ocean.tests.gotm.default.analysis.Analysis.run", "developers_guide/ocean/generated/compass.ocean.tests.gotm.default.forward.Forward", "developers_guide/ocean/generated/compass.ocean.tests.gotm.default.forward.Forward.run", "developers_guide/ocean/generated/compass.ocean.tests.gotm.default.init.Init", "developers_guide/ocean/generated/compass.ocean.tests.gotm.default.init.Init.run", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.Hurricane", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.analysis.Analysis", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.analysis.Analysis.read_pointstats", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.analysis.Analysis.read_station_data", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.analysis.Analysis.read_station_file", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.analysis.Analysis.run", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.analysis.Analysis.setup", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.configure", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.forward.Forward", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.forward.Forward.configure", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.forward.Forward.run", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.forward.forward.ForwardStep", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.forward.forward.ForwardStep.run", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.forward.forward.ForwardStep.setup", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.Init", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.Init.configure", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.Init.run", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.create_pointstats_file.CreatePointstatsFile", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.create_pointstats_file.CreatePointstatsFile.create_pointstats_file", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.create_pointstats_file.CreatePointstatsFile.run", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.initial_state.InitialState", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.initial_state.InitialState.run", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.initial_state.InitialState.setup", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing.interpolate_data_to_grid", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing.plot_interp_data", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing.run", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing.write_to_file", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.mesh.Mesh", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.mesh.Mesh.configure", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.mesh.Mesh.run", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.mesh.dequ120at30cr10rr2.DEQU120at30cr10rr2Mesh", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.mesh.dequ120at30cr10rr2.DEQU120at30cr10rr2Mesh.build_cell_width_lat_lon", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.IceShelf2d", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.configure", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.default.Default", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.default.Default.configure", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.default.Default.run", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.forward.Forward", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.forward.Forward.run", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.forward.Forward.setup", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.initial_state.InitialState", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.initial_state.InitialState.run", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.restart_test.RestartTest", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.restart_test.RestartTest.configure", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.restart_test.RestartTest.run", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.ssh_adjustment.SshAdjustment", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.ssh_adjustment.SshAdjustment.run", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.ssh_adjustment.SshAdjustment.setup", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.viz.Viz", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.viz.Viz.run", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.InternalWave", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.default.Default", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.default.Default.validate", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.forward.Forward", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.forward.Forward.run", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.initial_state.InitialState", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.initial_state.InitialState.run", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.rpe_test.RpeTest", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.rpe_test.analysis.Analysis", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.rpe_test.analysis.Analysis.run", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.ten_day_test.TenDayTest", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.ten_day_test.TenDayTest.validate", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.viz.Viz", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.viz.Viz.run", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.IsomipPlus", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.evap.update_evaporation_flux", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.forward.Forward", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.forward.Forward.run", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.forward.Forward.setup", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.geom.interpolate_ocean_mask", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.geom.process_input_geometry", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.initial_state.InitialState", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.initial_state.InitialState.run", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.misomip.Misomip", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.misomip.Misomip.run", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.ocean_test.OceanTest", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.ocean_test.OceanTest.configure", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.ocean_test.OceanTest.run", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.ssh_adjustment.SshAdjustment", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.ssh_adjustment.SshAdjustment.run", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.ssh_adjustment.SshAdjustment.setup", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.streamfunction.Streamfunction", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.streamfunction.Streamfunction.run", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.Viz", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.Viz.run", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.file_complete", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.images_to_movies", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_3d_field_top_bot_section", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_barotropic_streamfunction", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_horiz_series", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_ice_shelf_boundary_variables", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_layer_interfaces", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_melt_rates", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_overturning_streamfunction", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_potential_density", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_salinity", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_temperature", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.TimeSeriesPlotter", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.TimeSeriesPlotter.plot_melt_time_series", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.TimeSeriesPlotter.plot_time_series", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.PlanarConvergence", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.conv_init.ConvInit", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.conv_init.ConvInit.run", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.conv_test_case.ConvTestCase", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.conv_test_case.ConvTestCase.configure", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.conv_test_case.ConvTestCase.run", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.conv_test_case.ConvTestCase.update_cores", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.forward.Forward", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.forward.Forward.get_dt_duration", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.forward.Forward.run", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.forward.Forward.setup", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.horizontal_advection.HorizontalAdvection", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.horizontal_advection.HorizontalAdvection.configure", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.horizontal_advection.HorizontalAdvection.run", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.horizontal_advection.analysis.Analysis", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.horizontal_advection.analysis.Analysis.rmse", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.horizontal_advection.analysis.Analysis.run", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.horizontal_advection.init.Init", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.horizontal_advection.init.Init.run", "developers_guide/ocean/generated/compass.ocean.tests.soma.Soma", "developers_guide/ocean/generated/compass.ocean.tests.soma.analysis.Analysis", "developers_guide/ocean/generated/compass.ocean.tests.soma.analysis.Analysis.run", "developers_guide/ocean/generated/compass.ocean.tests.soma.forward.Forward", "developers_guide/ocean/generated/compass.ocean.tests.soma.forward.Forward.run", "developers_guide/ocean/generated/compass.ocean.tests.soma.initial_state.InitialState", "developers_guide/ocean/generated/compass.ocean.tests.soma.initial_state.InitialState.run", "developers_guide/ocean/generated/compass.ocean.tests.soma.soma_test_case.SomaTestCase", "developers_guide/ocean/generated/compass.ocean.tests.soma.soma_test_case.SomaTestCase.validate", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.SphereTransport", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.CorrelatedTracers2D", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.CorrelatedTracers2D.configure", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.CorrelatedTracers2D.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.analysis.Analysis", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.analysis.Analysis.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.Forward", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.Forward.get_timestep_str", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.Forward.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.Forward.setup", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.init.Init", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.init.Init.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.mesh.Mesh", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.mesh.Mesh.build_cell_width_lat_lon", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.mesh.Mesh.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.Divergent2D", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.Divergent2D.configure", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.Divergent2D.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.analysis.Analysis", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.analysis.Analysis.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.forward.Forward", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.forward.Forward.get_timestep_str", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.forward.Forward.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.forward.Forward.setup", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.init.Init", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.init.Init.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.mesh.Mesh", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.mesh.Mesh.build_cell_width_lat_lon", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.mesh.Mesh.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.Nondivergent2D", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.Nondivergent2D.configure", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.Nondivergent2D.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.analysis.Analysis", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.analysis.Analysis.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.forward.Forward", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.forward.Forward.get_timestep_str", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.forward.Forward.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.forward.Forward.setup", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.init.Init", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.init.Init.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.mesh.Mesh", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.mesh.Mesh.build_cell_width_lat_lon", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.mesh.Mesh.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.compute_convergence_rates", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.compute_error_from_output_ncfile", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.make_convergence_arrays", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.plot_convergence", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.plot_filament", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.plot_over_and_undershoot_errors", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.plot_sol", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.print_data_as_csv", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.print_error_conv_table", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.read_ncl_rgb_file", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.Rotation2D", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.Rotation2D.configure", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.Rotation2D.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.analysis.Analysis", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.analysis.Analysis.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.forward.Forward", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.forward.Forward.get_timestep_str", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.forward.Forward.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.forward.Forward.setup", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.init.Init", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.init.Init.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.mesh.Mesh", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.mesh.Mesh.build_cell_width_lat_lon", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.mesh.Mesh.run", "developers_guide/ocean/generated/compass.ocean.tests.ziso.Ziso", "developers_guide/ocean/generated/compass.ocean.tests.ziso.ZisoTestCase", "developers_guide/ocean/generated/compass.ocean.tests.ziso.ZisoTestCase.configure", "developers_guide/ocean/generated/compass.ocean.tests.ziso.ZisoTestCase.run", "developers_guide/ocean/generated/compass.ocean.tests.ziso.configure", "developers_guide/ocean/generated/compass.ocean.tests.ziso.forward.Forward", "developers_guide/ocean/generated/compass.ocean.tests.ziso.forward.Forward.run", "developers_guide/ocean/generated/compass.ocean.tests.ziso.forward.Forward.setup", "developers_guide/ocean/generated/compass.ocean.tests.ziso.initial_state.InitialState", "developers_guide/ocean/generated/compass.ocean.tests.ziso.initial_state.InitialState.run", "developers_guide/ocean/generated/compass.ocean.tests.ziso.with_frazil.WithFrazil", "developers_guide/ocean/generated/compass.ocean.tests.ziso.with_frazil.WithFrazil.configure", "developers_guide/ocean/generated/compass.ocean.tests.ziso.with_frazil.WithFrazil.run", "developers_guide/ocean/generated/compass.ocean.vertical.grid_1d.generate_1d_grid", "developers_guide/ocean/generated/compass.ocean.vertical.grid_1d.write_1d_grid", "developers_guide/ocean/generated/compass.ocean.vertical.init_vertical_coord", "developers_guide/ocean/generated/compass.ocean.vertical.partial_cells.alter_bottom_depth", "developers_guide/ocean/generated/compass.ocean.vertical.partial_cells.alter_ssh", "developers_guide/ocean/generated/compass.ocean.vertical.zlevel.compute_min_max_level_cell", "developers_guide/ocean/generated/compass.ocean.vertical.zlevel.compute_z_level_layer_thickness", "developers_guide/ocean/generated/compass.ocean.vertical.zlevel.compute_z_level_resting_thickness", "developers_guide/ocean/generated/compass.ocean.vertical.zlevel.init_z_level_vertical_coord", "developers_guide/ocean/generated/compass.ocean.vertical.zstar.init_z_star_vertical_coord", "developers_guide/ocean/index", "developers_guide/ocean/test_groups/baroclinic_channel", "developers_guide/ocean/test_groups/drying_slope", "developers_guide/ocean/test_groups/global_convergence", "developers_guide/ocean/test_groups/global_ocean", "developers_guide/ocean/test_groups/gotm", "developers_guide/ocean/test_groups/hurricane", "developers_guide/ocean/test_groups/ice_shelf_2d", "developers_guide/ocean/test_groups/index", "developers_guide/ocean/test_groups/internal_wave", "developers_guide/ocean/test_groups/isomip_plus", "developers_guide/ocean/test_groups/planar_convergence", "developers_guide/ocean/test_groups/soma", "developers_guide/ocean/test_groups/sphere_transport", "developers_guide/ocean/test_groups/spherical_harmonic_transform", "developers_guide/ocean/test_groups/ziso", "developers_guide/organization", "developers_guide/overview", "developers_guide/quick_start", "developers_guide/troubleshooting", "glossary", "index", "tutorials/dev_add_param_study", "tutorials/dev_add_test_group", "tutorials/dev_porting_legacy", "users_guide/config_files", "users_guide/landice/framework/index", "users_guide/landice/index", "users_guide/landice/suites", "users_guide/landice/test_groups/calving_dt_convergence", "users_guide/landice/test_groups/circular_shelf", "users_guide/landice/test_groups/dome", "users_guide/landice/test_groups/eismint2", "users_guide/landice/test_groups/enthalpy_benchmark", "users_guide/landice/test_groups/greenland", "users_guide/landice/test_groups/humboldt", "users_guide/landice/test_groups/hydro_radial", "users_guide/landice/test_groups/index", "users_guide/landice/test_groups/kangerlussuaq", "users_guide/landice/test_groups/koge_bugt_s", "users_guide/landice/test_groups/mismipplus", "users_guide/landice/test_groups/thwaites", "users_guide/machines/anvil", "users_guide/machines/badger", "users_guide/machines/chrysalis", "users_guide/machines/compy", "users_guide/machines/cori", "users_guide/machines/index", "users_guide/ocean/framework/ice_shelf", "users_guide/ocean/framework/index", "users_guide/ocean/framework/vertical", "users_guide/ocean/index", "users_guide/ocean/suites", "users_guide/ocean/test_groups/baroclinic_channel", "users_guide/ocean/test_groups/drying_slope", "users_guide/ocean/test_groups/global_convergence", "users_guide/ocean/test_groups/global_ocean", "users_guide/ocean/test_groups/gotm", "users_guide/ocean/test_groups/hurricane", "users_guide/ocean/test_groups/ice_shelf_2d", "users_guide/ocean/test_groups/index", "users_guide/ocean/test_groups/internal_wave", "users_guide/ocean/test_groups/isomip_plus", "users_guide/ocean/test_groups/planar_convergence", "users_guide/ocean/test_groups/soma", "users_guide/ocean/test_groups/sphere_transport", "users_guide/ocean/test_groups/spherical_harmonic_transform", "users_guide/ocean/test_groups/ziso", "users_guide/quick_start", "users_guide/test_cases", "users_guide/test_suites", "versions"], "filenames": ["design_docs/cached_outputs.rst", "design_docs/compass_package.rst", "design_docs/index.rst", "design_docs/template.rst", "developers_guide/api.rst", "developers_guide/building_docs.rst", "developers_guide/command_line.rst", "developers_guide/docs.rst", "developers_guide/framework.rst", "developers_guide/generated/compass.MpasCore.rst", "developers_guide/generated/compass.MpasCore.add_test_group.rst", "developers_guide/generated/compass.Step.rst", "developers_guide/generated/compass.Step.add_input_file.rst", "developers_guide/generated/compass.Step.add_model_as_input.rst", "developers_guide/generated/compass.Step.add_namelist_file.rst", "developers_guide/generated/compass.Step.add_namelist_options.rst", "developers_guide/generated/compass.Step.add_output_file.rst", "developers_guide/generated/compass.Step.add_streams_file.rst", "developers_guide/generated/compass.Step.constrain_resources.rst", "developers_guide/generated/compass.Step.run.rst", "developers_guide/generated/compass.Step.runtime_setup.rst", "developers_guide/generated/compass.Step.set_resources.rst", "developers_guide/generated/compass.Step.setup.rst", "developers_guide/generated/compass.Step.update_namelist_at_runtime.rst", "developers_guide/generated/compass.Step.update_namelist_pio.rst", "developers_guide/generated/compass.Step.update_streams_at_runtime.rst", "developers_guide/generated/compass.TestCase.rst", "developers_guide/generated/compass.TestCase.add_step.rst", "developers_guide/generated/compass.TestCase.configure.rst", "developers_guide/generated/compass.TestCase.run.rst", "developers_guide/generated/compass.TestCase.validate.rst", "developers_guide/generated/compass.TestGroup.rst", "developers_guide/generated/compass.TestGroup.add_test_case.rst", "developers_guide/generated/compass.__main__.main.rst", "developers_guide/generated/compass.cache.update_cache.rst", "developers_guide/generated/compass.clean.clean_cases.rst", "developers_guide/generated/compass.config.CompassConfigParser.rst", "developers_guide/generated/compass.io.download.rst", "developers_guide/generated/compass.io.symlink.rst", "developers_guide/generated/compass.list.list_cases.rst", "developers_guide/generated/compass.list.list_machines.rst", "developers_guide/generated/compass.list.list_suites.rst", "developers_guide/generated/compass.logging.log_method_call.rst", "developers_guide/generated/compass.mesh.IcosahedralMeshStep.rst", "developers_guide/generated/compass.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon.rst", "developers_guide/generated/compass.mesh.IcosahedralMeshStep.get_cell_width.rst", "developers_guide/generated/compass.mesh.IcosahedralMeshStep.get_subdivisions.rst", "developers_guide/generated/compass.mesh.IcosahedralMeshStep.make_jigsaw_mesh.rst", "developers_guide/generated/compass.mesh.IcosahedralMeshStep.run.rst", "developers_guide/generated/compass.mesh.IcosahedralMeshStep.setup.rst", "developers_guide/generated/compass.mesh.QuasiUniformSphericalMeshStep.rst", "developers_guide/generated/compass.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon.rst", "developers_guide/generated/compass.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh.rst", "developers_guide/generated/compass.mesh.QuasiUniformSphericalMeshStep.run.rst", "developers_guide/generated/compass.mesh.QuasiUniformSphericalMeshStep.setup.rst", "developers_guide/generated/compass.mesh.spherical.SphericalBaseStep.rst", "developers_guide/generated/compass.mesh.spherical.SphericalBaseStep.run.rst", "developers_guide/generated/compass.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width.rst", "developers_guide/generated/compass.mesh.spherical.SphericalBaseStep.setup.rst", "developers_guide/generated/compass.model.make_graph_file.rst", "developers_guide/generated/compass.model.partition.rst", "developers_guide/generated/compass.model.run_model.rst", "developers_guide/generated/compass.mpas_cores.get_mpas_cores.rst", "developers_guide/generated/compass.parallel.check_parallel_system.rst", "developers_guide/generated/compass.parallel.get_available_cores_and_nodes.rst", "developers_guide/generated/compass.parallel.run_command.rst", "developers_guide/generated/compass.parallel.set_cores_per_node.rst", "developers_guide/generated/compass.provenance.write.rst", "developers_guide/generated/compass.run.serial.run_single_step.rst", "developers_guide/generated/compass.run.serial.run_tests.rst", "developers_guide/generated/compass.setup.setup_case.rst", "developers_guide/generated/compass.setup.setup_cases.rst", "developers_guide/generated/compass.suite.clean_suite.rst", "developers_guide/generated/compass.suite.setup_suite.rst", "developers_guide/generated/compass.validate.compare_timers.rst", "developers_guide/generated/compass.validate.compare_variables.rst", "developers_guide/landice/api.rst", "developers_guide/landice/framework.rst", "developers_guide/landice/generated/compass.landice.Landice.rst", "developers_guide/landice/generated/compass.landice.tests.calving_dt_convergence.CalvingDtConvergence.rst", "developers_guide/landice/generated/compass.landice.tests.calving_dt_convergence.dt_convergence_test.DtConvergenceTest.rst", "developers_guide/landice/generated/compass.landice.tests.calving_dt_convergence.dt_convergence_test.DtConvergenceTest.validate.rst", "developers_guide/landice/generated/compass.landice.tests.calving_dt_convergence.run_model.RunModel.rst", "developers_guide/landice/generated/compass.landice.tests.calving_dt_convergence.run_model.RunModel.run.rst", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.CircularShelf.rst", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.decomposition_test.DecompositionTest.rst", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.decomposition_test.DecompositionTest.run.rst", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.run_model.RunModel.rst", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.run_model.RunModel.run.rst", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.setup_mesh.SetupMesh.rst", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.setup_mesh.SetupMesh.run.rst", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.visualize.Visualize.rst", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.visualize.Visualize.run.rst", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.visualize.visualize_circular_shelf.rst", "developers_guide/landice/generated/compass.landice.tests.dome.Dome.rst", "developers_guide/landice/generated/compass.landice.tests.dome.decomposition_test.DecompositionTest.rst", "developers_guide/landice/generated/compass.landice.tests.dome.decomposition_test.DecompositionTest.run.rst", "developers_guide/landice/generated/compass.landice.tests.dome.restart_test.RestartTest.rst", "developers_guide/landice/generated/compass.landice.tests.dome.restart_test.RestartTest.run.rst", "developers_guide/landice/generated/compass.landice.tests.dome.run_model.RunModel.rst", "developers_guide/landice/generated/compass.landice.tests.dome.run_model.RunModel.run.rst", "developers_guide/landice/generated/compass.landice.tests.dome.run_model.RunModel.setup.rst", "developers_guide/landice/generated/compass.landice.tests.dome.setup_mesh.SetupMesh.rst", "developers_guide/landice/generated/compass.landice.tests.dome.setup_mesh.SetupMesh.run.rst", "developers_guide/landice/generated/compass.landice.tests.dome.smoke_test.SmokeTest.rst", "developers_guide/landice/generated/compass.landice.tests.dome.smoke_test.SmokeTest.run.rst", "developers_guide/landice/generated/compass.landice.tests.dome.visualize.Visualize.rst", "developers_guide/landice/generated/compass.landice.tests.dome.visualize.Visualize.run.rst", "developers_guide/landice/generated/compass.landice.tests.dome.visualize.visualize_dome.rst", "developers_guide/landice/generated/compass.landice.tests.eismint2.Eismint2.rst", "developers_guide/landice/generated/compass.landice.tests.eismint2.decomposition_test.DecompositionTest.rst", "developers_guide/landice/generated/compass.landice.tests.eismint2.decomposition_test.DecompositionTest.run.rst", "developers_guide/landice/generated/compass.landice.tests.eismint2.restart_test.RestartTest.rst", "developers_guide/landice/generated/compass.landice.tests.eismint2.restart_test.RestartTest.run.rst", "developers_guide/landice/generated/compass.landice.tests.eismint2.run_experiment.RunExperiment.rst", "developers_guide/landice/generated/compass.landice.tests.eismint2.run_experiment.RunExperiment.run.rst", "developers_guide/landice/generated/compass.landice.tests.eismint2.run_experiment.RunExperiment.setup.rst", "developers_guide/landice/generated/compass.landice.tests.eismint2.setup_mesh.SetupMesh.rst", "developers_guide/landice/generated/compass.landice.tests.eismint2.setup_mesh.SetupMesh.run.rst", "developers_guide/landice/generated/compass.landice.tests.eismint2.standard_experiments.StandardExperiments.rst", "developers_guide/landice/generated/compass.landice.tests.eismint2.standard_experiments.StandardExperiments.run.rst", "developers_guide/landice/generated/compass.landice.tests.eismint2.standard_experiments.visualize.Visualize.rst", "developers_guide/landice/generated/compass.landice.tests.eismint2.standard_experiments.visualize.Visualize.run.rst", "developers_guide/landice/generated/compass.landice.tests.eismint2.standard_experiments.visualize.visualize_eismint2.rst", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.A.A.rst", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.A.A.configure.rst", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.A.A.run.rst", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.A.visualize.Visualize.rst", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.A.visualize.Visualize.run.rst", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.B.B.rst", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.B.B.configure.rst", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.B.B.run.rst", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.B.visualize.Visualize.rst", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.B.visualize.Visualize.run.rst", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.EnthalpyBenchmark.rst", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.run_model.RunModel.rst", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.run_model.RunModel.run.rst", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.run_model.RunModel.setup.rst", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.setup_mesh.SetupMesh.rst", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.setup_mesh.SetupMesh.run.rst", "developers_guide/landice/generated/compass.landice.tests.greenland.Greenland.rst", "developers_guide/landice/generated/compass.landice.tests.greenland.decomposition_test.DecompositionTest.rst", "developers_guide/landice/generated/compass.landice.tests.greenland.decomposition_test.DecompositionTest.run.rst", "developers_guide/landice/generated/compass.landice.tests.greenland.high_res_mesh.HighResMesh.rst", "developers_guide/landice/generated/compass.landice.tests.greenland.high_res_mesh.HighResMesh.run.rst", "developers_guide/landice/generated/compass.landice.tests.greenland.mesh.Mesh.rst", "developers_guide/landice/generated/compass.landice.tests.greenland.mesh.Mesh.build_cell_width.rst", "developers_guide/landice/generated/compass.landice.tests.greenland.mesh.Mesh.run.rst", "developers_guide/landice/generated/compass.landice.tests.greenland.restart_test.RestartTest.rst", "developers_guide/landice/generated/compass.landice.tests.greenland.restart_test.RestartTest.run.rst", "developers_guide/landice/generated/compass.landice.tests.greenland.run_model.RunModel.rst", "developers_guide/landice/generated/compass.landice.tests.greenland.run_model.RunModel.run.rst", "developers_guide/landice/generated/compass.landice.tests.greenland.run_model.RunModel.setup.rst", "developers_guide/landice/generated/compass.landice.tests.greenland.smoke_test.SmokeTest.rst", "developers_guide/landice/generated/compass.landice.tests.greenland.smoke_test.SmokeTest.run.rst", "developers_guide/landice/generated/compass.landice.tests.humboldt.Humboldt.rst", "developers_guide/landice/generated/compass.landice.tests.humboldt.decomposition_test.DecompositionTest.rst", "developers_guide/landice/generated/compass.landice.tests.humboldt.decomposition_test.DecompositionTest.validate.rst", "developers_guide/landice/generated/compass.landice.tests.humboldt.mesh.Mesh.rst", "developers_guide/landice/generated/compass.landice.tests.humboldt.mesh.Mesh.run.rst", "developers_guide/landice/generated/compass.landice.tests.humboldt.mesh_gen.MeshGen.rst", "developers_guide/landice/generated/compass.landice.tests.humboldt.mesh_gen.MeshGen.run.rst", "developers_guide/landice/generated/compass.landice.tests.humboldt.restart_test.RestartTest.rst", "developers_guide/landice/generated/compass.landice.tests.humboldt.restart_test.RestartTest.validate.rst", "developers_guide/landice/generated/compass.landice.tests.humboldt.run_model.RunModel.rst", "developers_guide/landice/generated/compass.landice.tests.humboldt.run_model.RunModel.run.rst", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.HydroRadial.rst", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.decomposition_test.DecompositionTest.rst", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.decomposition_test.DecompositionTest.run.rst", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.restart_test.RestartTest.rst", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.restart_test.RestartTest.run.rst", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.run_model.RunModel.rst", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.run_model.RunModel.run.rst", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.run_model.RunModel.setup.rst", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.setup_mesh.SetupMesh.rst", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.setup_mesh.SetupMesh.run.rst", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.spinup_test.SpinupTest.rst", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.spinup_test.SpinupTest.run.rst", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.steady_state_drift_test.SteadyStateDriftTest.rst", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.steady_state_drift_test.SteadyStateDriftTest.run.rst", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.visualize.Visualize.rst", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.visualize.Visualize.run.rst", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.visualize.visualize_hydro_radial.rst", "developers_guide/landice/generated/compass.landice.tests.kangerlussuaq.Kangerlussuaq.rst", "developers_guide/landice/generated/compass.landice.tests.kangerlussuaq.mesh.Mesh.rst", "developers_guide/landice/generated/compass.landice.tests.kangerlussuaq.mesh.Mesh.run.rst", "developers_guide/landice/generated/compass.landice.tests.kangerlussuaq.mesh_gen.MeshGen.rst", "developers_guide/landice/generated/compass.landice.tests.kangerlussuaq.mesh_gen.MeshGen.run.rst", "developers_guide/landice/generated/compass.landice.tests.koge_bugt_s.KogeBugtS.rst", "developers_guide/landice/generated/compass.landice.tests.koge_bugt_s.mesh.Mesh.rst", "developers_guide/landice/generated/compass.landice.tests.koge_bugt_s.mesh.Mesh.run.rst", "developers_guide/landice/generated/compass.landice.tests.koge_bugt_s.mesh_gen.MeshGen.rst", "developers_guide/landice/generated/compass.landice.tests.koge_bugt_s.mesh_gen.MeshGen.run.rst", "developers_guide/landice/generated/compass.landice.tests.mismipplus.MISMIPplus.rst", "developers_guide/landice/generated/compass.landice.tests.mismipplus.run_model.RunModel.rst", "developers_guide/landice/generated/compass.landice.tests.mismipplus.run_model.RunModel.run.rst", "developers_guide/landice/generated/compass.landice.tests.mismipplus.run_model.RunModel.setup.rst", "developers_guide/landice/generated/compass.landice.tests.mismipplus.smoke_test.SmokeTest.rst", "developers_guide/landice/generated/compass.landice.tests.mismipplus.smoke_test.SmokeTest.run.rst", "developers_guide/landice/generated/compass.landice.tests.thwaites.Thwaites.rst", "developers_guide/landice/generated/compass.landice.tests.thwaites.decomposition_test.DecompositionTest.rst", "developers_guide/landice/generated/compass.landice.tests.thwaites.decomposition_test.DecompositionTest.run.rst", "developers_guide/landice/generated/compass.landice.tests.thwaites.restart_test.RestartTest.rst", "developers_guide/landice/generated/compass.landice.tests.thwaites.restart_test.RestartTest.run.rst", "developers_guide/landice/generated/compass.landice.tests.thwaites.run_model.RunModel.rst", "developers_guide/landice/generated/compass.landice.tests.thwaites.run_model.RunModel.run.rst", "developers_guide/landice/generated/compass.landice.tests.thwaites.run_model.RunModel.setup.rst", "developers_guide/landice/index.rst", "developers_guide/landice/test_groups/calving_dt_convergence.rst", "developers_guide/landice/test_groups/circular_shelf.rst", "developers_guide/landice/test_groups/dome.rst", "developers_guide/landice/test_groups/eismint2.rst", "developers_guide/landice/test_groups/enthalpy_benchmark.rst", "developers_guide/landice/test_groups/greenland.rst", "developers_guide/landice/test_groups/humboldt.rst", "developers_guide/landice/test_groups/hydro_radial.rst", "developers_guide/landice/test_groups/index.rst", "developers_guide/landice/test_groups/kangerlussuaq.rst", "developers_guide/landice/test_groups/koge_bugt_s.rst", "developers_guide/landice/test_groups/mismipplus.rst", "developers_guide/landice/test_groups/thwaites.rst", "developers_guide/machines/anvil.rst", "developers_guide/machines/badger.rst", "developers_guide/machines/chrysalis.rst", "developers_guide/machines/compy.rst", "developers_guide/machines/cori.rst", "developers_guide/machines/index.rst", "developers_guide/ocean/api.rst", "developers_guide/ocean/framework.rst", "developers_guide/ocean/generated/compass.ocean.Ocean.rst", "developers_guide/ocean/generated/compass.ocean.haney.compute_haney_number.rst", "developers_guide/ocean/generated/compass.ocean.iceshelf.adjust_ssh.rst", "developers_guide/ocean/generated/compass.ocean.iceshelf.compute_land_ice_pressure_and_draft.rst", "developers_guide/ocean/generated/compass.ocean.particles.remap_particles.rst", "developers_guide/ocean/generated/compass.ocean.particles.write.rst", "developers_guide/ocean/generated/compass.ocean.plot.plot_initial_state.rst", "developers_guide/ocean/generated/compass.ocean.plot.plot_vertical_grid.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.BaroclinicChannel.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.decomp_test.DecompTest.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.decomp_test.DecompTest.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.decomp_test.DecompTest.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.default.Default.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.default.Default.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.default.Default.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.forward.Forward.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.forward.Forward.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.forward.Forward.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.initial_state.InitialState.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.initial_state.InitialState.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.initial_state.InitialState.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.restart_test.RestartTest.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.restart_test.RestartTest.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.restart_test.RestartTest.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.rpe_test.RpeTest.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.rpe_test.RpeTest.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.rpe_test.RpeTest.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.drying_slope.DryingSlope.rst", "developers_guide/ocean/generated/compass.ocean.tests.drying_slope.default.Default.rst", "developers_guide/ocean/generated/compass.ocean.tests.drying_slope.default.Default.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.drying_slope.forward.Forward.rst", "developers_guide/ocean/generated/compass.ocean.tests.drying_slope.forward.Forward.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.drying_slope.initial_state.InitialState.rst", "developers_guide/ocean/generated/compass.ocean.tests.drying_slope.initial_state.InitialState.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.drying_slope.viz.Viz.rst", "developers_guide/ocean/generated/compass.ocean.tests.drying_slope.viz.Viz.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.GlobalConvergence.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.CosineBell.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.CosineBell.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.CosineBell.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rmse.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.forward.Forward.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.forward.Forward.get_dt.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.forward.Forward.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.forward.Forward.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.init.Init.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.init.Init.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.GlobalOcean.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.analysis_test.AnalysisTest.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.analysis_test.AnalysisTest.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.analysis_test.AnalysisTest.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.configure.configure_global_ocean.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.daily_output_test.DailyOutputTest.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.daily_output_test.DailyOutputTest.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.daily_output_test.DailyOutputTest.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.decomp_test.DecompTest.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.decomp_test.DecompTest.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.decomp_test.DecompTest.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.dynamic_adjustment.DynamicAdjustment.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.dynamic_adjustment.DynamicAdjustment.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.FilesForE3SM.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.FilesForE3SM.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.FilesForE3SM.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.diagnostics_files.DiagnosticsFiles.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.diagnostics_files.DiagnosticsFiles.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.ocean_graph_partition.OceanGraphPartition.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.ocean_graph_partition.OceanGraphPartition.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.ocean_initial_condition.OceanInitialCondition.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.ocean_initial_condition.OceanInitialCondition.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.scrip.Scrip.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.scrip.Scrip.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.seaice_initial_condition.SeaiceInitialCondition.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.seaice_initial_condition.SeaiceInitialCondition.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.forward.ForwardStep.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.forward.ForwardStep.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.forward.ForwardStep.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.forward.ForwardTestCase.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.forward.ForwardTestCase.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.forward.ForwardTestCase.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.init.Init.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.init.Init.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.init.Init.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.init.initial_state.InitialState.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.init.initial_state.InitialState.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.init.initial_state.InitialState.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.init.ssh_adjustment.SshAdjustment.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.init.ssh_adjustment.SshAdjustment.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.init.ssh_adjustment.SshAdjustment.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.Mesh.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.Mesh.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.Mesh.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.cull.cull_mesh.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.ec30to60.EC30to60Mesh.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.ec30to60.EC30to60Mesh.build_cell_width_lat_lon.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.ec30to60.dynamic_adjustment.EC30to60DynamicAdjustment.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.ec30to60.dynamic_adjustment.EC30to60DynamicAdjustment.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.ec30to60.dynamic_adjustment.EC30to60DynamicAdjustment.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.mesh.MeshStep.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.mesh.MeshStep.build_cell_width_lat_lon.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.mesh.MeshStep.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.mesh.MeshStep.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.qu240.QU240Mesh.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.qu240.QU240Mesh.build_cell_width_lat_lon.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.qu240.dynamic_adjustment.QU240DynamicAdjustment.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.qu240.dynamic_adjustment.QU240DynamicAdjustment.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.qu240.dynamic_adjustment.QU240DynamicAdjustment.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.so12to60.SO12to60Mesh.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.so12to60.SO12to60Mesh.build_cell_width_lat_lon.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.so12to60.dynamic_adjustment.SO12to60DynamicAdjustment.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.so12to60.dynamic_adjustment.SO12to60DynamicAdjustment.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.so12to60.dynamic_adjustment.SO12to60DynamicAdjustment.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.wc14.WC14Mesh.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.wc14.WC14Mesh.build_cell_width_lat_lon.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.wc14.dynamic_adjustment.WC14DynamicAdjustment.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.wc14.dynamic_adjustment.WC14DynamicAdjustment.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.wc14.dynamic_adjustment.WC14DynamicAdjustment.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.metadata.add_mesh_and_init_metadata.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.metadata.get_e3sm_mesh_names.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.performance_test.PerformanceTest.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.performance_test.PerformanceTest.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.performance_test.PerformanceTest.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.restart_test.RestartTest.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.restart_test.RestartTest.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.restart_test.RestartTest.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.threads_test.ThreadsTest.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.threads_test.ThreadsTest.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.threads_test.ThreadsTest.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.gotm.Gotm.rst", "developers_guide/ocean/generated/compass.ocean.tests.gotm.default.Default.rst", "developers_guide/ocean/generated/compass.ocean.tests.gotm.default.Default.validate.rst", "developers_guide/ocean/generated/compass.ocean.tests.gotm.default.analysis.Analysis.rst", "developers_guide/ocean/generated/compass.ocean.tests.gotm.default.analysis.Analysis.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.gotm.default.forward.Forward.rst", "developers_guide/ocean/generated/compass.ocean.tests.gotm.default.forward.Forward.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.gotm.default.init.Init.rst", "developers_guide/ocean/generated/compass.ocean.tests.gotm.default.init.Init.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.Hurricane.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.analysis.Analysis.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.analysis.Analysis.read_pointstats.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.analysis.Analysis.read_station_data.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.analysis.Analysis.read_station_file.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.analysis.Analysis.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.analysis.Analysis.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.forward.Forward.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.forward.Forward.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.forward.Forward.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.forward.forward.ForwardStep.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.forward.forward.ForwardStep.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.forward.forward.ForwardStep.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.Init.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.Init.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.Init.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.create_pointstats_file.CreatePointstatsFile.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.create_pointstats_file.CreatePointstatsFile.create_pointstats_file.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.create_pointstats_file.CreatePointstatsFile.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.initial_state.InitialState.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.initial_state.InitialState.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.initial_state.InitialState.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing.interpolate_data_to_grid.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing.plot_interp_data.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing.write_to_file.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.mesh.Mesh.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.mesh.Mesh.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.mesh.Mesh.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.mesh.dequ120at30cr10rr2.DEQU120at30cr10rr2Mesh.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.mesh.dequ120at30cr10rr2.DEQU120at30cr10rr2Mesh.build_cell_width_lat_lon.rst", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.IceShelf2d.rst", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.default.Default.rst", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.default.Default.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.default.Default.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.forward.Forward.rst", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.forward.Forward.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.forward.Forward.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.initial_state.InitialState.rst", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.initial_state.InitialState.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.restart_test.RestartTest.rst", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.restart_test.RestartTest.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.restart_test.RestartTest.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.ssh_adjustment.SshAdjustment.rst", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.ssh_adjustment.SshAdjustment.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.ssh_adjustment.SshAdjustment.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.viz.Viz.rst", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.viz.Viz.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.InternalWave.rst", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.default.Default.rst", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.default.Default.validate.rst", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.forward.Forward.rst", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.forward.Forward.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.initial_state.InitialState.rst", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.initial_state.InitialState.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.rpe_test.RpeTest.rst", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.rpe_test.analysis.Analysis.rst", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.rpe_test.analysis.Analysis.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.ten_day_test.TenDayTest.rst", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.ten_day_test.TenDayTest.validate.rst", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.viz.Viz.rst", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.viz.Viz.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.IsomipPlus.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.evap.update_evaporation_flux.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.forward.Forward.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.forward.Forward.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.forward.Forward.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.geom.interpolate_ocean_mask.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.geom.process_input_geometry.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.initial_state.InitialState.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.initial_state.InitialState.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.misomip.Misomip.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.misomip.Misomip.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.ocean_test.OceanTest.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.ocean_test.OceanTest.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.ocean_test.OceanTest.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.ssh_adjustment.SshAdjustment.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.ssh_adjustment.SshAdjustment.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.ssh_adjustment.SshAdjustment.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.streamfunction.Streamfunction.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.streamfunction.Streamfunction.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.Viz.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.Viz.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.file_complete.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.images_to_movies.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_3d_field_top_bot_section.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_barotropic_streamfunction.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_horiz_series.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_ice_shelf_boundary_variables.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_layer_interfaces.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_melt_rates.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_overturning_streamfunction.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_potential_density.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_salinity.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_temperature.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.TimeSeriesPlotter.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.TimeSeriesPlotter.plot_melt_time_series.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.TimeSeriesPlotter.plot_time_series.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.PlanarConvergence.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.conv_init.ConvInit.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.conv_init.ConvInit.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.conv_test_case.ConvTestCase.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.conv_test_case.ConvTestCase.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.conv_test_case.ConvTestCase.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.conv_test_case.ConvTestCase.update_cores.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.forward.Forward.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.forward.Forward.get_dt_duration.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.forward.Forward.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.forward.Forward.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.horizontal_advection.HorizontalAdvection.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.horizontal_advection.HorizontalAdvection.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.horizontal_advection.HorizontalAdvection.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.horizontal_advection.analysis.Analysis.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.horizontal_advection.analysis.Analysis.rmse.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.horizontal_advection.analysis.Analysis.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.horizontal_advection.init.Init.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.horizontal_advection.init.Init.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.soma.Soma.rst", "developers_guide/ocean/generated/compass.ocean.tests.soma.analysis.Analysis.rst", "developers_guide/ocean/generated/compass.ocean.tests.soma.analysis.Analysis.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.soma.forward.Forward.rst", "developers_guide/ocean/generated/compass.ocean.tests.soma.forward.Forward.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.soma.initial_state.InitialState.rst", "developers_guide/ocean/generated/compass.ocean.tests.soma.initial_state.InitialState.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.soma.soma_test_case.SomaTestCase.rst", "developers_guide/ocean/generated/compass.ocean.tests.soma.soma_test_case.SomaTestCase.validate.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.SphereTransport.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.CorrelatedTracers2D.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.CorrelatedTracers2D.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.CorrelatedTracers2D.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.analysis.Analysis.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.analysis.Analysis.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.Forward.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.Forward.get_timestep_str.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.Forward.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.Forward.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.init.Init.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.init.Init.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.mesh.Mesh.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.mesh.Mesh.build_cell_width_lat_lon.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.mesh.Mesh.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.Divergent2D.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.Divergent2D.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.Divergent2D.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.analysis.Analysis.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.analysis.Analysis.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.forward.Forward.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.forward.Forward.get_timestep_str.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.forward.Forward.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.forward.Forward.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.init.Init.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.init.Init.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.mesh.Mesh.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.mesh.Mesh.build_cell_width_lat_lon.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.mesh.Mesh.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.Nondivergent2D.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.Nondivergent2D.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.Nondivergent2D.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.analysis.Analysis.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.analysis.Analysis.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.forward.Forward.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.forward.Forward.get_timestep_str.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.forward.Forward.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.forward.Forward.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.init.Init.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.init.Init.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.mesh.Mesh.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.mesh.Mesh.build_cell_width_lat_lon.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.mesh.Mesh.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.compute_convergence_rates.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.compute_error_from_output_ncfile.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.make_convergence_arrays.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.plot_convergence.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.plot_filament.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.plot_over_and_undershoot_errors.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.plot_sol.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.print_data_as_csv.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.print_error_conv_table.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.read_ncl_rgb_file.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.Rotation2D.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.Rotation2D.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.Rotation2D.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.analysis.Analysis.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.analysis.Analysis.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.forward.Forward.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.forward.Forward.get_timestep_str.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.forward.Forward.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.forward.Forward.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.init.Init.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.init.Init.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.mesh.Mesh.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.mesh.Mesh.build_cell_width_lat_lon.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.mesh.Mesh.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.ziso.Ziso.rst", "developers_guide/ocean/generated/compass.ocean.tests.ziso.ZisoTestCase.rst", "developers_guide/ocean/generated/compass.ocean.tests.ziso.ZisoTestCase.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.ziso.ZisoTestCase.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.ziso.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.ziso.forward.Forward.rst", "developers_guide/ocean/generated/compass.ocean.tests.ziso.forward.Forward.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.ziso.forward.Forward.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.ziso.initial_state.InitialState.rst", "developers_guide/ocean/generated/compass.ocean.tests.ziso.initial_state.InitialState.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.ziso.with_frazil.WithFrazil.rst", "developers_guide/ocean/generated/compass.ocean.tests.ziso.with_frazil.WithFrazil.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.ziso.with_frazil.WithFrazil.run.rst", "developers_guide/ocean/generated/compass.ocean.vertical.grid_1d.generate_1d_grid.rst", "developers_guide/ocean/generated/compass.ocean.vertical.grid_1d.write_1d_grid.rst", "developers_guide/ocean/generated/compass.ocean.vertical.init_vertical_coord.rst", "developers_guide/ocean/generated/compass.ocean.vertical.partial_cells.alter_bottom_depth.rst", "developers_guide/ocean/generated/compass.ocean.vertical.partial_cells.alter_ssh.rst", "developers_guide/ocean/generated/compass.ocean.vertical.zlevel.compute_min_max_level_cell.rst", "developers_guide/ocean/generated/compass.ocean.vertical.zlevel.compute_z_level_layer_thickness.rst", "developers_guide/ocean/generated/compass.ocean.vertical.zlevel.compute_z_level_resting_thickness.rst", "developers_guide/ocean/generated/compass.ocean.vertical.zlevel.init_z_level_vertical_coord.rst", "developers_guide/ocean/generated/compass.ocean.vertical.zstar.init_z_star_vertical_coord.rst", "developers_guide/ocean/index.rst", "developers_guide/ocean/test_groups/baroclinic_channel.rst", "developers_guide/ocean/test_groups/drying_slope.rst", "developers_guide/ocean/test_groups/global_convergence.rst", "developers_guide/ocean/test_groups/global_ocean.rst", "developers_guide/ocean/test_groups/gotm.rst", "developers_guide/ocean/test_groups/hurricane.rst", "developers_guide/ocean/test_groups/ice_shelf_2d.rst", "developers_guide/ocean/test_groups/index.rst", "developers_guide/ocean/test_groups/internal_wave.rst", "developers_guide/ocean/test_groups/isomip_plus.rst", "developers_guide/ocean/test_groups/planar_convergence.rst", "developers_guide/ocean/test_groups/soma.rst", "developers_guide/ocean/test_groups/sphere_transport.rst", "developers_guide/ocean/test_groups/spherical_harmonic_transform.rst", "developers_guide/ocean/test_groups/ziso.rst", "developers_guide/organization.rst", "developers_guide/overview.rst", "developers_guide/quick_start.rst", "developers_guide/troubleshooting.rst", "glossary.rst", "index.rst", "tutorials/dev_add_param_study.rst", "tutorials/dev_add_test_group.rst", "tutorials/dev_porting_legacy.rst", "users_guide/config_files.rst", "users_guide/landice/framework/index.rst", "users_guide/landice/index.rst", "users_guide/landice/suites.rst", "users_guide/landice/test_groups/calving_dt_convergence.rst", "users_guide/landice/test_groups/circular_shelf.rst", "users_guide/landice/test_groups/dome.rst", "users_guide/landice/test_groups/eismint2.rst", "users_guide/landice/test_groups/enthalpy_benchmark.rst", "users_guide/landice/test_groups/greenland.rst", "users_guide/landice/test_groups/humboldt.rst", "users_guide/landice/test_groups/hydro_radial.rst", "users_guide/landice/test_groups/index.rst", "users_guide/landice/test_groups/kangerlussuaq.rst", "users_guide/landice/test_groups/koge_bugt_s.rst", "users_guide/landice/test_groups/mismipplus.rst", "users_guide/landice/test_groups/thwaites.rst", "users_guide/machines/anvil.rst", "users_guide/machines/badger.rst", "users_guide/machines/chrysalis.rst", "users_guide/machines/compy.rst", "users_guide/machines/cori.rst", "users_guide/machines/index.rst", "users_guide/ocean/framework/ice_shelf.rst", "users_guide/ocean/framework/index.rst", "users_guide/ocean/framework/vertical.rst", "users_guide/ocean/index.rst", "users_guide/ocean/suites.rst", "users_guide/ocean/test_groups/baroclinic_channel.rst", "users_guide/ocean/test_groups/drying_slope.rst", "users_guide/ocean/test_groups/global_convergence.rst", "users_guide/ocean/test_groups/global_ocean.rst", "users_guide/ocean/test_groups/gotm.rst", "users_guide/ocean/test_groups/hurricane.rst", "users_guide/ocean/test_groups/ice_shelf_2d.rst", "users_guide/ocean/test_groups/index.rst", "users_guide/ocean/test_groups/internal_wave.rst", "users_guide/ocean/test_groups/isomip_plus.rst", "users_guide/ocean/test_groups/planar_convergence.rst", "users_guide/ocean/test_groups/soma.rst", "users_guide/ocean/test_groups/sphere_transport.rst", "users_guide/ocean/test_groups/spherical_harmonic_transform.rst", "users_guide/ocean/test_groups/ziso.rst", "users_guide/quick_start.rst", "users_guide/test_cases.rst", "users_guide/test_suites.rst", "versions.rst"], "titles": ["Caching outputs from compass steps", "compass python package", "Design Documents", "Template", "API reference", "Building the Documentation", "Command-line interface", "Documentation", "Framework", "compass.MpasCore", "compass.MpasCore.add_test_group", "compass.Step", "compass.Step.add_input_file", "compass.Step.add_model_as_input", "compass.Step.add_namelist_file", "compass.Step.add_namelist_options", "compass.Step.add_output_file", "compass.Step.add_streams_file", "compass.Step.constrain_resources", "compass.Step.run", "compass.Step.runtime_setup", "compass.Step.set_resources", "compass.Step.setup", "compass.Step.update_namelist_at_runtime", "compass.Step.update_namelist_pio", "compass.Step.update_streams_at_runtime", "compass.TestCase", "compass.TestCase.add_step", "compass.TestCase.configure", "compass.TestCase.run", "compass.TestCase.validate", "compass.TestGroup", "compass.TestGroup.add_test_case", "compass.__main__.main", "compass.cache.update_cache", "compass.clean.clean_cases", "compass.config.CompassConfigParser", "compass.io.download", "compass.io.symlink", "compass.list.list_cases", "compass.list.list_machines", "compass.list.list_suites", "compass.logging.log_method_call", "compass.mesh.IcosahedralMeshStep", "compass.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon", "compass.mesh.IcosahedralMeshStep.get_cell_width", "compass.mesh.IcosahedralMeshStep.get_subdivisions", "compass.mesh.IcosahedralMeshStep.make_jigsaw_mesh", "compass.mesh.IcosahedralMeshStep.run", "compass.mesh.IcosahedralMeshStep.setup", "compass.mesh.QuasiUniformSphericalMeshStep", "compass.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon", "compass.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh", "compass.mesh.QuasiUniformSphericalMeshStep.run", "compass.mesh.QuasiUniformSphericalMeshStep.setup", "compass.mesh.spherical.SphericalBaseStep", "compass.mesh.spherical.SphericalBaseStep.run", "compass.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width", "compass.mesh.spherical.SphericalBaseStep.setup", "compass.model.make_graph_file", "compass.model.partition", "compass.model.run_model", "compass.mpas_cores.get_mpas_cores", "compass.parallel.check_parallel_system", "compass.parallel.get_available_cores_and_nodes", "compass.parallel.run_command", "compass.parallel.set_cores_per_node", "compass.provenance.write", "compass.run.serial.run_single_step", "compass.run.serial.run_tests", "compass.setup.setup_case", "compass.setup.setup_cases", "compass.suite.clean_suite", "compass.suite.setup_suite", "compass.validate.compare_timers", "compass.validate.compare_variables", "landice", "Land-ice Framework", "compass.landice.Landice", "compass.landice.tests.calving_dt_convergence.CalvingDtConvergence", "compass.landice.tests.calving_dt_convergence.dt_convergence_test.DtConvergenceTest", "compass.landice.tests.calving_dt_convergence.dt_convergence_test.DtConvergenceTest.validate", "compass.landice.tests.calving_dt_convergence.run_model.RunModel", "compass.landice.tests.calving_dt_convergence.run_model.RunModel.run", "compass.landice.tests.circular_shelf.CircularShelf", "compass.landice.tests.circular_shelf.decomposition_test.DecompositionTest", "compass.landice.tests.circular_shelf.decomposition_test.DecompositionTest.run", "compass.landice.tests.circular_shelf.run_model.RunModel", "compass.landice.tests.circular_shelf.run_model.RunModel.run", "compass.landice.tests.circular_shelf.setup_mesh.SetupMesh", "compass.landice.tests.circular_shelf.setup_mesh.SetupMesh.run", "compass.landice.tests.circular_shelf.visualize.Visualize", "compass.landice.tests.circular_shelf.visualize.Visualize.run", "compass.landice.tests.circular_shelf.visualize.visualize_circular_shelf", "compass.landice.tests.dome.Dome", "compass.landice.tests.dome.decomposition_test.DecompositionTest", "compass.landice.tests.dome.decomposition_test.DecompositionTest.run", "compass.landice.tests.dome.restart_test.RestartTest", "compass.landice.tests.dome.restart_test.RestartTest.run", "compass.landice.tests.dome.run_model.RunModel", "compass.landice.tests.dome.run_model.RunModel.run", "compass.landice.tests.dome.run_model.RunModel.setup", "compass.landice.tests.dome.setup_mesh.SetupMesh", "compass.landice.tests.dome.setup_mesh.SetupMesh.run", "compass.landice.tests.dome.smoke_test.SmokeTest", "compass.landice.tests.dome.smoke_test.SmokeTest.run", "compass.landice.tests.dome.visualize.Visualize", "compass.landice.tests.dome.visualize.Visualize.run", "compass.landice.tests.dome.visualize.visualize_dome", "compass.landice.tests.eismint2.Eismint2", "compass.landice.tests.eismint2.decomposition_test.DecompositionTest", "compass.landice.tests.eismint2.decomposition_test.DecompositionTest.run", "compass.landice.tests.eismint2.restart_test.RestartTest", "compass.landice.tests.eismint2.restart_test.RestartTest.run", "compass.landice.tests.eismint2.run_experiment.RunExperiment", "compass.landice.tests.eismint2.run_experiment.RunExperiment.run", "compass.landice.tests.eismint2.run_experiment.RunExperiment.setup", "compass.landice.tests.eismint2.setup_mesh.SetupMesh", "compass.landice.tests.eismint2.setup_mesh.SetupMesh.run", "compass.landice.tests.eismint2.standard_experiments.StandardExperiments", "compass.landice.tests.eismint2.standard_experiments.StandardExperiments.run", "compass.landice.tests.eismint2.standard_experiments.visualize.Visualize", "compass.landice.tests.eismint2.standard_experiments.visualize.Visualize.run", "compass.landice.tests.eismint2.standard_experiments.visualize.visualize_eismint2", "compass.landice.tests.enthalpy_benchmark.A.A", "compass.landice.tests.enthalpy_benchmark.A.A.configure", "compass.landice.tests.enthalpy_benchmark.A.A.run", "compass.landice.tests.enthalpy_benchmark.A.visualize.Visualize", "compass.landice.tests.enthalpy_benchmark.A.visualize.Visualize.run", "compass.landice.tests.enthalpy_benchmark.B.B", "compass.landice.tests.enthalpy_benchmark.B.B.configure", "compass.landice.tests.enthalpy_benchmark.B.B.run", "compass.landice.tests.enthalpy_benchmark.B.visualize.Visualize", "compass.landice.tests.enthalpy_benchmark.B.visualize.Visualize.run", "compass.landice.tests.enthalpy_benchmark.EnthalpyBenchmark", "compass.landice.tests.enthalpy_benchmark.run_model.RunModel", "compass.landice.tests.enthalpy_benchmark.run_model.RunModel.run", "compass.landice.tests.enthalpy_benchmark.run_model.RunModel.setup", "compass.landice.tests.enthalpy_benchmark.setup_mesh.SetupMesh", "compass.landice.tests.enthalpy_benchmark.setup_mesh.SetupMesh.run", "compass.landice.tests.greenland.Greenland", "compass.landice.tests.greenland.decomposition_test.DecompositionTest", "compass.landice.tests.greenland.decomposition_test.DecompositionTest.run", "compass.landice.tests.greenland.high_res_mesh.HighResMesh", "compass.landice.tests.greenland.high_res_mesh.HighResMesh.run", "compass.landice.tests.greenland.mesh.Mesh", "compass.landice.tests.greenland.mesh.Mesh.build_cell_width", "compass.landice.tests.greenland.mesh.Mesh.run", "compass.landice.tests.greenland.restart_test.RestartTest", "compass.landice.tests.greenland.restart_test.RestartTest.run", "compass.landice.tests.greenland.run_model.RunModel", "compass.landice.tests.greenland.run_model.RunModel.run", "compass.landice.tests.greenland.run_model.RunModel.setup", "compass.landice.tests.greenland.smoke_test.SmokeTest", "compass.landice.tests.greenland.smoke_test.SmokeTest.run", "compass.landice.tests.humboldt.Humboldt", "compass.landice.tests.humboldt.decomposition_test.DecompositionTest", "compass.landice.tests.humboldt.decomposition_test.DecompositionTest.validate", "compass.landice.tests.humboldt.mesh.Mesh", "compass.landice.tests.humboldt.mesh.Mesh.run", "compass.landice.tests.humboldt.mesh_gen.MeshGen", "compass.landice.tests.humboldt.mesh_gen.MeshGen.run", "compass.landice.tests.humboldt.restart_test.RestartTest", "compass.landice.tests.humboldt.restart_test.RestartTest.validate", "compass.landice.tests.humboldt.run_model.RunModel", "compass.landice.tests.humboldt.run_model.RunModel.run", "compass.landice.tests.hydro_radial.HydroRadial", "compass.landice.tests.hydro_radial.decomposition_test.DecompositionTest", "compass.landice.tests.hydro_radial.decomposition_test.DecompositionTest.run", "compass.landice.tests.hydro_radial.restart_test.RestartTest", "compass.landice.tests.hydro_radial.restart_test.RestartTest.run", "compass.landice.tests.hydro_radial.run_model.RunModel", "compass.landice.tests.hydro_radial.run_model.RunModel.run", "compass.landice.tests.hydro_radial.run_model.RunModel.setup", "compass.landice.tests.hydro_radial.setup_mesh.SetupMesh", "compass.landice.tests.hydro_radial.setup_mesh.SetupMesh.run", "compass.landice.tests.hydro_radial.spinup_test.SpinupTest", "compass.landice.tests.hydro_radial.spinup_test.SpinupTest.run", "compass.landice.tests.hydro_radial.steady_state_drift_test.SteadyStateDriftTest", "compass.landice.tests.hydro_radial.steady_state_drift_test.SteadyStateDriftTest.run", "compass.landice.tests.hydro_radial.visualize.Visualize", "compass.landice.tests.hydro_radial.visualize.Visualize.run", "compass.landice.tests.hydro_radial.visualize.visualize_hydro_radial", "compass.landice.tests.kangerlussuaq.Kangerlussuaq", "compass.landice.tests.kangerlussuaq.mesh.Mesh", "compass.landice.tests.kangerlussuaq.mesh.Mesh.run", "compass.landice.tests.kangerlussuaq.mesh_gen.MeshGen", "compass.landice.tests.kangerlussuaq.mesh_gen.MeshGen.run", "compass.landice.tests.koge_bugt_s.KogeBugtS", "compass.landice.tests.koge_bugt_s.mesh.Mesh", "compass.landice.tests.koge_bugt_s.mesh.Mesh.run", "compass.landice.tests.koge_bugt_s.mesh_gen.MeshGen", "compass.landice.tests.koge_bugt_s.mesh_gen.MeshGen.run", "compass.landice.tests.mismipplus.MISMIPplus", "compass.landice.tests.mismipplus.run_model.RunModel", "compass.landice.tests.mismipplus.run_model.RunModel.run", "compass.landice.tests.mismipplus.run_model.RunModel.setup", "compass.landice.tests.mismipplus.smoke_test.SmokeTest", "compass.landice.tests.mismipplus.smoke_test.SmokeTest.run", "compass.landice.tests.thwaites.Thwaites", "compass.landice.tests.thwaites.decomposition_test.DecompositionTest", "compass.landice.tests.thwaites.decomposition_test.DecompositionTest.run", "compass.landice.tests.thwaites.restart_test.RestartTest", "compass.landice.tests.thwaites.restart_test.RestartTest.run", "compass.landice.tests.thwaites.run_model.RunModel", "compass.landice.tests.thwaites.run_model.RunModel.run", "compass.landice.tests.thwaites.run_model.RunModel.setup", "Landice core", "calving_dt_convergence", "circular_shelf", "dome", "eismint2", "enthalpy_benchmark", "greenland", "humboldt", "hydro_radial", "Test groups", "kangerlussuaq", "koge_bugt_s", "mismipplus", "thwaites", "Anvil", "Badger", "Chrysalis", "CompyMcNodeFace", "Cori", "Machines", "ocean", "Ocean framework", "compass.ocean.Ocean", "compass.ocean.haney.compute_haney_number", "compass.ocean.iceshelf.adjust_ssh", "compass.ocean.iceshelf.compute_land_ice_pressure_and_draft", "compass.ocean.particles.remap_particles", "compass.ocean.particles.write", "compass.ocean.plot.plot_initial_state", "compass.ocean.plot.plot_vertical_grid", "compass.ocean.tests.baroclinic_channel.BaroclinicChannel", "compass.ocean.tests.baroclinic_channel.configure", "compass.ocean.tests.baroclinic_channel.decomp_test.DecompTest", "compass.ocean.tests.baroclinic_channel.decomp_test.DecompTest.configure", "compass.ocean.tests.baroclinic_channel.decomp_test.DecompTest.run", "compass.ocean.tests.baroclinic_channel.default.Default", "compass.ocean.tests.baroclinic_channel.default.Default.configure", "compass.ocean.tests.baroclinic_channel.default.Default.run", "compass.ocean.tests.baroclinic_channel.forward.Forward", "compass.ocean.tests.baroclinic_channel.forward.Forward.run", "compass.ocean.tests.baroclinic_channel.forward.Forward.setup", "compass.ocean.tests.baroclinic_channel.initial_state.InitialState", "compass.ocean.tests.baroclinic_channel.initial_state.InitialState.run", "compass.ocean.tests.baroclinic_channel.initial_state.InitialState.setup", "compass.ocean.tests.baroclinic_channel.restart_test.RestartTest", "compass.ocean.tests.baroclinic_channel.restart_test.RestartTest.configure", "compass.ocean.tests.baroclinic_channel.restart_test.RestartTest.run", "compass.ocean.tests.baroclinic_channel.rpe_test.RpeTest", "compass.ocean.tests.baroclinic_channel.rpe_test.RpeTest.configure", "compass.ocean.tests.baroclinic_channel.rpe_test.RpeTest.run", "compass.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis", "compass.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.run", "compass.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.setup", "compass.ocean.tests.baroclinic_channel.threads_test.ThreadsTest", "compass.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.configure", "compass.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.run", "compass.ocean.tests.drying_slope.DryingSlope", "compass.ocean.tests.drying_slope.default.Default", "compass.ocean.tests.drying_slope.default.Default.configure", "compass.ocean.tests.drying_slope.forward.Forward", "compass.ocean.tests.drying_slope.forward.Forward.run", "compass.ocean.tests.drying_slope.initial_state.InitialState", "compass.ocean.tests.drying_slope.initial_state.InitialState.run", "compass.ocean.tests.drying_slope.viz.Viz", "compass.ocean.tests.drying_slope.viz.Viz.run", "compass.ocean.tests.global_convergence.GlobalConvergence", "compass.ocean.tests.global_convergence.cosine_bell.CosineBell", "compass.ocean.tests.global_convergence.cosine_bell.CosineBell.configure", "compass.ocean.tests.global_convergence.cosine_bell.CosineBell.run", "compass.ocean.tests.global_convergence.cosine_bell.analysis.Analysis", "compass.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rmse", "compass.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.run", "compass.ocean.tests.global_convergence.cosine_bell.forward.Forward", "compass.ocean.tests.global_convergence.cosine_bell.forward.Forward.get_dt", "compass.ocean.tests.global_convergence.cosine_bell.forward.Forward.run", "compass.ocean.tests.global_convergence.cosine_bell.forward.Forward.setup", "compass.ocean.tests.global_convergence.cosine_bell.init.Init", "compass.ocean.tests.global_convergence.cosine_bell.init.Init.run", "compass.ocean.tests.global_ocean.GlobalOcean", "compass.ocean.tests.global_ocean.analysis_test.AnalysisTest", "compass.ocean.tests.global_ocean.analysis_test.AnalysisTest.configure", "compass.ocean.tests.global_ocean.analysis_test.AnalysisTest.run", "compass.ocean.tests.global_ocean.configure", "compass.ocean.tests.global_ocean.configure.configure_global_ocean", "compass.ocean.tests.global_ocean.daily_output_test.DailyOutputTest", "compass.ocean.tests.global_ocean.daily_output_test.DailyOutputTest.configure", "compass.ocean.tests.global_ocean.daily_output_test.DailyOutputTest.run", "compass.ocean.tests.global_ocean.decomp_test.DecompTest", "compass.ocean.tests.global_ocean.decomp_test.DecompTest.configure", "compass.ocean.tests.global_ocean.decomp_test.DecompTest.run", "compass.ocean.tests.global_ocean.dynamic_adjustment.DynamicAdjustment", "compass.ocean.tests.global_ocean.dynamic_adjustment.DynamicAdjustment.run", "compass.ocean.tests.global_ocean.files_for_e3sm.FilesForE3SM", "compass.ocean.tests.global_ocean.files_for_e3sm.FilesForE3SM.configure", "compass.ocean.tests.global_ocean.files_for_e3sm.FilesForE3SM.run", "compass.ocean.tests.global_ocean.files_for_e3sm.diagnostics_files.DiagnosticsFiles", "compass.ocean.tests.global_ocean.files_for_e3sm.diagnostics_files.DiagnosticsFiles.run", "compass.ocean.tests.global_ocean.files_for_e3sm.ocean_graph_partition.OceanGraphPartition", "compass.ocean.tests.global_ocean.files_for_e3sm.ocean_graph_partition.OceanGraphPartition.run", "compass.ocean.tests.global_ocean.files_for_e3sm.ocean_initial_condition.OceanInitialCondition", "compass.ocean.tests.global_ocean.files_for_e3sm.ocean_initial_condition.OceanInitialCondition.run", "compass.ocean.tests.global_ocean.files_for_e3sm.scrip.Scrip", "compass.ocean.tests.global_ocean.files_for_e3sm.scrip.Scrip.run", "compass.ocean.tests.global_ocean.files_for_e3sm.seaice_initial_condition.SeaiceInitialCondition", "compass.ocean.tests.global_ocean.files_for_e3sm.seaice_initial_condition.SeaiceInitialCondition.run", "compass.ocean.tests.global_ocean.forward.ForwardStep", "compass.ocean.tests.global_ocean.forward.ForwardStep.run", "compass.ocean.tests.global_ocean.forward.ForwardStep.setup", "compass.ocean.tests.global_ocean.forward.ForwardTestCase", "compass.ocean.tests.global_ocean.forward.ForwardTestCase.configure", "compass.ocean.tests.global_ocean.forward.ForwardTestCase.run", "compass.ocean.tests.global_ocean.init.Init", "compass.ocean.tests.global_ocean.init.Init.configure", "compass.ocean.tests.global_ocean.init.Init.run", "compass.ocean.tests.global_ocean.init.initial_state.InitialState", "compass.ocean.tests.global_ocean.init.initial_state.InitialState.run", "compass.ocean.tests.global_ocean.init.initial_state.InitialState.setup", "compass.ocean.tests.global_ocean.init.ssh_adjustment.SshAdjustment", "compass.ocean.tests.global_ocean.init.ssh_adjustment.SshAdjustment.run", "compass.ocean.tests.global_ocean.init.ssh_adjustment.SshAdjustment.setup", "compass.ocean.tests.global_ocean.mesh.Mesh", "compass.ocean.tests.global_ocean.mesh.Mesh.configure", "compass.ocean.tests.global_ocean.mesh.Mesh.run", "compass.ocean.tests.global_ocean.mesh.cull.cull_mesh", "compass.ocean.tests.global_ocean.mesh.ec30to60.EC30to60Mesh", "compass.ocean.tests.global_ocean.mesh.ec30to60.EC30to60Mesh.build_cell_width_lat_lon", "compass.ocean.tests.global_ocean.mesh.ec30to60.dynamic_adjustment.EC30to60DynamicAdjustment", "compass.ocean.tests.global_ocean.mesh.ec30to60.dynamic_adjustment.EC30to60DynamicAdjustment.configure", "compass.ocean.tests.global_ocean.mesh.ec30to60.dynamic_adjustment.EC30to60DynamicAdjustment.run", "compass.ocean.tests.global_ocean.mesh.mesh.MeshStep", "compass.ocean.tests.global_ocean.mesh.mesh.MeshStep.build_cell_width_lat_lon", "compass.ocean.tests.global_ocean.mesh.mesh.MeshStep.run", "compass.ocean.tests.global_ocean.mesh.mesh.MeshStep.setup", "compass.ocean.tests.global_ocean.mesh.qu240.QU240Mesh", "compass.ocean.tests.global_ocean.mesh.qu240.QU240Mesh.build_cell_width_lat_lon", "compass.ocean.tests.global_ocean.mesh.qu240.dynamic_adjustment.QU240DynamicAdjustment", "compass.ocean.tests.global_ocean.mesh.qu240.dynamic_adjustment.QU240DynamicAdjustment.configure", "compass.ocean.tests.global_ocean.mesh.qu240.dynamic_adjustment.QU240DynamicAdjustment.run", "compass.ocean.tests.global_ocean.mesh.so12to60.SO12to60Mesh", "compass.ocean.tests.global_ocean.mesh.so12to60.SO12to60Mesh.build_cell_width_lat_lon", "compass.ocean.tests.global_ocean.mesh.so12to60.dynamic_adjustment.SO12to60DynamicAdjustment", "compass.ocean.tests.global_ocean.mesh.so12to60.dynamic_adjustment.SO12to60DynamicAdjustment.configure", "compass.ocean.tests.global_ocean.mesh.so12to60.dynamic_adjustment.SO12to60DynamicAdjustment.run", "compass.ocean.tests.global_ocean.mesh.wc14.WC14Mesh", "compass.ocean.tests.global_ocean.mesh.wc14.WC14Mesh.build_cell_width_lat_lon", "compass.ocean.tests.global_ocean.mesh.wc14.dynamic_adjustment.WC14DynamicAdjustment", "compass.ocean.tests.global_ocean.mesh.wc14.dynamic_adjustment.WC14DynamicAdjustment.configure", "compass.ocean.tests.global_ocean.mesh.wc14.dynamic_adjustment.WC14DynamicAdjustment.run", "compass.ocean.tests.global_ocean.metadata.add_mesh_and_init_metadata", "compass.ocean.tests.global_ocean.metadata.get_e3sm_mesh_names", "compass.ocean.tests.global_ocean.performance_test.PerformanceTest", "compass.ocean.tests.global_ocean.performance_test.PerformanceTest.configure", "compass.ocean.tests.global_ocean.performance_test.PerformanceTest.run", "compass.ocean.tests.global_ocean.restart_test.RestartTest", "compass.ocean.tests.global_ocean.restart_test.RestartTest.configure", "compass.ocean.tests.global_ocean.restart_test.RestartTest.run", "compass.ocean.tests.global_ocean.threads_test.ThreadsTest", "compass.ocean.tests.global_ocean.threads_test.ThreadsTest.configure", "compass.ocean.tests.global_ocean.threads_test.ThreadsTest.run", "compass.ocean.tests.gotm.Gotm", "compass.ocean.tests.gotm.default.Default", "compass.ocean.tests.gotm.default.Default.validate", "compass.ocean.tests.gotm.default.analysis.Analysis", "compass.ocean.tests.gotm.default.analysis.Analysis.run", "compass.ocean.tests.gotm.default.forward.Forward", "compass.ocean.tests.gotm.default.forward.Forward.run", "compass.ocean.tests.gotm.default.init.Init", "compass.ocean.tests.gotm.default.init.Init.run", "compass.ocean.tests.hurricane.Hurricane", "compass.ocean.tests.hurricane.analysis.Analysis", "compass.ocean.tests.hurricane.analysis.Analysis.read_pointstats", "compass.ocean.tests.hurricane.analysis.Analysis.read_station_data", "compass.ocean.tests.hurricane.analysis.Analysis.read_station_file", "compass.ocean.tests.hurricane.analysis.Analysis.run", "compass.ocean.tests.hurricane.analysis.Analysis.setup", "compass.ocean.tests.hurricane.configure", "compass.ocean.tests.hurricane.forward.Forward", "compass.ocean.tests.hurricane.forward.Forward.configure", "compass.ocean.tests.hurricane.forward.Forward.run", "compass.ocean.tests.hurricane.forward.forward.ForwardStep", "compass.ocean.tests.hurricane.forward.forward.ForwardStep.run", "compass.ocean.tests.hurricane.forward.forward.ForwardStep.setup", "compass.ocean.tests.hurricane.init.Init", "compass.ocean.tests.hurricane.init.Init.configure", "compass.ocean.tests.hurricane.init.Init.run", "compass.ocean.tests.hurricane.init.create_pointstats_file.CreatePointstatsFile", "compass.ocean.tests.hurricane.init.create_pointstats_file.CreatePointstatsFile.create_pointstats_file", "compass.ocean.tests.hurricane.init.create_pointstats_file.CreatePointstatsFile.run", "compass.ocean.tests.hurricane.init.initial_state.InitialState", "compass.ocean.tests.hurricane.init.initial_state.InitialState.run", "compass.ocean.tests.hurricane.init.initial_state.InitialState.setup", "compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing", "compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing.interpolate_data_to_grid", "compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing.plot_interp_data", "compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing.run", "compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing.write_to_file", "compass.ocean.tests.hurricane.mesh.Mesh", "compass.ocean.tests.hurricane.mesh.Mesh.configure", "compass.ocean.tests.hurricane.mesh.Mesh.run", "compass.ocean.tests.hurricane.mesh.dequ120at30cr10rr2.DEQU120at30cr10rr2Mesh", "compass.ocean.tests.hurricane.mesh.dequ120at30cr10rr2.DEQU120at30cr10rr2Mesh.build_cell_width_lat_lon", "compass.ocean.tests.ice_shelf_2d.IceShelf2d", "compass.ocean.tests.ice_shelf_2d.configure", "compass.ocean.tests.ice_shelf_2d.default.Default", "compass.ocean.tests.ice_shelf_2d.default.Default.configure", "compass.ocean.tests.ice_shelf_2d.default.Default.run", "compass.ocean.tests.ice_shelf_2d.forward.Forward", "compass.ocean.tests.ice_shelf_2d.forward.Forward.run", "compass.ocean.tests.ice_shelf_2d.forward.Forward.setup", "compass.ocean.tests.ice_shelf_2d.initial_state.InitialState", "compass.ocean.tests.ice_shelf_2d.initial_state.InitialState.run", "compass.ocean.tests.ice_shelf_2d.restart_test.RestartTest", "compass.ocean.tests.ice_shelf_2d.restart_test.RestartTest.configure", "compass.ocean.tests.ice_shelf_2d.restart_test.RestartTest.run", "compass.ocean.tests.ice_shelf_2d.ssh_adjustment.SshAdjustment", "compass.ocean.tests.ice_shelf_2d.ssh_adjustment.SshAdjustment.run", "compass.ocean.tests.ice_shelf_2d.ssh_adjustment.SshAdjustment.setup", "compass.ocean.tests.ice_shelf_2d.viz.Viz", "compass.ocean.tests.ice_shelf_2d.viz.Viz.run", "compass.ocean.tests.internal_wave.InternalWave", "compass.ocean.tests.internal_wave.default.Default", "compass.ocean.tests.internal_wave.default.Default.validate", "compass.ocean.tests.internal_wave.forward.Forward", "compass.ocean.tests.internal_wave.forward.Forward.run", "compass.ocean.tests.internal_wave.initial_state.InitialState", "compass.ocean.tests.internal_wave.initial_state.InitialState.run", "compass.ocean.tests.internal_wave.rpe_test.RpeTest", "compass.ocean.tests.internal_wave.rpe_test.analysis.Analysis", "compass.ocean.tests.internal_wave.rpe_test.analysis.Analysis.run", "compass.ocean.tests.internal_wave.ten_day_test.TenDayTest", "compass.ocean.tests.internal_wave.ten_day_test.TenDayTest.validate", "compass.ocean.tests.internal_wave.viz.Viz", "compass.ocean.tests.internal_wave.viz.Viz.run", "compass.ocean.tests.isomip_plus.IsomipPlus", "compass.ocean.tests.isomip_plus.evap.update_evaporation_flux", "compass.ocean.tests.isomip_plus.forward.Forward", "compass.ocean.tests.isomip_plus.forward.Forward.run", "compass.ocean.tests.isomip_plus.forward.Forward.setup", "compass.ocean.tests.isomip_plus.geom.interpolate_ocean_mask", "compass.ocean.tests.isomip_plus.geom.process_input_geometry", "compass.ocean.tests.isomip_plus.initial_state.InitialState", "compass.ocean.tests.isomip_plus.initial_state.InitialState.run", "compass.ocean.tests.isomip_plus.misomip.Misomip", "compass.ocean.tests.isomip_plus.misomip.Misomip.run", "compass.ocean.tests.isomip_plus.ocean_test.OceanTest", "compass.ocean.tests.isomip_plus.ocean_test.OceanTest.configure", "compass.ocean.tests.isomip_plus.ocean_test.OceanTest.run", "compass.ocean.tests.isomip_plus.ssh_adjustment.SshAdjustment", "compass.ocean.tests.isomip_plus.ssh_adjustment.SshAdjustment.run", "compass.ocean.tests.isomip_plus.ssh_adjustment.SshAdjustment.setup", "compass.ocean.tests.isomip_plus.streamfunction.Streamfunction", "compass.ocean.tests.isomip_plus.streamfunction.Streamfunction.run", "compass.ocean.tests.isomip_plus.viz.Viz", "compass.ocean.tests.isomip_plus.viz.Viz.run", "compass.ocean.tests.isomip_plus.viz.file_complete", "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter", "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.images_to_movies", "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_3d_field_top_bot_section", "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_barotropic_streamfunction", "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_horiz_series", "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_ice_shelf_boundary_variables", "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_layer_interfaces", "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_melt_rates", "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_overturning_streamfunction", "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_potential_density", "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_salinity", "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_temperature", "compass.ocean.tests.isomip_plus.viz.plot.TimeSeriesPlotter", "compass.ocean.tests.isomip_plus.viz.plot.TimeSeriesPlotter.plot_melt_time_series", "compass.ocean.tests.isomip_plus.viz.plot.TimeSeriesPlotter.plot_time_series", "compass.ocean.tests.planar_convergence.PlanarConvergence", "compass.ocean.tests.planar_convergence.conv_init.ConvInit", "compass.ocean.tests.planar_convergence.conv_init.ConvInit.run", "compass.ocean.tests.planar_convergence.conv_test_case.ConvTestCase", "compass.ocean.tests.planar_convergence.conv_test_case.ConvTestCase.configure", "compass.ocean.tests.planar_convergence.conv_test_case.ConvTestCase.run", "compass.ocean.tests.planar_convergence.conv_test_case.ConvTestCase.update_cores", "compass.ocean.tests.planar_convergence.forward.Forward", "compass.ocean.tests.planar_convergence.forward.Forward.get_dt_duration", "compass.ocean.tests.planar_convergence.forward.Forward.run", "compass.ocean.tests.planar_convergence.forward.Forward.setup", "compass.ocean.tests.planar_convergence.horizontal_advection.HorizontalAdvection", "compass.ocean.tests.planar_convergence.horizontal_advection.HorizontalAdvection.configure", "compass.ocean.tests.planar_convergence.horizontal_advection.HorizontalAdvection.run", "compass.ocean.tests.planar_convergence.horizontal_advection.analysis.Analysis", "compass.ocean.tests.planar_convergence.horizontal_advection.analysis.Analysis.rmse", "compass.ocean.tests.planar_convergence.horizontal_advection.analysis.Analysis.run", "compass.ocean.tests.planar_convergence.horizontal_advection.init.Init", "compass.ocean.tests.planar_convergence.horizontal_advection.init.Init.run", "compass.ocean.tests.soma.Soma", "compass.ocean.tests.soma.analysis.Analysis", "compass.ocean.tests.soma.analysis.Analysis.run", "compass.ocean.tests.soma.forward.Forward", "compass.ocean.tests.soma.forward.Forward.run", "compass.ocean.tests.soma.initial_state.InitialState", "compass.ocean.tests.soma.initial_state.InitialState.run", "compass.ocean.tests.soma.soma_test_case.SomaTestCase", "compass.ocean.tests.soma.soma_test_case.SomaTestCase.validate", "compass.ocean.tests.sphere_transport.SphereTransport", "compass.ocean.tests.sphere_transport.correlated_tracers_2d.CorrelatedTracers2D", "compass.ocean.tests.sphere_transport.correlated_tracers_2d.CorrelatedTracers2D.configure", "compass.ocean.tests.sphere_transport.correlated_tracers_2d.CorrelatedTracers2D.run", "compass.ocean.tests.sphere_transport.correlated_tracers_2d.analysis.Analysis", "compass.ocean.tests.sphere_transport.correlated_tracers_2d.analysis.Analysis.run", "compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.Forward", "compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.Forward.get_timestep_str", "compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.Forward.run", "compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.Forward.setup", "compass.ocean.tests.sphere_transport.correlated_tracers_2d.init.Init", "compass.ocean.tests.sphere_transport.correlated_tracers_2d.init.Init.run", "compass.ocean.tests.sphere_transport.correlated_tracers_2d.mesh.Mesh", "compass.ocean.tests.sphere_transport.correlated_tracers_2d.mesh.Mesh.build_cell_width_lat_lon", "compass.ocean.tests.sphere_transport.correlated_tracers_2d.mesh.Mesh.run", "compass.ocean.tests.sphere_transport.divergent_2d.Divergent2D", "compass.ocean.tests.sphere_transport.divergent_2d.Divergent2D.configure", "compass.ocean.tests.sphere_transport.divergent_2d.Divergent2D.run", "compass.ocean.tests.sphere_transport.divergent_2d.analysis.Analysis", "compass.ocean.tests.sphere_transport.divergent_2d.analysis.Analysis.run", "compass.ocean.tests.sphere_transport.divergent_2d.forward.Forward", "compass.ocean.tests.sphere_transport.divergent_2d.forward.Forward.get_timestep_str", "compass.ocean.tests.sphere_transport.divergent_2d.forward.Forward.run", "compass.ocean.tests.sphere_transport.divergent_2d.forward.Forward.setup", "compass.ocean.tests.sphere_transport.divergent_2d.init.Init", "compass.ocean.tests.sphere_transport.divergent_2d.init.Init.run", "compass.ocean.tests.sphere_transport.divergent_2d.mesh.Mesh", "compass.ocean.tests.sphere_transport.divergent_2d.mesh.Mesh.build_cell_width_lat_lon", "compass.ocean.tests.sphere_transport.divergent_2d.mesh.Mesh.run", "compass.ocean.tests.sphere_transport.nondivergent_2d.Nondivergent2D", "compass.ocean.tests.sphere_transport.nondivergent_2d.Nondivergent2D.configure", "compass.ocean.tests.sphere_transport.nondivergent_2d.Nondivergent2D.run", "compass.ocean.tests.sphere_transport.nondivergent_2d.analysis.Analysis", "compass.ocean.tests.sphere_transport.nondivergent_2d.analysis.Analysis.run", "compass.ocean.tests.sphere_transport.nondivergent_2d.forward.Forward", "compass.ocean.tests.sphere_transport.nondivergent_2d.forward.Forward.get_timestep_str", "compass.ocean.tests.sphere_transport.nondivergent_2d.forward.Forward.run", "compass.ocean.tests.sphere_transport.nondivergent_2d.forward.Forward.setup", "compass.ocean.tests.sphere_transport.nondivergent_2d.init.Init", "compass.ocean.tests.sphere_transport.nondivergent_2d.init.Init.run", "compass.ocean.tests.sphere_transport.nondivergent_2d.mesh.Mesh", "compass.ocean.tests.sphere_transport.nondivergent_2d.mesh.Mesh.build_cell_width_lat_lon", "compass.ocean.tests.sphere_transport.nondivergent_2d.mesh.Mesh.run", "compass.ocean.tests.sphere_transport.process_output.compute_convergence_rates", "compass.ocean.tests.sphere_transport.process_output.compute_error_from_output_ncfile", "compass.ocean.tests.sphere_transport.process_output.make_convergence_arrays", "compass.ocean.tests.sphere_transport.process_output.plot_convergence", "compass.ocean.tests.sphere_transport.process_output.plot_filament", "compass.ocean.tests.sphere_transport.process_output.plot_over_and_undershoot_errors", "compass.ocean.tests.sphere_transport.process_output.plot_sol", "compass.ocean.tests.sphere_transport.process_output.print_data_as_csv", "compass.ocean.tests.sphere_transport.process_output.print_error_conv_table", "compass.ocean.tests.sphere_transport.process_output.read_ncl_rgb_file", "compass.ocean.tests.sphere_transport.rotation_2d.Rotation2D", "compass.ocean.tests.sphere_transport.rotation_2d.Rotation2D.configure", "compass.ocean.tests.sphere_transport.rotation_2d.Rotation2D.run", "compass.ocean.tests.sphere_transport.rotation_2d.analysis.Analysis", "compass.ocean.tests.sphere_transport.rotation_2d.analysis.Analysis.run", "compass.ocean.tests.sphere_transport.rotation_2d.forward.Forward", "compass.ocean.tests.sphere_transport.rotation_2d.forward.Forward.get_timestep_str", "compass.ocean.tests.sphere_transport.rotation_2d.forward.Forward.run", "compass.ocean.tests.sphere_transport.rotation_2d.forward.Forward.setup", "compass.ocean.tests.sphere_transport.rotation_2d.init.Init", "compass.ocean.tests.sphere_transport.rotation_2d.init.Init.run", "compass.ocean.tests.sphere_transport.rotation_2d.mesh.Mesh", "compass.ocean.tests.sphere_transport.rotation_2d.mesh.Mesh.build_cell_width_lat_lon", "compass.ocean.tests.sphere_transport.rotation_2d.mesh.Mesh.run", "compass.ocean.tests.ziso.Ziso", "compass.ocean.tests.ziso.ZisoTestCase", "compass.ocean.tests.ziso.ZisoTestCase.configure", "compass.ocean.tests.ziso.ZisoTestCase.run", "compass.ocean.tests.ziso.configure", "compass.ocean.tests.ziso.forward.Forward", "compass.ocean.tests.ziso.forward.Forward.run", "compass.ocean.tests.ziso.forward.Forward.setup", "compass.ocean.tests.ziso.initial_state.InitialState", "compass.ocean.tests.ziso.initial_state.InitialState.run", "compass.ocean.tests.ziso.with_frazil.WithFrazil", "compass.ocean.tests.ziso.with_frazil.WithFrazil.configure", "compass.ocean.tests.ziso.with_frazil.WithFrazil.run", "compass.ocean.vertical.grid_1d.generate_1d_grid", "compass.ocean.vertical.grid_1d.write_1d_grid", "compass.ocean.vertical.init_vertical_coord", "compass.ocean.vertical.partial_cells.alter_bottom_depth", "compass.ocean.vertical.partial_cells.alter_ssh", "compass.ocean.vertical.zlevel.compute_min_max_level_cell", "compass.ocean.vertical.zlevel.compute_z_level_layer_thickness", "compass.ocean.vertical.zlevel.compute_z_level_resting_thickness", "compass.ocean.vertical.zlevel.init_z_level_vertical_coord", "compass.ocean.vertical.zstar.init_z_star_vertical_coord", "Ocean core", "baroclinic_channel", "drying_slope", "global_convergence", "global_ocean", "gotm", "hurricane", "ice_shelf_2d", "Test groups", "internal_wave", "isomip_plus", "planar_convergence", "soma", "sphere_transport", "spherical_harmonic_transform", "ziso", "Organization of Tests", "Overview", "Quick Start for Developers", "Troubleshooting", "Glossary", "compass", "Developer Tutorial: Adding a parameter study", "Developer Tutorial: Adding a new test group", "Developer Tutorial: Porting a legacy COMPASS test group", "Config Files", "Framework", "Landice core", "Test suites", "calving_dt_convergence", "circular_shelf", "dome", "eismint2", "enthalpy_benchmark", "greenland", "humboldt", "hydro_radial", "Test Groups", "kangerlussuaq", "koge_bugt_s", "mismipplus", "thwaites", "Anvil", "Badger", "Chrysalis", "CompyMcNodeFace", "Cori", "Machines", "Ice shelf-cavities", "Framework", "Vertical coordinate", "Ocean core", "Test suites", "baroclinic_channel", "drying_slope", "global_convergence", "global_ocean", "gotm", "hurricane", "ice_shelf_2d", "Test groups", "internal_wave", "isomip_plus", "planar_convergence", "soma", "sphere_transport", "spherical_harmonic_transform", "ziso", "Quick Start for Users", "Test Cases", "Test Suites", "Code and Documentation Versions"], "terms": {"date": [0, 1, 3, 6, 34, 207, 595, 599, 613, 620, 651, 657], "2021": [0, 1], "07": 0, "30": [0, 1, 8, 45, 463, 599, 609, 610, 611, 626, 629, 641, 649, 650, 651, 654, 657, 661, 662], "contributor": [0, 1, 3], "xylar": [0, 1, 8, 618, 620, 642, 651], "asai": [0, 1, 620, 651, 657], "davi": [0, 1, 620, 651, 657], "we": [0, 1, 3, 7, 8, 63, 208, 209, 210, 211, 213, 214, 215, 219, 220, 224, 226, 228, 233, 596, 597, 602, 604, 605, 607, 610, 611, 612, 613, 616, 617, 618, 619, 620, 640, 641, 642, 643, 645, 651, 654, 655, 659, 660, 661, 663, 665], "would": [0, 1, 3, 6, 8, 11, 21, 23, 27, 65, 75, 82, 87, 99, 114, 135, 150, 164, 171, 194, 204, 245, 266, 312, 324, 413, 421, 429, 454, 611, 612, 613, 614, 618, 619, 625, 642, 643, 645, 651, 663], "like": [0, 1, 3, 6, 7, 8, 228, 599, 610, 611, 612, 613, 614, 616, 617, 618, 619, 620, 642, 650, 651, 658, 661, 663, 664], "have": [0, 1, 3, 5, 6, 7, 8, 25, 35, 63, 82, 87, 99, 114, 150, 164, 171, 194, 204, 208, 214, 222, 224, 226, 228, 276, 297, 491, 509, 523, 537, 561, 599, 601, 605, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 626, 628, 630, 636, 637, 638, 639, 640, 641, 642, 643, 645, 648, 650, 651, 654, 655, 656, 657, 658, 659, 662, 663, 664, 665], "wai": [0, 1, 6, 7, 11, 47, 52, 226, 228, 446, 605, 611, 612, 613, 614, 616, 617, 618, 619, 630, 642, 645, 651, 657], "download": [0, 1, 6, 11, 12, 22, 101, 116, 137, 152, 153, 173, 196, 206, 207, 210, 213, 219, 220, 247, 250, 259, 314, 323, 326, 339, 381, 388, 397, 415, 423, 444, 456, 557, 579, 595, 607, 612, 613, 620, 622, 630, 663, 665], "file": [0, 6, 7, 9, 11, 12, 14, 15, 16, 17, 20, 22, 23, 24, 25, 26, 28, 34, 37, 38, 42, 58, 59, 60, 61, 67, 70, 71, 72, 73, 74, 75, 79, 82, 87, 91, 93, 99, 101, 106, 108, 114, 116, 135, 137, 150, 152, 164, 171, 173, 174, 180, 193, 194, 196, 199, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 219, 220, 222, 226, 233, 234, 235, 236, 247, 250, 259, 286, 297, 299, 302, 304, 306, 308, 310, 312, 330, 333, 336, 347, 352, 355, 356, 379, 392, 393, 398, 402, 415, 423, 441, 444, 446, 456, 461, 462, 464, 466, 492, 549, 554, 557, 579, 586, 595, 596, 597, 599, 601, 602, 604, 605, 607, 609, 610, 612, 613, 614, 615, 616, 617, 619, 623, 625, 626, 627, 628, 629, 630, 631, 633, 634, 636, 638, 641, 642, 645, 647, 648, 650, 651, 654, 657, 658, 660, 661, 663, 664], "an": [0, 3, 4, 6, 7, 8, 11, 12, 16, 23, 38, 43, 45, 46, 63, 74, 75, 112, 123, 178, 208, 210, 211, 213, 215, 219, 220, 226, 228, 234, 283, 286, 297, 299, 302, 304, 306, 308, 310, 333, 342, 347, 352, 355, 356, 357, 367, 445, 449, 451, 459, 464, 471, 472, 473, 478, 494, 503, 512, 515, 526, 529, 540, 543, 549, 550, 551, 554, 557, 564, 567, 596, 597, 599, 600, 602, 604, 605, 609, 610, 613, 614, 615, 616, 619, 620, 623, 625, 626, 628, 630, 635, 636, 638, 642, 643, 645, 647, 649, 651, 656, 657, 659, 660, 661, 662, 663, 664, 665], "onlin": [0, 620, 651], "instead": [0, 1, 6, 8, 29, 69, 86, 96, 98, 105, 111, 113, 120, 126, 131, 142, 144, 149, 154, 161, 168, 170, 177, 179, 187, 192, 198, 201, 203, 221, 226, 241, 244, 253, 256, 262, 291, 301, 330, 412, 420, 575, 584, 611, 612, 617, 618, 619, 623, 625, 630, 637, 659, 660, 661, 663, 665], "gener": [0, 1, 3, 4, 5, 7, 8, 14, 15, 17, 22, 50, 75, 101, 116, 137, 152, 173, 196, 206, 207, 214, 228, 234, 247, 250, 259, 366, 367, 369, 371, 373, 415, 423, 426, 444, 456, 579, 585, 595, 596, 597, 598, 599, 600, 601, 602, 604, 605, 607, 610, 611, 612, 617, 618, 619, 620, 623, 624, 625, 626, 629, 630, 632, 633, 634, 635, 636, 642, 649, 650, 651, 652, 653, 658, 660, 661, 663], "them": [0, 1, 7, 8, 24, 61, 212, 222, 226, 598, 599, 600, 606, 611, 612, 613, 615, 617, 618, 619, 623, 640, 642, 647, 651, 653, 663, 664], "each": [0, 1, 3, 6, 7, 8, 20, 26, 39, 45, 46, 71, 208, 209, 210, 211, 212, 213, 214, 215, 220, 226, 228, 230, 231, 234, 275, 286, 288, 293, 296, 297, 298, 317, 320, 329, 333, 335, 344, 347, 349, 352, 354, 359, 362, 365, 385, 391, 405, 453, 467, 475, 482, 483, 490, 508, 522, 536, 548, 549, 550, 554, 560, 587, 588, 589, 590, 591, 592, 593, 594, 596, 597, 598, 599, 600, 602, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 615, 617, 618, 619, 620, 623, 624, 627, 629, 630, 642, 645, 646, 648, 649, 650, 651, 653, 654, 656, 657, 658, 659, 660, 661, 663, 665], "time": [0, 1, 6, 7, 8, 11, 26, 82, 87, 99, 114, 150, 164, 171, 194, 204, 208, 210, 211, 212, 213, 215, 219, 220, 228, 234, 254, 270, 280, 286, 291, 294, 297, 312, 315, 333, 342, 347, 352, 357, 360, 363, 376, 398, 399, 400, 433, 442, 447, 451, 461, 462, 464, 466, 474, 485, 511, 512, 525, 526, 539, 540, 549, 553, 554, 563, 564, 596, 597, 598, 599, 600, 601, 602, 604, 605, 606, 608, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 624, 625, 626, 627, 628, 629, 630, 631, 636, 638, 641, 643, 647, 648, 651, 653, 654, 655, 656, 657, 659, 662, 663, 665], "run": [0, 5, 7, 11, 14, 15, 16, 17, 20, 21, 25, 26, 27, 34, 42, 60, 61, 64, 65, 70, 71, 72, 73, 75, 80, 82, 85, 87, 95, 97, 99, 104, 110, 112, 114, 135, 141, 148, 150, 153, 156, 162, 164, 167, 169, 171, 176, 194, 197, 200, 202, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 219, 220, 222, 224, 226, 228, 231, 242, 245, 251, 257, 266, 270, 276, 279, 286, 290, 291, 294, 297, 299, 312, 315, 324, 333, 342, 347, 352, 357, 360, 363, 371, 377, 383, 386, 389, 398, 410, 413, 418, 421, 429, 434, 442, 447, 451, 454, 484, 485, 491, 499, 503, 509, 511, 523, 525, 537, 539, 550, 561, 563, 573, 577, 582, 595, 596, 597, 598, 599, 600, 601, 602, 604, 605, 606, 607, 608, 609, 610, 612, 614, 615, 616, 617, 620, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 647, 648, 649, 650, 651, 653, 654, 656, 658, 659, 660, 661, 662, 664, 665], "The": [0, 1, 3, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 18, 20, 22, 23, 24, 25, 26, 27, 31, 32, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 50, 51, 55, 59, 60, 61, 64, 65, 67, 69, 70, 71, 72, 73, 74, 75, 78, 80, 82, 85, 87, 89, 91, 95, 97, 99, 101, 102, 104, 106, 110, 112, 114, 116, 117, 119, 121, 123, 124, 127, 129, 132, 135, 137, 138, 141, 143, 145, 148, 150, 152, 153, 156, 158, 160, 162, 164, 167, 169, 171, 173, 174, 176, 178, 180, 184, 186, 189, 191, 194, 196, 197, 200, 202, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 226, 228, 229, 231, 232, 233, 235, 236, 238, 239, 242, 245, 247, 248, 250, 251, 254, 257, 259, 260, 264, 266, 268, 270, 273, 276, 277, 279, 283, 286, 290, 291, 294, 297, 299, 302, 304, 306, 308, 310, 312, 315, 318, 321, 324, 327, 330, 331, 333, 336, 340, 342, 345, 347, 350, 352, 355, 356, 357, 360, 363, 367, 369, 371, 373, 376, 383, 386, 389, 392, 395, 398, 403, 406, 409, 410, 413, 415, 416, 418, 421, 423, 424, 427, 429, 431, 433, 434, 436, 438, 441, 442, 444, 445, 446, 447, 449, 451, 454, 456, 457, 459, 462, 464, 465, 466, 468, 469, 470, 474, 478, 480, 484, 488, 491, 492, 494, 497, 499, 501, 503, 506, 509, 511, 515, 517, 520, 523, 525, 529, 531, 534, 537, 539, 543, 545, 551, 558, 561, 563, 567, 569, 573, 576, 577, 579, 580, 582, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 656, 657, 658, 659, 660, 661, 662, 663, 664], "primari": [0, 3, 6, 8, 665], "motiv": 0, "thi": [0, 1, 3, 4, 6, 7, 8, 11, 12, 16, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 34, 36, 42, 43, 44, 47, 48, 50, 51, 52, 53, 55, 56, 60, 63, 65, 67, 69, 74, 75, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 278, 279, 281, 283, 284, 285, 286, 287, 290, 291, 292, 294, 295, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 318, 319, 321, 322, 324, 325, 327, 328, 330, 331, 332, 333, 334, 336, 337, 338, 340, 341, 342, 343, 345, 346, 347, 348, 350, 351, 352, 353, 355, 356, 357, 358, 360, 361, 363, 364, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 380, 383, 384, 386, 387, 389, 390, 392, 394, 395, 396, 398, 401, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 477, 478, 479, 480, 484, 486, 488, 491, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 537, 538, 539, 540, 541, 543, 544, 545, 546, 547, 548, 549, 558, 561, 562, 563, 564, 565, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 595, 596, 597, 598, 599, 601, 602, 604, 605, 607, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 623, 624, 625, 626, 627, 628, 629, 630, 633, 634, 635, 636, 641, 642, 643, 645, 647, 649, 650, 651, 653, 654, 656, 657, 658, 659, 660, 661, 662, 663, 665], "i": [0, 3, 6, 7, 8, 11, 12, 20, 21, 26, 29, 34, 37, 38, 50, 51, 55, 60, 61, 65, 68, 69, 70, 74, 75, 82, 86, 87, 91, 96, 98, 99, 105, 106, 111, 113, 114, 120, 126, 131, 135, 142, 144, 149, 150, 154, 156, 161, 164, 168, 170, 171, 176, 177, 178, 179, 180, 187, 192, 194, 198, 201, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 232, 233, 234, 241, 244, 245, 253, 256, 262, 266, 270, 286, 291, 297, 301, 312, 324, 336, 386, 400, 412, 413, 420, 421, 429, 442, 445, 446, 454, 462, 466, 499, 501, 503, 554, 575, 577, 580, 584, 587, 593, 594, 595, 596, 597, 598, 599, 601, 602, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 623, 624, 625, 626, 627, 628, 629, 630, 631, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 647, 648, 649, 650, 651, 652, 653, 654, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665], "option": [0, 6, 7, 11, 12, 14, 15, 17, 21, 23, 24, 25, 26, 27, 28, 34, 35, 36, 37, 38, 39, 43, 49, 50, 51, 54, 55, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 79, 82, 87, 91, 93, 99, 106, 108, 114, 123, 125, 130, 135, 150, 164, 171, 180, 182, 194, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 226, 228, 230, 234, 235, 236, 238, 240, 243, 245, 252, 255, 261, 265, 266, 274, 282, 287, 290, 292, 295, 300, 312, 316, 319, 324, 328, 330, 334, 336, 343, 348, 353, 355, 356, 358, 361, 364, 384, 386, 390, 404, 409, 411, 413, 419, 421, 429, 442, 451, 452, 454, 464, 465, 466, 468, 469, 470, 474, 481, 485, 487, 489, 499, 507, 514, 521, 528, 535, 542, 549, 559, 566, 574, 576, 577, 583, 585, 587, 588, 589, 593, 594, 595, 596, 597, 598, 599, 600, 602, 604, 605, 606, 607, 608, 609, 610, 614, 616, 617, 620, 623, 635, 645, 647, 663, 664], "avoid": [0, 1, 6, 611, 618, 619, 653], "consum": [0, 8, 611, 617, 618, 647, 651, 665], "mesh": [0, 1, 6, 11, 59, 79, 80, 82, 85, 89, 91, 95, 97, 99, 102, 104, 106, 117, 119, 138, 143, 153, 156, 160, 162, 164, 174, 176, 186, 191, 193, 199, 208, 209, 210, 211, 212, 215, 219, 228, 230, 233, 234, 242, 248, 268, 273, 276, 277, 279, 283, 286, 290, 291, 294, 297, 299, 302, 304, 308, 310, 312, 315, 318, 321, 355, 356, 357, 360, 363, 373, 383, 386, 389, 392, 395, 398, 399, 416, 431, 445, 447, 462, 474, 478, 480, 484, 488, 491, 492, 501, 503, 506, 509, 511, 515, 520, 523, 525, 529, 534, 537, 539, 543, 548, 550, 551, 556, 558, 561, 563, 567, 573, 580, 582, 587, 593, 594, 596, 597, 600, 602, 604, 605, 606, 607, 610, 611, 612, 613, 615, 616, 619, 620, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 645, 647, 648, 649, 650, 652, 654, 656, 657, 658, 659, 660, 661, 662, 663, 665], "initi": [0, 7, 8, 11, 89, 102, 104, 117, 138, 143, 145, 153, 158, 160, 174, 176, 178, 184, 186, 189, 191, 209, 210, 211, 212, 213, 215, 219, 220, 228, 232, 234, 235, 242, 248, 268, 272, 283, 285, 286, 290, 291, 294, 297, 299, 302, 304, 306, 308, 310, 312, 315, 318, 321, 330, 333, 342, 347, 352, 355, 356, 357, 360, 363, 367, 373, 383, 386, 389, 395, 416, 431, 441, 447, 478, 497, 501, 503, 515, 529, 543, 549, 554, 567, 573, 580, 582, 596, 597, 598, 599, 600, 602, 604, 605, 606, 607, 608, 610, 611, 612, 614, 615, 616, 617, 619, 620, 623, 625, 626, 627, 628, 630, 631, 632, 635, 636, 643, 645, 647, 648, 649, 650, 651, 654, 656, 657, 659, 662, 664], "condit": [0, 11, 89, 102, 104, 117, 138, 143, 145, 153, 158, 160, 174, 176, 178, 184, 186, 189, 191, 209, 210, 211, 212, 213, 215, 219, 220, 228, 234, 235, 242, 248, 268, 272, 283, 285, 286, 290, 291, 294, 297, 299, 302, 304, 306, 308, 310, 312, 315, 318, 321, 333, 342, 347, 352, 355, 356, 357, 360, 363, 367, 373, 383, 386, 389, 395, 416, 431, 447, 478, 501, 503, 515, 529, 543, 549, 567, 573, 580, 582, 596, 597, 598, 599, 600, 602, 604, 605, 606, 607, 608, 610, 611, 612, 615, 616, 617, 619, 620, 623, 625, 626, 627, 628, 629, 630, 631, 632, 635, 636, 643, 647, 648, 649, 651, 653, 654, 656, 657, 659, 662, 664], "faster": [0, 8, 613, 630], "regress": [0, 1, 3, 272, 285, 596, 599, 604, 605, 611, 615, 616, 618, 619, 623, 625, 627, 632, 647, 648, 651, 656, 657, 659, 662, 663, 665], "mpa": [0, 6, 7, 9, 10, 11, 12, 26, 31, 42, 59, 62, 67, 70, 71, 72, 73, 79, 84, 94, 109, 134, 140, 146, 155, 166, 183, 188, 193, 199, 207, 209, 210, 211, 212, 215, 221, 222, 223, 224, 225, 226, 228, 229, 230, 237, 245, 263, 266, 270, 272, 273, 279, 285, 286, 297, 299, 302, 308, 310, 312, 315, 318, 327, 333, 336, 342, 347, 352, 355, 357, 366, 371, 375, 377, 386, 389, 398, 399, 403, 408, 413, 426, 429, 440, 442, 445, 462, 474, 477, 480, 484, 488, 496, 499, 505, 506, 511, 512, 520, 525, 526, 534, 539, 540, 549, 554, 558, 563, 564, 572, 577, 586, 595, 596, 597, 598, 599, 600, 601, 602, 604, 605, 606, 607, 608, 609, 610, 615, 616, 617, 618, 619, 620, 622, 637, 638, 639, 640, 641, 642, 643, 645, 646, 647, 648, 651, 652, 653, 656, 657, 660, 661, 662, 664, 665], "compon": [0, 6, 207, 595, 599, 611, 612, 616, 618, 619, 620, 642, 643, 653], "forward": [0, 1, 8, 11, 14, 15, 17, 82, 87, 99, 104, 114, 135, 150, 153, 164, 171, 176, 194, 204, 207, 213, 220, 228, 242, 254, 270, 286, 291, 294, 297, 333, 342, 347, 352, 357, 360, 363, 376, 398, 410, 433, 483, 503, 573, 582, 595, 611, 612, 620, 625, 626, 627, 628, 629, 631, 636, 643, 648, 649, 650, 654, 656, 658, 659, 661, 662], "mode": [0, 1, 6, 14, 15, 17, 597, 599, 601, 607, 611, 613, 618, 619, 620, 651, 653, 661, 663], "potenti": [0, 234, 254, 433, 599, 605, 611, 618, 648, 651, 656, 657, 659], "other": [0, 1, 3, 6, 7, 8, 11, 16, 36, 209, 221, 445, 598, 605, 606, 608, 611, 612, 613, 614, 615, 616, 617, 620, 623, 629, 632, 636, 637, 647, 651, 658, 660, 664], "could": [0, 1, 208, 611, 612, 613, 617, 618, 619, 620, 635, 651, 657], "includ": [0, 1, 3, 6, 7, 8, 12, 22, 26, 37, 69, 101, 116, 137, 146, 152, 156, 162, 164, 173, 196, 206, 208, 212, 214, 226, 247, 250, 259, 302, 308, 310, 314, 318, 321, 323, 326, 327, 330, 331, 336, 339, 340, 345, 350, 388, 397, 406, 413, 415, 423, 442, 444, 446, 447, 451, 456, 464, 466, 499, 501, 503, 573, 577, 579, 580, 582, 596, 599, 602, 604, 605, 607, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665], "result": [0, 1, 6, 8, 37, 46, 74, 75, 85, 95, 97, 110, 112, 141, 148, 156, 162, 167, 169, 200, 202, 208, 209, 210, 211, 212, 215, 226, 228, 239, 251, 257, 260, 270, 294, 304, 306, 357, 360, 363, 369, 418, 434, 457, 462, 474, 549, 557, 596, 598, 599, 604, 605, 606, 607, 608, 610, 611, 612, 613, 615, 617, 618, 619, 620, 623, 624, 625, 626, 627, 628, 629, 630, 631, 636, 647, 648, 650, 651, 652, 653, 656, 657, 658, 659, 660, 662, 665], "baselin": [0, 1, 6, 8, 26, 70, 71, 73, 74, 75, 209, 210, 211, 213, 215, 219, 220, 286, 297, 368, 428, 437, 596, 599, 602, 605, 607, 610, 612, 615, 619, 623, 635, 647, 654, 657, 663], "valid": [0, 1, 6, 26, 82, 164, 208, 210, 211, 213, 215, 219, 286, 376, 462, 587, 588, 589, 590, 591, 592, 593, 594, 596, 597, 599, 600, 601, 604, 607, 610, 612, 613, 616, 618, 626, 645, 648, 649, 651, 652, 653, 654, 656, 659, 662, 663], "A": [0, 1, 6, 7, 8, 9, 11, 12, 15, 17, 23, 25, 26, 31, 36, 39, 43, 44, 47, 50, 51, 52, 55, 60, 62, 65, 67, 69, 70, 71, 72, 73, 74, 75, 79, 80, 82, 84, 85, 87, 89, 91, 93, 94, 95, 97, 99, 102, 106, 108, 109, 110, 112, 114, 117, 119, 121, 123, 132, 134, 135, 138, 140, 141, 145, 148, 150, 155, 156, 158, 162, 164, 166, 167, 169, 171, 174, 176, 180, 182, 183, 184, 188, 189, 193, 194, 197, 199, 200, 202, 204, 209, 210, 211, 215, 230, 231, 232, 237, 239, 245, 248, 251, 257, 260, 263, 266, 268, 270, 272, 273, 276, 279, 283, 285, 286, 291, 294, 297, 299, 302, 304, 306, 308, 310, 312, 315, 318, 321, 324, 327, 330, 331, 333, 336, 337, 340, 342, 345, 347, 350, 352, 355, 357, 360, 363, 366, 369, 371, 373, 375, 376, 383, 386, 389, 392, 395, 398, 403, 406, 408, 413, 416, 418, 421, 424, 426, 429, 431, 434, 438, 440, 441, 442, 445, 446, 447, 449, 454, 457, 459, 462, 464, 466, 474, 477, 478, 480, 484, 488, 491, 494, 496, 497, 499, 501, 505, 506, 509, 511, 515, 517, 520, 523, 525, 529, 531, 534, 537, 539, 543, 545, 551, 554, 558, 561, 563, 567, 569, 572, 577, 580, 585, 586, 587, 588, 589, 590, 591, 593, 594, 596, 599, 602, 604, 605, 607, 610, 611, 612, 613, 615, 616, 617, 618, 619, 623, 627, 642, 647, 650, 651, 653, 657, 659, 660], "challeng": [0, 1, 3], "capabl": [0, 1, 3, 226, 599, 612, 642, 661, 662], "provid": [0, 1, 3, 4, 6, 8, 12, 74, 75, 207, 209, 210, 211, 213, 215, 220, 228, 286, 557, 595, 596, 597, 599, 601, 602, 604, 605, 607, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 623, 625, 635, 636, 642, 643, 651, 654, 657, 659, 660, 662, 663], "easi": [0, 7, 12, 612, 619], "both": [0, 1, 6, 7, 8, 75, 228, 596, 597, 599, 601, 602, 605, 609, 611, 613, 616, 617, 618, 619, 620, 625, 626, 628, 631, 643, 647, 651, 653, 654, 657, 658, 659, 662], "develop": [0, 6, 7, 8, 207, 226, 611, 612, 614, 620, 642, 651, 663], "user": [0, 6, 7, 8, 11, 25, 26, 27, 36, 67, 75, 146, 209, 210, 211, 212, 213, 214, 215, 217, 218, 226, 596, 597, 599, 601, 602, 604, 605, 607, 608, 609, 610, 611, 614, 615, 617, 618, 619, 622, 626, 638, 641, 642, 646, 650, 651, 657, 658, 660, 661], "control": [0, 1, 209, 210, 211, 228, 441, 611, 616, 620, 650, 652, 657, 658, 659, 660, 662, 663], "which": [0, 1, 3, 6, 7, 8, 12, 17, 31, 70, 71, 73, 75, 210, 211, 213, 215, 220, 234, 239, 251, 260, 270, 410, 418, 445, 446, 596, 597, 599, 600, 601, 605, 611, 612, 613, 617, 618, 619, 620, 623, 625, 626, 628, 629, 630, 631, 633, 634, 636, 638, 642, 643, 645, 647, 648, 649, 650, 651, 653, 654, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665], "case": [0, 6, 7, 8, 9, 11, 16, 17, 21, 22, 26, 27, 28, 30, 31, 32, 34, 35, 39, 43, 48, 50, 53, 55, 60, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 112, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 145, 147, 148, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 169, 171, 172, 173, 174, 175, 176, 178, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 193, 194, 195, 196, 197, 199, 200, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 226, 228, 229, 237, 238, 239, 240, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 276, 278, 279, 283, 286, 287, 290, 291, 292, 294, 295, 297, 299, 300, 302, 304, 306, 308, 310, 312, 314, 315, 316, 318, 319, 321, 323, 324, 326, 327, 328, 331, 333, 334, 336, 338, 339, 340, 342, 343, 345, 347, 348, 350, 352, 353, 355, 356, 357, 358, 360, 361, 363, 364, 366, 367, 369, 370, 371, 372, 373, 374, 376, 380, 381, 383, 384, 386, 388, 389, 390, 392, 395, 397, 398, 401, 403, 404, 406, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 442, 443, 444, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 478, 479, 480, 481, 484, 488, 489, 491, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 506, 507, 509, 510, 511, 515, 517, 519, 520, 521, 523, 524, 525, 529, 531, 533, 534, 535, 537, 538, 539, 543, 545, 547, 549, 550, 551, 554, 555, 556, 558, 559, 561, 562, 563, 567, 569, 571, 572, 573, 574, 576, 577, 578, 579, 580, 581, 582, 583, 585, 595, 596, 597, 598, 600, 601, 602, 604, 605, 606, 607, 608, 609, 610, 613, 615, 616, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 645, 646, 647, 648, 649, 650, 652, 654, 655, 656, 657, 658, 659, 660, 661, 662, 665], "suit": [0, 1, 3, 7, 11, 26, 35, 39, 68, 69, 71, 226, 599, 613, 615, 616, 617, 618, 619, 620, 622, 630, 637, 638, 639, 640, 641, 646, 651, 655], "ar": [0, 1, 3, 6, 7, 8, 9, 11, 12, 20, 21, 23, 26, 31, 36, 63, 65, 69, 71, 75, 82, 85, 87, 95, 97, 99, 110, 112, 114, 135, 141, 148, 150, 156, 162, 164, 167, 169, 171, 194, 200, 202, 204, 207, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 226, 228, 231, 245, 266, 294, 312, 324, 360, 363, 413, 421, 429, 441, 454, 462, 465, 497, 503, 548, 550, 555, 573, 577, 587, 590, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665], "last": [0, 1, 3, 613, 623, 650, 663], "modifi": [0, 3, 8, 24, 28, 61, 125, 130, 238, 240, 243, 252, 255, 261, 265, 287, 290, 292, 295, 300, 316, 319, 328, 334, 343, 348, 353, 358, 361, 364, 384, 390, 404, 409, 411, 419, 452, 574, 576, 583, 597, 599, 605, 611, 616, 617, 618, 619, 620, 626, 643, 651, 653, 654, 657], "defin": [0, 1, 7, 8, 11, 26, 50, 70, 71, 73, 146, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 226, 228, 233, 330, 595, 596, 597, 598, 599, 600, 601, 602, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 615, 616, 620, 625, 626, 628, 631, 642, 645, 648, 649, 650, 651, 653, 654, 656, 657, 659, 660, 662, 664, 665], "its": [0, 1, 6, 7, 8, 11, 28, 72, 212, 554, 599, 606, 611, 612, 613, 615, 617, 618, 619, 620, 625, 626, 627, 631, 637, 650, 651, 657, 658, 663, 664], "attribut": [0, 1, 8, 20, 211, 213, 215, 220, 599, 617, 618, 619], "For": [0, 1, 3, 4, 6, 7, 8, 63, 71, 210, 211, 213, 215, 220, 221, 597, 599, 605, 611, 612, 613, 615, 617, 618, 619, 620, 622, 623, 627, 637, 646, 649, 650, 651, 655, 659, 660, 661, 663, 664], "see": [0, 1, 6, 7, 8, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 550, 596, 598, 599, 600, 602, 605, 606, 607, 608, 609, 610, 611, 613, 614, 617, 618, 619, 620, 622, 624, 626, 635, 642, 646, 647, 650, 651, 654, 657, 658, 660, 662, 663, 664, 665], "mechan": [0, 1, 611], "comput": [0, 1, 7, 63, 226, 228, 230, 232, 277, 457, 462, 492, 548, 549, 556, 590, 591, 592, 596, 598, 599, 602, 604, 605, 606, 607, 610, 611, 613, 618, 630, 633, 634, 635, 638, 639, 641, 642, 643, 651, 657, 661, 663], "There": [0, 1, 6, 213, 219, 220, 228, 587, 593, 594, 596, 599, 605, 611, 612, 613, 614, 618, 619, 620, 622, 624, 625, 626, 629, 630, 633, 634, 635, 636, 656], "need": [0, 1, 3, 5, 6, 7, 8, 27, 36, 51, 63, 207, 299, 302, 337, 445, 462, 474, 595, 599, 605, 607, 611, 612, 613, 614, 616, 617, 618, 619, 620, 628, 635, 637, 641, 642, 643, 645, 647, 650, 651, 657, 658, 660, 661, 663, 665], "practic": [0, 1, 611, 612, 618, 643], "should": [0, 1, 3, 6, 7, 8, 12, 22, 26, 28, 37, 51, 60, 70, 71, 75, 101, 116, 137, 152, 173, 196, 206, 207, 219, 221, 222, 223, 224, 225, 226, 228, 247, 250, 259, 330, 415, 423, 444, 456, 478, 579, 595, 599, 605, 611, 613, 614, 617, 618, 619, 620, 623, 624, 630, 647, 648, 651, 654, 656, 663], "overli": [0, 7, 228, 232, 643, 651, 654, 657], "tediou": [0, 1], "manual": [0, 1, 6, 8, 26, 27, 208, 209, 210, 211, 215, 611, 617, 654, 657, 664], "e": [0, 1, 7, 8, 11, 28, 31, 42, 226, 228, 462, 551, 599, 611, 612, 613, 614, 615, 617, 618, 619, 620, 627, 641, 645, 648, 649, 651, 654, 656, 657, 658, 659, 662, 663, 664, 665], "g": [0, 1, 7, 8, 11, 28, 31, 42, 114, 123, 211, 226, 551, 599, 611, 612, 613, 614, 615, 617, 618, 619, 620, 627, 645, 648, 649, 651, 654, 656, 657, 658, 662, 663, 665], "set": [0, 1, 5, 6, 7, 8, 11, 12, 14, 15, 17, 22, 35, 51, 66, 67, 70, 71, 73, 74, 75, 82, 99, 101, 116, 137, 152, 164, 173, 174, 196, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 221, 222, 223, 224, 225, 226, 228, 247, 250, 259, 272, 274, 282, 285, 314, 323, 326, 339, 388, 397, 415, 423, 444, 456, 461, 462, 481, 487, 489, 507, 514, 521, 528, 535, 542, 548, 550, 559, 566, 579, 587, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 604, 605, 606, 607, 608, 610, 611, 612, 614, 615, 616, 620, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 636, 637, 638, 639, 640, 641, 642, 647, 648, 649, 650, 651, 652, 653, 654, 656, 657, 658, 659, 660, 661, 665], "flag": [0, 1, 6, 611, 612, 614, 615, 618, 619, 620, 622, 646, 648, 656, 663], "document": [0, 4, 8, 557, 599, 611, 612, 616, 620, 651, 656], "process": [0, 1, 3, 8, 65, 212, 214, 228, 304, 306, 363, 446, 599, 611, 612, 613, 615, 616, 617, 618, 619, 651, 653, 654], "creat": [0, 6, 8, 9, 11, 12, 20, 26, 31, 38, 43, 44, 50, 51, 55, 70, 71, 72, 73, 80, 82, 85, 87, 89, 91, 95, 97, 99, 102, 104, 106, 110, 112, 114, 117, 119, 121, 124, 127, 129, 132, 135, 138, 141, 143, 145, 148, 150, 153, 156, 158, 160, 162, 164, 167, 169, 171, 174, 176, 178, 180, 184, 186, 189, 191, 194, 197, 200, 202, 204, 209, 210, 211, 212, 213, 214, 215, 217, 218, 220, 226, 228, 235, 239, 242, 245, 248, 251, 254, 257, 260, 264, 266, 268, 270, 273, 276, 279, 283, 286, 291, 294, 297, 299, 302, 304, 306, 308, 310, 312, 315, 318, 321, 324, 327, 330, 331, 332, 333, 336, 337, 340, 341, 342, 345, 346, 347, 350, 351, 352, 357, 360, 363, 367, 369, 371, 373, 376, 383, 386, 389, 392, 393, 395, 398, 403, 406, 407, 410, 413, 416, 418, 421, 424, 427, 429, 431, 433, 434, 436, 438, 442, 447, 449, 451, 454, 457, 459, 462, 474, 478, 480, 484, 488, 491, 494, 497, 499, 501, 503, 506, 509, 511, 515, 517, 518, 520, 523, 525, 529, 531, 532, 534, 537, 539, 543, 545, 546, 551, 558, 561, 563, 567, 569, 570, 573, 577, 580, 582, 587, 593, 594, 597, 598, 599, 600, 601, 602, 605, 607, 611, 612, 614, 615, 616, 617, 619, 620, 623, 629, 630, 633, 634, 636, 637, 638, 639, 640, 641, 642, 647, 650, 651, 657, 658, 660, 661, 663], "upload": [0, 651], "give": [0, 6, 8, 611, 612, 613, 617, 618, 619, 620, 627, 660, 661, 663], "stamp": [0, 1, 6], "given": [0, 1, 6, 7, 8, 9, 25, 37, 45, 63, 65, 69, 74, 75, 208, 254, 277, 355, 356, 378, 433, 464, 466, 478, 492, 548, 549, 590, 596, 597, 599, 604, 608, 611, 614, 617, 618, 620, 626, 628, 629, 631, 636, 643, 648, 651, 653, 656, 662, 663, 665], "git": [0, 3, 8, 67, 207, 595, 613, 618, 619, 620, 663], "hash": 0, "releas": [0, 1, 612, 616, 622, 642, 646, 663], "know": [0, 1, 8, 611, 612, 613, 618, 619, 643, 651], "older": [0, 6], "retain": [0, 6, 619, 620, 651], "so": [0, 1, 6, 7, 8, 24, 61, 77, 156, 207, 226, 336, 587, 593, 594, 595, 599, 602, 605, 610, 611, 612, 613, 615, 617, 618, 619, 620, 621, 642, 643, 645, 647, 650, 651, 657, 658, 660, 662, 663, 665], "can": [0, 3, 5, 6, 7, 8, 11, 12, 21, 26, 30, 47, 50, 52, 70, 71, 73, 75, 81, 157, 163, 207, 208, 209, 210, 212, 213, 215, 220, 221, 222, 223, 224, 225, 226, 228, 232, 297, 336, 445, 504, 595, 599, 605, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 623, 624, 626, 627, 629, 630, 636, 638, 641, 642, 643, 647, 650, 651, 653, 654, 657, 658, 659, 660, 661, 662, 663, 664, 665], "still": [0, 1, 619, 630], "It": [0, 1, 3, 6, 11, 20, 208, 209, 210, 211, 213, 214, 215, 220, 222, 596, 597, 599, 600, 601, 602, 604, 611, 612, 613, 615, 617, 618, 619, 620, 630, 635, 642, 651, 659, 660], "mai": [0, 1, 6, 7, 8, 16, 20, 25, 207, 212, 226, 330, 595, 597, 599, 605, 611, 613, 614, 615, 618, 619, 620, 623, 635, 636, 641, 651, 653, 657, 660, 663, 664], "worthwhil": 0, "deprec": [0, 29, 86, 96, 98, 105, 111, 113, 120, 126, 131, 142, 144, 149, 154, 161, 168, 170, 177, 179, 187, 192, 198, 201, 203, 241, 244, 253, 256, 262, 301, 412, 420, 575, 584, 611], "delet": [0, 6, 8, 612, 613, 614], "old": [0, 6, 615, 617], "do": [0, 1, 3, 6, 8, 214, 599, 611, 613, 614, 615, 616, 617, 618, 619, 629, 630, 633, 634, 636, 642, 647, 651, 657, 659, 663], "abil": [0, 7, 660], "up": [0, 1, 5, 6, 7, 8, 11, 14, 15, 17, 22, 26, 35, 56, 67, 70, 71, 72, 73, 74, 75, 101, 116, 137, 152, 173, 174, 176, 196, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 221, 222, 223, 224, 225, 226, 228, 247, 250, 259, 272, 285, 314, 323, 326, 339, 388, 397, 415, 423, 444, 456, 579, 595, 596, 597, 598, 599, 600, 601, 602, 604, 605, 606, 607, 608, 610, 611, 612, 614, 615, 616, 617, 620, 626, 630, 631, 632, 637, 638, 639, 640, 641, 647, 650, 651, 653, 658, 660, 661, 664], "same": [0, 1, 6, 7, 8, 12, 26, 74, 75, 80, 214, 461, 599, 605, 608, 611, 612, 613, 615, 617, 618, 619, 620, 623, 626, 627, 628, 629, 631, 636, 637, 638, 639, 640, 641, 642, 643, 645, 647, 648, 651, 656, 657, 658, 663, 664, 665], "within": [0, 6, 7, 8, 11, 12, 16, 21, 26, 72, 73, 74, 75, 91, 106, 180, 209, 212, 233, 318, 596, 599, 600, 602, 608, 611, 613, 615, 617, 618, 619, 620, 629, 630, 633, 634, 636, 637, 638, 639, 640, 641, 642, 651, 652, 654, 657, 663], "If": [0, 1, 3, 6, 7, 8, 11, 12, 21, 27, 28, 38, 61, 63, 65, 66, 70, 74, 75, 82, 87, 99, 114, 135, 150, 164, 171, 194, 204, 221, 222, 223, 224, 225, 226, 245, 266, 312, 324, 413, 421, 429, 454, 596, 597, 599, 602, 604, 605, 607, 610, 611, 612, 613, 614, 615, 617, 618, 619, 620, 641, 642, 645, 650, 658, 660, 661, 663], "place": [0, 1, 6, 8, 599, 611, 618, 619, 642, 650, 658, 659, 660], "import": [0, 1, 8, 222, 611, 612, 613, 615, 617, 618, 619, 643], "constraint": [0, 663], "solut": [0, 1, 8, 174, 178, 215, 224, 270, 554, 555, 597, 598, 600, 606, 608, 614, 617, 619, 625, 626, 629, 631, 636, 649, 652, 659, 660], "support": [0, 6, 8, 11, 210, 211, 213, 215, 220, 228, 587, 593, 594, 596, 597, 598, 607, 610, 611, 612, 616, 617, 618, 619, 620, 623, 624, 630, 637, 638, 639, 640, 641, 643, 645, 648, 651, 653, 654, 657, 664], "databas": [0, 1, 6, 8, 9, 11, 12, 210, 607, 611, 642], "input": [0, 6, 8, 11, 12, 13, 16, 22, 59, 91, 101, 106, 116, 137, 152, 173, 180, 196, 206, 208, 209, 210, 211, 212, 213, 215, 219, 220, 233, 247, 250, 259, 392, 415, 423, 444, 446, 456, 462, 512, 526, 540, 564, 579, 596, 597, 599, 601, 602, 604, 605, 617, 618, 619, 623, 653], "data": [0, 6, 8, 12, 219, 226, 230, 270, 336, 337, 376, 377, 378, 381, 398, 399, 400, 402, 461, 462, 464, 466, 550, 555, 587, 593, 594, 597, 599, 601, 605, 611, 613, 616, 617, 620, 623, 635, 636, 642, 651, 653, 660, 663, 664, 665], "e3sm": [0, 1, 6, 8, 11, 291, 299, 302, 304, 306, 308, 310, 356, 595, 599, 611, 613, 616, 618, 619, 620, 637, 638, 639, 640, 641, 642, 643, 645, 647, 651], "lcrc": [0, 1, 6, 8, 34, 210, 611, 612, 620, 637, 639, 663], "server": [0, 1, 6, 8, 12, 34, 207, 210, 219, 595, 611, 612, 620, 641, 651], "store": [0, 1, 8, 28, 599, 605, 611, 617, 618, 619, 651, 663], "new": [0, 1, 3, 6, 9, 11, 15, 23, 26, 31, 36, 38, 43, 50, 55, 82, 87, 99, 114, 135, 150, 164, 171, 194, 204, 228, 233, 245, 266, 279, 304, 306, 308, 310, 312, 331, 336, 340, 345, 350, 369, 371, 386, 406, 413, 429, 441, 442, 484, 499, 511, 517, 525, 531, 539, 545, 563, 569, 577, 587, 593, 594, 605, 611, 612, 613, 614, 615, 616, 635, 636, 651, 657, 663], "compass_cach": [0, 6, 8, 9, 611], "core": [0, 6, 7, 8, 9, 10, 11, 12, 14, 15, 17, 18, 20, 21, 23, 24, 25, 26, 31, 41, 62, 64, 65, 67, 72, 73, 77, 78, 79, 84, 85, 93, 94, 95, 104, 108, 109, 110, 123, 134, 140, 141, 153, 155, 156, 166, 167, 176, 182, 183, 188, 193, 199, 200, 209, 210, 211, 213, 214, 215, 220, 228, 229, 234, 237, 239, 242, 263, 272, 285, 294, 330, 366, 375, 408, 426, 440, 477, 483, 496, 505, 572, 596, 597, 599, 602, 604, 607, 610, 615, 616, 617, 618, 619, 620, 621, 623, 627, 629, 630, 631, 636, 637, 638, 639, 640, 641, 642, 644, 647, 651, 653, 661, 663, 664, 665], "": [0, 1, 6, 7, 8, 11, 12, 16, 26, 28, 34, 56, 68, 72, 73, 75, 209, 210, 211, 212, 214, 215, 217, 218, 596, 597, 598, 599, 600, 601, 602, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 617, 618, 619, 620, 622, 626, 634, 637, 639, 640, 641, 642, 646, 650, 651, 653, 657, 658, 660, 661, 662, 663], "space": [0, 1, 6, 7, 8, 611, 613, 619, 629, 630, 633, 634, 636, 638, 642, 659, 663], "appropri": [0, 1, 3, 6, 63, 207, 208, 209, 226, 478, 595, 596, 597, 599, 602, 604, 605, 607, 610, 611, 613, 616, 618, 619, 620, 623, 625, 637, 638, 639, 640, 641, 642, 647, 651, 657, 659, 663], "ad": [0, 1, 3, 6, 7, 8, 12, 22, 28, 36, 75, 101, 116, 137, 152, 173, 196, 206, 209, 210, 215, 228, 247, 250, 259, 415, 423, 444, 456, 579, 587, 593, 594, 596, 599, 602, 604, 613, 616, 635, 636, 637, 638, 639, 640, 641, 644, 651, 657, 663], "where": [0, 1, 6, 7, 8, 11, 26, 35, 37, 67, 70, 71, 73, 207, 228, 232, 462, 474, 587, 590, 593, 594, 595, 599, 602, 605, 611, 613, 615, 616, 617, 618, 619, 620, 626, 627, 629, 631, 636, 637, 638, 639, 640, 641, 642, 643, 645, 650, 651, 653, 654, 657, 662, 663, 665], "target": [0, 1, 8, 12, 38, 210, 226, 599, 611, 617, 618, 619, 651], "local": [0, 1, 6, 8, 11, 12, 26, 207, 595, 611, 613, 614, 620, 641, 642, 645, 651, 661], "futur": [0, 1, 20, 228, 599, 610, 611, 612, 613, 615, 616, 618, 635, 636, 643, 651, 653, 664], "filenam": [0, 1, 12, 16, 75, 93, 108, 210, 402, 461, 599, 611, 613, 617, 618, 619], "correspond": [0, 1, 3, 7, 8, 74, 75, 207, 233, 548, 554, 595, 599, 602, 605, 611, 613, 652], "via": [0, 1, 3, 6, 611, 619, 642, 643], "python": [0, 2, 6, 7, 8, 20, 28, 336, 596, 611, 612, 613, 615, 616, 617, 618, 619, 620, 641, 642, 651, 663], "dictionari": [0, 1, 8, 9, 11, 15, 17, 23, 25, 26, 31, 36, 67, 71, 75, 286, 376, 549, 550, 555, 596, 610, 611, 612, 618, 619], "describ": [0, 1, 6, 7, 67, 74, 75, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 226, 228, 596, 597, 598, 599, 601, 602, 604, 605, 607, 610, 611, 612, 613, 614, 617, 618, 619, 620, 623, 628, 637, 638, 639, 640, 641, 642, 645, 650, 651, 654, 657, 659, 663], "08": [0, 618, 648, 656], "03": [0, 610], "indic": [0, 1, 7, 8, 71, 75, 228, 462, 590, 611, 614, 618, 620, 624, 645, 651], "two": [0, 1, 6, 8, 85, 95, 97, 110, 112, 141, 148, 156, 162, 167, 169, 200, 202, 209, 210, 211, 213, 214, 215, 220, 228, 251, 294, 360, 363, 418, 596, 597, 598, 599, 602, 611, 612, 613, 618, 619, 626, 627, 629, 630, 631, 636, 647, 648, 649, 651, 652, 654, 656, 661, 662, 663, 664], "all": [0, 1, 6, 7, 8, 9, 11, 21, 26, 62, 65, 67, 70, 71, 78, 82, 87, 99, 114, 135, 150, 164, 171, 194, 204, 207, 208, 211, 222, 228, 229, 233, 234, 245, 266, 286, 312, 318, 324, 330, 413, 421, 429, 454, 462, 463, 503, 587, 593, 594, 595, 599, 605, 607, 611, 612, 613, 615, 616, 617, 618, 619, 620, 622, 623, 624, 626, 627, 628, 631, 642, 645, 646, 647, 648, 649, 651, 653, 656, 658, 659, 660, 662, 663, 664], "follow": [0, 1, 5, 6, 7, 8, 42, 207, 212, 214, 226, 587, 593, 594, 595, 599, 602, 605, 611, 613, 614, 617, 618, 619, 620, 623, 625, 630, 633, 634, 641, 642, 643, 645, 647, 650, 651, 652, 653, 654, 657, 658, 659, 662, 663], "notat": [0, 611], "ocean": [0, 4, 6, 7, 8, 9, 31, 72, 73, 207, 596, 597, 598, 599, 600, 601, 602, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 637, 638, 639, 640, 641, 642, 643, 644, 645, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 661, 662, 663, 664, 665], "global_ocean": [0, 1, 6, 8, 383, 386, 392, 398, 403, 595, 601, 603, 611, 612, 613, 615, 616, 618, 619, 620, 643, 646, 647, 653, 655, 663, 664, 665], "qu240": [0, 1, 6, 551, 556, 611, 612, 613, 617, 620, 647, 663, 665], "phc": [0, 1, 6, 318, 321, 599, 611, 612, 645, 647, 651, 665], "init": [0, 1, 6, 14, 15, 17, 21, 207, 233, 234, 286, 290, 291, 294, 297, 299, 312, 315, 333, 342, 347, 352, 357, 360, 363, 383, 386, 595, 597, 601, 607, 610, 611, 612, 613, 618, 620, 647, 661, 663, 665], "onli": [0, 1, 6, 7, 8, 23, 26, 207, 208, 219, 220, 226, 462, 466, 499, 501, 503, 595, 598, 599, 605, 606, 611, 612, 616, 617, 618, 619, 620, 625, 626, 630, 633, 634, 635, 636, 638, 641, 642, 645, 648, 650, 651, 654, 657, 658, 659, 660, 662, 663], "some": [0, 1, 6, 8, 26, 208, 462, 474, 599, 605, 607, 610, 611, 612, 613, 614, 617, 618, 619, 620, 622, 630, 637, 638, 639, 640, 641, 642, 645, 646, 651, 663, 664, 665], "thei": [0, 1, 3, 6, 7, 8, 12, 28, 36, 50, 69, 211, 286, 595, 596, 599, 602, 604, 605, 611, 612, 615, 616, 617, 618, 619, 620, 623, 626, 627, 629, 631, 636, 642, 643, 645, 647, 648, 650, 651, 654, 657, 659, 662, 663, 665], "list": [0, 1, 3, 7, 11, 26, 27, 34, 35, 62, 65, 69, 70, 71, 72, 73, 74, 75, 82, 87, 99, 114, 150, 156, 164, 171, 194, 204, 208, 210, 211, 213, 215, 220, 257, 270, 273, 276, 297, 333, 347, 352, 355, 434, 480, 491, 506, 509, 520, 523, 534, 537, 550, 556, 558, 561, 596, 611, 612, 613, 615, 616, 617, 618, 619, 620, 622, 623, 627, 629, 636, 638, 641, 642, 650, 657, 658, 660, 661, 663, 664, 665], "explicitli": [0, 6, 7, 8, 599, 611, 618, 619, 620, 651, 653, 663], "initial_st": [0, 1, 6, 235, 598, 599, 606, 608, 611, 612, 617, 620, 648, 649, 651, 653, 654, 656, 657, 659, 662], "similarli": [0, 1, 6, 8, 611, 613, 617, 618, 619, 642, 647, 663], "ha": [0, 1, 6, 8, 11, 16, 21, 26, 28, 66, 70, 71, 73, 75, 77, 82, 87, 99, 114, 135, 150, 164, 171, 194, 204, 207, 208, 209, 210, 211, 212, 213, 215, 219, 220, 221, 222, 223, 224, 225, 228, 245, 266, 312, 324, 413, 421, 429, 454, 461, 595, 596, 597, 599, 602, 604, 605, 607, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 621, 625, 626, 627, 629, 630, 631, 643, 645, 648, 649, 650, 651, 654, 656, 657, 658, 659, 660, 662, 663], "specifi": [0, 6, 8, 12, 164, 208, 214, 336, 601, 611, 613, 617, 618, 619, 620, 624, 630, 641, 650, 651, 653, 658, 660, 661, 662, 663], "suffix": [0, 71, 82, 87, 99, 114, 150, 164, 171, 194, 204, 210, 211, 213, 214, 215, 220, 611, 651], "c": [0, 1, 6, 71, 114, 123, 211, 226, 228, 611, 613, 623, 627, 637, 638, 639, 640, 641, 642, 647, 657, 658, 660, 663, 665], "number": [0, 1, 6, 8, 11, 18, 20, 21, 23, 24, 35, 39, 43, 44, 45, 46, 47, 60, 61, 64, 65, 71, 82, 87, 99, 114, 135, 150, 164, 171, 194, 204, 208, 212, 214, 230, 231, 234, 245, 266, 277, 312, 324, 330, 355, 356, 398, 413, 421, 429, 454, 461, 483, 492, 595, 596, 599, 602, 605, 607, 610, 611, 612, 615, 618, 619, 620, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 633, 634, 636, 642, 643, 645, 647, 648, 649, 650, 651, 652, 653, 654, 656, 657, 658, 659, 660, 661, 663], "setup": [0, 11, 21, 23, 26, 85, 95, 97, 110, 112, 141, 148, 156, 162, 167, 169, 200, 202, 209, 210, 211, 213, 215, 220, 398, 596, 599, 602, 604, 605, 607, 610, 612, 613, 615, 616, 617, 618, 619, 620, 650, 653, 658, 660, 661, 663, 664], "n": [0, 1, 6, 44, 51, 52, 57, 332, 337, 341, 346, 351, 407, 518, 532, 546, 570, 611, 638, 641, 642, 659, 661, 663], "90c": [0, 611], "91c": [0, 611], "92": [0, 611, 645, 661], "approach": [0, 1, 611, 612, 613, 614, 617, 618, 619, 643, 645, 657], "effici": [0, 1, 291, 599, 611, 651], "doe": [0, 1, 3, 8, 228, 602, 611, 616, 618, 619, 623, 642, 651, 654, 659, 661, 662], "ani": [0, 1, 6, 7, 8, 22, 70, 71, 101, 116, 137, 152, 173, 196, 206, 210, 211, 213, 215, 247, 250, 259, 314, 323, 326, 339, 388, 397, 415, 423, 444, 456, 579, 596, 597, 599, 604, 605, 611, 612, 613, 616, 617, 618, 619, 620, 623, 642, 647, 648, 651, 657, 663], "much": [0, 1, 6, 8, 208, 441, 611, 617, 618, 619, 647, 651, 654, 657, 662], "more": [0, 4, 6, 8, 26, 34, 35, 51, 70, 71, 212, 596, 597, 598, 599, 600, 602, 606, 608, 609, 610, 611, 612, 613, 615, 617, 618, 619, 622, 624, 629, 630, 632, 635, 636, 642, 643, 644, 646, 647, 651, 653, 654, 655, 659, 662, 663, 664], "verbos": [0, 6, 39, 41, 611, 617, 665], "must": [0, 1, 6, 7, 8, 11, 16, 17, 19, 72, 73, 233, 511, 525, 539, 563, 599, 611, 613, 618, 645, 651, 661, 664], "own": [0, 1, 7, 8, 11, 212, 554, 599, 611, 612, 613, 615, 617, 618, 619, 620, 650, 651, 658, 660, 661, 663, 664], "t": [0, 1, 6, 7, 8, 210, 211, 213, 215, 550, 554, 596, 597, 599, 604, 607, 611, 612, 613, 614, 617, 618, 619, 620, 623, 638, 640, 641, 642, 647, 650, 651, 658, 660, 661, 663, 664, 665], "These": [0, 1, 6, 8, 9, 11, 207, 512, 526, 540, 548, 564, 595, 596, 599, 604, 611, 612, 613, 616, 618, 620, 623, 626, 642, 647, 651, 652, 653, 657, 661, 662, 663, 664, 665], "assum": [0, 28, 233, 234, 297, 611, 618, 619, 620, 641, 643], "alwai": [0, 1, 7, 8, 36, 207, 595, 599, 611, 612, 613, 617, 618, 619, 620, 651], "free": [0, 1, 608, 617, 618, 619, 620, 643], "choos": [0, 1, 6, 612, 618, 637, 638, 639, 640, 641, 664], "between": [0, 1, 3, 6, 8, 12, 24, 44, 51, 52, 57, 61, 74, 75, 209, 228, 251, 332, 337, 341, 346, 351, 398, 407, 418, 518, 532, 546, 570, 587, 593, 594, 597, 598, 599, 601, 605, 606, 607, 608, 611, 612, 613, 618, 626, 627, 629, 631, 635, 636, 642, 643, 645, 648, 651, 654, 656, 657, 659], "long": [0, 1, 5, 11, 21, 65, 82, 87, 99, 114, 135, 150, 164, 171, 176, 194, 204, 208, 245, 266, 312, 324, 356, 413, 421, 429, 454, 499, 503, 573, 577, 599, 607, 610, 611, 612, 618, 623, 647, 654, 657, 663], "been": [0, 1, 6, 8, 11, 26, 28, 35, 70, 71, 73, 207, 221, 222, 223, 224, 225, 276, 491, 509, 523, 537, 561, 595, 599, 605, 611, 612, 613, 614, 616, 617, 618, 619, 620, 637, 638, 639, 640, 641, 642, 645, 648, 651, 655, 656, 663], "cached_fil": [0, 6, 9, 611], "json": [0, 6, 8, 9, 34, 611, 641], "command": [0, 1, 8, 20, 65, 67, 222, 557, 611, 612, 613, 615, 616, 617, 618, 619, 638, 641, 642, 647, 663], "line": [0, 1, 7, 8, 65, 605, 611, 612, 613, 616, 617, 618, 619, 627, 636, 657, 663], "tool": [0, 1, 6, 8, 207, 209, 210, 211, 212, 215, 595, 599, 611, 613, 616, 617, 618, 619, 620, 623, 647, 651], "avail": [0, 1, 5, 6, 8, 11, 16, 18, 21, 39, 62, 64, 65, 82, 87, 99, 114, 135, 150, 164, 171, 194, 204, 208, 245, 266, 270, 312, 324, 330, 413, 421, 429, 454, 605, 611, 612, 613, 618, 622, 626, 630, 637, 638, 639, 640, 641, 646, 648, 649, 650, 651, 657, 658, 660, 663, 665], "chrysali": [0, 1, 6, 226, 611, 618, 619, 620, 642, 663], "anvil": [0, 1, 6, 226, 611, 620, 642, 663], "machin": [0, 6, 8, 11, 26, 67, 70, 71, 73, 93, 108, 123, 182, 207, 595, 599, 611, 612, 616, 618, 619, 620, 637, 638, 639, 640, 641], "work": [0, 1, 3, 6, 8, 11, 12, 16, 19, 22, 26, 34, 35, 67, 68, 71, 101, 116, 137, 152, 173, 196, 206, 210, 211, 213, 214, 215, 220, 222, 224, 226, 247, 250, 259, 314, 323, 326, 339, 388, 397, 415, 423, 444, 456, 579, 611, 612, 613, 614, 615, 618, 619, 620, 642, 647, 650, 657, 658, 659, 660, 661, 662, 663, 664], "directori": [0, 6, 8, 11, 12, 16, 22, 26, 34, 35, 38, 67, 68, 70, 71, 72, 73, 74, 75, 91, 101, 106, 116, 137, 152, 173, 180, 196, 206, 207, 226, 247, 250, 259, 314, 323, 326, 339, 388, 397, 415, 423, 444, 456, 579, 595, 596, 599, 602, 605, 612, 613, 615, 616, 618, 619, 620, 626, 638, 641, 650, 651, 657, 658, 660, 661, 663, 664], "copi": [0, 6, 8, 12, 34, 213, 441, 618, 619, 638], "map": [0, 8, 9, 50, 51, 464, 466, 599, 613, 620, 651], "those": [0, 1, 8, 23, 26, 74, 75, 226, 599, 610, 611, 612, 613, 615, 616, 617, 618, 619, 650, 651, 654, 655, 657, 665], "exampl": [0, 1, 3, 4, 6, 7, 8, 228, 599, 611, 612, 613, 614, 615, 617, 618, 619, 620, 624, 626, 638, 645, 646, 651, 663, 664, 665], "name": [0, 1, 6, 7, 8, 9, 11, 12, 14, 15, 17, 23, 24, 25, 26, 28, 31, 35, 37, 38, 39, 43, 50, 55, 59, 60, 61, 69, 70, 71, 72, 73, 74, 75, 80, 82, 87, 91, 99, 106, 114, 123, 135, 150, 164, 171, 180, 194, 204, 236, 245, 266, 277, 279, 283, 312, 315, 327, 330, 331, 336, 340, 345, 350, 355, 356, 376, 379, 383, 386, 389, 392, 398, 403, 406, 413, 429, 442, 446, 462, 464, 466, 474, 480, 492, 551, 554, 555, 556, 557, 576, 577, 586, 596, 599, 604, 611, 612, 613, 615, 617, 618, 619, 620, 624, 626, 627, 628, 629, 631, 636, 641, 648, 651, 656, 663, 665], "culled_mesh": [0, 1, 6, 611, 618, 619], "nc": [0, 1, 6, 8, 91, 106, 180, 210, 213, 220, 235, 297, 549, 554, 599, 605, 607, 610, 611, 612, 617, 618, 619, 651], "becom": [0, 1, 7, 208, 228, 376, 611, 618, 619, 625, 643], "20210730": 0, "when": [0, 1, 6, 8, 14, 15, 17, 20, 26, 27, 36, 37, 38, 39, 68, 74, 75, 156, 208, 209, 210, 211, 213, 214, 215, 220, 226, 592, 596, 599, 602, 604, 605, 607, 610, 611, 612, 613, 616, 617, 618, 619, 623, 624, 625, 626, 627, 631, 637, 638, 639, 640, 641, 645, 647, 651, 657, 663, 664], "call": [0, 1, 6, 8, 11, 20, 26, 27, 28, 42, 60, 68, 209, 210, 211, 213, 214, 215, 217, 218, 220, 226, 228, 297, 596, 599, 602, 605, 607, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 641, 642, 647, 651, 663], "default": [0, 1, 6, 7, 8, 11, 12, 14, 15, 17, 23, 24, 25, 26, 34, 51, 55, 61, 67, 69, 82, 87, 91, 93, 99, 104, 106, 108, 114, 123, 135, 150, 153, 164, 171, 180, 182, 186, 191, 194, 204, 207, 209, 210, 211, 213, 215, 217, 218, 220, 221, 222, 223, 224, 225, 245, 266, 268, 312, 330, 336, 386, 413, 429, 436, 442, 465, 497, 573, 577, 595, 598, 599, 605, 606, 607, 608, 609, 610, 611, 613, 616, 617, 619, 620, 625, 626, 627, 628, 629, 630, 631, 633, 634, 636, 637, 638, 639, 640, 641, 642, 645, 647, 650, 651, 657, 658, 663, 664, 665], "being": [0, 1, 8, 11, 26, 68, 71, 75, 164, 228, 599, 602, 605, 611, 612, 613, 616, 617, 645, 651, 655], "made": [0, 3, 6, 11, 16, 26, 75, 79, 193, 199, 599, 611, 612, 615, 617, 619, 631, 643, 664], "overridden": [0, 611], "contain": [0, 1, 3, 6, 7, 8, 9, 14, 17, 25, 62, 210, 211, 212, 213, 215, 228, 236, 379, 392, 445, 549, 587, 593, 594, 596, 597, 599, 604, 611, 612, 613, 615, 617, 618, 619, 620, 622, 646, 651, 653, 657, 663], "210803": [0, 6], "culled_graph": [0, 1, 6, 611, 618], "info": [0, 1, 6, 8, 59, 60, 61, 233, 234, 462, 474, 599, 607, 610, 611, 618, 619], "critical_passages_mask_fin": [0, 6], "init_mode_forcing_data": [0, 6, 611], "prototyp": [0, 1], "had": [0, 226, 611, 612], "separ": [0, 1, 6, 7, 8, 143, 208, 445, 611, 618, 619, 624, 627, 629, 630, 636, 649, 650, 651, 658, 660, 661, 663], "depend": [0, 1, 6, 8, 22, 101, 116, 137, 152, 173, 196, 206, 247, 250, 259, 314, 323, 326, 339, 388, 397, 415, 423, 444, 456, 465, 579, 598, 599, 602, 611, 613, 615, 617, 618, 619, 620, 641, 642, 645, 650, 651, 652, 663, 664], "earlier": [0, 1], "turn": [0, 1, 11, 611, 614, 618], "out": [0, 1, 8, 14, 15, 17, 23, 24, 25, 66, 222, 446, 461, 599, 605, 611, 612, 613, 618, 619, 620, 626, 645, 651, 656, 657, 659, 663], "veri": [0, 1, 215, 446, 602, 611, 612, 613, 618, 619, 631, 654, 657, 659, 662], "cumbersom": [0, 1], "mani": [0, 1, 6, 8, 611, 612, 613, 615, 616, 617, 618, 619, 624, 626, 628, 631, 646, 648, 650, 651, 655, 656, 658, 660], "subdirectori": [0, 1, 6, 8, 11, 12, 26, 39, 43, 50, 55, 82, 87, 91, 99, 106, 114, 135, 150, 164, 171, 180, 194, 204, 210, 245, 266, 312, 318, 336, 386, 413, 429, 442, 577, 611, 612, 617, 618, 619, 651, 663, 664], "predetermin": 0, "allow": [0, 1, 3, 8, 11, 21, 36, 75, 219, 228, 599, 611, 615, 618, 619, 620, 623, 624, 642, 643, 645, 650, 651, 653, 658, 660, 664], "But": [0, 1, 226, 611, 612, 617, 618, 619, 620, 642], "did": [0, 1, 8, 75], "therefor": [0, 1, 226, 600, 611, 613, 615, 616, 618, 619, 623, 650, 651, 658, 660, 663], "propos": [0, 1, 3], "previou": [0, 6, 8, 212, 228, 357, 599, 611, 617, 619, 620, 647, 659, 663, 665], "section": [0, 1, 3, 4, 7, 8, 51, 61, 207, 209, 210, 211, 215, 228, 424, 438, 462, 464, 468, 471, 472, 473, 585, 587, 593, 594, 595, 599, 600, 605, 607, 610, 611, 613, 614, 617, 618, 619, 620, 625, 626, 627, 637, 638, 639, 640, 641, 642, 645, 650, 652, 656, 657, 658, 660, 661, 663], "far": [0, 1, 77, 587, 593, 594, 602, 612, 618, 619, 621, 657], "flexibl": [0, 8, 598, 611, 613, 616], "about": [0, 1, 6, 7, 8, 11, 611, 612, 617, 618, 619, 620, 623, 624, 638, 657, 660], "clear": [0, 1, 3, 612, 617, 619], "me": [0, 1], "how": [0, 1, 3, 6, 8, 50, 228, 605, 611, 612, 617, 618, 619, 620, 641, 642, 643, 650, 657, 658, 659, 660, 662], "achiev": [0, 46, 619, 643], "without": [0, 1, 6, 8, 12, 210, 360, 573, 599, 610, 611, 612, 613, 620, 626, 629, 630, 640, 642, 651, 657, 663], "branch": [0, 1, 3, 6, 70, 71, 73, 207, 226, 595, 611, 613, 616, 617, 618, 619, 620, 663], "04": [0, 1, 610], "boolean": [0, 8, 590], "fals": [0, 1, 8, 11, 12, 27, 34, 39, 41, 68, 69, 75, 156, 162, 164, 209, 210, 215, 230, 234, 330, 336, 442, 451, 466, 577, 605, 607, 610, 611, 618, 619, 620, 625, 626, 628, 629, 630, 633, 634, 638, 640, 642, 648, 649, 651, 656, 661], "true": [0, 1, 7, 8, 27, 37, 38, 61, 75, 221, 222, 223, 224, 225, 234, 330, 413, 463, 466, 476, 599, 602, 611, 618, 619, 620, 625, 626, 627, 629, 630, 631, 633, 634, 636, 637, 638, 639, 640, 641, 651, 657, 658, 661, 663, 664], "usual": [0, 611, 613, 618, 663], "ignor": 0, "namelist": [0, 1, 7, 11, 14, 15, 22, 23, 24, 61, 82, 87, 99, 101, 114, 116, 137, 150, 152, 164, 171, 173, 194, 196, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 219, 220, 247, 250, 259, 282, 415, 423, 444, 456, 485, 487, 514, 528, 542, 566, 579, 595, 596, 597, 598, 599, 602, 604, 605, 606, 607, 608, 610, 612, 616, 617, 620, 626, 628, 648, 651, 654, 656, 662], "steam": 0, "also": [0, 1, 3, 6, 7, 8, 20, 36, 74, 75, 212, 219, 228, 587, 593, 594, 596, 599, 605, 607, 609, 610, 611, 612, 613, 618, 619, 620, 628, 630, 641, 642, 643, 645, 647, 648, 649, 651, 656, 657, 659, 660, 662, 663, 664], "along": [0, 1, 462, 596, 599, 602, 604, 605, 610, 611, 616, 618, 619, 643, 651, 657], "path": [0, 1, 6, 8, 11, 12, 16, 26, 34, 35, 36, 37, 38, 39, 42, 67, 70, 71, 72, 73, 74, 75, 207, 210, 233, 234, 235, 595, 611, 612, 613, 615, 618, 620, 637, 638, 639, 640, 641, 642, 651, 663, 664], "By": [0, 1, 6, 8, 207, 595, 605, 611, 618, 619, 620, 627, 648, 649, 650, 654, 656, 657, 658], "empti": [0, 36, 611, 612, 615, 618, 619], "onc": [0, 1, 8, 209, 210, 211, 213, 215, 220, 596, 599, 602, 605, 613, 620, 643, 650, 651, 657, 663], "white": [0, 636], "strip": [0, 612], "awai": [0, 3, 178, 611, 619], "accomplish": [0, 1, 6, 612, 619], "special": [0, 1, 6, 615], "_all": [0, 70, 71], "first": [0, 1, 8, 70, 71, 210, 211, 212, 213, 215, 220, 330, 596, 597, 599, 602, 604, 605, 607, 610, 611, 612, 613, 614, 617, 618, 619, 626, 627, 628, 629, 631, 636, 637, 638, 639, 640, 641, 642, 650, 651, 653, 654, 657, 661, 663], "start": [0, 1, 6, 7, 8, 270, 596, 602, 605, 611, 612, 616, 622, 631, 638, 641, 642, 643, 646, 651, 653, 657], "after": [0, 1, 7, 11, 12, 16, 56, 61, 207, 226, 445, 588, 589, 595, 599, 600, 605, 611, 617, 620, 626, 641, 651, 656, 663], "remaind": [0, 619], "append": [0, 6, 599], "conveni": [0, 1, 6, 587, 593, 594, 611, 615, 618, 619, 620, 635, 647, 651, 657, 663], "multipl": [0, 1, 6, 7, 8, 210, 211, 212, 213, 215, 220, 599, 611, 612, 617, 618, 619, 626, 627, 628, 629, 631, 636, 642, 648, 651, 656, 663], "global_converg": [0, 511, 525, 539, 543, 563, 567, 595, 603, 617, 618, 619, 646, 655, 660], "cosine_bel": [0, 480, 488, 618, 619], "qu60_mesh": 0, "qu60_init": 0, "qu90_mesh": 0, "qu90_init": 0, "qu120_mesh": 0, "qu120_init": 0, "qu150_mesh": 0, "qu150_init": 0, "qu180_mesh": 0, "qu180_init": 0, "qu210_mesh": 0, "qu210_init": 0, "qu240_mesh": 0, "qu240_init": 0, "individu": [0, 1, 8, 75, 611, 612, 618, 623, 624, 641, 642, 663, 664], "while": [0, 1, 8, 210, 211, 213, 215, 220, 596, 599, 602, 611, 614, 615, 618, 619, 626, 651, 654, 657], "singl": [0, 1, 6, 8, 600, 601, 611, 612, 615, 617, 618, 619, 624, 625, 633, 634, 635, 642, 647, 650, 652, 653, 658, 660, 661], "featur": [0, 1, 612, 615, 618, 619, 620, 647, 648, 656, 659], "too": [0, 1, 11, 21, 65, 602, 611, 612, 618, 619, 643, 650, 651, 658, 660], "broadli": [0, 612], "probabl": [0, 1, 462, 618, 619, 642], "want": [0, 1, 3, 6, 8, 28, 611, 613, 614, 617, 618, 619, 620, 629, 630, 633, 634, 636, 641, 663, 664], "cosin": [0, 276, 279, 283, 515, 529, 543, 567, 598, 606, 608, 650, 660], "bell": [0, 276, 279, 283, 515, 529, 543, 567, 598, 606, 608, 650, 660], "abov": [0, 1, 6, 7, 8, 330, 441, 462, 599, 605, 611, 612, 613, 618, 619, 620, 629, 636, 650, 651, 653, 657, 658, 663, 665], "modul": [0, 1, 5, 6, 14, 17, 25, 42, 221, 222, 223, 224, 225, 226, 228, 599, 611, 614, 615, 616, 617, 618, 619, 620, 637, 638, 639, 640, 641, 642, 663], "take": [0, 1, 6, 7, 8, 36, 208, 210, 599, 611, 613, 616, 617, 618, 619, 623, 630, 633, 634, 657, 665], "dry_run": [0, 6, 34], "doesn": [0, 1, 8, 210, 211, 213, 215, 596, 597, 604, 611, 612, 617, 618, 619, 642, 651], "date_str": [0, 6, 34], "let": [0, 6, 599, 613, 615, 618, 619, 620, 641], "suppli": [0, 1, 6, 7, 8, 330, 611, 613, 618, 657], "yymmdd": [0, 34, 599, 620, 651], "than": [0, 1, 6, 8, 11, 12, 21, 36, 82, 87, 99, 114, 135, 150, 164, 171, 194, 204, 226, 245, 266, 312, 324, 413, 421, 429, 454, 596, 602, 611, 612, 613, 614, 617, 618, 619, 624, 630, 633, 634, 643, 645, 648, 651, 654, 656, 657, 660, 662, 665], "todai": [0, 6, 34], "As": [0, 1, 5, 6, 8, 45, 599, 611, 612, 613, 618, 619, 620, 624, 625, 645, 651, 659, 662, 665], "state": [0, 1, 63, 176, 215, 228, 235, 596, 597, 598, 599, 600, 602, 604, 605, 606, 607, 608, 610, 618, 631, 657, 662], "To": [0, 1, 3, 6, 8, 75, 207, 210, 211, 212, 213, 215, 220, 226, 228, 595, 611, 612, 613, 617, 618, 619, 630, 637, 638, 639, 640, 641, 642, 645, 650, 658, 660, 661, 663], "produc": [0, 1, 8, 11, 16, 34, 82, 87, 99, 114, 150, 164, 171, 194, 204, 209, 210, 212, 215, 239, 251, 260, 286, 290, 291, 294, 297, 299, 312, 315, 333, 342, 347, 352, 357, 360, 363, 376, 383, 386, 398, 418, 445, 596, 597, 598, 599, 600, 602, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 618, 619, 623, 647, 649, 651, 657, 662], "mpas_cor": [0, 1, 8, 11, 26, 31, 61, 72, 73, 79, 84, 94, 109, 134, 140, 155, 166, 183, 188, 193, 199, 237, 263, 272, 285, 366, 375, 408, 426, 440, 477, 496, 505, 572, 611, 612, 618, 619], "_cached_fil": [0, 8, 611], "base": [0, 1, 6, 8, 9, 11, 12, 18, 25, 26, 31, 34, 35, 49, 54, 55, 70, 71, 72, 73, 146, 207, 211, 213, 226, 228, 282, 330, 336, 446, 487, 514, 528, 542, 566, 587, 588, 589, 590, 591, 592, 593, 594, 595, 598, 599, 601, 605, 606, 607, 610, 611, 612, 613, 615, 617, 619, 620, 629, 630, 633, 634, 636, 637, 638, 639, 640, 641, 642, 645, 651, 653, 657, 664], "alreadi": [0, 1, 5, 8, 28, 38, 461, 611, 612, 613, 618, 619, 620, 635, 636, 642, 645, 650, 651, 658, 660, 661, 663], "exist": [0, 1, 7, 8, 11, 16, 23, 38, 72, 73, 596, 611, 612, 613, 614, 617, 618, 619, 642, 651, 665], "befor": [0, 1, 6, 8, 20, 25, 209, 210, 211, 212, 215, 445, 599, 605, 611, 612, 613, 614, 617, 618, 619, 645, 650, 651, 657, 658, 660, 661, 663], "inform": [0, 1, 6, 7, 8, 11, 75, 392, 611, 613, 620, 622, 638, 646, 651, 663], "yet": [0, 1, 224, 599, 611, 612, 613, 617, 618, 619, 651], "point": [0, 1, 6, 33, 38, 207, 210, 222, 330, 393, 441, 595, 599, 611, 612, 613, 618, 619, 620, 628, 630, 633, 634, 642, 657, 663], "yesterdai": 0, "8": [0, 1, 8, 45, 294, 596, 599, 610, 611, 613, 618, 620, 636, 648, 650, 651, 653, 657, 658, 660, 662, 663], "3": [0, 1, 8, 45, 210, 211, 212, 213, 215, 220, 228, 470, 499, 501, 503, 549, 550, 573, 577, 596, 599, 604, 605, 608, 610, 611, 613, 614, 617, 618, 619, 620, 623, 625, 626, 627, 628, 629, 630, 631, 636, 641, 642, 645, 647, 648, 650, 656, 657, 658, 659, 660, 661, 662, 663], "qu60": 0, "qu90": 0, "qu120": [0, 551], "qu150": 0, "qu180": 0, "qu210": 0, "done": [0, 1, 21, 611, 618, 619, 663], "wa": [0, 1, 8, 37, 74, 75, 226, 599, 611, 612, 613, 614, 617, 618, 619, 620, 624, 645, 649, 651, 654, 663], "ocean_cached_fil": [0, 6], "graph": [0, 1, 20, 59, 60, 61, 209, 210, 211, 212, 215, 233, 234, 596, 599, 602, 604, 605, 607, 610, 611, 618, 619, 620, 651], "back": [0, 7, 212, 606, 618, 619, 628, 638, 656, 661, 663], "repo": [0, 1, 3, 6, 207, 595, 616, 618, 619], "commit": [0, 1, 612, 613], "master": [0, 7, 595, 613, 618, 619, 666], "pull": [0, 1, 7, 599, 612, 618, 619, 620, 623, 651], "request": [0, 1, 7, 60, 61, 588, 589, 599, 611, 612, 614, 618, 619, 620, 623, 650, 651, 658, 660, 661], "string": [0, 1, 6, 8, 512, 526, 540, 564, 611], "end": [0, 1, 210, 211, 213, 215, 220, 299, 302, 304, 306, 308, 310, 376, 596, 599, 602, 605, 611, 612, 613, 615, 618, 638, 649, 650], "desir": [0, 1, 8, 75, 219, 228, 599, 611, 613, 618, 619, 620, 651, 663], "lean": 0, "heavili": [0, 1], "assumpt": 0, "part": [0, 1, 4, 6, 7, 8, 11, 26, 82, 87, 99, 114, 135, 150, 164, 171, 194, 204, 208, 233, 234, 245, 266, 279, 312, 324, 371, 386, 413, 421, 429, 442, 454, 484, 499, 511, 525, 539, 563, 577, 605, 607, 610, 611, 612, 613, 616, 617, 618, 619, 623, 629, 636, 645, 651, 654], "nevertheless": 0, "were": [0, 1, 226, 462, 611, 612, 615, 617, 618, 619, 620, 640, 645], "necessari": [0, 7, 611, 618, 619, 653], "make": [0, 5, 6, 12, 13, 36, 44, 45, 47, 59, 75, 207, 221, 222, 223, 224, 225, 226, 233, 239, 251, 260, 286, 294, 360, 363, 410, 418, 587, 593, 594, 595, 596, 599, 602, 604, 605, 611, 612, 613, 615, 620, 625, 626, 627, 629, 630, 631, 636, 637, 638, 639, 640, 641, 642, 643, 648, 650, 651, 653, 654, 657, 663, 665], "symlink": [0, 1, 6, 11, 12, 441, 599, 612, 613, 618, 619, 651], "locat": [0, 1, 6, 8, 26, 70, 71, 73, 207, 228, 233, 379, 392, 462, 595, 601, 602, 605, 606, 611, 613, 615, 618, 620, 637, 638, 639, 640, 641, 642, 645, 648, 650, 653, 656, 658, 663], "uncach": [0, 34], "group": [0, 8, 9, 10, 11, 26, 31, 32, 79, 80, 84, 85, 94, 95, 97, 104, 109, 110, 112, 119, 124, 129, 134, 140, 141, 143, 148, 153, 155, 156, 160, 162, 166, 167, 169, 176, 178, 183, 186, 188, 191, 193, 197, 199, 200, 202, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 237, 239, 242, 245, 251, 254, 257, 260, 263, 264, 272, 273, 285, 286, 291, 294, 297, 299, 315, 318, 327, 333, 342, 347, 352, 357, 360, 363, 366, 367, 375, 383, 389, 403, 408, 410, 418, 426, 427, 429, 433, 434, 436, 440, 451, 477, 480, 488, 496, 503, 505, 506, 520, 534, 549, 551, 554, 558, 572, 573, 582, 595, 596, 597, 598, 599, 600, 601, 602, 604, 605, 606, 607, 608, 609, 610, 615, 616, 620, 622, 624, 625, 626, 627, 628, 629, 630, 631, 633, 634, 635, 636, 637, 639, 641, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 656, 657, 658, 659, 660, 661, 662, 664, 665], "public_html": [0, 1, 637, 639], "mpas_standalonedata": [0, 1, 8, 611, 620, 637, 638, 639, 640, 641, 642], "constructor": [0, 8, 210, 596, 597, 599, 604, 618, 619], "construct": [0, 1, 78, 209, 210, 211, 212, 215, 229, 585, 587, 588, 589, 593, 594, 599, 611, 618, 619, 651], "quwisc240": [0, 1, 340, 611, 612, 663, 665], "ssh_adjust": [0, 1, 595, 599, 611, 620, 654, 657], "ec30to60": [0, 1, 663, 665], "wc14": [0, 663, 665], "ecwisc30to60": [0, 1, 331, 663, 665], "sowisc12to60": [0, 345, 350, 611, 663, 665], "togeth": [0, 611, 615, 617, 618, 665], "performance_test": [0, 1, 611, 647, 665], "global": [0, 8, 31, 228, 272, 273, 285, 286, 291, 294, 297, 299, 312, 315, 318, 327, 330, 333, 336, 342, 347, 352, 357, 360, 363, 389, 403, 480, 488, 506, 517, 520, 531, 534, 545, 558, 569, 598, 599, 601, 608, 609, 611, 616, 617, 620, 641, 651, 653, 659, 662, 663], "ran": [0, 1, 619], "successfulli": [0, 1, 208, 286], "bit": [0, 1, 156, 214, 611, 612, 615, 619, 623, 625, 626, 627, 629, 630, 631, 636, 643, 647, 648, 654, 663], "nightli": [0, 1, 3, 613, 651, 655, 663, 665], "cosine_bell_cached_init": [0, 663, 665], "fro": 0, "resolut": [0, 8, 43, 46, 50, 51, 85, 89, 91, 95, 97, 99, 102, 104, 106, 119, 143, 145, 156, 158, 162, 164, 184, 189, 210, 211, 213, 214, 215, 217, 218, 220, 238, 239, 242, 245, 248, 251, 254, 257, 260, 264, 266, 273, 276, 277, 279, 409, 410, 413, 416, 418, 433, 434, 442, 447, 449, 451, 454, 457, 459, 478, 480, 484, 491, 492, 494, 497, 499, 501, 503, 506, 509, 511, 515, 517, 520, 523, 525, 529, 531, 534, 537, 539, 543, 545, 550, 551, 555, 556, 558, 561, 563, 567, 569, 573, 576, 577, 580, 582, 596, 597, 598, 599, 600, 601, 602, 604, 605, 606, 607, 608, 609, 610, 611, 617, 620, 623, 625, 626, 627, 628, 629, 630, 631, 633, 634, 635, 636, 643, 648, 649, 651, 652, 653, 654, 656, 657, 659, 662, 664], "remain": [0, 1, 445, 605, 617, 627, 643, 654, 657], "mention": [0, 1, 612], "40c": 0, "41c": 0, "42": [0, 1], "60c": 0, "61c": 0, "62": 0, "80c": 0, "81c": 0, "82": 0, "85c": 0, "86c": 0, "87": 0, "95c": 0, "96c": 0, "97": 0, "sere": 0, "expect": [0, 1, 3, 8, 156, 214, 228, 297, 337, 512, 526, 540, 564, 599, 605, 611, 613, 616, 618, 623, 643, 644, 647, 651, 655, 660, 662], "basenam": 0, "extens": [0, 463, 619, 620], "altern": [0, 1, 6, 8, 618, 663], "No": [0, 1, 8, 616], "perform": [0, 1, 3, 6, 8, 19, 20, 22, 30, 43, 74, 75, 81, 82, 85, 87, 95, 97, 99, 101, 104, 110, 112, 114, 116, 119, 135, 137, 141, 148, 150, 152, 153, 156, 157, 162, 163, 164, 167, 169, 171, 173, 176, 194, 196, 200, 202, 204, 206, 209, 210, 211, 213, 214, 215, 219, 220, 228, 231, 242, 245, 247, 250, 254, 259, 266, 272, 279, 285, 286, 294, 297, 299, 312, 333, 342, 347, 352, 357, 360, 363, 367, 371, 383, 386, 410, 413, 415, 423, 429, 433, 442, 444, 456, 484, 499, 503, 504, 511, 525, 539, 563, 573, 577, 579, 582, 595, 596, 597, 598, 599, 602, 604, 605, 606, 608, 609, 610, 611, 615, 616, 617, 618, 619, 620, 626, 627, 628, 629, 631, 636, 642, 643, 647, 648, 649, 651, 653, 654, 656, 659, 660, 661, 662, 665], "ensur": [0, 1, 3, 8, 36, 209, 210, 211, 213, 214, 215, 220, 596, 599, 602, 607, 610, 611, 612, 613, 619, 623, 647, 651], "don": [0, 1, 7, 8, 611, 612, 613, 617, 618, 619, 640, 641, 651, 664], "forese": 0, "problem": [0, 1, 8, 208, 611, 614, 618, 623, 647], "requr": 0, "howev": [0, 1, 611, 617, 643, 651], "relax": [0, 626], "outlin": 0, "author": [1, 599, 620, 651, 653], "2020": [1, 600, 651, 652, 657], "11": [1, 8, 45, 234, 659, 662], "16": [1, 599, 611, 618, 619, 620, 630, 636, 651, 658, 659, 660, 663], "infrastructur": [1, 612, 651], "serv": [1, 70, 71, 72, 73, 597, 611, 618], "u": [1, 599, 611, 619, 641, 642, 651], "well": [1, 3, 8, 209, 210, 211, 213, 215, 220, 228, 270, 299, 590, 596, 597, 599, 602, 604, 605, 610, 611, 615, 617, 618, 619, 620, 623, 624, 647, 649, 663, 664], "sever": [1, 8, 211, 212, 215, 467, 475, 599, 601, 607, 610, 611, 612, 613, 615, 618, 619, 623, 646, 647, 651, 663, 665], "shortcom": 1, "emerg": 1, "over": [1, 6, 8, 36, 156, 226, 446, 553, 605, 611, 612, 616, 617, 618, 619, 624, 642, 643, 645, 648, 651, 653, 654, 656, 657, 659, 660, 662], "year": [1, 209, 210, 211, 212, 215, 219, 499, 503, 573, 577, 599, 616, 626, 627, 628, 629, 630, 631, 635, 651, 657, 659], "found": [1, 8, 599, 611, 612, 613, 616, 618, 619, 620, 642, 643], "current": [1, 3, 6, 8, 11, 21, 74, 75, 207, 226, 228, 595, 598, 599, 605, 606, 607, 610, 611, 612, 613, 615, 616, 618, 619, 620, 623, 624, 630, 642, 643, 645, 646, 647, 648, 650, 651, 653, 654, 657, 658, 662, 663, 664, 665], "system": [1, 5, 6, 11, 21, 63, 65, 66, 82, 87, 99, 114, 135, 150, 164, 171, 194, 204, 221, 222, 223, 224, 225, 226, 245, 266, 312, 324, 413, 421, 429, 454, 611, 614, 616, 618, 619, 620, 637, 638, 639, 640, 641, 642, 653, 663], "xml": [1, 611, 612, 615, 616, 619], "pars": [1, 8, 14, 15, 17, 611, 612, 617], "script": [1, 5, 6, 8, 33, 72, 209, 210, 211, 212, 215, 226, 612, 615, 616, 619, 620, 626, 638, 642, 657], "stream": [1, 7, 8, 11, 17, 22, 25, 61, 82, 87, 99, 101, 114, 116, 137, 150, 152, 164, 171, 173, 194, 196, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 219, 220, 247, 250, 259, 415, 423, 444, 456, 579, 595, 596, 597, 599, 602, 604, 605, 607, 610, 612, 616, 620, 651], "intuit": 1, "second": [1, 8, 82, 87, 99, 114, 150, 164, 171, 194, 204, 610, 611, 612, 618, 619, 624, 626, 627, 629, 631, 636, 648, 649, 651, 654, 657, 660, 661], "lend": 1, "themselv": [1, 605, 611, 612, 616, 619, 651], "reus": [1, 611, 612, 616, 618, 619], "lead": [1, 228, 657], "config": [1, 6, 7, 11, 25, 26, 28, 37, 49, 51, 54, 60, 61, 63, 64, 65, 66, 67, 70, 71, 73, 75, 93, 108, 123, 182, 207, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 226, 228, 236, 238, 274, 282, 312, 336, 355, 356, 409, 481, 485, 487, 489, 507, 514, 521, 528, 535, 542, 559, 566, 576, 585, 587, 588, 589, 593, 594, 595, 596, 597, 598, 599, 600, 602, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 616, 617, 635, 645, 663, 664], "third": [1, 619, 624, 657], "edit": [1, 6, 7, 75, 613, 618, 619, 651, 657, 663], "step": [1, 2, 6, 7, 8, 26, 27, 29, 34, 43, 48, 50, 53, 55, 56, 60, 61, 64, 65, 67, 68, 69, 70, 71, 75, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 96, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 111, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 126, 127, 128, 131, 132, 133, 135, 136, 137, 138, 139, 142, 144, 145, 147, 149, 150, 151, 152, 154, 158, 159, 161, 164, 165, 168, 170, 171, 172, 173, 174, 175, 177, 179, 180, 181, 182, 184, 185, 187, 189, 190, 192, 194, 195, 196, 198, 201, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 231, 241, 244, 245, 246, 247, 248, 249, 250, 253, 256, 257, 258, 259, 262, 266, 267, 268, 269, 270, 271, 275, 276, 278, 279, 280, 281, 283, 284, 288, 293, 296, 297, 298, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 317, 320, 321, 322, 324, 325, 327, 329, 330, 331, 333, 335, 336, 338, 340, 344, 345, 347, 349, 350, 352, 354, 355, 359, 362, 365, 369, 370, 371, 372, 373, 374, 376, 380, 385, 386, 387, 391, 392, 394, 395, 396, 398, 401, 403, 405, 406, 412, 413, 414, 415, 416, 417, 420, 421, 422, 423, 424, 425, 429, 430, 431, 432, 434, 435, 438, 439, 442, 443, 444, 447, 448, 449, 450, 453, 454, 455, 456, 457, 458, 459, 460, 478, 479, 482, 483, 484, 485, 486, 490, 491, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 508, 509, 510, 511, 512, 513, 515, 516, 517, 519, 522, 523, 524, 525, 526, 527, 529, 530, 531, 533, 536, 537, 538, 539, 540, 541, 543, 544, 545, 547, 549, 560, 561, 562, 563, 564, 565, 567, 568, 569, 571, 575, 577, 578, 579, 580, 581, 584, 596, 597, 598, 600, 601, 602, 604, 605, 606, 607, 608, 609, 610, 612, 613, 615, 616, 620, 624, 625, 626, 627, 628, 629, 630, 631, 633, 634, 636, 641, 645, 648, 649, 654, 656, 657, 659, 661, 662, 664, 665], "fourth": [1, 619, 629], "easili": [1, 618], "constrain": [1, 18, 228, 234], "us": [1, 6, 7, 8, 11, 12, 20, 21, 23, 25, 26, 29, 34, 37, 51, 59, 60, 63, 65, 68, 75, 79, 82, 86, 87, 95, 96, 97, 98, 99, 104, 105, 110, 111, 112, 113, 114, 120, 126, 131, 135, 141, 142, 144, 148, 149, 150, 153, 154, 156, 161, 162, 164, 168, 170, 171, 174, 177, 179, 187, 192, 193, 194, 198, 199, 201, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 226, 228, 234, 241, 244, 245, 253, 256, 262, 266, 270, 273, 276, 286, 291, 294, 297, 299, 301, 302, 304, 306, 308, 310, 312, 315, 318, 321, 324, 330, 333, 336, 342, 347, 352, 357, 360, 363, 389, 392, 395, 398, 412, 413, 420, 421, 429, 441, 445, 454, 464, 466, 499, 501, 503, 512, 526, 540, 550, 557, 564, 575, 584, 585, 587, 588, 589, 593, 594, 595, 596, 597, 599, 601, 602, 604, 605, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 623, 624, 625, 626, 627, 629, 630, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 645, 647, 648, 649, 650, 651, 653, 654, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665], "hard": [1, 597, 612, 618, 619, 643], "fifth": [1, 659], "better": [1, 8, 226, 617], "autom": [1, 212, 616], "sixth": 1, "impos": 1, "test_group": [1, 8, 9, 10, 11, 26, 80, 85, 95, 97, 104, 110, 112, 119, 124, 129, 141, 143, 148, 153, 156, 160, 162, 167, 169, 176, 178, 186, 191, 197, 200, 202, 239, 242, 251, 254, 260, 264, 273, 286, 291, 294, 297, 299, 315, 318, 327, 333, 342, 347, 352, 357, 360, 363, 367, 383, 389, 403, 410, 418, 427, 433, 436, 451, 480, 488, 503, 506, 520, 534, 558, 573, 582, 599, 611, 617, 618, 619], "resoltuion": 1, "test_cas": [1, 6, 8, 11, 31, 32, 43, 50, 55, 67, 70, 71, 74, 75, 82, 87, 89, 91, 99, 102, 106, 114, 117, 121, 127, 132, 135, 138, 145, 150, 158, 164, 171, 174, 180, 184, 189, 194, 204, 209, 210, 215, 245, 248, 257, 266, 268, 270, 276, 279, 283, 290, 302, 304, 306, 308, 310, 312, 321, 324, 331, 336, 340, 345, 350, 369, 371, 373, 376, 386, 392, 395, 398, 406, 413, 416, 421, 424, 429, 431, 434, 438, 442, 447, 449, 454, 457, 459, 478, 484, 491, 494, 497, 499, 501, 509, 511, 515, 517, 523, 525, 529, 531, 537, 539, 543, 545, 561, 563, 567, 569, 577, 580, 596, 599, 604, 611, 617, 618, 619, 620, 657, 663], "rigid": [1, 660], "applic": [1, 612, 651], "final": [1, 3, 7, 209, 210, 212, 215, 297, 330, 549, 596, 599, 602, 604, 605, 607, 610, 611, 617, 618, 619, 624, 628, 630, 651, 653, 657, 661], "help": [1, 6, 611, 616, 618, 619, 622, 642, 646, 651], "either": [1, 6, 7, 8, 45, 210, 222, 602, 611, 613, 615, 617, 618, 619, 620, 626, 627, 629, 630, 645, 651, 663], "interest": [1, 618, 619, 651, 657], "address": [1, 620], "hope": [1, 612], "significantli": [1, 8, 610, 624, 645, 651, 657], "easier": [1, 611, 612, 613, 618, 619, 620, 651, 663, 665], "12": [1, 8, 45, 476, 597, 599, 600, 608, 610, 626, 638, 651, 660], "luke": 1, "van": 1, "roekel": 1, "written": [1, 7, 8, 11, 26, 462, 474, 599, 611, 618, 660], "primarili": [1, 623], "model": [1, 3, 6, 11, 12, 13, 14, 15, 17, 70, 71, 73, 82, 87, 99, 114, 150, 164, 171, 178, 194, 204, 207, 209, 210, 211, 212, 213, 215, 220, 221, 222, 223, 224, 225, 226, 228, 231, 239, 251, 254, 260, 366, 367, 369, 371, 373, 418, 426, 433, 595, 596, 599, 600, 601, 604, 613, 614, 615, 616, 618, 619, 620, 622, 623, 625, 626, 628, 629, 630, 631, 632, 633, 634, 636, 637, 638, 639, 640, 641, 642, 643, 646, 647, 648, 649, 651, 652, 653, 654, 656, 657, 659, 662, 663], "get": [1, 7, 8, 11, 14, 15, 17, 26, 27, 45, 60, 62, 64, 68, 226, 280, 312, 355, 356, 485, 599, 611, 612, 613, 615, 620, 645, 663], "direct": [1, 8, 596, 597, 602, 604, 610, 611, 618, 641, 648, 654, 656, 662], "common": [1, 7, 8, 20, 26, 31, 210, 212, 213, 219, 220, 596, 597, 602, 604, 605, 611, 612, 614, 615, 620, 663, 664, 665], "languag": [1, 557, 641], "rather": [1, 3, 8, 11, 12, 36, 226, 596, 602, 611, 614, 618, 619, 643, 645, 651], "custom": [1, 6, 8, 35, 36, 37, 70, 71, 73, 207, 222, 595, 611, 617, 619, 620, 641, 663], "tag": [1, 611, 616], "importantli": 1, "possibl": [1, 3, 8, 46, 228, 599, 602, 611, 612, 617, 618, 619, 645, 651, 653], "balanc": [1, 599, 602, 605, 651, 654, 657], "readabl": [1, 612, 619], "reusabl": 1, "risk": [1, 613, 654], "redesign": 1, "difficult": [1, 226, 611, 612, 642, 643], "contribut": [1, 612], "go": [1, 8, 611, 612, 613, 617, 618, 619, 641, 651], "best": [1, 611], "reusibl": 1, "In": [1, 3, 7, 8, 11, 210, 212, 228, 291, 598, 599, 607, 611, 613, 616, 617, 618, 619, 620, 623, 635, 636, 642, 643, 645, 651, 653, 654, 659, 660, 661, 662, 663, 664, 665], "extern": [1, 11, 207, 595, 611, 612, 620, 622, 646], "often": [1, 11, 611, 612, 615, 617, 618, 620, 664, 665], "mpas_tool": [1, 8, 209, 210, 211, 212, 215, 596, 597, 599, 601, 602, 604, 605, 608, 609, 610, 611, 612, 618, 619, 651], "outsid": [1, 143, 611, 630, 633, 634, 657], "prefer": [1, 3, 611, 618, 619, 620, 623], "itself": [1, 7, 8, 11, 219, 611, 617, 618, 619, 663], "attempt": [1, 226, 616, 642, 643], "led": [1, 612], "frequent": [1, 207, 595], "unintend": 1, "consequ": 1, "link": [1, 3, 7, 8, 12, 13, 38, 226, 557, 599, 602, 605, 611, 612, 613, 618, 619, 622, 642, 646, 651, 663], "chang": [1, 6, 8, 25, 50, 207, 228, 595, 605, 611, 612, 613, 615, 617, 618, 619, 620, 623, 627, 628, 638, 641, 643, 645, 647, 651, 654, 657, 659, 660, 662, 663, 665], "one": [1, 3, 6, 7, 8, 12, 24, 26, 34, 35, 38, 61, 70, 71, 73, 75, 85, 95, 97, 110, 112, 141, 148, 156, 162, 167, 169, 202, 209, 210, 211, 213, 214, 215, 220, 231, 238, 251, 286, 360, 418, 595, 596, 597, 599, 602, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 623, 624, 629, 636, 641, 642, 643, 645, 649, 650, 651, 653, 654, 657, 658, 659, 660, 661, 663, 664, 665], "sophist": [1, 611], "method": [1, 8, 9, 11, 19, 20, 26, 27, 28, 29, 30, 31, 36, 42, 43, 47, 50, 51, 52, 55, 56, 78, 79, 80, 81, 82, 84, 85, 86, 87, 89, 91, 94, 95, 96, 97, 98, 99, 102, 104, 105, 106, 109, 110, 111, 112, 113, 114, 117, 119, 120, 121, 124, 126, 127, 129, 131, 132, 134, 135, 138, 140, 141, 142, 143, 144, 145, 148, 149, 150, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 174, 176, 177, 178, 179, 180, 183, 184, 186, 187, 188, 189, 191, 192, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 208, 228, 229, 234, 237, 239, 241, 242, 244, 245, 248, 251, 253, 254, 256, 257, 260, 262, 263, 264, 266, 268, 270, 272, 273, 276, 279, 283, 285, 286, 291, 294, 297, 299, 301, 302, 304, 306, 308, 310, 312, 315, 318, 321, 324, 327, 331, 333, 336, 340, 342, 345, 347, 350, 352, 357, 360, 363, 366, 367, 369, 371, 373, 375, 376, 383, 386, 389, 392, 395, 398, 403, 406, 408, 410, 412, 413, 416, 418, 420, 421, 424, 426, 427, 429, 431, 433, 434, 436, 438, 440, 442, 447, 449, 451, 454, 457, 459, 462, 474, 477, 478, 480, 484, 488, 491, 494, 496, 497, 499, 501, 503, 504, 505, 506, 509, 511, 515, 517, 520, 523, 525, 529, 531, 534, 537, 539, 543, 545, 558, 561, 563, 567, 569, 572, 573, 575, 577, 580, 582, 584, 599, 601, 611, 612, 617, 624, 651], "beyond": [1, 607, 625], "isol": 1, "read": [1, 8, 9, 11, 14, 17, 26, 377, 378, 379, 446, 557, 599, 611, 612, 618, 619, 653, 661], "larg": [1, 8, 228, 599, 602, 605, 611, 625, 637, 643, 651, 654, 660], "unavail": 1, "files_for_e3sm": [1, 8, 611, 620, 647], "dedic": 1, "again": [1, 6, 224, 228, 611, 613, 614, 617, 618, 619, 651, 663], "from": [1, 2, 3, 6, 7, 8, 9, 11, 12, 14, 17, 26, 28, 34, 35, 37, 38, 59, 60, 61, 65, 69, 71, 74, 75, 91, 93, 106, 108, 121, 123, 127, 132, 135, 174, 178, 180, 182, 209, 210, 211, 212, 213, 215, 219, 220, 226, 228, 232, 245, 276, 297, 299, 302, 304, 306, 308, 310, 312, 324, 330, 333, 336, 342, 347, 352, 355, 356, 377, 410, 421, 429, 441, 445, 446, 449, 454, 457, 459, 462, 467, 474, 485, 491, 497, 509, 523, 537, 549, 550, 551, 557, 561, 591, 596, 597, 598, 599, 600, 601, 602, 604, 605, 606, 607, 608, 610, 612, 614, 615, 616, 617, 618, 619, 620, 623, 626, 627, 628, 629, 630, 631, 633, 634, 636, 637, 638, 639, 640, 641, 643, 645, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665], "awkward": [1, 618], "involv": [1, 8, 75, 599, 611, 615, 661], "pio": [1, 24, 61, 596, 599, 602, 604, 605, 607, 610, 611], "task": [1, 8, 11, 20, 21, 24, 60, 61, 65, 82, 87, 99, 114, 135, 150, 164, 171, 194, 204, 245, 266, 312, 324, 413, 421, 429, 454, 611, 612, 618, 619, 637, 638, 639, 640, 641, 642, 653], "node": [1, 8, 11, 21, 23, 24, 61, 63, 64, 65, 226, 612, 613, 620, 637, 638, 639, 640, 641, 642, 651, 663], "exacerb": 1, "even": [1, 8, 12, 36, 226, 611, 612, 613, 618, 619, 620, 642, 651], "processor": [1, 156, 599, 611, 619, 623, 625, 626, 648, 650, 658, 660], "overrid": [1, 6, 8, 19, 20, 22, 28, 30, 36, 47, 50, 51, 52, 81, 101, 116, 137, 152, 157, 163, 173, 196, 206, 247, 250, 259, 337, 415, 423, 444, 456, 504, 579, 599, 611, 612, 619, 620, 663], "stride": [1, 24, 61, 611], "updat": [1, 6, 7, 11, 14, 20, 21, 23, 25, 207, 212, 224, 228, 233, 441, 483, 485, 595, 596, 599, 601, 602, 604, 605, 607, 610, 614, 616, 617, 618, 651, 653, 657, 663], "automat": [1, 7, 8, 599, 611, 612, 613, 618, 619, 620, 637, 638, 639, 640, 641, 642, 651, 663], "accommod": [1, 11, 21, 65, 605, 618], "dataset": [1, 230, 318, 321, 445, 462, 474, 549, 554, 587, 593, 594, 611, 618, 619, 651], "load": [1, 226, 233, 613, 618, 619, 620, 637, 638, 639, 640, 641, 642, 661, 663], "conda": [1, 5, 6, 8, 67, 207, 221, 222, 223, 224, 225, 226, 595, 599, 611, 612, 616, 618, 619, 620, 637, 638, 639, 640, 641], "environ": [1, 5, 6, 63, 207, 221, 222, 223, 224, 225, 226, 595, 599, 611, 612, 616, 618, 619, 620, 637, 638, 639, 640, 641, 642, 651], "per": [1, 8, 11, 21, 24, 61, 65, 363, 611, 620, 637, 638, 639, 640, 641, 642, 648, 649, 650, 657, 658, 660, 663], "advantag": [1, 8, 226, 599, 612, 642], "aspect": [1, 649], "unnecessarili": 1, "redund": [1, 6, 587, 593, 594], "converg": [1, 79, 80, 82, 208, 478, 480, 484, 491, 494, 548, 550, 551, 556, 598, 606, 608, 609, 611, 616, 617, 623, 624, 650, 658, 661], "sort": [1, 611], "anoth": [1, 3, 6, 7, 8, 12, 74, 75, 212, 231, 595, 597, 602, 605, 611, 612, 613, 615, 617, 618, 619, 620, 626, 628, 631, 643, 648, 651, 654, 656, 657, 663, 664, 665], "properti": [1, 8, 611, 619, 642, 650, 658], "besid": [1, 619], "uniqu": [1, 611, 612, 617, 618, 619], "overwrit": [1, 38, 463, 476], "activ": [1, 226, 496, 599, 607, 641, 642, 651, 657, 659, 663], "build": [1, 6, 8, 47, 52, 207, 213, 219, 220, 221, 222, 223, 224, 225, 226, 595, 598, 608, 609, 611, 612, 614, 616, 618, 619, 620, 626, 629, 636, 637, 638, 639, 640, 641, 642], "queu": [1, 63], "10": [1, 8, 45, 210, 211, 212, 214, 215, 217, 234, 595, 596, 599, 600, 602, 604, 605, 610, 611, 618, 619, 620, 626, 627, 629, 630, 631, 633, 634, 636, 645, 648, 649, 651, 653, 654, 656, 657, 662, 664], "matt": 1, "hoffman": [1, 622], "longer": [1, 251, 418, 596, 599, 604, 605, 618, 627, 648, 650, 651, 654, 657, 658, 659, 662, 665], "term": [1, 11, 615, 616, 617, 618, 619], "ot": [1, 7, 618], "add": [1, 3, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 27, 28, 32, 49, 54, 58, 213, 234, 330, 355, 599, 611, 612, 613, 615, 617, 618, 619, 620, 626, 642, 650, 651, 657, 658, 660, 661, 663], "reduc": [1, 228, 611, 643, 654], "wall": [1, 662, 663], "clock": [1, 663], "differ": [1, 8, 36, 47, 52, 75, 200, 207, 208, 210, 211, 213, 214, 215, 220, 226, 245, 254, 429, 433, 550, 595, 596, 597, 599, 601, 604, 610, 611, 612, 613, 615, 617, 618, 619, 620, 623, 624, 625, 630, 635, 636, 641, 647, 648, 649, 650, 651, 656, 657, 658, 659, 660, 661, 662], "viscos": [1, 245, 254, 257, 367, 429, 433, 434, 596, 600, 602, 604, 611, 612, 618, 619, 648, 652, 656], "baroclin": [1, 31, 237, 238, 239, 242, 245, 248, 251, 254, 257, 260, 321, 596, 611, 618, 619, 648], "channel": [1, 31, 237, 239, 242, 245, 248, 251, 254, 257, 260, 321, 597, 611, 614, 618, 619, 642, 648, 649, 663], "rpe": [1, 254, 257, 433, 434, 611, 618, 648, 656], "full": [1, 8, 11, 69, 97, 112, 148, 162, 169, 202, 214, 466, 588, 589, 596, 598, 599, 602, 606, 611, 613, 616, 618, 619, 626, 627, 629, 630, 631, 636, 642, 645, 648, 650, 651, 653, 654, 656, 657, 658, 660, 662, 663], "choic": [1, 599, 617, 624], "mind": [1, 3, 6], "addit": [1, 3, 7, 8, 11, 23, 330, 599, 611, 612, 613, 618, 619, 622, 623, 628, 630, 635, 636, 647, 651, 657], "minim": [1, 626], "modif": [1, 3, 7, 212, 611, 619], "particularli": [1, 8, 611, 614, 617, 618, 651, 654], "mark": [1, 613], "petersen": [1, 613, 618, 648, 656], "build_base_mesh": 1, "py": [1, 8, 42, 209, 210, 211, 212, 215, 226, 611, 612, 613, 615, 616, 617, 618, 619, 620], "complex": [1, 8, 51, 611, 612, 619, 643], "dx": 1, "min": [1, 611, 618, 629, 630, 633, 634, 636, 648, 654, 656, 662], "max": [1, 611, 617, 618, 629, 630, 633, 634, 636, 650], "linear": [1, 234, 605, 610, 618, 648, 649, 656, 659, 660, 662], "log": [1, 11, 26, 60, 65, 75, 93, 108, 123, 182, 234, 330, 611, 613, 616, 619, 660, 661, 663], "someth": [1, 6, 7, 613], "fundament": [1, 611], "soft": [1, 637, 639, 663], "add_initial_condit": 1, "quickli": [1, 8, 625, 654], "iter": [1, 228, 231, 324, 410, 421, 454, 595, 602, 605, 620, 643, 651, 654, 657], "until": [1, 176, 611, 612], "peopl": [1, 620], "workflow": [1, 611, 613], "ideal": [1, 11, 21, 65, 82, 87, 99, 114, 135, 150, 164, 171, 194, 204, 245, 266, 312, 324, 413, 421, 429, 454, 610, 611, 612, 616, 617, 618, 620, 635, 643, 657, 659, 662, 664], "possibli": [1, 8, 212, 611, 613, 618, 619], "cach": [1, 2, 9, 11, 12, 70, 71, 616, 620, 637, 638, 639, 640, 641, 642, 663, 665], "version": [1, 6, 8, 36, 67, 74, 75, 207, 595, 596, 599, 605, 611, 612, 613, 615, 618, 619, 620, 626, 629, 630, 635, 636, 641, 642, 646, 648, 649, 651, 656, 659, 662, 663], "submit": [1, 642], "job": [1, 63, 226, 616, 623, 637, 638, 639, 640, 641, 657], "13": [1, 8, 45, 618, 648, 651, 656], "write": [1, 8, 14, 15, 17, 23, 24, 25, 228, 236, 402, 446, 586, 599, 600, 605, 610, 611, 613, 618, 619], "function": [1, 7, 8, 22, 44, 51, 60, 101, 116, 137, 146, 152, 156, 173, 196, 206, 209, 210, 211, 212, 213, 215, 220, 226, 228, 247, 250, 259, 289, 337, 382, 415, 423, 444, 456, 512, 526, 540, 548, 549, 553, 564, 579, 599, 601, 605, 609, 611, 612, 616, 617, 618, 619, 629, 630, 633, 634, 636, 647, 650, 651, 653, 656, 658, 660, 661, 662, 664], "class": [1, 8, 9, 11, 19, 26, 31, 36, 42, 43, 50, 55, 78, 79, 80, 82, 84, 85, 87, 89, 91, 94, 95, 97, 99, 102, 104, 106, 109, 110, 112, 114, 117, 119, 121, 124, 127, 129, 132, 134, 135, 138, 140, 141, 143, 145, 148, 150, 153, 155, 156, 158, 160, 162, 164, 166, 167, 169, 171, 174, 176, 178, 180, 183, 184, 186, 188, 189, 191, 193, 194, 197, 199, 200, 202, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 229, 237, 239, 242, 245, 248, 251, 254, 257, 260, 263, 264, 266, 268, 270, 272, 273, 276, 279, 283, 285, 286, 291, 294, 297, 299, 302, 304, 306, 308, 310, 312, 315, 318, 321, 324, 327, 331, 333, 336, 337, 340, 342, 345, 347, 350, 352, 357, 360, 363, 366, 367, 369, 371, 373, 375, 376, 383, 386, 389, 392, 395, 398, 403, 406, 408, 410, 413, 416, 418, 421, 424, 426, 427, 429, 431, 433, 434, 436, 438, 440, 442, 447, 449, 451, 454, 457, 459, 462, 474, 477, 478, 480, 484, 488, 491, 494, 496, 497, 499, 501, 503, 505, 506, 509, 511, 515, 517, 520, 523, 525, 529, 531, 534, 537, 539, 543, 545, 558, 561, 563, 567, 569, 572, 573, 577, 580, 582, 595, 596, 597, 598, 600, 601, 602, 604, 605, 606, 607, 608, 609, 610, 611, 617, 618, 619], "larger": [1, 208, 630, 633, 634], "descend": [1, 599, 611, 612, 618, 619], "testcas": [1, 6, 8, 11, 32, 43, 50, 55, 70, 71, 74, 75, 82, 87, 89, 91, 99, 102, 106, 114, 117, 127, 132, 135, 138, 145, 150, 158, 164, 171, 174, 180, 184, 189, 194, 204, 245, 248, 257, 266, 270, 275, 281, 284, 288, 290, 293, 296, 298, 303, 305, 307, 309, 311, 312, 313, 317, 320, 322, 325, 329, 331, 335, 340, 344, 345, 349, 354, 359, 362, 365, 385, 387, 391, 394, 396, 405, 406, 413, 416, 421, 424, 429, 431, 434, 438, 442, 447, 449, 454, 457, 459, 478, 482, 486, 490, 491, 494, 499, 501, 508, 513, 516, 522, 527, 530, 536, 541, 544, 560, 565, 568, 577, 580, 599, 610, 612, 617, 618, 619, 620, 648, 651, 653, 654, 656, 659, 662, 663], "equival": [1, 611, 613, 619, 637], "config_driv": [1, 619], "config_": [1, 619], "collect": [1, 7, 8, 31, 62, 78, 229, 550, 611, 615, 618, 619, 623], "struck": 1, "improv": [1, 599, 651], "jinja2": [1, 17, 25, 599, 611], "templat": [1, 2, 17, 25, 208, 228, 599, 605, 616, 619, 620], "manipul": [1, 612], "usr": [1, 42, 222, 638, 642, 663], "bin": [1, 613, 641, 663], "env": [1, 613, 641], "pickl": [1, 6, 8, 663], "configpars": [1, 8, 65, 611, 617, 618], "loggingcontext": [1, 8], "def": [1, 3, 7, 8, 599, 611, 612, 617, 618, 619], "main": [1, 4, 8, 19, 226, 599, 611, 612, 613, 618, 619, 623, 647, 651, 664], "open": [1, 5, 330, 446, 605, 618, 619, 651, 657], "test_case_": 1, "rb": 1, "handl": [1, 8, 208, 445, 605, 611, 618, 619, 642, 650, 658, 660], "steps_to_run": [1, 6, 8, 26, 69, 75, 611, 617, 620], "new_step_log_fil": [1, 26], "interpol": [1, 230, 336, 398, 399, 400, 445, 449, 497, 601, 605, 617, 618, 620, 654, 657, 661], "extendedinterpol": [1, 617], "config_filenam": [1, 11, 26, 611], "stdout": [1, 6, 8, 11, 26, 330, 611, 619], "stderr": [1, 8, 11, 26, 611], "test_nam": 1, "replac": [1, 7, 8, 14, 15, 17, 23, 25, 26, 38, 446, 599, 611, 612, 617, 618, 619, 620, 651, 663], "_": [1, 599, 611, 613, 618], "logger": [1, 8, 11, 26, 42, 60, 65, 93, 108, 123, 182, 330, 607, 610, 611, 618, 619], "__name__": 1, "__main__": 1, "curli": 1, "brace": 1, "element": [1, 587, 593, 594], "variabl": [1, 3, 6, 9, 11, 26, 30, 31, 43, 50, 55, 59, 63, 74, 75, 80, 81, 82, 85, 87, 89, 91, 95, 97, 99, 102, 104, 106, 114, 135, 145, 150, 156, 157, 158, 162, 163, 164, 174, 184, 189, 194, 204, 210, 213, 214, 217, 218, 220, 226, 228, 231, 239, 242, 245, 248, 251, 254, 257, 260, 264, 270, 273, 276, 279, 286, 297, 299, 302, 310, 312, 315, 318, 321, 327, 333, 336, 347, 352, 368, 376, 383, 386, 389, 392, 395, 398, 403, 410, 413, 416, 418, 428, 434, 437, 442, 447, 449, 451, 457, 459, 462, 464, 466, 467, 474, 475, 478, 480, 484, 492, 497, 499, 501, 503, 504, 506, 509, 511, 517, 520, 523, 525, 531, 534, 537, 539, 545, 558, 561, 563, 569, 573, 577, 580, 582, 587, 593, 594, 599, 602, 605, 607, 610, 611, 612, 613, 614, 618, 619, 622, 623, 626, 627, 629, 630, 631, 633, 634, 636, 637, 638, 639, 640, 641, 642, 643, 646, 647, 648, 651, 654, 656, 657, 659, 662, 663], "valu": [1, 7, 8, 15, 23, 75, 80, 82, 156, 164, 208, 228, 234, 254, 266, 433, 462, 464, 465, 466, 469, 470, 548, 549, 550, 551, 555, 556, 596, 597, 599, 604, 605, 607, 610, 611, 612, 616, 617, 618, 619, 620, 624, 629, 630, 633, 634, 636, 645, 648, 649, 651, 652, 653, 656, 657, 659, 660, 661, 662], "content": [1, 6, 8, 611, 612, 618, 619, 663], "normal": [1, 611, 613, 642, 657], "contrast": [1, 8, 617, 643, 651, 659], "seri": [1, 79, 80, 208, 228, 231, 257, 434, 462, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 598, 599, 605, 606, 608, 609, 611, 616, 618, 623, 624, 630, 647, 654, 657], "format": [1, 7, 8, 376, 413, 512, 526, 540, 555, 564, 577, 580, 582, 599, 602, 605, 607, 610, 611, 612, 617, 618, 619, 620, 638, 647, 649, 651, 654, 657, 660], "statement": [1, 3, 8, 611, 615, 619], "syntax": [1, 3, 612, 619], "immutable_stream": [1, 599, 611, 618, 619], "filename_templ": [1, 599, 611, 618, 619], "restart": [1, 26, 97, 112, 135, 148, 162, 169, 202, 208, 209, 210, 211, 212, 213, 214, 215, 219, 220, 251, 297, 299, 302, 304, 306, 308, 310, 333, 347, 352, 356, 360, 418, 596, 597, 599, 602, 604, 605, 611, 612, 615, 618, 623, 626, 627, 629, 630, 631, 636, 647, 648, 651, 654], "type": [1, 7, 89, 91, 95, 97, 99, 102, 104, 106, 119, 143, 145, 156, 158, 162, 164, 174, 184, 189, 228, 234, 264, 409, 410, 418, 447, 451, 597, 599, 607, 610, 611, 612, 614, 615, 617, 618, 619, 620, 626, 631, 648, 649, 650, 651, 654, 656, 657, 658, 662, 665], "output_interv": [1, 599, 611, 618, 619], "0000_00": [1, 610, 611, 618, 619], "00": [1, 8, 610, 611, 618, 619, 641, 657, 663], "01": [1, 597, 610, 611, 618, 619, 649, 657], "clobber_mod": [1, 611, 618, 619], "truncat": [1, 609, 611, 618, 619, 661], "var_struct": [1, 611, 618], "tracer": [1, 228, 505, 549, 554, 596, 598, 599, 604, 606, 608, 611, 618, 650, 651, 658, 660], "var": [1, 399, 402, 611, 618, 619], "xtime": [1, 402, 599, 611, 618, 619], "normalveloc": [1, 8, 209, 210, 213, 596, 599, 611, 618, 619], "layerthick": [1, 8, 228, 587, 591, 592, 593, 594, 596, 599, 607, 610, 611, 618, 619], "basic": [1, 6, 7, 613, 620, 638, 642, 663], "config_write_output_on_startup": [1, 611, 618], "config_run_dur": [1, 611, 618, 619], "15": [1, 8, 45, 212, 410, 596, 599, 600, 602, 604, 605, 611, 618, 619, 623, 627, 628, 648, 650, 652, 654, 656, 657, 658, 663], "config_use_mom_del2": [1, 611, 618], "config_implicit_bottom_drag_coeff": [1, 611, 618, 619], "1": [1, 6, 7, 8, 11, 45, 82, 87, 99, 114, 135, 150, 164, 171, 194, 204, 209, 210, 211, 212, 213, 214, 215, 217, 219, 220, 228, 232, 239, 245, 260, 266, 330, 363, 413, 421, 429, 446, 454, 511, 525, 539, 549, 563, 587, 593, 594, 596, 597, 599, 600, 604, 605, 607, 610, 611, 614, 617, 618, 619, 620, 624, 625, 626, 627, 629, 630, 631, 633, 634, 636, 638, 641, 642, 643, 645, 648, 649, 650, 651, 652, 653, 654, 656, 657, 658, 659, 660, 661, 662, 663, 666], "0e": [1, 611, 618, 619], "2": [1, 3, 8, 210, 211, 212, 213, 215, 220, 228, 260, 363, 550, 554, 596, 599, 600, 602, 606, 610, 611, 617, 618, 619, 620, 623, 626, 627, 628, 629, 630, 631, 633, 634, 636, 638, 641, 642, 645, 648, 649, 650, 651, 654, 656, 657, 658, 660, 661, 662, 663], "config_use_cvmix_background": [1, 611, 618], "config_cvmix_background_diffus": [1, 611, 618], "0": [1, 3, 6, 7, 8, 45, 75, 212, 221, 222, 223, 224, 225, 226, 232, 234, 330, 446, 469, 470, 554, 587, 592, 593, 594, 597, 599, 602, 610, 611, 612, 614, 618, 619, 620, 622, 624, 625, 626, 627, 628, 629, 630, 631, 633, 634, 636, 638, 642, 645, 646, 648, 649, 650, 651, 652, 653, 654, 656, 657, 658, 659, 660, 662, 663, 666], "config_cvmix_background_viscos": [1, 611, 618], "4": [1, 7, 8, 104, 176, 199, 209, 210, 211, 213, 215, 220, 239, 242, 294, 367, 596, 597, 599, 600, 602, 604, 607, 608, 610, 611, 612, 616, 617, 618, 619, 620, 625, 626, 627, 629, 630, 631, 634, 636, 642, 646, 647, 648, 649, 650, 651, 652, 654, 656, 657, 658, 659, 660, 662, 663], "regard": [1, 3], "whole": [1, 26, 611, 612, 618, 654, 657, 663], "degre": [1, 44, 51, 52, 57, 332, 337, 341, 346, 351, 407, 518, 532, 546, 570, 599, 620, 648, 651, 654, 656, 657], "left": [1, 6, 228, 618, 624, 645, 650, 662], "across": [1, 7, 8, 156, 211, 228, 234, 596, 597, 602, 606, 611, 612, 615, 616, 618, 619, 644, 651], "increas": [1, 550, 599, 612, 617, 624, 628, 657], "simpler": [1, 613, 618, 619, 643], "perhap": [1, 16, 611], "less": [1, 273, 276, 611, 624, 645, 651], "creation": [1, 599, 620, 651], "comment": [1, 7, 222, 611, 617, 620, 627], "certain": [1, 8, 36, 234, 376, 611, 613, 620, 661], "familiar": [1, 618, 619], "somewher": 1, "recommend": [1, 6, 7, 8, 611, 612, 613, 642], "With": [1, 613, 618, 619, 657], "essenti": [1, 6, 611], "inevit": 1, "minimum": [1, 8, 234, 445, 446, 464, 465, 466, 469, 470, 599, 611, 617, 618, 619, 620, 629, 630, 633, 634, 636, 645, 648, 649, 650, 651, 653, 654, 656, 657, 658, 660, 662], "level": [1, 3, 8, 212, 228, 234, 355, 356, 409, 410, 418, 441, 447, 451, 549, 587, 588, 589, 590, 591, 592, 593, 594, 596, 599, 602, 605, 611, 612, 618, 619, 620, 625, 626, 627, 628, 629, 630, 631, 633, 634, 636, 648, 649, 651, 652, 654, 656, 657, 658, 662, 665], "learn": [1, 612], "curv": [1, 612, 659], "skill": [1, 612], "pai": 1, "off": [1, 6, 234, 613, 614, 635], "cannot": [1, 8, 208, 611, 618], "organ": [1, 616], "greatli": 1, "simplifi": [1, 8, 602, 654], "cfg": [1, 8, 28, 611, 612, 613, 617, 618, 619, 620, 651, 657, 663], "mpas_core_framework_modul": 1, "mpas_core_framework_packag": 1, "shared_step": 1, "test_group_shared_modul": 1, "framework_modul": 1, "framework_packag": 1, "slightli": [1, 8, 611], "convent": [1, 599, 618, 619, 651], "mpascor": [1, 11, 26, 31, 62, 237, 263, 285, 366, 408, 426, 496, 572, 611, 612, 618, 619], "now": [1, 611, 613, 618, 619, 620, 642, 659], "dynam": [1, 228, 231, 272, 285, 297, 299, 302, 304, 306, 308, 310, 333, 342, 347, 352, 446, 595, 599, 602, 611, 615, 616, 620, 626, 643, 651, 654, 657, 659, 662, 664], "landic": [1, 4, 6, 8, 9, 42, 72, 73, 77, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 611, 613, 615, 616, 618, 619, 620, 621, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 663, 664, 665], "testgroup": [1, 10, 11, 26, 611, 612, 618, 619], "legaci": [1, 6, 226, 228, 599, 611, 612, 615, 617, 618, 620, 622, 642, 646, 651, 655, 662, 666], "mismip3d": 1, "least": [1, 8, 611, 613, 651], "reason": [1, 20, 611, 612, 617, 618, 619, 651, 665], "next": [1, 7, 212, 611, 618, 619, 628, 645, 651, 653, 654, 657, 663], "hierarchi": 1, "rel": [1, 3, 6, 8, 12, 16, 34, 35, 36, 70, 71, 73, 74, 75, 207, 210, 548, 549, 595, 611, 612, 613, 615, 618, 620, 648, 651, 654, 656, 657, 663, 664], "distinguish": [1, 445, 626, 628, 629, 631, 636, 648, 656], "variant": [1, 34, 209, 210, 211, 212, 215, 596, 597, 599, 604, 605, 607, 610, 611, 613, 618, 619, 624, 626, 627, 628, 629, 630, 631, 636, 642, 645, 648, 650, 651, 657, 659, 662], "vari": [1, 398, 442, 447, 451, 598, 599, 601, 605, 606, 608, 609, 611, 614, 617, 642, 645, 650, 651, 653, 654, 657, 658, 659], "characterist": 1, "base_mesh": [1, 8, 43, 50, 611, 618], "refer": [1, 7, 11, 228, 232, 254, 433, 587, 590, 593, 594, 611, 612, 613, 615, 616, 617, 618, 619, 645, 648, 656, 662], "confus": [1, 6, 611, 612, 613, 616, 617, 618, 619], "tri": [1, 612], "clearer": 1, "distinct": [1, 612], "clean": [1, 3, 72, 611, 613, 616], "what": [1, 3, 8, 226, 599, 612, 618, 619, 641, 663], "here": [1, 8, 208, 209, 210, 211, 213, 214, 215, 219, 220, 596, 597, 599, 602, 604, 605, 607, 610, 611, 612, 613, 617, 618, 619, 620, 627, 628, 631, 637, 638, 639, 640, 641, 642, 651, 652, 660, 661, 663, 665], "combin": [1, 11, 12, 26, 36, 67, 93, 108, 123, 182, 330, 599, 607, 610, 611, 614, 617, 620, 623, 630, 651, 663], "self": [1, 8, 28, 57, 209, 210, 215, 398, 596, 599, 602, 604, 607, 610, 611, 612, 617, 618, 619, 620, 661], "add_input_fil": [1, 8, 210, 611, 617, 618, 619], "run_model": [1, 8, 91, 106, 114, 180, 208, 209, 210, 607, 610, 611, 618, 619, 625, 626, 628, 629, 631, 636], "str": [1, 8, 9, 11, 12, 14, 15, 16, 17, 23, 24, 25, 26, 31, 34, 35, 37, 38, 39, 43, 50, 55, 59, 60, 61, 65, 67, 69, 70, 71, 72, 73, 74, 75, 80, 82, 85, 87, 89, 91, 93, 95, 97, 99, 102, 104, 106, 108, 114, 119, 135, 145, 150, 156, 158, 162, 164, 171, 180, 184, 189, 194, 204, 233, 234, 235, 236, 238, 239, 242, 245, 248, 251, 254, 257, 260, 264, 266, 270, 277, 279, 280, 283, 297, 299, 302, 304, 306, 308, 310, 312, 315, 318, 327, 330, 331, 333, 336, 340, 345, 347, 350, 352, 355, 356, 376, 383, 386, 389, 392, 398, 403, 406, 409, 410, 413, 416, 418, 429, 434, 441, 442, 446, 447, 451, 462, 464, 466, 474, 480, 492, 497, 499, 501, 503, 551, 554, 555, 556, 557, 573, 576, 577, 580, 582, 586, 611, 617, 618, 619], "__init__": [1, 8, 9, 11, 26, 31, 36, 42, 43, 50, 55, 78, 79, 80, 82, 84, 85, 87, 89, 91, 94, 95, 97, 99, 102, 104, 106, 109, 110, 112, 114, 117, 119, 121, 124, 127, 129, 132, 134, 135, 138, 140, 141, 143, 145, 148, 150, 153, 155, 156, 158, 160, 162, 164, 166, 167, 169, 171, 174, 176, 178, 180, 183, 184, 186, 188, 189, 191, 193, 194, 197, 199, 200, 202, 204, 229, 237, 239, 242, 245, 248, 251, 254, 257, 260, 263, 264, 266, 268, 270, 272, 273, 276, 279, 283, 285, 286, 291, 294, 297, 299, 302, 304, 306, 308, 310, 312, 315, 318, 321, 324, 327, 331, 333, 336, 340, 342, 345, 347, 350, 352, 357, 360, 363, 366, 367, 369, 371, 373, 375, 376, 383, 386, 389, 392, 395, 398, 403, 406, 408, 410, 413, 416, 418, 421, 424, 426, 427, 429, 431, 433, 434, 436, 438, 440, 442, 447, 449, 451, 454, 457, 459, 462, 474, 477, 478, 480, 484, 488, 491, 494, 496, 497, 499, 501, 503, 505, 506, 509, 511, 515, 517, 520, 523, 525, 529, 531, 534, 537, 539, 543, 545, 558, 561, 563, 567, 569, 572, 573, 577, 580, 582, 599, 611, 612, 615, 617, 618, 619], "subdir": [1, 6, 11, 26, 43, 50, 55, 82, 87, 91, 99, 106, 114, 135, 150, 164, 171, 180, 194, 204, 245, 266, 312, 336, 386, 413, 429, 442, 577, 596, 604, 611, 617, 618, 619], "none": [1, 7, 8, 11, 12, 14, 15, 17, 21, 23, 24, 25, 26, 34, 35, 37, 39, 41, 43, 50, 55, 59, 61, 67, 69, 71, 72, 73, 74, 75, 82, 87, 91, 99, 106, 114, 135, 150, 156, 162, 164, 171, 180, 194, 204, 234, 245, 266, 270, 290, 312, 324, 330, 336, 386, 413, 421, 429, 442, 454, 464, 465, 466, 474, 475, 476, 577, 611, 617, 618, 623, 624, 641, 645, 648, 654, 656, 657, 658, 662], "min_cor": 1, "thread": [1, 8, 11, 20, 21, 26, 61, 65, 82, 87, 99, 114, 135, 150, 164, 171, 194, 204, 245, 260, 266, 312, 324, 363, 413, 421, 429, 454, 596, 599, 611, 615, 617, 618, 619, 620, 647, 648, 651, 653], "nu": [1, 245, 257, 429, 434, 596, 604, 611, 618, 619], "belong": [1, 8, 11, 21, 26, 31, 35, 43, 50, 55, 79, 80, 82, 84, 85, 87, 89, 91, 94, 95, 97, 99, 102, 104, 106, 109, 110, 112, 114, 117, 119, 121, 124, 127, 129, 132, 134, 135, 138, 140, 141, 143, 145, 148, 150, 153, 155, 156, 158, 160, 162, 164, 166, 167, 169, 171, 174, 176, 178, 180, 183, 184, 186, 188, 189, 191, 193, 194, 197, 199, 200, 202, 204, 237, 239, 242, 245, 248, 251, 254, 257, 260, 263, 264, 266, 268, 270, 272, 273, 276, 279, 283, 285, 286, 291, 294, 297, 299, 302, 304, 306, 308, 310, 312, 315, 318, 321, 324, 327, 331, 333, 336, 340, 342, 345, 347, 350, 352, 357, 360, 363, 366, 367, 369, 371, 373, 375, 376, 383, 386, 389, 392, 395, 398, 403, 406, 408, 410, 413, 416, 418, 421, 424, 426, 427, 429, 431, 433, 434, 436, 438, 440, 442, 447, 449, 451, 454, 457, 459, 477, 478, 480, 484, 488, 491, 494, 496, 497, 499, 501, 503, 505, 506, 509, 511, 515, 517, 520, 523, 525, 529, 531, 534, 537, 539, 543, 545, 558, 561, 563, 567, 569, 572, 573, 577, 580, 582, 599, 611, 612, 617, 618, 619, 665], "int": [1, 11, 18, 21, 35, 39, 43, 44, 45, 46, 47, 60, 64, 65, 82, 87, 99, 114, 135, 150, 164, 171, 194, 204, 231, 234, 245, 266, 273, 276, 277, 279, 312, 324, 330, 356, 398, 413, 421, 429, 454, 478, 480, 484, 491, 492, 494, 506, 509, 511, 515, 517, 520, 523, 525, 529, 531, 534, 537, 539, 543, 545, 549, 558, 561, 563, 567, 569, 599, 611, 617, 618], "fewer": [1, 11, 21, 65, 82, 87, 99, 114, 135, 150, 164, 171, 194, 204, 245, 266, 312, 324, 413, 421, 429, 454, 602, 611, 618, 654, 663], "below": [1, 6, 11, 21, 65, 82, 87, 99, 114, 135, 150, 164, 171, 194, 204, 212, 226, 245, 266, 312, 324, 413, 421, 429, 445, 446, 454, 595, 599, 602, 611, 613, 617, 618, 619, 620, 622, 624, 629, 636, 642, 643, 645, 650, 651, 653, 654, 657, 658, 660, 661, 663], "fail": [1, 8, 11, 21, 26, 37, 75, 82, 87, 99, 114, 135, 150, 164, 171, 194, 204, 245, 266, 312, 324, 413, 421, 429, 454, 599, 611, 616, 618, 619, 620, 650, 651, 653, 658, 660], "float": [1, 7, 8, 43, 45, 46, 50, 75, 82, 164, 232, 234, 245, 257, 264, 266, 270, 277, 429, 434, 442, 445, 446, 447, 449, 451, 454, 457, 459, 462, 464, 465, 466, 469, 470, 492, 596, 604, 605, 611, 618, 623, 625, 643], "super": [1, 599, 611, 612, 617, 618, 619], "add_namelist_fil": [1, 11, 599, 611, 618, 619], "baroclinic_channel": [1, 7, 8, 595, 603, 611, 612, 615, 618, 619, 646, 647, 655, 663, 664, 665], "config_mom_del2": [1, 596, 604, 611, 618], "add_namelist_opt": [1, 11, 602, 611, 618, 619], "add_streams_fil": [1, 11, 599, 602, 611, 618, 619], "add_output_fil": [1, 8, 599, 611, 618, 619], "add_model_as_input": [1, 8, 611, 618, 619], "popul": 1, "dure": [1, 8, 11, 23, 25, 26, 596, 597, 599, 602, 604, 611, 612, 617, 620, 643, 651, 662, 663, 664, 665], "phase": [1, 25, 212, 657], "idea": [1, 8, 618, 619, 660], "runtim": [1, 8, 20, 23, 209, 210, 211, 212, 215, 602, 607, 610], "hopefulli": [1, 620], "tedium": 1, "later": [1, 8, 11, 21, 36, 75, 596, 604, 605, 611, 617, 618, 619, 620, 635, 651, 657], "order": [1, 6, 8, 599, 607, 609, 611, 613, 618, 619, 623, 643, 651, 653, 657, 660, 661, 663], "top": [1, 228, 464, 587, 588, 589, 590, 591, 592, 593, 594, 602, 605, 611, 624, 643, 645, 656, 657], "partit": [1, 20, 59, 61, 209, 210, 211, 212, 215, 228, 233, 234, 596, 599, 602, 604, 605, 607, 610, 611, 619, 620, 637, 638, 639, 640, 641, 651, 663], "execut": [1, 6, 8, 13, 60, 61, 207, 595, 602, 605, 611, 613, 618, 619, 620, 637, 638, 639, 640, 641, 642, 663], "pass": [1, 6, 8, 26, 75, 599, 611, 612, 613, 615, 617, 618, 619, 623, 663], "directli": [1, 8, 11, 611, 612, 615, 616, 618, 619, 630, 638, 651, 661], "tread": 1, "maximum": [1, 8, 75, 234, 355, 464, 465, 466, 469, 470, 599, 620, 629, 630, 633, 634, 636, 645, 650, 651, 653, 658, 660, 662], "memori": [1, 11, 21, 599, 611, 620, 651, 653, 661], "amount": [1, 11, 21, 228, 599, 611, 612, 630, 633, 634, 644, 657], "disk": [1, 599, 613, 620, 638, 641, 651], "workerqueu": 1, "explain": [1, 611, 612], "total": [1, 18, 64, 214, 475, 600, 602, 611, 612, 624, 638], "determin": [1, 8, 12, 20, 26, 61, 63, 146, 596, 598, 599, 605, 606, 608, 611, 617, 618, 619, 623, 633, 634, 643, 645, 647, 648, 650, 651, 656, 657, 658, 660], "slurm": [1, 63, 66, 616, 620, 637, 638, 639, 640, 641, 663], "error": [1, 8, 11, 26, 208, 228, 277, 492, 548, 549, 550, 551, 553, 556, 598, 606, 609, 611, 612, 613, 616, 617, 618, 625, 660, 661], "rais": [1, 7, 8, 11, 16, 37, 38, 63, 75, 596, 611, 618, 619, 660], "few": [1, 6, 11, 21, 65, 210, 213, 219, 220, 226, 596, 597, 599, 602, 604, 605, 611, 612, 618, 619, 620, 642, 646, 650, 651, 657, 658, 660], "particular": [1, 226, 599, 611, 613, 616, 617, 618, 619, 638, 642, 651, 663], "otherwis": [1, 8, 599, 611, 618, 637, 638, 639, 640, 641, 642, 659, 662], "mean": [1, 6, 8, 63, 174, 215, 277, 461, 462, 475, 492, 598, 605, 606, 613, 618, 619, 643, 645, 647, 648, 651, 656, 662, 665], "non": [1, 8, 607, 610, 625, 651, 662], "known": [1, 23, 598, 606, 608, 611, 617, 618, 619, 625, 651], "strategi": [1, 8], "happen": [1, 8, 75, 611, 618, 619, 630, 633, 634, 650, 658, 660, 661], "care": [1, 8, 599, 611, 613, 619], "suffici": [1, 233], "worri": [1, 611], "globalocean": [1, 273, 286, 291, 294, 297, 299, 315, 318, 327, 333, 342, 347, 352, 357, 360, 363, 480, 488, 599, 611, 612, 617, 618, 619], "getint": [1, 607, 611, 617, 618, 619], "init_cor": [1, 599, 620, 651], "init_min_cor": [1, 599, 620, 651], "init_thread": [1, 620, 651, 653], "forward_cor": [1, 599, 620, 651], "forward_min_cor": [1, 599, 620, 651], "forward_thread": [1, 620, 651, 653], "ref_": 1, "alg_machine_data": 1, "root": [1, 70, 71, 73, 207, 277, 492, 595, 598, 606, 611, 612, 613, 615, 620, 637, 638, 639, 640, 641, 642, 645, 663], "mesh_databas": [1, 620, 637, 638, 639, 640, 641, 642, 663], "initial_condition_databas": [1, 620, 637, 638, 639, 640, 641, 642, 663], "bathymetry_databas": [1, 8, 611, 620, 637, 638, 639, 640, 641, 642, 663], "ocean_database_root": [1, 8, 611, 620, 637, 638, 639, 640, 641, 642, 663], "project": [1, 3, 6, 42, 222, 595, 613, 618, 619, 620, 637, 638, 642, 657, 663], "regionalclim": [1, 638, 642], "common_mpa": [1, 638, 642], "grid": [1, 44, 51, 57, 209, 210, 211, 212, 215, 228, 233, 236, 332, 337, 341, 346, 351, 367, 393, 399, 400, 407, 445, 449, 518, 532, 546, 570, 585, 586, 587, 588, 589, 590, 593, 594, 596, 597, 599, 600, 602, 604, 605, 607, 610, 611, 618, 619, 620, 625, 633, 634, 638, 642, 648, 649, 650, 651, 652, 654, 656, 657, 658, 661, 662], "mali": [1, 6, 78, 82, 85, 87, 95, 97, 99, 110, 112, 114, 135, 141, 148, 150, 156, 162, 164, 167, 169, 171, 194, 200, 202, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 219, 220, 226, 611, 613, 615, 616, 620, 622, 623, 624, 626, 628, 629, 630, 635, 636, 637, 638, 639, 640, 641, 642, 643, 663, 664], "landice_database_root": [1, 620, 637, 638, 639, 640, 641, 642, 663], "albani": [1, 6, 207, 213, 219, 220, 221, 222, 223, 225, 226, 611, 620, 622, 623, 625, 626, 629, 636, 637, 638, 639, 640, 641, 642, 663], "compass_env": [1, 637, 638, 639, 640, 641, 642], "climat": [1, 42, 222, 637, 638, 639, 642, 651, 659, 663], "shared_clim": [1, 222, 638, 642, 663], "anaconda_env": 1, "single_nod": [1, 620, 637, 638, 639, 640, 641, 642, 663], "whether": [1, 6, 8, 11, 12, 26, 27, 34, 37, 38, 39, 61, 63, 68, 69, 75, 156, 162, 164, 230, 273, 276, 302, 308, 310, 312, 318, 321, 327, 330, 331, 336, 340, 345, 350, 398, 406, 413, 442, 447, 451, 462, 499, 501, 503, 573, 577, 580, 599, 611, 613, 614, 618, 619, 620, 625, 626, 627, 628, 631, 637, 638, 639, 640, 641, 642, 645, 648, 649, 651, 654, 656, 657, 658, 660, 662, 663], "mpirun": [1, 614, 620, 637, 638, 639, 640, 641, 642, 663], "srun": [1, 614, 620, 637, 638, 639, 640, 641, 642, 663], "parallel_execut": [1, 614, 620, 637, 638, 639, 640, 641, 642, 663], "cores_per_nod": [1, 620, 637, 638, 639, 640, 641, 642, 663], "36": [1, 153, 596, 599, 605, 610, 611, 618, 637, 638, 642, 651, 653, 657, 663], "account": [1, 623, 637, 638, 640, 641, 642, 663], "multiprocess": [1, 611, 612, 617, 620], "dask": [1, 620], "18": [1, 610, 620, 638, 653, 661], "variou": [1, 79, 480, 599, 605, 608, 609, 611, 613, 657], "find": [1, 7, 37, 46, 66, 393, 461, 612, 613, 614, 618, 620, 653, 663], "compil": [1, 5, 6, 221, 222, 223, 224, 225, 226, 611, 614, 616, 618, 619, 623, 637, 638, 639, 640, 641, 642, 661, 663], "mpi": [1, 8, 221, 222, 223, 224, 226, 363, 611, 613, 614, 616, 617, 618, 619, 637, 638, 639, 640, 641, 653, 661, 663], "explor": [1, 605, 611, 618, 645, 657, 660], "intend": [1, 3, 8, 212, 597, 599, 605, 619, 620, 651, 664], "incorpor": [1, 611, 651], "come": [1, 12, 599, 605, 611, 613, 618, 619, 623, 637, 638, 639, 640, 641, 642, 644, 651, 655, 662], "placehold": [1, 11, 21, 611, 663], "conceptu": [1, 611, 612, 618, 619, 654, 657], "most": [1, 8, 20, 82, 87, 99, 114, 150, 164, 171, 194, 204, 207, 215, 226, 595, 599, 610, 611, 612, 613, 615, 617, 618, 620, 630, 635, 642, 643, 645, 646, 651, 659, 660, 664], "stick": [1, 618, 619], "inde": 1, "seemingli": 1, "unrel": 1, "argument": [1, 6, 7, 8, 65, 210, 213, 596, 597, 599, 604, 611, 612, 613, 617, 618, 619, 665], "taken": [1, 61, 356, 598, 606, 608, 611, 619, 641, 657, 663], "restart_test": [1, 82, 87, 99, 114, 150, 164, 171, 194, 204, 210, 611, 618, 623, 647, 663, 665], "sinc": [1, 6, 8, 270, 596, 599, 602, 611, 612, 613, 617, 618, 619, 620, 647, 650, 651, 653, 656, 661], "identifi": [1, 664], "sphinx": [1, 7], "readthedoc": 1, "built": [1, 6, 70, 71, 73, 207, 595, 611, 613, 619, 620, 642, 663], "manner": [1, 618], "similar": [1, 3, 6, 8, 222, 226, 228, 597, 611, 612, 613, 617, 618, 619, 624, 651, 657, 659, 660, 663], "geometric_featur": [1, 330, 599, 651], "pyremap": 1, "analysi": [1, 208, 286, 291, 299, 302, 392, 503, 550, 573, 577, 596, 599, 604, 605, 610, 611, 612, 620, 647, 650, 651, 658, 659, 660, 661, 664], "guid": [1, 7, 209, 210, 211, 212, 214, 215, 217, 218, 596, 597, 599, 601, 602, 604, 605, 607, 608, 609, 610, 611, 612, 613, 617, 618, 619, 622, 626, 638, 642, 646, 651], "detail": [1, 3, 4, 6, 7, 8, 39, 75, 598, 599, 600, 606, 608, 609, 611, 612, 613, 614, 617, 618, 619, 635, 643, 662, 663], "instruct": [1, 613, 618, 619], "quick": [1, 228, 602, 616, 618, 622, 646, 654, 665], "overview": [1, 7, 616, 638, 641], "philosophi": [1, 612], "subsect": 1, "sub": [1, 462, 643, 651, 654], "descript": [1, 6, 7, 599, 605, 617, 618, 619, 620, 622, 627, 628, 631, 635, 646, 651], "manag": [1, 3, 614, 642], "api": [1, 7, 8, 616, 618, 619], "docstr": [1, 612, 616, 618], "eventu": [1, 657], "tutori": [1, 612], "plan": [1, 3, 207, 595, 611, 615, 657, 664], "parsl": 1, "begin": [1, 7, 8, 210, 211, 213, 215, 220, 376, 596, 602, 611, 613, 616, 618, 619, 626, 627, 629, 631, 636, 642, 650, 653, 654, 657, 659], "seem": [1, 611, 617, 618, 619], "workqueueexecutor": 1, "enough": [1, 8, 596, 604, 611, 612, 619, 650, 651, 654, 657, 658, 660, 662], "consid": [1, 612, 657], "beta": 1, "latest": [1, 207, 595, 605, 613, 622, 646, 657, 663, 666], "v1": [1, 8, 616, 645, 651], "prematur": 1, "settl": [1, 618, 619], "except": [1, 8, 11, 16, 37, 75, 599, 611, 612, 617, 618, 651, 656, 657, 659, 660], "accordingli": [1, 66, 213, 228, 597], "accur": [1, 624, 630, 635, 643], "race": 1, "unnecessari": [1, 619, 651], "block": [1, 3, 611, 618, 651], "prerequisit": [1, 557], "subsequ": [1, 611, 615, 636, 651, 665], "associ": [1, 8, 548, 549, 587, 593, 594, 596, 597, 599, 604, 611, 615, 618, 651, 654], "datafutur": 1, "usag": [1, 208, 599, 620, 623, 630, 633, 634, 638, 641, 651, 653], "arbitrari": 1, "1gb": 1, "calibr": 1, "actual": [1, 3, 6, 8, 611, 613, 618, 624], "approxim": [1, 8, 43, 45, 46, 50, 548, 556, 609, 613, 623, 626, 627, 631, 650, 651, 657, 658, 660, 661], "debug": [1, 8, 221, 222, 223, 224, 225, 549, 637, 638, 639, 640, 641], "flesh": [1, 618, 619], "further": [1, 7, 599, 611, 627, 628, 631, 641], "restrict": [1, 8, 618, 619], "facilit": 1, "m": [1, 6, 44, 51, 52, 57, 210, 212, 332, 337, 341, 346, 351, 407, 518, 532, 546, 570, 596, 599, 600, 602, 604, 605, 610, 611, 613, 619, 625, 626, 627, 628, 630, 631, 633, 634, 637, 638, 639, 640, 641, 645, 648, 650, 652, 654, 656, 657, 659, 662, 663], "oppos": [1, 273, 276, 657], "origin": [1, 8, 34, 400, 441, 445, 446, 606, 609, 613, 617, 618, 619, 649, 658, 662, 663], "simpli": [1, 8, 36, 104, 143, 153, 160, 186, 191, 242, 573, 582, 600, 611, 613, 618, 619, 626, 645, 663, 665], "anyth": [1, 618], "discuss": [1, 3, 8, 611, 612, 618, 619, 650, 651, 660], "decid": [1, 617, 619, 651], "misunderstood": 1, "select": [1, 6, 8, 611, 613], "skip": [1, 6, 8, 75, 611, 665], "latter": [1, 6, 26, 210, 211, 213, 215, 220, 226], "suggest": [1, 614, 657], "put": [1, 613, 618, 619, 659], "under": [1, 3, 74, 226, 441, 467, 553, 599, 613, 616, 626, 645, 647, 654, 657, 660, 664], "break": [1, 662], "backward": 1, "compat": [1, 207, 233, 595, 613, 614, 616, 651, 654], "scope": 1, "hinder": 1, "effort": [1, 651], "14": [1, 220, 599, 614, 636, 651], "scratch": [1, 6, 613, 617, 618, 638, 641, 663], "simper": 1, "underwai": 1, "aid": [1, 6], "compass_1": 1, "http": [1, 6, 7, 8, 38, 557, 599, 611, 612, 613, 614, 616, 619, 620, 622, 641, 646, 651, 663], "github": [1, 6, 7, 599, 612, 613, 616, 618, 619, 620, 622, 646, 651, 663, 666], "com": [1, 6, 7, 38, 599, 612, 613, 616, 618, 619, 620, 651, 663], "dev": [1, 6, 7, 207, 599, 611, 612, 613, 616, 618, 619, 620, 622, 646, 651, 663], "28": [1, 620, 651], "somewhat": 1, "conflict": 1, "tend": [1, 228], "child": [1, 19, 337, 478, 611, 612], "just": [1, 6, 11, 21, 39, 82, 87, 99, 114, 150, 164, 171, 194, 204, 210, 211, 213, 215, 220, 226, 611, 612, 613, 615, 616, 617, 618, 619, 638, 641, 657], "instanti": 1, "becaus": [1, 7, 8, 208, 445, 611, 612, 613, 617, 618, 619, 625, 629, 630, 633, 634, 636, 640, 643, 651, 653, 657, 658, 663], "parent": [1, 297, 315, 599, 611], "object": [1, 8, 14, 17, 25, 74, 75, 462, 474, 599, 611, 612, 618, 619, 643, 651], "respect": [1, 3, 8, 611, 612, 618, 649, 651, 662], "baroclinicchannel": [1, 239, 242, 251, 254, 260, 596, 611, 612, 618, 619], "short": [1, 6, 104, 153, 176, 213, 214, 219, 220, 228, 231, 242, 286, 294, 356, 357, 363, 367, 410, 573, 582, 599, 611, 612, 618, 619, 623, 624, 626, 629, 631, 636, 643, 647, 648, 649, 651, 656, 659, 662], "add_step": [1, 209, 210, 215, 596, 599, 604, 611, 617, 618, 619], "initialst": [1, 596, 597, 599, 601, 602, 604, 605, 607, 610, 611, 618], "And": [1, 7, 611, 613], "save": [1, 8, 37, 57, 596, 602, 611, 625, 626, 627, 629, 631, 636, 642, 648, 651, 654], "res_param": [1, 596, 610, 611, 618, 619], "10km": [1, 8, 596, 610, 611, 618, 619, 630, 633, 647, 648, 663, 664, 665], "nx": [1, 611, 618, 619, 625, 626, 627, 628, 631, 649, 652, 654, 656], "ny": [1, 611, 618, 619, 625, 626, 627, 628, 631, 652, 654, 656], "50": [1, 212, 596, 610, 611, 618, 619, 628, 631, 648, 654, 656, 658], "dc": [1, 611, 618, 619, 625, 626, 627, 628, 631, 652, 654, 656], "10e3": [1, 611, 618, 619], "4km": [1, 218, 220, 596, 611, 618, 619, 634, 648, 659, 663], "40": [1, 605, 611, 618, 619, 625, 640, 657, 661], "126": [1, 611, 618, 619], "4e3": [1, 611, 618, 619], "1km": [1, 6, 156, 162, 164, 596, 611, 618, 619, 648, 649, 663], "160": [1, 611, 618, 619], "500": [1, 599, 607, 610, 611, 618, 619, 620, 645, 654, 662], "1e3": [1, 611, 618, 619], "valueerror": [1, 8, 63, 596, 611, 618, 619], "unsupport": [1, 596, 611, 618, 619], "param": [1, 143, 596, 599, 611, 618, 619], "recip": [1, 611], "elsewher": [1, 599, 613, 619, 643], "might": [1, 3, 8, 228, 611, 618, 619, 620, 662, 663], "you": [1, 3, 5, 6, 7, 8, 207, 221, 222, 223, 224, 225, 226, 228, 595, 605, 611, 612, 613, 614, 615, 617, 618, 619, 620, 629, 630, 633, 634, 636, 637, 638, 639, 640, 641, 642, 650, 651, 654, 657, 658, 660, 661, 663, 664, 665], "kei": [1, 9, 26, 31, 71, 376, 550, 555, 611, 630], "config_time_integr": [1, 619], "split_explicit": [1, 286, 291, 294, 297, 312, 315, 333, 342, 347, 352, 357, 360, 363, 599, 619, 651, 660], "config_dt": [1, 618, 619], "02": [1, 638], "config_btr_dt": [1, 618, 619], "06": [1, 610, 652], "0000_06": 1, "config_hmix_use_ref_cell_width": 1, "config_use_debugtrac": 1, "Such": 1, "forwardstep": [1, 599, 601, 611], "time_integr": [1, 286, 291, 294, 297, 312, 315, 333, 342, 347, 352, 357, 360, 363, 599, 660], "with_ice_shelf_cav": [1, 302, 308, 310, 327, 331, 336, 340, 345, 350, 599, 611, 651], "wisc": [1, 599, 651], "littl": [1, 8, 612, 613, 616, 617, 618, 619], "trickier": 1, "typic": [1, 6, 7, 8, 11, 23, 69, 228, 356, 599, 611, 613, 615, 617, 618, 619, 620, 623, 625, 626, 627, 630, 631, 633, 634, 642, 643, 645, 651, 659, 663, 664], "look": [1, 6, 7, 8, 599, 611, 612, 617, 618, 619, 620, 661], "forcing_data": [1, 605, 611], "mixedlayerdepthsoutput": 1, "var_arrai": [1, 611], "constant": [1, 8, 43, 50, 51, 597, 607, 610, 619, 625, 628, 648, 649, 650, 654, 656, 657, 658, 660, 662], "remov": [1, 6, 8, 69, 72, 446, 596, 597, 602, 604, 605, 607, 610, 611, 617, 651, 657], "etc": [1, 8, 72, 73, 264, 409, 410, 418, 447, 451, 599, 611, 648, 651, 656], "rare": [1, 613], "One": [1, 8, 226, 597, 612, 617, 619, 642, 647, 651, 665], "add_config": [1, 617], "io": [1, 611, 612, 616, 618, 619, 620, 622, 646], "enthalpy_benchmark": [1, 207, 216, 611, 622, 623, 632], "readm": [1, 8, 212, 611, 628], "work_dir": [1, 6, 8, 11, 26, 35, 67, 70, 71, 72, 73, 74, 75, 611], "visual": [1, 8, 212, 270, 276, 424, 438, 459, 491, 509, 523, 537, 561, 597, 602, 605, 611, 615, 625, 626, 627, 628, 629, 631, 636, 649, 656, 657], "eismint2_viz": [1, 211, 627], "experi": [1, 114, 119, 123, 211, 226, 441, 442, 447, 449, 451, 457, 459, 462, 474, 605, 612, 627, 645, 657], "b": [1, 3, 6, 114, 123, 211, 613, 615, 627, 663], "d": [1, 114, 123, 211, 461, 462, 474, 587, 593, 594, 611, 618, 619, 627, 649], "f": [1, 6, 8, 114, 123, 211, 596, 611, 613, 617, 618, 620, 627, 641, 654, 663], "unchang": [1, 651], "eismint2": [1, 31, 207, 216, 622, 623, 632], "whichev": [1, 207, 595, 645], "sens": [1, 616, 618], "appli": [1, 7, 8, 39, 234, 441, 605, 611, 618, 623, 624, 643, 649, 651, 654, 657, 662], "shown": [1, 611, 636, 659, 662], "oper": [1, 8, 22, 101, 116, 137, 152, 173, 196, 206, 247, 250, 259, 415, 423, 444, 456, 579, 611, 623, 647, 665], "explicit": [1, 8, 597, 599, 612, 618, 619, 636, 647, 649, 651, 660], "neither": 1, "timer": [1, 6, 26, 30, 74, 81, 157, 163, 599, 607, 610, 611, 612], "compare_vari": [1, 8, 611, 619], "mesh_step": [1, 327, 403, 611], "mesh_cor": [1, 620, 651], "mesh_min_cor": [1, 620, 651], "xcell": [1, 599, 611, 618], "ycell": [1, 599, 611, 618], "zcell": [1, 599], "filename1": [1, 8, 75, 611, 619], "purpos": [1, 3, 31, 597, 611, 612, 615, 618, 619, 625, 635, 636, 651, 664], "meti": [1, 59, 619], "split": [1, 599, 612, 617, 618, 619, 647, 651, 660], "domain": [1, 60, 61, 214, 217, 218, 228, 233, 424, 462, 599, 605, 611, 618, 619, 623, 626, 627, 628, 631, 643, 648, 649, 650, 651, 653, 654, 656, 657, 658, 659, 662, 664], "trivial": 1, "quit": [1, 3, 599, 611, 654], "compar": [1, 6, 8, 26, 70, 71, 73, 74, 75, 212, 219, 297, 357, 549, 597, 598, 599, 600, 601, 606, 608, 609, 610, 612, 615, 617, 618, 619, 623, 626, 627, 629, 630, 631, 636, 647, 648, 651, 652, 653, 654, 657, 659, 661, 663, 665], "signific": [1, 611, 612, 624, 657], "dynamic_adjust": [1, 299, 611, 620, 647], "rk4": [1, 286, 291, 294, 297, 312, 315, 333, 342, 347, 352, 357, 360, 363, 599, 612, 618, 619, 647, 651, 660, 665], "intermedi": [1, 651], "meshstep": [1, 321, 327, 395, 403, 599, 601, 611], "build_cell_width_lat_lon": [1, 8, 50, 599, 601], "numpi": [1, 8, 44, 51, 52, 57, 332, 337, 341, 346, 351, 407, 462, 518, 532, 546, 548, 551, 556, 570, 585, 586, 611, 618, 619], "np": [1, 607, 618, 619], "qu240mesh": [1, 599], "mesh_nam": [1, 277, 279, 283, 327, 331, 336, 340, 345, 350, 403, 406, 599, 651], "bool": [1, 11, 12, 26, 27, 34, 37, 38, 39, 61, 68, 69, 75, 156, 162, 164, 230, 234, 273, 276, 302, 308, 310, 312, 318, 321, 327, 330, 331, 336, 340, 345, 350, 398, 406, 413, 442, 447, 451, 462, 466, 499, 501, 503, 573, 577, 580], "ic": [1, 7, 141, 146, 148, 174, 207, 212, 213, 215, 231, 232, 302, 308, 310, 324, 327, 330, 331, 336, 340, 345, 350, 356, 408, 410, 413, 416, 418, 421, 424, 440, 442, 445, 446, 447, 451, 454, 462, 464, 467, 471, 472, 473, 475, 595, 599, 602, 605, 610, 612, 613, 616, 618, 619, 620, 622, 623, 625, 626, 627, 628, 629, 630, 631, 633, 634, 635, 636, 638, 644, 645, 646, 647, 654, 657, 662, 663, 664], "shelf": [1, 7, 84, 85, 232, 302, 308, 310, 324, 327, 330, 331, 336, 340, 345, 350, 408, 410, 413, 416, 418, 421, 424, 440, 442, 454, 462, 467, 475, 499, 501, 503, 599, 602, 605, 611, 612, 618, 619, 620, 625, 626, 635, 636, 644, 645, 646, 647, 654, 657, 659, 662], "caviti": [1, 302, 308, 310, 327, 330, 331, 336, 340, 345, 350, 462, 466, 599, 602, 605, 612, 618, 619, 620, 644, 645, 646, 647, 654, 657], "__module__": [1, 599, 617], "mesh_config_filenam": [1, 336, 599], "cell": [1, 8, 43, 44, 45, 46, 50, 51, 52, 57, 146, 228, 230, 233, 234, 277, 330, 332, 336, 337, 341, 346, 351, 367, 406, 407, 445, 462, 492, 518, 532, 546, 570, 587, 588, 589, 590, 593, 594, 599, 600, 605, 607, 611, 617, 618, 619, 625, 626, 627, 628, 629, 630, 631, 633, 634, 636, 645, 648, 649, 650, 651, 652, 653, 654, 656, 657, 658, 659, 660, 662], "width": [1, 8, 43, 44, 45, 50, 51, 52, 57, 332, 337, 341, 346, 351, 407, 518, 532, 546, 570, 618, 648, 649, 654, 656, 658, 659, 662], "arrai": [1, 8, 44, 51, 52, 57, 230, 332, 337, 341, 346, 351, 407, 464, 466, 518, 532, 546, 550, 551, 570, 585, 586, 588, 589, 590, 591], "regular": [1, 6, 39, 44, 51, 273, 276, 332, 337, 341, 346, 351, 407, 518, 532, 546, 570, 618, 637, 638, 640, 641, 642, 647, 663], "latitud": [1, 44, 51, 332, 337, 341, 346, 351, 407, 518, 532, 546, 570, 599, 650, 651, 659, 661], "longitud": [1, 44, 51, 52, 57, 332, 337, 341, 346, 351, 407, 518, 532, 546, 570, 599, 650, 659], "return": [1, 3, 7, 37, 44, 45, 46, 51, 62, 64, 71, 230, 232, 277, 280, 332, 337, 341, 346, 351, 356, 407, 445, 485, 492, 518, 532, 546, 548, 549, 550, 557, 570, 585, 588, 589, 590, 591, 592, 612, 617, 618, 619, 650, 658, 661], "cellwidth": [1, 332, 337, 341, 346, 351, 407, 518, 532, 546, 570], "x": [1, 44, 51, 52, 57, 332, 337, 341, 346, 351, 367, 407, 462, 464, 471, 472, 473, 518, 532, 546, 570, 599, 600, 602, 611, 618, 619, 649, 652, 654, 656, 658], "km": [1, 8, 43, 44, 45, 46, 50, 51, 52, 57, 211, 213, 214, 215, 217, 220, 264, 279, 332, 337, 341, 346, 351, 407, 442, 446, 447, 449, 451, 454, 457, 459, 484, 492, 511, 515, 517, 518, 525, 529, 531, 532, 539, 543, 545, 546, 563, 567, 569, 570, 596, 598, 599, 600, 605, 606, 607, 608, 609, 610, 617, 618, 619, 620, 623, 627, 629, 630, 631, 633, 634, 636, 643, 648, 649, 650, 651, 654, 656, 657, 658, 659, 660, 661, 662, 664], "lon": [1, 8, 44, 50, 51, 52, 57, 332, 337, 341, 346, 351, 407, 518, 532, 546, 570, 620, 651], "length": [1, 44, 51, 52, 57, 332, 337, 341, 346, 351, 407, 518, 532, 546, 570, 599, 610, 649, 652, 662], "180": [1, 44, 51, 52, 57, 332, 337, 341, 346, 351, 407, 518, 532, 546, 570, 650, 653, 660], "lat": [1, 8, 44, 50, 51, 52, 57, 332, 337, 341, 346, 351, 407, 518, 532, 546, 570, 620, 651], "90": [1, 44, 51, 52, 57, 332, 337, 341, 346, 351, 407, 518, 532, 546, 570, 610, 611, 650, 660], "dlon": 1, "dlat": 1, "constantcellwidth": 1, "240": [1, 8, 45, 551, 556, 598, 599, 608, 620, 643, 650, 651, 657, 660], "nlat": [1, 661], "nlon": 1, "360": 1, "linspac": [1, 8, 607], "ones": [1, 6, 462, 587, 593, 594, 612, 617], "size": [1, 3, 8, 45, 46, 146, 468, 511, 525, 539, 548, 550, 551, 556, 563, 599, 611, 618, 619, 620, 625, 626, 627, 628, 631, 650, 651, 652, 654, 656, 658], "integr": [1, 8, 254, 286, 291, 294, 297, 312, 315, 333, 342, 347, 352, 357, 360, 363, 433, 596, 599, 604, 605, 611, 612, 618, 619, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 636, 647, 648, 650, 651, 654, 656, 657, 658, 659, 660, 662], "0000_01": 1, "1000": [1, 212, 599, 618, 620, 628, 631, 645, 648, 651, 653, 656, 662], "config_mom_del4": 1, "2e11": 1, "config_hmix_scalewithmesh": 1, "config_use_gm": 1, "vertic": [1, 210, 211, 215, 234, 236, 264, 355, 356, 367, 409, 410, 418, 447, 451, 499, 501, 503, 549, 596, 597, 599, 600, 601, 602, 604, 605, 607, 610, 611, 617, 619, 620, 625, 626, 627, 628, 631, 643, 644, 646, 648, 649, 651, 652, 653, 654, 656, 657, 658, 659, 662], "layer": [1, 210, 211, 215, 228, 230, 468, 499, 501, 503, 585, 586, 587, 591, 592, 593, 594, 596, 599, 600, 601, 602, 604, 605, 607, 610, 618, 620, 625, 626, 627, 631, 643, 645, 647, 648, 649, 651, 652, 653, 654, 656, 657, 658, 659, 662], "metadata": [1, 620], "vertical_grid": [1, 228, 236, 585, 587, 593, 594, 599, 611, 618, 620, 645, 648, 649, 654, 656, 657, 658, 662], "grid_typ": [1, 599, 618, 620, 645, 648, 654, 656, 657, 658, 662], "60layerphc": [1, 599, 651], "mb": [1, 11, 21, 599, 620, 651, 653], "init_max_memori": [1, 599, 620, 651, 653], "init_max_disk": [1, 599, 620, 651], "128": [1, 599, 639], "forward_max_memori": [1, 599, 620, 651, 653], "forward_max_disk": [1, 599, 620, 651], "prefix": [1, 464, 466, 476, 599, 611, 613, 620, 651], "qu": [1, 598, 599, 617, 620, 650, 651, 661], "ec": [1, 599, 620, 651], "wc": [1, 599, 620, 651], "mesh_descript": [1, 599, 620, 651], "eddi": [1, 596, 599, 648, 651, 659], "closur": [1, 599, 651, 652], "e3sm_vers": [1, 599, 620, 651], "enhanc": [1, 599], "around": [1, 234, 598, 599, 608, 618, 619, 620, 643, 648, 650, 651, 656, 659], "equat": [1, 228, 599, 602, 618, 626, 650, 651, 652], "south": [1, 599], "pole": [1, 599, 651], "35": [1, 599, 618, 648, 649, 650, 651, 656, 658, 661, 663], "greenland": [1, 31, 207, 216, 218, 599, 611, 615, 622, 623, 630, 632, 633, 634, 664], "min_r": [1, 599, 620, 651], "max_r": [1, 599, 620, 651], "mid": [1, 228, 599, 651], "revis": [1, 6, 599, 620, 651], "increment": [1, 599, 620, 651], "mesh_revis": [1, 599, 620, 651], "finest": [1, 599, 620, 650, 651, 658, 660], "coarsest": [1, 599, 618, 620, 651], "60": [1, 8, 45, 330, 511, 525, 539, 563, 598, 599, 608, 609, 611, 645, 650, 651, 654, 659, 660, 661], "url": [1, 8, 12, 37, 599, 611, 614, 620, 651], "pull_request": [1, 599, 620, 651], "miss": [1, 8, 599, 611, 620, 651], "dynamical_adjust": 1, "spin": [1, 176, 611, 631, 647, 651], "kind": [1, 617, 618], "dynamicaladjust": 1, "dynamicadjust": [1, 299, 599], "qu240dynamicadjust": [1, 599, 611], "adjust": [1, 213, 228, 231, 272, 285, 297, 299, 302, 304, 306, 308, 310, 324, 333, 342, 347, 352, 410, 421, 454, 595, 599, 602, 605, 611, 620, 630, 633, 634, 635, 647, 651, 654, 657, 660], "dissip": [1, 297, 299, 304, 306, 333, 342, 347, 352, 599, 618, 648, 651, 656], "fast": [1, 297, 299, 304, 306, 333, 342, 347, 352, 599, 630, 651, 661], "move": [1, 208, 228, 297, 299, 333, 342, 347, 352, 599, 611, 612, 618, 657], "wave": [1, 297, 299, 304, 306, 333, 342, 347, 352, 427, 429, 431, 433, 434, 436, 438, 599, 604, 611, 618, 648, 651, 656], "restart_tim": 1, "0001": [1, 657], "02_00": 1, "03_00": 1, "restart_filenam": [1, 135, 297, 299, 302, 304, 306, 308, 310, 333, 347, 352, 599], "rst": [1, 7, 82, 87, 99, 114, 150, 164, 171, 194, 204, 210, 211, 213, 214, 215, 220, 599, 611, 618, 619], "step_nam": 1, "damped_adjustment_1": [1, 599], "namelist_opt": 1, "01_00": [1, 611, 657], "config_rayleigh_frict": 1, "config_rayleigh_damping_coeff": [1, 597], "stream_replac": [1, 611], "restart_interv": [1, 599, 611], "template_replac": [1, 17, 25, 611], "simul": [1, 214, 270, 297, 367, 375, 413, 449, 457, 459, 462, 474, 496, 499, 501, 503, 573, 577, 580, 599, 602, 605, 607, 608, 611, 615, 617, 618, 619, 630, 643, 648, 649, 651, 652, 653, 654, 659, 661, 662], "config_do_restart": 1, "config_start_tim": 1, "whew": 1, "That": [1, 611, 612, 615, 618, 619, 663], "lot": [1, 8, 611, 612, 619], "thank": 1, "bear": [1, 619], "myriad": 1, "highlight": 1, "roughli": [1, 612, 618, 650, 658, 660], "broken": [1, 97, 112, 148, 162, 169, 202, 611, 612], "ident": [1, 3, 6, 8, 85, 95, 97, 110, 112, 141, 148, 156, 162, 167, 169, 200, 202, 210, 211, 213, 214, 215, 220, 239, 251, 260, 286, 294, 360, 363, 418, 596, 599, 602, 607, 610, 612, 618, 619, 623, 626, 627, 629, 630, 631, 636, 648, 651, 654, 656, 657, 659, 660, 662], "analog": [1, 612], "get_available_cores_and_nod": [1, 612], "abl": [1, 6, 221, 222, 223, 224, 225, 611, 612, 613, 618, 619, 642], "unless": [1, 38, 69, 605, 612, 613, 618, 619], "am": 1, "theoret": [1, 612], "my": [1, 638], "ambit": 1, "gradual": [1, 599], "sea": [1, 7, 228, 230, 231, 232, 310, 324, 356, 410, 421, 441, 454, 464, 468, 471, 472, 473, 589, 590, 591, 592, 595, 599, 601, 602, 605, 619, 620, 645, 647, 649, 651, 652, 654, 657], "surfac": [1, 7, 212, 228, 230, 231, 232, 234, 324, 410, 421, 441, 454, 464, 468, 471, 472, 473, 499, 501, 503, 589, 590, 591, 592, 595, 599, 601, 602, 605, 618, 620, 628, 645, 647, 648, 649, 651, 654, 656, 657, 658, 659, 662], "height": [1, 7, 228, 230, 231, 232, 324, 410, 421, 454, 468, 589, 590, 591, 592, 595, 599, 601, 602, 605, 620, 645, 647, 649, 651, 654, 657], "frazil": [1, 228, 413, 573, 577, 580, 582, 602, 610, 647, 654, 662], "land": [1, 7, 207, 228, 231, 232, 330, 336, 406, 442, 445, 447, 451, 595, 599, 602, 605, 607, 616, 619, 620, 622, 623, 645, 651, 653, 654, 657, 659, 664], "flux": [1, 212, 228, 441, 467, 475, 599, 602, 605, 624, 628, 647, 651, 654, 657], "1d": [1, 228, 585, 586, 587, 588, 589, 590, 591, 593, 594, 602, 605], "coordin": [1, 264, 409, 410, 418, 447, 451, 462, 587, 593, 594, 597, 599, 602, 605, 617, 643, 644, 646, 648, 649, 651, 654, 656, 657, 658, 662], "3d": [1, 234, 464], "z": [1, 228, 330, 409, 410, 418, 447, 451, 462, 464, 471, 472, 473, 588, 589, 590, 591, 592, 593, 594, 602, 605, 618, 619, 643, 648, 649, 654, 656, 657, 658, 660, 662, 665], "iceshelf": [1, 228], "pressur": [1, 7, 228, 231, 232, 324, 398, 410, 421, 454, 595, 599, 601, 602, 605, 620, 643, 651, 653, 654, 657], "match": [1, 324, 410, 421, 454, 557, 597, 602, 605, 613], "particl": [1, 497, 499, 503, 573, 577, 607, 610, 647], "plot": [1, 8, 57, 93, 108, 123, 182, 208, 209, 210, 211, 212, 215, 257, 367, 369, 376, 398, 400, 434, 549, 550, 551, 552, 553, 554, 555, 596, 597, 598, 600, 601, 604, 605, 606, 607, 608, 609, 617, 618, 619, 624, 625, 626, 627, 628, 631, 649, 650, 653, 654, 657, 658, 660, 661, 664], "nearli": [1, 174, 215, 286, 599, 611, 612, 615, 616, 618, 619, 631, 643, 651, 660], "netcdf": [1, 222, 233, 234, 235, 236, 355, 402, 599, 618, 620, 637, 638, 639, 640, 641, 642, 651], "maintain": [1, 660, 663], "hundr": 1, "en4": [1, 599, 612, 651], "1900": [1, 599, 612, 651], "bgc": [1, 318, 321, 599, 612], "overkil": [1, 611], "never": [1, 611, 615], "note": [1, 7, 8, 208, 233, 616, 618, 629, 630, 635, 636, 641, 651, 653], "show": [1, 3, 7, 8, 230, 462, 464, 597, 611, 618, 619, 624, 628, 641, 642, 648, 650, 651, 656, 657, 658], "recent": [1, 646], "issu": [1, 3, 605, 611, 650, 658], "777": 1, "aren": [1, 8, 599, 611, 612, 613, 617, 618, 619, 650, 658, 660, 665], "occur": [1, 143, 208, 614], "rpe_test": [1, 611, 612, 663], "5": [1, 6, 8, 45, 211, 213, 219, 220, 234, 254, 433, 468, 552, 596, 599, 600, 602, 604, 607, 610, 611, 612, 614, 618, 619, 620, 625, 627, 629, 630, 633, 634, 635, 636, 647, 648, 649, 651, 652, 654, 656, 657, 659, 662, 663], "sourc": [1, 3, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 99, 100, 102, 103, 104, 106, 107, 108, 109, 110, 112, 114, 115, 117, 118, 119, 121, 122, 123, 124, 125, 127, 128, 129, 130, 132, 133, 134, 135, 136, 138, 139, 140, 141, 143, 145, 146, 147, 148, 150, 151, 153, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 169, 171, 172, 174, 175, 176, 178, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 193, 194, 195, 197, 199, 200, 202, 204, 205, 221, 222, 223, 224, 225, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 245, 246, 248, 249, 251, 252, 254, 255, 257, 258, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 290, 291, 294, 297, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 336, 337, 338, 339, 340, 341, 342, 345, 346, 347, 350, 351, 352, 355, 356, 357, 360, 363, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 416, 417, 418, 419, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 576, 577, 578, 580, 581, 582, 583, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 611, 613, 618, 619, 620, 635, 636, 637, 638, 639, 640, 641, 642, 663], "major": [1, 226, 611, 619, 642, 643, 651, 659], "assembl": [1, 299], "check": [1, 6, 8, 63, 75, 80, 214, 228, 286, 602, 605, 613, 615, 617, 618, 619, 620, 638, 641, 647, 662, 663, 665], "extend": [1, 620, 659], "opiton": 1, "mpas_model": [1, 6, 207, 595, 611, 620], "ocean_model": [1, 595, 613, 619, 620], "previous": [1, 611, 617], "resourc": [1, 8, 21, 65, 596, 604, 611, 618, 630, 633, 634, 651], "Then": [1, 5, 7, 8, 207, 212, 221, 222, 223, 224, 225, 226, 595, 596, 597, 599, 602, 604, 605, 607, 610, 611, 617, 619, 626, 627, 629, 631, 636, 642, 648, 651, 654, 657, 663], "configure_global_ocean": [1, 599, 611], "initial_condit": [1, 174, 318, 321, 494, 612], "polar": [1, 599, 620, 645, 651], "scienc": [1, 599, 645, 651], "center": [1, 228, 230, 233, 234, 599, 611, 618, 625, 626, 627, 631, 645, 648, 651, 653, 654, 656, 657, 658, 662], "hydrograph": [1, 599, 645, 651], "climatologi": [1, 599, 645, 651], "en4_1900": [1, 318, 321, 599, 647, 651], "met": [1, 3], "offic": 1, "hadlei": 1, "centr": 1, "init_descript": [1, 599, 620, 651], "bathymetri": [1, 8, 336, 446, 462, 599, 611, 620, 651, 653, 662], "bathy_descript": [1, 599, 620, 651], "gebco": [1, 620, 651], "2019": [1, 620, 638, 651], "bedmachin": [1, 330, 620, 651], "antarctica": [1, 330, 599, 620, 643, 651], "with_bgc": [1, 318, 321, 611], "todo": 1, "fill": [1, 208, 330, 599, 605, 651], "bgc_descript": 1, "wisc_descript": 1, "shelv": [1, 595, 599, 602, 620, 643, 645, 647, 651, 654, 657], "although": [1, 8, 617], "config_fil": [1, 6, 70, 71, 73], "commandlin": 1, "w": [1, 6, 212, 613, 615, 628, 659, 663], "test_baroclinic_channel": 1, "test_nightli": 1, "check_siz": [1, 620], "verifi": [1, 8, 85, 95, 97, 110, 112, 141, 148, 156, 162, 167, 169, 200, 202, 497, 597, 620], "home": [1, 8, 613, 618, 619, 620, 638, 641, 642], "default_input": [1, 207, 595, 611, 620], "mesh_max_memori": [1, 620, 651], "mesh_max_disk": [1, 620, 651], "add_metadata": [1, 599, 620, 651], "quasi": [1, 8, 50, 176, 178, 499, 503, 573, 577, 599, 617, 620, 631, 651, 654, 657, 660, 661], "uniform": [1, 8, 50, 210, 215, 279, 484, 492, 511, 515, 517, 525, 529, 531, 539, 543, 545, 563, 567, 569, 596, 598, 599, 602, 604, 607, 608, 609, 610, 611, 617, 618, 619, 620, 625, 626, 627, 631, 648, 651, 654, 656, 657, 658, 660, 661, 662], "max_depth": [1, 599, 620, 651], "autodetect": [1, 599, 620, 651, 653], "creation_d": [1, 599, 620, 651], "email": [1, 599, 620, 651, 653], "lanl": [1, 616, 620, 638, 651, 663], "gov": [1, 8, 611, 614, 620, 638, 641, 651], "enable_ocean_initial_condit": [1, 620, 651], "enable_ocean_graph_partit": [1, 620, 651], "enable_seaice_initial_condit": [1, 620, 651], "enable_scrip": [1, 620, 651], "enable_diagnostics_fil": [1, 620, 651], "comparisonlatresolut": [1, 620, 651], "comparisonlonresolut": [1, 620, 651], "comparisonantarcticstereowidth": [1, 620, 651], "6000": [1, 599, 620, 645, 651], "comparisonantarcticstereoresolut": [1, 620, 651], "comparisonarcticstereowidth": [1, 620, 651], "comparisonarcticstereoresolut": [1, 620, 651], "tanh_dz": [1, 599, 620, 651], "vert_level": [1, 599, 611, 618, 619, 620, 645, 648, 649, 652, 654, 656, 657, 658], "bottom_depth": [1, 599, 611, 618, 619, 620, 645, 648, 652, 654, 656, 657, 658, 659, 662], "3000": [1, 599, 617, 620, 650, 651, 658, 660], "min_layer_thick": [1, 599, 620, 645], "max_layer_thick": [1, 599, 620, 645], "unfortun": 1, "lost": 1, "standard": [1, 119, 330, 599, 605, 608, 612, 613, 651, 660, 663], "search": [1, 6, 39, 233, 638], "through": [1, 3, 71, 424, 438, 599, 605, 612, 619, 622, 630, 633, 634, 643, 646, 649, 656, 657], "our": [1, 612, 617, 618, 619, 641, 663], "preserv": [1, 330], "lower": [1, 8, 611, 618, 648, 656], "hpc": [1, 613, 638, 642], "laptop": [1, 613, 618, 619, 620], "desktop": [1, 618, 619], "varieti": [1, 632], "straightforward": [1, 611], "Or": [1, 6, 620], "late": 1, "run_step": [1, 611, 626], "subset": [1, 6], "run_by_default": [1, 27, 209, 210, 215, 611], "mesh_typ": [1, 85, 89, 91, 95, 97, 99, 102, 104, 106, 119, 145, 156, 158, 162, 164, 184, 189, 209, 210, 611], "dome": [1, 8, 42, 85, 127, 132, 135, 169, 174, 180, 207, 216, 611, 615, 622, 623, 632, 663, 664], "tye": [1, 85], "smoke_test": [1, 210, 611], "setupmesh": [1, 8, 211, 212, 215, 611], "runmodel": [1, 212, 213, 214, 215, 219, 220, 611], "unifi": [1, 613, 641], "detect": [1, 228, 599, 611, 620, 637, 638, 639, 640, 642, 651, 653, 660, 663], "fulli": [1, 605], "badger": [1, 226, 613, 642, 663], "cori": [1, 226, 613, 642, 663], "haswel": [1, 226, 663], "compi": [1, 226, 640, 663], "nest": [1, 618, 619], "27": 1, "29": [1, 661], "31": 1, "decomp_test": [1, 7, 618, 647, 663, 665], "32": [1, 606, 607, 610, 630, 636, 641, 658, 660, 663], "threads_test": [1, 8, 618, 647, 663, 665], "33": [1, 620, 656, 657, 663], "analysis_test": [1, 647, 665], "34": [1, 611, 626, 654, 657, 659, 662, 663], "daily_output_test": 1, "37": [1, 599, 663], "38": [1, 663], "39": 1, "41": 1, "43": 1, "44": [1, 654], "45": [1, 599, 638, 651], "phc_bgc": [1, 647, 651], "46": [1, 625], "cull": [1, 8, 336, 445, 596, 597, 599, 602, 604, 605, 607, 610, 611, 618, 619, 627, 629, 630, 633, 634, 636, 651, 653, 659], "switch": [1, 613, 618, 620, 662], "treat": [1, 611, 612], "progress": [1, 69, 230, 330, 464, 466], "intermix": 1, "continu": [1, 3, 135, 611, 617, 618, 623, 647, 651, 657], "azur": 1, "pipelin": 1, "doc": [1, 5, 7, 611, 618, 619, 641, 666], "renam": [1, 612], "titl": [1, 464, 466], "tabl": [1, 8, 556, 613, 642, 663], "tree": [1, 7, 616, 619], "0_doc": 1, "brows": [1, 618, 619], "index": [1, 5, 8, 228, 587, 588, 589, 590, 591, 592, 593, 594, 611, 618, 619, 625, 626, 631], "html": [1, 5, 622, 646], "keep": [1, 3, 6, 8, 11, 36, 441, 599, 611, 613, 619, 620, 657], "track": [1, 8, 11, 599, 611, 613, 659, 662], "thorough": 1, "absolut": [1, 6, 8, 11, 12, 36, 70, 71, 73, 207, 595, 611, 613, 620, 663], "sure": [1, 6, 8, 75, 207, 222, 226, 239, 251, 260, 286, 294, 360, 363, 418, 595, 596, 599, 602, 605, 611, 612, 613, 615, 618, 619, 620, 625, 626, 627, 629, 630, 631, 636, 641, 642, 648, 650, 651, 654], "present": [1, 330, 599, 613, 617, 618, 619, 649], "figur": [1, 8, 468, 552, 554, 611, 619, 620, 625, 626, 627, 631], "implicitli": 1, "repositori": [1, 611, 616, 618, 619, 663], "affect": [1, 8, 611, 623, 643, 647], "immedi": [1, 42, 611, 613, 618, 619], "noth": [1, 8, 599, 614, 650, 658, 660, 661], "preclud": 1, "wouldn": 1, "limit": [1, 613, 616, 624], "review": 1, "agre": 1, "column": [1, 554, 600, 613, 619, 628, 643, 652, 654, 657, 663], "eas": [1, 618], "shallow": [1, 9, 613, 623, 626, 660], "water": [1, 9, 599, 605, 618, 643, 648, 649, 651, 654, 656, 657, 659], "he": 1, "down": [1, 587, 588, 589, 590, 591, 592, 593, 594, 602, 605, 645], "road": 1, "86": 1, "higher": [1, 599, 618, 651, 662], "subject": 1, "thing": [1, 6, 221, 222, 223, 225, 226, 611, 612, 616, 618, 619], "proof": 1, "concept": [1, 611, 612, 615, 664], "250": [1, 599, 600, 619, 645, 652, 662], "thick": [1, 174, 210, 211, 212, 213, 220, 228, 230, 441, 446, 587, 591, 592, 593, 594, 596, 599, 600, 602, 604, 605, 620, 623, 625, 628, 630, 633, 634, 645, 647, 648, 649, 651, 652, 654, 656, 657], "245": 1, "imposs": 1, "effect": [1, 657], "ask": [1, 624, 651], "evolv": [1, 228, 616, 643, 645, 657], "declar": [1, 3, 7], "good": [1, 8, 11, 611, 613, 617, 618, 619], "merg": 1, "intent": [1, 8], "ongo": 1, "basi": [1, 299, 302, 304, 306, 308, 310, 647], "demonstr": [1, 611, 618, 619, 662], "compass": [2, 3, 5, 7, 8, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 595, 596, 597, 598, 599, 600, 601, 602, 604, 605, 606, 607, 608, 609, 610, 614, 615, 617, 618, 620, 622, 623, 626, 630, 633, 634, 637, 638, 639, 640, 641, 642, 646, 647, 651, 652, 655, 657, 659, 662, 664, 665], "packag": [2, 5, 6, 7, 8, 12, 14, 17, 25, 28, 67, 72, 73, 226, 336, 599, 611, 613, 614, 615, 616, 617, 618, 619, 637, 638, 639, 640, 641, 642, 651, 655, 663], "output": [2, 6, 7, 8, 9, 11, 16, 22, 26, 34, 58, 59, 60, 65, 69, 75, 91, 93, 101, 106, 108, 116, 121, 123, 127, 132, 137, 152, 173, 180, 182, 196, 206, 208, 209, 210, 211, 212, 213, 215, 219, 220, 228, 233, 234, 235, 247, 250, 259, 276, 286, 291, 297, 330, 355, 376, 392, 398, 415, 423, 444, 449, 456, 459, 462, 474, 491, 492, 509, 523, 537, 549, 554, 561, 579, 586, 596, 597, 599, 600, 602, 604, 605, 607, 610, 615, 616, 617, 619, 620, 630, 641, 651, 653, 663, 665], "yyyi": 3, "mm": [3, 280, 512, 526, 540, 564], "dd": 3, "summar": [3, 623], "code": [3, 6, 7, 8, 11, 207, 212, 228, 595, 597, 611, 613, 615, 616, 618, 619, 620, 623, 628, 632, 644, 647, 660, 663], "softwar": [3, 59, 641, 663], "success": [3, 37, 207, 595, 611, 620], "your": [3, 5, 6, 8, 207, 222, 226, 595, 612, 613, 614, 617, 618, 619, 620, 637, 638, 641, 642, 650, 651, 658, 660, 661, 663], "appear": [3, 226, 605, 611], "head": [3, 638], "technic": [3, 7], "focu": [3, 617], "extent": [3, 146, 662], "independ": [3, 6, 611, 615], "thu": [3, 7, 611, 618, 651, 657], "meet": [3, 656], "pde": 3, "solver": [3, 95, 97, 99, 104, 141, 148, 150, 153, 156, 162, 164, 208, 211, 212, 213, 219, 220, 611, 613, 616, 623, 624, 625, 626, 627, 629, 630, 636, 663], "steer": 3, "low": [3, 150, 199, 651, 657], "interfac": [3, 8, 228, 230, 464, 467, 468, 471, 472, 473, 475, 585, 586, 587, 593, 594, 602, 605, 611, 612, 613, 616, 618, 619, 643, 645], "sequenc": [3, 210, 211, 213, 215, 220, 463, 599, 611, 612, 615, 663, 664, 665], "math": 3, "almost": [3, 8, 617], "latex": 3, "2ab": 3, "imag": [3, 7, 235, 236, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 611, 618, 623, 625, 626, 627, 631, 651, 661], "small": [3, 8, 20, 209, 228, 600, 611, 623, 624, 625, 626, 630, 637, 638, 644, 645, 654, 660, 663], "jpeg": 3, "png": [3, 8, 235, 236, 598, 606, 609, 618, 619, 623, 625, 626, 628, 631], "okai": [3, 611, 619], "centric": 3, "pseudo": 3, "item": 3, "timelin": 3, "staf": 3, "example_funct": 3, "foo": [3, 612], "configur": [3, 6, 7, 8, 11, 21, 26, 37, 60, 63, 64, 65, 66, 67, 70, 71, 73, 80, 93, 108, 123, 182, 197, 214, 226, 236, 355, 356, 585, 587, 588, 589, 593, 594, 597, 609, 612, 616, 617, 618, 619, 620, 626, 630, 635, 641, 642, 643, 645, 647, 651, 653, 657, 659, 662, 663, 664], "properli": [3, 221, 222, 223, 224, 225, 618, 620, 647, 661, 663], "page": [4, 7, 557, 637], "auto": 4, "summari": [4, 208, 624, 638], "relev": [4, 7, 8, 214, 618, 619, 637, 638, 639, 640, 641, 642, 663], "procedur": [5, 208, 226, 228, 613, 617, 641], "export": [5, 614], "docs_vers": 5, "test": [5, 6, 7, 8, 9, 10, 11, 16, 21, 22, 26, 27, 28, 30, 31, 32, 34, 35, 39, 42, 43, 48, 50, 53, 55, 60, 62, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 226, 228, 229, 585, 595, 596, 597, 598, 600, 601, 602, 604, 605, 606, 607, 608, 609, 610, 613, 614, 615, 616, 622, 624, 625, 626, 627, 628, 629, 630, 631, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 648, 649, 650, 652, 654, 656, 657, 658, 659, 660, 661, 662], "cd": [5, 207, 595, 613, 618, 619, 638, 663], "rm": 5, "rf": 5, "developers_guid": [5, 618, 619], "_build": 5, "view": [5, 613], "act": [6, 441, 612, 619, 645], "instal": [6, 613, 618, 641, 642, 663], "reflect": [6, 613], "h": [6, 599, 611, 619, 662], "v": [6, 228, 613, 651, 665], "example_compact": [6, 207, 595, 611, 620], "test1": 6, "test2": 6, "displai": [6, 8, 330, 641], "messag": [6, 8, 611, 614, 641], "test_expr": [6, 39], "substr": 6, "express": [6, 39], "think": [6, 618], "tempat": 6, "step1": 6, "step2": 6, "underli": 6, "framework": [6, 7, 26, 68, 75, 207, 595, 611, 615, 616, 618, 622, 646, 659, 662], "standalon": [6, 224, 611, 643], "num": 6, "mach": [6, 11, 637, 638, 639, 640, 641, 642, 663], "p": [6, 613, 618, 620, 663], "suite_nam": [6, 8, 35, 69, 71, 72, 73, 663], "case_numb": 6, "comma": [6, 8, 627, 650, 658, 660, 661], "requir": [6, 8, 11, 21, 82, 87, 99, 114, 135, 150, 164, 171, 194, 204, 207, 212, 213, 219, 220, 245, 266, 312, 324, 413, 421, 429, 454, 512, 526, 540, 564, 595, 599, 607, 610, 611, 612, 613, 614, 616, 617, 618, 619, 620, 622, 623, 626, 628, 629, 630, 633, 634, 636, 642, 645, 646, 651, 663, 664], "piec": [6, 611, 618], "r": [6, 599, 641, 650], "tell": [6, 613], "re": [6, 150, 199, 596, 597, 599, 610, 611, 612, 613, 615, 617, 618, 619, 620, 641, 642, 650, 653, 658, 660, 661, 663], "leav": [6, 336, 611, 620, 654, 657], "unknown": [6, 226, 642], "temp": 6, "baseline_dir": [6, 26, 70, 71, 73], "predefin": [6, 659], "afther": 6, "behind": [6, 612, 618], "fresh": [6, 617], "resid": 6, "test_suit": [6, 611], "proven": [6, 36, 616, 620, 651], "entir": [6, 617, 618, 648, 654, 656, 657, 665], "complet": [6, 8, 14, 17, 208, 228, 613, 618, 619, 623, 651, 663], "comparison": [6, 8, 26, 74, 75, 270, 597, 599, 611, 620, 649, 651, 654, 657], "against": [6, 8, 75, 219, 297, 368, 428, 437, 599, 600, 607, 610, 611, 619, 623, 626, 647, 649], "no_step": 6, "wherea": [6, 8, 611, 654, 662, 664], "clone": [6, 207, 595, 611, 613, 618, 619, 663], "tab": [6, 663], "full_run": [6, 599, 626, 627, 629, 631, 636, 648, 651, 654], "restart_run": [6, 82, 87, 99, 114, 150, 164, 171, 194, 204, 599, 626, 627, 629, 631, 636, 648, 651, 654], "preced": [6, 36], "serial": [6, 20, 609, 611, 661], "structur": [6, 8, 616, 619, 651], "onto": [6, 228, 233, 398, 601, 613, 653, 661], "whose": [6, 550, 554, 555, 611], "pr": [6, 663, 665], "saniti": [6, 228], "print": [6, 8, 39, 75, 555, 556, 611, 612, 619, 665], "restructuredtext": 7, "label": [7, 619, 642, 663], "_ocean": 7, "dev_": 7, "prepend": 7, "_dev_ocean": 7, "_ocean_baroclinic_channel": 7, "_ocean_baroclinic_channel_default": 7, "_dev_ocean_baroclinic_channel": 7, "_dev_ocean_baroclinic_channel_default": 7, "who": [7, 613, 618, 619, 620, 641], "citat": 7, "brief": [7, 618, 619], "awar": [7, 226, 611, 618, 619, 642], "wish": [7, 8, 228, 611, 613, 617, 618, 651, 663, 665], "specif": [7, 8, 28, 207, 226, 595, 597, 599, 610, 611, 613, 616, 617, 618, 619, 620, 635, 638, 642, 651, 663, 665], "share": [7, 77, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 228, 595, 596, 597, 599, 602, 604, 605, 607, 610, 611, 613, 616, 618, 619, 621, 626, 627, 628, 631, 640, 641, 642, 644, 648, 656, 663], "public": [7, 8, 611, 620], "underscor": [7, 618, 619], "currentmodul": 7, "autosummari": 7, "toctre": 7, "numpydoc": 7, "compute_land_ice_pressure_and_draft": [7, 228], "ssh": [7, 228, 230, 231, 232, 376, 378, 587, 589, 590, 591, 592, 593, 594, 595, 597, 599, 602, 605, 611, 618, 620, 638, 641, 643, 649, 651, 653, 654, 657], "modifysshmask": 7, "ref_dens": [7, 232], "draft": [7, 232, 446, 602, 605, 643, 645, 651, 657], "paramet": [7, 9, 10, 11, 12, 14, 15, 16, 17, 18, 21, 23, 24, 25, 26, 27, 31, 32, 34, 35, 37, 38, 39, 42, 43, 45, 46, 47, 50, 55, 57, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 80, 82, 85, 87, 89, 91, 93, 95, 97, 99, 102, 104, 106, 108, 110, 112, 114, 117, 119, 121, 123, 124, 127, 129, 132, 135, 138, 141, 145, 148, 150, 153, 156, 158, 160, 162, 164, 167, 169, 171, 174, 176, 178, 180, 182, 184, 186, 189, 191, 194, 197, 200, 202, 204, 230, 231, 232, 233, 234, 235, 236, 238, 239, 242, 245, 248, 251, 254, 257, 260, 264, 266, 268, 270, 273, 276, 277, 279, 283, 286, 290, 291, 294, 297, 299, 302, 304, 306, 308, 310, 312, 315, 318, 321, 324, 327, 330, 331, 333, 336, 340, 342, 345, 347, 350, 352, 355, 356, 357, 360, 363, 367, 369, 371, 373, 376, 383, 386, 389, 392, 395, 398, 403, 406, 409, 410, 413, 416, 418, 421, 424, 427, 429, 431, 433, 434, 436, 438, 441, 442, 445, 446, 447, 449, 451, 454, 457, 459, 462, 464, 465, 466, 468, 469, 470, 474, 478, 480, 484, 488, 491, 492, 494, 497, 499, 501, 503, 506, 509, 511, 515, 517, 520, 523, 525, 529, 531, 534, 537, 539, 543, 545, 548, 549, 550, 551, 554, 555, 556, 557, 558, 561, 563, 567, 569, 573, 576, 577, 580, 582, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 599, 607, 610, 611, 616, 629, 630, 633, 634, 636, 648, 651, 654, 656, 657, 659, 662], "xarrai": [7, 230, 232, 445, 462, 464, 466, 474, 587, 588, 589, 590, 591, 592, 593, 594, 611, 618, 619], "dataarrai": [7, 230, 232, 464, 466, 588, 589, 590, 591, 592, 611], "mask": [7, 232, 330, 445, 462, 587, 590, 593, 594, 599, 605, 611, 618, 620, 645, 651, 653], "landicepressur": [7, 228, 231, 232, 599, 605, 611, 643, 651, 654, 657], "deviat": [7, 232], "densiti": [7, 8, 146, 228, 232, 234, 618, 629, 630, 633, 634, 636, 643, 657, 659], "seawat": [7, 232, 657], "displac": [7, 232, 643], "landicedraft": [7, 228, 232, 605, 657], "equal": [7, 214, 232, 612], "entri": [7, 33, 70, 71, 605, 657], "side": 7, "colon": 7, "doubl": [7, 611, 659], "quot": 7, "interfer": 7, "keyword": [7, 8, 611, 619], "arg": [7, 8, 65], "On": [7, 8, 619, 642, 666], "indent": [7, 611], "obviou": [7, 611, 618], "els": [7, 8, 611, 618], "meant": [8, 612, 619, 620, 623, 625, 626, 630, 635, 647], "list_cas": 8, "list_machin": [8, 612], "list_suit": 8, "anywher": [8, 613], "setup_cas": 8, "clean_cas": 8, "setup_suit": 8, "clean_suit": 8, "product": [8, 376, 610, 653], "ntask": [8, 11, 18, 21, 60, 65, 82, 87, 99, 114, 135, 150, 164, 171, 194, 204, 245, 266, 312, 324, 413, 421, 429, 454, 596, 599, 604, 611, 617, 618, 619], "cpus_per_task": [8, 11, 18, 21, 65, 611], "caveat": 8, "sit": 8, "idl": 8, "fraction": [8, 82, 208, 445, 446, 605, 618, 624, 645, 648, 654, 656, 657, 658, 659, 662], "min_task": [8, 11, 21, 65, 82, 87, 99, 114, 135, 150, 164, 171, 194, 204, 245, 266, 312, 324, 413, 421, 429, 454, 483, 596, 599, 610, 611, 617, 618, 619], "min_cpus_per_task": [8, 11, 21, 65, 611], "fewest": 8, "run_test": [8, 611, 619], "run_single_step": 8, "cpu": [8, 611, 663], "retriev": [8, 614], "text": [8, 650], "txt": [8, 72, 73, 611, 614], "case_output": 8, "implement": [8, 208, 209, 210, 211, 212, 215, 228, 446, 596, 597, 598, 600, 601, 602, 604, 605, 606, 607, 608, 609, 610, 612, 618, 619, 623, 624, 625, 626, 627, 628, 631, 643, 648, 650, 651, 652, 658, 659, 660, 661, 662], "termin": [8, 611, 619], "window": [8, 625, 626, 628, 631], "update_cach": 8, "enabl": [8, 577, 599, 607, 610, 611, 614, 620, 623, 641, 651, 662], "parser": [8, 36], "mpasconfigpars": 8, "compassconfigpars": [8, 11, 26, 37, 60, 63, 64, 66, 67, 93, 108, 123, 182, 236, 238, 355, 356, 409, 576, 585, 587, 588, 589, 593, 594], "convert": [8, 463, 512, 526, 540, 564, 611, 617, 618, 619], "add_from_packag": 8, "make_diagnostics_fil": [8, 651], "makediagnosticsfil": 8, "behavior": [8, 69, 611, 617, 618, 623, 626, 647], "getinteg": 8, "getfloat": [8, 607, 611, 617, 618, 619], "getboolean": [8, 611, 618], "getlist": 8, "integ": [8, 551], "getexpress": 8, "tupl": [8, 468], "rang": [8, 228, 599, 630, 643, 659], "arang": 8, "check_cal": [8, 611], "won": [8, 612, 617, 618, 619, 620], "captur": [8, 619], "insid": [8, 611, 612, 618, 657], "subprocess": [8, 11, 65, 68, 611, 612, 614, 619], "trick": [8, 210, 611], "snippet": [8, 618], "setup_mesh": [8, 209, 210, 611, 625, 626, 628, 631], "create_landice_grid_from_generic_mpas_grid": [8, 209, 210, 211, 212, 215], "mpas_grid": [8, 210, 611], "o": [8, 599, 612, 613, 619, 620, 663], "landice_grid": [8, 611], "l": [8, 75, 641], "relat": [8, 23, 79, 207, 210, 213, 215, 219, 220, 228, 467, 475, 595, 596, 597, 599, 602, 604, 605, 607, 610, 611, 612, 613, 614, 618, 620, 623, 625, 626, 627, 628, 631, 637, 638, 639, 640, 641, 642, 643, 645, 648, 649, 651, 653, 654, 656, 657, 658, 659, 661, 662, 663], "intern": [8, 11, 26, 427, 429, 431, 433, 434, 436, 438, 604, 611, 614, 656], "importlib": [8, 611], "though": [8, 11, 611, 612, 618, 619, 651], "whenev": [8, 611, 618, 619], "step_dir": 8, "database_root": 8, "download_path": 8, "join": 8, "remote_filenam": 8, "bedmachineantarctica_and_gebco_2019_0": [8, 611], "05_degre": [8, 611], "200128": [8, 611], "local_filenam": 8, "topographi": [8, 445, 446, 468, 590, 599, 605, 611, 618, 643, 645, 648, 653, 654, 656, 657, 658, 659, 662, 664], "file_nam": 8, "web": [8, 557, 611, 620], "anl": [8, 611, 620], "dest_path": [8, 37], "remot": [8, 12, 613], "quasiuniformsphericalmeshstep": [8, 598], "icosahedralmeshstep": [8, 598], "jigsaw": [8, 43, 47, 49, 50, 52, 54, 55, 273, 276, 611, 629, 636, 651], "opt": [8, 55], "make_jigsaw_mesh": [8, 50], "icosahedr": [8, 43, 45, 273, 276, 650], "smooth": [8, 446, 605, 643, 657], "hand": [8, 612], "subdivis": [8, 43, 44, 45, 46, 47], "icosahedron": [8, 44, 45, 46, 47], "6": [8, 45, 211, 476, 599, 600, 610, 611, 618, 619, 627, 630, 646, 649, 662, 663], "120": [8, 45, 551, 599, 610, 650, 660], "7": [8, 45, 605, 610, 625, 641, 650, 651, 654, 657, 662, 663], "9": [8, 45, 468, 599, 610, 619, 642, 651, 657, 658, 663], "94": [8, 45], "spherical_mesh": [8, 51], "cell_width": [8, 43, 44, 45, 46, 50, 51, 52, 57], "icosahedral_method": 8, "jigsaw_mesh_filenam": 8, "msh": 8, "jigsaw_geom_filenam": 8, "geom": 8, "jigsaw_jcfg_filenam": 8, "jig": 8, "jigsaw_hfun_filenam": 8, "spac": 8, "triangles_filenam": 8, "mesh_triangl": 8, "mpas_mesh_filenam": 8, "plot_cell_width": 8, "cell_width_filenam": [8, 57], "cellwidthvslatlon": 8, "cell_width_image_filenam": 8, "cellwidthglob": 8, "cell_width_colormap": 8, "3wbgy5": 8, "add_mesh_dens": 8, "vtk": 8, "convert_to_vtk": 8, "vtk_dir": 8, "base_mesh_vtk": 8, "extract": [8, 599], "sphere": [8, 505, 506, 520, 534, 558, 598, 606, 608, 609, 650, 660, 661], "vtk_lat_lon": 8, "librari": [8, 213, 219, 220, 221, 226, 613, 618, 619, 623, 637, 638, 639, 640, 641, 642, 652, 661, 663], "moment": 8, "openmp_thread": [8, 11, 21, 65, 82, 87, 99, 114, 135, 150, 164, 171, 194, 204, 245, 266, 312, 324, 413, 421, 429, 454, 599, 604, 611, 618, 619], "gpmeti": [8, 620, 651], "divid": [8, 511, 525, 539, 563, 600, 619, 624, 645], "partition_graph": [8, 61, 607, 610], "circumst": [8, 643], "wast": 8, "update_namelist_pio": 8, "config_pio_num_iotask": [8, 611], "config_pio_strid": [8, 611], "v2": [8, 599, 616, 645, 651], "feel": [8, 611, 617, 618, 619], "safe": [8, 611, 613], "update_pio": [8, 61], "yourself": [8, 618, 642], "fact": [8, 11, 618], "culler": [8, 619], "make_graph_fil": [8, 611], "field": [8, 57, 59, 219, 228, 233, 330, 399, 400, 441, 445, 587, 593, 594, 596, 599, 602, 604, 605, 607, 608, 610, 618, 623, 630, 643, 648, 649, 650, 651, 653, 654, 656, 657, 658, 659, 660, 662], "weight": [8, 59, 228, 324, 410, 421, 454, 587, 593, 594, 626, 643, 645, 651], "weight_field": [8, 59], "critic": [8, 330, 599, 617, 618, 651], "filename2": [8, 75], "simpl": [8, 446, 605, 612, 618, 619, 657, 663], "temperatur": [8, 110, 112, 211, 212, 228, 473, 497, 596, 597, 599, 600, 602, 604, 605, 607, 610, 611, 618, 627, 628, 647, 648, 649, 650, 651, 654, 656, 657, 658, 659, 662], "salin": [8, 228, 471, 472, 497, 596, 597, 599, 600, 602, 604, 605, 607, 610, 611, 618, 647, 648, 649, 650, 651, 654, 656, 657, 658, 659, 662], "prognost": [8, 599, 602, 605, 623, 626, 627, 629, 630, 631, 636, 647, 648, 651, 654, 656, 659, 662], "4proc": [8, 648, 651], "8proc": [8, 648, 651], "alter": [8, 441, 588, 589, 605, 611, 616, 618, 645, 648, 650, 651, 654, 656, 657, 658, 659, 660, 661, 662], "skip_if_step_not_run": [8, 75, 611], "forc": [8, 164, 228, 398, 441, 442, 447, 451, 597, 601, 605, 607, 657, 659, 661, 662, 664], "failur": 8, "quiet": [8, 69, 75, 619], "report": 8, "threshold": [8, 446, 605, 630, 650, 653, 657, 658], "l1": [8, 75], "00000000000000e": 8, "l2": [8, 75, 548, 549, 550, 551, 556], "l_infin": 8, "linf": [8, 75, 548, 549, 550, 551, 556], "test_nightly_latest": 8, "1thread": [8, 648, 651], "2thread": [8, 648, 651], "test_20210616": 8, "further_valid": 8, "disabl": [8, 623, 630, 651, 664], "check_output": [8, 75], "unlik": [8, 618, 619, 620, 659, 662], "zero": [8, 174, 215, 441, 588, 589, 590, 591, 592, 596, 600, 602, 604, 605, 610, 617, 619, 627, 631, 654, 657], "l1_norm": [8, 75], "l2_norm": [8, 75], "linf_norm": [8, 75], "nonzero": [8, 75, 608, 660], "easiest": [8, 618], "clobber": 8, "qualit": [8, 611], "judgment": 8, "compare_tim": 8, "rundir1": [8, 74], "92264": 8, "82317": 8, "percent": 8, "781019682649793": 8, "speedup": 8, "1208377370409515": 8, "hous": [9, 651], "sw": 9, "dict": [9, 11, 15, 17, 23, 25, 26, 31, 67, 71, 286, 376, 485, 549, 550, 555, 611, 617, 619], "max_memori": [11, 21], "run_as_subprocess": [11, 611], "smallest": [11, 611, 615, 645, 664], "unit": [11, 464, 466, 476, 512, 526, 540, 564, 611, 615, 648, 649, 656, 664], "necessarili": [11, 12, 615, 651], "openmp": [11, 21, 65, 82, 87, 99, 114, 135, 150, 164, 171, 194, 204, 221, 222, 223, 224, 225, 245, 266, 312, 324, 413, 421, 429, 454, 611, 618, 637, 638, 639, 640, 641, 661], "parallel": [11, 20, 21, 609, 611, 612, 613, 614, 615, 618, 620, 637, 638, 639, 640, 641, 642, 661, 663, 664], "input_data": 11, "namelist_data": 11, "streams_data": 11, "machine_info": 11, "machineinfo": 11, "base_work_dir": [11, 26, 611], "log_filenam": [11, 26, 611], "At": [11, 26, 599, 611, 618, 619, 630, 633, 634, 657], "redirect": [11, 611], "work_dir_target": [12, 611], "out_nam": [14, 15, 17, 23, 24, 25, 611], "render": [17, 25, 611, 619], "available_cor": 18, "everi": [19, 596, 602, 611, 612, 614, 615, 617, 618, 619, 648, 654], "subtask": 21, "runtime_setup": [21, 29, 86, 96, 98, 105, 111, 113, 120, 126, 131, 142, 144, 149, 154, 161, 168, 170, 177, 179, 187, 192, 198, 201, 203, 241, 244, 253, 256, 262, 301, 412, 420, 575, 584], "consist": [24, 61, 231, 497, 595, 602, 611, 618, 619, 620, 625, 643, 654, 657], "decomposit": [26, 156, 228, 233, 239, 615, 623, 625, 627, 629, 630, 636], "stdout_logg": 26, "goe": [26, 611, 618, 619], "regardless": [26, 599], "statu": 26, "prior": [28, 611], "constrain_resourc": [29, 86, 96, 98, 105, 111, 113, 120, 126, 131, 142, 144, 149, 154, 161, 168, 170, 177, 179, 187, 192, 198, 201, 203, 241, 244, 253, 256, 262, 301, 412, 420, 575, 584], "step_path": 34, "datestamp": 34, "dry": [34, 263, 266, 268, 270, 597, 649, 653, 657], "meta": 36, "link_nam": 38, "stackoverflow": 38, "55742015": 38, "7728169": 38, "symbol": [38, 611], "fileexistserror": 38, "try": [38, 611, 612, 613, 614, 618, 619, 620, 651, 663], "isadirectoryerror": 38, "decomposition_test": [42, 209, 210, 611, 623, 663], "decompositiontest": [42, 211, 213, 214, 215, 220, 611], "turquois": [42, 638, 663], "mhoffman": 42, "ndarrai": [44, 51, 52, 57, 462, 548, 551, 556, 585, 586], "static": [45, 46, 619], "rule": 45, "thumb": 45, "close": [46, 156, 330, 602, 616, 650], "subclass": [47, 50, 51, 52, 56], "jigsawpi": [55, 611], "jigsaw_jig_t": 55, "finish": 56, "mesh_filenam": [59, 651], "graph_filenam": [59, 233, 234, 610], "graph_fil": [60, 61], "interact": [63, 599, 638, 641, 642, 663], "batch": [63, 638], "slurm_job_id": 63, "substep": 65, "cpus_per_nod": 66, "step_is_subprocess": 68, "is_test_cas": 69, "steps_not_to_run": 69, "mpas_model_path": [70, 71, 73], "cached_step": 70, "rundir2": 74, "norm": [75, 550, 552, 660], "infin": [75, 660], "toler": [75, 209, 623, 630], "exclud": [75, 651, 663], "assess": [79, 178, 208, 357, 599, 624, 632], "timestep": [79, 208, 623, 624], "calv": [79, 80, 82, 156, 162, 164, 208, 213, 220, 446, 605, 623, 624, 630, 657], "pre": [79, 193, 199, 214, 624, 629, 630, 636], "veloc": [79, 82, 95, 97, 99, 104, 141, 148, 150, 153, 156, 162, 164, 208, 219, 220, 367, 398, 467, 475, 596, 599, 600, 602, 604, 605, 610, 611, 613, 619, 623, 624, 625, 626, 629, 630, 636, 647, 650, 651, 652, 654, 658, 660, 662, 663], "velo": [80, 82, 623], "config_adaptive_timestep_calvingcfl_fract": [80, 208], "calvingdtconverg": [80, 208], "calv_dt_frac": 82, "dt": [82, 280, 610, 624, 650, 658], "mesh_fil": [82, 164, 392, 393], "twice": [82, 87, 99, 114, 150, 164, 171, 194, 204], "mismip": [82, 193, 194, 197, 219, 623, 635, 657], "humboldt": [82, 207, 216, 622, 623, 624, 632], "thwait": [82, 207, 216, 622, 623, 632], "specified_calving_veloc": [82, 164, 623, 624], "eigencalv": [82, 164, 623], "von_mises_stress": [82, 164, 623], "fo": [82, 95, 97, 99, 104, 141, 148, 150, 153, 156, 162, 164, 208, 213, 219, 220, 611, 623, 625, 626, 629, 630, 636], "circular": [84, 85, 625, 659], "four": [85, 95, 110, 156, 228, 611, 657, 659], "input_dir": [91, 106, 180], "velo_solv": [95, 97, 99, 104, 141, 148, 150, 153, 156, 162, 164, 213, 611], "sia": [95, 97, 99, 104, 141, 148, 150, 153, 156, 162, 164, 213, 611, 613, 623, 626, 629], "segment": [97, 112, 148, 162, 169, 202, 599], "thermal_solv": [110, 112], "enthalpi": [110, 112, 124, 129, 134, 138, 211, 212, 627, 628], "formul": [110, 112], "thermodynam": [110, 112, 623], "standardexperi": [121, 211], "kleiner": [124, 129, 212, 628], "benchmark": [124, 129, 134, 138, 212, 628], "enthalpybenchmark": [124, 129, 212], "sheet": [141, 148, 212, 213, 215, 445, 626, 627, 628, 629, 631, 643, 651, 657], "eight": 141, "high": [143, 612, 639, 642, 651, 657, 659, 662], "basal": [143, 212, 625, 627, 628, 629, 630, 633, 634, 636], "friction": [143, 467, 475, 599, 625, 629, 630, 633, 634, 636, 651], "optim": [143, 629, 630, 633, 634, 636], "definit": [146, 611, 617, 618, 619], "region": [146, 214, 217, 218, 599, 601, 616, 620, 651, 653, 654, 657, 662], "observ": [146, 376, 378, 392, 393, 601, 616, 633, 634, 653], "flow": [146, 608, 626, 649, 650, 657, 658, 660], "speed": [146, 629, 630, 633, 634, 636], "distanc": [146, 446, 618, 629, 630, 633, 634, 636, 648, 656, 662], "margin": [146, 629, 630, 633, 634, 636], "20km": [150, 610, 647, 662, 665], "calving_law": [156, 162, 164], "damag": [156, 162, 164, 630], "face_melt": [156, 162, 164], "law": [156, 162, 164, 623, 624, 630], "face": [156, 162, 164], "melt": [156, 162, 164, 469, 475, 599, 605, 643, 651, 654, 657], "proc_list": 156, "pair": [156, 550, 630, 660], "count": [156, 200, 599, 617, 651], "3km": [156, 162, 164], "forcing_fil": [164, 398], "damagecalv": [164, 623], "ismip6_retreat": [164, 623], "radial": [166, 167, 169, 171, 176, 215, 625, 626, 631], "symmetr": [166, 167, 169, 171, 176, 215, 625, 626, 627, 631, 656], "hydrologi": [166, 215, 611, 626], "hydrolog": [167, 169, 171, 176, 215, 631], "three": [167, 234, 618, 619, 629, 632, 636, 642, 651, 660], "hydroradi": [167, 176, 178, 215], "exact": [174, 178, 215, 598, 606, 608, 612, 631], "precomput": 174, "steadi": [176, 215, 631, 657], "reach": [176, 657], "drift": 178, "kogebugt": [191, 218], "smoke": [197, 219, 599, 635, 636], "14km": [199, 636], "landice_model": [207, 611, 613, 620], "core_path": [207, 210, 595, 611, 620], "submodul": [207, 595, 611, 613, 618, 619, 663], "guarante": [207, 595, 613], "recurs": [207, 595, 612, 613, 618, 619, 663], "calving_dt_converg": [207, 216, 622, 632], "circular_shelf": [207, 216, 622, 623, 632, 663], "hydro_radi": [207, 216, 622, 623, 632, 664], "kangerlussuaq": [207, 216, 622, 632], "koge_bugt_": [207, 216, 622, 632], "mismipplu": [207, 216, 622, 632], "physic": [208, 618, 623, 624, 630, 632, 658], "addition": [208, 209, 210, 211, 212, 215, 596, 597, 599, 602, 604, 605, 607, 610, 630, 637, 638, 639, 640, 641], "globalstat": [208, 651], "hardcod": 208, "smaller": [208, 228, 599, 663], "cost": [208, 635], "analyz": [208, 492, 607, 617, 660], "annoy": 208, "occasion": 208, "fine": [208, 597, 611, 618, 619], "logic": [208, 618, 648, 656], "circularshelf": 209, "horizont": [209, 210, 211, 212, 215, 228, 410, 442, 447, 449, 451, 454, 457, 459, 477, 488, 596, 599, 600, 602, 604, 617, 619, 626, 627, 631, 643, 648, 649, 651, 652, 653, 654, 656, 657, 658, 662], "planar_hex": [209, 210, 211, 212, 215, 596, 597, 602, 604, 605, 610, 611, 618, 619], "make_planar_hex_mesh": [209, 210, 211, 212, 215, 596, 597, 602, 604, 605, 610, 611, 618, 619], "privat": [209, 210, 211, 212, 215, 617], "_setup_circular_shelf_initial_condit": 209, "circular_shelf_viz": [209, 625], "200": [209, 210, 211, 212, 610, 611, 618, 626, 627, 628, 657], "ureconstructx": 209, "ureconstructi": 209, "2000": [210, 602, 611, 626, 627, 654, 657, 662], "durat": [210, 212, 213, 214, 215, 219, 220, 442, 485, 596, 597, 599, 602, 604, 611, 626, 651, 656, 658], "dome_varres_grid": [210, 611], "server_base_url": [210, 620], "_setup_dome_initial_condit": [210, 212], "dome_viz": [210, 611, 626], "former": [210, 211, 213, 215, 220], "25": [211, 212, 600, 604, 619, 627, 649, 656, 659], "globalstatsoutput": [211, 602, 605], "runexperi": 211, "letter": [211, 618, 619], "_setup_eismint2_initial_condit": 211, "000": [211, 212, 215, 619, 627, 628, 631], "basaltemperatur": 211, "heatdissip": 211, "thermal": [211, 212, 467, 475, 627, 659], "restarttest": [211, 213, 214, 215, 220, 596, 599, 602, 611], "et": [212, 215, 618, 622, 626, 627, 628, 631, 645, 648, 649, 650, 656, 657, 659, 660, 662], "al": [212, 215, 618, 622, 626, 627, 628, 631, 645, 648, 649, 650, 656, 657, 659, 660, 662], "2015": [212, 215, 618, 628, 631, 648, 656, 659, 662], "air": [212, 627, 628], "temper": 212, "heat": [212, 441, 467, 628, 654, 657], "basal_heat_flux": [212, 628], "042": [212, 628], "k": [212, 228, 619, 627, 628, 645, 652], "surface_air_temperatur": [212, 628], "243": [212, 628], "100": [212, 469, 599, 602, 607, 610, 618, 619, 623, 627, 628, 645, 657, 659, 662], "phase1_surface_air_temperatur": [212, 628], "phase2_surface_air_temperatur": [212, 628], "268": [212, 628], "150": [212, 628, 650, 659, 660], "phase3_surface_air_temperatur": [212, 628], "analyt": [212, 270, 597, 600, 609, 619, 625, 626, 649, 652, 659, 661, 664], "mat": [212, 611], "400": [212, 628], "270": [212, 628], "dai": [213, 220, 254, 270, 433, 511, 525, 539, 563, 596, 598, 599, 604, 606, 608, 611, 618, 629, 636, 648, 649, 650, 651, 656, 657, 662], "coars": [213, 220, 629, 636, 651, 657], "20": [213, 254, 433, 596, 599, 602, 604, 605, 610, 611, 618, 629, 648, 649, 654, 656, 657, 659, 660, 662], "albany_input": [213, 219], "yaml": [213, 219], "gis20km": 213, "210608": [213, 220], "smoketest": [213, 219, 611], "highresmesh": [213, 220], "glacier": [214, 217, 220, 623, 630, 633, 635, 636], "meshgen": [214, 217, 218], "restartn_test": 214, "plu": [214, 615, 630], "_setup_hydro_radial_initial_condit": 215, "thin": [215, 228, 631, 651, 653, 657], "numer": [215, 228, 611, 643], "bueler": [215, 626, 631], "iscontrol": 215, "hydro_radial_viz": [215, 631], "spinuptest": 215, "steadystatedrifttest": 215, "month": [215, 605, 627, 630, 631, 644, 651, 655, 657, 662], "waterthick": 215, "waterpressur": 215, "500m": [218, 634], "koge": [218, 634], "bugt": [218, 634], "surfacespe": 220, "load_dev_compass_1": [221, 222, 223, 224, 225, 226, 618, 619], "0_anvil_intel_impi": [221, 226], "sh": [221, 222, 223, 224, 225, 226, 613, 614, 618, 619, 637, 638, 639, 640, 641, 663], "openmpi": [221, 226, 613, 616, 637, 639, 663], "mvapich": [221, 226, 637, 638, 642], "impi": [221, 226, 637, 638, 639, 640, 642], "ifort": [221, 226, 637], "ve": [221, 222, 223, 225, 611, 618], "0_anvil_gnu_mvapich": 221, "gfortran": [221, 222, 223, 226, 613, 637, 638, 639], "modulefil": 222, "bashrc": 222, "pleas": [222, 612, 613, 617, 618], "unus": [222, 613], "0_badger_intel_impi": 222, "0_badger_gnu_mvapich": 222, "0_chrysalis_intel_impi": [223, 618, 619], "0_chrysalis_gnu_openmpi": 223, "soon": 224, "0_compy_intel_impi": 224, "architectur": 225, "0_cori": 225, "haswell_intel_mpt": 225, "nersc": [225, 226, 641], "haswell_gnu_mpt": 225, "load_compass_env": [226, 613, 663], "right": [226, 228, 599, 611, 613, 618, 619, 620, 624, 645, 650, 662, 663], "gnu": [226, 613, 640, 642, 663], "lib": 226, "intel": [226, 613, 618, 619, 642], "mpt": [226, 641], "compymcnodefac": [226, 642], "pretti": [226, 611, 612, 618, 620], "mpich": [226, 613, 616, 663], "forg": [226, 616, 663], "linux": [226, 613, 642], "configure_compass_env": [226, 613, 614, 618, 619], "conda_path": [226, 613], "osx": [226, 642], "clang": [226, 613], "0_": 226, "expand": [228, 645], "grid_1d": 228, "generate_1d_grid": 228, "star": [228, 409, 410, 418, 447, 451, 592, 594, 602, 605, 618, 648, 649, 654, 656, 657, 658, 662, 665], "init_vertical_coord": [228, 618], "minlevelcel": [228, 587, 589, 590, 591, 592, 593, 594], "maxlevelcel": [228, 587, 588, 589, 590, 591, 592, 593, 594, 611, 619], "cellmask": [228, 587, 590, 593, 594], "zmid": [228, 587, 593, 594], "restingthick": [228, 587, 592, 593, 594, 611, 619], "bottomdepth": [228, 587, 588, 590, 591, 592, 593, 594, 611, 618, 619], "compute_haney_numb": 228, "1991": [228, 643], "measur": [228, 651, 659], "gradient": [228, 618, 643, 648, 656, 659, 662], "tilt": 228, "r_": 228, "x1": 228, "frac": [228, 611, 618, 645, 662], "z_": [228, 645], "textrm": 228, "c_2": 228, "c_1": 228, "edg": [228, 230, 651, 654], "adjac": [228, 645, 654], "elev": [228, 330, 587, 593, 594, 605, 645, 653], "middl": [228, 587, 593, 594, 605, 657], "boussinesq": 228, "adjust_ssh": 228, "correct": [228, 613], "imbal": 228, "period": [228, 367, 376, 480, 488, 596, 597, 600, 602, 604, 606, 610, 611, 618, 619, 624, 648, 649, 653, 654, 656, 658, 662], "hour": [228, 597, 599, 600, 605, 611, 638, 641, 643, 657, 658, 663], "translat": 228, "compens": [228, 643], "repeat": 228, "fix": [228, 234, 468, 598, 605, 611, 654, 657], "elimin": 228, "substanti": [228, 613, 618], "prevent": [228, 441, 605, 611, 643, 657], "caus": [228, 613, 645], "instabl": 228, "agnost": 228, "light": [228, 659, 662], "buoyanc": [228, 234, 610], "isopycn": [228, 234], "passiv": [228, 234, 505], "remap_particl": 228, "remap": [228, 233], "plot_initial_st": 228, "histogram": [228, 235], "bottom": [228, 468, 587, 588, 589, 590, 591, 592, 593, 594, 597, 599, 605, 610, 618, 620, 645, 648, 649, 652, 654, 656, 657, 658, 659, 662], "depth": [228, 355, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 599, 600, 610, 618, 619, 620, 645, 648, 651, 652, 654, 656, 657, 658, 659, 662], "distribut": [228, 598, 606, 607, 608, 610, 651, 659, 661, 662], "plot_vertical_grid": 228, "bound": [228, 662], "ds_mesh": 230, "layer_thick": 230, "show_progress": 230, "rx1": 230, "bar": [230, 330, 464, 466], "haney_edg": 230, "haney_cel": 230, "iteration_count": 231, "modify_mask": 232, "init_filenam": [233, 234, 355, 610], "particle_filenam": [233, 234, 610], "posit": [233, 234, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 605, 636, 645, 662], "goal": 233, "currentblock": 233, "compli": 233, "nearest": [233, 393, 650], "neighbor": [233, 651], "form": [233, 234, 612, 619, 662, 664], "n_vert_level": 234, "vert_seed_typ": 234, "n_buoy_surf": 234, "pot_dens_min": 234, "1028": [234, 659], "pot_dens_max": 234, "1030": [234, 659], "spatial_filt": 234, "downsampl": 234, "seed_cent": 234, "seed_vertex": 234, "add_nois": 234, "cfl_min": 234, "005": 234, "densecent": 234, "seed": [234, 330, 599], "southernoceanplanar": 234, "southernoceanxyz": 234, "spatial": 234, "filter": 234, "amg": 234, "epsilon": [234, 652], "vertex": 234, "gaussian": [234, 606, 658, 661], "nois": 234, "cfl": [234, 624], "perturb": [234, 648, 650, 656], "input_file_nam": 235, "output_file_nam": 235, "grid_filenam": 236, "out_filenam": [236, 586], "shorter": [251, 418, 623, 627, 647], "energi": [254, 433, 611, 618, 648, 656], "slope": [263, 266, 268, 270, 597, 643, 649, 654, 659, 660, 662], "wet": [263, 653], "coord_typ": [264, 266, 268, 409, 410, 418, 597, 618, 645, 648, 649, 654, 656, 657, 658, 662], "sigma": [264, 266, 268, 597, 649], "single_lay": [264, 597, 649], "dryingslop": [264, 597], "damping_coeff": [266, 270, 597], "rayleigh": [266, 270, 597, 599, 649, 651], "damp": [266, 270, 597, 599, 649, 651], "coeffici": [266, 270, 597, 610, 619, 649, 652, 659, 662], "rom": [270, 597, 649], "datatyp": 270, "cosinebel": [276, 279, 283, 598, 617], "rmsevalu": 277, "squar": [277, 492, 598, 606, 658], "ncell": [277, 492, 599, 611, 618, 619], "hh": [280, 512, 526, 540, 564], "ss": [280, 512, 526, 540, 564], "member": [286, 291, 299, 302, 392, 503, 573, 577, 599, 601, 605, 607, 610, 619, 620, 647, 651, 653], "timeseriesstatmonthli": 291, "daili": [291, 651], "stage": [297, 611, 651, 657], "seaic": [299, 599, 651], "diagnost": [299, 302, 599, 620, 625, 637, 638, 640, 641, 642, 651, 663], "meridion": [299, 302, 599, 648, 656, 662], "overturn": [299, 302, 457, 470, 599, 605, 657], "circul": [299, 302, 599, 657], "filesfore3sm": [302, 304, 306, 308, 310, 599, 611], "ntasks_from_config": 312, "min_tasks_from_config": 312, "threads_from_config": 312, "biogeochemistri": [318, 321, 599, 618, 619], "init_subdir": 318, "2d": [324, 408, 410, 413, 416, 418, 421, 424, 440, 442, 454, 506, 520, 534, 558, 654], "with_cav": 330, "with_critical_passag": [330, 599], "custom_critical_passag": 330, "custom_land_blockag": 330, "preserve_floodplain": [330, 336, 406], "use_progress_bar": 330, "process_count": 330, "natur": [330, 599, 651], "earth": [330, 599, 651], "coverag": [330, 599, 623], "north": [330, 599, 648, 651], "antarct": [330, 599, 620, 643, 651, 657], "ground": [330, 445, 599, 605, 625, 636, 651, 657], "bedmachineantarctica": [330, 599, 651], "transect": [330, 462, 599, 620, 651], "passag": [330, 599, 651], "flood": [330, 599, 651], "lock": [330, 599], "blockag": [330, 651], "geojson": [330, 619], "cellseedmask": 330, "floodplain": [330, 653], "problemat": [330, 611], "do_inject_bathymetri": 336, "criteria": 336, "abstract": 337, "output_filenam": 355, "short_mesh_nam": [356, 599], "long_mesh_nam": [356, 599], "turbul": [366, 367, 369, 371, 373, 426, 600, 618, 619, 652], "doubli": [367, 480, 488, 600, 619, 658], "storm": [376, 383, 389, 392, 398, 653], "station": [376, 378, 379, 392, 393, 601, 653], "frmt": 376, "datetim": [376, 611], "min_dat": [376, 378], "max_data": 376, "pointstats_fil": [376, 377, 392], "pointwisestat": [376, 377, 392, 393, 601, 653], "labl": 376, "legend": [376, 619], "obs_fil": 378, "obs_typ": 378, "max_dat": 378, "timeseri": [378, 601, 653], "station_fil": [379, 392], "contiain": 392, "pointstat": 392, "stations_fil": 393, "atmospher": [398, 599, 601], "wind": [398, 599, 601, 607, 653, 659, 662], "plot_interv": 398, "snap": [398, 399], "wind_fil": 398, "pres_fil": 398, "grid_fil": [398, 399], "data_fil": 399, "orig_data": 400, "interp_data": 400, "var_label": 400, "var_abrev": 400, "iceshelf2d": [410, 418, 602, 611, 612, 618, 619], "with_frazil": [413, 577, 580, 602, 647, 665], "cross": [424, 438, 462, 468, 605, 625, 656, 657], "gotm": [426, 595, 603, 618, 619, 646, 655], "internalwav": [427, 433, 436, 604], "in_forcing_fil": 441, "out_forcing_fil": 441, "out_forcing_link": 441, "evapor": [441, 605, 657], "isomip": [441, 442, 446, 447, 449, 451, 457, 459, 462, 474, 605, 657], "evaporationflux": 441, "seaicesalinityflux": 441, "seaiceheatflux": 441, "salt": 441, "northern": [441, 599, 605, 618, 648, 654, 656, 657, 662], "boundari": [441, 597, 599, 605, 606, 616, 629, 643, 648, 654, 656, 657, 662, 664], "spillwai": [441, 605], "rise": [441, 605, 654, 657], "run_dur": [442, 610], "time_varying_forc": [442, 447, 451], "ocean0": [442, 447, 449, 451, 457, 459, 462, 474, 605], "ocean1": [442, 447, 449, 451, 457, 459, 462, 474, 605], "ocean2": [442, 447, 449, 451, 457, 459, 462, 474, 605], "dsmesh": [445, 462, 474, 611, 618, 619], "dsgeom": 445, "min_ocean_fract": [445, 657], "bisicl": [445, 446, 605, 657], "process_input_geometri": [445, 605], "dsmask": 445, "regioncellmask": 445, "infilenam": 446, "outfilenam": 446, "filtersigma": 446, "minicethick": 446, "scale": [446, 605, 610, 616, 651, 652, 657, 659, 660, 662, 663], "geometri": [446, 605, 654, 657, 662], "scheme": [446, 605, 608, 653, 660], "vertical_coordin": [447, 451], "misomip1": 449, "isomipplu": [451, 605], "barotrop": [457, 465, 601, 605, 653, 657], "slice": 461, "monthli": 461, "infold": [462, 474], "streamfunctionfold": 462, "outfold": [462, 463, 474], "expt": [462, 465, 474, 627], "sectioni": 462, "showprogress": 462, "plotter": [462, 474], "hold": [462, 474], "folder": [462, 474], "streamfunct": [462, 465, 470, 657], "y": [462, 468, 596, 597, 599, 602, 604, 605, 610, 611, 618, 619, 641, 648, 649, 652, 654, 656, 657, 658, 662], "axi": [462, 611, 618, 624, 660], "plane": 462, "montli": 462, "oceanmask": 462, "cavitymask": 462, "oceanpatch": 462, "patchcollect": 462, "polygon": 462, "cover": [462, 605, 647, 651], "cavitypatch": 462, "horiz": 462, "vert": 462, "sectionmask": 462, "progressbar": 462, "framespersecond": 463, "mp4": [463, 649, 657], "movi": [463, 597, 605, 649, 657], "ffmpeg": 463, "da": [464, 466, 476], "nameintitl": [464, 466, 476], "vmin": [464, 465, 466, 469, 470], "vmax": [464, 465, 466, 469, 470], "cmap": [464, 466], "floor": [464, 471, 472, 473, 619, 645, 652, 654, 657], "nae": [464, 466], "subfold": [464, 466], "colorbar": [464, 465, 466, 469, 470], "colormap": [464, 466, 557], "color": [464, 466, 476], "chosen": [465, 611], "oceandomain": 466, "drive": [467, 475, 597], "halin": 467, "figsiz": [468, 476], "rate": [469, 475, 548, 556, 598, 605, 606, 608, 627, 643, 650, 651, 657, 658, 660], "sshmax": 475, "advect": [477, 488, 491, 494, 505, 598, 606, 608, 623, 647, 650, 658], "planar": [478, 480, 484, 488, 618, 658], "convergence_test_cas": 484, "convergencetestcas": 484, "rms_error": 492, "mesoscal": [496, 607, 651, 659], "profil": [497, 597, 599, 600, 602, 605, 607, 610, 614, 652, 657, 659, 662], "with_particl": [499, 503, 573, 577, 607, 610], "with_surface_restor": [499, 501, 503], "three_lay": [499, 501, 503, 607], "lagrangian": [499, 647, 659, 662], "restor": [499, 501, 503, 605, 657, 659, 662], "equilibrium": [499, 503, 573, 577, 627, 659], "continent": [499, 501, 503, 599, 651, 657, 659], "algorithm": [505, 611, 643, 661], "transport": [506, 520, 534, 558, 599, 608, 650, 660], "spheretransport": [506, 520, 534, 558], "correlatedtracers2d": [509, 511, 515, 517, 608, 660], "dt_minut": [511, 525, 539, 563], "minut": [511, 512, 525, 526, 539, 540, 563, 564, 596, 599, 600, 602, 604, 611, 618, 623, 648, 654, 660, 665], "24": [511, 525, 539, 563, 598, 599, 606, 650, 658, 660], "divergent2d": [523, 525, 529, 531, 608], "nondivergent2d": [537, 539, 543, 545, 608], "dlambda": [548, 550, 551, 556], "compute_error_from_output_ncfil": [548, 556], "tracer1": [548, 550, 551, 556, 660], "linfrat": [548, 556], "l2rate": [548, 556], "lev": 549, "netcdf4": [549, 554, 618, 620], "tcdata": [550, 555], "appx": [550, 556], "linf1": [550, 551], "linf2": [550, 551], "tracer2": [550, 551, 660], "linf3": [550, 551], "tracer3": [550, 551, 660], "l21": [550, 551], "l22": [550, 551], "l23": [550, 551], "filament": [550, 552, 660], "sec": [550, 650, 662], "lspt2012": [550, 552], "ax": [551, 552, 553], "tcname": [551, 552, 553, 554, 555, 556], "resval": [551, 552, 553, 556], "matplotlib": [551, 554, 557, 618, 619], "instanc": [551, 554, 618, 619], "u1": [553, 641], "o1": 553, "u2": 553, "o2": [553, 611], "u3": 553, "o3": 553, "shoot": [553, 660], "fig": [554, 611], "row": 554, "csv": [555, 660], "consol": 556, "compute_convergence_r": 556, "cmap_filenam": 557, "rgb": 557, "ncar": 557, "ncl": 557, "www": 557, "ucar": 557, "edu": 557, "graphic": 557, "color_table_galleri": 557, "shtml": 557, "usabl": 557, "rotation2d": [561, 563, 567, 569, 608, 660], "tos": 563, "zonal": [572, 610, 648, 651, 656, 662], "invari": [572, 602, 651], "southern": [572, 599, 610, 618, 648, 651, 656, 657, 662], "with_analysi": 577, "meter": [585, 586, 629, 630, 633, 634, 636, 654], "stretch": [587, 593, 594, 645], "midpoint": [587, 593, 594], "reftopdepth": [587, 590, 591, 593, 594], "ref": [587, 593, 594, 599, 651], "refzmid": [587, 593, 594, 611, 618], "refbottomdepth": [587, 588, 589, 590, 591, 593, 594, 611, 618, 619], "refinterfac": [587, 593, 594], "nvertlevel": [587, 593, 594, 611, 618, 645], "vertcoordmovementweight": [587, 593, 594, 611, 619], "movement": [587, 593, 594], "consider": [587, 593, 594], "sometim": [587, 593, 594, 611, 615, 619, 651], "partial": [588, 589, 618, 645, 648, 654, 656, 657, 658, 662], "seafloor": [588, 590, 591, 592, 645], "rest": [592, 617, 619, 645, 651], "unstretch": 592, "drying_slop": [595, 603, 646, 655], "hurrican": [595, 603, 646, 655], "ice_shelf_2d": [595, 603, 611, 618, 619, 643, 646, 647, 655, 665], "internal_wav": [595, 603, 646, 655], "isomip_plu": [595, 603, 646, 655], "planar_converg": [595, 603, 611, 646, 655], "soma": [595, 603, 646, 655], "sphere_transport": [595, 603, 646, 655], "ziso": [595, 603, 611, 612, 618, 619, 645, 646, 647, 655, 664, 665], "spherical_harmonic_transform": [595, 603, 646, 655], "momentum": [596, 604], "diffus": [596, 604, 623, 626, 647, 659], "decomptest": [596, 599], "threadstest": [596, 599], "frequenc": [596, 602], "rpetest": [596, 604, 611, 618], "144": [596, 599, 611, 618], "intens": [596, 604], "drag": [597, 619, 649, 652], "tidal": [597, 649], "coord": 597, "plug": 597, "background": [597, 612, 619, 650, 656, 658], "emploi": [597, 611], "tailor": 597, "0025": [597, 649], "evolut": [597, 605, 626], "grain": 597, "interv": [597, 601, 611, 653], "accept": 597, "globalconverg": [598, 618, 619], "studi": [598, 606, 616, 618, 619, 650, 651, 658, 659, 660], "globe": [598, 606, 650, 651, 660], "ico": [598, 650], "spheric": [598, 609, 650, 661], "shape": [598, 606, 608, 650], "blob": [598, 606, 658], "dt_per_km": [598, 650], "rmse": [598, 606], "realist": [599, 611, 616, 636, 643, 651, 653, 654, 659, 664], "gitconfig": [599, 620, 651, 653], "enter": [599, 620, 651, 653], "get_e3sm_mesh_nam": 599, "mesh_prefix": 599, "kml": 599, "e3smv": 599, "qu240e2r1": [599, 651], "qu240kml16e3smv2r1": [599, 651], "forwardtestcas": 599, "performancetest": 599, "land_ice_flux": [599, 605], "forward_": [599, 651], "focus": [599, 651, 659], "build_mesh": [599, 608, 609], "build_spherical_mesh": [599, 608, 609], "cull_mesh": 599, "pure": 599, "ec30to60mesh": 599, "refin": [599, 601, 651, 653], "atlant": [599, 651], "pacif": [599, 651], "arctic": [599, 620, 651], "so12to60": 599, "so12to60mesh": 599, "1296": 599, "band": 599, "cycl": [599, 651], "gulf": 599, "wc14mesh": 599, "720": [599, 657], "america": 599, "628": 599, "uk": [599, 651], "metoffic": [599, 651], "estim": [599, 643, 651], "biogeochemsitri": 599, "stress": [599, 643, 662], "shortwav": 599, "ecosystem": [599, 637, 651], "sshadjust": [599, 602, 605], "closer": [599, 617], "clearli": 599, "wrong": 599, "half": [599, 618, 648, 654, 656, 657, 662], "analysistest": 599, "dailyoutputtest": 599, "timeseriesstatsdaili": [599, 651], "timeseriesstatsmonthli": [599, 651], "averag": [599, 605, 643, 651, 657], "rapid": [599, 623], "artifici": 599, "global_ocean_mesh": 599, "d_": [599, 611], "strong": [599, 618, 656, 657], "1e": [599, 619, 662], "jinja": 599, "ec30to60dynamicadjust": 599, "so12to60dynamicadjust": 599, "damped_adjustment_3": 599, "weaken": 599, "4e": 599, "wc14dynamicadjust": 599, "damped_adjustment_6": 599, "prepar": [599, 651, 653], "assembled_fil": [599, 651], "ocean_initial_condit": 599, "oceaninitialcondit": 599, "inputdata": 599, "ocn": 599, "mesh_short_nam": 599, "_no_xtim": 599, "ocean_graph_partit": 599, "oceangraphpartit": 599, "wide": [599, 614, 654, 659], "min_graph_s": 599, "max_graph_s": 599, "power": [599, 658], "1200": [599, 610, 626], "core_count": 599, "seaice_initial_condit": 599, "seaiceinitialcondit": 599, "keep_var": 599, "areacel": 599, "cellsoncel": 599, "edgesoncel": 599, "fcell": [599, 611, 618], "indextocellid": 599, "latcel": 599, "loncel": 599, "meshdens": 599, "nedgesoncel": 599, "verticesoncel": 599, "angleedg": 599, "cellsonedg": 599, "dcedg": 599, "dvedg": 599, "edgesonedg": 599, "fedg": [599, 611, 618], "indextoedgeid": 599, "latedg": 599, "lonedg": 599, "nedgesonedg": 599, "verticesonedg": 599, "weightsonedg": 599, "xedg": [599, 611, 618], "yedg": 599, "zedg": 599, "areatriangl": 599, "cellsonvertex": 599, "edgesonvertex": 599, "fvertex": [599, 611, 618], "indextovertexid": 599, "kiteareasonvertex": 599, "latvertex": 599, "lonvertex": 599, "xvertex": [599, 611, 618], "yvertex": 599, "zvertex": 599, "landicemask": [599, 657], "cice": 599, "scrip": [599, 619, 620, 651], "coupl": [599, 614, 616, 627, 643, 651], "nomask": 599, "diagnostics_fil": 599, "diagnosticsfil": 599, "aggreg": 599, "get_aggregator_by_nam": 599, "region_group": 599, "basin": [599, 607, 659], "subbasin": 599, "ismip6": 599, "mpas_analysi": 599, "region_mask": 599, "ref_dat": 599, "moc": 599, "repres": [599, 618, 619, 645, 650, 651, 654], "_moc_masks_and_transect": 599, "stereograph": [599, 620, 651], "map_": 599, "_to_0": 599, "5x0": 599, "5degree_bilinear": 599, "_to_6000": 599, "0x6000": 599, "0km_10": 599, "0km_antarctic_stereo_bilinear": 599, "0km_arctic_stereo_bilinear": 599, "k\u00e4rn\u00e4": [600, 652], "cm": 600, "ever": [600, 612], "tropic": [601, 653], "cyclon": [601, 653], "dequ120at30cr10rr2": 601, "dequ120at30cr10rr2mesh": 601, "inherit": [601, 612], "coastal_tool": 601, "coastal_refined_mesh": 601, "interpolateatmforc": 601, "cfsv2": [601, 653], "reanalysi": [601, 653], "hourli": [601, 653], "createpointstatsfil": 601, "noaa": [601, 653], "usg": [601, 653], "squash": [602, 605, 610, 645, 657], "config_use_frazil_ice_form": 602, "config_frazil_maximum_depth": 602, "dirti": 602, "cut": 602, "tendaytest": 604, "timeseriesstatsmonthlyoutput": 605, "update_evaporation_flux": 605, "mimic": [605, 617], "indefinit": 605, "due": [605, 624, 657], "freshwat": [605, 647, 651, 654], "factor": [605, 649, 659], "interpolate_ocean_mask": 605, "interpolate_geom": 605, "geometr": 605, "bottomdepthobserv": 605, "bedrock": 605, "oceanfracobserv": 605, "landicefract": 605, "smootheddraftmask": 605, "runawai": 605, "incom": 605, "meltwat": [605, 657], "landicepressureforc": 605, "landicedraftforc": 605, "isomip_plus_forc": [605, 657], "time_varying_ocean0": 605, "consecut": 605, "land_ice_forc": 605, "front": [605, 638, 662], "held": [605, 611], "landicefractionforc": 605, "readi": [605, 611, 618, 619, 641], "fuller": 605, "repeatedli": [605, 624, 657], "plot_streamfunct": [605, 657], "isomip_plus_viz": [605, 657], "frame": [605, 649, 657], "deepest": [605, 610, 645], "timeseriesbelow300m": 605, "correctli": 605, "resolv": [605, 653], "oceantest": 605, "planarconverg": 606, "horizontaladvect": 606, "dt_1km": [606, 658], "surface_restor": 607, "radiu": [607, 627, 650], "accord": [607, 610, 651, 663], "100layere3smv1": [607, 610, 651, 662], "32km": [607, 659], "min_den": 607, "min_particle_dens": [607, 659], "max_den": 607, "max_particle_dens": [607, 659], "nsurf": 607, "surface_count": [607, 659], "build_particle_simpl": 607, "f_grid": 607, "f_name": 607, "f_decomp": 607, "buoysurf": 607, "somatestcas": 607, "solid": [608, 648, 650, 654, 656], "bodi": [608, 650], "rotat": [608, 650, 660], "timestep_munut": 608, "rotation_2d_converg": 608, "pdf": 608, "_sol": 608, "diverg": [608, 660], "nondivergent2d_converg": 608, "divergent2d_converg": 608, "correlatedtracers2d_triplot": 608, "quconverg": 609, "harmon": [609, 661], "transform": [609, 661], "implemnt": 609, "runnin": 609, "test_sht": 609, "ey": 610, "toward": 610, "2500": [610, 619, 645, 652, 659, 662], "cores_with_particl": 610, "min_cores_with_particl": 610, "btr_dt": 610, "mom_del4": 610, "0e10": 610, "80": 610, "130": 610, "25e9": 610, "5km": [610, 619, 647, 654, 657, 665], "300": [610, 617, 650, 658, 659, 660, 662], "09": 610, "8e8": 610, "2100": 610, "900": 610, "8e7": 610, "zisotestcas": 610, "withfrazil": 610, "initial_temp_t1": [610, 662], "tanh": [610, 645, 662], "initial_temp_t2": [610, 662], "initial_temp_h1": [610, 662], "initial_temp_mt": [610, 662], "green": 611, "blue": [611, 637, 663], "orang": 611, "red": 611, "laid": 611, "among": [611, 613, 618, 619], "organiz": 611, "encompass": 611, "perspect": 611, "add_test_group": [611, 612, 618, 619], "univers": 611, "mix": [611, 651, 656], "2000m": [611, 623, 626, 629, 663], "halfar": [611, 626], "cism": [611, 626], "dome_typ": [611, 626], "closest": [611, 626, 653], "put_origin_on_a_cel": [611, 626], "hydro": [611, 626], "time_slic": [611, 625, 626, 631], "save_imag": [611, 625, 626, 627, 631], "hide": [611, 625, 626, 627, 631], "hide_fig": [611, 625, 626, 627, 631], "add_test_cas": [611, 618, 619], "variable_resolut": [611, 623, 663], "talk": 611, "complic": [611, 612, 613, 618, 619], "access": [611, 612, 613, 618, 619, 637, 641, 642], "0200": 611, "00_00": [611, 619], "calcul": 611, "enumer": [611, 618], "rpe_test_": [611, 618], "_nu_": [611, 618], "deliber": 611, "fairli": [611, 612, 613, 618, 654, 657], "clumsi": [611, 612, 617], "rpe_test_1_nu_1": [611, 648, 656], "rpe_test_2_nu_5": [611, 648, 656], "po4": 611, "no3": 611, "sio3": 611, "nh4": 611, "fe": [611, 638], "dic": 611, "dic_alt_co2": 611, "alk": 611, "dofe": 611, "dop": 611, "dopr": 611, "donr": 611, "zooc": 611, "spchl": 611, "spc": 611, "spfe": 611, "spcaco3": 611, "diatchl": 611, "diatc": 611, "diatf": 611, "diatsi": 611, "diazchl": 611, "diazc": 611, "diazf": 611, "phaeochl": 611, "phaeoc": 611, "phaeof": 611, "dm": 611, "dmsp": 611, "prot": 611, "poli": 611, "lip": 611, "adjusted_init": 611, "unwant": 611, "outer": 611, "inner": [611, 618, 619], "reli": [611, 618], "question": [611, 620], "neglig": [611, 643, 654], "precis": 611, "mesh_cpus_per_task": 611, "mesh_min_cpus_per_task": 611, "write_netcdf": [611, 618, 619], "convers": [611, 618, 619], "generate_grid": 611, "nonperiodic_x": [611, 618, 619], "nonperiodic_i": [611, 618, 619], "graphinfofilenam": [611, 618, 619], "use_dist": [611, 618, 648, 656], "gradient_width_dist": [611, 618, 648, 656], "gradient_width_frac": [611, 618, 648, 656], "bottom_temperatur": [611, 618, 648, 656], "surface_temperatur": [611, 618, 648, 656, 659], "temperature_differ": [611, 618, 648, 656], "coriolis_paramet": [611, 618, 648, 656, 657], "len": 611, "ones_lik": [611, 618], "xmin": [611, 618], "xmax": [611, 618], "ymin": [611, 618], "ymax": [611, 618], "ymid": [611, 618], "xperturbmin": [611, 618], "xperturbmax": [611, 618], "perturbationwidth": [611, 618], "yoffset": [611, 618], "sin": [611, 618, 648, 649, 656], "pi": [611, 618, 645, 649, 650], "temp_vert": [611, 618], "logical_and": [611, 618], "transpos": [611, 618], "3rd": [611, 618, 660], "crest": [611, 618], "expand_dim": [611, 618], "dim": [611, 618], "broadcast": [611, 618], "zeros_lik": [611, 618, 619], "nedg": [611, 618], "dtype": 611, "harm": 611, "likewis": [611, 618], "arisen": 611, "omit": [611, 619, 663], "open_dataset": [611, 619], "isn": [611, 612, 618, 619], "mesh_path": 611, "initial_state_target": 611, "entha_analy_result": 611, "ourselv": 611, "firewal": 611, "slate": 611, "output_fil": 611, "commonli": [611, 635], "expens": [611, 626], "word": 611, "clariti": 611, "ff": 611, "91": 611, "transfer": 611, "design": [611, 612, 616, 617, 642, 651, 658, 659], "substitut": 611, "beforehand": 611, "update_namelist_at_runtim": [611, 619], "pio_num_iotask": 611, "pio_strid": 611, "mostli": [611, 618, 619, 651], "synchron": [611, 616], "update_streams_at_runtim": 611, "timedelta": 611, "3600": 611, "delta": [611, 645], "03d": 611, "02d": 611, "forgotten": 611, "dig": [612, 620], "adher": [612, 618, 619], "strictli": [612, 618], "pep8": 612, "bot": [612, 645], "violat": 612, "editor": 612, "pycharm": [612, 618, 619], "spyder": 612, "linter": 612, "flake8": 612, "discourag": 612, "reformat": 612, "autopep8": 612, "undesir": 612, "util": 612, "lint": 612, "wildcard": 612, "vim": [612, 618, 619], "plugin": 612, "id": 612, "why": [612, 619, 623], "sound": 612, "subpackag": 612, "understand": [612, 620], "downstream": 612, "clu": 612, "intro": 612, "hidden": 612, "shortcut": [612, 663], "referenc": [612, 617, 618], "ll": [612, 618, 619, 641], "dot": 612, "charact": 612, "unix": [612, 616], "mayb": 612, "machine_config": 612, "endswith": 612, "splitext": 612, "exactli": [612, 613, 618, 619, 623, 645, 647], "visa": 612, "versa": 612, "comfort": [612, 618, 619], "orient": 612, "program": [612, 620], "felt": 612, "hesit": 612, "harder": 612, "outcom": 612, "augment": 612, "compos": [612, 654, 657], "dens": 612, "worth": [612, 618], "endeavor": 612, "took": 612, "138": 612, "bash": [613, 614, 663], "ksh": 613, "mac": [613, 616], "csh": 613, "tcsh": 613, "temporarili": 613, "obtain": [613, 638], "recogn": 613, "miniconda3": [613, 618, 619, 642, 663], "permiss": 613, "anyon": 613, "person": [613, 614], "base_path_to_install_or_update_conda": 613, "with_albani": 613, "with_netlib_lapack": 613, "with_petsc": 613, "flavor": 613, "login": [613, 638, 641], "troubl": 613, "recognit": 613, "trilino": 613, "spack": [613, 637, 638, 639, 640, 641, 642], "downsid": 613, "unneed": 613, "workstat": 613, "deploy": 613, "touch": 613, "miniconda": [613, 642, 663], "update_speck": 613, "reinstal": 613, "scorpio": [613, 642, 663], "esmf": [613, 641, 663], "load_": 613, "encod": 613, "load_dev_compass_": 613, "dev_compass_": [613, 614], "safest": 613, "rerun": 613, "load_dev_compass": 613, "echo": 613, "rememb": 613, "recreat": [613, 614], "incorrect": 613, "pip": 613, "extra": [613, 659], "wih": 613, "env_onli": 613, "mpas_make_target": [613, 663], "scientif": [613, 651, 659, 662, 663], "grizzli": 613, "situat": [613, 618, 619, 663], "platform": [613, 638, 663], "wiki": [613, 663], "workdir": [613, 663], "es3m": 613, "mkdir": 613, "fetch": [613, 618], "new_branch_nam": 613, "respons": [613, 653, 661], "simplest": [613, 660], "your_new_branch": 613, "checkout": 613, "encount": 614, "solv": [614, 625, 626, 645], "geo": 614, "cartopi": 614, "np110py27_4": 614, "calledprocesserror": 614, "spec": [614, 641], "vpn": 614, "site": 614, "shell": [614, 616], "honor": 614, "spawn": 614, "usernam": [614, 618, 641], "proxy_en": 614, "all_proxi": 614, "proxyout": 614, "8080": 614, "no_proxi": 614, "localhost": [614, 641, 642, 663], "127": 614, "proxy_dis": 614, "unset": 614, "anytim": 614, "fatal": 614, "mpi_init": 614, "stack": 614, "mpir_init_thread": 614, "159": 614, "mpid_init": 614, "164": 614, "mpidi_ch3_init": 614, "95": 614, "mpid_nem_init": 614, "314": 614, "mpid_nem_tcp_init": 614, "173": 614, "mpid_nem_tcp_get_business_card": 614, "395": 614, "getsockinterfaceaddr": 614, "369": 614, "pn2034311": 614, "errno": 614, "host": [614, 642, 663], "unexpect": [615, 618, 619, 623, 647], "Of": 616, "predict": 616, "kept": [616, 651], "expert": [616, 630, 633, 634, 651], "team": [616, 651], "launch": 616, "benefit": 616, "queue": 616, "beginn": [616, 618, 619], "worktre": [616, 618, 619], "advanc": [616, 618, 619], "style": [616, 618, 619], "troubleshoot": 616, "proxi": 616, "gethostbynam": 616, "port": [616, 617, 618, 641, 651, 655, 662], "list_testcas": 616, "setup_testcas": 616, "clean_testcas": 616, "manage_regression_suit": 616, "strict": [616, 618, 642, 663], "experienc": 616, "seriou": 616, "anticip": [616, 618, 651], "persist": 616, "medium": [616, 637], "glossari": [617, 618, 619], "rapidli": [617, 657], "companion": 617, "liber": 617, "add_cosine_bel": 617, "add_baroclinic_channel": [617, 618], "fit": [617, 620, 660], "camel": 617, "welcom": 617, "_mesh": 617, "bring": 617, "_namelist": 617, "_init": 617, "_output": 617, "wasn": 617, "becam": 617, "didn": [617, 619], "_setup_step": 617, "haven": [617, 618, 619], "_ntask": 617, "heurist": 617, "refus": 617, "update_cor": 617, "goal_cells_per_cor": [617, 650, 658, 660], "max_cells_per_cor": [617, 650, 658, 660], "qu30": 617, "65275": 617, "10383": 617, "approx_cel": 617, "6e8": 617, "round": [617, 650], "pinch": 617, "_forward": 617, "_min_task": 617, "consult": [618, 619, 651], "fork": 618, "push": 618, "lowercas": [618, 619], "hyphen": 618, "realli": [618, 619, 641], "nice": [618, 619, 641], "supercomput": [618, 619], "highli": [618, 619], "camelcas": [618, 619], "capit": [618, 619], "cap": [618, 619], "promot": 618, "pattern": [618, 619], "seen": [618, 624], "seldom": 618, "outweigh": 618, "equip": 618, "hexagon": 618, "variat": 618, "pain": 618, "pick": [618, 619], "partial_cell_typ": [618, 645, 648, 654, 656, 657, 658, 662], "min_pc_fract": [618, 645, 648, 654, 656, 657, 658, 662], "halv": [618, 648, 656], "500km": [618, 648, 656], "40e3": [618, 648, 656, 657], "corioli": [618, 648, 654, 656, 657, 662], "2e": [618, 648, 656], "connect": [618, 641, 651], "handi": 618, "05": [618, 659, 662], "techiniqu": 618, "input_interv": [618, 619], "initial_onli": [618, 619], "__init": 618, "spuriou": [618, 648, 656], "pop": [618, 648, 656], "mom": [618, 648, 656], "mitgcm": [618, 648, 656], "heavi": 618, "context": 618, "analogi": 618, "tet": 618, "20_00": 618, "0000": [618, 619], "dayssincestartofsim": 618, "relativevort": 618, "pyplot": [618, 619], "plt": [618, 619], "cmocean": 618, "output_": 618, "sections_baroclinic_channel_": 618, "_plot": 618, "compact": 618, "anymor": 618, "bc_configur": 618, "users_guid": [618, 619], "alphabet": [618, 619], "daunt": [618, 619], "tini": 619, "add_gotm": 619, "driver": 619, "Its": 619, "driver_script": 619, "pre_messag": 619, "post_messag": 619, "config_init": 619, "add_execut": 619, "dest": 619, "config_init_configur": 619, "periodic_planar": 619, "config_vert_level": 619, "config_periodic_planar_vert_level": 619, "config_periodic_planar_bottom_depth": 619, "config_periodic_planar_velocity_strength": 619, "config_ocean_run_mod": 619, "config_write_cull_cell_mask": 619, "config_vertical_grid": 619, "immut": 619, "input_init": 619, "output_init": 619, "add_cont": 619, "edgemask": 619, "run_script": 619, "mpascellcul": 619, "mpasmeshconvert": 619, "model_run": 619, "proc": 619, "gotmturb": 619, "nml": 619, "plot_profil": 619, "jump": 619, "encourag": 619, "plai": 619, "role": 619, "barotropic_channel": 619, "excerpt": 619, "slight": 619, "hasn": 619, "real": 619, "deep": [619, 659], "uniformli": 619, "wrapper": 619, "conform": 619, "add_link": 619, "copy_fil": 619, "source_path": 619, "script_test_dir": 619, "0000_12": 619, "config_zonal_ssh_grad": 619, "config_pressure_gradient_typ": 619, "constant_forc": 619, "config_use_cvmix": 619, "config_use_gotm": 619, "config_gotm_namelist_fil": 619, "config_gotm_constant_bottom_drag_coeff": 619, "73e": 619, "config_use_implicit_bottom_drag": 619, "velocityzon": 619, "velocitymeridion": 619, "vertvisctopofcel": 619, "nor": 619, "velocity_profil": 619, "viscosity_profil": 619, "xr": 619, "switch_backend": 619, "agg": 619, "kappa": 619, "z0b": 619, "5e": [619, 662], "gssh": 619, "81": 619, "isel": 619, "zi": 619, "ustarb": 619, "sqrt": [619, 651], "u_a": 619, "nu_a": 619, "infer": [619, 652], "c_d": 619, "4g": 619, "xlabel": 619, "ylabel": 619, "savefig": 619, "introduc": 619, "got": 619, "newli": 619, "explanatori": 620, "wherev": 620, "my_machin": 620, "customize_config_pars": 620, "inej": 620, "ssl": 620, "certif": 620, "partition_execut": 620, "netcdf4_class": 620, "netcdf3_64bit": 620, "netcdf3_class": 620, "engin": 620, "scipi": 620, "contact": 620, "temperaturemax": 620, "statist": 620, "temperature_max": 620, "offlin": [620, 651], "coarser": [620, 650, 651, 658], "finer": [620, 651, 662], "2018": 622, "websit": [622, 646], "v6": 622, "land_ic": 622, "sia_restart_test": [623, 663], "sia_decomposition_test": [623, 663], "enthalpy_decomposition_test": 623, "enthalpy_restart_test": 623, "expos": [623, 647], "fo_decomposition_test": [623, 663], "fo_restart_test": [623, 663], "3km_restart_test": 623, "fo_calv": 623, "von_mises_stress_damag": 623, "threshold_facemelt": 623, "3km_decomposition_test": 623, "none_calv": 623, "adp": 624, "timestepp": [624, 635], "ratio": [624, 649], "warn": [624, 650, 658], "greater": [624, 626], "panel": 624, "cumul": 624, "adapt": [624, 635], "lag": 624, "trigger": 624, "routin": [624, 632], "unabl": 624, "volum": 624, "unground": 625, "iceberg": 625, "presenc": 625, "1250": [625, 662], "dirichlet": 625, "bed": 625, "use_mu": 625, "area": [625, 651], "use_7cel": 625, "1proc_run": [625, 626, 627, 629, 631], "4proc_run": [625, 626, 627, 629], "1983": 626, "2005": [626, 649, 651], "rectangular": [626, 627, 631, 659], "circularli": [626, 627], "accumul": [626, 627], "ablat": 626, "16700": 626, "varr": 626, "payn": 627, "750": 627, "exmapl": [627, 631], "25000m": 627, "64": [627, 645, 661], "74": 627, "25000": 627, "thermomechan": 627, "warm": [627, 657, 662], "altitud": 627, "cooler": [627, 648, 662], "slip": [627, 629, 662], "throughout": [627, 648, 649, 656, 657], "exismint2_viz": 627, "enthalpy_benchmark_viz": 628, "display_imag": 628, "prescrib": [628, 657, 659], "decreas": [628, 657], "paraview": [629, 636], "cull_dist": [629, 630, 633, 634, 636], "min_spac": [629, 630, 633, 634, 636], "e3": [629, 630, 633, 634, 636], "max_spac": [629, 630, 633, 634, 636], "log10": [629, 630, 633, 634, 636], "high_log_spe": [629, 630, 633, 634, 636], "low_log_spe": [629, 630, 633, 634, 636], "75": [629, 630, 633, 634, 636, 654, 657], "high_dist": [629, 630, 633, 634, 636], "e5": [629, 630, 633, 634, 636], "low_dist": [629, 630, 633, 634, 636], "e4": [629, 630, 633, 634, 636], "use_spe": [629, 630, 633, 634, 636], "use_dist_to_grounding_lin": [629, 630, 633, 634, 636], "use_dist_to_edg": [629, 630, 633, 634, 636], "newer": [629, 636], "notabl": 630, "slower": 630, "humboldt_mesh": 630, "yr": [630, 633, 634, 657], "16proc_run": [630, 636], "32proc_run": [630, 636], "fot": 630, "bfb": 630, "von": 630, "mise": 630, "marin": [630, 657], "facemelt": 630, "exercis": [630, 651], "widest": 630, "1000m": 631, "58": 631, "3proc_run": 631, "specialti": 632, "carefulli": 632, "high_res_kangerlussuaq_mesh": 633, "high_res_kogebugts_mesh": 634, "e2": 634, "2km": [635, 657], "paper": [635, 659, 662], "trade": 635, "accuraci": 635, "includess": 636, "gain": [637, 651], "confluenc": 637, "deploi": [637, 638, 639, 640, 641, 642, 659], "mpi_intel": [637, 638, 639, 640, 641, 642], "mpi_gnu": [637, 638, 639, 641, 642], "hdf5": [637, 638, 639, 640, 641, 642], "fortran": [637, 638, 639, 640, 641, 642], "pnetcdf": [637, 638, 639, 640, 641, 642], "use_e3sm_hdf5_netcdf": [637, 638, 639, 640, 641, 642], "cobalt": [637, 638, 639, 640, 641, 642], "condo": [637, 663], "acm": [637, 641, 663], "qualiti": [637, 638, 640, 641, 642, 663], "servic": [637, 638, 640, 641, 642, 663], "qo": [637, 638, 640, 641, 642, 663], "acme_high": 637, "load_latest_compass_intel_impi": [637, 638, 639, 640], "load_latest_compass_gnu_mvapich": [637, 638], "dst": 638, "calendar": 638, "yellow": 638, "introduct": 638, "network": 638, "my_monik": 638, "wtrw": 638, "ba": 638, "lustr": [638, 663], "scratch3": 638, "scratch4": [638, 663], "sacctmgr": 638, "assoc": 638, "cluster": 638, "sshare": 638, "grep": [638, 663], "sreport": 638, "accountutilizationbyus": 638, "prioriti": 638, "chkhome": 638, "petabyt": 638, "df": 638, "bp": 638, "archiv": [638, 641], "hpss": [638, 641], "tn": 638, "storag": 638, "project_nam": 638, "salloc": [638, 641, 642], "account_nam": 638, "load_latest_compass_gnu_openmpi": [639, 663], "compyf": 640, "app": [640, 663], "conda_env": [640, 663], "mpi_pgi": 640, "mvapich2": 640, "pmi2": 640, "my_usernam": [641, 642], "knl": 641, "nim": 641, "filesystem": 641, "cscratch1": 641, "sd": 641, "myquota": 641, "prjquota": 641, "projectid": 641, "m2833": 641, "hsi": 641, "htar": 641, "zstash": 641, "cf": [641, 651, 663], "cdir": [641, 663], "premium": 641, "load_latest_compass_intel_mpt": 641, "load_latest_compass_gnu_mpt": 641, "8844": 641, "monik": 641, "browser": 641, "grab": 641, "logon": 641, "kernel": 641, "myenv": 641, "ipykernel": 641, "kernelspec": 641, "Be": 641, "interpret": 641, "argv": 641, "ipykernel_launch": 641, "connection_fil": 641, "display_nam": 641, "sai": [642, 657], "workload": 642, "sbatch": [642, 663], "squeue": 642, "scancel": 642, "jobid": 642, "cancel": 642, "emtpi": 642, "channel_prior": [642, 663], "mpi_mpich": [642, 663], "mpi_openmpi": [642, 663], "nompi": [642, 663], "inclus": [643, 651], "cryospher": [643, 651], "campaign": [643, 651], "mass": [643, 660], "loss": 643, "depress": [643, 645, 654, 657], "thicker": 643, "hanei": [643, 657], "stationari": 643, "freeli": 643, "guess": 643, "robust": 643, "grow": 644, "stewart": [645, 662], "2017": 645, "z_2": 645, "z_1": 645, "mathrm": [645, 662], "rightarrow": 645, "infti": 645, "z_k": 645, "z_0": 645, "finder": 645, "n_z": 645, "h_": [645, 662], "210": [645, 650], "5500": 645, "renorm": [645, 662], "51": 645, "221": 645, "63": 645, "flat": 645, "collaps": 645, "adcroft": 645, "campin": 645, "2004": 645, "absenc": 645, "proport": [645, 650, 658, 660], "watercolumn": 645, "press": 645, "batymetri": 645, "stair": 645, "release_6": 646, "unexpectedli": 647, "proper": [647, 651], "equilibr": 647, "ilicak": [648, 656], "2012": [648, 656, 660], "psu": [648, 649, 654, 656, 657, 658, 659, 662], "sinusoid": [648, 649, 656], "warmer": [648, 656], "mk": [648, 649, 656], "celsiu": [648, 654, 656, 657], "reproduc": [649, 651], "warner": 649, "2013": [649, 662], "oei": 649, "dimens": 649, "6km": 649, "seaward": 649, "oscil": 649, "zeta_": 649, "east": 649, "5t": 649, "degc": 649, "rough": 649, "250m": 649, "coordiant": 649, "viz": [649, 654, 656, 657], "ouptut": [649, 657], "drying_slope_viz": 649, "generate_movi": 649, "frames_per_second": [649, 657], "movie_format": [649, 657], "12h": 649, "inspect": 649, "williamson": 650, "1992": 650, "3a": 650, "skamarock": 650, "gassmann": 650, "psi": 650, "psi_0": 650, "co": [650, 651], "ge": 650, "equatori": 650, "u_0": 650, "aim": [650, 651, 658, 660], "central": 650, "rad": 650, "lat_cent": 650, "lon_cent": 650, "14159265": 650, "2123666": 650, "6667": 650, "hill": 650, "psi0": 650, "transit": [650, 651, 657], "vel_pd": 650, "qu_conv_thresh": 650, "qu_conv_max": 650, "icos_conv_thresh": 650, "icos_conv_max": 650, "480": 650, "multipli": [650, 658], "alloc": [650, 658, 660], "mesh_": 651, "init_": 651, "april": 651, "mpas_mesh_short_nam": 651, "mpas_mesh_long_nam": 651, "mpas_mesh_prefix": 651, "mpas_mesh_e3sm_vers": 651, "mpas_mesh_pull_request": 651, "mpas_mesh_qu_revis": 651, "mpas_mesh_qu_version_author": 651, "mpas_mesh_qu_version_author_": 651, "mail": 651, "mpas_mesh_qu_version_creation_d": 651, "210116": 651, "mpas_mesh_qu_minimum_resolution_km": 651, "mpas_mesh_qu_maximum_resolution_km": 651, "mpas_mesh_qu_maximum_depth_m": 651, "mpas_mesh_qu_number_of_level": 651, "mpas_mesh_descript": 651, "mpas_mesh_bathymetri": 651, "mpas_initial_condit": 651, "mpas_mesh_compass_vers": 651, "mpas_mesh_jigsaw_vers": 651, "mpas_mesh_jigsaw": 651, "python_vers": 651, "mpas_mesh_mpa": 651, "tools_vers": 651, "mpas_mesh_nco_vers": 651, "mpas_mesh_esmf_vers": 651, "mpas_mesh_geometric_features_vers": 651, "mpas_mesh_metis_vers": 651, "mpas_mesh_pyremap_vers": 651, "lowest": 651, "everywher": 651, "impli": 651, "treatment": 651, "gent": 651, "mcwilliam": 651, "doi": 651, "org": 651, "1175": 651, "1520": 651, "0485": 651, "1990": [651, 654, 657], "020": 651, "0150": 651, "imiocm": 651, "parameter": [651, 654], "a_c": 651, "smoothli": 651, "sorrm": 651, "taper": 651, "attach": 651, "topograph": 651, "global_ocean_dynamic_adjust": 651, "coastlin": [651, 659], "ai": 651, "portion": 651, "gibraltar": 651, "mediterranean": 651, "contigu": 651, "peninsula": 651, "deriv": 651, "en4_1900_bgc": 651, "thought": 651, "explict": 651, "higdon": 651, "4th": [651, 660], "rung": [651, 660], "kutta": [651, 660], "infeas": 651, "surfaceareaweightedaverag": 651, "watermasscensu": 651, "layervolumeweightedaverag": 651, "zonalmean": 651, "okuboweiss": 651, "meridionalheattransport": 651, "highfrequencyoutput": 651, "eliassenpalm": 651, "mixedlayerdepth": 651, "debugdiagnost": 651, "eddyproductvari": 651, "oceanheatcont": 651, "mixedlayerheatbudget": 651, "sync": 651, "confid": 651, "complianc": 651, "cfconvent": 651, "transient": [651, 654], "amplitud": 651, "aggress": 651, "gentli": 651, "global_ocean_mesh_quwisc240": 651, "global_ocean_mesh_ecwisc30to60": 651, "qu240_for_e3sm": [651, 663, 665], "quwisc240_for_e3sm": [651, 663, 665], "mocstreamfunct": 651, "weren": 651, "ofr": 651, "wcatl12to45e2r4": 651, "210318": 651, "gl": 652, "umlauf": 652, "burchard": 652, "2003": 652, "67": 652, "69": 652, "0173": 652, "event": 653, "tide": [653, 661], "coastal": 653, "estuari": 653, "surg": 653, "inund": 653, "mesh_ntask": 653, "mesh_min_task": 653, "floodplain_elev": 653, "init_ntask": 653, "init_min_task": 653, "forward_ntask": 653, "forward_min_task": 653, "strm15": 653, "carri": 653, "vector": 653, "recor": 653, "spinup": 653, "ramp": 653, "shock": 653, "dimension": 654, "linearli": [654, 657, 659], "bui": [654, 657], "1490": [654, 657], "abruptli": [654, 657], "occupi": [654, 657], "cavity_thick": 654, "slope_height": 654, "angl": 654, "edge_width": 654, "0e3": 654, "y1": 654, "y2": 654, "surface_salin": [654, 659], "bottom_salin": 654, "5e3": 654, "strenuou": 654, "live": 654, "induc": 656, "propag": 656, "stratif": [656, 659], "5000": 656, "amplitude_width_frac": 656, "amplitude_width_dist": 656, "50e3": 656, "intercomparison": 657, "2016": [657, 662], "sheetmodel": 657, "cornford": 657, "ocean3": 657, "ocean4": 657, "inflow": 657, "misomip": 657, "topo_smooth": 657, "min_ice_thick": 657, "scalar": 657, "draft_scal": 657, "minimum_level": 657, "min_column_thick": 657, "min_smoothed_draft_mask": 657, "min_land_ice_fract": 657, "init_top_temp": 657, "init_bot_temp": 657, "init_top_s": 657, "init_bot_s": 657, "restore_top_temp": 657, "restore_bot_temp": 657, "restore_top_s": 657, "restore_bot_s": 657, "restore_r": 657, "restore_evap_r": 657, "restore_xmin": 657, "790e3": 657, "restore_xmax": 657, "800e3": 657, "409e": 657, "kg": 657, "effective_dens": 657, "1026": 657, "0002": 657, "0003": 657, "isomip_plus_streamfunct": 657, "osf_dx": 657, "2e3": 657, "osf_dz": 657, "plot_hanei": 657, "section_i": 657, "warmest": 657, "amundsen": 657, "bellingshausen": 657, "vigor": 657, "rigor": 657, "cold": [657, 662], "weddel": 657, "ross": 657, "weak": 657, "decad": 657, "protocol": 657, "opposit": 657, "misimp": 657, "undergon": 657, "retreat": 657, "exponenti": 657, "cours": 657, "stai": 657, "monoton": 657, "setup_to_run": 657, "loop": 657, "stagger": 658, "hex": 658, "nx_1km": 658, "512": 658, "ny_1km": 658, "640": 658, "deg": 658, "x_center": 658, "y_center": 658, "gaussian_width": 658, "advect_x": 658, "advect_i": 658, "conv_thresh": 658, "conv_max": 658, "wolfram": [659, 662], "investig": 659, "midlatitud": 659, "21": 659, "48": 659, "gyre": 659, "appendix": 659, "8km": 659, "16km": 659, "expans": 659, "eos_linear_alpha": 659, "density_differ": 659, "salinity_gradi": 659, "0008": 659, "thermocline_depth": 659, "density_difference_linear": 659, "phi": 659, "shelf_depth": [659, 662], "unequ": 659, "trajectori": 659, "situ": [659, 662], "lauritzen": 660, "conserv": 660, "debugtrac": 660, "discontinu": 660, "slot": 660, "cylind": 660, "offset": 660, "timestep_minut": 660, "tracer1_conv_thresh": 660, "tracer2_conv_thresh": 660, "tracer3_conv_thresh": 660, "appreci": 660, "degrad": 660, "revers": 660, "deform": 660, "nonlinearli": 660, "correl": 660, "invers": 661, "attract": 661, "guassian": 661, "shperic": 661, "shtn": 661, "dosen": 661, "gather": 661, "rank": 661, "scatter": 661, "impliment": 661, "algoritm": 661, "unstructur": 661, "all_reduc": 661, "use_shtn": 661, "analyit": 661, "sprial": 661, "harmoic": 661, "26": 661, "220": 661, "980": 661, "spherial": 661, "ringler": 662, "span": 662, "l_x": 662, "l_y": 662, "y_": 662, "w_": 662, "easterli": 662, "wind_transition_posit": 662, "800000": 662, "antarctic_shelf_front_width": 662, "600000": 662, "wind_stress_shelf_front_max": 662, "meridional_ext": 662, "0e6": 662, "slope_half_width": 662, "0e5": 662, "slope_center_posit": 662, "reference_corioli": 662, "coriolis_gradi": 662, "wind_stress_max": 662, "mean_restoring_temp": 662, "restoring_temp_dev_ta": 662, "restoring_temp_dev_tb": 662, "interior": 662, "restoring_temp_tau": 662, "piston": 662, "restoring_temp_piston_vel": 662, "93e": 662, "fold": 662, "restoring_temp_z": 662, "spong": 662, "restoring_sponge_l": 662, "0e4": 662, "anomali": 662, "frazil_temperature_anomali": 662, "load_latest_compass": 663, "minu": 663, "create_compass_load_script": 663, "load_compass_1": 663, "0_mpich": 663, "sia_smoke_test": 663, "fo_smoke_test": 663, "mpas_path": 663, "17": 663, "210131_test_new_branch": 663, "fall": 663, "landice_datafil": 663, "ocean_databas": 663, "_database_root": 663, "previous_workdir": 663, "test_subdir": 663, "whatev": 663, "job_script": 663, "j": 663, "exclus": 663, "job_nam": 663, "wall_tim": 663, "fo_integr": [663, 665], "full_integr": [663, 665], "sia_integr": [663, 665], "suitenam": 663, "prohibit": 665}, "objects": {"compass": [[9, 0, 1, "", "MpasCore"], [11, 0, 1, "", "Step"], [26, 0, 1, "", "TestCase"], [31, 0, 1, "", "TestGroup"]], "compass.MpasCore": [[9, 1, 1, "", "__init__"], [10, 1, 1, "", "add_test_group"]], "compass.Step": [[11, 1, 1, "", "__init__"], [12, 1, 1, "", "add_input_file"], [13, 1, 1, "", "add_model_as_input"], [14, 1, 1, "", "add_namelist_file"], [15, 1, 1, "", "add_namelist_options"], [16, 1, 1, "", "add_output_file"], [17, 1, 1, "", "add_streams_file"], [18, 1, 1, "", "constrain_resources"], [19, 1, 1, "", "run"], [20, 1, 1, "", "runtime_setup"], [21, 1, 1, "", "set_resources"], [22, 1, 1, "", "setup"], [23, 1, 1, "", "update_namelist_at_runtime"], [24, 1, 1, "", "update_namelist_pio"], [25, 1, 1, "", "update_streams_at_runtime"]], "compass.TestCase": [[26, 1, 1, "", "__init__"], [27, 1, 1, "", "add_step"], [28, 1, 1, "", "configure"], [29, 1, 1, "", "run"], [30, 1, 1, "", "validate"]], "compass.TestGroup": [[31, 1, 1, "", "__init__"], [32, 1, 1, "", "add_test_case"]], "compass.__main__": [[33, 2, 1, "", "main"]], "compass.cache": [[34, 2, 1, "", "update_cache"]], "compass.clean": [[35, 2, 1, "", "clean_cases"]], "compass.config": [[36, 0, 1, "", "CompassConfigParser"]], "compass.config.CompassConfigParser": [[36, 1, 1, "", "__init__"]], "compass.io": [[37, 2, 1, "", "download"], [38, 2, 1, "", "symlink"]], "compass.landice": [[78, 0, 1, "", "Landice"]], "compass.landice.Landice": [[78, 1, 1, "", "__init__"]], "compass.landice.tests.calving_dt_convergence": [[79, 0, 1, "", "CalvingDtConvergence"]], "compass.landice.tests.calving_dt_convergence.CalvingDtConvergence": [[79, 1, 1, "", "__init__"]], "compass.landice.tests.calving_dt_convergence.dt_convergence_test": [[80, 0, 1, "", "DtConvergenceTest"]], "compass.landice.tests.calving_dt_convergence.dt_convergence_test.DtConvergenceTest": [[80, 1, 1, "", "__init__"], [81, 1, 1, "", "validate"]], "compass.landice.tests.calving_dt_convergence.run_model": [[82, 0, 1, "", "RunModel"]], "compass.landice.tests.calving_dt_convergence.run_model.RunModel": [[82, 1, 1, "", "__init__"], [83, 1, 1, "", "run"]], "compass.landice.tests.circular_shelf": [[84, 0, 1, "", "CircularShelf"]], "compass.landice.tests.circular_shelf.CircularShelf": [[84, 1, 1, "", "__init__"]], "compass.landice.tests.circular_shelf.decomposition_test": [[85, 0, 1, "", "DecompositionTest"]], "compass.landice.tests.circular_shelf.decomposition_test.DecompositionTest": [[85, 1, 1, "", "__init__"], [86, 1, 1, "", "run"]], "compass.landice.tests.circular_shelf.run_model": [[87, 0, 1, "", "RunModel"]], "compass.landice.tests.circular_shelf.run_model.RunModel": [[87, 1, 1, "", "__init__"], [88, 1, 1, "", "run"]], "compass.landice.tests.circular_shelf.setup_mesh": [[89, 0, 1, "", "SetupMesh"]], "compass.landice.tests.circular_shelf.setup_mesh.SetupMesh": [[89, 1, 1, "", "__init__"], [90, 1, 1, "", "run"]], "compass.landice.tests.circular_shelf.visualize": [[91, 0, 1, "", "Visualize"], [93, 2, 1, "", "visualize_circular_shelf"]], "compass.landice.tests.circular_shelf.visualize.Visualize": [[91, 1, 1, "", "__init__"], [92, 1, 1, "", "run"]], "compass.landice.tests.dome": [[94, 0, 1, "", "Dome"]], "compass.landice.tests.dome.Dome": [[94, 1, 1, "", "__init__"]], "compass.landice.tests.dome.decomposition_test": [[95, 0, 1, "", "DecompositionTest"]], "compass.landice.tests.dome.decomposition_test.DecompositionTest": [[95, 1, 1, "", "__init__"], [96, 1, 1, "", "run"]], "compass.landice.tests.dome.restart_test": [[97, 0, 1, "", "RestartTest"]], "compass.landice.tests.dome.restart_test.RestartTest": [[97, 1, 1, "", "__init__"], [98, 1, 1, "", "run"]], "compass.landice.tests.dome.run_model": [[99, 0, 1, "", "RunModel"]], "compass.landice.tests.dome.run_model.RunModel": [[99, 1, 1, "", "__init__"], [100, 1, 1, "", "run"], [101, 1, 1, "", "setup"]], "compass.landice.tests.dome.setup_mesh": [[102, 0, 1, "", "SetupMesh"]], "compass.landice.tests.dome.setup_mesh.SetupMesh": [[102, 1, 1, "", "__init__"], [103, 1, 1, "", "run"]], "compass.landice.tests.dome.smoke_test": [[104, 0, 1, "", "SmokeTest"]], "compass.landice.tests.dome.smoke_test.SmokeTest": [[104, 1, 1, "", "__init__"], [105, 1, 1, "", "run"]], "compass.landice.tests.dome.visualize": [[106, 0, 1, "", "Visualize"], [108, 2, 1, "", "visualize_dome"]], "compass.landice.tests.dome.visualize.Visualize": [[106, 1, 1, "", "__init__"], [107, 1, 1, "", "run"]], "compass.landice.tests.eismint2": [[109, 0, 1, "", "Eismint2"]], "compass.landice.tests.eismint2.Eismint2": [[109, 1, 1, "", "__init__"]], "compass.landice.tests.eismint2.decomposition_test": [[110, 0, 1, "", "DecompositionTest"]], "compass.landice.tests.eismint2.decomposition_test.DecompositionTest": [[110, 1, 1, "", "__init__"], [111, 1, 1, "", "run"]], "compass.landice.tests.eismint2.restart_test": [[112, 0, 1, "", "RestartTest"]], "compass.landice.tests.eismint2.restart_test.RestartTest": [[112, 1, 1, "", "__init__"], [113, 1, 1, "", "run"]], "compass.landice.tests.eismint2.run_experiment": [[114, 0, 1, "", "RunExperiment"]], "compass.landice.tests.eismint2.run_experiment.RunExperiment": [[114, 1, 1, "", "__init__"], [115, 1, 1, "", "run"], [116, 1, 1, "", "setup"]], "compass.landice.tests.eismint2.setup_mesh": [[117, 0, 1, "", "SetupMesh"]], "compass.landice.tests.eismint2.setup_mesh.SetupMesh": [[117, 1, 1, "", "__init__"], [118, 1, 1, "", "run"]], "compass.landice.tests.eismint2.standard_experiments": [[119, 0, 1, "", "StandardExperiments"]], "compass.landice.tests.eismint2.standard_experiments.StandardExperiments": [[119, 1, 1, "", "__init__"], [120, 1, 1, "", "run"]], "compass.landice.tests.eismint2.standard_experiments.visualize": [[121, 0, 1, "", "Visualize"], [123, 2, 1, "", "visualize_eismint2"]], "compass.landice.tests.eismint2.standard_experiments.visualize.Visualize": [[121, 1, 1, "", "__init__"], [122, 1, 1, "", "run"]], "compass.landice.tests.enthalpy_benchmark.A": [[124, 0, 1, "", "A"]], "compass.landice.tests.enthalpy_benchmark.A.A": [[124, 1, 1, "", "__init__"], [125, 1, 1, "", "configure"], [126, 1, 1, "", "run"]], "compass.landice.tests.enthalpy_benchmark.A.visualize": [[127, 0, 1, "", "Visualize"]], "compass.landice.tests.enthalpy_benchmark.A.visualize.Visualize": [[127, 1, 1, "", "__init__"], [128, 1, 1, "", "run"]], "compass.landice.tests.enthalpy_benchmark.B": [[129, 0, 1, "", "B"]], "compass.landice.tests.enthalpy_benchmark.B.B": [[129, 1, 1, "", "__init__"], [130, 1, 1, "", "configure"], [131, 1, 1, "", "run"]], "compass.landice.tests.enthalpy_benchmark.B.visualize": [[132, 0, 1, "", "Visualize"]], "compass.landice.tests.enthalpy_benchmark.B.visualize.Visualize": [[132, 1, 1, "", "__init__"], [133, 1, 1, "", "run"]], "compass.landice.tests.enthalpy_benchmark": [[134, 0, 1, "", "EnthalpyBenchmark"]], "compass.landice.tests.enthalpy_benchmark.EnthalpyBenchmark": [[134, 1, 1, "", "__init__"]], "compass.landice.tests.enthalpy_benchmark.run_model": [[135, 0, 1, "", "RunModel"]], "compass.landice.tests.enthalpy_benchmark.run_model.RunModel": [[135, 1, 1, "", "__init__"], [136, 1, 1, "", "run"], [137, 1, 1, "", "setup"]], "compass.landice.tests.enthalpy_benchmark.setup_mesh": [[138, 0, 1, "", "SetupMesh"]], "compass.landice.tests.enthalpy_benchmark.setup_mesh.SetupMesh": [[138, 1, 1, "", "__init__"], [139, 1, 1, "", "run"]], "compass.landice.tests.greenland": [[140, 0, 1, "", "Greenland"]], "compass.landice.tests.greenland.Greenland": [[140, 1, 1, "", "__init__"]], "compass.landice.tests.greenland.decomposition_test": [[141, 0, 1, "", "DecompositionTest"]], "compass.landice.tests.greenland.decomposition_test.DecompositionTest": [[141, 1, 1, "", "__init__"], [142, 1, 1, "", "run"]], "compass.landice.tests.greenland.high_res_mesh": [[143, 0, 1, "", "HighResMesh"]], "compass.landice.tests.greenland.high_res_mesh.HighResMesh": [[143, 1, 1, "", "__init__"], [144, 1, 1, "", "run"]], "compass.landice.tests.greenland.mesh": [[145, 0, 1, "", "Mesh"]], "compass.landice.tests.greenland.mesh.Mesh": [[145, 1, 1, "", "__init__"], [146, 1, 1, "", "build_cell_width"], [147, 1, 1, "", "run"]], "compass.landice.tests.greenland.restart_test": [[148, 0, 1, "", "RestartTest"]], "compass.landice.tests.greenland.restart_test.RestartTest": [[148, 1, 1, "", "__init__"], [149, 1, 1, "", "run"]], "compass.landice.tests.greenland.run_model": [[150, 0, 1, "", "RunModel"]], "compass.landice.tests.greenland.run_model.RunModel": [[150, 1, 1, "", "__init__"], [151, 1, 1, "", "run"], [152, 1, 1, "", "setup"]], "compass.landice.tests.greenland.smoke_test": [[153, 0, 1, "", "SmokeTest"]], "compass.landice.tests.greenland.smoke_test.SmokeTest": [[153, 1, 1, "", "__init__"], [154, 1, 1, "", "run"]], "compass.landice.tests.humboldt": [[155, 0, 1, "", "Humboldt"]], "compass.landice.tests.humboldt.Humboldt": [[155, 1, 1, "", "__init__"]], "compass.landice.tests.humboldt.decomposition_test": [[156, 0, 1, "", "DecompositionTest"]], "compass.landice.tests.humboldt.decomposition_test.DecompositionTest": [[156, 1, 1, "", "__init__"], [157, 1, 1, "", "validate"]], "compass.landice.tests.humboldt.mesh": [[158, 0, 1, "", "Mesh"]], "compass.landice.tests.humboldt.mesh.Mesh": [[158, 1, 1, "", "__init__"], [159, 1, 1, "", "run"]], "compass.landice.tests.humboldt.mesh_gen": [[160, 0, 1, "", "MeshGen"]], "compass.landice.tests.humboldt.mesh_gen.MeshGen": [[160, 1, 1, "", "__init__"], [161, 1, 1, "", "run"]], "compass.landice.tests.humboldt.restart_test": [[162, 0, 1, "", "RestartTest"]], "compass.landice.tests.humboldt.restart_test.RestartTest": [[162, 1, 1, "", "__init__"], [163, 1, 1, "", "validate"]], "compass.landice.tests.humboldt.run_model": [[164, 0, 1, "", "RunModel"]], "compass.landice.tests.humboldt.run_model.RunModel": [[164, 1, 1, "", "__init__"], [165, 1, 1, "", "run"]], "compass.landice.tests.hydro_radial": [[166, 0, 1, "", "HydroRadial"]], "compass.landice.tests.hydro_radial.HydroRadial": [[166, 1, 1, "", "__init__"]], "compass.landice.tests.hydro_radial.decomposition_test": [[167, 0, 1, "", "DecompositionTest"]], "compass.landice.tests.hydro_radial.decomposition_test.DecompositionTest": [[167, 1, 1, "", "__init__"], [168, 1, 1, "", "run"]], "compass.landice.tests.hydro_radial.restart_test": [[169, 0, 1, "", "RestartTest"]], "compass.landice.tests.hydro_radial.restart_test.RestartTest": [[169, 1, 1, "", "__init__"], [170, 1, 1, "", "run"]], "compass.landice.tests.hydro_radial.run_model": [[171, 0, 1, "", "RunModel"]], "compass.landice.tests.hydro_radial.run_model.RunModel": [[171, 1, 1, "", "__init__"], [172, 1, 1, "", "run"], [173, 1, 1, "", "setup"]], "compass.landice.tests.hydro_radial.setup_mesh": [[174, 0, 1, "", "SetupMesh"]], "compass.landice.tests.hydro_radial.setup_mesh.SetupMesh": [[174, 1, 1, "", "__init__"], [175, 1, 1, "", "run"]], "compass.landice.tests.hydro_radial.spinup_test": [[176, 0, 1, "", "SpinupTest"]], "compass.landice.tests.hydro_radial.spinup_test.SpinupTest": [[176, 1, 1, "", "__init__"], [177, 1, 1, "", "run"]], "compass.landice.tests.hydro_radial.steady_state_drift_test": [[178, 0, 1, "", "SteadyStateDriftTest"]], "compass.landice.tests.hydro_radial.steady_state_drift_test.SteadyStateDriftTest": [[178, 1, 1, "", "__init__"], [179, 1, 1, "", "run"]], "compass.landice.tests.hydro_radial.visualize": [[180, 0, 1, "", "Visualize"], [182, 2, 1, "", "visualize_hydro_radial"]], "compass.landice.tests.hydro_radial.visualize.Visualize": [[180, 1, 1, "", "__init__"], [181, 1, 1, "", "run"]], "compass.landice.tests.kangerlussuaq": [[183, 0, 1, "", "Kangerlussuaq"]], "compass.landice.tests.kangerlussuaq.Kangerlussuaq": [[183, 1, 1, "", "__init__"]], "compass.landice.tests.kangerlussuaq.mesh": [[184, 0, 1, "", "Mesh"]], "compass.landice.tests.kangerlussuaq.mesh.Mesh": [[184, 1, 1, "", "__init__"], [185, 1, 1, "", "run"]], "compass.landice.tests.kangerlussuaq.mesh_gen": [[186, 0, 1, "", "MeshGen"]], "compass.landice.tests.kangerlussuaq.mesh_gen.MeshGen": [[186, 1, 1, "", "__init__"], [187, 1, 1, "", "run"]], "compass.landice.tests.koge_bugt_s": [[188, 0, 1, "", "KogeBugtS"]], "compass.landice.tests.koge_bugt_s.KogeBugtS": [[188, 1, 1, "", "__init__"]], "compass.landice.tests.koge_bugt_s.mesh": [[189, 0, 1, "", "Mesh"]], "compass.landice.tests.koge_bugt_s.mesh.Mesh": [[189, 1, 1, "", "__init__"], [190, 1, 1, "", "run"]], "compass.landice.tests.koge_bugt_s.mesh_gen": [[191, 0, 1, "", "MeshGen"]], "compass.landice.tests.koge_bugt_s.mesh_gen.MeshGen": [[191, 1, 1, "", "__init__"], [192, 1, 1, "", "run"]], "compass.landice.tests.mismipplus": [[193, 0, 1, "", "MISMIPplus"]], "compass.landice.tests.mismipplus.MISMIPplus": [[193, 1, 1, "", "__init__"]], "compass.landice.tests.mismipplus.run_model": [[194, 0, 1, "", "RunModel"]], "compass.landice.tests.mismipplus.run_model.RunModel": [[194, 1, 1, "", "__init__"], [195, 1, 1, "", "run"], [196, 1, 1, "", "setup"]], "compass.landice.tests.mismipplus.smoke_test": [[197, 0, 1, "", "SmokeTest"]], "compass.landice.tests.mismipplus.smoke_test.SmokeTest": [[197, 1, 1, "", "__init__"], [198, 1, 1, "", "run"]], "compass.landice.tests.thwaites": [[199, 0, 1, "", "Thwaites"]], "compass.landice.tests.thwaites.Thwaites": [[199, 1, 1, "", "__init__"]], "compass.landice.tests.thwaites.decomposition_test": [[200, 0, 1, "", "DecompositionTest"]], "compass.landice.tests.thwaites.decomposition_test.DecompositionTest": [[200, 1, 1, "", "__init__"], [201, 1, 1, "", "run"]], "compass.landice.tests.thwaites.restart_test": [[202, 0, 1, "", "RestartTest"]], "compass.landice.tests.thwaites.restart_test.RestartTest": [[202, 1, 1, "", "__init__"], [203, 1, 1, "", "run"]], "compass.landice.tests.thwaites.run_model": [[204, 0, 1, "", "RunModel"]], "compass.landice.tests.thwaites.run_model.RunModel": [[204, 1, 1, "", "__init__"], [205, 1, 1, "", "run"], [206, 1, 1, "", "setup"]], "compass.list": [[39, 2, 1, "", "list_cases"], [40, 2, 1, "", "list_machines"], [41, 2, 1, "", "list_suites"]], "compass.logging": [[42, 2, 1, "", "log_method_call"]], "compass.mesh": [[43, 0, 1, "", "IcosahedralMeshStep"], [50, 0, 1, "", "QuasiUniformSphericalMeshStep"]], "compass.mesh.IcosahedralMeshStep": [[43, 1, 1, "", "__init__"], [44, 1, 1, "", "build_subdivisions_cell_width_lat_lon"], [45, 1, 1, "", "get_cell_width"], [46, 1, 1, "", "get_subdivisions"], [47, 1, 1, "", "make_jigsaw_mesh"], [48, 1, 1, "", "run"], [49, 1, 1, "", "setup"]], "compass.mesh.QuasiUniformSphericalMeshStep": [[50, 1, 1, "", "__init__"], [51, 1, 1, "", "build_cell_width_lat_lon"], [52, 1, 1, "", "make_jigsaw_mesh"], [53, 1, 1, "", "run"], [54, 1, 1, "", "setup"]], "compass.mesh.spherical": [[55, 0, 1, "", "SphericalBaseStep"]], "compass.mesh.spherical.SphericalBaseStep": [[55, 1, 1, "", "__init__"], [56, 1, 1, "", "run"], [57, 1, 1, "", "save_and_plot_cell_width"], [58, 1, 1, "", "setup"]], "compass.model": [[59, 2, 1, "", "make_graph_file"], [60, 2, 1, "", "partition"], [61, 2, 1, "", "run_model"]], "compass.mpas_cores": [[62, 2, 1, "", "get_mpas_cores"]], "compass.ocean": [[229, 0, 1, "", "Ocean"]], "compass.ocean.Ocean": [[229, 1, 1, "", "__init__"]], "compass.ocean.haney": [[230, 2, 1, "", "compute_haney_number"]], "compass.ocean.iceshelf": [[231, 2, 1, "", "adjust_ssh"], [232, 2, 1, "", "compute_land_ice_pressure_and_draft"]], "compass.ocean.particles": [[233, 2, 1, "", "remap_particles"], [234, 2, 1, "", "write"]], "compass.ocean.plot": [[235, 2, 1, "", "plot_initial_state"], [236, 2, 1, "", "plot_vertical_grid"]], "compass.ocean.tests.baroclinic_channel": [[237, 0, 1, "", "BaroclinicChannel"], [238, 2, 1, "", "configure"]], "compass.ocean.tests.baroclinic_channel.BaroclinicChannel": [[237, 1, 1, "", "__init__"]], "compass.ocean.tests.baroclinic_channel.decomp_test": [[239, 0, 1, "", "DecompTest"]], "compass.ocean.tests.baroclinic_channel.decomp_test.DecompTest": [[239, 1, 1, "", "__init__"], [240, 1, 1, "", "configure"], [241, 1, 1, "", "run"]], "compass.ocean.tests.baroclinic_channel.default": [[242, 0, 1, "", "Default"]], "compass.ocean.tests.baroclinic_channel.default.Default": [[242, 1, 1, "", "__init__"], [243, 1, 1, "", "configure"], [244, 1, 1, "", "run"]], "compass.ocean.tests.baroclinic_channel.forward": [[245, 0, 1, "", "Forward"]], "compass.ocean.tests.baroclinic_channel.forward.Forward": [[245, 1, 1, "", "__init__"], [246, 1, 1, "", "run"], [247, 1, 1, "", "setup"]], "compass.ocean.tests.baroclinic_channel.initial_state": [[248, 0, 1, "", "InitialState"]], "compass.ocean.tests.baroclinic_channel.initial_state.InitialState": [[248, 1, 1, "", "__init__"], [249, 1, 1, "", "run"], [250, 1, 1, "", "setup"]], "compass.ocean.tests.baroclinic_channel.restart_test": [[251, 0, 1, "", "RestartTest"]], "compass.ocean.tests.baroclinic_channel.restart_test.RestartTest": [[251, 1, 1, "", "__init__"], [252, 1, 1, "", "configure"], [253, 1, 1, "", "run"]], "compass.ocean.tests.baroclinic_channel.rpe_test": [[254, 0, 1, "", "RpeTest"]], "compass.ocean.tests.baroclinic_channel.rpe_test.RpeTest": [[254, 1, 1, "", "__init__"], [255, 1, 1, "", "configure"], [256, 1, 1, "", "run"]], "compass.ocean.tests.baroclinic_channel.rpe_test.analysis": [[257, 0, 1, "", "Analysis"]], "compass.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis": [[257, 1, 1, "", "__init__"], [258, 1, 1, "", "run"], [259, 1, 1, "", "setup"]], "compass.ocean.tests.baroclinic_channel.threads_test": [[260, 0, 1, "", "ThreadsTest"]], "compass.ocean.tests.baroclinic_channel.threads_test.ThreadsTest": [[260, 1, 1, "", "__init__"], [261, 1, 1, "", "configure"], [262, 1, 1, "", "run"]], "compass.ocean.tests.drying_slope": [[263, 0, 1, "", "DryingSlope"]], "compass.ocean.tests.drying_slope.DryingSlope": [[263, 1, 1, "", "__init__"]], "compass.ocean.tests.drying_slope.default": [[264, 0, 1, "", "Default"]], "compass.ocean.tests.drying_slope.default.Default": [[264, 1, 1, "", "__init__"], [265, 1, 1, "", "configure"]], "compass.ocean.tests.drying_slope.forward": [[266, 0, 1, "", "Forward"]], "compass.ocean.tests.drying_slope.forward.Forward": [[266, 1, 1, "", "__init__"], [267, 1, 1, "", "run"]], "compass.ocean.tests.drying_slope.initial_state": [[268, 0, 1, "", "InitialState"]], "compass.ocean.tests.drying_slope.initial_state.InitialState": [[268, 1, 1, "", "__init__"], [269, 1, 1, "", "run"]], "compass.ocean.tests.drying_slope.viz": [[270, 0, 1, "", "Viz"]], "compass.ocean.tests.drying_slope.viz.Viz": [[270, 1, 1, "", "__init__"], [271, 1, 1, "", "run"]], "compass.ocean.tests.global_convergence": [[272, 0, 1, "", "GlobalConvergence"]], "compass.ocean.tests.global_convergence.GlobalConvergence": [[272, 1, 1, "", "__init__"]], "compass.ocean.tests.global_convergence.cosine_bell": [[273, 0, 1, "", "CosineBell"]], "compass.ocean.tests.global_convergence.cosine_bell.CosineBell": [[273, 1, 1, "", "__init__"], [274, 1, 1, "", "configure"], [275, 1, 1, "", "run"]], "compass.ocean.tests.global_convergence.cosine_bell.analysis": [[276, 0, 1, "", "Analysis"]], "compass.ocean.tests.global_convergence.cosine_bell.analysis.Analysis": [[276, 1, 1, "", "__init__"], [277, 1, 1, "", "rmse"], [278, 1, 1, "", "run"]], "compass.ocean.tests.global_convergence.cosine_bell.forward": [[279, 0, 1, "", "Forward"]], "compass.ocean.tests.global_convergence.cosine_bell.forward.Forward": [[279, 1, 1, "", "__init__"], [280, 1, 1, "", "get_dt"], [281, 1, 1, "", "run"], [282, 1, 1, "", "setup"]], "compass.ocean.tests.global_convergence.cosine_bell.init": [[283, 0, 1, "", "Init"]], "compass.ocean.tests.global_convergence.cosine_bell.init.Init": [[283, 1, 1, "", "__init__"], [284, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean": [[285, 0, 1, "", "GlobalOcean"], [289, 3, 0, "-", "configure"]], "compass.ocean.tests.global_ocean.GlobalOcean": [[285, 1, 1, "", "__init__"]], "compass.ocean.tests.global_ocean.analysis_test": [[286, 0, 1, "", "AnalysisTest"]], "compass.ocean.tests.global_ocean.analysis_test.AnalysisTest": [[286, 1, 1, "", "__init__"], [287, 1, 1, "", "configure"], [288, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.configure": [[290, 2, 1, "", "configure_global_ocean"]], "compass.ocean.tests.global_ocean.daily_output_test": [[291, 0, 1, "", "DailyOutputTest"]], "compass.ocean.tests.global_ocean.daily_output_test.DailyOutputTest": [[291, 1, 1, "", "__init__"], [292, 1, 1, "", "configure"], [293, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.decomp_test": [[294, 0, 1, "", "DecompTest"]], "compass.ocean.tests.global_ocean.decomp_test.DecompTest": [[294, 1, 1, "", "__init__"], [295, 1, 1, "", "configure"], [296, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.dynamic_adjustment": [[297, 0, 1, "", "DynamicAdjustment"]], "compass.ocean.tests.global_ocean.dynamic_adjustment.DynamicAdjustment": [[297, 1, 1, "", "__init__"], [298, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.files_for_e3sm": [[299, 0, 1, "", "FilesForE3SM"]], "compass.ocean.tests.global_ocean.files_for_e3sm.FilesForE3SM": [[299, 1, 1, "", "__init__"], [300, 1, 1, "", "configure"], [301, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.files_for_e3sm.diagnostics_files": [[302, 0, 1, "", "DiagnosticsFiles"]], "compass.ocean.tests.global_ocean.files_for_e3sm.diagnostics_files.DiagnosticsFiles": [[302, 1, 1, "", "__init__"], [303, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.files_for_e3sm.ocean_graph_partition": [[304, 0, 1, "", "OceanGraphPartition"]], "compass.ocean.tests.global_ocean.files_for_e3sm.ocean_graph_partition.OceanGraphPartition": [[304, 1, 1, "", "__init__"], [305, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.files_for_e3sm.ocean_initial_condition": [[306, 0, 1, "", "OceanInitialCondition"]], "compass.ocean.tests.global_ocean.files_for_e3sm.ocean_initial_condition.OceanInitialCondition": [[306, 1, 1, "", "__init__"], [307, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.files_for_e3sm.scrip": [[308, 0, 1, "", "Scrip"]], "compass.ocean.tests.global_ocean.files_for_e3sm.scrip.Scrip": [[308, 1, 1, "", "__init__"], [309, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.files_for_e3sm.seaice_initial_condition": [[310, 0, 1, "", "SeaiceInitialCondition"]], "compass.ocean.tests.global_ocean.files_for_e3sm.seaice_initial_condition.SeaiceInitialCondition": [[310, 1, 1, "", "__init__"], [311, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.forward": [[312, 0, 1, "", "ForwardStep"], [315, 0, 1, "", "ForwardTestCase"]], "compass.ocean.tests.global_ocean.forward.ForwardStep": [[312, 1, 1, "", "__init__"], [313, 1, 1, "", "run"], [314, 1, 1, "", "setup"]], "compass.ocean.tests.global_ocean.forward.ForwardTestCase": [[315, 1, 1, "", "__init__"], [316, 1, 1, "", "configure"], [317, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.init": [[318, 0, 1, "", "Init"]], "compass.ocean.tests.global_ocean.init.Init": [[318, 1, 1, "", "__init__"], [319, 1, 1, "", "configure"], [320, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.init.initial_state": [[321, 0, 1, "", "InitialState"]], "compass.ocean.tests.global_ocean.init.initial_state.InitialState": [[321, 1, 1, "", "__init__"], [322, 1, 1, "", "run"], [323, 1, 1, "", "setup"]], "compass.ocean.tests.global_ocean.init.ssh_adjustment": [[324, 0, 1, "", "SshAdjustment"]], "compass.ocean.tests.global_ocean.init.ssh_adjustment.SshAdjustment": [[324, 1, 1, "", "__init__"], [325, 1, 1, "", "run"], [326, 1, 1, "", "setup"]], "compass.ocean.tests.global_ocean.mesh": [[327, 0, 1, "", "Mesh"]], "compass.ocean.tests.global_ocean.mesh.Mesh": [[327, 1, 1, "", "__init__"], [328, 1, 1, "", "configure"], [329, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.mesh.cull": [[330, 2, 1, "", "cull_mesh"]], "compass.ocean.tests.global_ocean.mesh.ec30to60": [[331, 0, 1, "", "EC30to60Mesh"]], "compass.ocean.tests.global_ocean.mesh.ec30to60.EC30to60Mesh": [[331, 1, 1, "", "__init__"], [332, 1, 1, "", "build_cell_width_lat_lon"]], "compass.ocean.tests.global_ocean.mesh.ec30to60.dynamic_adjustment": [[333, 0, 1, "", "EC30to60DynamicAdjustment"]], "compass.ocean.tests.global_ocean.mesh.ec30to60.dynamic_adjustment.EC30to60DynamicAdjustment": [[333, 1, 1, "", "__init__"], [334, 1, 1, "", "configure"], [335, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.mesh.mesh": [[336, 0, 1, "", "MeshStep"]], "compass.ocean.tests.global_ocean.mesh.mesh.MeshStep": [[336, 1, 1, "", "__init__"], [337, 1, 1, "", "build_cell_width_lat_lon"], [338, 1, 1, "", "run"], [339, 1, 1, "", "setup"]], "compass.ocean.tests.global_ocean.mesh.qu240": [[340, 0, 1, "", "QU240Mesh"]], "compass.ocean.tests.global_ocean.mesh.qu240.QU240Mesh": [[340, 1, 1, "", "__init__"], [341, 1, 1, "", "build_cell_width_lat_lon"]], "compass.ocean.tests.global_ocean.mesh.qu240.dynamic_adjustment": [[342, 0, 1, "", "QU240DynamicAdjustment"]], "compass.ocean.tests.global_ocean.mesh.qu240.dynamic_adjustment.QU240DynamicAdjustment": [[342, 1, 1, "", "__init__"], [343, 1, 1, "", "configure"], [344, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.mesh.so12to60": [[345, 0, 1, "", "SO12to60Mesh"]], "compass.ocean.tests.global_ocean.mesh.so12to60.SO12to60Mesh": [[345, 1, 1, "", "__init__"], [346, 1, 1, "", "build_cell_width_lat_lon"]], "compass.ocean.tests.global_ocean.mesh.so12to60.dynamic_adjustment": [[347, 0, 1, "", "SO12to60DynamicAdjustment"]], "compass.ocean.tests.global_ocean.mesh.so12to60.dynamic_adjustment.SO12to60DynamicAdjustment": [[347, 1, 1, "", "__init__"], [348, 1, 1, "", "configure"], [349, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.mesh.wc14": [[350, 0, 1, "", "WC14Mesh"]], "compass.ocean.tests.global_ocean.mesh.wc14.WC14Mesh": [[350, 1, 1, "", "__init__"], [351, 1, 1, "", "build_cell_width_lat_lon"]], "compass.ocean.tests.global_ocean.mesh.wc14.dynamic_adjustment": [[352, 0, 1, "", "WC14DynamicAdjustment"]], "compass.ocean.tests.global_ocean.mesh.wc14.dynamic_adjustment.WC14DynamicAdjustment": [[352, 1, 1, "", "__init__"], [353, 1, 1, "", "configure"], [354, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.metadata": [[355, 2, 1, "", "add_mesh_and_init_metadata"], [356, 2, 1, "", "get_e3sm_mesh_names"]], "compass.ocean.tests.global_ocean.performance_test": [[357, 0, 1, "", "PerformanceTest"]], "compass.ocean.tests.global_ocean.performance_test.PerformanceTest": [[357, 1, 1, "", "__init__"], [358, 1, 1, "", "configure"], [359, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.restart_test": [[360, 0, 1, "", "RestartTest"]], "compass.ocean.tests.global_ocean.restart_test.RestartTest": [[360, 1, 1, "", "__init__"], [361, 1, 1, "", "configure"], [362, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.threads_test": [[363, 0, 1, "", "ThreadsTest"]], "compass.ocean.tests.global_ocean.threads_test.ThreadsTest": [[363, 1, 1, "", "__init__"], [364, 1, 1, "", "configure"], [365, 1, 1, "", "run"]], "compass.ocean.tests.gotm": [[366, 0, 1, "", "Gotm"]], "compass.ocean.tests.gotm.Gotm": [[366, 1, 1, "", "__init__"]], "compass.ocean.tests.gotm.default": [[367, 0, 1, "", "Default"]], "compass.ocean.tests.gotm.default.Default": [[367, 1, 1, "", "__init__"], [368, 1, 1, "", "validate"]], "compass.ocean.tests.gotm.default.analysis": [[369, 0, 1, "", "Analysis"]], "compass.ocean.tests.gotm.default.analysis.Analysis": [[369, 1, 1, "", "__init__"], [370, 1, 1, "", "run"]], "compass.ocean.tests.gotm.default.forward": [[371, 0, 1, "", "Forward"]], "compass.ocean.tests.gotm.default.forward.Forward": [[371, 1, 1, "", "__init__"], [372, 1, 1, "", "run"]], "compass.ocean.tests.gotm.default.init": [[373, 0, 1, "", "Init"]], "compass.ocean.tests.gotm.default.init.Init": [[373, 1, 1, "", "__init__"], [374, 1, 1, "", "run"]], "compass.ocean.tests.hurricane": [[375, 0, 1, "", "Hurricane"], [382, 3, 0, "-", "configure"]], "compass.ocean.tests.hurricane.Hurricane": [[375, 1, 1, "", "__init__"]], "compass.ocean.tests.hurricane.analysis": [[376, 0, 1, "", "Analysis"]], "compass.ocean.tests.hurricane.analysis.Analysis": [[376, 1, 1, "", "__init__"], [377, 1, 1, "", "read_pointstats"], [378, 1, 1, "", "read_station_data"], [379, 1, 1, "", "read_station_file"], [380, 1, 1, "", "run"], [381, 1, 1, "", "setup"]], "compass.ocean.tests.hurricane.forward": [[383, 0, 1, "", "Forward"]], "compass.ocean.tests.hurricane.forward.Forward": [[383, 1, 1, "", "__init__"], [384, 1, 1, "", "configure"], [385, 1, 1, "", "run"]], "compass.ocean.tests.hurricane.forward.forward": [[386, 0, 1, "", "ForwardStep"]], "compass.ocean.tests.hurricane.forward.forward.ForwardStep": [[386, 1, 1, "", "__init__"], [387, 1, 1, "", "run"], [388, 1, 1, "", "setup"]], "compass.ocean.tests.hurricane.init": [[389, 0, 1, "", "Init"]], "compass.ocean.tests.hurricane.init.Init": [[389, 1, 1, "", "__init__"], [390, 1, 1, "", "configure"], [391, 1, 1, "", "run"]], "compass.ocean.tests.hurricane.init.create_pointstats_file": [[392, 0, 1, "", "CreatePointstatsFile"]], "compass.ocean.tests.hurricane.init.create_pointstats_file.CreatePointstatsFile": [[392, 1, 1, "", "__init__"], [393, 1, 1, "", "create_pointstats_file"], [394, 1, 1, "", "run"]], "compass.ocean.tests.hurricane.init.initial_state": [[395, 0, 1, "", "InitialState"]], "compass.ocean.tests.hurricane.init.initial_state.InitialState": [[395, 1, 1, "", "__init__"], [396, 1, 1, "", "run"], [397, 1, 1, "", "setup"]], "compass.ocean.tests.hurricane.init.interpolate_atm_forcing": [[398, 0, 1, "", "InterpolateAtmForcing"]], "compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing": [[398, 1, 1, "", "__init__"], [399, 1, 1, "", "interpolate_data_to_grid"], [400, 1, 1, "", "plot_interp_data"], [401, 1, 1, "", "run"], [402, 1, 1, "", "write_to_file"]], "compass.ocean.tests.hurricane.mesh": [[403, 0, 1, "", "Mesh"]], "compass.ocean.tests.hurricane.mesh.Mesh": [[403, 1, 1, "", "__init__"], [404, 1, 1, "", "configure"], [405, 1, 1, "", "run"]], "compass.ocean.tests.hurricane.mesh.dequ120at30cr10rr2": [[406, 0, 1, "", "DEQU120at30cr10rr2Mesh"]], "compass.ocean.tests.hurricane.mesh.dequ120at30cr10rr2.DEQU120at30cr10rr2Mesh": [[406, 1, 1, "", "__init__"], [407, 1, 1, "", "build_cell_width_lat_lon"]], "compass.ocean.tests.ice_shelf_2d": [[408, 0, 1, "", "IceShelf2d"], [409, 2, 1, "", "configure"]], "compass.ocean.tests.ice_shelf_2d.IceShelf2d": [[408, 1, 1, "", "__init__"]], "compass.ocean.tests.ice_shelf_2d.default": [[410, 0, 1, "", "Default"]], "compass.ocean.tests.ice_shelf_2d.default.Default": [[410, 1, 1, "", "__init__"], [411, 1, 1, "", "configure"], [412, 1, 1, "", "run"]], "compass.ocean.tests.ice_shelf_2d.forward": [[413, 0, 1, "", "Forward"]], "compass.ocean.tests.ice_shelf_2d.forward.Forward": [[413, 1, 1, "", "__init__"], [414, 1, 1, "", "run"], [415, 1, 1, "", "setup"]], "compass.ocean.tests.ice_shelf_2d.initial_state": [[416, 0, 1, "", "InitialState"]], "compass.ocean.tests.ice_shelf_2d.initial_state.InitialState": [[416, 1, 1, "", "__init__"], [417, 1, 1, "", "run"]], "compass.ocean.tests.ice_shelf_2d.restart_test": [[418, 0, 1, "", "RestartTest"]], "compass.ocean.tests.ice_shelf_2d.restart_test.RestartTest": [[418, 1, 1, "", "__init__"], [419, 1, 1, "", "configure"], [420, 1, 1, "", "run"]], "compass.ocean.tests.ice_shelf_2d.ssh_adjustment": [[421, 0, 1, "", "SshAdjustment"]], "compass.ocean.tests.ice_shelf_2d.ssh_adjustment.SshAdjustment": [[421, 1, 1, "", "__init__"], [422, 1, 1, "", "run"], [423, 1, 1, "", "setup"]], "compass.ocean.tests.ice_shelf_2d.viz": [[424, 0, 1, "", "Viz"]], "compass.ocean.tests.ice_shelf_2d.viz.Viz": [[424, 1, 1, "", "__init__"], [425, 1, 1, "", "run"]], "compass.ocean.tests.internal_wave": [[426, 0, 1, "", "InternalWave"]], "compass.ocean.tests.internal_wave.InternalWave": [[426, 1, 1, "", "__init__"]], "compass.ocean.tests.internal_wave.default": [[427, 0, 1, "", "Default"]], "compass.ocean.tests.internal_wave.default.Default": [[427, 1, 1, "", "__init__"], [428, 1, 1, "", "validate"]], "compass.ocean.tests.internal_wave.forward": [[429, 0, 1, "", "Forward"]], "compass.ocean.tests.internal_wave.forward.Forward": [[429, 1, 1, "", "__init__"], [430, 1, 1, "", "run"]], "compass.ocean.tests.internal_wave.initial_state": [[431, 0, 1, "", "InitialState"]], "compass.ocean.tests.internal_wave.initial_state.InitialState": [[431, 1, 1, "", "__init__"], [432, 1, 1, "", "run"]], "compass.ocean.tests.internal_wave.rpe_test": [[433, 0, 1, "", "RpeTest"]], "compass.ocean.tests.internal_wave.rpe_test.RpeTest": [[433, 1, 1, "", "__init__"]], "compass.ocean.tests.internal_wave.rpe_test.analysis": [[434, 0, 1, "", "Analysis"]], "compass.ocean.tests.internal_wave.rpe_test.analysis.Analysis": [[434, 1, 1, "", "__init__"], [435, 1, 1, "", "run"]], "compass.ocean.tests.internal_wave.ten_day_test": [[436, 0, 1, "", "TenDayTest"]], "compass.ocean.tests.internal_wave.ten_day_test.TenDayTest": [[436, 1, 1, "", "__init__"], [437, 1, 1, "", "validate"]], "compass.ocean.tests.internal_wave.viz": [[438, 0, 1, "", "Viz"]], "compass.ocean.tests.internal_wave.viz.Viz": [[438, 1, 1, "", "__init__"], [439, 1, 1, "", "run"]], "compass.ocean.tests.isomip_plus": [[440, 0, 1, "", "IsomipPlus"]], "compass.ocean.tests.isomip_plus.IsomipPlus": [[440, 1, 1, "", "__init__"]], "compass.ocean.tests.isomip_plus.evap": [[441, 2, 1, "", "update_evaporation_flux"]], "compass.ocean.tests.isomip_plus.forward": [[442, 0, 1, "", "Forward"]], "compass.ocean.tests.isomip_plus.forward.Forward": [[442, 1, 1, "", "__init__"], [443, 1, 1, "", "run"], [444, 1, 1, "", "setup"]], "compass.ocean.tests.isomip_plus.geom": [[445, 2, 1, "", "interpolate_ocean_mask"], [446, 2, 1, "", "process_input_geometry"]], "compass.ocean.tests.isomip_plus.initial_state": [[447, 0, 1, "", "InitialState"]], "compass.ocean.tests.isomip_plus.initial_state.InitialState": [[447, 1, 1, "", "__init__"], [448, 1, 1, "", "run"]], "compass.ocean.tests.isomip_plus.misomip": [[449, 0, 1, "", "Misomip"]], "compass.ocean.tests.isomip_plus.misomip.Misomip": [[449, 1, 1, "", "__init__"], [450, 1, 1, "", "run"]], "compass.ocean.tests.isomip_plus.ocean_test": [[451, 0, 1, "", "OceanTest"]], "compass.ocean.tests.isomip_plus.ocean_test.OceanTest": [[451, 1, 1, "", "__init__"], [452, 1, 1, "", "configure"], [453, 1, 1, "", "run"]], "compass.ocean.tests.isomip_plus.ssh_adjustment": [[454, 0, 1, "", "SshAdjustment"]], "compass.ocean.tests.isomip_plus.ssh_adjustment.SshAdjustment": [[454, 1, 1, "", "__init__"], [455, 1, 1, "", "run"], [456, 1, 1, "", "setup"]], "compass.ocean.tests.isomip_plus.streamfunction": [[457, 0, 1, "", "Streamfunction"]], "compass.ocean.tests.isomip_plus.streamfunction.Streamfunction": [[457, 1, 1, "", "__init__"], [458, 1, 1, "", "run"]], "compass.ocean.tests.isomip_plus.viz": [[459, 0, 1, "", "Viz"], [461, 2, 1, "", "file_complete"]], "compass.ocean.tests.isomip_plus.viz.Viz": [[459, 1, 1, "", "__init__"], [460, 1, 1, "", "run"]], "compass.ocean.tests.isomip_plus.viz.plot": [[462, 0, 1, "", "MoviePlotter"], [474, 0, 1, "", "TimeSeriesPlotter"]], "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter": [[462, 1, 1, "", "__init__"], [463, 1, 1, "", "images_to_movies"], [464, 1, 1, "", "plot_3d_field_top_bot_section"], [465, 1, 1, "", "plot_barotropic_streamfunction"], [466, 1, 1, "", "plot_horiz_series"], [467, 1, 1, "", "plot_ice_shelf_boundary_variables"], [468, 1, 1, "", "plot_layer_interfaces"], [469, 1, 1, "", "plot_melt_rates"], [470, 1, 1, "", "plot_overturning_streamfunction"], [471, 1, 1, "", "plot_potential_density"], [472, 1, 1, "", "plot_salinity"], [473, 1, 1, "", "plot_temperature"]], "compass.ocean.tests.isomip_plus.viz.plot.TimeSeriesPlotter": [[474, 1, 1, "", "__init__"], [475, 1, 1, "", "plot_melt_time_series"], [476, 1, 1, "", "plot_time_series"]], "compass.ocean.tests.planar_convergence": [[477, 0, 1, "", "PlanarConvergence"]], "compass.ocean.tests.planar_convergence.PlanarConvergence": [[477, 1, 1, "", "__init__"]], "compass.ocean.tests.planar_convergence.conv_init": [[478, 0, 1, "", "ConvInit"]], "compass.ocean.tests.planar_convergence.conv_init.ConvInit": [[478, 1, 1, "", "__init__"], [479, 1, 1, "", "run"]], "compass.ocean.tests.planar_convergence.conv_test_case": [[480, 0, 1, "", "ConvTestCase"]], "compass.ocean.tests.planar_convergence.conv_test_case.ConvTestCase": [[480, 1, 1, "", "__init__"], [481, 1, 1, "", "configure"], [482, 1, 1, "", "run"], [483, 1, 1, "", "update_cores"]], "compass.ocean.tests.planar_convergence.forward": [[484, 0, 1, "", "Forward"]], "compass.ocean.tests.planar_convergence.forward.Forward": [[484, 1, 1, "", "__init__"], [485, 1, 1, "", "get_dt_duration"], [486, 1, 1, "", "run"], [487, 1, 1, "", "setup"]], "compass.ocean.tests.planar_convergence.horizontal_advection": [[488, 0, 1, "", "HorizontalAdvection"]], "compass.ocean.tests.planar_convergence.horizontal_advection.HorizontalAdvection": [[488, 1, 1, "", "__init__"], [489, 1, 1, "", "configure"], [490, 1, 1, "", "run"]], "compass.ocean.tests.planar_convergence.horizontal_advection.analysis": [[491, 0, 1, "", "Analysis"]], "compass.ocean.tests.planar_convergence.horizontal_advection.analysis.Analysis": [[491, 1, 1, "", "__init__"], [492, 1, 1, "", "rmse"], [493, 1, 1, "", "run"]], "compass.ocean.tests.planar_convergence.horizontal_advection.init": [[494, 0, 1, "", "Init"]], "compass.ocean.tests.planar_convergence.horizontal_advection.init.Init": [[494, 1, 1, "", "__init__"], [495, 1, 1, "", "run"]], "compass.ocean.tests.soma": [[496, 0, 1, "", "Soma"]], "compass.ocean.tests.soma.Soma": [[496, 1, 1, "", "__init__"]], "compass.ocean.tests.soma.analysis": [[497, 0, 1, "", "Analysis"]], "compass.ocean.tests.soma.analysis.Analysis": [[497, 1, 1, "", "__init__"], [498, 1, 1, "", "run"]], "compass.ocean.tests.soma.forward": [[499, 0, 1, "", "Forward"]], "compass.ocean.tests.soma.forward.Forward": [[499, 1, 1, "", "__init__"], [500, 1, 1, "", "run"]], "compass.ocean.tests.soma.initial_state": [[501, 0, 1, "", "InitialState"]], "compass.ocean.tests.soma.initial_state.InitialState": [[501, 1, 1, "", "__init__"], [502, 1, 1, "", "run"]], "compass.ocean.tests.soma.soma_test_case": [[503, 0, 1, "", "SomaTestCase"]], "compass.ocean.tests.soma.soma_test_case.SomaTestCase": [[503, 1, 1, "", "__init__"], [504, 1, 1, "", "validate"]], "compass.ocean.tests.sphere_transport": [[505, 0, 1, "", "SphereTransport"]], "compass.ocean.tests.sphere_transport.SphereTransport": [[505, 1, 1, "", "__init__"]], "compass.ocean.tests.sphere_transport.correlated_tracers_2d": [[506, 0, 1, "", "CorrelatedTracers2D"]], "compass.ocean.tests.sphere_transport.correlated_tracers_2d.CorrelatedTracers2D": [[506, 1, 1, "", "__init__"], [507, 1, 1, "", "configure"], [508, 1, 1, "", "run"]], "compass.ocean.tests.sphere_transport.correlated_tracers_2d.analysis": [[509, 0, 1, "", "Analysis"]], "compass.ocean.tests.sphere_transport.correlated_tracers_2d.analysis.Analysis": [[509, 1, 1, "", "__init__"], [510, 1, 1, "", "run"]], "compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward": [[511, 0, 1, "", "Forward"]], "compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.Forward": [[511, 1, 1, "", "__init__"], [512, 1, 1, "", "get_timestep_str"], [513, 1, 1, "", "run"], [514, 1, 1, "", "setup"]], "compass.ocean.tests.sphere_transport.correlated_tracers_2d.init": [[515, 0, 1, "", "Init"]], "compass.ocean.tests.sphere_transport.correlated_tracers_2d.init.Init": [[515, 1, 1, "", "__init__"], [516, 1, 1, "", "run"]], "compass.ocean.tests.sphere_transport.correlated_tracers_2d.mesh": [[517, 0, 1, "", "Mesh"]], "compass.ocean.tests.sphere_transport.correlated_tracers_2d.mesh.Mesh": [[517, 1, 1, "", "__init__"], [518, 1, 1, "", "build_cell_width_lat_lon"], [519, 1, 1, "", "run"]], "compass.ocean.tests.sphere_transport.divergent_2d": [[520, 0, 1, "", "Divergent2D"]], "compass.ocean.tests.sphere_transport.divergent_2d.Divergent2D": [[520, 1, 1, "", "__init__"], [521, 1, 1, "", "configure"], [522, 1, 1, "", "run"]], "compass.ocean.tests.sphere_transport.divergent_2d.analysis": [[523, 0, 1, "", "Analysis"]], "compass.ocean.tests.sphere_transport.divergent_2d.analysis.Analysis": [[523, 1, 1, "", "__init__"], [524, 1, 1, "", "run"]], "compass.ocean.tests.sphere_transport.divergent_2d.forward": [[525, 0, 1, "", "Forward"]], "compass.ocean.tests.sphere_transport.divergent_2d.forward.Forward": [[525, 1, 1, "", "__init__"], [526, 1, 1, "", "get_timestep_str"], [527, 1, 1, "", "run"], [528, 1, 1, "", "setup"]], "compass.ocean.tests.sphere_transport.divergent_2d.init": [[529, 0, 1, "", "Init"]], "compass.ocean.tests.sphere_transport.divergent_2d.init.Init": [[529, 1, 1, "", "__init__"], [530, 1, 1, "", "run"]], "compass.ocean.tests.sphere_transport.divergent_2d.mesh": [[531, 0, 1, "", "Mesh"]], "compass.ocean.tests.sphere_transport.divergent_2d.mesh.Mesh": [[531, 1, 1, "", "__init__"], [532, 1, 1, "", "build_cell_width_lat_lon"], [533, 1, 1, "", "run"]], "compass.ocean.tests.sphere_transport.nondivergent_2d": [[534, 0, 1, "", "Nondivergent2D"]], "compass.ocean.tests.sphere_transport.nondivergent_2d.Nondivergent2D": [[534, 1, 1, "", "__init__"], [535, 1, 1, "", "configure"], [536, 1, 1, "", "run"]], "compass.ocean.tests.sphere_transport.nondivergent_2d.analysis": [[537, 0, 1, "", "Analysis"]], "compass.ocean.tests.sphere_transport.nondivergent_2d.analysis.Analysis": [[537, 1, 1, "", "__init__"], [538, 1, 1, "", "run"]], "compass.ocean.tests.sphere_transport.nondivergent_2d.forward": [[539, 0, 1, "", "Forward"]], "compass.ocean.tests.sphere_transport.nondivergent_2d.forward.Forward": [[539, 1, 1, "", "__init__"], [540, 1, 1, "", "get_timestep_str"], [541, 1, 1, "", "run"], [542, 1, 1, "", "setup"]], "compass.ocean.tests.sphere_transport.nondivergent_2d.init": [[543, 0, 1, "", "Init"]], "compass.ocean.tests.sphere_transport.nondivergent_2d.init.Init": [[543, 1, 1, "", "__init__"], [544, 1, 1, "", "run"]], "compass.ocean.tests.sphere_transport.nondivergent_2d.mesh": [[545, 0, 1, "", "Mesh"]], "compass.ocean.tests.sphere_transport.nondivergent_2d.mesh.Mesh": [[545, 1, 1, "", "__init__"], [546, 1, 1, "", "build_cell_width_lat_lon"], [547, 1, 1, "", "run"]], "compass.ocean.tests.sphere_transport.process_output": [[548, 2, 1, "", "compute_convergence_rates"], [549, 2, 1, "", "compute_error_from_output_ncfile"], [550, 2, 1, "", "make_convergence_arrays"], [551, 2, 1, "", "plot_convergence"], [552, 2, 1, "", "plot_filament"], [553, 2, 1, "", "plot_over_and_undershoot_errors"], [554, 2, 1, "", "plot_sol"], [555, 2, 1, "", "print_data_as_csv"], [556, 2, 1, "", "print_error_conv_table"], [557, 2, 1, "", "read_ncl_rgb_file"]], "compass.ocean.tests.sphere_transport.rotation_2d": [[558, 0, 1, "", "Rotation2D"]], "compass.ocean.tests.sphere_transport.rotation_2d.Rotation2D": [[558, 1, 1, "", "__init__"], [559, 1, 1, "", "configure"], [560, 1, 1, "", "run"]], "compass.ocean.tests.sphere_transport.rotation_2d.analysis": [[561, 0, 1, "", "Analysis"]], "compass.ocean.tests.sphere_transport.rotation_2d.analysis.Analysis": [[561, 1, 1, "", "__init__"], [562, 1, 1, "", "run"]], "compass.ocean.tests.sphere_transport.rotation_2d.forward": [[563, 0, 1, "", "Forward"]], "compass.ocean.tests.sphere_transport.rotation_2d.forward.Forward": [[563, 1, 1, "", "__init__"], [564, 1, 1, "", "get_timestep_str"], [565, 1, 1, "", "run"], [566, 1, 1, "", "setup"]], "compass.ocean.tests.sphere_transport.rotation_2d.init": [[567, 0, 1, "", "Init"]], "compass.ocean.tests.sphere_transport.rotation_2d.init.Init": [[567, 1, 1, "", "__init__"], [568, 1, 1, "", "run"]], "compass.ocean.tests.sphere_transport.rotation_2d.mesh": [[569, 0, 1, "", "Mesh"]], "compass.ocean.tests.sphere_transport.rotation_2d.mesh.Mesh": [[569, 1, 1, "", "__init__"], [570, 1, 1, "", "build_cell_width_lat_lon"], [571, 1, 1, "", "run"]], "compass.ocean.tests.ziso": [[572, 0, 1, "", "Ziso"], [573, 0, 1, "", "ZisoTestCase"], [576, 2, 1, "", "configure"]], "compass.ocean.tests.ziso.Ziso": [[572, 1, 1, "", "__init__"]], "compass.ocean.tests.ziso.ZisoTestCase": [[573, 1, 1, "", "__init__"], [574, 1, 1, "", "configure"], [575, 1, 1, "", "run"]], "compass.ocean.tests.ziso.forward": [[577, 0, 1, "", "Forward"]], "compass.ocean.tests.ziso.forward.Forward": [[577, 1, 1, "", "__init__"], [578, 1, 1, "", "run"], [579, 1, 1, "", "setup"]], "compass.ocean.tests.ziso.initial_state": [[580, 0, 1, "", "InitialState"]], "compass.ocean.tests.ziso.initial_state.InitialState": [[580, 1, 1, "", "__init__"], [581, 1, 1, "", "run"]], "compass.ocean.tests.ziso.with_frazil": [[582, 0, 1, "", "WithFrazil"]], "compass.ocean.tests.ziso.with_frazil.WithFrazil": [[582, 1, 1, "", "__init__"], [583, 1, 1, "", "configure"], [584, 1, 1, "", "run"]], "compass.ocean.vertical.grid_1d": [[585, 2, 1, "", "generate_1d_grid"], [586, 2, 1, "", "write_1d_grid"]], "compass.ocean.vertical": [[587, 2, 1, "", "init_vertical_coord"]], "compass.ocean.vertical.partial_cells": [[588, 2, 1, "", "alter_bottom_depth"], [589, 2, 1, "", "alter_ssh"]], "compass.ocean.vertical.zlevel": [[590, 2, 1, "", "compute_min_max_level_cell"], [591, 2, 1, "", "compute_z_level_layer_thickness"], [592, 2, 1, "", "compute_z_level_resting_thickness"], [593, 2, 1, "", "init_z_level_vertical_coord"]], "compass.ocean.vertical.zstar": [[594, 2, 1, "", "init_z_star_vertical_coord"]], "compass.parallel": [[63, 2, 1, "", "check_parallel_system"], [64, 2, 1, "", "get_available_cores_and_nodes"], [65, 2, 1, "", "run_command"], [66, 2, 1, "", "set_cores_per_node"]], "compass.provenance": [[67, 2, 1, "", "write"]], "compass.run.serial": [[68, 2, 1, "", "run_single_step"], [69, 2, 1, "", "run_tests"]], "compass.setup": [[70, 2, 1, "", "setup_case"], [71, 2, 1, "", "setup_cases"]], "compass.suite": [[72, 2, 1, "", "clean_suite"], [73, 2, 1, "", "setup_suite"]], "compass.validate": [[74, 2, 1, "", "compare_timers"], [75, 2, 1, "", "compare_variables"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:module"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "module", "Python module"]}, "titleterms": {"cach": [0, 4, 6, 8, 34, 611], "output": [0, 1, 611, 618], "from": [0, 611, 613, 642], "compass": [0, 1, 4, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 611, 612, 613, 616, 619, 663], "step": [0, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 227, 599, 611, 617, 618, 619, 650, 651, 653, 658, 660], "summari": [0, 1, 3], "requir": [0, 1, 3], "select": 0, "whether": 0, "us": 0, "updat": [0, 8, 611, 613, 619], "uniqu": 0, "identifi": 0, "either": 0, "normal": 0, "version": [0, 616, 666], "design": [0, 1, 2, 3], "implement": [0, 1, 3], "test": [0, 1, 3, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 216, 227, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 599, 603, 611, 612, 617, 618, 619, 620, 623, 632, 647, 651, 653, 655, 663, 664, 665], "python": 1, "packag": [1, 612], "make": [1, 8, 617, 618, 619], "case": [1, 227, 599, 611, 612, 617, 618, 619, 620, 651, 653, 663, 664], "easi": 1, "understand": 1, "modifi": 1, "creat": [1, 613, 618, 653], "share": [1, 612, 651, 653, 654, 657, 658, 659, 662], "code": [1, 612, 666], "configur": [1, 28, 125, 130, 238, 240, 243, 252, 255, 261, 265, 274, 287, 289, 290, 292, 295, 300, 316, 319, 328, 334, 343, 348, 353, 358, 361, 364, 382, 384, 390, 404, 409, 411, 419, 452, 481, 489, 507, 521, 535, 559, 574, 576, 583, 599, 611, 614], "option": [1, 3, 8, 611, 613, 618, 619, 624, 625, 626, 627, 628, 629, 630, 631, 633, 634, 636, 637, 638, 639, 640, 641, 642, 648, 649, 650, 651, 652, 653, 654, 656, 657, 658, 659, 660, 661, 662], "abil": 1, "specifi": 1, "core": [1, 4, 207, 595, 611, 612, 622, 646, 650, 658, 660], "count": 1, "machin": [1, 226, 613, 642, 663], "specif": 1, "data": [1, 641], "looser": 1, "more": 1, "flexibl": 1, "directori": [1, 611], "structur": [1, 611], "user": [1, 613, 616, 620, 663], "develop": [1, 613, 616, 617, 618, 619], "friendli": 1, "document": [1, 2, 5, 7, 617, 618, 619, 666], "consider": 1, "relat": 1, "run": [1, 4, 6, 8, 19, 29, 48, 53, 56, 68, 69, 83, 86, 88, 90, 92, 96, 98, 100, 103, 105, 107, 111, 113, 115, 118, 120, 122, 126, 128, 131, 133, 136, 139, 142, 144, 147, 149, 151, 154, 159, 161, 165, 168, 170, 172, 175, 177, 179, 181, 185, 187, 190, 192, 195, 198, 201, 203, 205, 241, 244, 246, 249, 253, 256, 258, 262, 267, 269, 271, 275, 278, 281, 284, 288, 293, 296, 298, 301, 303, 305, 307, 309, 311, 313, 317, 320, 322, 325, 329, 335, 338, 344, 349, 354, 359, 362, 365, 370, 372, 374, 380, 385, 387, 391, 394, 396, 401, 405, 412, 414, 417, 420, 422, 425, 430, 432, 435, 439, 443, 448, 450, 453, 455, 458, 460, 479, 482, 486, 490, 493, 495, 498, 500, 502, 508, 510, 513, 516, 519, 522, 524, 527, 530, 533, 536, 538, 541, 544, 547, 560, 562, 565, 568, 571, 575, 578, 581, 584, 611, 613, 618, 619, 657, 663], "parallel": [1, 4, 63, 64, 65, 66], "resolut": [1, 618, 619, 650, 658, 660, 661], "can": 1, "paramet": [1, 617, 618, 619], "i": 1, "alter": 1, "rerun": 1, "support": [1, 226, 613, 642, 663], "pre": 1, "made": 1, "initi": [1, 618, 653], "condit": [1, 618], "file": [1, 8, 228, 611, 618, 620, 653], "batch": 1, "submiss": 1, "algorithm": [1, 3], "constructor": [1, 611], "setup": [1, 4, 6, 8, 22, 49, 54, 58, 70, 71, 101, 116, 137, 152, 173, 196, 206, 247, 250, 259, 282, 314, 323, 326, 339, 381, 388, 397, 415, 423, 444, 456, 487, 514, 528, 542, 566, 579, 611], "global": 1, "ocean": [1, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 646], "group": [1, 76, 216, 227, 603, 611, 612, 617, 618, 619, 632, 655], "framework": [1, 4, 8, 77, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 227, 228, 596, 597, 599, 602, 604, 605, 607, 610, 612, 621, 644], "within": [1, 612], "an": [1, 611, 612, 617, 618], "mpa": [1, 4, 8, 611, 612, 613, 663], "max_memori": 1, "max_disk": 1, "input": [1, 611], "templat": [3, 611], "name": 3, "topic": 3, "here": 3, "same": 3, "valid": [3, 4, 8, 30, 74, 75, 81, 157, 163, 368, 428, 437, 504, 611, 619], "api": 4, "refer": 4, "command": [4, 6], "line": [4, 6], "interfac": [4, 6], "list": [4, 6, 8, 39, 40, 41], "clean": [4, 6, 8, 35], "suit": [4, 6, 8, 72, 73, 611, 623, 647, 663, 665], "base": [4, 618], "class": [4, 599, 612], "mpas_cor": [4, 62], "testgroup": [4, 31, 32], "testcas": [4, 26, 27, 28, 29, 30, 611], "config": [4, 8, 36, 618, 619, 620, 624, 625, 626, 627, 628, 629, 630, 631, 633, 634, 636, 637, 638, 639, 640, 641, 642, 648, 649, 650, 651, 652, 653, 654, 656, 657, 658, 659, 660, 661, 662], "io": [4, 8, 37, 38], "log": [4, 8, 42], "mesh": [4, 8, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 145, 146, 147, 158, 159, 184, 185, 189, 190, 213, 214, 217, 218, 220, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 403, 404, 405, 406, 407, 517, 518, 519, 531, 532, 533, 545, 546, 547, 569, 570, 571, 598, 599, 601, 608, 609, 617, 618, 651, 653], "model": [4, 8, 59, 60, 61, 611], "proven": [4, 8, 67], "build": [5, 613, 663], "docstr": 7, "modul": [8, 612, 613], "serial": [8, 68, 69], "comment": 8, "symlink": [8, 38, 611], "download": [8, 37, 611], "spheric": [8, 55, 56, 57, 58], "partit": [8, 60], "pio": 8, "namelist": [8, 228, 611, 618, 619], "graph": 8, "variabl": 8, "norm": 8, "timer": 8, "mpascor": [9, 10], "add_test_group": 10, "add_input_fil": 12, "add_model_as_input": 13, "add_namelist_fil": 14, "add_namelist_opt": 15, "add_output_fil": 16, "add_streams_fil": 17, "constrain_resourc": [18, 611], "runtime_setup": [20, 611], "set_resourc": 21, "update_namelist_at_runtim": 23, "update_namelist_pio": 24, "update_streams_at_runtim": 25, "add_step": 27, "add_test_cas": 32, "__main__": 33, "main": 33, "update_cach": 34, "clean_cas": 35, "compassconfigpars": 36, "list_cas": 39, "list_machin": 40, "list_suit": 41, "log_method_cal": 42, "icosahedralmeshstep": [43, 44, 45, 46, 47, 48, 49], "build_subdivisions_cell_width_lat_lon": 44, "get_cell_width": 45, "get_subdivis": 46, "make_jigsaw_mesh": [47, 52], "quasiuniformsphericalmeshstep": [50, 51, 52, 53, 54], "build_cell_width_lat_lon": [51, 332, 337, 341, 346, 351, 407, 518, 532, 546, 570], "sphericalbasestep": [55, 56, 57, 58], "save_and_plot_cell_width": 57, "make_graph_fil": 59, "run_model": [61, 82, 83, 87, 88, 99, 100, 101, 135, 136, 137, 150, 151, 152, 164, 165, 171, 172, 173, 194, 195, 196, 204, 205, 206, 212, 213, 214, 215, 219, 220], "get_mpas_cor": 62, "check_parallel_system": 63, "get_available_cores_and_nod": 64, "run_command": 65, "set_cores_per_nod": 66, "write": [67, 234], "run_single_step": 68, "run_test": 69, "setup_cas": [70, 71], "clean_suit": 72, "setup_suit": 73, "compare_tim": 74, "compare_vari": 75, "landic": [76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 622], "calving_dt_converg": [76, 79, 80, 81, 82, 83, 208, 623, 624], "circular_shelf": [76, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 209, 625], "dome": [76, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 210, 626], "enthalpy_benchmark": [76, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 212, 628], "eismint2": [76, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 211, 627], "greenland": [76, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 213, 629], "humboldt": [76, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 214, 630], "hydro_radi": [76, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 215, 631], "kangerlussuaq": [76, 183, 184, 185, 186, 187, 217, 633], "koge_bugt_": [76, 188, 189, 190, 191, 192, 218, 634], "mismipplu": [76, 193, 194, 195, 196, 197, 198, 219, 635], "thwait": [76, 199, 200, 201, 202, 203, 204, 205, 206, 220, 636], "land": 77, "ic": [77, 228, 643, 651], "calvingdtconverg": 79, "dt_convergence_test": [80, 81, 624], "dtconvergencetest": [80, 81, 208], "runmodel": [82, 83, 87, 88, 99, 100, 101, 135, 136, 137, 150, 151, 152, 164, 165, 171, 172, 173, 194, 195, 196, 204, 205, 206, 208, 209, 210], "circularshelf": 84, "decomposition_test": [85, 86, 95, 96, 110, 111, 141, 142, 156, 157, 167, 168, 200, 201, 211, 213, 214, 215, 220, 625, 626, 627, 629, 630, 631, 636], "decompositiontest": [85, 86, 95, 96, 110, 111, 141, 142, 156, 157, 167, 168, 200, 201, 209, 210], "setup_mesh": [89, 90, 102, 103, 117, 118, 138, 139, 174, 175, 211, 212, 215], "setupmesh": [89, 90, 102, 103, 117, 118, 138, 139, 174, 175, 209, 210], "visual": [91, 92, 93, 106, 107, 108, 121, 122, 123, 127, 128, 132, 133, 180, 181, 182, 209, 210, 211, 215], "visualize_circular_shelf": 93, "restart_test": [97, 98, 112, 113, 148, 149, 162, 163, 169, 170, 202, 203, 211, 213, 214, 215, 220, 251, 252, 253, 360, 361, 362, 418, 419, 420, 596, 599, 602, 626, 627, 629, 630, 631, 636, 648, 651, 654], "restarttest": [97, 98, 112, 113, 148, 149, 162, 163, 169, 170, 202, 203, 210, 251, 252, 253, 360, 361, 362, 418, 419, 420], "smoke_test": [104, 105, 153, 154, 197, 198, 213, 219, 626, 629, 635], "smoketest": [104, 105, 153, 154, 197, 198, 210], "visualize_dom": 108, "run_experi": [114, 115, 116, 211], "runexperi": [114, 115, 116], "standard_experi": [119, 120, 121, 122, 123, 211, 627], "standardexperi": [119, 120], "visualize_eismint2": 123, "A": [124, 125, 126, 127, 128, 212, 620, 628], "b": [129, 130, 131, 132, 133, 212, 628], "enthalpybenchmark": 134, "high_res_mesh": [143, 144, 213, 220, 629, 636], "highresmesh": [143, 144], "build_cell_width": 146, "mesh_gen": [160, 161, 186, 187, 191, 192, 214, 217, 218, 630, 633, 634], "meshgen": [160, 161, 186, 187, 191, 192], "hydroradi": 166, "spinup_test": [176, 177, 215, 631], "spinuptest": [176, 177], "steady_state_drift_test": [178, 179, 215, 631], "steadystatedrifttest": [178, 179], "visualize_hydro_radi": 182, "kogebugt": 188, "enthalpy_decomposition_test": [211, 627], "enthalpy_restart_test": [211, 627], "anvil": [221, 637], "intel": [221, 222, 223, 224, 225, 637, 638, 639, 640, 641], "gnu": [221, 222, 223, 225, 637, 638, 639, 641], "badger": [222, 638], "chrysali": [223, 639], "compymcnodefac": [224, 640], "cori": [225, 641], "haswel": [225, 641], "other": [226, 618, 619, 642, 663], "baroclinic_channel": [227, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 596, 648], "drying_slop": [227, 263, 264, 265, 266, 267, 268, 269, 270, 271, 597, 649], "global_converg": [227, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 598, 650], "cosine_bel": [227, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 598, 617, 650], "global_ocean": [227, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 599, 651], "gotm": [227, 366, 367, 368, 369, 370, 371, 372, 373, 374, 600, 652], "default": [227, 242, 243, 244, 264, 265, 367, 368, 369, 370, 371, 372, 373, 374, 410, 411, 412, 427, 428, 596, 597, 600, 602, 604, 618, 648, 649, 652, 654, 656, 659, 662], "hurrican": [227, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 601, 653], "ice_shelf_2d": [227, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 602, 654], "internal_wav": [227, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 604, 656], "isomip_plu": [227, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 605, 657], "planar_converg": [227, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 606, 658], "horizontal_advect": [227, 488, 489, 490, 491, 492, 493, 494, 495, 606, 658], "soma": [227, 496, 497, 498, 499, 500, 501, 502, 503, 504, 607, 659], "sphere_transport": [227, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 608, 660], "correlated_tracers_2d": [227, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 608, 660], "divergent_2d": [227, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 608, 660], "nondivergent_2d": [227, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 608, 660], "rotation_2d": [227, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 608, 660], "ziso": [227, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 610, 662], "replac": 228, "stream": [228, 611, 618, 619], "vertic": [228, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 618, 645], "coordin": [228, 618, 645], "hanei": [228, 230], "number": [228, 617], "shelf": [228, 643, 651], "caviti": [228, 643, 651], "particl": [228, 233, 234, 659, 662], "plot": [228, 235, 236, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476], "compute_haney_numb": 230, "iceshelf": [231, 232], "adjust_ssh": 231, "compute_land_ice_pressure_and_draft": 232, "remap_particl": 233, "plot_initial_st": 235, "plot_vertical_grid": 236, "baroclinicchannel": 237, "decomp_test": [239, 240, 241, 294, 295, 296, 596, 599, 648, 651], "decomptest": [239, 240, 241, 294, 295, 296], "forward": [245, 246, 247, 266, 267, 279, 280, 281, 282, 312, 313, 314, 315, 316, 317, 371, 372, 383, 384, 385, 386, 387, 388, 413, 414, 415, 429, 430, 442, 443, 444, 484, 485, 486, 487, 499, 500, 511, 512, 513, 514, 525, 526, 527, 528, 539, 540, 541, 542, 563, 564, 565, 566, 577, 578, 579, 596, 597, 598, 599, 600, 601, 602, 604, 605, 606, 607, 608, 610, 617, 618, 619, 651, 653], "initial_st": [248, 249, 250, 268, 269, 321, 322, 323, 395, 396, 397, 416, 417, 431, 432, 447, 448, 501, 502, 580, 581, 596, 597, 601, 602, 604, 605, 607, 610, 618], "initialst": [248, 249, 250, 268, 269, 321, 322, 323, 395, 396, 397, 416, 417, 431, 432, 447, 448, 501, 502, 580, 581], "rpe_test": [254, 255, 256, 257, 258, 259, 433, 434, 435, 596, 604, 618, 648, 656], "rpetest": [254, 255, 256, 433], "analysi": [257, 258, 259, 276, 277, 278, 369, 370, 376, 377, 378, 379, 380, 381, 434, 435, 491, 492, 493, 497, 498, 509, 510, 523, 524, 537, 538, 561, 562, 598, 600, 601, 606, 607, 608, 609, 617, 618, 619, 653], "threads_test": [260, 261, 262, 363, 364, 365, 596, 599, 651], "threadstest": [260, 261, 262, 363, 364, 365], "dryingslop": 263, "viz": [270, 271, 424, 425, 438, 439, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 597, 602, 605], "globalconverg": 272, "cosinebel": [273, 274, 275], "rmse": [277, 492], "get_dt": 280, "init": [283, 284, 318, 319, 320, 321, 322, 323, 324, 325, 326, 373, 374, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 494, 495, 515, 516, 529, 530, 543, 544, 567, 568, 598, 599, 600, 606, 608, 609, 617, 619, 651, 653], "globalocean": 285, "analysis_test": [286, 287, 288, 599, 651], "analysistest": [286, 287, 288], "configure_global_ocean": 290, "daily_output_test": [291, 292, 293, 599, 651], "dailyoutputtest": [291, 292, 293], "dynamic_adjust": [297, 298, 333, 334, 335, 342, 343, 344, 347, 348, 349, 352, 353, 354, 599, 651], "dynamicadjust": [297, 298], "files_for_e3sm": [299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 599, 651], "filesfore3sm": [299, 300, 301], "diagnostics_fil": [302, 303], "diagnosticsfil": [302, 303], "ocean_graph_partit": [304, 305], "oceangraphpartit": [304, 305], "ocean_initial_condit": [306, 307], "oceaninitialcondit": [306, 307], "scrip": [308, 309], "seaice_initial_condit": [310, 311], "seaiceinitialcondit": [310, 311], "forwardstep": [312, 313, 314, 386, 387, 388], "forwardtestcas": [315, 316, 317], "ssh_adjust": [324, 325, 326, 421, 422, 423, 454, 455, 456, 602, 605], "sshadjust": [324, 325, 326, 421, 422, 423, 454, 455, 456], "cull": 330, "cull_mesh": 330, "ec30to60": [331, 332, 333, 334, 335, 599, 647, 651], "ec30to60mesh": [331, 332], "ec30to60dynamicadjust": [333, 334, 335], "meshstep": [336, 337, 338, 339], "qu240": [340, 341, 342, 343, 344, 599, 651], "qu240mesh": [340, 341], "qu240dynamicadjust": [342, 343, 344], "so12to60": [345, 346, 347, 348, 349], "so12to60mesh": [345, 346], "so12to60dynamicadjust": [347, 348, 349], "wc14": [350, 351, 352, 353, 354, 599, 651], "wc14mesh": [350, 351], "wc14dynamicadjust": [352, 353, 354], "metadata": [355, 356, 599, 651], "add_mesh_and_init_metadata": 355, "get_e3sm_mesh_nam": 356, "performance_test": [357, 358, 359, 599, 651], "performancetest": [357, 358, 359], "read_pointstat": 377, "read_station_data": 378, "read_station_fil": 379, "create_pointstats_fil": [392, 393, 394, 601], "createpointstatsfil": [392, 393, 394], "interpolate_atm_forc": [398, 399, 400, 401, 402, 601], "interpolateatmforc": [398, 399, 400, 401, 402], "interpolate_data_to_grid": 399, "plot_interp_data": 400, "write_to_fil": 402, "dequ120at30cr10rr2": [406, 407], "dequ120at30cr10rr2mesh": [406, 407], "iceshelf2d": 408, "internalwav": 426, "ten_day_test": [436, 437, 604, 656], "tendaytest": [436, 437], "isomipplu": 440, "evap": [441, 605], "update_evaporation_flux": 441, "geom": [445, 446, 605], "interpolate_ocean_mask": 445, "process_input_geometri": 446, "misomip": [449, 450, 605], "ocean_test": [451, 452, 453, 605], "oceantest": [451, 452, 453], "streamfunct": [457, 458, 605], "file_complet": 461, "movieplott": [462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473], "images_to_movi": 463, "plot_3d_field_top_bot_sect": 464, "plot_barotropic_streamfunct": 465, "plot_horiz_seri": 466, "plot_ice_shelf_boundary_vari": 467, "plot_layer_interfac": 468, "plot_melt_r": 469, "plot_overturning_streamfunct": 470, "plot_potential_dens": 471, "plot_salin": 472, "plot_temperatur": 473, "timeseriesplott": [474, 475, 476], "plot_melt_time_seri": 475, "plot_time_seri": 476, "planarconverg": 477, "conv_init": [478, 479], "convinit": [478, 479], "conv_test_cas": [480, 481, 482, 483], "convtestcas": [480, 481, 482, 483], "update_cor": 483, "get_dt_dur": 485, "horizontaladvect": [488, 489, 490], "soma_test_cas": [503, 504, 607], "somatestcas": [503, 504], "spheretransport": 505, "correlatedtracers2d": [506, 507, 508], "get_timestep_str": [512, 526, 540, 564], "divergent2d": [520, 521, 522], "nondivergent2d": [534, 535, 536], "process_output": [548, 549, 550, 551, 552, 553, 554, 555, 556, 557], "compute_convergence_r": 548, "compute_error_from_output_ncfil": 549, "make_convergence_arrai": 550, "plot_converg": 551, "plot_fila": 552, "plot_over_and_undershoot_error": 553, "plot_sol": 554, "print_data_as_csv": 555, "print_error_conv_t": 556, "read_ncl_rgb_fil": 557, "rotation2d": [558, 559, 560], "zisotestcas": [573, 574, 575], "with_frazil": [582, 583, 584, 610, 662], "withfrazil": [582, 583, 584], "grid_1d": [585, 586], "generate_1d_grid": 585, "write_1d_grid": 586, "init_vertical_coord": 587, "partial_cel": [588, 589], "alter_bottom_depth": 588, "alter_ssh": 589, "zlevel": [590, 591, 592, 593], "compute_min_max_level_cel": 590, "compute_z_level_layer_thick": 591, "compute_z_level_resting_thick": 592, "init_z_level_vertical_coord": 593, "zstar": 594, "init_z_star_vertical_coord": 594, "type": [598, 645], "quwisc240": [599, 647, 651], "ecwisc30to60": [599, 647, 651], "sowisc12to60": [599, 651], "child": 599, "spherical_harmonic_transform": [609, 661], "qu_converg": [609, 661], "ziso_test_cas": 610, "organ": 611, "attribut": 611, "copi": 611, "ad": [611, 617, 618, 619], "runtim": 611, "overview": 612, "style": 612, "In": 612, "quick": [613, 663], "start": [613, 617, 618, 619, 663], "unix": 613, "shell": 613, "set": [613, 617, 618, 619, 663], "up": [613, 618, 619, 663], "repositori": 613, "beginn": 613, "conda": [613, 614, 642, 663], "environ": [613, 614, 663], "compil": 613, "system": 613, "albani": 613, "petsc": 613, "netlib": 613, "lapack": 613, "unknown": 613, "what": 613, "script": [613, 663], "doe": 613, "flag": 613, "activ": 613, "troubleshoot": [613, 614], "onli": 613, "compon": [613, 663], "repo": 613, "worktre": 613, "advanc": 613, "solver": 614, "error": 614, "when": 614, "proxi": 614, "lanl": 614, "mac": 614, "gethostbynam": 614, "fail": 614, "glossari": [615, 616], "": 616, "guid": 616, "tutori": [616, 617, 618, 619], "legaci": [616, 619], "studi": 617, "get": [617, 618, 619], "new": [617, 618, 619], "task": 617, "cpu": 617, "per": 617, "vari": [618, 619], "horizont": 618, "defin": [618, 619], "method": [618, 619], "port": 619, "The": 619, "sia_integr": 623, "fo_integr": 623, "full_integr": 623, "humboldt_calving_test": 623, "humboldt_calving_tests_fo": 623, "jupyt": 641, "notebook": 641, "remot": 641, "slurm": 642, "job": [642, 663], "queue": 642, "mpich": 642, "openmpi": 642, "No": 642, "mpi": 642, "forg": 642, "sea": 643, "surfac": 643, "height": 643, "adjust": 643, "1d": 645, "grid": 645, "uniform": 645, "tanh_dz": 645, "60layerphc": 645, "100layere3smv1": 645, "3d": 645, "z": 645, "star": 645, "level": 645, "nightli": 647, "qu240_for_e3sm": 647, "quwisc240_for_e3sm": 647, "thread_test": 648, "time": [650, 658, 660], "biogeochemsitri": 651, "make_diagnostic_fil": 651, "state": 653, "interpol": 653, "atmospher": 653, "forc": 653, "pointstat": 653, "sandi": 653, "ocean0": 657, "ocean1": 657, "ocean2": 657, "time_varying_ocean0": 657, "perform": 657, "simul": 657, "long": [659, 662], "surface_restor": 659, "three_lay": 659, "converg": 660, "threshold": 660, "parallel_n": 661, "serial_nlat": 661, "e3sm": 663}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 56}})