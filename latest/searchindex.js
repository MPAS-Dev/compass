Search.setIndex({"docnames": ["design_docs/cached_outputs", "design_docs/compass_package", "design_docs/index", "design_docs/template", "developers_guide/api", "developers_guide/building_docs", "developers_guide/command_line", "developers_guide/docs", "developers_guide/framework", "developers_guide/generated/compass.MpasCore", "developers_guide/generated/compass.MpasCore.add_test_group", "developers_guide/generated/compass.Step", "developers_guide/generated/compass.Step.add_input_file", "developers_guide/generated/compass.Step.add_model_as_input", "developers_guide/generated/compass.Step.add_namelist_file", "developers_guide/generated/compass.Step.add_namelist_options", "developers_guide/generated/compass.Step.add_output_file", "developers_guide/generated/compass.Step.add_streams_file", "developers_guide/generated/compass.Step.run", "developers_guide/generated/compass.Step.setup", "developers_guide/generated/compass.Step.update_namelist_at_runtime", "developers_guide/generated/compass.Step.update_namelist_pio", "developers_guide/generated/compass.Step.update_streams_at_runtime", "developers_guide/generated/compass.TestCase", "developers_guide/generated/compass.TestCase.add_step", "developers_guide/generated/compass.TestCase.configure", "developers_guide/generated/compass.TestCase.run", "developers_guide/generated/compass.TestCase.validate", "developers_guide/generated/compass.TestGroup", "developers_guide/generated/compass.TestGroup.add_test_case", "developers_guide/generated/compass.__main__.main", "developers_guide/generated/compass.cache.update_cache", "developers_guide/generated/compass.clean.clean_cases", "developers_guide/generated/compass.config.CompassConfigParser", "developers_guide/generated/compass.io.download", "developers_guide/generated/compass.io.symlink", "developers_guide/generated/compass.list.list_cases", "developers_guide/generated/compass.list.list_machines", "developers_guide/generated/compass.list.list_suites", "developers_guide/generated/compass.logging.log_method_call", "developers_guide/generated/compass.mesh.IcosahedralMeshStep", "developers_guide/generated/compass.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon", "developers_guide/generated/compass.mesh.IcosahedralMeshStep.get_cell_width", "developers_guide/generated/compass.mesh.IcosahedralMeshStep.get_subdivisions", "developers_guide/generated/compass.mesh.IcosahedralMeshStep.make_jigsaw_mesh", "developers_guide/generated/compass.mesh.IcosahedralMeshStep.run", "developers_guide/generated/compass.mesh.IcosahedralMeshStep.setup", "developers_guide/generated/compass.mesh.QuasiUniformSphericalMeshStep", "developers_guide/generated/compass.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon", "developers_guide/generated/compass.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh", "developers_guide/generated/compass.mesh.QuasiUniformSphericalMeshStep.run", "developers_guide/generated/compass.mesh.QuasiUniformSphericalMeshStep.setup", "developers_guide/generated/compass.mesh.spherical.SphericalBaseStep", "developers_guide/generated/compass.mesh.spherical.SphericalBaseStep.run", "developers_guide/generated/compass.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width", "developers_guide/generated/compass.mesh.spherical.SphericalBaseStep.setup", "developers_guide/generated/compass.model.make_graph_file", "developers_guide/generated/compass.model.partition", "developers_guide/generated/compass.model.run_model", "developers_guide/generated/compass.mpas_cores.get_mpas_cores", "developers_guide/generated/compass.parallel.get_available_cores_and_nodes", "developers_guide/generated/compass.provenance.write", "developers_guide/generated/compass.run.serial.run_step", "developers_guide/generated/compass.run.serial.run_tests", "developers_guide/generated/compass.setup.setup_case", "developers_guide/generated/compass.setup.setup_cases", "developers_guide/generated/compass.suite.clean_suite", "developers_guide/generated/compass.suite.setup_suite", "developers_guide/generated/compass.validate.compare_timers", "developers_guide/generated/compass.validate.compare_variables", "developers_guide/landice/api", "developers_guide/landice/framework", "developers_guide/landice/generated/compass.landice.Landice", "developers_guide/landice/generated/compass.landice.tests.calving_dt_convergence.CalvingDtConvergence", "developers_guide/landice/generated/compass.landice.tests.calving_dt_convergence.dt_convergence_test.DtConvergenceTest", "developers_guide/landice/generated/compass.landice.tests.calving_dt_convergence.dt_convergence_test.DtConvergenceTest.validate", "developers_guide/landice/generated/compass.landice.tests.calving_dt_convergence.run_model.RunModel", "developers_guide/landice/generated/compass.landice.tests.calving_dt_convergence.run_model.RunModel.run", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.CircularShelf", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.decomposition_test.DecompositionTest", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.decomposition_test.DecompositionTest.run", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.run_model.RunModel", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.run_model.RunModel.run", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.setup_mesh.SetupMesh", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.setup_mesh.SetupMesh.run", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.visualize.Visualize", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.visualize.Visualize.run", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.visualize.visualize_circular_shelf", "developers_guide/landice/generated/compass.landice.tests.dome.Dome", "developers_guide/landice/generated/compass.landice.tests.dome.decomposition_test.DecompositionTest", "developers_guide/landice/generated/compass.landice.tests.dome.decomposition_test.DecompositionTest.run", "developers_guide/landice/generated/compass.landice.tests.dome.restart_test.RestartTest", "developers_guide/landice/generated/compass.landice.tests.dome.restart_test.RestartTest.run", "developers_guide/landice/generated/compass.landice.tests.dome.run_model.RunModel", "developers_guide/landice/generated/compass.landice.tests.dome.run_model.RunModel.run", "developers_guide/landice/generated/compass.landice.tests.dome.run_model.RunModel.setup", "developers_guide/landice/generated/compass.landice.tests.dome.setup_mesh.SetupMesh", "developers_guide/landice/generated/compass.landice.tests.dome.setup_mesh.SetupMesh.run", "developers_guide/landice/generated/compass.landice.tests.dome.smoke_test.SmokeTest", "developers_guide/landice/generated/compass.landice.tests.dome.smoke_test.SmokeTest.run", "developers_guide/landice/generated/compass.landice.tests.dome.visualize.Visualize", "developers_guide/landice/generated/compass.landice.tests.dome.visualize.Visualize.run", "developers_guide/landice/generated/compass.landice.tests.dome.visualize.visualize_dome", "developers_guide/landice/generated/compass.landice.tests.eismint2.Eismint2", "developers_guide/landice/generated/compass.landice.tests.eismint2.decomposition_test.DecompositionTest", "developers_guide/landice/generated/compass.landice.tests.eismint2.decomposition_test.DecompositionTest.run", "developers_guide/landice/generated/compass.landice.tests.eismint2.restart_test.RestartTest", "developers_guide/landice/generated/compass.landice.tests.eismint2.restart_test.RestartTest.run", "developers_guide/landice/generated/compass.landice.tests.eismint2.run_experiment.RunExperiment", "developers_guide/landice/generated/compass.landice.tests.eismint2.run_experiment.RunExperiment.run", "developers_guide/landice/generated/compass.landice.tests.eismint2.run_experiment.RunExperiment.setup", "developers_guide/landice/generated/compass.landice.tests.eismint2.setup_mesh.SetupMesh", "developers_guide/landice/generated/compass.landice.tests.eismint2.setup_mesh.SetupMesh.run", "developers_guide/landice/generated/compass.landice.tests.eismint2.standard_experiments.StandardExperiments", "developers_guide/landice/generated/compass.landice.tests.eismint2.standard_experiments.StandardExperiments.run", "developers_guide/landice/generated/compass.landice.tests.eismint2.standard_experiments.visualize.Visualize", "developers_guide/landice/generated/compass.landice.tests.eismint2.standard_experiments.visualize.Visualize.run", "developers_guide/landice/generated/compass.landice.tests.eismint2.standard_experiments.visualize.visualize_eismint2", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.A.A", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.A.A.configure", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.A.A.run", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.A.visualize.Visualize", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.A.visualize.Visualize.run", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.B.B", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.B.B.configure", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.B.B.run", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.B.visualize.Visualize", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.B.visualize.Visualize.run", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.EnthalpyBenchmark", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.run_model.RunModel", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.run_model.RunModel.run", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.run_model.RunModel.setup", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.setup_mesh.SetupMesh", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.setup_mesh.SetupMesh.run", "developers_guide/landice/generated/compass.landice.tests.greenland.Greenland", "developers_guide/landice/generated/compass.landice.tests.greenland.decomposition_test.DecompositionTest", "developers_guide/landice/generated/compass.landice.tests.greenland.decomposition_test.DecompositionTest.run", "developers_guide/landice/generated/compass.landice.tests.greenland.high_res_mesh.HighResMesh", "developers_guide/landice/generated/compass.landice.tests.greenland.high_res_mesh.HighResMesh.run", "developers_guide/landice/generated/compass.landice.tests.greenland.mesh.Mesh", "developers_guide/landice/generated/compass.landice.tests.greenland.mesh.Mesh.build_cell_width", "developers_guide/landice/generated/compass.landice.tests.greenland.mesh.Mesh.run", "developers_guide/landice/generated/compass.landice.tests.greenland.restart_test.RestartTest", "developers_guide/landice/generated/compass.landice.tests.greenland.restart_test.RestartTest.run", "developers_guide/landice/generated/compass.landice.tests.greenland.run_model.RunModel", "developers_guide/landice/generated/compass.landice.tests.greenland.run_model.RunModel.run", "developers_guide/landice/generated/compass.landice.tests.greenland.run_model.RunModel.setup", "developers_guide/landice/generated/compass.landice.tests.greenland.smoke_test.SmokeTest", "developers_guide/landice/generated/compass.landice.tests.greenland.smoke_test.SmokeTest.run", "developers_guide/landice/generated/compass.landice.tests.humboldt.Humboldt", "developers_guide/landice/generated/compass.landice.tests.humboldt.decomposition_test.DecompositionTest", "developers_guide/landice/generated/compass.landice.tests.humboldt.decomposition_test.DecompositionTest.validate", "developers_guide/landice/generated/compass.landice.tests.humboldt.mesh.Mesh", "developers_guide/landice/generated/compass.landice.tests.humboldt.mesh.Mesh.run", "developers_guide/landice/generated/compass.landice.tests.humboldt.mesh_gen.MeshGen", "developers_guide/landice/generated/compass.landice.tests.humboldt.mesh_gen.MeshGen.run", "developers_guide/landice/generated/compass.landice.tests.humboldt.restart_test.RestartTest", "developers_guide/landice/generated/compass.landice.tests.humboldt.restart_test.RestartTest.validate", "developers_guide/landice/generated/compass.landice.tests.humboldt.run_model.RunModel", "developers_guide/landice/generated/compass.landice.tests.humboldt.run_model.RunModel.run", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.HydroRadial", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.decomposition_test.DecompositionTest", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.decomposition_test.DecompositionTest.run", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.restart_test.RestartTest", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.restart_test.RestartTest.run", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.run_model.RunModel", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.run_model.RunModel.run", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.run_model.RunModel.setup", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.setup_mesh.SetupMesh", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.setup_mesh.SetupMesh.run", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.spinup_test.SpinupTest", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.spinup_test.SpinupTest.run", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.steady_state_drift_test.SteadyStateDriftTest", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.steady_state_drift_test.SteadyStateDriftTest.run", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.visualize.Visualize", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.visualize.Visualize.run", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.visualize.visualize_hydro_radial", "developers_guide/landice/generated/compass.landice.tests.kangerlussuaq.Kangerlussuaq", "developers_guide/landice/generated/compass.landice.tests.kangerlussuaq.mesh.Mesh", "developers_guide/landice/generated/compass.landice.tests.kangerlussuaq.mesh.Mesh.run", "developers_guide/landice/generated/compass.landice.tests.kangerlussuaq.mesh_gen.MeshGen", "developers_guide/landice/generated/compass.landice.tests.kangerlussuaq.mesh_gen.MeshGen.run", "developers_guide/landice/generated/compass.landice.tests.koge_bugt_s.KogeBugtS", "developers_guide/landice/generated/compass.landice.tests.koge_bugt_s.mesh.Mesh", "developers_guide/landice/generated/compass.landice.tests.koge_bugt_s.mesh.Mesh.run", "developers_guide/landice/generated/compass.landice.tests.koge_bugt_s.mesh_gen.MeshGen", "developers_guide/landice/generated/compass.landice.tests.koge_bugt_s.mesh_gen.MeshGen.run", "developers_guide/landice/generated/compass.landice.tests.mismipplus.MISMIPplus", "developers_guide/landice/generated/compass.landice.tests.mismipplus.run_model.RunModel", "developers_guide/landice/generated/compass.landice.tests.mismipplus.run_model.RunModel.run", "developers_guide/landice/generated/compass.landice.tests.mismipplus.run_model.RunModel.setup", "developers_guide/landice/generated/compass.landice.tests.mismipplus.smoke_test.SmokeTest", "developers_guide/landice/generated/compass.landice.tests.mismipplus.smoke_test.SmokeTest.run", "developers_guide/landice/generated/compass.landice.tests.thwaites.Thwaites", "developers_guide/landice/generated/compass.landice.tests.thwaites.decomposition_test.DecompositionTest", "developers_guide/landice/generated/compass.landice.tests.thwaites.decomposition_test.DecompositionTest.run", "developers_guide/landice/generated/compass.landice.tests.thwaites.restart_test.RestartTest", "developers_guide/landice/generated/compass.landice.tests.thwaites.restart_test.RestartTest.run", "developers_guide/landice/generated/compass.landice.tests.thwaites.run_model.RunModel", "developers_guide/landice/generated/compass.landice.tests.thwaites.run_model.RunModel.run", "developers_guide/landice/generated/compass.landice.tests.thwaites.run_model.RunModel.setup", "developers_guide/landice/index", "developers_guide/landice/test_groups/calving_dt_convergence", "developers_guide/landice/test_groups/circular_shelf", "developers_guide/landice/test_groups/dome", "developers_guide/landice/test_groups/eismint2", "developers_guide/landice/test_groups/enthalpy_benchmark", "developers_guide/landice/test_groups/greenland", "developers_guide/landice/test_groups/humboldt", "developers_guide/landice/test_groups/hydro_radial", "developers_guide/landice/test_groups/index", "developers_guide/landice/test_groups/kangerlussuaq", "developers_guide/landice/test_groups/koge_bugt_s", "developers_guide/landice/test_groups/mismipplus", "developers_guide/landice/test_groups/thwaites", "developers_guide/machines/anvil", "developers_guide/machines/badger", "developers_guide/machines/chrysalis", "developers_guide/machines/compy", "developers_guide/machines/cori", "developers_guide/machines/index", "developers_guide/ocean/api", "developers_guide/ocean/framework", "developers_guide/ocean/generated/compass.ocean.Ocean", "developers_guide/ocean/generated/compass.ocean.haney.compute_haney_number", "developers_guide/ocean/generated/compass.ocean.iceshelf.adjust_ssh", "developers_guide/ocean/generated/compass.ocean.iceshelf.compute_land_ice_pressure_and_draft", "developers_guide/ocean/generated/compass.ocean.particles.remap_particles", "developers_guide/ocean/generated/compass.ocean.particles.write", "developers_guide/ocean/generated/compass.ocean.plot.plot_initial_state", "developers_guide/ocean/generated/compass.ocean.plot.plot_vertical_grid", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.BaroclinicChannel", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.configure", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.decomp_test.DecompTest", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.decomp_test.DecompTest.configure", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.decomp_test.DecompTest.run", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.default.Default", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.default.Default.configure", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.default.Default.run", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.forward.Forward", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.forward.Forward.run", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.forward.Forward.setup", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.initial_state.InitialState", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.initial_state.InitialState.run", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.initial_state.InitialState.setup", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.restart_test.RestartTest", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.restart_test.RestartTest.configure", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.restart_test.RestartTest.run", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.rpe_test.RpeTest", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.rpe_test.RpeTest.configure", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.rpe_test.RpeTest.run", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.run", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.setup", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.threads_test.ThreadsTest", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.configure", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.run", "developers_guide/ocean/generated/compass.ocean.tests.drying_slope.DryingSlope", "developers_guide/ocean/generated/compass.ocean.tests.drying_slope.default.Default", "developers_guide/ocean/generated/compass.ocean.tests.drying_slope.default.Default.configure", "developers_guide/ocean/generated/compass.ocean.tests.drying_slope.forward.Forward", "developers_guide/ocean/generated/compass.ocean.tests.drying_slope.forward.Forward.run", "developers_guide/ocean/generated/compass.ocean.tests.drying_slope.initial_state.InitialState", "developers_guide/ocean/generated/compass.ocean.tests.drying_slope.initial_state.InitialState.run", "developers_guide/ocean/generated/compass.ocean.tests.drying_slope.viz.Viz", "developers_guide/ocean/generated/compass.ocean.tests.drying_slope.viz.Viz.run", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.GlobalConvergence", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.CosineBell", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.CosineBell.configure", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.CosineBell.run", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.analysis.Analysis", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rmse", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.run", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.forward.Forward", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.forward.Forward.get_dt", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.forward.Forward.run", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.forward.Forward.setup", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.init.Init", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.init.Init.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.GlobalOcean", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.analysis_test.AnalysisTest", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.analysis_test.AnalysisTest.configure", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.analysis_test.AnalysisTest.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.configure", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.configure.configure_global_ocean", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.daily_output_test.DailyOutputTest", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.daily_output_test.DailyOutputTest.configure", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.daily_output_test.DailyOutputTest.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.decomp_test.DecompTest", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.decomp_test.DecompTest.configure", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.decomp_test.DecompTest.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.dynamic_adjustment.DynamicAdjustment", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.dynamic_adjustment.DynamicAdjustment.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.FilesForE3SM", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.FilesForE3SM.configure", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.FilesForE3SM.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.diagnostics_files.DiagnosticsFiles", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.diagnostics_files.DiagnosticsFiles.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.ocean_graph_partition.OceanGraphPartition", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.ocean_graph_partition.OceanGraphPartition.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.ocean_initial_condition.OceanInitialCondition", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.ocean_initial_condition.OceanInitialCondition.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.scrip.Scrip", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.scrip.Scrip.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.seaice_initial_condition.SeaiceInitialCondition", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.seaice_initial_condition.SeaiceInitialCondition.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.forward.ForwardStep", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.forward.ForwardStep.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.forward.ForwardStep.setup", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.forward.ForwardTestCase", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.forward.ForwardTestCase.configure", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.forward.ForwardTestCase.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.init.Init", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.init.Init.configure", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.init.Init.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.init.initial_state.InitialState", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.init.initial_state.InitialState.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.init.initial_state.InitialState.setup", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.init.ssh_adjustment.SshAdjustment", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.init.ssh_adjustment.SshAdjustment.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.init.ssh_adjustment.SshAdjustment.setup", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.Mesh", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.Mesh.configure", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.Mesh.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.cull.cull_mesh", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.ec30to60.EC30to60Mesh", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.ec30to60.EC30to60Mesh.build_cell_width_lat_lon", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.ec30to60.dynamic_adjustment.EC30to60DynamicAdjustment", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.ec30to60.dynamic_adjustment.EC30to60DynamicAdjustment.configure", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.ec30to60.dynamic_adjustment.EC30to60DynamicAdjustment.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.mesh.MeshStep", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.mesh.MeshStep.build_cell_width_lat_lon", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.mesh.MeshStep.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.mesh.MeshStep.setup", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.qu240.QU240Mesh", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.qu240.QU240Mesh.build_cell_width_lat_lon", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.qu240.dynamic_adjustment.QU240DynamicAdjustment", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.qu240.dynamic_adjustment.QU240DynamicAdjustment.configure", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.qu240.dynamic_adjustment.QU240DynamicAdjustment.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.so12to60.SO12to60Mesh", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.so12to60.SO12to60Mesh.build_cell_width_lat_lon", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.so12to60.dynamic_adjustment.SO12to60DynamicAdjustment", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.so12to60.dynamic_adjustment.SO12to60DynamicAdjustment.configure", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.so12to60.dynamic_adjustment.SO12to60DynamicAdjustment.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.wc14.WC14Mesh", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.wc14.WC14Mesh.build_cell_width_lat_lon", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.wc14.dynamic_adjustment.WC14DynamicAdjustment", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.wc14.dynamic_adjustment.WC14DynamicAdjustment.configure", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.wc14.dynamic_adjustment.WC14DynamicAdjustment.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.metadata.add_mesh_and_init_metadata", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.metadata.get_e3sm_mesh_names", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.performance_test.PerformanceTest", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.performance_test.PerformanceTest.configure", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.performance_test.PerformanceTest.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.restart_test.RestartTest", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.restart_test.RestartTest.configure", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.restart_test.RestartTest.run", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.threads_test.ThreadsTest", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.threads_test.ThreadsTest.configure", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.threads_test.ThreadsTest.run", "developers_guide/ocean/generated/compass.ocean.tests.gotm.Gotm", "developers_guide/ocean/generated/compass.ocean.tests.gotm.default.Default", "developers_guide/ocean/generated/compass.ocean.tests.gotm.default.Default.validate", "developers_guide/ocean/generated/compass.ocean.tests.gotm.default.analysis.Analysis", "developers_guide/ocean/generated/compass.ocean.tests.gotm.default.analysis.Analysis.run", "developers_guide/ocean/generated/compass.ocean.tests.gotm.default.forward.Forward", "developers_guide/ocean/generated/compass.ocean.tests.gotm.default.forward.Forward.run", "developers_guide/ocean/generated/compass.ocean.tests.gotm.default.init.Init", "developers_guide/ocean/generated/compass.ocean.tests.gotm.default.init.Init.run", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.Hurricane", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.analysis.Analysis", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.analysis.Analysis.read_pointstats", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.analysis.Analysis.read_station_data", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.analysis.Analysis.read_station_file", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.analysis.Analysis.run", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.analysis.Analysis.setup", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.configure", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.forward.Forward", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.forward.Forward.configure", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.forward.Forward.run", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.forward.forward.ForwardStep", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.forward.forward.ForwardStep.run", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.forward.forward.ForwardStep.setup", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.Init", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.Init.configure", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.Init.run", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.create_pointstats_file.CreatePointstatsFile", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.create_pointstats_file.CreatePointstatsFile.create_pointstats_file", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.create_pointstats_file.CreatePointstatsFile.run", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.initial_state.InitialState", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.initial_state.InitialState.run", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.initial_state.InitialState.setup", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing.interpolate_data_to_grid", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing.plot_interp_data", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing.run", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing.write_to_file", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.mesh.Mesh", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.mesh.Mesh.configure", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.mesh.Mesh.run", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.mesh.dequ120at30cr10rr2.DEQU120at30cr10rr2Mesh", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.mesh.dequ120at30cr10rr2.DEQU120at30cr10rr2Mesh.build_cell_width_lat_lon", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.IceShelf2d", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.configure", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.default.Default", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.default.Default.configure", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.default.Default.run", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.forward.Forward", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.forward.Forward.run", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.forward.Forward.setup", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.initial_state.InitialState", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.initial_state.InitialState.run", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.restart_test.RestartTest", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.restart_test.RestartTest.configure", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.restart_test.RestartTest.run", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.ssh_adjustment.SshAdjustment", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.ssh_adjustment.SshAdjustment.run", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.ssh_adjustment.SshAdjustment.setup", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.viz.Viz", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.viz.Viz.run", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.InternalWave", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.default.Default", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.default.Default.validate", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.forward.Forward", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.forward.Forward.run", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.initial_state.InitialState", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.initial_state.InitialState.run", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.rpe_test.RpeTest", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.rpe_test.analysis.Analysis", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.rpe_test.analysis.Analysis.run", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.ten_day_test.TenDayTest", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.ten_day_test.TenDayTest.validate", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.viz.Viz", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.viz.Viz.run", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.IsomipPlus", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.evap.update_evaporation_flux", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.forward.Forward", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.forward.Forward.run", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.forward.Forward.setup", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.geom.interpolate_ocean_mask", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.geom.process_input_geometry", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.initial_state.InitialState", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.initial_state.InitialState.run", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.misomip.Misomip", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.misomip.Misomip.run", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.ocean_test.OceanTest", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.ocean_test.OceanTest.configure", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.ocean_test.OceanTest.run", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.ssh_adjustment.SshAdjustment", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.ssh_adjustment.SshAdjustment.run", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.ssh_adjustment.SshAdjustment.setup", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.streamfunction.Streamfunction", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.streamfunction.Streamfunction.run", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.Viz", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.Viz.run", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.file_complete", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.images_to_movies", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_3d_field_top_bot_section", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_barotropic_streamfunction", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_horiz_series", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_ice_shelf_boundary_variables", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_layer_interfaces", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_melt_rates", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_overturning_streamfunction", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_potential_density", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_salinity", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_temperature", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.TimeSeriesPlotter", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.TimeSeriesPlotter.plot_melt_time_series", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.TimeSeriesPlotter.plot_time_series", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.PlanarConvergence", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.conv_init.ConvInit", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.conv_init.ConvInit.run", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.conv_test_case.ConvTestCase", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.conv_test_case.ConvTestCase.configure", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.conv_test_case.ConvTestCase.run", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.conv_test_case.ConvTestCase.update_cores", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.forward.Forward", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.forward.Forward.get_dt_duration", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.forward.Forward.run", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.forward.Forward.setup", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.horizontal_advection.HorizontalAdvection", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.horizontal_advection.HorizontalAdvection.configure", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.horizontal_advection.HorizontalAdvection.run", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.horizontal_advection.analysis.Analysis", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.horizontal_advection.analysis.Analysis.rmse", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.horizontal_advection.analysis.Analysis.run", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.horizontal_advection.init.Init", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.horizontal_advection.init.Init.run", "developers_guide/ocean/generated/compass.ocean.tests.soma.Soma", "developers_guide/ocean/generated/compass.ocean.tests.soma.analysis.Analysis", "developers_guide/ocean/generated/compass.ocean.tests.soma.analysis.Analysis.run", "developers_guide/ocean/generated/compass.ocean.tests.soma.forward.Forward", "developers_guide/ocean/generated/compass.ocean.tests.soma.forward.Forward.run", "developers_guide/ocean/generated/compass.ocean.tests.soma.initial_state.InitialState", "developers_guide/ocean/generated/compass.ocean.tests.soma.initial_state.InitialState.run", "developers_guide/ocean/generated/compass.ocean.tests.soma.soma_test_case.SomaTestCase", "developers_guide/ocean/generated/compass.ocean.tests.soma.soma_test_case.SomaTestCase.validate", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.SphereTransport", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.CorrelatedTracers2D", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.CorrelatedTracers2D.configure", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.CorrelatedTracers2D.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.analysis.Analysis", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.analysis.Analysis.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.Forward", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.Forward.get_timestep_str", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.Forward.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.Forward.setup", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.init.Init", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.init.Init.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.mesh.Mesh", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.mesh.Mesh.build_cell_width_lat_lon", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.mesh.Mesh.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.Divergent2D", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.Divergent2D.configure", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.Divergent2D.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.analysis.Analysis", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.analysis.Analysis.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.forward.Forward", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.forward.Forward.get_timestep_str", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.forward.Forward.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.forward.Forward.setup", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.init.Init", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.init.Init.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.mesh.Mesh", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.mesh.Mesh.build_cell_width_lat_lon", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.mesh.Mesh.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.Nondivergent2D", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.Nondivergent2D.configure", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.Nondivergent2D.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.analysis.Analysis", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.analysis.Analysis.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.forward.Forward", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.forward.Forward.get_timestep_str", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.forward.Forward.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.forward.Forward.setup", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.init.Init", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.init.Init.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.mesh.Mesh", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.mesh.Mesh.build_cell_width_lat_lon", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.mesh.Mesh.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.compute_convergence_rates", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.compute_error_from_output_ncfile", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.make_convergence_arrays", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.plot_convergence", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.plot_filament", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.plot_over_and_undershoot_errors", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.plot_sol", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.print_data_as_csv", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.print_error_conv_table", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.read_ncl_rgb_file", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.Rotation2D", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.Rotation2D.configure", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.Rotation2D.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.analysis.Analysis", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.analysis.Analysis.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.forward.Forward", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.forward.Forward.get_timestep_str", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.forward.Forward.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.forward.Forward.setup", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.init.Init", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.init.Init.run", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.mesh.Mesh", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.mesh.Mesh.build_cell_width_lat_lon", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.mesh.Mesh.run", "developers_guide/ocean/generated/compass.ocean.tests.ziso.Ziso", "developers_guide/ocean/generated/compass.ocean.tests.ziso.ZisoTestCase", "developers_guide/ocean/generated/compass.ocean.tests.ziso.ZisoTestCase.configure", "developers_guide/ocean/generated/compass.ocean.tests.ziso.ZisoTestCase.run", "developers_guide/ocean/generated/compass.ocean.tests.ziso.configure", "developers_guide/ocean/generated/compass.ocean.tests.ziso.forward.Forward", "developers_guide/ocean/generated/compass.ocean.tests.ziso.forward.Forward.run", "developers_guide/ocean/generated/compass.ocean.tests.ziso.forward.Forward.setup", "developers_guide/ocean/generated/compass.ocean.tests.ziso.initial_state.InitialState", "developers_guide/ocean/generated/compass.ocean.tests.ziso.initial_state.InitialState.run", "developers_guide/ocean/generated/compass.ocean.tests.ziso.with_frazil.WithFrazil", "developers_guide/ocean/generated/compass.ocean.tests.ziso.with_frazil.WithFrazil.configure", "developers_guide/ocean/generated/compass.ocean.tests.ziso.with_frazil.WithFrazil.run", "developers_guide/ocean/generated/compass.ocean.vertical.grid_1d.generate_1d_grid", "developers_guide/ocean/generated/compass.ocean.vertical.grid_1d.write_1d_grid", "developers_guide/ocean/generated/compass.ocean.vertical.init_vertical_coord", "developers_guide/ocean/generated/compass.ocean.vertical.partial_cells.alter_bottom_depth", "developers_guide/ocean/generated/compass.ocean.vertical.partial_cells.alter_ssh", "developers_guide/ocean/generated/compass.ocean.vertical.zlevel.compute_min_max_level_cell", "developers_guide/ocean/generated/compass.ocean.vertical.zlevel.compute_z_level_layer_thickness", "developers_guide/ocean/generated/compass.ocean.vertical.zlevel.compute_z_level_resting_thickness", "developers_guide/ocean/generated/compass.ocean.vertical.zlevel.init_z_level_vertical_coord", "developers_guide/ocean/generated/compass.ocean.vertical.zstar.init_z_star_vertical_coord", "developers_guide/ocean/index", "developers_guide/ocean/test_groups/baroclinic_channel", "developers_guide/ocean/test_groups/drying_slope", "developers_guide/ocean/test_groups/global_convergence", "developers_guide/ocean/test_groups/global_ocean", "developers_guide/ocean/test_groups/gotm", "developers_guide/ocean/test_groups/hurricane", "developers_guide/ocean/test_groups/ice_shelf_2d", "developers_guide/ocean/test_groups/index", "developers_guide/ocean/test_groups/internal_wave", "developers_guide/ocean/test_groups/isomip_plus", "developers_guide/ocean/test_groups/planar_convergence", "developers_guide/ocean/test_groups/soma", "developers_guide/ocean/test_groups/sphere_transport", "developers_guide/ocean/test_groups/spherical_harmonic_transform", "developers_guide/ocean/test_groups/ziso", "developers_guide/organization", "developers_guide/overview", "developers_guide/quick_start", "developers_guide/troubleshooting", "glossary", "index", "tutorials/dev_add_param_study", "tutorials/dev_add_test_group", "tutorials/dev_porting_legacy", "users_guide/config_files", "users_guide/landice/framework/index", "users_guide/landice/index", "users_guide/landice/suites", "users_guide/landice/test_groups/calving_dt_convergence", "users_guide/landice/test_groups/circular_shelf", "users_guide/landice/test_groups/dome", "users_guide/landice/test_groups/eismint2", "users_guide/landice/test_groups/enthalpy_benchmark", "users_guide/landice/test_groups/greenland", "users_guide/landice/test_groups/humboldt", "users_guide/landice/test_groups/hydro_radial", "users_guide/landice/test_groups/index", "users_guide/landice/test_groups/kangerlussuaq", "users_guide/landice/test_groups/koge_bugt_s", "users_guide/landice/test_groups/mismipplus", "users_guide/landice/test_groups/thwaites", "users_guide/machines/anvil", "users_guide/machines/badger", "users_guide/machines/chrysalis", "users_guide/machines/compy", "users_guide/machines/cori", "users_guide/machines/index", "users_guide/ocean/framework/ice_shelf", "users_guide/ocean/framework/index", "users_guide/ocean/framework/vertical", "users_guide/ocean/index", "users_guide/ocean/suites", "users_guide/ocean/test_groups/baroclinic_channel", "users_guide/ocean/test_groups/drying_slope", "users_guide/ocean/test_groups/global_convergence", "users_guide/ocean/test_groups/global_ocean", "users_guide/ocean/test_groups/gotm", "users_guide/ocean/test_groups/hurricane", "users_guide/ocean/test_groups/ice_shelf_2d", "users_guide/ocean/test_groups/index", "users_guide/ocean/test_groups/internal_wave", "users_guide/ocean/test_groups/isomip_plus", "users_guide/ocean/test_groups/planar_convergence", "users_guide/ocean/test_groups/soma", "users_guide/ocean/test_groups/sphere_transport", "users_guide/ocean/test_groups/spherical_harmonic_transform", "users_guide/ocean/test_groups/ziso", "users_guide/quick_start", "users_guide/test_cases", "users_guide/test_suites", "versions"], "filenames": ["design_docs/cached_outputs.rst", "design_docs/compass_package.rst", "design_docs/index.rst", "design_docs/template.rst", "developers_guide/api.rst", "developers_guide/building_docs.rst", "developers_guide/command_line.rst", "developers_guide/docs.rst", "developers_guide/framework.rst", "developers_guide/generated/compass.MpasCore.rst", "developers_guide/generated/compass.MpasCore.add_test_group.rst", "developers_guide/generated/compass.Step.rst", "developers_guide/generated/compass.Step.add_input_file.rst", "developers_guide/generated/compass.Step.add_model_as_input.rst", "developers_guide/generated/compass.Step.add_namelist_file.rst", "developers_guide/generated/compass.Step.add_namelist_options.rst", "developers_guide/generated/compass.Step.add_output_file.rst", "developers_guide/generated/compass.Step.add_streams_file.rst", "developers_guide/generated/compass.Step.run.rst", "developers_guide/generated/compass.Step.setup.rst", "developers_guide/generated/compass.Step.update_namelist_at_runtime.rst", "developers_guide/generated/compass.Step.update_namelist_pio.rst", "developers_guide/generated/compass.Step.update_streams_at_runtime.rst", "developers_guide/generated/compass.TestCase.rst", "developers_guide/generated/compass.TestCase.add_step.rst", "developers_guide/generated/compass.TestCase.configure.rst", "developers_guide/generated/compass.TestCase.run.rst", "developers_guide/generated/compass.TestCase.validate.rst", "developers_guide/generated/compass.TestGroup.rst", "developers_guide/generated/compass.TestGroup.add_test_case.rst", "developers_guide/generated/compass.__main__.main.rst", "developers_guide/generated/compass.cache.update_cache.rst", "developers_guide/generated/compass.clean.clean_cases.rst", "developers_guide/generated/compass.config.CompassConfigParser.rst", "developers_guide/generated/compass.io.download.rst", "developers_guide/generated/compass.io.symlink.rst", "developers_guide/generated/compass.list.list_cases.rst", "developers_guide/generated/compass.list.list_machines.rst", "developers_guide/generated/compass.list.list_suites.rst", "developers_guide/generated/compass.logging.log_method_call.rst", "developers_guide/generated/compass.mesh.IcosahedralMeshStep.rst", "developers_guide/generated/compass.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon.rst", "developers_guide/generated/compass.mesh.IcosahedralMeshStep.get_cell_width.rst", "developers_guide/generated/compass.mesh.IcosahedralMeshStep.get_subdivisions.rst", "developers_guide/generated/compass.mesh.IcosahedralMeshStep.make_jigsaw_mesh.rst", "developers_guide/generated/compass.mesh.IcosahedralMeshStep.run.rst", "developers_guide/generated/compass.mesh.IcosahedralMeshStep.setup.rst", "developers_guide/generated/compass.mesh.QuasiUniformSphericalMeshStep.rst", "developers_guide/generated/compass.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon.rst", "developers_guide/generated/compass.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh.rst", "developers_guide/generated/compass.mesh.QuasiUniformSphericalMeshStep.run.rst", "developers_guide/generated/compass.mesh.QuasiUniformSphericalMeshStep.setup.rst", "developers_guide/generated/compass.mesh.spherical.SphericalBaseStep.rst", "developers_guide/generated/compass.mesh.spherical.SphericalBaseStep.run.rst", "developers_guide/generated/compass.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width.rst", "developers_guide/generated/compass.mesh.spherical.SphericalBaseStep.setup.rst", "developers_guide/generated/compass.model.make_graph_file.rst", "developers_guide/generated/compass.model.partition.rst", "developers_guide/generated/compass.model.run_model.rst", "developers_guide/generated/compass.mpas_cores.get_mpas_cores.rst", "developers_guide/generated/compass.parallel.get_available_cores_and_nodes.rst", "developers_guide/generated/compass.provenance.write.rst", "developers_guide/generated/compass.run.serial.run_step.rst", "developers_guide/generated/compass.run.serial.run_tests.rst", "developers_guide/generated/compass.setup.setup_case.rst", "developers_guide/generated/compass.setup.setup_cases.rst", "developers_guide/generated/compass.suite.clean_suite.rst", "developers_guide/generated/compass.suite.setup_suite.rst", "developers_guide/generated/compass.validate.compare_timers.rst", "developers_guide/generated/compass.validate.compare_variables.rst", "developers_guide/landice/api.rst", "developers_guide/landice/framework.rst", "developers_guide/landice/generated/compass.landice.Landice.rst", "developers_guide/landice/generated/compass.landice.tests.calving_dt_convergence.CalvingDtConvergence.rst", "developers_guide/landice/generated/compass.landice.tests.calving_dt_convergence.dt_convergence_test.DtConvergenceTest.rst", "developers_guide/landice/generated/compass.landice.tests.calving_dt_convergence.dt_convergence_test.DtConvergenceTest.validate.rst", "developers_guide/landice/generated/compass.landice.tests.calving_dt_convergence.run_model.RunModel.rst", "developers_guide/landice/generated/compass.landice.tests.calving_dt_convergence.run_model.RunModel.run.rst", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.CircularShelf.rst", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.decomposition_test.DecompositionTest.rst", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.decomposition_test.DecompositionTest.run.rst", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.run_model.RunModel.rst", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.run_model.RunModel.run.rst", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.setup_mesh.SetupMesh.rst", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.setup_mesh.SetupMesh.run.rst", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.visualize.Visualize.rst", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.visualize.Visualize.run.rst", "developers_guide/landice/generated/compass.landice.tests.circular_shelf.visualize.visualize_circular_shelf.rst", "developers_guide/landice/generated/compass.landice.tests.dome.Dome.rst", "developers_guide/landice/generated/compass.landice.tests.dome.decomposition_test.DecompositionTest.rst", "developers_guide/landice/generated/compass.landice.tests.dome.decomposition_test.DecompositionTest.run.rst", "developers_guide/landice/generated/compass.landice.tests.dome.restart_test.RestartTest.rst", "developers_guide/landice/generated/compass.landice.tests.dome.restart_test.RestartTest.run.rst", "developers_guide/landice/generated/compass.landice.tests.dome.run_model.RunModel.rst", "developers_guide/landice/generated/compass.landice.tests.dome.run_model.RunModel.run.rst", "developers_guide/landice/generated/compass.landice.tests.dome.run_model.RunModel.setup.rst", "developers_guide/landice/generated/compass.landice.tests.dome.setup_mesh.SetupMesh.rst", "developers_guide/landice/generated/compass.landice.tests.dome.setup_mesh.SetupMesh.run.rst", "developers_guide/landice/generated/compass.landice.tests.dome.smoke_test.SmokeTest.rst", "developers_guide/landice/generated/compass.landice.tests.dome.smoke_test.SmokeTest.run.rst", "developers_guide/landice/generated/compass.landice.tests.dome.visualize.Visualize.rst", "developers_guide/landice/generated/compass.landice.tests.dome.visualize.Visualize.run.rst", "developers_guide/landice/generated/compass.landice.tests.dome.visualize.visualize_dome.rst", "developers_guide/landice/generated/compass.landice.tests.eismint2.Eismint2.rst", "developers_guide/landice/generated/compass.landice.tests.eismint2.decomposition_test.DecompositionTest.rst", "developers_guide/landice/generated/compass.landice.tests.eismint2.decomposition_test.DecompositionTest.run.rst", "developers_guide/landice/generated/compass.landice.tests.eismint2.restart_test.RestartTest.rst", "developers_guide/landice/generated/compass.landice.tests.eismint2.restart_test.RestartTest.run.rst", "developers_guide/landice/generated/compass.landice.tests.eismint2.run_experiment.RunExperiment.rst", "developers_guide/landice/generated/compass.landice.tests.eismint2.run_experiment.RunExperiment.run.rst", "developers_guide/landice/generated/compass.landice.tests.eismint2.run_experiment.RunExperiment.setup.rst", "developers_guide/landice/generated/compass.landice.tests.eismint2.setup_mesh.SetupMesh.rst", "developers_guide/landice/generated/compass.landice.tests.eismint2.setup_mesh.SetupMesh.run.rst", "developers_guide/landice/generated/compass.landice.tests.eismint2.standard_experiments.StandardExperiments.rst", "developers_guide/landice/generated/compass.landice.tests.eismint2.standard_experiments.StandardExperiments.run.rst", "developers_guide/landice/generated/compass.landice.tests.eismint2.standard_experiments.visualize.Visualize.rst", "developers_guide/landice/generated/compass.landice.tests.eismint2.standard_experiments.visualize.Visualize.run.rst", "developers_guide/landice/generated/compass.landice.tests.eismint2.standard_experiments.visualize.visualize_eismint2.rst", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.A.A.rst", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.A.A.configure.rst", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.A.A.run.rst", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.A.visualize.Visualize.rst", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.A.visualize.Visualize.run.rst", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.B.B.rst", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.B.B.configure.rst", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.B.B.run.rst", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.B.visualize.Visualize.rst", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.B.visualize.Visualize.run.rst", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.EnthalpyBenchmark.rst", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.run_model.RunModel.rst", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.run_model.RunModel.run.rst", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.run_model.RunModel.setup.rst", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.setup_mesh.SetupMesh.rst", "developers_guide/landice/generated/compass.landice.tests.enthalpy_benchmark.setup_mesh.SetupMesh.run.rst", "developers_guide/landice/generated/compass.landice.tests.greenland.Greenland.rst", "developers_guide/landice/generated/compass.landice.tests.greenland.decomposition_test.DecompositionTest.rst", "developers_guide/landice/generated/compass.landice.tests.greenland.decomposition_test.DecompositionTest.run.rst", "developers_guide/landice/generated/compass.landice.tests.greenland.high_res_mesh.HighResMesh.rst", "developers_guide/landice/generated/compass.landice.tests.greenland.high_res_mesh.HighResMesh.run.rst", "developers_guide/landice/generated/compass.landice.tests.greenland.mesh.Mesh.rst", "developers_guide/landice/generated/compass.landice.tests.greenland.mesh.Mesh.build_cell_width.rst", "developers_guide/landice/generated/compass.landice.tests.greenland.mesh.Mesh.run.rst", "developers_guide/landice/generated/compass.landice.tests.greenland.restart_test.RestartTest.rst", "developers_guide/landice/generated/compass.landice.tests.greenland.restart_test.RestartTest.run.rst", "developers_guide/landice/generated/compass.landice.tests.greenland.run_model.RunModel.rst", "developers_guide/landice/generated/compass.landice.tests.greenland.run_model.RunModel.run.rst", "developers_guide/landice/generated/compass.landice.tests.greenland.run_model.RunModel.setup.rst", "developers_guide/landice/generated/compass.landice.tests.greenland.smoke_test.SmokeTest.rst", "developers_guide/landice/generated/compass.landice.tests.greenland.smoke_test.SmokeTest.run.rst", "developers_guide/landice/generated/compass.landice.tests.humboldt.Humboldt.rst", "developers_guide/landice/generated/compass.landice.tests.humboldt.decomposition_test.DecompositionTest.rst", "developers_guide/landice/generated/compass.landice.tests.humboldt.decomposition_test.DecompositionTest.validate.rst", "developers_guide/landice/generated/compass.landice.tests.humboldt.mesh.Mesh.rst", "developers_guide/landice/generated/compass.landice.tests.humboldt.mesh.Mesh.run.rst", "developers_guide/landice/generated/compass.landice.tests.humboldt.mesh_gen.MeshGen.rst", "developers_guide/landice/generated/compass.landice.tests.humboldt.mesh_gen.MeshGen.run.rst", "developers_guide/landice/generated/compass.landice.tests.humboldt.restart_test.RestartTest.rst", "developers_guide/landice/generated/compass.landice.tests.humboldt.restart_test.RestartTest.validate.rst", "developers_guide/landice/generated/compass.landice.tests.humboldt.run_model.RunModel.rst", "developers_guide/landice/generated/compass.landice.tests.humboldt.run_model.RunModel.run.rst", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.HydroRadial.rst", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.decomposition_test.DecompositionTest.rst", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.decomposition_test.DecompositionTest.run.rst", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.restart_test.RestartTest.rst", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.restart_test.RestartTest.run.rst", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.run_model.RunModel.rst", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.run_model.RunModel.run.rst", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.run_model.RunModel.setup.rst", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.setup_mesh.SetupMesh.rst", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.setup_mesh.SetupMesh.run.rst", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.spinup_test.SpinupTest.rst", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.spinup_test.SpinupTest.run.rst", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.steady_state_drift_test.SteadyStateDriftTest.rst", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.steady_state_drift_test.SteadyStateDriftTest.run.rst", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.visualize.Visualize.rst", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.visualize.Visualize.run.rst", "developers_guide/landice/generated/compass.landice.tests.hydro_radial.visualize.visualize_hydro_radial.rst", "developers_guide/landice/generated/compass.landice.tests.kangerlussuaq.Kangerlussuaq.rst", "developers_guide/landice/generated/compass.landice.tests.kangerlussuaq.mesh.Mesh.rst", "developers_guide/landice/generated/compass.landice.tests.kangerlussuaq.mesh.Mesh.run.rst", "developers_guide/landice/generated/compass.landice.tests.kangerlussuaq.mesh_gen.MeshGen.rst", "developers_guide/landice/generated/compass.landice.tests.kangerlussuaq.mesh_gen.MeshGen.run.rst", "developers_guide/landice/generated/compass.landice.tests.koge_bugt_s.KogeBugtS.rst", "developers_guide/landice/generated/compass.landice.tests.koge_bugt_s.mesh.Mesh.rst", "developers_guide/landice/generated/compass.landice.tests.koge_bugt_s.mesh.Mesh.run.rst", "developers_guide/landice/generated/compass.landice.tests.koge_bugt_s.mesh_gen.MeshGen.rst", "developers_guide/landice/generated/compass.landice.tests.koge_bugt_s.mesh_gen.MeshGen.run.rst", "developers_guide/landice/generated/compass.landice.tests.mismipplus.MISMIPplus.rst", "developers_guide/landice/generated/compass.landice.tests.mismipplus.run_model.RunModel.rst", "developers_guide/landice/generated/compass.landice.tests.mismipplus.run_model.RunModel.run.rst", "developers_guide/landice/generated/compass.landice.tests.mismipplus.run_model.RunModel.setup.rst", "developers_guide/landice/generated/compass.landice.tests.mismipplus.smoke_test.SmokeTest.rst", "developers_guide/landice/generated/compass.landice.tests.mismipplus.smoke_test.SmokeTest.run.rst", "developers_guide/landice/generated/compass.landice.tests.thwaites.Thwaites.rst", "developers_guide/landice/generated/compass.landice.tests.thwaites.decomposition_test.DecompositionTest.rst", "developers_guide/landice/generated/compass.landice.tests.thwaites.decomposition_test.DecompositionTest.run.rst", "developers_guide/landice/generated/compass.landice.tests.thwaites.restart_test.RestartTest.rst", "developers_guide/landice/generated/compass.landice.tests.thwaites.restart_test.RestartTest.run.rst", "developers_guide/landice/generated/compass.landice.tests.thwaites.run_model.RunModel.rst", "developers_guide/landice/generated/compass.landice.tests.thwaites.run_model.RunModel.run.rst", "developers_guide/landice/generated/compass.landice.tests.thwaites.run_model.RunModel.setup.rst", "developers_guide/landice/index.rst", "developers_guide/landice/test_groups/calving_dt_convergence.rst", "developers_guide/landice/test_groups/circular_shelf.rst", "developers_guide/landice/test_groups/dome.rst", "developers_guide/landice/test_groups/eismint2.rst", "developers_guide/landice/test_groups/enthalpy_benchmark.rst", "developers_guide/landice/test_groups/greenland.rst", "developers_guide/landice/test_groups/humboldt.rst", "developers_guide/landice/test_groups/hydro_radial.rst", "developers_guide/landice/test_groups/index.rst", "developers_guide/landice/test_groups/kangerlussuaq.rst", "developers_guide/landice/test_groups/koge_bugt_s.rst", "developers_guide/landice/test_groups/mismipplus.rst", "developers_guide/landice/test_groups/thwaites.rst", "developers_guide/machines/anvil.rst", "developers_guide/machines/badger.rst", "developers_guide/machines/chrysalis.rst", "developers_guide/machines/compy.rst", "developers_guide/machines/cori.rst", "developers_guide/machines/index.rst", "developers_guide/ocean/api.rst", "developers_guide/ocean/framework.rst", "developers_guide/ocean/generated/compass.ocean.Ocean.rst", "developers_guide/ocean/generated/compass.ocean.haney.compute_haney_number.rst", "developers_guide/ocean/generated/compass.ocean.iceshelf.adjust_ssh.rst", "developers_guide/ocean/generated/compass.ocean.iceshelf.compute_land_ice_pressure_and_draft.rst", "developers_guide/ocean/generated/compass.ocean.particles.remap_particles.rst", "developers_guide/ocean/generated/compass.ocean.particles.write.rst", "developers_guide/ocean/generated/compass.ocean.plot.plot_initial_state.rst", "developers_guide/ocean/generated/compass.ocean.plot.plot_vertical_grid.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.BaroclinicChannel.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.decomp_test.DecompTest.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.decomp_test.DecompTest.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.decomp_test.DecompTest.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.default.Default.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.default.Default.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.default.Default.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.forward.Forward.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.forward.Forward.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.forward.Forward.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.initial_state.InitialState.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.initial_state.InitialState.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.initial_state.InitialState.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.restart_test.RestartTest.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.restart_test.RestartTest.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.restart_test.RestartTest.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.rpe_test.RpeTest.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.rpe_test.RpeTest.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.rpe_test.RpeTest.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.drying_slope.DryingSlope.rst", "developers_guide/ocean/generated/compass.ocean.tests.drying_slope.default.Default.rst", "developers_guide/ocean/generated/compass.ocean.tests.drying_slope.default.Default.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.drying_slope.forward.Forward.rst", "developers_guide/ocean/generated/compass.ocean.tests.drying_slope.forward.Forward.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.drying_slope.initial_state.InitialState.rst", "developers_guide/ocean/generated/compass.ocean.tests.drying_slope.initial_state.InitialState.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.drying_slope.viz.Viz.rst", "developers_guide/ocean/generated/compass.ocean.tests.drying_slope.viz.Viz.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.GlobalConvergence.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.CosineBell.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.CosineBell.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.CosineBell.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rmse.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.forward.Forward.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.forward.Forward.get_dt.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.forward.Forward.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.forward.Forward.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.init.Init.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_convergence.cosine_bell.init.Init.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.GlobalOcean.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.analysis_test.AnalysisTest.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.analysis_test.AnalysisTest.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.analysis_test.AnalysisTest.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.configure.configure_global_ocean.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.daily_output_test.DailyOutputTest.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.daily_output_test.DailyOutputTest.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.daily_output_test.DailyOutputTest.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.decomp_test.DecompTest.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.decomp_test.DecompTest.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.decomp_test.DecompTest.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.dynamic_adjustment.DynamicAdjustment.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.dynamic_adjustment.DynamicAdjustment.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.FilesForE3SM.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.FilesForE3SM.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.FilesForE3SM.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.diagnostics_files.DiagnosticsFiles.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.diagnostics_files.DiagnosticsFiles.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.ocean_graph_partition.OceanGraphPartition.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.ocean_graph_partition.OceanGraphPartition.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.ocean_initial_condition.OceanInitialCondition.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.ocean_initial_condition.OceanInitialCondition.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.scrip.Scrip.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.scrip.Scrip.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.seaice_initial_condition.SeaiceInitialCondition.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.files_for_e3sm.seaice_initial_condition.SeaiceInitialCondition.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.forward.ForwardStep.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.forward.ForwardStep.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.forward.ForwardStep.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.forward.ForwardTestCase.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.forward.ForwardTestCase.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.forward.ForwardTestCase.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.init.Init.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.init.Init.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.init.Init.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.init.initial_state.InitialState.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.init.initial_state.InitialState.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.init.initial_state.InitialState.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.init.ssh_adjustment.SshAdjustment.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.init.ssh_adjustment.SshAdjustment.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.init.ssh_adjustment.SshAdjustment.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.Mesh.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.Mesh.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.Mesh.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.cull.cull_mesh.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.ec30to60.EC30to60Mesh.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.ec30to60.EC30to60Mesh.build_cell_width_lat_lon.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.ec30to60.dynamic_adjustment.EC30to60DynamicAdjustment.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.ec30to60.dynamic_adjustment.EC30to60DynamicAdjustment.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.ec30to60.dynamic_adjustment.EC30to60DynamicAdjustment.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.mesh.MeshStep.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.mesh.MeshStep.build_cell_width_lat_lon.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.mesh.MeshStep.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.mesh.MeshStep.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.qu240.QU240Mesh.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.qu240.QU240Mesh.build_cell_width_lat_lon.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.qu240.dynamic_adjustment.QU240DynamicAdjustment.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.qu240.dynamic_adjustment.QU240DynamicAdjustment.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.qu240.dynamic_adjustment.QU240DynamicAdjustment.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.so12to60.SO12to60Mesh.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.so12to60.SO12to60Mesh.build_cell_width_lat_lon.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.so12to60.dynamic_adjustment.SO12to60DynamicAdjustment.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.so12to60.dynamic_adjustment.SO12to60DynamicAdjustment.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.so12to60.dynamic_adjustment.SO12to60DynamicAdjustment.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.wc14.WC14Mesh.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.wc14.WC14Mesh.build_cell_width_lat_lon.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.wc14.dynamic_adjustment.WC14DynamicAdjustment.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.wc14.dynamic_adjustment.WC14DynamicAdjustment.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.mesh.wc14.dynamic_adjustment.WC14DynamicAdjustment.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.metadata.add_mesh_and_init_metadata.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.metadata.get_e3sm_mesh_names.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.performance_test.PerformanceTest.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.performance_test.PerformanceTest.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.performance_test.PerformanceTest.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.restart_test.RestartTest.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.restart_test.RestartTest.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.restart_test.RestartTest.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.threads_test.ThreadsTest.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.threads_test.ThreadsTest.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.global_ocean.threads_test.ThreadsTest.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.gotm.Gotm.rst", "developers_guide/ocean/generated/compass.ocean.tests.gotm.default.Default.rst", "developers_guide/ocean/generated/compass.ocean.tests.gotm.default.Default.validate.rst", "developers_guide/ocean/generated/compass.ocean.tests.gotm.default.analysis.Analysis.rst", "developers_guide/ocean/generated/compass.ocean.tests.gotm.default.analysis.Analysis.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.gotm.default.forward.Forward.rst", "developers_guide/ocean/generated/compass.ocean.tests.gotm.default.forward.Forward.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.gotm.default.init.Init.rst", "developers_guide/ocean/generated/compass.ocean.tests.gotm.default.init.Init.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.Hurricane.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.analysis.Analysis.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.analysis.Analysis.read_pointstats.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.analysis.Analysis.read_station_data.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.analysis.Analysis.read_station_file.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.analysis.Analysis.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.analysis.Analysis.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.forward.Forward.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.forward.Forward.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.forward.Forward.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.forward.forward.ForwardStep.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.forward.forward.ForwardStep.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.forward.forward.ForwardStep.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.Init.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.Init.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.Init.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.create_pointstats_file.CreatePointstatsFile.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.create_pointstats_file.CreatePointstatsFile.create_pointstats_file.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.create_pointstats_file.CreatePointstatsFile.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.initial_state.InitialState.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.initial_state.InitialState.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.initial_state.InitialState.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing.interpolate_data_to_grid.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing.plot_interp_data.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing.write_to_file.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.mesh.Mesh.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.mesh.Mesh.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.mesh.Mesh.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.mesh.dequ120at30cr10rr2.DEQU120at30cr10rr2Mesh.rst", "developers_guide/ocean/generated/compass.ocean.tests.hurricane.mesh.dequ120at30cr10rr2.DEQU120at30cr10rr2Mesh.build_cell_width_lat_lon.rst", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.IceShelf2d.rst", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.default.Default.rst", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.default.Default.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.default.Default.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.forward.Forward.rst", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.forward.Forward.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.forward.Forward.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.initial_state.InitialState.rst", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.initial_state.InitialState.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.restart_test.RestartTest.rst", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.restart_test.RestartTest.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.restart_test.RestartTest.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.ssh_adjustment.SshAdjustment.rst", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.ssh_adjustment.SshAdjustment.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.ssh_adjustment.SshAdjustment.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.viz.Viz.rst", "developers_guide/ocean/generated/compass.ocean.tests.ice_shelf_2d.viz.Viz.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.InternalWave.rst", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.default.Default.rst", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.default.Default.validate.rst", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.forward.Forward.rst", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.forward.Forward.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.initial_state.InitialState.rst", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.initial_state.InitialState.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.rpe_test.RpeTest.rst", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.rpe_test.analysis.Analysis.rst", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.rpe_test.analysis.Analysis.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.ten_day_test.TenDayTest.rst", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.ten_day_test.TenDayTest.validate.rst", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.viz.Viz.rst", "developers_guide/ocean/generated/compass.ocean.tests.internal_wave.viz.Viz.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.IsomipPlus.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.evap.update_evaporation_flux.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.forward.Forward.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.forward.Forward.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.forward.Forward.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.geom.interpolate_ocean_mask.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.geom.process_input_geometry.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.initial_state.InitialState.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.initial_state.InitialState.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.misomip.Misomip.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.misomip.Misomip.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.ocean_test.OceanTest.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.ocean_test.OceanTest.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.ocean_test.OceanTest.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.ssh_adjustment.SshAdjustment.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.ssh_adjustment.SshAdjustment.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.ssh_adjustment.SshAdjustment.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.streamfunction.Streamfunction.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.streamfunction.Streamfunction.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.Viz.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.Viz.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.file_complete.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.images_to_movies.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_3d_field_top_bot_section.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_barotropic_streamfunction.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_horiz_series.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_ice_shelf_boundary_variables.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_layer_interfaces.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_melt_rates.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_overturning_streamfunction.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_potential_density.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_salinity.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_temperature.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.TimeSeriesPlotter.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.TimeSeriesPlotter.plot_melt_time_series.rst", "developers_guide/ocean/generated/compass.ocean.tests.isomip_plus.viz.plot.TimeSeriesPlotter.plot_time_series.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.PlanarConvergence.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.conv_init.ConvInit.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.conv_init.ConvInit.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.conv_test_case.ConvTestCase.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.conv_test_case.ConvTestCase.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.conv_test_case.ConvTestCase.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.conv_test_case.ConvTestCase.update_cores.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.forward.Forward.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.forward.Forward.get_dt_duration.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.forward.Forward.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.forward.Forward.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.horizontal_advection.HorizontalAdvection.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.horizontal_advection.HorizontalAdvection.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.horizontal_advection.HorizontalAdvection.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.horizontal_advection.analysis.Analysis.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.horizontal_advection.analysis.Analysis.rmse.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.horizontal_advection.analysis.Analysis.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.horizontal_advection.init.Init.rst", "developers_guide/ocean/generated/compass.ocean.tests.planar_convergence.horizontal_advection.init.Init.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.soma.Soma.rst", "developers_guide/ocean/generated/compass.ocean.tests.soma.analysis.Analysis.rst", "developers_guide/ocean/generated/compass.ocean.tests.soma.analysis.Analysis.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.soma.forward.Forward.rst", "developers_guide/ocean/generated/compass.ocean.tests.soma.forward.Forward.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.soma.initial_state.InitialState.rst", "developers_guide/ocean/generated/compass.ocean.tests.soma.initial_state.InitialState.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.soma.soma_test_case.SomaTestCase.rst", "developers_guide/ocean/generated/compass.ocean.tests.soma.soma_test_case.SomaTestCase.validate.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.SphereTransport.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.CorrelatedTracers2D.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.CorrelatedTracers2D.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.CorrelatedTracers2D.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.analysis.Analysis.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.analysis.Analysis.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.Forward.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.Forward.get_timestep_str.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.Forward.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.Forward.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.init.Init.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.init.Init.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.mesh.Mesh.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.mesh.Mesh.build_cell_width_lat_lon.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.correlated_tracers_2d.mesh.Mesh.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.Divergent2D.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.Divergent2D.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.Divergent2D.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.analysis.Analysis.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.analysis.Analysis.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.forward.Forward.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.forward.Forward.get_timestep_str.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.forward.Forward.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.forward.Forward.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.init.Init.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.init.Init.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.mesh.Mesh.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.mesh.Mesh.build_cell_width_lat_lon.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.divergent_2d.mesh.Mesh.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.Nondivergent2D.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.Nondivergent2D.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.Nondivergent2D.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.analysis.Analysis.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.analysis.Analysis.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.forward.Forward.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.forward.Forward.get_timestep_str.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.forward.Forward.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.forward.Forward.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.init.Init.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.init.Init.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.mesh.Mesh.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.mesh.Mesh.build_cell_width_lat_lon.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.nondivergent_2d.mesh.Mesh.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.compute_convergence_rates.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.compute_error_from_output_ncfile.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.make_convergence_arrays.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.plot_convergence.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.plot_filament.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.plot_over_and_undershoot_errors.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.plot_sol.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.print_data_as_csv.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.print_error_conv_table.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.process_output.read_ncl_rgb_file.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.Rotation2D.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.Rotation2D.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.Rotation2D.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.analysis.Analysis.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.analysis.Analysis.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.forward.Forward.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.forward.Forward.get_timestep_str.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.forward.Forward.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.forward.Forward.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.init.Init.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.init.Init.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.mesh.Mesh.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.mesh.Mesh.build_cell_width_lat_lon.rst", "developers_guide/ocean/generated/compass.ocean.tests.sphere_transport.rotation_2d.mesh.Mesh.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.ziso.Ziso.rst", "developers_guide/ocean/generated/compass.ocean.tests.ziso.ZisoTestCase.rst", "developers_guide/ocean/generated/compass.ocean.tests.ziso.ZisoTestCase.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.ziso.ZisoTestCase.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.ziso.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.ziso.forward.Forward.rst", "developers_guide/ocean/generated/compass.ocean.tests.ziso.forward.Forward.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.ziso.forward.Forward.setup.rst", "developers_guide/ocean/generated/compass.ocean.tests.ziso.initial_state.InitialState.rst", "developers_guide/ocean/generated/compass.ocean.tests.ziso.initial_state.InitialState.run.rst", "developers_guide/ocean/generated/compass.ocean.tests.ziso.with_frazil.WithFrazil.rst", "developers_guide/ocean/generated/compass.ocean.tests.ziso.with_frazil.WithFrazil.configure.rst", "developers_guide/ocean/generated/compass.ocean.tests.ziso.with_frazil.WithFrazil.run.rst", "developers_guide/ocean/generated/compass.ocean.vertical.grid_1d.generate_1d_grid.rst", "developers_guide/ocean/generated/compass.ocean.vertical.grid_1d.write_1d_grid.rst", "developers_guide/ocean/generated/compass.ocean.vertical.init_vertical_coord.rst", "developers_guide/ocean/generated/compass.ocean.vertical.partial_cells.alter_bottom_depth.rst", "developers_guide/ocean/generated/compass.ocean.vertical.partial_cells.alter_ssh.rst", "developers_guide/ocean/generated/compass.ocean.vertical.zlevel.compute_min_max_level_cell.rst", "developers_guide/ocean/generated/compass.ocean.vertical.zlevel.compute_z_level_layer_thickness.rst", "developers_guide/ocean/generated/compass.ocean.vertical.zlevel.compute_z_level_resting_thickness.rst", "developers_guide/ocean/generated/compass.ocean.vertical.zlevel.init_z_level_vertical_coord.rst", "developers_guide/ocean/generated/compass.ocean.vertical.zstar.init_z_star_vertical_coord.rst", "developers_guide/ocean/index.rst", "developers_guide/ocean/test_groups/baroclinic_channel.rst", "developers_guide/ocean/test_groups/drying_slope.rst", "developers_guide/ocean/test_groups/global_convergence.rst", "developers_guide/ocean/test_groups/global_ocean.rst", "developers_guide/ocean/test_groups/gotm.rst", "developers_guide/ocean/test_groups/hurricane.rst", "developers_guide/ocean/test_groups/ice_shelf_2d.rst", "developers_guide/ocean/test_groups/index.rst", "developers_guide/ocean/test_groups/internal_wave.rst", "developers_guide/ocean/test_groups/isomip_plus.rst", "developers_guide/ocean/test_groups/planar_convergence.rst", "developers_guide/ocean/test_groups/soma.rst", "developers_guide/ocean/test_groups/sphere_transport.rst", "developers_guide/ocean/test_groups/spherical_harmonic_transform.rst", "developers_guide/ocean/test_groups/ziso.rst", "developers_guide/organization.rst", "developers_guide/overview.rst", "developers_guide/quick_start.rst", "developers_guide/troubleshooting.rst", "glossary.rst", "index.rst", "tutorials/dev_add_param_study.rst", "tutorials/dev_add_test_group.rst", "tutorials/dev_porting_legacy.rst", "users_guide/config_files.rst", "users_guide/landice/framework/index.rst", "users_guide/landice/index.rst", "users_guide/landice/suites.rst", "users_guide/landice/test_groups/calving_dt_convergence.rst", "users_guide/landice/test_groups/circular_shelf.rst", "users_guide/landice/test_groups/dome.rst", "users_guide/landice/test_groups/eismint2.rst", "users_guide/landice/test_groups/enthalpy_benchmark.rst", "users_guide/landice/test_groups/greenland.rst", "users_guide/landice/test_groups/humboldt.rst", "users_guide/landice/test_groups/hydro_radial.rst", "users_guide/landice/test_groups/index.rst", "users_guide/landice/test_groups/kangerlussuaq.rst", "users_guide/landice/test_groups/koge_bugt_s.rst", "users_guide/landice/test_groups/mismipplus.rst", "users_guide/landice/test_groups/thwaites.rst", "users_guide/machines/anvil.rst", "users_guide/machines/badger.rst", "users_guide/machines/chrysalis.rst", "users_guide/machines/compy.rst", "users_guide/machines/cori.rst", "users_guide/machines/index.rst", "users_guide/ocean/framework/ice_shelf.rst", "users_guide/ocean/framework/index.rst", "users_guide/ocean/framework/vertical.rst", "users_guide/ocean/index.rst", "users_guide/ocean/suites.rst", "users_guide/ocean/test_groups/baroclinic_channel.rst", "users_guide/ocean/test_groups/drying_slope.rst", "users_guide/ocean/test_groups/global_convergence.rst", "users_guide/ocean/test_groups/global_ocean.rst", "users_guide/ocean/test_groups/gotm.rst", "users_guide/ocean/test_groups/hurricane.rst", "users_guide/ocean/test_groups/ice_shelf_2d.rst", "users_guide/ocean/test_groups/index.rst", "users_guide/ocean/test_groups/internal_wave.rst", "users_guide/ocean/test_groups/isomip_plus.rst", "users_guide/ocean/test_groups/planar_convergence.rst", "users_guide/ocean/test_groups/soma.rst", "users_guide/ocean/test_groups/sphere_transport.rst", "users_guide/ocean/test_groups/spherical_harmonic_transform.rst", "users_guide/ocean/test_groups/ziso.rst", "users_guide/quick_start.rst", "users_guide/test_cases.rst", "users_guide/test_suites.rst", "versions.rst"], "titles": ["Caching outputs from compass steps", "compass python package", "Design Documents", "Template", "API reference", "Building the Documentation", "Command-line interface", "Documentation", "Framework", "compass.MpasCore", "compass.MpasCore.add_test_group", "compass.Step", "compass.Step.add_input_file", "compass.Step.add_model_as_input", "compass.Step.add_namelist_file", "compass.Step.add_namelist_options", "compass.Step.add_output_file", "compass.Step.add_streams_file", "compass.Step.run", "compass.Step.setup", "compass.Step.update_namelist_at_runtime", "compass.Step.update_namelist_pio", "compass.Step.update_streams_at_runtime", "compass.TestCase", "compass.TestCase.add_step", "compass.TestCase.configure", "compass.TestCase.run", "compass.TestCase.validate", "compass.TestGroup", "compass.TestGroup.add_test_case", "compass.__main__.main", "compass.cache.update_cache", "compass.clean.clean_cases", "compass.config.CompassConfigParser", "compass.io.download", "compass.io.symlink", "compass.list.list_cases", "compass.list.list_machines", "compass.list.list_suites", "compass.logging.log_method_call", "compass.mesh.IcosahedralMeshStep", "compass.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon", "compass.mesh.IcosahedralMeshStep.get_cell_width", "compass.mesh.IcosahedralMeshStep.get_subdivisions", "compass.mesh.IcosahedralMeshStep.make_jigsaw_mesh", "compass.mesh.IcosahedralMeshStep.run", "compass.mesh.IcosahedralMeshStep.setup", "compass.mesh.QuasiUniformSphericalMeshStep", "compass.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon", "compass.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh", "compass.mesh.QuasiUniformSphericalMeshStep.run", "compass.mesh.QuasiUniformSphericalMeshStep.setup", "compass.mesh.spherical.SphericalBaseStep", "compass.mesh.spherical.SphericalBaseStep.run", "compass.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width", "compass.mesh.spherical.SphericalBaseStep.setup", "compass.model.make_graph_file", "compass.model.partition", "compass.model.run_model", "compass.mpas_cores.get_mpas_cores", "compass.parallel.get_available_cores_and_nodes", "compass.provenance.write", "compass.run.serial.run_step", "compass.run.serial.run_tests", "compass.setup.setup_case", "compass.setup.setup_cases", "compass.suite.clean_suite", "compass.suite.setup_suite", "compass.validate.compare_timers", "compass.validate.compare_variables", "landice", "Land-ice Framework", "compass.landice.Landice", "compass.landice.tests.calving_dt_convergence.CalvingDtConvergence", "compass.landice.tests.calving_dt_convergence.dt_convergence_test.DtConvergenceTest", "compass.landice.tests.calving_dt_convergence.dt_convergence_test.DtConvergenceTest.validate", "compass.landice.tests.calving_dt_convergence.run_model.RunModel", "compass.landice.tests.calving_dt_convergence.run_model.RunModel.run", "compass.landice.tests.circular_shelf.CircularShelf", "compass.landice.tests.circular_shelf.decomposition_test.DecompositionTest", "compass.landice.tests.circular_shelf.decomposition_test.DecompositionTest.run", "compass.landice.tests.circular_shelf.run_model.RunModel", "compass.landice.tests.circular_shelf.run_model.RunModel.run", "compass.landice.tests.circular_shelf.setup_mesh.SetupMesh", "compass.landice.tests.circular_shelf.setup_mesh.SetupMesh.run", "compass.landice.tests.circular_shelf.visualize.Visualize", "compass.landice.tests.circular_shelf.visualize.Visualize.run", "compass.landice.tests.circular_shelf.visualize.visualize_circular_shelf", "compass.landice.tests.dome.Dome", "compass.landice.tests.dome.decomposition_test.DecompositionTest", "compass.landice.tests.dome.decomposition_test.DecompositionTest.run", "compass.landice.tests.dome.restart_test.RestartTest", "compass.landice.tests.dome.restart_test.RestartTest.run", "compass.landice.tests.dome.run_model.RunModel", "compass.landice.tests.dome.run_model.RunModel.run", "compass.landice.tests.dome.run_model.RunModel.setup", "compass.landice.tests.dome.setup_mesh.SetupMesh", "compass.landice.tests.dome.setup_mesh.SetupMesh.run", "compass.landice.tests.dome.smoke_test.SmokeTest", "compass.landice.tests.dome.smoke_test.SmokeTest.run", "compass.landice.tests.dome.visualize.Visualize", "compass.landice.tests.dome.visualize.Visualize.run", "compass.landice.tests.dome.visualize.visualize_dome", "compass.landice.tests.eismint2.Eismint2", "compass.landice.tests.eismint2.decomposition_test.DecompositionTest", "compass.landice.tests.eismint2.decomposition_test.DecompositionTest.run", "compass.landice.tests.eismint2.restart_test.RestartTest", "compass.landice.tests.eismint2.restart_test.RestartTest.run", "compass.landice.tests.eismint2.run_experiment.RunExperiment", "compass.landice.tests.eismint2.run_experiment.RunExperiment.run", "compass.landice.tests.eismint2.run_experiment.RunExperiment.setup", "compass.landice.tests.eismint2.setup_mesh.SetupMesh", "compass.landice.tests.eismint2.setup_mesh.SetupMesh.run", "compass.landice.tests.eismint2.standard_experiments.StandardExperiments", "compass.landice.tests.eismint2.standard_experiments.StandardExperiments.run", "compass.landice.tests.eismint2.standard_experiments.visualize.Visualize", "compass.landice.tests.eismint2.standard_experiments.visualize.Visualize.run", "compass.landice.tests.eismint2.standard_experiments.visualize.visualize_eismint2", "compass.landice.tests.enthalpy_benchmark.A.A", "compass.landice.tests.enthalpy_benchmark.A.A.configure", "compass.landice.tests.enthalpy_benchmark.A.A.run", "compass.landice.tests.enthalpy_benchmark.A.visualize.Visualize", "compass.landice.tests.enthalpy_benchmark.A.visualize.Visualize.run", "compass.landice.tests.enthalpy_benchmark.B.B", "compass.landice.tests.enthalpy_benchmark.B.B.configure", "compass.landice.tests.enthalpy_benchmark.B.B.run", "compass.landice.tests.enthalpy_benchmark.B.visualize.Visualize", "compass.landice.tests.enthalpy_benchmark.B.visualize.Visualize.run", "compass.landice.tests.enthalpy_benchmark.EnthalpyBenchmark", "compass.landice.tests.enthalpy_benchmark.run_model.RunModel", "compass.landice.tests.enthalpy_benchmark.run_model.RunModel.run", "compass.landice.tests.enthalpy_benchmark.run_model.RunModel.setup", "compass.landice.tests.enthalpy_benchmark.setup_mesh.SetupMesh", "compass.landice.tests.enthalpy_benchmark.setup_mesh.SetupMesh.run", "compass.landice.tests.greenland.Greenland", "compass.landice.tests.greenland.decomposition_test.DecompositionTest", "compass.landice.tests.greenland.decomposition_test.DecompositionTest.run", "compass.landice.tests.greenland.high_res_mesh.HighResMesh", "compass.landice.tests.greenland.high_res_mesh.HighResMesh.run", "compass.landice.tests.greenland.mesh.Mesh", "compass.landice.tests.greenland.mesh.Mesh.build_cell_width", "compass.landice.tests.greenland.mesh.Mesh.run", "compass.landice.tests.greenland.restart_test.RestartTest", "compass.landice.tests.greenland.restart_test.RestartTest.run", "compass.landice.tests.greenland.run_model.RunModel", "compass.landice.tests.greenland.run_model.RunModel.run", "compass.landice.tests.greenland.run_model.RunModel.setup", "compass.landice.tests.greenland.smoke_test.SmokeTest", "compass.landice.tests.greenland.smoke_test.SmokeTest.run", "compass.landice.tests.humboldt.Humboldt", "compass.landice.tests.humboldt.decomposition_test.DecompositionTest", "compass.landice.tests.humboldt.decomposition_test.DecompositionTest.validate", "compass.landice.tests.humboldt.mesh.Mesh", "compass.landice.tests.humboldt.mesh.Mesh.run", "compass.landice.tests.humboldt.mesh_gen.MeshGen", "compass.landice.tests.humboldt.mesh_gen.MeshGen.run", "compass.landice.tests.humboldt.restart_test.RestartTest", "compass.landice.tests.humboldt.restart_test.RestartTest.validate", "compass.landice.tests.humboldt.run_model.RunModel", "compass.landice.tests.humboldt.run_model.RunModel.run", "compass.landice.tests.hydro_radial.HydroRadial", "compass.landice.tests.hydro_radial.decomposition_test.DecompositionTest", "compass.landice.tests.hydro_radial.decomposition_test.DecompositionTest.run", "compass.landice.tests.hydro_radial.restart_test.RestartTest", "compass.landice.tests.hydro_radial.restart_test.RestartTest.run", "compass.landice.tests.hydro_radial.run_model.RunModel", "compass.landice.tests.hydro_radial.run_model.RunModel.run", "compass.landice.tests.hydro_radial.run_model.RunModel.setup", "compass.landice.tests.hydro_radial.setup_mesh.SetupMesh", "compass.landice.tests.hydro_radial.setup_mesh.SetupMesh.run", "compass.landice.tests.hydro_radial.spinup_test.SpinupTest", "compass.landice.tests.hydro_radial.spinup_test.SpinupTest.run", "compass.landice.tests.hydro_radial.steady_state_drift_test.SteadyStateDriftTest", "compass.landice.tests.hydro_radial.steady_state_drift_test.SteadyStateDriftTest.run", "compass.landice.tests.hydro_radial.visualize.Visualize", "compass.landice.tests.hydro_radial.visualize.Visualize.run", "compass.landice.tests.hydro_radial.visualize.visualize_hydro_radial", "compass.landice.tests.kangerlussuaq.Kangerlussuaq", "compass.landice.tests.kangerlussuaq.mesh.Mesh", "compass.landice.tests.kangerlussuaq.mesh.Mesh.run", "compass.landice.tests.kangerlussuaq.mesh_gen.MeshGen", "compass.landice.tests.kangerlussuaq.mesh_gen.MeshGen.run", "compass.landice.tests.koge_bugt_s.KogeBugtS", "compass.landice.tests.koge_bugt_s.mesh.Mesh", "compass.landice.tests.koge_bugt_s.mesh.Mesh.run", "compass.landice.tests.koge_bugt_s.mesh_gen.MeshGen", "compass.landice.tests.koge_bugt_s.mesh_gen.MeshGen.run", "compass.landice.tests.mismipplus.MISMIPplus", "compass.landice.tests.mismipplus.run_model.RunModel", "compass.landice.tests.mismipplus.run_model.RunModel.run", "compass.landice.tests.mismipplus.run_model.RunModel.setup", "compass.landice.tests.mismipplus.smoke_test.SmokeTest", "compass.landice.tests.mismipplus.smoke_test.SmokeTest.run", "compass.landice.tests.thwaites.Thwaites", "compass.landice.tests.thwaites.decomposition_test.DecompositionTest", "compass.landice.tests.thwaites.decomposition_test.DecompositionTest.run", "compass.landice.tests.thwaites.restart_test.RestartTest", "compass.landice.tests.thwaites.restart_test.RestartTest.run", "compass.landice.tests.thwaites.run_model.RunModel", "compass.landice.tests.thwaites.run_model.RunModel.run", "compass.landice.tests.thwaites.run_model.RunModel.setup", "Landice core", "calving_dt_convergence", "circular_shelf", "dome", "eismint2", "enthalpy_benchmark", "greenland", "humboldt", "hydro_radial", "Test groups", "kangerlussuaq", "koge_bugt_s", "mismipplus", "thwaites", "Anvil", "Badger", "Chrysalis", "CompyMcNodeFace", "Cori", "Machines", "ocean", "Ocean framework", "compass.ocean.Ocean", "compass.ocean.haney.compute_haney_number", "compass.ocean.iceshelf.adjust_ssh", "compass.ocean.iceshelf.compute_land_ice_pressure_and_draft", "compass.ocean.particles.remap_particles", "compass.ocean.particles.write", "compass.ocean.plot.plot_initial_state", "compass.ocean.plot.plot_vertical_grid", "compass.ocean.tests.baroclinic_channel.BaroclinicChannel", "compass.ocean.tests.baroclinic_channel.configure", "compass.ocean.tests.baroclinic_channel.decomp_test.DecompTest", "compass.ocean.tests.baroclinic_channel.decomp_test.DecompTest.configure", "compass.ocean.tests.baroclinic_channel.decomp_test.DecompTest.run", "compass.ocean.tests.baroclinic_channel.default.Default", "compass.ocean.tests.baroclinic_channel.default.Default.configure", "compass.ocean.tests.baroclinic_channel.default.Default.run", "compass.ocean.tests.baroclinic_channel.forward.Forward", "compass.ocean.tests.baroclinic_channel.forward.Forward.run", "compass.ocean.tests.baroclinic_channel.forward.Forward.setup", "compass.ocean.tests.baroclinic_channel.initial_state.InitialState", "compass.ocean.tests.baroclinic_channel.initial_state.InitialState.run", "compass.ocean.tests.baroclinic_channel.initial_state.InitialState.setup", "compass.ocean.tests.baroclinic_channel.restart_test.RestartTest", "compass.ocean.tests.baroclinic_channel.restart_test.RestartTest.configure", "compass.ocean.tests.baroclinic_channel.restart_test.RestartTest.run", "compass.ocean.tests.baroclinic_channel.rpe_test.RpeTest", "compass.ocean.tests.baroclinic_channel.rpe_test.RpeTest.configure", "compass.ocean.tests.baroclinic_channel.rpe_test.RpeTest.run", "compass.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis", "compass.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.run", "compass.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.setup", "compass.ocean.tests.baroclinic_channel.threads_test.ThreadsTest", "compass.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.configure", "compass.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.run", "compass.ocean.tests.drying_slope.DryingSlope", "compass.ocean.tests.drying_slope.default.Default", "compass.ocean.tests.drying_slope.default.Default.configure", "compass.ocean.tests.drying_slope.forward.Forward", "compass.ocean.tests.drying_slope.forward.Forward.run", "compass.ocean.tests.drying_slope.initial_state.InitialState", "compass.ocean.tests.drying_slope.initial_state.InitialState.run", "compass.ocean.tests.drying_slope.viz.Viz", "compass.ocean.tests.drying_slope.viz.Viz.run", "compass.ocean.tests.global_convergence.GlobalConvergence", "compass.ocean.tests.global_convergence.cosine_bell.CosineBell", "compass.ocean.tests.global_convergence.cosine_bell.CosineBell.configure", "compass.ocean.tests.global_convergence.cosine_bell.CosineBell.run", "compass.ocean.tests.global_convergence.cosine_bell.analysis.Analysis", "compass.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rmse", "compass.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.run", "compass.ocean.tests.global_convergence.cosine_bell.forward.Forward", "compass.ocean.tests.global_convergence.cosine_bell.forward.Forward.get_dt", "compass.ocean.tests.global_convergence.cosine_bell.forward.Forward.run", "compass.ocean.tests.global_convergence.cosine_bell.forward.Forward.setup", "compass.ocean.tests.global_convergence.cosine_bell.init.Init", "compass.ocean.tests.global_convergence.cosine_bell.init.Init.run", "compass.ocean.tests.global_ocean.GlobalOcean", "compass.ocean.tests.global_ocean.analysis_test.AnalysisTest", "compass.ocean.tests.global_ocean.analysis_test.AnalysisTest.configure", "compass.ocean.tests.global_ocean.analysis_test.AnalysisTest.run", "compass.ocean.tests.global_ocean.configure", "compass.ocean.tests.global_ocean.configure.configure_global_ocean", "compass.ocean.tests.global_ocean.daily_output_test.DailyOutputTest", "compass.ocean.tests.global_ocean.daily_output_test.DailyOutputTest.configure", "compass.ocean.tests.global_ocean.daily_output_test.DailyOutputTest.run", "compass.ocean.tests.global_ocean.decomp_test.DecompTest", "compass.ocean.tests.global_ocean.decomp_test.DecompTest.configure", "compass.ocean.tests.global_ocean.decomp_test.DecompTest.run", "compass.ocean.tests.global_ocean.dynamic_adjustment.DynamicAdjustment", "compass.ocean.tests.global_ocean.dynamic_adjustment.DynamicAdjustment.run", "compass.ocean.tests.global_ocean.files_for_e3sm.FilesForE3SM", "compass.ocean.tests.global_ocean.files_for_e3sm.FilesForE3SM.configure", "compass.ocean.tests.global_ocean.files_for_e3sm.FilesForE3SM.run", "compass.ocean.tests.global_ocean.files_for_e3sm.diagnostics_files.DiagnosticsFiles", "compass.ocean.tests.global_ocean.files_for_e3sm.diagnostics_files.DiagnosticsFiles.run", "compass.ocean.tests.global_ocean.files_for_e3sm.ocean_graph_partition.OceanGraphPartition", "compass.ocean.tests.global_ocean.files_for_e3sm.ocean_graph_partition.OceanGraphPartition.run", "compass.ocean.tests.global_ocean.files_for_e3sm.ocean_initial_condition.OceanInitialCondition", "compass.ocean.tests.global_ocean.files_for_e3sm.ocean_initial_condition.OceanInitialCondition.run", "compass.ocean.tests.global_ocean.files_for_e3sm.scrip.Scrip", "compass.ocean.tests.global_ocean.files_for_e3sm.scrip.Scrip.run", "compass.ocean.tests.global_ocean.files_for_e3sm.seaice_initial_condition.SeaiceInitialCondition", "compass.ocean.tests.global_ocean.files_for_e3sm.seaice_initial_condition.SeaiceInitialCondition.run", "compass.ocean.tests.global_ocean.forward.ForwardStep", "compass.ocean.tests.global_ocean.forward.ForwardStep.run", "compass.ocean.tests.global_ocean.forward.ForwardStep.setup", "compass.ocean.tests.global_ocean.forward.ForwardTestCase", "compass.ocean.tests.global_ocean.forward.ForwardTestCase.configure", "compass.ocean.tests.global_ocean.forward.ForwardTestCase.run", "compass.ocean.tests.global_ocean.init.Init", "compass.ocean.tests.global_ocean.init.Init.configure", "compass.ocean.tests.global_ocean.init.Init.run", "compass.ocean.tests.global_ocean.init.initial_state.InitialState", "compass.ocean.tests.global_ocean.init.initial_state.InitialState.run", "compass.ocean.tests.global_ocean.init.initial_state.InitialState.setup", "compass.ocean.tests.global_ocean.init.ssh_adjustment.SshAdjustment", "compass.ocean.tests.global_ocean.init.ssh_adjustment.SshAdjustment.run", "compass.ocean.tests.global_ocean.init.ssh_adjustment.SshAdjustment.setup", "compass.ocean.tests.global_ocean.mesh.Mesh", "compass.ocean.tests.global_ocean.mesh.Mesh.configure", "compass.ocean.tests.global_ocean.mesh.Mesh.run", "compass.ocean.tests.global_ocean.mesh.cull.cull_mesh", "compass.ocean.tests.global_ocean.mesh.ec30to60.EC30to60Mesh", "compass.ocean.tests.global_ocean.mesh.ec30to60.EC30to60Mesh.build_cell_width_lat_lon", "compass.ocean.tests.global_ocean.mesh.ec30to60.dynamic_adjustment.EC30to60DynamicAdjustment", "compass.ocean.tests.global_ocean.mesh.ec30to60.dynamic_adjustment.EC30to60DynamicAdjustment.configure", "compass.ocean.tests.global_ocean.mesh.ec30to60.dynamic_adjustment.EC30to60DynamicAdjustment.run", "compass.ocean.tests.global_ocean.mesh.mesh.MeshStep", "compass.ocean.tests.global_ocean.mesh.mesh.MeshStep.build_cell_width_lat_lon", "compass.ocean.tests.global_ocean.mesh.mesh.MeshStep.run", "compass.ocean.tests.global_ocean.mesh.mesh.MeshStep.setup", "compass.ocean.tests.global_ocean.mesh.qu240.QU240Mesh", "compass.ocean.tests.global_ocean.mesh.qu240.QU240Mesh.build_cell_width_lat_lon", "compass.ocean.tests.global_ocean.mesh.qu240.dynamic_adjustment.QU240DynamicAdjustment", "compass.ocean.tests.global_ocean.mesh.qu240.dynamic_adjustment.QU240DynamicAdjustment.configure", "compass.ocean.tests.global_ocean.mesh.qu240.dynamic_adjustment.QU240DynamicAdjustment.run", "compass.ocean.tests.global_ocean.mesh.so12to60.SO12to60Mesh", "compass.ocean.tests.global_ocean.mesh.so12to60.SO12to60Mesh.build_cell_width_lat_lon", "compass.ocean.tests.global_ocean.mesh.so12to60.dynamic_adjustment.SO12to60DynamicAdjustment", "compass.ocean.tests.global_ocean.mesh.so12to60.dynamic_adjustment.SO12to60DynamicAdjustment.configure", "compass.ocean.tests.global_ocean.mesh.so12to60.dynamic_adjustment.SO12to60DynamicAdjustment.run", "compass.ocean.tests.global_ocean.mesh.wc14.WC14Mesh", "compass.ocean.tests.global_ocean.mesh.wc14.WC14Mesh.build_cell_width_lat_lon", "compass.ocean.tests.global_ocean.mesh.wc14.dynamic_adjustment.WC14DynamicAdjustment", "compass.ocean.tests.global_ocean.mesh.wc14.dynamic_adjustment.WC14DynamicAdjustment.configure", "compass.ocean.tests.global_ocean.mesh.wc14.dynamic_adjustment.WC14DynamicAdjustment.run", "compass.ocean.tests.global_ocean.metadata.add_mesh_and_init_metadata", "compass.ocean.tests.global_ocean.metadata.get_e3sm_mesh_names", "compass.ocean.tests.global_ocean.performance_test.PerformanceTest", "compass.ocean.tests.global_ocean.performance_test.PerformanceTest.configure", "compass.ocean.tests.global_ocean.performance_test.PerformanceTest.run", "compass.ocean.tests.global_ocean.restart_test.RestartTest", "compass.ocean.tests.global_ocean.restart_test.RestartTest.configure", "compass.ocean.tests.global_ocean.restart_test.RestartTest.run", "compass.ocean.tests.global_ocean.threads_test.ThreadsTest", "compass.ocean.tests.global_ocean.threads_test.ThreadsTest.configure", "compass.ocean.tests.global_ocean.threads_test.ThreadsTest.run", "compass.ocean.tests.gotm.Gotm", "compass.ocean.tests.gotm.default.Default", "compass.ocean.tests.gotm.default.Default.validate", "compass.ocean.tests.gotm.default.analysis.Analysis", "compass.ocean.tests.gotm.default.analysis.Analysis.run", "compass.ocean.tests.gotm.default.forward.Forward", "compass.ocean.tests.gotm.default.forward.Forward.run", "compass.ocean.tests.gotm.default.init.Init", "compass.ocean.tests.gotm.default.init.Init.run", "compass.ocean.tests.hurricane.Hurricane", "compass.ocean.tests.hurricane.analysis.Analysis", "compass.ocean.tests.hurricane.analysis.Analysis.read_pointstats", "compass.ocean.tests.hurricane.analysis.Analysis.read_station_data", "compass.ocean.tests.hurricane.analysis.Analysis.read_station_file", "compass.ocean.tests.hurricane.analysis.Analysis.run", "compass.ocean.tests.hurricane.analysis.Analysis.setup", "compass.ocean.tests.hurricane.configure", "compass.ocean.tests.hurricane.forward.Forward", "compass.ocean.tests.hurricane.forward.Forward.configure", "compass.ocean.tests.hurricane.forward.Forward.run", "compass.ocean.tests.hurricane.forward.forward.ForwardStep", "compass.ocean.tests.hurricane.forward.forward.ForwardStep.run", "compass.ocean.tests.hurricane.forward.forward.ForwardStep.setup", "compass.ocean.tests.hurricane.init.Init", "compass.ocean.tests.hurricane.init.Init.configure", "compass.ocean.tests.hurricane.init.Init.run", "compass.ocean.tests.hurricane.init.create_pointstats_file.CreatePointstatsFile", "compass.ocean.tests.hurricane.init.create_pointstats_file.CreatePointstatsFile.create_pointstats_file", "compass.ocean.tests.hurricane.init.create_pointstats_file.CreatePointstatsFile.run", "compass.ocean.tests.hurricane.init.initial_state.InitialState", "compass.ocean.tests.hurricane.init.initial_state.InitialState.run", "compass.ocean.tests.hurricane.init.initial_state.InitialState.setup", "compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing", "compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing.interpolate_data_to_grid", "compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing.plot_interp_data", "compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing.run", "compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing.write_to_file", "compass.ocean.tests.hurricane.mesh.Mesh", "compass.ocean.tests.hurricane.mesh.Mesh.configure", "compass.ocean.tests.hurricane.mesh.Mesh.run", "compass.ocean.tests.hurricane.mesh.dequ120at30cr10rr2.DEQU120at30cr10rr2Mesh", "compass.ocean.tests.hurricane.mesh.dequ120at30cr10rr2.DEQU120at30cr10rr2Mesh.build_cell_width_lat_lon", "compass.ocean.tests.ice_shelf_2d.IceShelf2d", "compass.ocean.tests.ice_shelf_2d.configure", "compass.ocean.tests.ice_shelf_2d.default.Default", "compass.ocean.tests.ice_shelf_2d.default.Default.configure", "compass.ocean.tests.ice_shelf_2d.default.Default.run", "compass.ocean.tests.ice_shelf_2d.forward.Forward", "compass.ocean.tests.ice_shelf_2d.forward.Forward.run", "compass.ocean.tests.ice_shelf_2d.forward.Forward.setup", "compass.ocean.tests.ice_shelf_2d.initial_state.InitialState", "compass.ocean.tests.ice_shelf_2d.initial_state.InitialState.run", "compass.ocean.tests.ice_shelf_2d.restart_test.RestartTest", "compass.ocean.tests.ice_shelf_2d.restart_test.RestartTest.configure", "compass.ocean.tests.ice_shelf_2d.restart_test.RestartTest.run", "compass.ocean.tests.ice_shelf_2d.ssh_adjustment.SshAdjustment", "compass.ocean.tests.ice_shelf_2d.ssh_adjustment.SshAdjustment.run", "compass.ocean.tests.ice_shelf_2d.ssh_adjustment.SshAdjustment.setup", "compass.ocean.tests.ice_shelf_2d.viz.Viz", "compass.ocean.tests.ice_shelf_2d.viz.Viz.run", "compass.ocean.tests.internal_wave.InternalWave", "compass.ocean.tests.internal_wave.default.Default", "compass.ocean.tests.internal_wave.default.Default.validate", "compass.ocean.tests.internal_wave.forward.Forward", "compass.ocean.tests.internal_wave.forward.Forward.run", "compass.ocean.tests.internal_wave.initial_state.InitialState", "compass.ocean.tests.internal_wave.initial_state.InitialState.run", "compass.ocean.tests.internal_wave.rpe_test.RpeTest", "compass.ocean.tests.internal_wave.rpe_test.analysis.Analysis", "compass.ocean.tests.internal_wave.rpe_test.analysis.Analysis.run", "compass.ocean.tests.internal_wave.ten_day_test.TenDayTest", "compass.ocean.tests.internal_wave.ten_day_test.TenDayTest.validate", "compass.ocean.tests.internal_wave.viz.Viz", "compass.ocean.tests.internal_wave.viz.Viz.run", "compass.ocean.tests.isomip_plus.IsomipPlus", "compass.ocean.tests.isomip_plus.evap.update_evaporation_flux", "compass.ocean.tests.isomip_plus.forward.Forward", "compass.ocean.tests.isomip_plus.forward.Forward.run", "compass.ocean.tests.isomip_plus.forward.Forward.setup", "compass.ocean.tests.isomip_plus.geom.interpolate_ocean_mask", "compass.ocean.tests.isomip_plus.geom.process_input_geometry", "compass.ocean.tests.isomip_plus.initial_state.InitialState", "compass.ocean.tests.isomip_plus.initial_state.InitialState.run", "compass.ocean.tests.isomip_plus.misomip.Misomip", "compass.ocean.tests.isomip_plus.misomip.Misomip.run", "compass.ocean.tests.isomip_plus.ocean_test.OceanTest", "compass.ocean.tests.isomip_plus.ocean_test.OceanTest.configure", "compass.ocean.tests.isomip_plus.ocean_test.OceanTest.run", "compass.ocean.tests.isomip_plus.ssh_adjustment.SshAdjustment", "compass.ocean.tests.isomip_plus.ssh_adjustment.SshAdjustment.run", "compass.ocean.tests.isomip_plus.ssh_adjustment.SshAdjustment.setup", "compass.ocean.tests.isomip_plus.streamfunction.Streamfunction", "compass.ocean.tests.isomip_plus.streamfunction.Streamfunction.run", "compass.ocean.tests.isomip_plus.viz.Viz", "compass.ocean.tests.isomip_plus.viz.Viz.run", "compass.ocean.tests.isomip_plus.viz.file_complete", "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter", "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.images_to_movies", "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_3d_field_top_bot_section", "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_barotropic_streamfunction", "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_horiz_series", "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_ice_shelf_boundary_variables", "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_layer_interfaces", "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_melt_rates", "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_overturning_streamfunction", "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_potential_density", "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_salinity", "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter.plot_temperature", "compass.ocean.tests.isomip_plus.viz.plot.TimeSeriesPlotter", "compass.ocean.tests.isomip_plus.viz.plot.TimeSeriesPlotter.plot_melt_time_series", "compass.ocean.tests.isomip_plus.viz.plot.TimeSeriesPlotter.plot_time_series", "compass.ocean.tests.planar_convergence.PlanarConvergence", "compass.ocean.tests.planar_convergence.conv_init.ConvInit", "compass.ocean.tests.planar_convergence.conv_init.ConvInit.run", "compass.ocean.tests.planar_convergence.conv_test_case.ConvTestCase", "compass.ocean.tests.planar_convergence.conv_test_case.ConvTestCase.configure", "compass.ocean.tests.planar_convergence.conv_test_case.ConvTestCase.run", "compass.ocean.tests.planar_convergence.conv_test_case.ConvTestCase.update_cores", "compass.ocean.tests.planar_convergence.forward.Forward", "compass.ocean.tests.planar_convergence.forward.Forward.get_dt_duration", "compass.ocean.tests.planar_convergence.forward.Forward.run", "compass.ocean.tests.planar_convergence.forward.Forward.setup", "compass.ocean.tests.planar_convergence.horizontal_advection.HorizontalAdvection", "compass.ocean.tests.planar_convergence.horizontal_advection.HorizontalAdvection.configure", "compass.ocean.tests.planar_convergence.horizontal_advection.HorizontalAdvection.run", "compass.ocean.tests.planar_convergence.horizontal_advection.analysis.Analysis", "compass.ocean.tests.planar_convergence.horizontal_advection.analysis.Analysis.rmse", "compass.ocean.tests.planar_convergence.horizontal_advection.analysis.Analysis.run", "compass.ocean.tests.planar_convergence.horizontal_advection.init.Init", "compass.ocean.tests.planar_convergence.horizontal_advection.init.Init.run", "compass.ocean.tests.soma.Soma", "compass.ocean.tests.soma.analysis.Analysis", "compass.ocean.tests.soma.analysis.Analysis.run", "compass.ocean.tests.soma.forward.Forward", "compass.ocean.tests.soma.forward.Forward.run", "compass.ocean.tests.soma.initial_state.InitialState", "compass.ocean.tests.soma.initial_state.InitialState.run", "compass.ocean.tests.soma.soma_test_case.SomaTestCase", "compass.ocean.tests.soma.soma_test_case.SomaTestCase.validate", "compass.ocean.tests.sphere_transport.SphereTransport", "compass.ocean.tests.sphere_transport.correlated_tracers_2d.CorrelatedTracers2D", "compass.ocean.tests.sphere_transport.correlated_tracers_2d.CorrelatedTracers2D.configure", "compass.ocean.tests.sphere_transport.correlated_tracers_2d.CorrelatedTracers2D.run", "compass.ocean.tests.sphere_transport.correlated_tracers_2d.analysis.Analysis", "compass.ocean.tests.sphere_transport.correlated_tracers_2d.analysis.Analysis.run", "compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.Forward", "compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.Forward.get_timestep_str", "compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.Forward.run", "compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.Forward.setup", "compass.ocean.tests.sphere_transport.correlated_tracers_2d.init.Init", "compass.ocean.tests.sphere_transport.correlated_tracers_2d.init.Init.run", "compass.ocean.tests.sphere_transport.correlated_tracers_2d.mesh.Mesh", "compass.ocean.tests.sphere_transport.correlated_tracers_2d.mesh.Mesh.build_cell_width_lat_lon", "compass.ocean.tests.sphere_transport.correlated_tracers_2d.mesh.Mesh.run", "compass.ocean.tests.sphere_transport.divergent_2d.Divergent2D", "compass.ocean.tests.sphere_transport.divergent_2d.Divergent2D.configure", "compass.ocean.tests.sphere_transport.divergent_2d.Divergent2D.run", "compass.ocean.tests.sphere_transport.divergent_2d.analysis.Analysis", "compass.ocean.tests.sphere_transport.divergent_2d.analysis.Analysis.run", "compass.ocean.tests.sphere_transport.divergent_2d.forward.Forward", "compass.ocean.tests.sphere_transport.divergent_2d.forward.Forward.get_timestep_str", "compass.ocean.tests.sphere_transport.divergent_2d.forward.Forward.run", "compass.ocean.tests.sphere_transport.divergent_2d.forward.Forward.setup", "compass.ocean.tests.sphere_transport.divergent_2d.init.Init", "compass.ocean.tests.sphere_transport.divergent_2d.init.Init.run", "compass.ocean.tests.sphere_transport.divergent_2d.mesh.Mesh", "compass.ocean.tests.sphere_transport.divergent_2d.mesh.Mesh.build_cell_width_lat_lon", "compass.ocean.tests.sphere_transport.divergent_2d.mesh.Mesh.run", "compass.ocean.tests.sphere_transport.nondivergent_2d.Nondivergent2D", "compass.ocean.tests.sphere_transport.nondivergent_2d.Nondivergent2D.configure", "compass.ocean.tests.sphere_transport.nondivergent_2d.Nondivergent2D.run", "compass.ocean.tests.sphere_transport.nondivergent_2d.analysis.Analysis", "compass.ocean.tests.sphere_transport.nondivergent_2d.analysis.Analysis.run", "compass.ocean.tests.sphere_transport.nondivergent_2d.forward.Forward", "compass.ocean.tests.sphere_transport.nondivergent_2d.forward.Forward.get_timestep_str", "compass.ocean.tests.sphere_transport.nondivergent_2d.forward.Forward.run", "compass.ocean.tests.sphere_transport.nondivergent_2d.forward.Forward.setup", "compass.ocean.tests.sphere_transport.nondivergent_2d.init.Init", "compass.ocean.tests.sphere_transport.nondivergent_2d.init.Init.run", "compass.ocean.tests.sphere_transport.nondivergent_2d.mesh.Mesh", "compass.ocean.tests.sphere_transport.nondivergent_2d.mesh.Mesh.build_cell_width_lat_lon", "compass.ocean.tests.sphere_transport.nondivergent_2d.mesh.Mesh.run", "compass.ocean.tests.sphere_transport.process_output.compute_convergence_rates", "compass.ocean.tests.sphere_transport.process_output.compute_error_from_output_ncfile", "compass.ocean.tests.sphere_transport.process_output.make_convergence_arrays", "compass.ocean.tests.sphere_transport.process_output.plot_convergence", "compass.ocean.tests.sphere_transport.process_output.plot_filament", "compass.ocean.tests.sphere_transport.process_output.plot_over_and_undershoot_errors", "compass.ocean.tests.sphere_transport.process_output.plot_sol", "compass.ocean.tests.sphere_transport.process_output.print_data_as_csv", "compass.ocean.tests.sphere_transport.process_output.print_error_conv_table", "compass.ocean.tests.sphere_transport.process_output.read_ncl_rgb_file", "compass.ocean.tests.sphere_transport.rotation_2d.Rotation2D", "compass.ocean.tests.sphere_transport.rotation_2d.Rotation2D.configure", "compass.ocean.tests.sphere_transport.rotation_2d.Rotation2D.run", "compass.ocean.tests.sphere_transport.rotation_2d.analysis.Analysis", "compass.ocean.tests.sphere_transport.rotation_2d.analysis.Analysis.run", "compass.ocean.tests.sphere_transport.rotation_2d.forward.Forward", "compass.ocean.tests.sphere_transport.rotation_2d.forward.Forward.get_timestep_str", "compass.ocean.tests.sphere_transport.rotation_2d.forward.Forward.run", "compass.ocean.tests.sphere_transport.rotation_2d.forward.Forward.setup", "compass.ocean.tests.sphere_transport.rotation_2d.init.Init", "compass.ocean.tests.sphere_transport.rotation_2d.init.Init.run", "compass.ocean.tests.sphere_transport.rotation_2d.mesh.Mesh", "compass.ocean.tests.sphere_transport.rotation_2d.mesh.Mesh.build_cell_width_lat_lon", "compass.ocean.tests.sphere_transport.rotation_2d.mesh.Mesh.run", "compass.ocean.tests.ziso.Ziso", "compass.ocean.tests.ziso.ZisoTestCase", "compass.ocean.tests.ziso.ZisoTestCase.configure", "compass.ocean.tests.ziso.ZisoTestCase.run", "compass.ocean.tests.ziso.configure", "compass.ocean.tests.ziso.forward.Forward", "compass.ocean.tests.ziso.forward.Forward.run", "compass.ocean.tests.ziso.forward.Forward.setup", "compass.ocean.tests.ziso.initial_state.InitialState", "compass.ocean.tests.ziso.initial_state.InitialState.run", "compass.ocean.tests.ziso.with_frazil.WithFrazil", "compass.ocean.tests.ziso.with_frazil.WithFrazil.configure", "compass.ocean.tests.ziso.with_frazil.WithFrazil.run", "compass.ocean.vertical.grid_1d.generate_1d_grid", "compass.ocean.vertical.grid_1d.write_1d_grid", "compass.ocean.vertical.init_vertical_coord", "compass.ocean.vertical.partial_cells.alter_bottom_depth", "compass.ocean.vertical.partial_cells.alter_ssh", "compass.ocean.vertical.zlevel.compute_min_max_level_cell", "compass.ocean.vertical.zlevel.compute_z_level_layer_thickness", "compass.ocean.vertical.zlevel.compute_z_level_resting_thickness", "compass.ocean.vertical.zlevel.init_z_level_vertical_coord", "compass.ocean.vertical.zstar.init_z_star_vertical_coord", "Ocean core", "baroclinic_channel", "drying_slope", "global_convergence", "global_ocean", "gotm", "hurricane", "ice_shelf_2d", "Test groups", "internal_wave", "isomip_plus", "planar_convergence", "soma", "sphere_transport", "spherical_harmonic_transform", "ziso", "Organization of Tests", "Overview", "Quick Start for Developers", "Troubleshooting", "Glossary", "compass", "Developer Tutorial: Adding a parameter study", "Developer Tutorial: Adding a new test group", "Developer Tutorial: Porting a legacy COMPASS test group", "Config Files", "Framework", "Landice core", "Test suites", "calving_dt_convergence", "circular_shelf", "dome", "eismint2", "enthalpy_benchmark", "greenland", "humboldt", "hydro_radial", "Test Groups", "kangerlussuaq", "koge_bugt_s", "mismipplus", "thwaites", "Anvil", "Badger", "Chrysalis", "CompyMcNodeFace", "Cori", "Machines", "Ice shelf-cavities", "Framework", "Vertical coordinate", "Ocean core", "Test suites", "baroclinic_channel", "drying_slope", "global_convergence", "global_ocean", "gotm", "hurricane", "ice_shelf_2d", "Test groups", "internal_wave", "isomip_plus", "planar_convergence", "soma", "sphere_transport", "spherical_harmonic_transform", "ziso", "Quick Start for Users", "Test Cases", "Test Suites", "Code and Documentation Versions"], "terms": {"date": [0, 1, 3, 6, 31, 201, 589, 593, 607, 614, 645, 651], "2021": [0, 1], "07": 0, "30": [0, 1, 8, 42, 457, 593, 603, 604, 605, 620, 623, 635, 643, 644, 645, 648, 651, 655, 656], "contributor": [0, 1, 3], "xylar": [0, 1, 8, 612, 614, 636, 645], "asai": [0, 1, 614, 645, 651], "davi": [0, 1, 614, 645, 651], "we": [0, 1, 3, 7, 8, 202, 203, 204, 205, 207, 208, 209, 213, 214, 218, 220, 222, 227, 590, 591, 596, 598, 599, 601, 604, 605, 606, 607, 610, 611, 612, 613, 614, 634, 635, 636, 637, 639, 645, 648, 649, 653, 654, 655, 657, 659], "would": [0, 1, 3, 6, 8, 11, 20, 24, 40, 47, 52, 69, 76, 81, 93, 108, 129, 144, 158, 165, 188, 198, 239, 260, 306, 318, 407, 415, 423, 448, 605, 606, 607, 608, 612, 613, 619, 636, 637, 639, 645, 657], "like": [0, 1, 3, 6, 7, 8, 222, 593, 604, 605, 606, 607, 608, 610, 611, 612, 613, 614, 636, 644, 645, 652, 655, 657, 658], "have": [0, 1, 3, 5, 6, 7, 8, 22, 32, 76, 81, 93, 108, 144, 158, 165, 188, 198, 202, 208, 216, 218, 220, 222, 270, 291, 485, 503, 517, 531, 555, 593, 595, 599, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 620, 622, 624, 630, 631, 632, 633, 634, 635, 636, 637, 639, 642, 644, 645, 648, 649, 650, 651, 652, 653, 656, 657, 658, 659], "wai": [0, 1, 6, 7, 11, 44, 49, 220, 222, 440, 599, 605, 606, 607, 608, 610, 611, 612, 613, 624, 636, 639, 645, 651], "download": [0, 1, 6, 11, 12, 19, 95, 110, 131, 146, 147, 167, 190, 200, 201, 204, 207, 213, 214, 241, 244, 253, 308, 317, 320, 333, 375, 382, 391, 409, 417, 438, 450, 551, 573, 589, 601, 606, 607, 614, 616, 624, 657, 659], "file": [0, 6, 7, 9, 11, 12, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 31, 34, 35, 39, 55, 56, 57, 58, 61, 64, 65, 66, 67, 68, 69, 73, 76, 81, 85, 87, 93, 95, 100, 102, 108, 110, 129, 131, 144, 146, 158, 165, 167, 168, 174, 187, 188, 190, 193, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 213, 214, 216, 220, 227, 228, 229, 230, 241, 244, 253, 280, 291, 293, 296, 298, 300, 302, 304, 306, 324, 327, 330, 341, 346, 349, 350, 373, 386, 387, 392, 396, 409, 417, 435, 438, 440, 450, 455, 456, 458, 460, 486, 543, 548, 551, 573, 580, 589, 590, 591, 593, 595, 596, 598, 599, 601, 603, 604, 606, 607, 608, 609, 610, 611, 613, 617, 619, 620, 621, 622, 623, 624, 625, 627, 628, 630, 632, 635, 636, 639, 641, 642, 644, 645, 648, 651, 652, 654, 655, 657, 658], "an": [0, 3, 4, 6, 7, 8, 11, 12, 16, 20, 35, 40, 42, 43, 68, 69, 106, 117, 172, 202, 204, 205, 207, 209, 213, 214, 220, 222, 228, 277, 280, 291, 293, 296, 298, 300, 302, 304, 327, 336, 341, 346, 349, 350, 351, 361, 439, 443, 445, 453, 458, 465, 466, 467, 472, 488, 497, 506, 509, 520, 523, 534, 537, 543, 544, 545, 548, 551, 558, 561, 590, 591, 593, 594, 596, 598, 599, 603, 604, 607, 608, 609, 610, 613, 614, 617, 619, 620, 622, 624, 629, 630, 632, 636, 637, 639, 641, 643, 645, 650, 651, 653, 654, 655, 656, 657, 658, 659], "onlin": [0, 614, 645], "instead": [0, 1, 6, 8, 63, 215, 220, 285, 324, 605, 606, 611, 612, 613, 617, 619, 624, 631, 653, 654, 655, 657, 659], "gener": [0, 1, 3, 4, 5, 7, 8, 14, 15, 17, 19, 47, 69, 95, 110, 131, 146, 167, 190, 200, 201, 208, 222, 228, 241, 244, 253, 360, 361, 363, 365, 367, 409, 417, 420, 438, 450, 573, 579, 589, 590, 591, 592, 593, 594, 595, 596, 598, 599, 601, 604, 605, 606, 611, 612, 613, 614, 617, 618, 619, 620, 623, 624, 626, 627, 628, 629, 630, 636, 643, 644, 645, 646, 647, 652, 654, 655, 657], "them": [0, 1, 7, 8, 21, 58, 206, 216, 220, 592, 593, 594, 600, 605, 606, 607, 609, 611, 612, 613, 617, 634, 636, 641, 645, 647, 657, 658], "each": [0, 1, 3, 6, 7, 8, 23, 26, 36, 42, 43, 65, 80, 90, 92, 99, 105, 107, 114, 120, 125, 136, 138, 143, 148, 155, 162, 164, 171, 173, 181, 186, 192, 195, 197, 202, 203, 204, 205, 206, 207, 208, 209, 214, 220, 222, 224, 225, 228, 235, 238, 247, 250, 256, 269, 280, 282, 287, 290, 291, 292, 295, 311, 314, 323, 327, 329, 338, 341, 343, 346, 348, 353, 356, 359, 379, 385, 399, 406, 414, 447, 461, 469, 476, 477, 484, 502, 516, 530, 542, 543, 544, 548, 554, 569, 578, 581, 582, 583, 584, 585, 586, 587, 588, 590, 591, 592, 593, 594, 596, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 609, 611, 612, 613, 614, 617, 618, 621, 623, 624, 636, 639, 640, 642, 643, 644, 645, 647, 648, 650, 651, 652, 653, 654, 655, 657, 659], "time": [0, 1, 6, 7, 8, 11, 23, 76, 81, 93, 108, 144, 158, 165, 188, 198, 202, 204, 205, 206, 207, 209, 213, 214, 222, 228, 248, 264, 274, 280, 285, 288, 291, 306, 309, 327, 336, 341, 346, 351, 354, 357, 370, 392, 393, 394, 427, 436, 441, 445, 455, 456, 458, 460, 468, 479, 505, 506, 519, 520, 533, 534, 543, 547, 548, 557, 558, 590, 591, 592, 593, 594, 595, 596, 598, 599, 600, 602, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 618, 619, 620, 621, 622, 623, 624, 625, 630, 632, 635, 637, 641, 642, 645, 647, 648, 649, 650, 651, 653, 656, 657, 659], "run": [0, 5, 7, 11, 14, 15, 16, 17, 22, 23, 24, 31, 39, 40, 47, 52, 57, 58, 60, 64, 65, 66, 67, 69, 74, 76, 79, 81, 89, 91, 93, 98, 104, 106, 108, 129, 135, 142, 144, 147, 150, 156, 158, 161, 163, 165, 170, 188, 191, 194, 196, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 213, 214, 216, 218, 220, 222, 225, 236, 239, 245, 251, 260, 264, 270, 273, 280, 284, 285, 288, 291, 293, 306, 309, 318, 327, 336, 341, 346, 351, 354, 357, 365, 371, 377, 380, 383, 392, 404, 407, 412, 415, 423, 428, 436, 441, 445, 448, 478, 479, 485, 493, 497, 503, 505, 517, 519, 531, 533, 544, 555, 557, 567, 571, 576, 589, 590, 591, 592, 593, 594, 595, 596, 598, 599, 600, 601, 602, 603, 604, 606, 608, 609, 610, 611, 614, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 641, 642, 643, 644, 645, 647, 648, 650, 652, 653, 654, 655, 656, 658, 659], "The": [0, 1, 3, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 26, 28, 29, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 47, 48, 52, 56, 57, 58, 60, 61, 63, 64, 65, 66, 67, 68, 69, 72, 74, 76, 79, 80, 81, 83, 85, 89, 90, 91, 92, 93, 95, 96, 98, 99, 100, 104, 105, 106, 107, 108, 110, 111, 113, 114, 115, 117, 118, 120, 121, 123, 125, 126, 129, 131, 132, 135, 136, 137, 138, 139, 142, 143, 144, 146, 147, 148, 150, 152, 154, 155, 156, 158, 161, 162, 163, 164, 165, 167, 168, 170, 171, 172, 173, 174, 178, 180, 181, 183, 185, 186, 188, 190, 191, 192, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 220, 222, 223, 225, 226, 227, 229, 230, 232, 233, 235, 236, 238, 239, 241, 242, 244, 245, 247, 248, 250, 251, 253, 254, 256, 258, 260, 262, 264, 267, 270, 271, 273, 277, 280, 284, 285, 288, 291, 293, 295, 296, 298, 300, 302, 304, 306, 309, 312, 315, 318, 321, 324, 325, 327, 330, 334, 336, 339, 341, 344, 346, 349, 350, 351, 354, 357, 361, 363, 365, 367, 370, 377, 380, 383, 386, 389, 392, 397, 400, 403, 404, 406, 407, 409, 410, 412, 414, 415, 417, 418, 421, 423, 425, 427, 428, 430, 432, 435, 436, 438, 439, 440, 441, 443, 445, 448, 450, 451, 453, 456, 458, 459, 460, 462, 463, 464, 468, 472, 474, 478, 482, 485, 486, 488, 491, 493, 495, 497, 500, 503, 505, 509, 511, 514, 517, 519, 523, 525, 528, 531, 533, 537, 539, 545, 552, 555, 557, 561, 563, 567, 569, 570, 571, 573, 574, 576, 578, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 614, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658], "primari": [0, 3, 6, 8, 659], "motiv": 0, "thi": [0, 1, 3, 4, 6, 7, 8, 11, 12, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 31, 33, 39, 40, 41, 44, 45, 47, 48, 49, 50, 52, 53, 57, 61, 63, 68, 69, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 270, 272, 273, 275, 277, 278, 279, 280, 281, 284, 285, 286, 288, 289, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 312, 313, 315, 316, 318, 319, 321, 322, 324, 325, 326, 327, 328, 330, 331, 332, 334, 335, 336, 337, 339, 340, 341, 342, 344, 345, 346, 347, 349, 350, 351, 352, 354, 355, 357, 358, 360, 361, 363, 364, 365, 366, 367, 368, 369, 370, 374, 377, 378, 380, 381, 383, 384, 386, 388, 389, 390, 392, 395, 397, 398, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 471, 472, 473, 474, 478, 480, 482, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 503, 504, 505, 506, 507, 509, 510, 511, 512, 513, 514, 517, 518, 519, 520, 521, 523, 524, 525, 526, 527, 528, 531, 532, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 552, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 589, 590, 591, 592, 593, 595, 596, 598, 599, 601, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 617, 618, 619, 620, 621, 622, 623, 624, 627, 628, 629, 630, 635, 636, 637, 639, 641, 643, 644, 645, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 659], "i": [0, 3, 6, 7, 8, 11, 12, 23, 31, 34, 35, 40, 47, 48, 52, 57, 58, 62, 63, 64, 68, 69, 76, 81, 85, 93, 100, 108, 129, 144, 150, 158, 165, 170, 172, 174, 188, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 226, 227, 228, 239, 260, 264, 280, 285, 291, 306, 318, 330, 380, 394, 407, 415, 423, 436, 439, 440, 448, 456, 460, 493, 495, 497, 548, 571, 574, 581, 587, 588, 589, 590, 591, 592, 593, 595, 596, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 617, 618, 619, 620, 621, 622, 623, 624, 625, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659], "option": [0, 6, 7, 11, 12, 14, 15, 17, 20, 21, 22, 23, 24, 25, 26, 31, 32, 33, 34, 35, 36, 40, 46, 47, 48, 51, 52, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 76, 80, 81, 85, 87, 90, 92, 93, 99, 100, 102, 105, 107, 108, 114, 117, 119, 120, 124, 125, 129, 136, 138, 143, 144, 148, 155, 158, 162, 164, 165, 171, 173, 174, 176, 181, 186, 188, 192, 195, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 220, 222, 224, 228, 229, 230, 232, 234, 235, 237, 238, 239, 246, 247, 249, 250, 255, 256, 259, 260, 268, 276, 281, 284, 286, 289, 294, 295, 306, 310, 313, 318, 322, 324, 328, 330, 337, 342, 347, 349, 350, 352, 355, 358, 378, 380, 384, 398, 403, 405, 406, 407, 413, 414, 415, 423, 436, 445, 446, 448, 458, 459, 460, 462, 463, 464, 468, 475, 479, 481, 483, 493, 501, 508, 515, 522, 529, 536, 543, 553, 560, 568, 569, 570, 571, 577, 578, 579, 581, 582, 583, 587, 588, 589, 590, 591, 592, 593, 594, 596, 598, 599, 600, 601, 602, 603, 604, 608, 610, 611, 614, 617, 629, 639, 641, 657, 658], "avoid": [0, 1, 6, 605, 612, 613, 647], "consum": [0, 8, 605, 611, 612, 641, 645, 659], "mesh": [0, 1, 6, 11, 56, 73, 74, 76, 79, 83, 85, 89, 91, 93, 96, 98, 100, 111, 113, 132, 137, 147, 150, 154, 156, 158, 168, 170, 180, 185, 187, 193, 202, 203, 204, 205, 206, 209, 213, 222, 224, 227, 228, 236, 242, 262, 267, 270, 271, 273, 277, 280, 284, 285, 288, 291, 293, 296, 298, 302, 304, 306, 309, 312, 315, 349, 350, 351, 354, 357, 367, 377, 380, 383, 386, 389, 392, 393, 410, 425, 439, 441, 456, 468, 472, 474, 478, 482, 485, 486, 495, 497, 500, 503, 505, 509, 514, 517, 519, 523, 528, 531, 533, 537, 542, 544, 545, 550, 552, 555, 557, 561, 567, 574, 576, 581, 587, 588, 590, 591, 594, 596, 598, 599, 600, 601, 604, 605, 606, 607, 609, 610, 613, 614, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 639, 641, 642, 643, 644, 646, 648, 650, 651, 652, 653, 654, 655, 656, 657, 659], "initi": [0, 7, 8, 11, 83, 96, 98, 111, 132, 137, 139, 147, 152, 154, 168, 170, 172, 178, 180, 183, 185, 203, 204, 205, 206, 207, 209, 213, 214, 222, 226, 228, 229, 236, 242, 262, 266, 277, 279, 280, 284, 285, 288, 291, 293, 296, 298, 300, 302, 304, 306, 309, 312, 315, 324, 327, 336, 341, 346, 349, 350, 351, 354, 357, 361, 367, 377, 380, 383, 389, 410, 425, 435, 441, 472, 491, 495, 497, 509, 523, 537, 543, 548, 561, 567, 574, 576, 590, 591, 592, 593, 594, 596, 598, 599, 600, 601, 602, 604, 605, 606, 608, 609, 610, 611, 613, 614, 617, 619, 620, 621, 622, 624, 625, 626, 629, 630, 637, 639, 641, 642, 643, 644, 645, 648, 650, 651, 653, 656, 658], "condit": [0, 11, 83, 96, 98, 111, 132, 137, 139, 147, 152, 154, 168, 170, 172, 178, 180, 183, 185, 203, 204, 205, 206, 207, 209, 213, 214, 222, 228, 229, 236, 242, 262, 266, 277, 279, 280, 284, 285, 288, 291, 293, 296, 298, 300, 302, 304, 306, 309, 312, 315, 327, 336, 341, 346, 349, 350, 351, 354, 357, 361, 367, 377, 380, 383, 389, 410, 425, 441, 472, 495, 497, 509, 523, 537, 543, 561, 567, 574, 576, 590, 591, 592, 593, 594, 596, 598, 599, 600, 601, 602, 604, 605, 606, 609, 610, 611, 613, 614, 617, 619, 620, 621, 622, 623, 624, 625, 626, 629, 630, 637, 641, 642, 643, 645, 647, 648, 650, 651, 653, 656, 658], "faster": [0, 8, 607, 624], "regress": [0, 1, 3, 266, 279, 590, 593, 598, 599, 605, 609, 610, 612, 613, 617, 619, 621, 626, 641, 642, 645, 650, 651, 653, 656, 657, 659], "mpa": [0, 6, 7, 9, 10, 11, 12, 23, 28, 39, 56, 59, 61, 64, 65, 66, 67, 73, 78, 88, 103, 128, 134, 140, 149, 160, 177, 182, 187, 193, 201, 203, 204, 205, 206, 209, 215, 216, 217, 218, 219, 220, 222, 223, 224, 231, 239, 257, 260, 264, 266, 267, 273, 279, 280, 291, 293, 296, 302, 304, 306, 309, 312, 321, 327, 330, 336, 341, 346, 349, 351, 360, 365, 369, 371, 380, 383, 392, 393, 397, 402, 407, 420, 423, 434, 436, 439, 456, 468, 471, 474, 478, 482, 490, 493, 499, 500, 505, 506, 514, 519, 520, 528, 533, 534, 543, 548, 552, 557, 558, 566, 571, 580, 589, 590, 591, 592, 593, 594, 595, 596, 598, 599, 600, 601, 602, 603, 604, 609, 610, 611, 612, 613, 614, 616, 631, 632, 633, 634, 635, 636, 637, 639, 640, 641, 642, 645, 646, 647, 650, 651, 654, 655, 656, 658, 659], "compon": [0, 6, 201, 589, 593, 605, 606, 610, 612, 613, 614, 636, 637, 647], "forward": [0, 1, 8, 11, 14, 15, 17, 76, 81, 93, 98, 108, 129, 144, 147, 158, 165, 170, 188, 198, 201, 207, 214, 222, 236, 248, 264, 280, 285, 288, 291, 327, 336, 341, 346, 351, 354, 357, 370, 392, 404, 427, 477, 497, 567, 576, 589, 605, 606, 614, 619, 620, 621, 622, 623, 625, 630, 637, 642, 643, 644, 648, 650, 652, 653, 655, 656], "mode": [0, 1, 6, 14, 15, 17, 591, 593, 595, 601, 605, 607, 612, 613, 614, 645, 647, 655, 657], "potenti": [0, 228, 248, 427, 593, 599, 605, 612, 642, 645, 650, 651, 653], "other": [0, 1, 3, 6, 7, 8, 11, 16, 33, 203, 215, 439, 592, 599, 600, 602, 605, 606, 607, 608, 609, 610, 611, 614, 617, 623, 626, 630, 631, 641, 645, 652, 654, 658], "could": [0, 1, 202, 605, 606, 607, 611, 612, 613, 614, 629, 645, 651], "includ": [0, 1, 3, 6, 7, 8, 12, 19, 23, 34, 63, 95, 110, 131, 140, 146, 150, 156, 158, 167, 190, 200, 202, 206, 208, 220, 241, 244, 253, 296, 302, 304, 308, 312, 315, 317, 320, 321, 324, 325, 330, 333, 334, 339, 344, 382, 391, 400, 407, 409, 417, 436, 438, 440, 441, 445, 450, 458, 460, 493, 495, 497, 567, 571, 573, 574, 576, 590, 593, 596, 598, 599, 601, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659], "result": [0, 1, 6, 8, 34, 43, 68, 69, 79, 89, 91, 104, 106, 135, 142, 150, 156, 161, 163, 194, 196, 202, 203, 204, 205, 206, 209, 220, 222, 233, 245, 251, 254, 264, 288, 298, 300, 351, 354, 357, 363, 412, 428, 451, 456, 468, 543, 551, 590, 592, 593, 598, 599, 600, 601, 602, 604, 605, 606, 607, 609, 611, 612, 613, 614, 617, 618, 619, 620, 621, 622, 623, 624, 625, 630, 641, 642, 644, 645, 646, 647, 650, 651, 652, 653, 654, 656, 659], "baselin": [0, 1, 6, 8, 23, 64, 65, 67, 68, 69, 203, 204, 205, 207, 209, 213, 214, 280, 291, 362, 422, 431, 590, 593, 596, 599, 601, 604, 606, 609, 613, 617, 629, 641, 648, 651, 657], "valid": [0, 1, 6, 23, 76, 158, 202, 204, 205, 207, 209, 213, 280, 370, 456, 581, 582, 583, 584, 585, 586, 587, 588, 590, 591, 593, 594, 595, 598, 601, 604, 606, 607, 610, 612, 620, 639, 642, 643, 645, 646, 647, 648, 650, 653, 656, 657], "A": [0, 1, 6, 7, 8, 9, 11, 12, 15, 17, 20, 22, 23, 28, 33, 36, 40, 41, 44, 47, 48, 49, 52, 57, 59, 61, 63, 64, 65, 66, 67, 68, 69, 73, 74, 76, 78, 79, 81, 83, 85, 87, 88, 89, 91, 93, 96, 100, 102, 103, 104, 106, 108, 111, 113, 115, 117, 126, 128, 129, 132, 134, 135, 139, 142, 144, 149, 150, 152, 156, 158, 160, 161, 163, 165, 168, 170, 174, 176, 177, 178, 182, 183, 187, 188, 191, 193, 194, 196, 198, 203, 204, 205, 209, 224, 225, 226, 231, 233, 239, 242, 245, 251, 254, 257, 260, 262, 264, 266, 267, 270, 273, 277, 279, 280, 285, 288, 291, 293, 296, 298, 300, 302, 304, 306, 309, 312, 315, 318, 321, 324, 325, 327, 330, 331, 334, 336, 339, 341, 344, 346, 349, 351, 354, 357, 360, 363, 365, 367, 369, 370, 377, 380, 383, 386, 389, 392, 397, 400, 402, 407, 410, 412, 415, 418, 420, 423, 425, 428, 432, 434, 435, 436, 439, 440, 441, 443, 448, 451, 453, 456, 458, 460, 468, 471, 472, 474, 478, 482, 485, 488, 490, 491, 493, 495, 499, 500, 503, 505, 509, 511, 514, 517, 519, 523, 525, 528, 531, 533, 537, 539, 545, 548, 552, 555, 557, 561, 563, 566, 571, 574, 579, 580, 581, 582, 583, 584, 585, 587, 588, 590, 593, 596, 598, 599, 601, 604, 605, 606, 607, 609, 610, 611, 612, 613, 617, 621, 636, 641, 644, 645, 647, 651, 653, 654], "challeng": [0, 1, 3], "capabl": [0, 1, 3, 220, 593, 606, 636, 655, 656], "provid": [0, 1, 3, 4, 6, 8, 12, 68, 69, 201, 203, 204, 205, 207, 209, 214, 222, 280, 551, 589, 590, 591, 593, 595, 596, 598, 599, 601, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 617, 619, 629, 630, 636, 637, 645, 648, 651, 653, 654, 656, 657], "easi": [0, 7, 12, 606, 613], "both": [0, 1, 6, 7, 8, 69, 222, 590, 591, 593, 595, 596, 599, 603, 605, 607, 610, 611, 612, 613, 614, 619, 620, 622, 625, 637, 641, 645, 647, 648, 651, 652, 653, 656], "develop": [0, 6, 7, 8, 26, 80, 90, 92, 99, 105, 107, 114, 120, 125, 136, 138, 143, 148, 155, 162, 164, 171, 173, 181, 186, 192, 195, 197, 201, 220, 235, 238, 247, 250, 256, 295, 406, 414, 569, 578, 605, 606, 608, 614, 636, 645, 657], "user": [0, 6, 7, 8, 11, 22, 23, 24, 33, 61, 69, 140, 203, 204, 205, 206, 207, 208, 209, 211, 212, 220, 590, 591, 593, 595, 596, 598, 599, 601, 602, 603, 604, 605, 608, 609, 611, 612, 613, 616, 620, 632, 635, 636, 640, 644, 645, 651, 652, 654, 655], "control": [0, 1, 203, 204, 205, 222, 435, 605, 610, 614, 644, 646, 651, 652, 653, 654, 656, 657], "which": [0, 1, 3, 6, 7, 8, 12, 17, 28, 64, 65, 67, 69, 204, 205, 207, 209, 214, 228, 233, 245, 254, 264, 404, 412, 439, 440, 590, 591, 593, 594, 595, 599, 605, 606, 607, 611, 612, 613, 614, 617, 619, 620, 622, 623, 624, 625, 627, 628, 630, 632, 636, 637, 639, 641, 642, 643, 644, 645, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659], "case": [0, 6, 7, 8, 9, 11, 16, 17, 19, 23, 24, 25, 26, 27, 28, 29, 31, 32, 36, 40, 45, 47, 50, 52, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 220, 222, 223, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 270, 272, 273, 277, 280, 281, 284, 285, 286, 288, 289, 291, 293, 294, 295, 296, 298, 300, 302, 304, 306, 308, 309, 310, 312, 313, 315, 317, 318, 320, 321, 322, 325, 327, 328, 330, 332, 333, 334, 336, 337, 339, 341, 342, 344, 346, 347, 349, 350, 351, 352, 354, 355, 357, 358, 360, 361, 363, 364, 365, 366, 367, 368, 370, 374, 375, 377, 378, 380, 382, 383, 384, 386, 389, 391, 392, 395, 397, 398, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 436, 437, 438, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 472, 473, 474, 475, 478, 482, 483, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 503, 504, 505, 509, 511, 513, 514, 515, 517, 518, 519, 523, 525, 527, 528, 529, 531, 532, 533, 537, 539, 541, 543, 544, 545, 548, 549, 550, 552, 553, 555, 556, 557, 561, 563, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 589, 590, 591, 592, 594, 595, 596, 598, 599, 600, 601, 602, 603, 604, 607, 609, 610, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 639, 640, 641, 642, 643, 644, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 659], "suit": [0, 1, 3, 7, 11, 23, 32, 36, 62, 63, 65, 220, 593, 607, 609, 610, 611, 612, 613, 614, 616, 624, 631, 632, 633, 634, 635, 640, 645, 649], "ar": [0, 1, 3, 6, 7, 8, 9, 11, 12, 20, 23, 28, 33, 40, 47, 52, 63, 65, 69, 76, 79, 81, 89, 91, 93, 104, 106, 108, 129, 135, 142, 144, 150, 156, 158, 161, 163, 165, 188, 194, 196, 198, 201, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 220, 222, 225, 239, 260, 288, 306, 318, 354, 357, 407, 415, 423, 435, 448, 456, 459, 491, 497, 542, 544, 549, 567, 571, 581, 584, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 616, 617, 618, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659], "last": [0, 1, 3, 607, 617, 644, 657], "modifi": [0, 3, 8, 21, 25, 58, 119, 124, 232, 234, 237, 246, 249, 255, 259, 281, 284, 286, 289, 294, 310, 313, 322, 328, 337, 342, 347, 352, 355, 358, 378, 384, 398, 403, 405, 413, 446, 568, 570, 577, 591, 593, 599, 605, 610, 611, 612, 613, 614, 620, 637, 645, 647, 648, 651], "defin": [0, 1, 7, 8, 11, 23, 47, 64, 65, 67, 140, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 220, 222, 227, 324, 589, 590, 591, 592, 593, 594, 595, 596, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 609, 610, 614, 619, 620, 622, 625, 636, 639, 642, 643, 644, 645, 647, 648, 650, 651, 653, 654, 656, 658, 659], "its": [0, 1, 6, 7, 8, 11, 25, 66, 206, 548, 593, 600, 605, 606, 607, 609, 611, 612, 613, 614, 619, 620, 621, 625, 631, 644, 645, 651, 652, 657, 658], "attribut": [0, 1, 8, 205, 207, 209, 214, 593, 611, 612, 613], "For": [0, 1, 3, 4, 6, 7, 8, 65, 204, 205, 207, 209, 214, 215, 591, 593, 599, 605, 606, 607, 609, 611, 612, 613, 614, 616, 617, 621, 631, 640, 643, 644, 645, 649, 653, 654, 655, 657, 658], "see": [0, 1, 6, 7, 8, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 544, 590, 592, 593, 594, 596, 599, 600, 601, 602, 603, 604, 605, 607, 608, 611, 612, 613, 614, 616, 618, 620, 629, 636, 640, 641, 644, 645, 648, 651, 652, 654, 656, 657, 658, 659], "mechan": [0, 1, 605], "comput": [0, 1, 7, 220, 222, 224, 226, 271, 451, 456, 486, 542, 543, 550, 584, 585, 586, 590, 592, 593, 596, 598, 599, 600, 601, 604, 605, 607, 612, 624, 627, 628, 629, 632, 633, 635, 636, 637, 645, 651, 655, 657], "There": [0, 1, 6, 207, 213, 214, 222, 581, 587, 588, 590, 593, 599, 605, 606, 607, 608, 612, 613, 614, 616, 618, 619, 620, 623, 624, 627, 628, 629, 630, 650], "need": [0, 1, 3, 5, 6, 7, 8, 24, 26, 33, 48, 80, 90, 92, 99, 105, 107, 114, 120, 125, 136, 138, 143, 148, 155, 162, 164, 171, 173, 181, 186, 192, 195, 197, 201, 235, 238, 247, 250, 256, 293, 295, 296, 331, 406, 414, 439, 456, 468, 569, 578, 589, 593, 599, 601, 605, 606, 607, 608, 610, 611, 612, 613, 614, 622, 629, 631, 635, 636, 637, 639, 641, 644, 645, 651, 652, 654, 655, 657, 659], "practic": [0, 1, 605, 606, 612, 637], "should": [0, 1, 3, 6, 7, 8, 12, 19, 23, 25, 34, 48, 57, 64, 65, 69, 95, 110, 131, 146, 167, 190, 200, 201, 213, 215, 216, 217, 218, 219, 220, 222, 241, 244, 253, 324, 409, 417, 438, 450, 472, 573, 589, 593, 599, 605, 607, 608, 611, 612, 613, 614, 617, 618, 624, 641, 642, 645, 648, 650, 657], "overli": [0, 7, 222, 226, 637, 645, 648, 651], "tediou": [0, 1], "manual": [0, 1, 6, 8, 23, 24, 202, 203, 204, 205, 209, 605, 611, 648, 651, 658], "e": [0, 1, 7, 8, 11, 25, 28, 39, 220, 222, 456, 545, 593, 605, 606, 607, 608, 609, 611, 612, 613, 614, 621, 635, 639, 642, 643, 645, 648, 650, 651, 652, 653, 656, 657, 658, 659], "g": [0, 1, 7, 8, 11, 25, 28, 39, 108, 117, 205, 220, 545, 593, 605, 606, 607, 608, 609, 611, 612, 613, 614, 621, 639, 642, 643, 645, 648, 650, 651, 652, 656, 657, 659], "set": [0, 1, 5, 6, 7, 8, 11, 12, 14, 15, 17, 19, 32, 48, 61, 64, 65, 67, 68, 69, 76, 93, 95, 110, 131, 146, 158, 167, 168, 190, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 215, 216, 217, 218, 219, 220, 222, 241, 244, 253, 266, 268, 276, 279, 308, 317, 320, 333, 382, 391, 409, 417, 438, 450, 455, 456, 475, 481, 483, 501, 508, 515, 522, 529, 536, 542, 544, 553, 560, 573, 581, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 598, 599, 600, 601, 602, 604, 605, 606, 608, 609, 610, 614, 618, 620, 621, 622, 623, 624, 625, 626, 627, 628, 630, 631, 632, 633, 634, 635, 636, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 659], "flag": [0, 1, 6, 605, 606, 608, 609, 612, 613, 614, 616, 640, 642, 650, 657], "document": [0, 4, 8, 551, 593, 605, 606, 610, 614, 645, 650], "process": [0, 1, 3, 8, 206, 208, 222, 298, 300, 357, 440, 593, 605, 606, 607, 609, 610, 611, 612, 613, 645, 647, 648], "creat": [0, 6, 8, 9, 11, 12, 23, 28, 35, 40, 41, 47, 48, 52, 64, 65, 66, 67, 74, 76, 79, 81, 83, 85, 89, 91, 93, 96, 98, 100, 104, 106, 108, 111, 113, 115, 118, 121, 123, 126, 129, 132, 135, 137, 139, 142, 144, 147, 150, 152, 154, 156, 158, 161, 163, 165, 168, 170, 172, 174, 178, 180, 183, 185, 188, 191, 194, 196, 198, 203, 204, 205, 206, 207, 208, 209, 211, 212, 214, 220, 222, 229, 233, 236, 239, 242, 245, 248, 251, 254, 258, 260, 262, 264, 267, 270, 273, 277, 280, 285, 288, 291, 293, 296, 298, 300, 302, 304, 306, 309, 312, 315, 318, 321, 324, 325, 326, 327, 330, 331, 334, 335, 336, 339, 340, 341, 344, 345, 346, 351, 354, 357, 361, 363, 365, 367, 370, 377, 380, 383, 386, 387, 389, 392, 397, 400, 401, 404, 407, 410, 412, 415, 418, 421, 423, 425, 427, 428, 430, 432, 436, 441, 443, 445, 448, 451, 453, 456, 468, 472, 474, 478, 482, 485, 488, 491, 493, 495, 497, 500, 503, 505, 509, 511, 512, 514, 517, 519, 523, 525, 526, 528, 531, 533, 537, 539, 540, 545, 552, 555, 557, 561, 563, 564, 567, 571, 574, 576, 581, 587, 588, 591, 592, 593, 594, 595, 596, 599, 601, 605, 606, 608, 609, 610, 611, 613, 614, 617, 623, 624, 627, 628, 630, 631, 632, 633, 634, 635, 636, 641, 644, 645, 651, 652, 654, 655, 657], "upload": [0, 645], "give": [0, 6, 8, 605, 606, 607, 611, 612, 613, 614, 621, 654, 655, 657], "stamp": [0, 1, 6], "given": [0, 1, 6, 7, 8, 9, 22, 34, 42, 63, 68, 69, 202, 248, 271, 349, 350, 372, 427, 458, 460, 472, 486, 542, 543, 584, 590, 591, 593, 598, 602, 605, 608, 611, 612, 614, 620, 622, 623, 625, 630, 637, 642, 645, 647, 650, 656, 657, 659], "git": [0, 3, 8, 61, 201, 589, 607, 612, 613, 614, 657], "hash": 0, "releas": [0, 1, 606, 610, 616, 636, 640, 657], "know": [0, 1, 8, 605, 606, 607, 612, 613, 637, 645], "older": [0, 6], "retain": [0, 6, 613, 614, 645], "so": [0, 1, 6, 7, 8, 21, 58, 71, 150, 201, 220, 330, 581, 587, 588, 589, 593, 596, 599, 604, 605, 606, 607, 609, 611, 612, 613, 614, 615, 636, 637, 639, 641, 644, 645, 651, 652, 654, 656, 657, 659], "can": [0, 3, 5, 6, 7, 8, 11, 12, 23, 26, 27, 44, 47, 49, 64, 65, 67, 69, 75, 80, 90, 92, 99, 105, 107, 114, 120, 125, 136, 138, 143, 148, 151, 155, 157, 162, 164, 171, 173, 181, 186, 192, 195, 197, 201, 202, 203, 204, 206, 207, 209, 214, 215, 216, 217, 218, 219, 220, 222, 226, 235, 238, 247, 250, 256, 291, 295, 330, 406, 414, 439, 498, 569, 578, 589, 593, 599, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 617, 618, 620, 621, 623, 624, 630, 632, 635, 636, 637, 641, 644, 645, 647, 648, 651, 652, 653, 654, 655, 656, 657, 658, 659], "still": [0, 1, 613, 624], "It": [0, 1, 3, 6, 11, 202, 203, 204, 205, 207, 208, 209, 214, 216, 590, 591, 593, 594, 595, 596, 598, 605, 606, 607, 609, 611, 612, 613, 614, 624, 629, 636, 645, 653, 654], "mai": [0, 1, 6, 7, 8, 16, 22, 201, 206, 220, 324, 589, 591, 593, 599, 605, 607, 608, 609, 612, 613, 614, 617, 629, 630, 635, 645, 647, 651, 654, 657, 658], "worthwhil": 0, "deprec": 0, "delet": [0, 6, 8, 606, 607, 608], "old": [0, 6, 609, 611], "do": [0, 1, 3, 6, 8, 208, 593, 605, 607, 608, 609, 610, 611, 612, 613, 623, 624, 627, 628, 630, 636, 641, 645, 651, 653, 657], "abil": [0, 7, 654], "up": [0, 1, 5, 6, 7, 8, 11, 14, 15, 17, 19, 23, 32, 53, 61, 64, 65, 66, 67, 68, 69, 95, 110, 131, 146, 167, 168, 170, 190, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 215, 216, 217, 218, 219, 220, 222, 241, 244, 253, 266, 279, 308, 317, 320, 333, 382, 391, 409, 417, 438, 450, 573, 589, 590, 591, 592, 593, 594, 595, 596, 598, 599, 600, 601, 602, 604, 605, 606, 608, 609, 610, 611, 614, 620, 624, 625, 626, 631, 632, 633, 634, 635, 641, 644, 645, 647, 652, 654, 655, 658], "same": [0, 1, 6, 7, 8, 12, 23, 68, 69, 74, 208, 455, 593, 599, 602, 605, 606, 607, 609, 611, 612, 613, 614, 617, 620, 621, 622, 623, 625, 630, 631, 632, 633, 634, 635, 636, 637, 639, 641, 642, 645, 650, 651, 652, 657, 658, 659], "within": [0, 6, 7, 8, 11, 12, 16, 23, 66, 67, 68, 69, 85, 100, 174, 203, 206, 227, 312, 590, 593, 594, 596, 602, 605, 607, 609, 611, 612, 613, 614, 623, 624, 627, 628, 630, 631, 632, 633, 634, 635, 636, 645, 646, 648, 651, 657], "If": [0, 1, 3, 6, 7, 8, 11, 12, 24, 25, 35, 40, 47, 52, 58, 64, 68, 69, 76, 81, 93, 108, 129, 144, 158, 165, 188, 198, 215, 216, 217, 218, 219, 220, 239, 260, 306, 318, 407, 415, 423, 448, 590, 591, 593, 596, 598, 599, 601, 604, 605, 606, 607, 608, 609, 611, 612, 613, 614, 635, 636, 639, 644, 652, 654, 655, 657], "place": [0, 1, 6, 8, 593, 605, 612, 613, 636, 644, 652, 653, 654], "import": [0, 1, 8, 216, 605, 606, 607, 609, 611, 612, 613, 637], "constraint": [0, 657], "solut": [0, 1, 8, 168, 172, 209, 218, 264, 548, 549, 591, 592, 594, 600, 602, 608, 611, 613, 619, 620, 623, 625, 630, 643, 646, 653, 654], "support": [0, 6, 8, 11, 204, 205, 207, 209, 214, 222, 581, 587, 588, 590, 591, 592, 601, 604, 605, 606, 610, 611, 612, 613, 614, 617, 618, 624, 631, 632, 633, 634, 635, 637, 639, 642, 645, 647, 648, 651, 658], "databas": [0, 1, 6, 8, 9, 11, 12, 204, 601, 605, 636], "input": [0, 6, 8, 11, 12, 13, 16, 19, 56, 85, 95, 100, 110, 131, 146, 167, 174, 190, 200, 202, 203, 204, 205, 206, 207, 209, 213, 214, 227, 241, 244, 253, 386, 409, 417, 438, 440, 450, 456, 506, 520, 534, 558, 573, 590, 591, 593, 595, 596, 598, 599, 611, 612, 613, 617, 647], "data": [0, 6, 8, 12, 213, 220, 224, 264, 330, 331, 370, 371, 372, 375, 392, 393, 394, 396, 455, 456, 458, 460, 544, 549, 581, 587, 588, 591, 593, 595, 599, 605, 607, 610, 611, 614, 617, 629, 630, 636, 645, 647, 654, 657, 658, 659], "e3sm": [0, 1, 6, 8, 11, 285, 293, 296, 298, 300, 302, 304, 350, 589, 593, 605, 607, 610, 612, 613, 614, 631, 632, 633, 634, 635, 636, 637, 639, 641, 645], "lcrc": [0, 1, 6, 8, 31, 204, 605, 606, 614, 631, 633, 657], "server": [0, 1, 6, 8, 12, 31, 201, 204, 213, 589, 605, 606, 614, 635, 645], "store": [0, 1, 8, 25, 593, 599, 605, 611, 612, 613, 645, 657], "new": [0, 1, 3, 6, 9, 11, 15, 20, 23, 26, 28, 33, 35, 40, 47, 52, 76, 80, 81, 90, 92, 93, 99, 105, 107, 108, 114, 120, 125, 129, 136, 138, 143, 144, 148, 155, 158, 162, 164, 165, 171, 173, 181, 186, 188, 192, 195, 197, 198, 222, 227, 235, 238, 239, 247, 250, 256, 260, 273, 295, 298, 300, 302, 304, 306, 325, 330, 334, 339, 344, 363, 365, 380, 400, 406, 407, 414, 423, 435, 436, 478, 493, 505, 511, 519, 525, 533, 539, 557, 563, 569, 571, 578, 581, 587, 588, 599, 605, 606, 607, 608, 609, 610, 629, 630, 645, 651, 657], "compass_cach": [0, 6, 8, 9, 605], "core": [0, 6, 7, 8, 9, 10, 11, 12, 14, 15, 17, 20, 21, 22, 23, 28, 38, 40, 47, 52, 57, 58, 59, 60, 61, 66, 67, 71, 72, 73, 76, 78, 79, 81, 87, 88, 89, 93, 98, 102, 103, 104, 108, 117, 128, 129, 134, 135, 144, 147, 149, 150, 158, 160, 161, 165, 170, 176, 177, 182, 187, 188, 193, 194, 198, 203, 204, 205, 207, 208, 209, 214, 222, 223, 228, 231, 233, 236, 239, 257, 260, 266, 279, 288, 306, 318, 324, 360, 369, 402, 407, 415, 420, 423, 434, 448, 471, 477, 490, 499, 566, 590, 591, 593, 596, 598, 601, 604, 609, 610, 612, 613, 614, 615, 617, 621, 623, 624, 625, 630, 631, 632, 633, 634, 635, 636, 638, 641, 645, 647, 655, 657, 658, 659], "": [0, 1, 6, 7, 8, 11, 12, 16, 23, 25, 26, 31, 53, 62, 66, 67, 69, 80, 90, 92, 99, 105, 107, 114, 120, 125, 136, 138, 143, 148, 155, 162, 164, 171, 173, 181, 186, 192, 195, 197, 203, 204, 205, 206, 208, 209, 211, 212, 235, 238, 247, 250, 256, 295, 406, 414, 569, 578, 590, 591, 592, 593, 594, 595, 596, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 611, 612, 613, 614, 616, 620, 628, 631, 633, 634, 635, 636, 640, 644, 645, 647, 651, 652, 654, 655, 656, 657], "space": [0, 1, 6, 7, 8, 605, 607, 613, 623, 624, 627, 628, 630, 632, 636, 653, 657], "appropri": [0, 1, 3, 6, 201, 202, 203, 220, 472, 589, 590, 591, 593, 596, 598, 599, 601, 604, 605, 607, 610, 612, 613, 614, 617, 619, 631, 632, 633, 634, 635, 636, 641, 645, 651, 653, 657], "ad": [0, 1, 3, 6, 7, 8, 12, 19, 25, 33, 69, 95, 110, 131, 146, 167, 190, 200, 203, 204, 209, 222, 241, 244, 253, 409, 417, 438, 450, 573, 581, 587, 588, 590, 593, 596, 598, 607, 610, 629, 630, 631, 632, 633, 634, 635, 638, 645, 651, 657], "where": [0, 1, 6, 7, 8, 11, 23, 26, 32, 34, 61, 64, 65, 67, 80, 90, 92, 99, 105, 107, 114, 120, 125, 136, 138, 143, 148, 155, 162, 164, 171, 173, 181, 186, 192, 195, 197, 201, 222, 226, 235, 238, 247, 250, 256, 295, 406, 414, 456, 468, 569, 578, 581, 584, 587, 588, 589, 593, 596, 599, 605, 607, 609, 610, 611, 612, 613, 614, 620, 621, 623, 625, 630, 631, 632, 633, 634, 635, 636, 637, 639, 644, 645, 647, 648, 651, 656, 657, 659], "target": [0, 1, 8, 12, 35, 204, 220, 593, 605, 611, 612, 613, 645], "local": [0, 1, 6, 8, 11, 12, 23, 201, 589, 605, 607, 608, 614, 635, 636, 639, 645, 655], "futur": [0, 1, 222, 593, 604, 605, 606, 607, 609, 610, 612, 629, 630, 637, 645, 647, 658], "filenam": [0, 1, 12, 16, 69, 87, 102, 204, 396, 455, 593, 605, 607, 611, 612, 613], "correspond": [0, 1, 3, 7, 8, 68, 69, 201, 227, 542, 548, 589, 593, 596, 599, 605, 607, 646], "via": [0, 1, 3, 6, 605, 613, 636, 637], "python": [0, 2, 6, 7, 8, 25, 330, 590, 605, 606, 607, 609, 610, 611, 612, 613, 614, 635, 636, 645, 657], "dictionari": [0, 1, 8, 9, 11, 15, 17, 20, 22, 23, 28, 33, 61, 65, 69, 280, 370, 543, 544, 549, 590, 604, 605, 606, 612, 613], "describ": [0, 1, 6, 7, 61, 68, 69, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 220, 222, 590, 591, 592, 593, 595, 596, 598, 599, 601, 604, 605, 606, 607, 608, 611, 612, 613, 614, 617, 622, 631, 632, 633, 634, 635, 636, 639, 644, 645, 648, 651, 653, 657], "08": [0, 612, 642, 650], "03": [0, 604], "indic": [0, 1, 7, 8, 65, 69, 222, 456, 584, 605, 608, 612, 614, 618, 639, 645], "two": [0, 1, 6, 8, 79, 89, 91, 104, 106, 135, 142, 150, 156, 161, 163, 194, 196, 203, 204, 205, 207, 208, 209, 214, 222, 245, 288, 354, 357, 412, 590, 591, 592, 593, 596, 605, 606, 607, 612, 613, 620, 621, 623, 624, 625, 630, 641, 642, 643, 645, 646, 648, 650, 655, 656, 657, 658], "all": [0, 1, 6, 7, 8, 9, 11, 23, 40, 47, 52, 59, 61, 64, 65, 72, 76, 81, 93, 108, 129, 144, 158, 165, 188, 198, 201, 202, 205, 216, 222, 223, 227, 228, 239, 260, 280, 306, 312, 318, 324, 407, 415, 423, 448, 456, 457, 497, 581, 587, 588, 589, 593, 599, 601, 605, 606, 607, 609, 610, 611, 612, 613, 614, 616, 617, 618, 620, 621, 622, 625, 636, 639, 640, 641, 642, 643, 645, 647, 650, 652, 653, 654, 656, 657, 658], "follow": [0, 1, 5, 6, 7, 8, 39, 201, 206, 208, 220, 581, 587, 588, 589, 593, 596, 599, 605, 607, 608, 611, 612, 613, 614, 617, 619, 624, 627, 628, 635, 636, 637, 639, 641, 644, 645, 646, 647, 648, 651, 652, 653, 656, 657], "notat": [0, 605], "ocean": [0, 4, 6, 7, 8, 9, 28, 66, 67, 201, 590, 591, 592, 593, 594, 595, 596, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 609, 610, 611, 612, 613, 614, 631, 632, 633, 634, 635, 636, 637, 638, 639, 641, 642, 643, 645, 646, 647, 648, 649, 650, 651, 652, 653, 655, 656, 657, 658, 659], "global_ocean": [0, 1, 6, 8, 377, 380, 386, 392, 397, 589, 595, 597, 605, 606, 607, 609, 610, 612, 613, 614, 637, 640, 641, 647, 649, 657, 658, 659], "qu240": [0, 1, 6, 545, 550, 605, 606, 607, 611, 614, 641, 657, 659], "phc": [0, 1, 6, 312, 315, 593, 605, 606, 639, 641, 645, 659], "init": [0, 1, 6, 14, 15, 17, 201, 227, 228, 280, 284, 285, 288, 291, 293, 306, 309, 327, 336, 341, 346, 351, 354, 357, 377, 380, 589, 591, 595, 601, 604, 605, 606, 607, 612, 614, 641, 655, 657, 659], "onli": [0, 1, 6, 7, 8, 20, 23, 201, 202, 213, 214, 220, 456, 460, 493, 495, 497, 589, 592, 593, 599, 600, 605, 606, 610, 611, 612, 613, 614, 619, 620, 624, 627, 628, 629, 630, 632, 635, 636, 639, 642, 644, 645, 648, 651, 652, 653, 654, 656, 657], "some": [0, 1, 6, 8, 23, 26, 80, 90, 92, 99, 105, 107, 114, 120, 125, 136, 138, 143, 148, 155, 162, 164, 171, 173, 181, 186, 192, 195, 197, 202, 235, 238, 247, 250, 256, 295, 406, 414, 456, 468, 569, 578, 593, 599, 601, 604, 605, 606, 607, 608, 611, 612, 613, 614, 616, 624, 631, 632, 633, 634, 635, 636, 639, 640, 645, 657, 658, 659], "thei": [0, 1, 3, 6, 7, 8, 12, 25, 26, 33, 47, 63, 80, 90, 92, 99, 105, 107, 114, 120, 125, 136, 138, 143, 148, 155, 162, 164, 171, 173, 181, 186, 192, 195, 197, 205, 235, 238, 247, 250, 256, 280, 295, 406, 414, 569, 578, 589, 590, 593, 596, 598, 599, 605, 606, 609, 610, 611, 612, 613, 614, 617, 620, 621, 623, 625, 630, 636, 637, 639, 641, 642, 644, 645, 648, 651, 653, 656, 657, 659], "list": [0, 1, 3, 7, 11, 23, 24, 31, 32, 59, 63, 64, 65, 66, 67, 68, 69, 76, 81, 93, 108, 144, 150, 158, 165, 188, 198, 202, 204, 205, 207, 209, 214, 251, 264, 267, 270, 291, 327, 341, 346, 349, 428, 474, 485, 500, 503, 514, 517, 528, 531, 544, 550, 552, 555, 590, 605, 606, 607, 609, 610, 611, 612, 613, 614, 616, 617, 621, 623, 630, 632, 635, 636, 644, 651, 652, 654, 655, 657, 658, 659], "explicitli": [0, 6, 7, 8, 593, 605, 612, 613, 614, 645, 647, 657], "initial_st": [0, 1, 6, 229, 592, 593, 600, 602, 605, 606, 611, 614, 642, 643, 645, 647, 648, 650, 651, 653, 656], "similarli": [0, 1, 6, 8, 605, 607, 611, 612, 613, 636, 641, 657], "ha": [0, 1, 6, 8, 11, 16, 23, 25, 40, 47, 52, 64, 65, 67, 69, 71, 76, 81, 93, 108, 129, 144, 158, 165, 188, 198, 201, 202, 203, 204, 205, 206, 207, 209, 213, 214, 215, 216, 217, 218, 219, 222, 239, 260, 306, 318, 407, 415, 423, 448, 455, 589, 590, 591, 593, 596, 598, 599, 601, 604, 605, 606, 607, 609, 610, 611, 612, 613, 614, 615, 619, 620, 621, 623, 624, 625, 637, 639, 642, 643, 644, 645, 648, 650, 651, 652, 653, 654, 656, 657], "specifi": [0, 6, 8, 12, 158, 202, 208, 330, 595, 605, 607, 611, 612, 613, 614, 618, 624, 635, 644, 645, 647, 652, 654, 655, 656, 657], "suffix": [0, 65, 76, 81, 93, 108, 144, 158, 165, 188, 198, 204, 205, 207, 208, 209, 214, 605, 645], "c": [0, 1, 6, 65, 108, 117, 205, 220, 222, 605, 607, 617, 621, 631, 632, 633, 634, 635, 636, 641, 651, 652, 654, 657, 659], "number": [0, 1, 6, 8, 11, 20, 21, 32, 36, 40, 41, 42, 43, 44, 47, 52, 57, 58, 60, 65, 76, 81, 93, 108, 129, 144, 158, 165, 188, 198, 202, 206, 208, 224, 225, 228, 239, 260, 271, 306, 318, 324, 349, 350, 392, 407, 415, 423, 448, 455, 477, 486, 589, 590, 593, 596, 599, 601, 604, 605, 606, 609, 612, 613, 614, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 627, 628, 630, 636, 637, 639, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 657], "setup": [0, 11, 20, 23, 79, 89, 91, 104, 106, 135, 142, 150, 156, 161, 163, 194, 196, 203, 204, 205, 207, 209, 214, 392, 590, 593, 596, 598, 599, 601, 604, 606, 607, 609, 610, 611, 612, 613, 614, 644, 647, 652, 654, 655, 657, 658], "n": [0, 1, 6, 41, 48, 49, 54, 326, 331, 335, 340, 345, 401, 512, 526, 540, 564, 605, 632, 635, 636, 653, 655, 657], "90c": [0, 605], "91c": [0, 605], "92": [0, 605, 639, 655], "approach": [0, 1, 605, 606, 607, 608, 611, 612, 613, 637, 639, 651], "effici": [0, 1, 285, 593, 605, 645], "doe": [0, 1, 3, 8, 222, 596, 605, 610, 612, 613, 617, 636, 645, 648, 653, 655, 656], "ani": [0, 1, 6, 7, 8, 19, 26, 64, 65, 80, 90, 92, 95, 99, 105, 107, 110, 114, 120, 125, 131, 136, 138, 143, 146, 148, 155, 162, 164, 167, 171, 173, 181, 186, 190, 192, 195, 197, 200, 204, 205, 207, 209, 235, 238, 241, 244, 247, 250, 253, 256, 295, 308, 317, 320, 333, 382, 391, 406, 409, 414, 417, 438, 450, 569, 573, 578, 590, 591, 593, 598, 599, 605, 606, 607, 610, 611, 612, 613, 614, 617, 636, 641, 642, 645, 651, 657], "much": [0, 1, 6, 8, 202, 435, 605, 611, 612, 613, 641, 645, 648, 651, 656], "more": [0, 4, 6, 8, 23, 31, 32, 48, 64, 65, 206, 590, 591, 592, 593, 594, 596, 600, 602, 603, 604, 605, 606, 607, 609, 611, 612, 613, 616, 618, 623, 624, 626, 629, 630, 636, 637, 638, 640, 641, 645, 647, 648, 649, 653, 656, 657, 658], "verbos": [0, 6, 36, 38, 605, 611, 659], "must": [0, 1, 6, 7, 8, 11, 16, 17, 18, 66, 67, 227, 505, 519, 533, 557, 593, 605, 607, 612, 639, 645, 655, 658], "own": [0, 1, 7, 8, 11, 206, 548, 593, 605, 606, 607, 609, 611, 612, 613, 614, 644, 645, 652, 654, 655, 657, 658], "t": [0, 1, 6, 7, 8, 204, 205, 207, 209, 544, 548, 590, 591, 593, 598, 601, 605, 606, 607, 608, 611, 612, 613, 614, 617, 632, 634, 635, 636, 641, 644, 645, 652, 654, 655, 657, 658, 659], "These": [0, 1, 6, 8, 9, 11, 201, 506, 520, 534, 542, 558, 589, 590, 593, 598, 605, 606, 607, 610, 612, 614, 617, 620, 636, 641, 645, 646, 647, 651, 655, 656, 657, 658, 659], "assum": [0, 25, 227, 228, 291, 605, 612, 613, 614, 635, 637], "alwai": [0, 1, 7, 8, 33, 201, 589, 593, 605, 606, 607, 612, 613, 614, 645], "free": [0, 1, 602, 611, 612, 613, 614, 637], "choos": [0, 1, 6, 606, 612, 631, 632, 633, 634, 635, 658], "between": [0, 1, 3, 6, 8, 12, 21, 41, 48, 49, 54, 58, 68, 69, 203, 222, 245, 326, 331, 335, 340, 345, 392, 401, 412, 512, 526, 540, 564, 581, 587, 588, 591, 592, 593, 595, 599, 600, 601, 602, 605, 606, 607, 612, 620, 621, 623, 625, 629, 630, 636, 637, 639, 642, 645, 648, 650, 651, 653], "long": [0, 1, 5, 11, 40, 47, 52, 76, 81, 93, 108, 129, 144, 158, 165, 170, 188, 198, 202, 239, 260, 306, 318, 350, 407, 415, 423, 448, 493, 497, 567, 571, 593, 601, 604, 605, 606, 612, 617, 641, 648, 651, 657], "been": [0, 1, 6, 8, 11, 23, 25, 32, 64, 65, 67, 201, 215, 216, 217, 218, 219, 270, 485, 503, 517, 531, 555, 589, 593, 599, 605, 606, 607, 608, 610, 611, 612, 613, 614, 631, 632, 633, 634, 635, 636, 639, 642, 645, 649, 650, 657], "cached_fil": [0, 6, 9, 605], "json": [0, 6, 8, 9, 31, 605, 635], "command": [0, 1, 8, 61, 216, 551, 605, 606, 607, 609, 610, 611, 612, 613, 632, 635, 636, 641, 657], "line": [0, 1, 7, 8, 599, 605, 606, 607, 610, 611, 612, 613, 621, 630, 651, 657], "tool": [0, 1, 6, 8, 201, 203, 204, 205, 206, 209, 589, 593, 605, 607, 610, 611, 612, 613, 614, 617, 641, 645], "avail": [0, 1, 5, 6, 8, 11, 16, 36, 40, 47, 52, 59, 60, 76, 81, 93, 108, 129, 144, 158, 165, 188, 198, 202, 239, 260, 264, 306, 318, 324, 407, 415, 423, 448, 599, 605, 606, 607, 612, 616, 620, 624, 631, 632, 633, 634, 635, 640, 642, 643, 644, 645, 651, 652, 654, 657, 659], "chrysali": [0, 1, 6, 220, 605, 612, 613, 614, 636, 657], "anvil": [0, 1, 6, 220, 605, 614, 636, 657], "machin": [0, 6, 8, 11, 23, 61, 64, 65, 67, 87, 102, 117, 176, 201, 589, 593, 605, 606, 610, 612, 613, 614, 631, 632, 633, 634, 635], "work": [0, 1, 3, 6, 8, 11, 12, 16, 18, 19, 23, 31, 32, 61, 62, 65, 95, 110, 131, 146, 167, 190, 200, 204, 205, 207, 208, 209, 214, 216, 218, 220, 241, 244, 253, 308, 317, 320, 333, 382, 391, 409, 417, 438, 450, 573, 605, 606, 607, 608, 609, 612, 613, 614, 636, 641, 644, 651, 652, 653, 654, 655, 656, 657, 658], "directori": [0, 6, 8, 11, 12, 16, 19, 23, 31, 32, 35, 61, 62, 64, 65, 66, 67, 68, 69, 85, 95, 100, 110, 131, 146, 167, 174, 190, 200, 201, 220, 241, 244, 253, 308, 317, 320, 333, 382, 391, 409, 417, 438, 450, 573, 589, 590, 593, 596, 599, 606, 607, 609, 610, 612, 613, 614, 620, 632, 635, 644, 645, 651, 652, 654, 655, 657, 658], "copi": [0, 6, 8, 12, 31, 207, 435, 612, 613, 632], "map": [0, 8, 9, 47, 48, 458, 460, 593, 607, 614, 645], "those": [0, 1, 8, 20, 23, 68, 69, 220, 593, 604, 605, 606, 607, 609, 610, 611, 612, 613, 644, 645, 648, 649, 651, 659], "exampl": [0, 1, 3, 4, 6, 7, 8, 222, 593, 605, 606, 607, 608, 609, 611, 612, 613, 614, 618, 620, 632, 639, 640, 645, 657, 658, 659], "name": [0, 1, 6, 7, 8, 9, 11, 12, 14, 15, 17, 20, 21, 22, 23, 25, 28, 32, 34, 35, 36, 40, 47, 52, 56, 57, 58, 63, 64, 65, 66, 67, 68, 69, 74, 76, 81, 85, 93, 100, 108, 117, 129, 144, 158, 165, 174, 188, 198, 230, 239, 260, 271, 273, 277, 306, 309, 321, 324, 325, 330, 334, 339, 344, 349, 350, 370, 373, 377, 380, 383, 386, 392, 397, 400, 407, 423, 436, 440, 456, 458, 460, 468, 474, 486, 545, 548, 549, 550, 551, 570, 571, 580, 590, 593, 598, 605, 606, 607, 609, 611, 612, 613, 614, 618, 620, 621, 622, 623, 625, 630, 635, 642, 645, 650, 657, 659], "culled_mesh": [0, 1, 6, 605, 612, 613], "nc": [0, 1, 6, 8, 85, 100, 174, 204, 207, 214, 229, 291, 543, 548, 593, 599, 601, 604, 605, 606, 611, 612, 613, 645], "becom": [0, 1, 7, 202, 222, 370, 605, 612, 613, 619, 637], "20210730": 0, "when": [0, 1, 6, 8, 14, 15, 17, 23, 24, 33, 34, 35, 36, 62, 68, 69, 150, 202, 203, 204, 205, 207, 208, 209, 214, 220, 586, 590, 593, 596, 598, 599, 601, 604, 605, 606, 607, 610, 611, 612, 613, 617, 618, 619, 620, 621, 625, 631, 632, 633, 634, 635, 639, 641, 645, 651, 657, 658], "call": [0, 1, 6, 8, 11, 23, 24, 25, 26, 39, 57, 62, 80, 90, 92, 99, 105, 107, 114, 120, 125, 136, 138, 143, 148, 155, 162, 164, 171, 173, 181, 186, 192, 195, 197, 203, 204, 205, 207, 208, 209, 211, 212, 214, 220, 222, 235, 238, 247, 250, 256, 291, 295, 406, 414, 569, 578, 590, 593, 596, 599, 601, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 635, 636, 641, 645, 657], "default": [0, 1, 6, 7, 8, 11, 12, 14, 15, 17, 20, 21, 22, 23, 31, 48, 52, 58, 61, 63, 76, 81, 85, 87, 93, 98, 100, 102, 108, 117, 129, 144, 147, 158, 165, 174, 176, 180, 185, 188, 198, 201, 203, 204, 205, 207, 209, 211, 212, 214, 215, 216, 217, 218, 219, 239, 260, 262, 306, 324, 330, 380, 407, 423, 425, 430, 436, 459, 491, 567, 571, 589, 592, 593, 599, 600, 601, 602, 603, 604, 605, 607, 610, 611, 613, 614, 619, 620, 621, 622, 623, 624, 625, 627, 628, 630, 631, 632, 633, 634, 635, 636, 639, 641, 644, 645, 651, 652, 657, 658, 659], "being": [0, 1, 8, 11, 23, 62, 65, 69, 158, 222, 593, 596, 599, 605, 606, 607, 610, 611, 639, 645, 649], "made": [0, 3, 6, 11, 16, 23, 69, 73, 187, 193, 593, 605, 606, 609, 611, 613, 625, 637, 658], "overridden": [0, 26, 80, 90, 92, 99, 105, 107, 114, 120, 125, 136, 138, 143, 148, 155, 162, 164, 171, 173, 181, 186, 192, 195, 197, 235, 238, 247, 250, 256, 295, 406, 414, 569, 578, 605], "contain": [0, 1, 3, 6, 7, 8, 9, 14, 17, 22, 59, 204, 205, 206, 207, 209, 222, 230, 373, 386, 439, 543, 581, 587, 588, 590, 591, 593, 598, 605, 606, 607, 609, 611, 612, 613, 614, 616, 640, 645, 647, 651, 657], "210803": [0, 6], "culled_graph": [0, 1, 6, 605, 612], "info": [0, 1, 6, 8, 56, 57, 58, 227, 228, 456, 468, 593, 601, 604, 605, 612, 613], "critical_passages_mask_fin": [0, 6], "init_mode_forcing_data": [0, 6, 605], "prototyp": [0, 1], "had": [0, 220, 605, 606], "separ": [0, 1, 6, 7, 8, 137, 202, 439, 605, 612, 613, 618, 621, 623, 624, 630, 643, 644, 645, 652, 654, 655, 657], "depend": [0, 1, 6, 8, 19, 95, 110, 131, 146, 167, 190, 200, 241, 244, 253, 308, 317, 320, 333, 382, 391, 409, 417, 438, 450, 459, 573, 592, 593, 596, 605, 607, 609, 611, 612, 613, 614, 635, 636, 639, 644, 645, 646, 657, 658], "earlier": [0, 1], "turn": [0, 1, 11, 605, 608, 612], "out": [0, 1, 8, 14, 15, 17, 20, 21, 22, 216, 440, 455, 593, 599, 605, 606, 607, 612, 613, 614, 620, 639, 645, 650, 651, 653, 657], "veri": [0, 1, 209, 440, 596, 605, 606, 607, 612, 613, 625, 648, 651, 653, 656], "cumbersom": [0, 1], "mani": [0, 1, 6, 8, 605, 606, 607, 609, 610, 611, 612, 613, 618, 620, 622, 625, 640, 642, 644, 645, 649, 650, 652, 654], "subdirectori": [0, 1, 6, 8, 11, 12, 23, 36, 40, 47, 52, 76, 81, 85, 93, 100, 108, 129, 144, 158, 165, 174, 188, 198, 204, 239, 260, 306, 312, 330, 380, 407, 423, 436, 571, 605, 606, 611, 612, 613, 645, 657, 658], "predetermin": 0, "allow": [0, 1, 3, 8, 11, 33, 69, 213, 222, 593, 605, 609, 612, 613, 614, 617, 618, 636, 637, 639, 644, 645, 647, 652, 654, 658], "But": [0, 1, 220, 605, 606, 611, 612, 613, 614, 636], "did": [0, 1, 8, 69], "therefor": [0, 1, 220, 594, 605, 607, 609, 610, 612, 613, 617, 644, 645, 652, 654, 657], "propos": [0, 1, 3], "previou": [0, 6, 8, 206, 222, 351, 593, 605, 611, 613, 614, 641, 653, 657, 659], "section": [0, 1, 3, 4, 7, 8, 48, 58, 201, 203, 204, 205, 209, 222, 418, 432, 456, 458, 462, 465, 466, 467, 579, 581, 587, 588, 589, 593, 594, 599, 601, 604, 605, 607, 608, 611, 612, 613, 614, 619, 620, 621, 631, 632, 633, 634, 635, 636, 639, 644, 646, 650, 651, 652, 654, 655, 657], "far": [0, 1, 71, 581, 587, 588, 596, 606, 612, 613, 615, 651], "flexibl": [0, 8, 592, 605, 607, 610], "about": [0, 1, 6, 7, 8, 11, 605, 606, 611, 612, 613, 614, 617, 618, 632, 651, 654], "clear": [0, 1, 3, 606, 611, 613], "me": [0, 1], "how": [0, 1, 3, 6, 8, 47, 222, 599, 605, 606, 611, 612, 613, 614, 635, 636, 637, 644, 651, 652, 653, 654, 656], "achiev": [0, 43, 613, 637], "without": [0, 1, 6, 8, 12, 204, 354, 567, 593, 604, 605, 606, 607, 614, 620, 623, 624, 634, 636, 645, 651, 657], "branch": [0, 1, 3, 6, 64, 65, 67, 201, 220, 589, 605, 607, 610, 611, 612, 613, 614, 657], "04": [0, 1, 604], "boolean": [0, 8, 584], "fals": [0, 1, 8, 11, 12, 24, 31, 36, 38, 62, 63, 69, 150, 156, 158, 203, 204, 209, 224, 228, 324, 330, 436, 445, 460, 571, 599, 601, 604, 605, 612, 613, 614, 619, 620, 622, 623, 624, 627, 628, 632, 634, 636, 642, 643, 645, 650, 655], "true": [0, 1, 7, 8, 24, 34, 35, 58, 69, 215, 216, 217, 218, 219, 228, 324, 407, 457, 460, 470, 593, 596, 605, 612, 613, 614, 619, 620, 621, 623, 624, 625, 627, 628, 630, 631, 632, 633, 634, 635, 645, 651, 652, 655, 657, 658], "usual": [0, 605, 607, 612, 657], "ignor": 0, "namelist": [0, 1, 7, 11, 14, 15, 19, 20, 21, 58, 76, 81, 93, 95, 108, 110, 131, 144, 146, 158, 165, 167, 188, 190, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 213, 214, 241, 244, 253, 276, 409, 417, 438, 450, 479, 481, 508, 522, 536, 560, 573, 589, 590, 591, 592, 593, 596, 598, 599, 600, 601, 602, 604, 606, 610, 611, 614, 620, 622, 642, 645, 648, 650, 656], "steam": 0, "also": [0, 1, 3, 6, 7, 8, 33, 68, 69, 206, 213, 222, 581, 587, 588, 590, 593, 599, 601, 603, 604, 605, 606, 607, 612, 613, 614, 622, 624, 635, 636, 637, 639, 641, 642, 643, 645, 650, 651, 653, 654, 656, 657, 658], "along": [0, 1, 456, 590, 593, 596, 598, 599, 604, 605, 610, 612, 613, 637, 645, 651], "path": [0, 1, 6, 8, 11, 12, 16, 23, 31, 32, 33, 34, 35, 36, 39, 61, 64, 65, 66, 67, 68, 69, 201, 204, 227, 228, 229, 589, 605, 606, 607, 609, 612, 614, 631, 632, 633, 634, 635, 636, 645, 657, 658], "By": [0, 1, 6, 8, 201, 589, 599, 605, 612, 613, 614, 621, 642, 643, 644, 648, 650, 651, 652], "empti": [0, 33, 605, 606, 609, 612, 613], "onc": [0, 1, 8, 203, 204, 205, 207, 209, 214, 590, 593, 596, 599, 607, 614, 637, 644, 645, 651, 657], "white": [0, 630], "strip": [0, 606], "awai": [0, 3, 172, 605, 613], "accomplish": [0, 1, 6, 606, 613], "special": [0, 1, 6, 609], "_all": [0, 64, 65], "first": [0, 1, 8, 64, 65, 204, 205, 206, 207, 209, 214, 324, 590, 591, 593, 596, 598, 599, 601, 604, 605, 606, 607, 608, 611, 612, 613, 620, 621, 622, 623, 625, 630, 631, 632, 633, 634, 635, 636, 644, 645, 647, 648, 651, 655, 657], "start": [0, 1, 6, 7, 8, 264, 590, 596, 599, 605, 606, 610, 616, 625, 632, 635, 636, 637, 640, 645, 647, 651], "after": [0, 1, 7, 11, 12, 16, 26, 53, 58, 80, 90, 92, 99, 105, 107, 114, 120, 125, 136, 138, 143, 148, 155, 162, 164, 171, 173, 181, 186, 192, 195, 197, 201, 220, 235, 238, 247, 250, 256, 295, 406, 414, 439, 569, 578, 582, 583, 589, 593, 594, 599, 605, 611, 614, 620, 635, 645, 650, 657], "remaind": [0, 613], "append": [0, 6, 593], "conveni": [0, 1, 6, 581, 587, 588, 605, 609, 612, 613, 614, 629, 641, 645, 651, 657], "multipl": [0, 1, 6, 7, 8, 204, 205, 206, 207, 209, 214, 593, 605, 606, 611, 612, 613, 620, 621, 622, 623, 625, 630, 636, 642, 645, 650, 657], "global_converg": [0, 505, 519, 533, 537, 557, 561, 589, 597, 611, 612, 613, 640, 649, 654], "cosine_bel": [0, 474, 482, 612, 613], "qu60_mesh": 0, "qu60_init": 0, "qu90_mesh": 0, "qu90_init": 0, "qu120_mesh": 0, "qu120_init": 0, "qu150_mesh": 0, "qu150_init": 0, "qu180_mesh": 0, "qu180_init": 0, "qu210_mesh": 0, "qu210_init": 0, "qu240_mesh": 0, "qu240_init": 0, "individu": [0, 1, 8, 69, 605, 606, 612, 617, 618, 635, 636, 657, 658], "while": [0, 1, 8, 204, 205, 207, 209, 214, 590, 593, 596, 605, 608, 609, 612, 613, 620, 645, 648, 651], "singl": [0, 1, 6, 8, 594, 595, 605, 606, 609, 611, 612, 613, 618, 619, 627, 628, 629, 636, 641, 644, 646, 647, 652, 654, 655], "featur": [0, 1, 606, 609, 612, 613, 614, 641, 642, 650, 653], "too": [0, 1, 596, 605, 606, 612, 613, 637, 644, 645, 652, 654], "broadli": [0, 606], "probabl": [0, 1, 456, 612, 613, 636], "want": [0, 1, 3, 6, 8, 25, 605, 607, 608, 611, 612, 613, 614, 623, 624, 627, 628, 630, 635, 657, 658], "cosin": [0, 270, 273, 277, 509, 523, 537, 561, 592, 600, 602, 644, 654], "bell": [0, 270, 273, 277, 509, 523, 537, 561, 592, 600, 602, 644, 654], "abov": [0, 1, 6, 7, 8, 324, 435, 456, 593, 599, 605, 606, 607, 612, 613, 614, 623, 630, 644, 645, 647, 651, 652, 657, 659], "modul": [0, 1, 5, 6, 14, 17, 22, 39, 215, 216, 217, 218, 219, 220, 222, 593, 605, 608, 609, 610, 611, 612, 613, 614, 631, 632, 633, 634, 635, 636, 657], "take": [0, 1, 6, 7, 8, 33, 202, 204, 593, 605, 607, 610, 611, 612, 613, 617, 624, 627, 628, 651, 659], "dry_run": [0, 6, 31], "doesn": [0, 1, 8, 204, 205, 207, 209, 590, 591, 598, 605, 606, 611, 612, 613, 636, 645], "date_str": [0, 6, 31], "let": [0, 6, 593, 607, 609, 612, 613, 614, 635], "suppli": [0, 1, 6, 7, 8, 324, 605, 607, 612, 651], "yymmdd": [0, 31, 593, 614, 645], "than": [0, 1, 6, 8, 11, 12, 33, 40, 47, 52, 76, 81, 93, 108, 129, 144, 158, 165, 188, 198, 220, 239, 260, 306, 318, 407, 415, 423, 448, 590, 596, 605, 606, 607, 608, 611, 612, 613, 618, 624, 627, 628, 637, 639, 642, 645, 648, 650, 651, 654, 656, 659], "todai": [0, 6, 31], "As": [0, 1, 5, 6, 8, 42, 593, 605, 606, 607, 612, 613, 614, 618, 619, 639, 645, 653, 656, 659], "state": [0, 1, 170, 209, 222, 229, 590, 591, 592, 593, 594, 596, 598, 599, 600, 601, 602, 604, 612, 625, 651, 656], "To": [0, 1, 3, 6, 8, 69, 201, 204, 205, 206, 207, 209, 214, 220, 222, 589, 605, 606, 607, 611, 612, 613, 624, 631, 632, 633, 634, 635, 636, 639, 644, 652, 654, 655, 657], "produc": [0, 1, 8, 11, 16, 31, 76, 81, 93, 108, 144, 158, 165, 188, 198, 203, 204, 206, 209, 233, 245, 254, 280, 284, 285, 288, 291, 293, 306, 309, 327, 336, 341, 346, 351, 354, 357, 370, 377, 380, 392, 412, 439, 590, 591, 592, 593, 594, 596, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 612, 613, 617, 641, 643, 645, 651, 656], "mpas_cor": [0, 1, 8, 11, 23, 28, 66, 67, 73, 78, 88, 103, 128, 134, 149, 160, 177, 182, 187, 193, 231, 257, 266, 279, 360, 369, 402, 420, 434, 471, 490, 499, 566, 605, 606, 612, 613], "_cached_fil": [0, 8, 605], "base": [0, 1, 6, 8, 9, 11, 12, 22, 23, 26, 28, 31, 32, 46, 51, 52, 64, 65, 66, 67, 80, 90, 92, 99, 105, 107, 114, 120, 125, 136, 138, 140, 143, 148, 155, 162, 164, 171, 173, 181, 186, 192, 195, 197, 201, 205, 207, 220, 222, 235, 238, 247, 250, 256, 276, 295, 324, 330, 406, 414, 440, 481, 508, 522, 536, 560, 569, 578, 581, 582, 583, 584, 585, 586, 587, 588, 589, 592, 593, 595, 599, 600, 601, 604, 605, 606, 607, 609, 611, 613, 614, 623, 624, 627, 628, 630, 631, 632, 633, 634, 635, 636, 639, 645, 647, 651, 658], "alreadi": [0, 1, 5, 8, 25, 35, 455, 605, 606, 607, 612, 613, 614, 629, 630, 636, 639, 644, 645, 652, 654, 655, 657], "exist": [0, 1, 7, 8, 11, 16, 20, 35, 66, 67, 590, 605, 606, 607, 608, 611, 612, 613, 636, 645, 659], "befor": [0, 1, 6, 8, 22, 203, 204, 205, 206, 209, 439, 593, 599, 605, 606, 607, 608, 611, 612, 613, 639, 644, 645, 651, 652, 654, 655, 657], "inform": [0, 1, 6, 7, 8, 11, 69, 386, 605, 607, 614, 616, 632, 640, 645, 657], "yet": [0, 1, 218, 593, 605, 606, 607, 611, 612, 613, 645], "point": [0, 1, 6, 26, 30, 35, 80, 90, 92, 99, 105, 107, 114, 120, 125, 136, 138, 143, 148, 155, 162, 164, 171, 173, 181, 186, 192, 195, 197, 201, 204, 216, 235, 238, 247, 250, 256, 295, 324, 387, 406, 414, 435, 569, 578, 589, 593, 605, 606, 607, 612, 613, 614, 622, 624, 627, 628, 636, 651, 657], "yesterdai": 0, "8": [0, 1, 8, 42, 288, 590, 593, 604, 605, 607, 612, 614, 630, 642, 644, 645, 647, 651, 652, 654, 656, 657], "3": [0, 1, 8, 42, 204, 205, 206, 207, 209, 214, 222, 464, 493, 495, 497, 543, 544, 567, 571, 590, 593, 598, 599, 602, 604, 605, 607, 608, 611, 612, 613, 614, 617, 619, 620, 621, 622, 623, 624, 625, 630, 635, 636, 639, 641, 642, 644, 650, 651, 652, 653, 654, 655, 656, 657], "qu60": 0, "qu90": 0, "qu120": [0, 545], "qu150": 0, "qu180": 0, "qu210": 0, "done": [0, 1, 605, 612, 613, 657], "wa": [0, 1, 8, 34, 68, 69, 220, 593, 605, 606, 607, 608, 611, 612, 613, 614, 618, 639, 643, 645, 648, 657], "ocean_cached_fil": [0, 6], "graph": [0, 1, 56, 57, 58, 203, 204, 205, 206, 209, 227, 228, 590, 593, 596, 598, 599, 601, 604, 605, 612, 613, 614, 645], "back": [0, 7, 206, 600, 612, 613, 622, 632, 650, 655, 657], "repo": [0, 1, 3, 6, 201, 589, 610, 612, 613], "commit": [0, 1, 606, 607], "master": [0, 7, 589, 607, 612, 613, 660], "pull": [0, 1, 7, 593, 606, 612, 613, 614, 617, 645], "request": [0, 1, 7, 57, 58, 582, 583, 593, 605, 606, 608, 612, 613, 614, 617, 644, 645, 652, 654, 655], "string": [0, 1, 6, 8, 506, 520, 534, 558, 605], "end": [0, 1, 26, 80, 90, 92, 99, 105, 107, 114, 120, 125, 136, 138, 143, 148, 155, 162, 164, 171, 173, 181, 186, 192, 195, 197, 204, 205, 207, 209, 214, 235, 238, 247, 250, 256, 293, 295, 296, 298, 300, 302, 304, 370, 406, 414, 569, 578, 590, 593, 596, 599, 605, 606, 607, 609, 612, 632, 643, 644], "desir": [0, 1, 8, 69, 213, 222, 593, 605, 607, 612, 613, 614, 645, 657], "lean": 0, "heavili": [0, 1], "assumpt": 0, "part": [0, 1, 4, 6, 7, 8, 11, 23, 76, 81, 93, 108, 129, 144, 158, 165, 188, 198, 202, 227, 228, 239, 260, 273, 306, 318, 365, 380, 407, 415, 423, 436, 448, 478, 493, 505, 519, 533, 557, 571, 599, 601, 604, 605, 606, 607, 610, 611, 612, 613, 617, 623, 630, 639, 645, 648], "nevertheless": 0, "were": [0, 1, 220, 456, 605, 606, 609, 611, 612, 613, 614, 634, 639], "necessari": [0, 7, 605, 612, 613, 647], "make": [0, 5, 6, 12, 13, 26, 33, 41, 42, 44, 56, 69, 80, 90, 92, 99, 105, 107, 114, 120, 125, 136, 138, 143, 148, 155, 162, 164, 171, 173, 181, 186, 192, 195, 197, 201, 215, 216, 217, 218, 219, 220, 227, 233, 235, 238, 245, 247, 250, 254, 256, 280, 288, 295, 354, 357, 404, 406, 412, 414, 569, 578, 581, 587, 588, 589, 590, 593, 596, 598, 599, 605, 606, 607, 609, 614, 619, 620, 621, 623, 624, 625, 630, 631, 632, 633, 634, 635, 636, 637, 642, 644, 645, 647, 648, 651, 657, 659], "symlink": [0, 1, 6, 11, 12, 435, 593, 606, 607, 612, 613, 645], "locat": [0, 1, 6, 8, 23, 64, 65, 67, 201, 222, 227, 373, 386, 456, 589, 595, 596, 599, 600, 605, 607, 609, 612, 614, 631, 632, 633, 634, 635, 636, 639, 642, 644, 647, 650, 652, 657], "uncach": [0, 31], "group": [0, 8, 9, 10, 11, 23, 28, 29, 73, 74, 78, 79, 88, 89, 91, 98, 103, 104, 106, 113, 118, 123, 128, 134, 135, 137, 142, 147, 149, 150, 154, 156, 160, 161, 163, 170, 172, 177, 180, 182, 185, 187, 191, 193, 194, 196, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 231, 233, 236, 239, 245, 248, 251, 254, 257, 258, 266, 267, 279, 280, 285, 288, 291, 293, 309, 312, 321, 327, 336, 341, 346, 351, 354, 357, 360, 361, 369, 377, 383, 397, 402, 404, 412, 420, 421, 423, 427, 428, 430, 434, 445, 471, 474, 482, 490, 497, 499, 500, 514, 528, 543, 545, 548, 552, 566, 567, 576, 589, 590, 591, 592, 593, 594, 595, 596, 598, 599, 600, 601, 602, 603, 604, 609, 610, 614, 616, 618, 619, 620, 621, 622, 623, 624, 625, 627, 628, 629, 630, 631, 633, 635, 638, 639, 640, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 658, 659], "public_html": [0, 1, 631, 633], "mpas_standalonedata": [0, 1, 8, 605, 614, 631, 632, 633, 634, 635, 636], "constructor": [0, 8, 204, 590, 591, 593, 598, 612, 613], "construct": [0, 1, 72, 203, 204, 205, 206, 209, 223, 579, 581, 582, 583, 587, 588, 593, 605, 612, 613, 645], "quwisc240": [0, 1, 334, 605, 606, 657, 659], "ssh_adjust": [0, 1, 589, 593, 605, 614, 648, 651], "ec30to60": [0, 1, 657, 659], "wc14": [0, 657, 659], "ecwisc30to60": [0, 1, 325, 657, 659], "sowisc12to60": [0, 339, 344, 605, 657, 659], "togeth": [0, 605, 609, 611, 612, 659], "performance_test": [0, 1, 605, 641, 659], "global": [0, 8, 28, 222, 266, 267, 279, 280, 285, 288, 291, 293, 306, 309, 312, 321, 324, 327, 330, 336, 341, 346, 351, 354, 357, 383, 397, 474, 482, 500, 511, 514, 525, 528, 539, 552, 563, 592, 593, 595, 602, 603, 605, 610, 611, 614, 635, 645, 647, 653, 656, 657], "ran": [0, 1, 613], "successfulli": [0, 1, 202, 280], "bit": [0, 1, 150, 208, 605, 606, 609, 613, 617, 619, 620, 621, 623, 624, 625, 630, 637, 641, 642, 648, 657], "nightli": [0, 1, 3, 607, 645, 649, 657, 659], "cosine_bell_cached_init": [0, 657, 659], "fro": 0, "resolut": [0, 8, 40, 43, 47, 48, 79, 83, 85, 89, 91, 93, 96, 98, 100, 113, 137, 139, 150, 152, 156, 158, 178, 183, 204, 205, 207, 208, 209, 211, 212, 214, 232, 233, 236, 239, 242, 245, 248, 251, 254, 258, 260, 267, 270, 271, 273, 403, 404, 407, 410, 412, 427, 428, 436, 441, 443, 445, 448, 451, 453, 472, 474, 478, 485, 486, 488, 491, 493, 495, 497, 500, 503, 505, 509, 511, 514, 517, 519, 523, 525, 528, 531, 533, 537, 539, 544, 545, 549, 550, 552, 555, 557, 561, 563, 567, 570, 571, 574, 576, 590, 591, 592, 593, 594, 595, 596, 598, 599, 600, 601, 602, 603, 604, 605, 611, 614, 617, 619, 620, 621, 622, 623, 624, 625, 627, 628, 629, 630, 637, 642, 643, 645, 646, 647, 648, 650, 651, 653, 656, 658], "remain": [0, 1, 439, 599, 611, 621, 637, 648, 651], "mention": [0, 1, 605, 606], "40c": 0, "41c": 0, "42": [0, 1], "60c": 0, "61c": 0, "62": 0, "80c": 0, "81c": 0, "82": 0, "85c": 0, "86c": 0, "87": 0, "95c": 0, "96c": 0, "97": 0, "sere": 0, "expect": [0, 1, 3, 8, 150, 208, 222, 291, 331, 506, 520, 534, 558, 593, 599, 605, 607, 610, 612, 617, 637, 638, 641, 645, 649, 654, 656], "basenam": 0, "extens": [0, 457, 613, 614], "altern": [0, 1, 6, 8, 612, 657], "No": [0, 1, 8, 610], "perform": [0, 1, 3, 6, 8, 18, 19, 26, 27, 40, 68, 69, 75, 76, 79, 80, 81, 89, 90, 91, 92, 93, 95, 98, 99, 104, 105, 106, 107, 108, 110, 113, 114, 120, 125, 129, 131, 135, 136, 138, 142, 143, 144, 146, 147, 148, 150, 151, 155, 156, 157, 158, 161, 162, 163, 164, 165, 167, 170, 171, 173, 181, 186, 188, 190, 192, 194, 195, 196, 197, 198, 200, 203, 204, 205, 207, 208, 209, 213, 214, 222, 225, 235, 236, 238, 239, 241, 244, 247, 248, 250, 253, 256, 260, 266, 273, 279, 280, 288, 291, 293, 295, 306, 327, 336, 341, 346, 351, 354, 357, 361, 365, 377, 380, 404, 406, 407, 409, 414, 417, 423, 427, 436, 438, 450, 478, 493, 497, 498, 505, 519, 533, 557, 567, 569, 571, 573, 576, 578, 589, 590, 591, 592, 593, 596, 598, 599, 600, 602, 603, 604, 605, 609, 610, 611, 612, 613, 614, 620, 621, 622, 623, 625, 630, 636, 637, 641, 642, 643, 645, 647, 648, 650, 653, 654, 655, 656, 659], "ensur": [0, 1, 3, 8, 33, 203, 204, 205, 207, 208, 209, 214, 590, 593, 596, 601, 604, 605, 606, 607, 613, 617, 641, 645], "don": [0, 1, 7, 8, 605, 606, 607, 611, 612, 613, 634, 635, 645, 658], "forese": 0, "problem": [0, 1, 8, 202, 605, 608, 612, 617, 641], "requr": 0, "howev": [0, 1, 605, 611, 637, 645], "relax": [0, 620], "outlin": 0, "author": [1, 593, 614, 645, 647], "2020": [1, 594, 645, 646, 651], "11": [1, 8, 42, 228, 653, 656], "16": [1, 593, 605, 612, 613, 614, 624, 630, 645, 652, 653, 654, 657], "infrastructur": [1, 606, 645], "serv": [1, 64, 65, 66, 67, 591, 605, 612], "u": [1, 593, 605, 613, 635, 636, 645], "well": [1, 3, 8, 203, 204, 205, 207, 209, 214, 222, 264, 293, 584, 590, 591, 593, 596, 598, 599, 604, 605, 609, 611, 612, 613, 614, 617, 618, 641, 643, 657, 658], "sever": [1, 8, 205, 206, 209, 461, 469, 593, 595, 601, 604, 605, 606, 607, 609, 612, 613, 617, 640, 641, 645, 657, 659], "shortcom": 1, "emerg": 1, "over": [1, 6, 8, 33, 150, 220, 440, 547, 599, 605, 606, 610, 611, 612, 613, 618, 636, 637, 639, 642, 645, 647, 648, 650, 651, 653, 654, 656], "year": [1, 203, 204, 205, 206, 209, 213, 493, 497, 567, 571, 593, 610, 620, 621, 622, 623, 624, 625, 629, 645, 651, 653], "found": [1, 8, 593, 605, 606, 607, 610, 612, 613, 614, 636, 637], "current": [1, 3, 6, 8, 11, 68, 69, 201, 220, 222, 589, 592, 593, 599, 600, 601, 604, 605, 606, 607, 609, 610, 612, 613, 614, 617, 618, 624, 636, 637, 639, 640, 641, 642, 644, 645, 647, 648, 651, 652, 656, 657, 658, 659], "system": [1, 5, 6, 11, 40, 47, 52, 76, 81, 93, 108, 129, 144, 158, 165, 188, 198, 215, 216, 217, 218, 219, 220, 239, 260, 306, 318, 407, 415, 423, 448, 605, 608, 610, 612, 613, 614, 631, 632, 633, 634, 635, 636, 647, 657], "xml": [1, 605, 606, 609, 610, 613], "pars": [1, 8, 14, 15, 17, 605, 606, 611], "script": [1, 5, 6, 8, 30, 66, 203, 204, 205, 206, 209, 220, 606, 609, 610, 613, 614, 620, 632, 636, 651], "stream": [1, 7, 8, 11, 17, 19, 22, 58, 76, 81, 93, 95, 108, 110, 131, 144, 146, 158, 165, 167, 188, 190, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 213, 214, 241, 244, 253, 409, 417, 438, 450, 573, 589, 590, 591, 593, 596, 598, 599, 601, 604, 606, 610, 614, 645], "intuit": 1, "second": [1, 8, 76, 81, 93, 108, 144, 158, 165, 188, 198, 604, 605, 606, 612, 613, 618, 620, 621, 623, 625, 630, 642, 643, 645, 648, 651, 654, 655], "lend": 1, "themselv": [1, 599, 605, 606, 610, 613, 645], "reus": [1, 605, 606, 610, 612, 613], "lead": [1, 222, 651], "config": [1, 6, 7, 11, 22, 23, 25, 26, 34, 46, 48, 51, 57, 58, 60, 61, 64, 65, 67, 69, 80, 87, 90, 92, 99, 102, 105, 107, 114, 117, 120, 125, 136, 138, 143, 148, 155, 162, 164, 171, 173, 176, 181, 186, 192, 195, 197, 201, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 220, 222, 230, 232, 235, 238, 247, 250, 256, 268, 276, 295, 306, 330, 349, 350, 403, 406, 414, 475, 479, 481, 483, 501, 508, 515, 522, 529, 536, 553, 560, 569, 570, 578, 579, 581, 582, 583, 587, 588, 589, 590, 591, 592, 593, 594, 596, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 610, 611, 629, 639, 657, 658], "third": [1, 613, 618, 651], "edit": [1, 6, 7, 69, 607, 612, 613, 645, 651, 657], "step": [1, 2, 6, 7, 8, 23, 24, 26, 31, 40, 45, 47, 50, 52, 53, 57, 58, 60, 61, 62, 63, 64, 65, 69, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 105, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 125, 126, 127, 129, 130, 131, 132, 133, 136, 138, 139, 141, 143, 144, 145, 146, 148, 152, 153, 155, 158, 159, 162, 164, 165, 166, 167, 168, 169, 171, 173, 174, 175, 176, 178, 179, 181, 183, 184, 186, 188, 189, 190, 192, 195, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 225, 235, 238, 239, 240, 241, 242, 243, 244, 247, 250, 251, 252, 253, 256, 260, 261, 262, 263, 264, 265, 269, 270, 272, 273, 274, 275, 277, 278, 282, 287, 290, 291, 292, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 311, 314, 315, 316, 318, 319, 321, 323, 324, 325, 327, 329, 330, 332, 334, 338, 339, 341, 343, 344, 346, 348, 349, 353, 356, 359, 363, 364, 365, 366, 367, 368, 370, 374, 379, 380, 381, 385, 386, 388, 389, 390, 392, 395, 397, 399, 400, 406, 407, 408, 409, 410, 411, 414, 415, 416, 417, 418, 419, 423, 424, 425, 426, 428, 429, 432, 433, 436, 437, 438, 441, 442, 443, 444, 447, 448, 449, 450, 451, 452, 453, 454, 472, 473, 476, 477, 478, 479, 480, 484, 485, 487, 488, 489, 491, 492, 493, 494, 495, 496, 497, 502, 503, 504, 505, 506, 507, 509, 510, 511, 513, 516, 517, 518, 519, 520, 521, 523, 524, 525, 527, 530, 531, 532, 533, 534, 535, 537, 538, 539, 541, 543, 554, 555, 556, 557, 558, 559, 561, 562, 563, 565, 569, 571, 572, 573, 574, 575, 578, 590, 591, 592, 594, 595, 596, 598, 599, 600, 601, 602, 603, 604, 606, 607, 609, 610, 614, 618, 619, 620, 621, 622, 623, 624, 625, 627, 628, 630, 635, 639, 642, 643, 648, 650, 651, 653, 655, 656, 658, 659], "fourth": [1, 613, 623], "easili": [1, 612], "constrain": [1, 222, 228], "us": [1, 6, 7, 8, 11, 12, 20, 22, 23, 31, 34, 40, 47, 48, 52, 56, 57, 62, 69, 73, 76, 81, 89, 91, 93, 98, 104, 106, 108, 129, 135, 142, 144, 147, 150, 156, 158, 165, 168, 187, 188, 193, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 220, 222, 228, 239, 260, 264, 267, 270, 280, 285, 288, 291, 293, 296, 298, 300, 302, 304, 306, 309, 312, 315, 318, 324, 327, 330, 336, 341, 346, 351, 354, 357, 383, 386, 389, 392, 407, 415, 423, 435, 439, 448, 458, 460, 493, 495, 497, 506, 520, 534, 544, 551, 558, 579, 581, 582, 583, 587, 588, 589, 590, 591, 593, 595, 596, 598, 599, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 617, 618, 619, 620, 621, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 639, 641, 642, 643, 644, 645, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659], "hard": [1, 591, 606, 612, 613, 637], "fifth": [1, 653], "better": [1, 8, 220, 611], "autom": [1, 206, 610], "sixth": 1, "impos": 1, "test_group": [1, 8, 9, 10, 11, 23, 74, 79, 89, 91, 98, 104, 106, 113, 118, 123, 135, 137, 142, 147, 150, 154, 156, 161, 163, 170, 172, 180, 185, 191, 194, 196, 233, 236, 245, 248, 254, 258, 267, 280, 285, 288, 291, 293, 309, 312, 321, 327, 336, 341, 346, 351, 354, 357, 361, 377, 383, 397, 404, 412, 421, 427, 430, 445, 474, 482, 497, 500, 514, 528, 552, 567, 576, 593, 605, 611, 612, 613], "resoltuion": 1, "test_cas": [1, 6, 8, 11, 28, 29, 40, 47, 52, 61, 64, 65, 68, 69, 76, 81, 83, 85, 93, 96, 100, 108, 111, 115, 121, 126, 129, 132, 139, 144, 152, 158, 165, 168, 174, 178, 183, 188, 198, 203, 204, 209, 239, 242, 251, 260, 262, 264, 270, 273, 277, 284, 296, 298, 300, 302, 304, 306, 315, 318, 325, 330, 334, 339, 344, 363, 365, 367, 370, 380, 386, 389, 392, 400, 407, 410, 415, 418, 423, 425, 428, 432, 436, 441, 443, 448, 451, 453, 472, 478, 485, 488, 491, 493, 495, 503, 505, 509, 511, 517, 519, 523, 525, 531, 533, 537, 539, 555, 557, 561, 563, 571, 574, 590, 593, 598, 605, 611, 612, 613, 614, 651, 657], "rigid": [1, 654], "applic": [1, 606, 645], "final": [1, 3, 7, 203, 204, 206, 209, 291, 324, 543, 590, 593, 596, 598, 599, 601, 604, 605, 611, 612, 613, 618, 622, 624, 645, 647, 651, 655], "help": [1, 6, 605, 610, 612, 613, 616, 636, 640, 645], "either": [1, 6, 7, 8, 42, 204, 216, 596, 605, 607, 609, 611, 612, 613, 614, 620, 621, 623, 624, 639, 645, 657], "interest": [1, 612, 613, 645, 651], "address": [1, 614], "hope": [1, 606], "significantli": [1, 8, 604, 618, 639, 645, 651], "easier": [1, 605, 606, 607, 612, 613, 614, 645, 657, 659], "12": [1, 8, 42, 470, 591, 593, 594, 602, 604, 620, 632, 645, 654], "luke": 1, "van": 1, "roekel": 1, "written": [1, 7, 8, 11, 23, 456, 468, 593, 605, 612, 654], "primarili": [1, 617], "model": [1, 3, 6, 11, 12, 13, 14, 15, 17, 64, 65, 67, 76, 81, 93, 108, 144, 158, 165, 172, 188, 198, 201, 203, 204, 205, 206, 207, 209, 214, 215, 216, 217, 218, 219, 220, 222, 225, 233, 245, 248, 254, 360, 361, 363, 365, 367, 412, 420, 427, 589, 590, 593, 594, 595, 598, 607, 608, 609, 610, 612, 613, 614, 616, 617, 619, 620, 622, 623, 624, 625, 626, 627, 628, 630, 631, 632, 633, 634, 635, 636, 637, 640, 641, 642, 643, 645, 646, 647, 648, 650, 651, 653, 656, 657], "get": [1, 7, 8, 11, 14, 15, 17, 23, 24, 42, 57, 59, 60, 62, 220, 274, 306, 349, 350, 479, 593, 605, 606, 607, 609, 614, 639, 657], "direct": [1, 8, 590, 591, 596, 598, 604, 605, 612, 635, 642, 648, 650, 656], "common": [1, 7, 8, 23, 28, 204, 206, 207, 213, 214, 590, 591, 596, 598, 599, 605, 606, 608, 609, 614, 657, 658, 659], "languag": [1, 551, 635], "rather": [1, 3, 8, 11, 12, 33, 220, 590, 596, 605, 608, 612, 613, 637, 639, 645], "custom": [1, 6, 8, 32, 33, 34, 64, 65, 67, 201, 216, 589, 605, 611, 613, 614, 635, 657], "tag": [1, 605, 610], "importantli": 1, "possibl": [1, 3, 8, 43, 222, 593, 596, 605, 606, 611, 612, 613, 639, 645, 647], "balanc": [1, 593, 596, 599, 645, 648, 651], "readabl": [1, 606, 613], "reusabl": 1, "risk": [1, 607, 648], "redesign": 1, "difficult": [1, 220, 605, 606, 636, 637], "contribut": [1, 606], "go": [1, 8, 605, 606, 607, 611, 612, 613, 635, 645], "best": [1, 605], "reusibl": 1, "In": [1, 3, 7, 8, 11, 204, 206, 222, 285, 592, 593, 601, 605, 607, 610, 611, 612, 613, 614, 617, 629, 630, 636, 637, 639, 645, 647, 648, 653, 654, 655, 656, 657, 658, 659], "extern": [1, 11, 201, 589, 605, 606, 614, 616, 640], "often": [1, 11, 605, 606, 609, 611, 612, 614, 658, 659], "mpas_tool": [1, 8, 203, 204, 205, 206, 209, 590, 591, 593, 595, 596, 598, 599, 602, 603, 604, 605, 606, 612, 613, 645], "outsid": [1, 137, 605, 624, 627, 628, 651], "prefer": [1, 3, 605, 612, 613, 614, 617], "itself": [1, 7, 8, 11, 213, 605, 611, 612, 613, 657], "attempt": [1, 220, 610, 636, 637], "led": [1, 606], "frequent": [1, 201, 589], "unintend": 1, "consequ": 1, "link": [1, 3, 7, 8, 12, 13, 35, 220, 551, 593, 596, 599, 605, 606, 607, 612, 613, 616, 636, 640, 645, 657], "chang": [1, 6, 8, 22, 47, 201, 222, 589, 599, 605, 606, 607, 609, 611, 612, 613, 614, 617, 621, 622, 632, 635, 637, 639, 641, 645, 648, 651, 653, 654, 656, 657, 659], "one": [1, 3, 6, 7, 8, 12, 21, 23, 31, 32, 35, 58, 64, 65, 67, 69, 79, 89, 91, 104, 106, 135, 142, 150, 156, 161, 163, 196, 203, 204, 205, 207, 208, 209, 214, 225, 232, 245, 280, 354, 412, 589, 590, 591, 593, 596, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 617, 618, 623, 630, 635, 636, 637, 639, 643, 644, 645, 647, 648, 651, 652, 653, 654, 655, 657, 658, 659], "sophist": [1, 605], "method": [1, 8, 9, 11, 18, 23, 24, 25, 26, 27, 28, 33, 39, 40, 44, 47, 48, 49, 52, 53, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 85, 88, 89, 90, 91, 92, 93, 96, 98, 99, 100, 103, 104, 105, 106, 107, 108, 111, 113, 114, 115, 118, 120, 121, 123, 125, 126, 128, 129, 132, 134, 135, 136, 137, 138, 139, 142, 143, 144, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 168, 170, 171, 172, 173, 174, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 202, 222, 223, 228, 231, 233, 235, 236, 238, 239, 242, 245, 247, 248, 250, 251, 254, 256, 257, 258, 260, 262, 264, 266, 267, 270, 273, 277, 279, 280, 285, 288, 291, 293, 295, 296, 298, 300, 302, 304, 306, 309, 312, 315, 318, 321, 325, 327, 330, 334, 336, 339, 341, 344, 346, 351, 354, 357, 360, 361, 363, 365, 367, 369, 370, 377, 380, 383, 386, 389, 392, 397, 400, 402, 404, 406, 407, 410, 412, 414, 415, 418, 420, 421, 423, 425, 427, 428, 430, 432, 434, 436, 441, 443, 445, 448, 451, 453, 456, 468, 471, 472, 474, 478, 482, 485, 488, 490, 491, 493, 495, 497, 498, 499, 500, 503, 505, 509, 511, 514, 517, 519, 523, 525, 528, 531, 533, 537, 539, 552, 555, 557, 561, 563, 566, 567, 569, 571, 574, 576, 578, 593, 595, 605, 606, 611, 618, 645], "beyond": [1, 601, 619], "isol": 1, "read": [1, 8, 9, 11, 14, 17, 23, 371, 372, 373, 440, 551, 593, 605, 606, 612, 613, 647, 655], "larg": [1, 8, 222, 593, 596, 599, 605, 619, 631, 637, 645, 648, 654], "unavail": 1, "files_for_e3sm": [1, 8, 605, 614, 641], "dedic": 1, "again": [1, 6, 218, 222, 605, 607, 608, 611, 612, 613, 645, 657], "from": [1, 2, 3, 6, 7, 8, 9, 11, 12, 14, 17, 23, 25, 31, 32, 34, 35, 56, 57, 58, 63, 65, 68, 69, 85, 87, 100, 102, 115, 117, 121, 126, 129, 168, 172, 174, 176, 203, 204, 205, 206, 207, 209, 213, 214, 220, 222, 226, 239, 270, 291, 293, 296, 298, 300, 302, 304, 306, 318, 324, 327, 330, 336, 341, 346, 349, 350, 371, 404, 415, 423, 435, 439, 440, 443, 448, 451, 453, 456, 461, 468, 479, 485, 491, 503, 517, 531, 543, 544, 545, 551, 555, 585, 590, 591, 592, 593, 594, 595, 596, 598, 599, 600, 601, 602, 604, 606, 608, 609, 610, 611, 612, 613, 614, 617, 620, 621, 622, 623, 624, 625, 627, 628, 630, 631, 632, 633, 634, 635, 637, 639, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659], "awkward": [1, 612], "involv": [1, 8, 69, 593, 605, 609, 655], "pio": [1, 21, 58, 590, 593, 596, 598, 599, 601, 604, 605], "task": [1, 8, 11, 21, 58, 605, 606, 612, 613, 631, 632, 633, 634, 635, 636], "node": [1, 8, 20, 21, 58, 60, 220, 606, 607, 614, 631, 632, 633, 634, 635, 636, 645, 657], "exacerb": 1, "even": [1, 8, 12, 33, 220, 605, 606, 607, 612, 613, 614, 636, 645], "processor": [1, 150, 593, 613, 617, 619, 620, 642, 644, 652, 654], "overrid": [1, 6, 8, 18, 19, 25, 26, 27, 33, 44, 47, 48, 49, 75, 80, 90, 92, 95, 99, 105, 107, 110, 114, 120, 125, 131, 136, 138, 143, 146, 148, 151, 155, 157, 162, 164, 167, 171, 173, 181, 186, 190, 192, 195, 197, 200, 235, 238, 241, 244, 247, 250, 253, 256, 295, 331, 406, 409, 414, 417, 438, 450, 498, 569, 573, 578, 593, 605, 606, 613, 614, 657], "stride": [1, 21, 58, 605], "updat": [1, 6, 7, 11, 14, 20, 22, 26, 80, 90, 92, 99, 105, 107, 114, 120, 125, 136, 138, 143, 148, 155, 162, 164, 171, 173, 181, 186, 192, 195, 197, 201, 206, 218, 222, 227, 235, 238, 247, 250, 256, 295, 406, 414, 435, 477, 479, 569, 578, 589, 590, 593, 595, 596, 598, 599, 601, 604, 608, 610, 611, 612, 645, 647, 651, 657], "automat": [1, 7, 8, 593, 605, 606, 607, 612, 613, 614, 631, 632, 633, 634, 635, 636, 645, 657], "accommod": [1, 599, 612], "dataset": [1, 224, 312, 315, 439, 456, 468, 543, 548, 581, 587, 588, 605, 612, 613, 645], "load": [1, 220, 227, 607, 612, 613, 614, 631, 632, 633, 634, 635, 636, 655, 657], "conda": [1, 5, 6, 8, 61, 201, 215, 216, 217, 218, 219, 220, 589, 593, 605, 606, 610, 612, 613, 614, 631, 632, 633, 634, 635], "environ": [1, 5, 6, 201, 215, 216, 217, 218, 219, 220, 589, 593, 605, 606, 610, 612, 613, 614, 631, 632, 633, 634, 635, 636, 645], "per": [1, 8, 21, 58, 357, 611, 614, 631, 632, 633, 634, 635, 636, 642, 643, 644, 651, 652, 654, 657], "advantag": [1, 8, 220, 593, 606, 636], "aspect": [1, 643], "unnecessarili": 1, "redund": [1, 6, 581, 587, 588], "converg": [1, 73, 74, 76, 202, 472, 474, 478, 485, 488, 542, 544, 545, 550, 592, 600, 602, 603, 605, 610, 611, 617, 618, 644, 652, 655], "sort": [1, 605], "anoth": [1, 3, 6, 7, 8, 12, 68, 69, 206, 225, 589, 591, 596, 599, 605, 606, 607, 609, 611, 612, 613, 614, 620, 622, 625, 637, 642, 645, 648, 650, 651, 657, 658, 659], "properti": [1, 8, 605, 613, 636, 644, 652], "besid": [1, 613], "uniqu": [1, 605, 606, 611, 612, 613], "overwrit": [1, 35, 457, 470], "activ": [1, 220, 490, 593, 601, 635, 636, 645, 651, 653, 657], "build": [1, 6, 8, 44, 49, 201, 207, 213, 214, 215, 216, 217, 218, 219, 220, 589, 592, 602, 603, 605, 606, 608, 610, 612, 613, 614, 620, 623, 630, 631, 632, 633, 634, 635, 636], "queu": 1, "10": [1, 8, 42, 204, 205, 206, 208, 209, 211, 228, 589, 590, 593, 594, 596, 598, 599, 604, 605, 612, 613, 614, 620, 621, 623, 624, 625, 627, 628, 630, 639, 642, 643, 645, 647, 648, 650, 651, 656, 658], "matt": 1, "hoffman": [1, 616], "longer": [1, 245, 412, 590, 593, 598, 599, 612, 621, 642, 644, 645, 648, 651, 652, 653, 656, 659], "term": [1, 11, 609, 610, 611, 612, 613], "ot": [1, 7, 612], "add": [1, 3, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 24, 25, 29, 46, 51, 55, 207, 228, 324, 349, 593, 605, 606, 607, 609, 611, 612, 613, 614, 620, 636, 644, 645, 651, 652, 654, 655, 657], "reduc": [1, 222, 605, 637, 648], "wall": [1, 656, 657], "clock": [1, 657], "differ": [1, 8, 33, 44, 49, 69, 194, 201, 202, 204, 205, 207, 208, 209, 214, 220, 239, 248, 423, 427, 544, 589, 590, 591, 593, 595, 598, 604, 605, 606, 607, 609, 611, 612, 613, 614, 617, 618, 619, 624, 629, 630, 635, 641, 642, 643, 644, 645, 650, 651, 652, 653, 654, 655, 656], "viscos": [1, 239, 248, 251, 361, 423, 427, 428, 590, 594, 596, 598, 605, 606, 612, 613, 642, 646, 650], "baroclin": [1, 28, 231, 232, 233, 236, 239, 242, 245, 248, 251, 254, 315, 590, 605, 612, 613, 642], "channel": [1, 28, 231, 233, 236, 239, 242, 245, 248, 251, 254, 315, 591, 605, 608, 612, 613, 636, 642, 643, 657], "rpe": [1, 248, 251, 427, 428, 605, 612, 642, 650], "full": [1, 8, 11, 63, 91, 106, 142, 156, 163, 196, 208, 460, 582, 583, 590, 592, 593, 596, 600, 605, 607, 610, 612, 613, 620, 621, 623, 624, 625, 630, 636, 639, 642, 644, 645, 647, 648, 650, 651, 652, 654, 656, 657], "choic": [1, 593, 611, 618], "mind": [1, 3, 6], "addit": [1, 3, 7, 8, 11, 20, 26, 80, 90, 92, 99, 105, 107, 114, 120, 125, 136, 138, 143, 148, 155, 162, 164, 171, 173, 181, 186, 192, 195, 197, 235, 238, 247, 250, 256, 295, 324, 406, 414, 569, 578, 593, 605, 606, 607, 612, 613, 616, 617, 622, 624, 629, 630, 641, 645, 651], "minim": [1, 620], "modif": [1, 3, 7, 206, 605, 613], "particularli": [1, 8, 605, 608, 611, 612, 645, 648], "mark": [1, 607], "petersen": [1, 607, 612, 642, 650], "build_base_mesh": 1, "py": [1, 8, 39, 203, 204, 205, 206, 209, 220, 605, 606, 607, 609, 610, 611, 612, 613, 614], "complex": [1, 8, 48, 605, 606, 613, 637], "dx": 1, "min": [1, 605, 612, 623, 624, 627, 628, 630, 642, 648, 650, 656], "max": [1, 605, 611, 612, 623, 624, 627, 628, 630, 644], "linear": [1, 228, 599, 604, 612, 642, 643, 650, 653, 654, 656], "log": [1, 11, 23, 57, 69, 87, 102, 117, 176, 228, 324, 605, 607, 610, 613, 654, 655, 657], "someth": [1, 6, 7, 607], "fundament": [1, 605], "soft": [1, 631, 633, 657], "add_initial_condit": 1, "quickli": [1, 8, 619, 648], "iter": [1, 222, 225, 318, 404, 415, 448, 589, 596, 599, 614, 637, 645, 648, 651], "until": [1, 170, 605, 606], "peopl": [1, 614], "workflow": [1, 605, 607], "ideal": [1, 11, 40, 47, 52, 76, 81, 93, 108, 129, 144, 158, 165, 188, 198, 239, 260, 306, 318, 407, 415, 423, 448, 604, 605, 606, 610, 611, 612, 614, 629, 637, 651, 653, 656, 658], "possibli": [1, 8, 206, 605, 607, 612, 613], "cach": [1, 2, 9, 11, 12, 64, 65, 610, 614, 631, 632, 633, 634, 635, 636, 657, 659], "version": [1, 6, 8, 33, 61, 68, 69, 201, 589, 590, 593, 599, 605, 606, 607, 609, 612, 613, 614, 620, 623, 624, 629, 630, 635, 636, 640, 642, 643, 645, 650, 653, 656, 657], "submit": [1, 636], "job": [1, 220, 610, 617, 631, 632, 633, 634, 635, 651], "13": [1, 8, 42, 612, 642, 645, 650], "write": [1, 8, 14, 15, 17, 20, 21, 22, 222, 230, 396, 440, 580, 593, 594, 599, 604, 605, 607, 612, 613], "function": [1, 7, 8, 19, 41, 48, 57, 95, 110, 131, 140, 146, 150, 167, 190, 200, 203, 204, 205, 206, 207, 209, 214, 220, 222, 241, 244, 253, 283, 331, 376, 409, 417, 438, 450, 506, 520, 534, 542, 543, 547, 558, 573, 593, 595, 599, 603, 605, 606, 610, 611, 612, 613, 623, 624, 627, 628, 630, 641, 644, 645, 647, 650, 652, 654, 655, 656, 658], "class": [1, 8, 9, 11, 18, 23, 28, 33, 39, 40, 47, 52, 72, 73, 74, 76, 78, 79, 81, 83, 85, 88, 89, 91, 93, 96, 98, 100, 103, 104, 106, 108, 111, 113, 115, 118, 121, 123, 126, 128, 129, 132, 134, 135, 137, 139, 142, 144, 147, 149, 150, 152, 154, 156, 158, 160, 161, 163, 165, 168, 170, 172, 174, 177, 178, 180, 182, 183, 185, 187, 188, 191, 193, 194, 196, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 223, 231, 233, 236, 239, 242, 245, 248, 251, 254, 257, 258, 260, 262, 264, 266, 267, 270, 273, 277, 279, 280, 285, 288, 291, 293, 296, 298, 300, 302, 304, 306, 309, 312, 315, 318, 321, 325, 327, 330, 331, 334, 336, 339, 341, 344, 346, 351, 354, 357, 360, 361, 363, 365, 367, 369, 370, 377, 380, 383, 386, 389, 392, 397, 400, 402, 404, 407, 410, 412, 415, 418, 420, 421, 423, 425, 427, 428, 430, 432, 434, 436, 441, 443, 445, 448, 451, 453, 456, 468, 471, 472, 474, 478, 482, 485, 488, 490, 491, 493, 495, 497, 499, 500, 503, 505, 509, 511, 514, 517, 519, 523, 525, 528, 531, 533, 537, 539, 552, 555, 557, 561, 563, 566, 567, 571, 574, 576, 589, 590, 591, 592, 594, 595, 596, 598, 599, 600, 601, 602, 603, 604, 605, 611, 612, 613], "larger": [1, 202, 624, 627, 628], "descend": [1, 593, 605, 606, 612, 613], "testcas": [1, 6, 8, 11, 29, 40, 47, 52, 64, 65, 68, 69, 76, 81, 83, 85, 93, 96, 100, 108, 111, 121, 126, 129, 132, 139, 144, 152, 158, 165, 168, 174, 178, 183, 188, 198, 239, 242, 251, 260, 264, 269, 275, 278, 282, 284, 287, 290, 292, 297, 299, 301, 303, 305, 306, 307, 311, 314, 316, 319, 323, 325, 329, 334, 338, 339, 343, 348, 353, 356, 359, 379, 381, 385, 388, 390, 399, 400, 407, 410, 415, 418, 423, 428, 432, 436, 441, 443, 448, 451, 453, 472, 476, 480, 484, 485, 488, 493, 495, 502, 507, 510, 516, 521, 524, 530, 535, 538, 554, 559, 562, 571, 574, 593, 604, 606, 611, 612, 613, 614, 642, 645, 647, 648, 650, 653, 656, 657], "equival": [1, 605, 607, 613, 631], "config_driv": [1, 613], "config_": [1, 613], "collect": [1, 7, 8, 28, 59, 72, 223, 544, 605, 609, 612, 613, 617], "struck": 1, "improv": [1, 593, 645], "jinja2": [1, 17, 22, 593, 605], "templat": [1, 2, 17, 22, 202, 222, 593, 599, 610, 613, 614], "manipul": [1, 606], "usr": [1, 39, 216, 632, 636, 657], "bin": [1, 607, 635, 657], "env": [1, 607, 635], "pickl": [1, 6, 8, 657], "configpars": [1, 8, 605, 611, 612], "loggingcontext": [1, 8], "def": [1, 3, 7, 8, 593, 605, 606, 611, 612, 613], "main": [1, 4, 8, 18, 220, 593, 605, 606, 607, 612, 613, 617, 641, 645, 658], "open": [1, 5, 324, 440, 599, 612, 613, 645, 651], "test_case_": 1, "rb": 1, "handl": [1, 8, 202, 439, 599, 612, 613, 636, 644, 652, 654], "steps_to_run": [1, 6, 8, 23, 63, 69, 605, 611, 614], "new_step_log_fil": [1, 23], "interpol": [1, 224, 330, 392, 393, 394, 439, 443, 491, 595, 599, 611, 612, 614, 648, 651, 655], "extendedinterpol": [1, 611], "config_filenam": [1, 11, 23, 605], "stdout": [1, 6, 8, 11, 23, 324, 605, 613], "stderr": [1, 8, 11, 23, 605], "test_nam": 1, "replac": [1, 7, 8, 14, 15, 17, 20, 22, 23, 35, 440, 593, 605, 606, 611, 612, 613, 614, 645, 657], "_": [1, 593, 605, 607, 612], "logger": [1, 8, 11, 23, 39, 57, 87, 102, 117, 176, 324, 601, 604, 605, 612, 613], "__name__": 1, "__main__": 1, "curli": 1, "brace": 1, "element": [1, 581, 587, 588], "variabl": [1, 3, 6, 9, 11, 23, 27, 28, 40, 47, 52, 56, 68, 69, 74, 75, 76, 79, 81, 83, 85, 89, 91, 93, 96, 98, 100, 108, 129, 139, 144, 150, 151, 152, 156, 157, 158, 168, 178, 183, 188, 198, 204, 207, 208, 211, 212, 214, 220, 222, 225, 233, 236, 239, 242, 245, 248, 251, 254, 258, 264, 267, 270, 273, 280, 291, 293, 296, 304, 306, 309, 312, 315, 321, 327, 330, 341, 346, 362, 370, 377, 380, 383, 386, 389, 392, 397, 404, 407, 410, 412, 422, 427, 428, 431, 436, 441, 443, 445, 451, 453, 456, 458, 460, 461, 468, 469, 472, 474, 478, 486, 491, 493, 495, 497, 498, 500, 503, 505, 511, 514, 517, 519, 525, 528, 531, 533, 539, 552, 555, 557, 563, 567, 571, 574, 576, 581, 587, 588, 593, 596, 599, 601, 604, 605, 606, 607, 608, 612, 613, 616, 617, 620, 621, 623, 624, 625, 627, 628, 630, 631, 632, 633, 634, 635, 636, 637, 640, 641, 642, 645, 648, 650, 651, 653, 656, 657], "valu": [1, 7, 8, 15, 20, 69, 74, 76, 150, 158, 202, 222, 228, 248, 260, 427, 456, 458, 459, 460, 463, 464, 542, 543, 544, 545, 549, 550, 590, 591, 593, 598, 599, 601, 604, 605, 606, 610, 611, 612, 613, 614, 618, 623, 624, 627, 628, 630, 639, 642, 643, 645, 646, 647, 650, 651, 653, 654, 655, 656], "content": [1, 6, 8, 605, 606, 612, 613, 657], "normal": [1, 605, 607, 636, 651], "contrast": [1, 8, 611, 637, 645, 653], "seri": [1, 73, 74, 202, 222, 225, 251, 428, 456, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 592, 593, 599, 600, 602, 603, 605, 610, 612, 617, 618, 624, 641, 648, 651], "format": [1, 7, 8, 370, 407, 506, 520, 534, 549, 558, 571, 574, 576, 590, 593, 596, 599, 601, 604, 605, 606, 611, 612, 613, 614, 632, 641, 643, 645, 648, 651, 654], "statement": [1, 3, 8, 605, 609, 613], "syntax": [1, 3, 606, 613], "immutable_stream": [1, 593, 605, 612, 613], "filename_templ": [1, 593, 605, 612, 613], "restart": [1, 23, 91, 106, 129, 142, 156, 163, 196, 202, 203, 204, 205, 206, 207, 208, 209, 213, 214, 245, 291, 293, 296, 298, 300, 302, 304, 327, 341, 346, 350, 354, 412, 590, 591, 593, 596, 598, 599, 605, 606, 609, 612, 617, 620, 621, 623, 624, 625, 630, 641, 642, 645, 648], "type": [1, 7, 83, 85, 89, 91, 93, 96, 98, 100, 113, 137, 139, 150, 152, 156, 158, 168, 178, 183, 222, 228, 258, 403, 404, 412, 441, 445, 591, 593, 601, 604, 605, 606, 608, 609, 611, 612, 613, 614, 620, 625, 642, 643, 644, 645, 648, 650, 651, 652, 656, 659], "output_interv": [1, 593, 605, 612, 613], "0000_00": [1, 604, 605, 612, 613], "00": [1, 8, 604, 605, 612, 613, 635, 651, 657], "01": [1, 591, 604, 605, 612, 613, 643, 651], "clobber_mod": [1, 605, 612, 613], "truncat": [1, 603, 605, 612, 613, 655], "var_struct": [1, 605, 612], "tracer": [1, 222, 499, 543, 548, 590, 592, 593, 598, 600, 602, 605, 612, 644, 645, 652, 654], "var": [1, 393, 396, 605, 612, 613], "xtime": [1, 396, 593, 605, 612, 613], "normalveloc": [1, 8, 203, 204, 207, 590, 593, 605, 612, 613], "layerthick": [1, 8, 222, 581, 585, 586, 587, 588, 590, 593, 601, 604, 605, 612, 613], "basic": [1, 6, 7, 607, 614, 632, 636, 657], "config_write_output_on_startup": [1, 605, 612], "config_run_dur": [1, 605, 612, 613], "15": [1, 8, 42, 206, 404, 590, 593, 594, 596, 598, 599, 605, 612, 613, 617, 621, 622, 642, 644, 646, 648, 650, 651, 652, 657], "config_use_mom_del2": [1, 605, 612], "config_implicit_bottom_drag_coeff": [1, 605, 612, 613], "1": [1, 6, 7, 8, 11, 40, 42, 47, 52, 76, 81, 93, 108, 129, 144, 158, 165, 188, 198, 203, 204, 205, 206, 207, 208, 209, 211, 213, 214, 222, 226, 233, 239, 254, 260, 324, 357, 407, 415, 423, 440, 448, 505, 519, 533, 543, 557, 581, 587, 588, 590, 591, 593, 594, 599, 601, 604, 605, 608, 611, 612, 613, 614, 618, 619, 620, 621, 623, 624, 625, 627, 628, 630, 632, 635, 636, 637, 639, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 660], "0e": [1, 605, 612, 613], "2": [1, 3, 8, 204, 205, 206, 207, 209, 214, 222, 254, 357, 544, 548, 590, 593, 594, 596, 600, 604, 605, 611, 612, 613, 614, 617, 620, 621, 622, 623, 624, 625, 627, 628, 630, 632, 635, 636, 639, 642, 643, 644, 645, 648, 650, 651, 652, 654, 655, 656, 657], "config_use_cvmix_background": [1, 605, 612], "config_cvmix_background_diffus": [1, 605, 612], "0": [1, 3, 6, 7, 8, 42, 69, 206, 215, 216, 217, 218, 219, 220, 226, 228, 324, 440, 463, 464, 548, 581, 586, 587, 588, 591, 593, 596, 604, 605, 606, 608, 612, 613, 614, 616, 618, 619, 620, 621, 622, 623, 624, 625, 627, 628, 630, 632, 636, 639, 640, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 656, 657, 660], "config_cvmix_background_viscos": [1, 605, 612], "4": [1, 7, 8, 98, 147, 170, 193, 203, 204, 205, 207, 209, 214, 233, 236, 288, 361, 590, 591, 593, 594, 596, 598, 601, 602, 604, 605, 606, 610, 611, 612, 613, 614, 619, 620, 621, 623, 624, 625, 628, 630, 636, 640, 641, 642, 643, 644, 645, 646, 648, 650, 651, 652, 653, 654, 656, 657], "regard": [1, 3], "whole": [1, 23, 605, 606, 612, 648, 651, 657], "degre": [1, 41, 48, 49, 54, 326, 331, 335, 340, 345, 401, 512, 526, 540, 564, 593, 614, 642, 645, 648, 650, 651], "left": [1, 6, 222, 612, 618, 639, 644, 656], "across": [1, 7, 8, 150, 205, 222, 228, 590, 591, 596, 600, 605, 606, 609, 610, 612, 613, 638, 645], "increas": [1, 544, 593, 606, 611, 618, 622, 651], "simpler": [1, 607, 612, 613, 637], "perhap": [1, 16, 605], "less": [1, 267, 270, 605, 618, 639, 645], "creation": [1, 593, 614, 645], "comment": [1, 7, 216, 605, 614, 621], "certain": [1, 8, 33, 228, 370, 605, 607, 614, 655], "familiar": [1, 612, 613], "somewher": 1, "recommend": [1, 6, 7, 8, 605, 606, 607, 636], "With": [1, 607, 612, 613, 651], "essenti": [1, 6, 605], "inevit": 1, "minimum": [1, 8, 228, 439, 440, 458, 459, 460, 463, 464, 593, 605, 611, 612, 613, 614, 623, 624, 627, 628, 630, 639, 642, 643, 644, 645, 647, 648, 650, 651, 652, 654, 656], "level": [1, 3, 8, 206, 222, 228, 349, 350, 403, 404, 412, 435, 441, 445, 543, 581, 582, 583, 584, 585, 586, 587, 588, 590, 593, 596, 599, 605, 606, 612, 613, 614, 619, 620, 621, 622, 623, 624, 625, 627, 628, 630, 642, 643, 645, 646, 648, 650, 651, 652, 656, 659], "learn": [1, 606], "curv": [1, 606, 653], "skill": [1, 606], "pai": 1, "off": [1, 6, 228, 607, 608, 629], "cannot": [1, 8, 202, 605, 612], "organ": [1, 610], "greatli": 1, "simplifi": [1, 8, 596, 648], "cfg": [1, 8, 25, 605, 606, 607, 611, 612, 613, 614, 645, 651, 657], "mpas_core_framework_modul": 1, "mpas_core_framework_packag": 1, "shared_step": 1, "test_group_shared_modul": 1, "framework_modul": 1, "framework_packag": 1, "slightli": [1, 8, 605], "convent": [1, 593, 612, 613, 645], "mpascor": [1, 11, 23, 28, 59, 231, 257, 279, 360, 402, 420, 490, 566, 605, 606, 612, 613], "now": [1, 605, 607, 612, 613, 614, 636, 653], "dynam": [1, 222, 225, 266, 279, 291, 293, 296, 298, 300, 302, 304, 327, 336, 341, 346, 440, 589, 593, 596, 605, 609, 610, 614, 620, 637, 645, 648, 651, 653, 656, 658], "landic": [1, 4, 6, 8, 9, 39, 66, 67, 71, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 605, 607, 609, 610, 612, 613, 614, 615, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 657, 658, 659], "testgroup": [1, 10, 11, 23, 605, 606, 612, 613], "legaci": [1, 6, 220, 222, 593, 605, 606, 609, 611, 612, 614, 616, 636, 640, 645, 649, 656, 660], "mismip3d": 1, "least": [1, 8, 605, 607, 645], "reason": [1, 605, 606, 611, 612, 613, 645, 659], "next": [1, 7, 206, 605, 612, 613, 622, 639, 645, 647, 648, 651, 657], "hierarchi": 1, "rel": [1, 3, 6, 8, 12, 16, 31, 32, 33, 64, 65, 67, 68, 69, 201, 204, 542, 543, 589, 605, 606, 607, 609, 612, 614, 642, 645, 648, 650, 651, 657, 658], "distinguish": [1, 439, 620, 622, 623, 625, 630, 642, 650], "variant": [1, 31, 203, 204, 205, 206, 209, 590, 591, 593, 598, 599, 601, 604, 605, 607, 612, 613, 618, 620, 621, 622, 623, 624, 625, 630, 636, 639, 642, 644, 645, 651, 653, 656], "vari": [1, 392, 436, 441, 445, 592, 593, 595, 599, 600, 602, 603, 605, 608, 611, 636, 639, 644, 645, 647, 648, 651, 652, 653], "characterist": 1, "base_mesh": [1, 8, 40, 47, 605, 612], "refer": [1, 7, 11, 222, 226, 248, 427, 581, 584, 587, 588, 605, 606, 607, 609, 610, 611, 612, 613, 639, 642, 650, 656], "confus": [1, 6, 605, 606, 607, 610, 611, 612, 613], "tri": [1, 606], "clearer": 1, "distinct": [1, 606], "clean": [1, 3, 66, 605, 607, 610], "what": [1, 3, 8, 220, 593, 606, 612, 613, 635, 657], "here": [1, 8, 202, 203, 204, 205, 207, 208, 209, 213, 214, 590, 591, 593, 596, 598, 599, 601, 604, 605, 606, 607, 611, 612, 613, 614, 621, 622, 625, 631, 632, 633, 634, 635, 636, 645, 646, 654, 655, 657, 659], "combin": [1, 11, 12, 23, 33, 61, 87, 102, 117, 176, 324, 593, 601, 604, 605, 608, 611, 614, 617, 624, 645, 657], "self": [1, 8, 25, 54, 203, 204, 209, 392, 590, 593, 596, 598, 601, 604, 605, 606, 611, 612, 613, 614, 655], "add_input_fil": [1, 8, 204, 605, 611, 612, 613], "run_model": [1, 8, 85, 100, 108, 174, 202, 203, 204, 601, 604, 605, 612, 613, 619, 620, 622, 623, 625, 630], "str": [1, 8, 9, 11, 12, 14, 15, 16, 17, 20, 21, 22, 23, 28, 31, 32, 34, 35, 36, 40, 47, 52, 56, 57, 58, 61, 63, 64, 65, 66, 67, 68, 69, 74, 76, 79, 81, 83, 85, 87, 89, 91, 93, 96, 98, 100, 102, 108, 113, 129, 139, 144, 150, 152, 156, 158, 165, 174, 178, 183, 188, 198, 227, 228, 229, 230, 232, 233, 236, 239, 242, 245, 248, 251, 254, 258, 260, 264, 271, 273, 274, 277, 291, 293, 296, 298, 300, 302, 304, 306, 309, 312, 321, 324, 325, 327, 330, 334, 339, 341, 344, 346, 349, 350, 370, 377, 380, 383, 386, 392, 397, 400, 403, 404, 407, 410, 412, 423, 427, 428, 435, 436, 440, 441, 445, 456, 458, 460, 468, 474, 486, 491, 493, 495, 497, 545, 548, 549, 550, 551, 567, 570, 571, 574, 576, 580, 605, 611, 612, 613], "__init__": [1, 8, 9, 11, 23, 28, 33, 39, 40, 47, 52, 72, 73, 74, 76, 78, 79, 81, 83, 85, 88, 89, 91, 93, 96, 98, 100, 103, 104, 106, 108, 111, 113, 115, 118, 121, 123, 126, 128, 129, 132, 134, 135, 137, 139, 142, 144, 147, 149, 150, 152, 154, 156, 158, 160, 161, 163, 165, 168, 170, 172, 174, 177, 178, 180, 182, 183, 185, 187, 188, 191, 193, 194, 196, 198, 223, 231, 233, 236, 239, 242, 245, 248, 251, 254, 257, 258, 260, 262, 264, 266, 267, 270, 273, 277, 279, 280, 285, 288, 291, 293, 296, 298, 300, 302, 304, 306, 309, 312, 315, 318, 321, 325, 327, 330, 334, 336, 339, 341, 344, 346, 351, 354, 357, 360, 361, 363, 365, 367, 369, 370, 377, 380, 383, 386, 389, 392, 397, 400, 402, 404, 407, 410, 412, 415, 418, 420, 421, 423, 425, 427, 428, 430, 432, 434, 436, 441, 443, 445, 448, 451, 453, 456, 468, 471, 472, 474, 478, 482, 485, 488, 490, 491, 493, 495, 497, 499, 500, 503, 505, 509, 511, 514, 517, 519, 523, 525, 528, 531, 533, 537, 539, 552, 555, 557, 561, 563, 566, 567, 571, 574, 576, 593, 605, 606, 609, 611, 612, 613], "subdir": [1, 6, 11, 23, 40, 47, 52, 76, 81, 85, 93, 100, 108, 129, 144, 158, 165, 174, 188, 198, 239, 260, 306, 330, 380, 407, 423, 436, 571, 590, 598, 605, 611, 612, 613], "none": [1, 7, 8, 11, 12, 14, 15, 17, 20, 21, 22, 23, 31, 32, 34, 36, 38, 40, 47, 52, 56, 58, 61, 63, 65, 66, 67, 68, 69, 76, 81, 85, 93, 100, 108, 129, 144, 150, 156, 158, 165, 174, 188, 198, 228, 239, 260, 264, 284, 306, 318, 324, 330, 380, 407, 415, 423, 436, 448, 458, 459, 460, 468, 469, 470, 571, 605, 611, 612, 617, 618, 635, 639, 642, 648, 650, 651, 652, 656], "min_cor": [1, 8, 11, 40, 47, 52, 76, 81, 93, 108, 129, 144, 158, 165, 188, 198, 239, 260, 306, 318, 407, 415, 423, 448, 477, 590, 593, 598, 604, 605, 611, 612, 613], "thread": [1, 8, 11, 23, 40, 47, 52, 76, 81, 93, 108, 129, 144, 158, 165, 188, 198, 239, 254, 260, 306, 318, 357, 407, 415, 423, 448, 590, 593, 605, 609, 612, 613, 614, 641, 642, 645, 647], "nu": [1, 239, 251, 423, 428, 590, 598, 605, 612, 613], "belong": [1, 8, 11, 23, 28, 32, 40, 47, 52, 73, 74, 76, 78, 79, 81, 83, 85, 88, 89, 91, 93, 96, 98, 100, 103, 104, 106, 108, 111, 113, 115, 118, 121, 123, 126, 128, 129, 132, 134, 135, 137, 139, 142, 144, 147, 149, 150, 152, 154, 156, 158, 160, 161, 163, 165, 168, 170, 172, 174, 177, 178, 180, 182, 183, 185, 187, 188, 191, 193, 194, 196, 198, 231, 233, 236, 239, 242, 245, 248, 251, 254, 257, 258, 260, 262, 264, 266, 267, 270, 273, 277, 279, 280, 285, 288, 291, 293, 296, 298, 300, 302, 304, 306, 309, 312, 315, 318, 321, 325, 327, 330, 334, 336, 339, 341, 344, 346, 351, 354, 357, 360, 361, 363, 365, 367, 369, 370, 377, 380, 383, 386, 389, 392, 397, 400, 402, 404, 407, 410, 412, 415, 418, 420, 421, 423, 425, 427, 428, 430, 432, 434, 436, 441, 443, 445, 448, 451, 453, 471, 472, 474, 478, 482, 485, 488, 490, 491, 493, 495, 497, 499, 500, 503, 505, 509, 511, 514, 517, 519, 523, 525, 528, 531, 533, 537, 539, 552, 555, 557, 561, 563, 566, 567, 571, 574, 576, 593, 605, 606, 611, 612, 613, 659], "int": [1, 8, 11, 32, 36, 40, 41, 42, 43, 44, 47, 52, 57, 60, 76, 81, 93, 108, 129, 144, 158, 165, 188, 198, 225, 228, 239, 260, 267, 270, 271, 273, 306, 318, 324, 350, 392, 407, 415, 423, 448, 472, 474, 478, 485, 486, 488, 500, 503, 505, 509, 511, 514, 517, 519, 523, 525, 528, 531, 533, 537, 539, 543, 552, 555, 557, 561, 563, 593, 605, 611, 612], "fewer": [1, 11, 40, 47, 52, 76, 81, 93, 108, 129, 144, 158, 165, 188, 198, 239, 260, 306, 318, 407, 415, 423, 448, 596, 605, 612, 648, 657], "below": [1, 6, 11, 40, 47, 52, 76, 81, 93, 108, 129, 144, 158, 165, 188, 198, 206, 220, 239, 260, 306, 318, 407, 415, 423, 439, 440, 448, 589, 593, 596, 605, 607, 611, 612, 613, 614, 616, 618, 623, 630, 636, 637, 639, 644, 645, 647, 648, 651, 652, 654, 655, 657], "fail": [1, 8, 11, 23, 34, 40, 47, 52, 69, 76, 81, 93, 108, 129, 144, 158, 165, 188, 198, 239, 260, 306, 318, 407, 415, 423, 448, 593, 605, 610, 612, 613, 614, 644, 645, 647, 652, 654], "float": [1, 7, 8, 40, 42, 43, 47, 69, 76, 158, 226, 228, 239, 251, 258, 260, 264, 271, 423, 428, 436, 439, 440, 441, 443, 445, 448, 451, 453, 456, 458, 459, 460, 463, 464, 486, 590, 598, 599, 605, 612, 617, 619, 637], "super": [1, 26, 80, 90, 92, 99, 105, 107, 114, 120, 125, 136, 138, 143, 148, 155, 162, 164, 171, 173, 181, 186, 192, 195, 197, 235, 238, 247, 250, 256, 295, 406, 414, 569, 578, 593, 605, 606, 611, 612, 613], "add_namelist_fil": [1, 11, 593, 605, 612, 613], "baroclinic_channel": [1, 7, 8, 589, 597, 605, 606, 609, 612, 613, 640, 641, 649, 657, 658, 659], "config_mom_del2": [1, 590, 598, 605, 612], "add_namelist_opt": [1, 11, 596, 605, 612, 613], "add_streams_fil": [1, 11, 593, 596, 605, 612, 613], "add_output_fil": [1, 8, 593, 605, 612, 613], "add_model_as_input": [1, 8, 605, 612, 613], "popul": 1, "dure": [1, 8, 11, 20, 22, 23, 590, 591, 593, 596, 598, 605, 606, 611, 614, 637, 645, 656, 657, 658, 659], "phase": [1, 22, 206, 651], "idea": [1, 8, 605, 612, 613, 654], "runtim": [1, 8, 20, 203, 204, 205, 206, 209, 596, 601, 604], "hopefulli": [1, 614], "tedium": 1, "later": [1, 8, 11, 33, 69, 590, 598, 599, 605, 611, 612, 613, 614, 629, 645, 651], "order": [1, 6, 8, 593, 601, 603, 605, 607, 612, 613, 617, 637, 645, 647, 651, 654, 655, 657], "top": [1, 222, 458, 581, 582, 583, 584, 585, 586, 587, 588, 596, 599, 605, 618, 637, 639, 650, 651], "partit": [1, 56, 58, 203, 204, 205, 206, 209, 222, 227, 228, 590, 593, 596, 598, 599, 601, 604, 605, 613, 614, 631, 632, 633, 634, 635, 645, 657], "execut": [1, 6, 8, 13, 57, 58, 201, 589, 596, 599, 605, 607, 612, 613, 614, 631, 632, 633, 634, 635, 636, 657], "pass": [1, 6, 8, 23, 69, 593, 605, 606, 607, 609, 611, 612, 613, 617, 657], "directli": [1, 8, 11, 605, 606, 609, 610, 612, 613, 624, 632, 645, 655], "tread": 1, "maximum": [1, 8, 69, 228, 349, 458, 459, 460, 463, 464, 593, 614, 623, 624, 627, 628, 630, 639, 644, 645, 647, 652, 654, 656], "memori": [1, 11, 593, 605, 614, 645, 647, 655], "amount": [1, 11, 222, 593, 605, 606, 624, 627, 628, 638, 651], "disk": [1, 593, 605, 607, 614, 632, 635, 645], "workerqueu": 1, "explain": [1, 606], "total": [1, 60, 208, 469, 594, 596, 606, 618, 632], "determin": [1, 8, 12, 23, 58, 140, 590, 592, 593, 599, 600, 602, 605, 611, 612, 613, 617, 627, 628, 637, 639, 641, 642, 644, 645, 650, 651, 652, 654], "slurm": [1, 610, 614, 631, 632, 633, 634, 635, 657], "error": [1, 8, 11, 23, 202, 222, 271, 486, 542, 543, 544, 545, 547, 550, 592, 600, 603, 605, 606, 607, 610, 611, 612, 619, 654, 655], "rais": [1, 7, 8, 11, 16, 34, 35, 69, 590, 605, 612, 613, 654], "few": [1, 6, 204, 207, 213, 214, 220, 590, 591, 593, 596, 598, 599, 605, 606, 612, 613, 614, 636, 640, 644, 645, 651, 652, 654], "particular": [1, 220, 593, 605, 607, 610, 611, 612, 613, 632, 636, 645, 657], "otherwis": [1, 8, 593, 605, 612, 631, 632, 633, 634, 635, 636, 653, 656], "mean": [1, 6, 8, 168, 209, 271, 455, 456, 469, 486, 592, 599, 600, 607, 612, 613, 637, 639, 641, 642, 645, 650, 656, 659], "non": [1, 8, 601, 604, 619, 645, 656], "known": [1, 20, 592, 600, 602, 605, 611, 612, 613, 619, 645], "strategi": [1, 8], "happen": [1, 8, 69, 605, 612, 613, 624, 627, 628, 644, 652, 654, 655], "care": [1, 8, 593, 605, 607, 613], "suffici": [1, 227], "worri": [1, 605], "globalocean": [1, 267, 280, 285, 288, 291, 293, 309, 312, 321, 327, 336, 341, 346, 351, 354, 357, 474, 482, 593, 605, 606, 611, 612, 613], "getint": [1, 601, 605, 611, 612, 613], "init_cor": [1, 593, 605, 614, 645, 647], "init_min_cor": [1, 593, 605, 614, 645, 647], "init_thread": [1, 605, 614, 645, 647], "forward_cor": [1, 593, 605, 614, 645, 647], "forward_min_cor": [1, 593, 605, 614, 645, 647], "forward_thread": [1, 605, 614, 645, 647], "ref_": 1, "alg_machine_data": 1, "root": [1, 64, 65, 67, 201, 271, 486, 589, 592, 600, 605, 606, 607, 609, 614, 631, 632, 633, 634, 635, 636, 639, 657], "mesh_databas": [1, 614, 631, 632, 633, 634, 635, 636, 657], "initial_condition_databas": [1, 614, 631, 632, 633, 634, 635, 636, 657], "bathymetry_databas": [1, 8, 605, 614, 631, 632, 633, 634, 635, 636, 657], "ocean_database_root": [1, 8, 605, 614, 631, 632, 633, 634, 635, 636, 657], "project": [1, 3, 6, 39, 216, 589, 607, 612, 613, 614, 631, 632, 636, 651, 657], "regionalclim": [1, 632, 636], "common_mpa": [1, 632, 636], "grid": [1, 41, 48, 54, 203, 204, 205, 206, 209, 222, 227, 230, 326, 331, 335, 340, 345, 361, 387, 393, 394, 401, 439, 443, 512, 526, 540, 564, 579, 580, 581, 582, 583, 584, 587, 588, 590, 591, 593, 594, 596, 598, 599, 601, 604, 605, 612, 613, 614, 619, 627, 628, 632, 636, 642, 643, 644, 645, 646, 648, 650, 651, 652, 655, 656], "mali": [1, 6, 72, 76, 79, 81, 89, 91, 93, 104, 106, 108, 129, 135, 142, 144, 150, 156, 158, 161, 163, 165, 188, 194, 196, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 213, 214, 220, 605, 607, 609, 610, 614, 616, 617, 618, 620, 622, 623, 624, 629, 630, 631, 632, 633, 634, 635, 636, 637, 657, 658], "landice_database_root": [1, 614, 631, 632, 633, 634, 635, 636, 657], "albani": [1, 6, 201, 207, 213, 214, 215, 216, 217, 219, 220, 605, 614, 616, 617, 619, 620, 623, 630, 631, 632, 633, 634, 635, 636, 657], "compass_env": [1, 631, 632, 633, 634, 635, 636], "climat": [1, 39, 216, 631, 632, 633, 636, 645, 653, 657], "shared_clim": [1, 216, 632, 636, 657], "anaconda_env": 1, "single_nod": [1, 614, 631, 632, 633, 634, 635, 636, 657], "whether": [1, 6, 8, 11, 12, 23, 24, 31, 34, 35, 36, 58, 62, 63, 69, 150, 156, 158, 224, 267, 270, 296, 302, 304, 306, 312, 315, 321, 324, 325, 330, 334, 339, 344, 392, 400, 407, 436, 441, 445, 456, 493, 495, 497, 567, 571, 574, 593, 605, 607, 608, 612, 613, 614, 619, 620, 621, 622, 625, 631, 632, 633, 634, 635, 636, 639, 642, 643, 645, 648, 650, 651, 652, 654, 656, 657], "mpirun": [1, 608, 614, 631, 632, 633, 634, 635, 636, 657], "srun": [1, 608, 614, 631, 632, 633, 634, 635, 636, 657], "parallel_execut": [1, 608, 614, 631, 632, 633, 634, 635, 636, 657], "cores_per_nod": [1, 614, 631, 632, 633, 634, 635, 636, 657], "36": [1, 590, 593, 599, 604, 605, 612, 631, 632, 636, 645, 647, 651, 657], "account": [1, 617, 631, 632, 634, 635, 636, 657], "multiprocess": [1, 606, 614], "dask": [1, 614], "18": [1, 604, 614, 632, 655], "variou": [1, 73, 474, 593, 599, 602, 603, 605, 607, 651], "find": [1, 7, 34, 43, 387, 455, 606, 607, 608, 612, 614, 647, 657], "compil": [1, 5, 6, 215, 216, 217, 218, 219, 220, 605, 608, 610, 612, 613, 617, 631, 632, 633, 634, 635, 636, 655, 657], "mpi": [1, 8, 215, 216, 217, 218, 220, 357, 607, 608, 610, 612, 613, 631, 632, 633, 634, 635, 655, 657], "explor": [1, 599, 605, 612, 639, 651, 654], "intend": [1, 3, 8, 206, 591, 593, 599, 613, 614, 645, 658], "incorpor": [1, 605, 645], "come": [1, 12, 593, 599, 605, 607, 612, 613, 617, 631, 632, 633, 634, 635, 636, 638, 645, 649, 656], "placehold": [1, 11, 605, 657], "conceptu": [1, 605, 606, 612, 613, 648, 651], "most": [1, 8, 76, 81, 93, 108, 144, 158, 165, 188, 198, 201, 209, 220, 589, 593, 604, 605, 606, 607, 609, 611, 612, 614, 624, 629, 636, 637, 639, 640, 645, 653, 654, 658], "stick": [1, 612, 613], "inde": 1, "seemingli": 1, "unrel": 1, "argument": [1, 6, 7, 8, 204, 207, 590, 591, 593, 598, 605, 606, 607, 611, 612, 613, 659], "taken": [1, 58, 350, 592, 600, 602, 605, 613, 635, 651, 657], "restart_test": [1, 76, 81, 93, 108, 144, 158, 165, 188, 198, 204, 605, 612, 617, 641, 657, 659], "sinc": [1, 6, 8, 264, 590, 593, 596, 605, 606, 607, 611, 612, 613, 614, 641, 644, 645, 647, 650, 655], "identifi": [1, 658], "sphinx": [1, 7], "readthedoc": 1, "built": [1, 6, 64, 65, 67, 201, 589, 605, 607, 613, 614, 636, 657], "manner": [1, 612], "similar": [1, 3, 6, 8, 216, 220, 222, 591, 605, 606, 607, 611, 612, 613, 618, 645, 651, 653, 654, 657], "geometric_featur": [1, 324, 593, 645], "pyremap": 1, "analysi": [1, 202, 280, 285, 293, 296, 386, 497, 544, 567, 571, 590, 593, 598, 599, 604, 605, 606, 614, 641, 644, 645, 652, 653, 654, 655, 658], "guid": [1, 7, 203, 204, 205, 206, 208, 209, 211, 212, 590, 591, 593, 595, 596, 598, 599, 601, 602, 603, 604, 605, 606, 607, 611, 612, 613, 616, 620, 632, 636, 640, 645], "detail": [1, 3, 4, 6, 7, 8, 36, 69, 592, 593, 594, 600, 602, 603, 605, 606, 607, 608, 611, 612, 613, 629, 637, 656, 657], "instruct": [1, 607, 612, 613], "quick": [1, 222, 596, 610, 612, 616, 640, 648, 659], "overview": [1, 7, 610, 632, 635], "philosophi": [1, 606], "subsect": 1, "sub": [1, 456, 637, 645, 648], "descript": [1, 6, 7, 593, 599, 611, 612, 613, 614, 616, 621, 622, 625, 629, 640, 645], "manag": [1, 3, 608, 636], "api": [1, 7, 8, 610, 612, 613], "docstr": [1, 606, 610, 612], "eventu": [1, 651], "tutori": [1, 606], "plan": [1, 3, 201, 589, 605, 609, 651, 658], "parsl": 1, "begin": [1, 7, 8, 204, 205, 207, 209, 214, 370, 590, 596, 605, 607, 610, 612, 613, 620, 621, 623, 625, 630, 636, 644, 647, 648, 651, 653], "seem": [1, 605, 611, 612, 613], "workqueueexecutor": 1, "enough": [1, 8, 590, 598, 605, 606, 613, 644, 645, 648, 651, 652, 654, 656], "consid": [1, 606, 651], "beta": 1, "latest": [1, 201, 589, 599, 607, 616, 640, 651, 657, 660], "v1": [1, 8, 610, 639, 645], "prematur": 1, "settl": [1, 612, 613], "except": [1, 8, 11, 16, 34, 69, 593, 605, 606, 611, 612, 645, 650, 651, 653, 654], "accordingli": [1, 207, 222, 591], "accur": [1, 618, 624, 629, 637], "race": 1, "unnecessari": [1, 613, 645], "block": [1, 3, 605, 612, 645], "prerequisit": [1, 551], "subsequ": [1, 605, 609, 630, 645, 659], "associ": [1, 8, 542, 543, 581, 587, 588, 590, 591, 593, 598, 605, 609, 612, 645, 648], "datafutur": 1, "usag": [1, 202, 593, 614, 617, 624, 627, 628, 632, 635, 645, 647], "arbitrari": 1, "1gb": 1, "calibr": 1, "actual": [1, 3, 6, 8, 26, 80, 90, 92, 99, 105, 107, 114, 120, 125, 136, 138, 143, 148, 155, 162, 164, 171, 173, 181, 186, 192, 195, 197, 235, 238, 247, 250, 256, 295, 406, 414, 569, 578, 605, 607, 612, 618], "approxim": [1, 8, 40, 42, 43, 47, 542, 550, 603, 607, 617, 620, 621, 625, 644, 645, 651, 652, 654, 655], "debug": [1, 8, 215, 216, 217, 218, 219, 543, 631, 632, 633, 634, 635], "flesh": [1, 612, 613], "further": [1, 7, 593, 605, 621, 622, 625, 635], "restrict": [1, 8, 612, 613], "facilit": 1, "m": [1, 6, 41, 48, 49, 54, 204, 206, 326, 331, 335, 340, 345, 401, 512, 526, 540, 564, 590, 593, 594, 596, 598, 599, 604, 605, 607, 613, 619, 620, 621, 622, 624, 625, 627, 628, 631, 632, 633, 634, 635, 639, 642, 644, 646, 648, 650, 651, 653, 656, 657], "oppos": [1, 267, 270, 651], "origin": [1, 8, 31, 394, 435, 439, 440, 600, 603, 607, 611, 612, 613, 643, 652, 656, 657], "simpli": [1, 8, 33, 98, 137, 147, 154, 180, 185, 236, 567, 576, 594, 605, 607, 612, 613, 620, 639, 657, 659], "anyth": [1, 612], "discuss": [1, 3, 8, 605, 606, 612, 613, 644, 645, 654], "decid": [1, 26, 80, 90, 92, 99, 105, 107, 114, 120, 125, 136, 138, 143, 148, 155, 162, 164, 171, 173, 181, 186, 192, 195, 197, 235, 238, 247, 250, 256, 295, 406, 414, 569, 578, 611, 613, 645], "misunderstood": 1, "select": [1, 6, 8, 605, 607], "skip": [1, 6, 8, 69, 605, 659], "latter": [1, 6, 23, 204, 205, 207, 209, 214, 220], "suggest": [1, 608, 651], "put": [1, 607, 612, 613, 653], "under": [1, 3, 68, 220, 435, 461, 547, 593, 607, 610, 620, 639, 641, 648, 651, 654, 658], "break": [1, 656], "backward": 1, "compat": [1, 201, 227, 589, 607, 608, 610, 645, 648], "scope": 1, "hinder": 1, "effort": [1, 645], "14": [1, 214, 593, 608, 630, 645], "scratch": [1, 6, 607, 611, 612, 632, 635, 657], "simper": 1, "underwai": 1, "aid": [1, 6], "compass_1": 1, "http": [1, 6, 7, 8, 35, 551, 593, 605, 606, 607, 608, 610, 613, 614, 616, 635, 640, 645, 657], "github": [1, 6, 7, 593, 606, 607, 610, 612, 613, 614, 616, 640, 645, 657, 660], "com": [1, 6, 7, 35, 593, 606, 607, 610, 612, 613, 614, 645, 657], "dev": [1, 6, 7, 201, 593, 605, 606, 607, 610, 612, 613, 614, 616, 640, 645, 657], "28": [1, 614, 645], "somewhat": 1, "conflict": 1, "tend": [1, 222], "child": [1, 18, 331, 472, 605, 606], "just": [1, 6, 11, 36, 76, 81, 93, 108, 144, 158, 165, 188, 198, 204, 205, 207, 209, 214, 220, 605, 606, 607, 609, 610, 611, 612, 613, 632, 635, 651], "instanti": 1, "becaus": [1, 7, 8, 202, 439, 605, 606, 607, 611, 612, 613, 619, 623, 624, 627, 628, 630, 634, 637, 645, 647, 651, 652, 657], "parent": [1, 291, 309, 593, 605], "object": [1, 8, 14, 17, 22, 68, 69, 456, 468, 593, 605, 606, 612, 613, 637, 645], "respect": [1, 3, 8, 605, 606, 612, 643, 645, 656], "baroclinicchannel": [1, 233, 236, 245, 248, 254, 590, 605, 606, 612, 613], "short": [1, 6, 98, 147, 170, 207, 208, 213, 214, 222, 225, 236, 280, 288, 350, 351, 357, 361, 404, 567, 576, 593, 605, 606, 612, 613, 617, 618, 620, 623, 625, 630, 637, 641, 642, 643, 645, 650, 653, 656], "add_step": [1, 203, 204, 209, 590, 593, 598, 605, 611, 612, 613], "initialst": [1, 590, 591, 593, 595, 596, 598, 599, 601, 604, 605, 612], "And": [1, 7, 605, 607], "save": [1, 8, 34, 54, 590, 596, 605, 619, 620, 621, 623, 625, 630, 636, 642, 645, 648], "res_param": [1, 590, 604, 605, 612, 613], "10km": [1, 8, 590, 604, 605, 612, 613, 624, 627, 641, 642, 657, 658, 659], "nx": [1, 605, 612, 613, 619, 620, 621, 622, 625, 643, 646, 648, 650], "ny": [1, 605, 612, 613, 619, 620, 621, 622, 625, 646, 648, 650], "50": [1, 206, 590, 604, 605, 612, 613, 622, 625, 642, 648, 650, 652], "dc": [1, 605, 612, 613, 619, 620, 621, 622, 625, 646, 648, 650], "10e3": [1, 605, 612, 613], "4km": [1, 212, 214, 590, 605, 612, 613, 628, 642, 653, 657], "40": [1, 599, 605, 612, 613, 619, 634, 651, 655], "126": [1, 605, 612, 613], "4e3": [1, 605, 612, 613], "1km": [1, 6, 150, 156, 158, 590, 605, 612, 613, 642, 643, 657], "160": [1, 605, 612, 613], "500": [1, 593, 601, 604, 605, 612, 613, 614, 639, 648, 656], "1e3": [1, 605, 612, 613], "valueerror": [1, 8, 590, 605, 612, 613], "unsupport": [1, 590, 605, 612, 613], "param": [1, 137, 590, 593, 605, 612, 613], "recip": [1, 605], "elsewher": [1, 593, 607, 613, 637], "might": [1, 3, 8, 222, 605, 612, 613, 614, 656, 657], "you": [1, 3, 5, 6, 7, 8, 201, 215, 216, 217, 218, 219, 220, 222, 589, 599, 605, 606, 607, 608, 609, 611, 612, 613, 614, 623, 624, 627, 628, 630, 631, 632, 633, 634, 635, 636, 644, 645, 648, 651, 652, 654, 655, 657, 658, 659], "kei": [1, 9, 23, 28, 65, 370, 544, 549, 605, 624], "config_time_integr": [1, 613], "split_explicit": [1, 280, 285, 288, 291, 306, 309, 327, 336, 341, 346, 351, 354, 357, 593, 613, 645, 654], "config_dt": [1, 612, 613], "02": [1, 632], "config_btr_dt": [1, 612, 613], "06": [1, 604, 646], "0000_06": 1, "config_hmix_use_ref_cell_width": 1, "config_use_debugtrac": 1, "Such": 1, "forwardstep": [1, 593, 595, 605], "time_integr": [1, 280, 285, 288, 291, 306, 309, 327, 336, 341, 346, 351, 354, 357, 593, 654], "with_ice_shelf_cav": [1, 296, 302, 304, 321, 325, 330, 334, 339, 344, 593, 605, 645], "wisc": [1, 593, 645], "littl": [1, 8, 606, 607, 610, 611, 612, 613], "trickier": 1, "typic": [1, 6, 7, 8, 11, 20, 26, 63, 80, 90, 92, 99, 105, 107, 114, 120, 125, 136, 138, 143, 148, 155, 162, 164, 171, 173, 181, 186, 192, 195, 197, 222, 235, 238, 247, 250, 256, 295, 350, 406, 414, 569, 578, 593, 605, 607, 609, 611, 612, 613, 614, 617, 619, 620, 621, 624, 625, 627, 628, 636, 637, 639, 645, 653, 657, 658], "look": [1, 6, 7, 8, 593, 605, 606, 611, 612, 613, 614, 655], "forcing_data": [1, 599, 605], "mixedlayerdepthsoutput": 1, "var_arrai": [1, 605], "constant": [1, 8, 40, 47, 48, 591, 601, 604, 613, 619, 622, 642, 643, 644, 648, 650, 651, 652, 654, 656], "remov": [1, 6, 8, 63, 66, 440, 590, 591, 596, 598, 599, 601, 604, 605, 611, 645, 651], "etc": [1, 8, 66, 67, 258, 403, 404, 412, 441, 445, 593, 605, 642, 645, 650], "rare": [1, 607], "One": [1, 8, 220, 591, 606, 611, 613, 636, 641, 645, 659], "add_config": [1, 611], "io": [1, 605, 606, 610, 612, 613, 614, 616, 640], "enthalpy_benchmark": [1, 201, 210, 605, 616, 617, 626], "readm": [1, 8, 206, 605, 622], "work_dir": [1, 6, 8, 11, 23, 32, 61, 64, 65, 66, 67, 68, 69, 605], "visual": [1, 8, 206, 264, 270, 418, 432, 453, 485, 503, 517, 531, 555, 591, 596, 599, 605, 609, 619, 620, 621, 622, 623, 625, 630, 643, 650, 651], "eismint2_viz": [1, 205, 621], "experi": [1, 108, 113, 117, 205, 220, 435, 436, 441, 443, 445, 451, 453, 456, 468, 599, 606, 621, 639, 651], "b": [1, 3, 6, 108, 117, 205, 607, 609, 621, 657], "d": [1, 108, 117, 205, 455, 456, 468, 581, 587, 588, 605, 612, 613, 621, 643], "f": [1, 6, 8, 108, 117, 205, 605, 607, 614, 621, 635, 648, 657], "unchang": [1, 645], "eismint2": [1, 28, 201, 210, 616, 617, 626], "whichev": [1, 201, 589, 639], "sens": [1, 610, 612], "appli": [1, 7, 8, 36, 228, 435, 599, 605, 612, 617, 618, 637, 643, 645, 648, 651, 656], "shown": [1, 605, 630, 653, 656], "oper": [1, 19, 26, 80, 90, 92, 95, 99, 105, 107, 110, 114, 120, 125, 131, 136, 138, 143, 146, 148, 155, 162, 164, 167, 171, 173, 181, 186, 190, 192, 195, 197, 200, 235, 238, 241, 244, 247, 250, 253, 256, 295, 406, 409, 414, 417, 438, 450, 569, 573, 578, 605, 617, 641, 659], "explicit": [1, 8, 591, 593, 606, 612, 613, 630, 641, 643, 645, 654], "neither": 1, "timer": [1, 6, 23, 27, 68, 75, 151, 157, 593, 601, 604, 605, 606], "compare_vari": [1, 8, 605, 613], "mesh_step": [1, 321, 397, 605], "mesh_cor": [1, 605, 614, 645, 647], "mesh_min_cor": [1, 605, 614, 645, 647], "xcell": [1, 593, 605, 612], "ycell": [1, 593, 605, 612], "zcell": [1, 593], "filename1": [1, 8, 69, 605, 613], "purpos": [1, 3, 28, 591, 605, 606, 609, 612, 613, 619, 629, 630, 645, 658], "meti": [1, 56, 613], "split": [1, 593, 606, 611, 612, 613, 641, 645, 654], "domain": [1, 57, 58, 208, 211, 212, 222, 227, 418, 456, 593, 599, 605, 612, 613, 617, 620, 621, 622, 625, 637, 642, 643, 644, 645, 647, 648, 650, 651, 652, 653, 656, 658], "trivial": 1, "quit": [1, 3, 593, 605, 648], "compar": [1, 6, 8, 23, 64, 65, 67, 68, 69, 206, 213, 291, 351, 543, 591, 592, 593, 594, 595, 600, 602, 603, 604, 606, 609, 611, 612, 613, 617, 620, 621, 623, 624, 625, 630, 641, 642, 645, 646, 647, 648, 651, 653, 655, 657, 659], "signific": [1, 605, 606, 618, 651], "dynamic_adjust": [1, 293, 605, 614, 641], "rk4": [1, 280, 285, 288, 291, 306, 309, 327, 336, 341, 346, 351, 354, 357, 593, 606, 612, 613, 641, 645, 654, 659], "intermedi": [1, 645], "meshstep": [1, 315, 321, 389, 397, 593, 595, 605], "build_cell_width_lat_lon": [1, 8, 47, 593, 595], "numpi": [1, 8, 41, 48, 49, 54, 326, 331, 335, 340, 345, 401, 456, 512, 526, 540, 542, 545, 550, 564, 579, 580, 605, 612, 613], "np": [1, 601, 612, 613], "qu240mesh": [1, 593], "mesh_nam": [1, 271, 273, 277, 321, 325, 330, 334, 339, 344, 397, 400, 593, 645], "bool": [1, 11, 12, 23, 24, 31, 34, 35, 36, 58, 62, 63, 69, 150, 156, 158, 224, 228, 267, 270, 296, 302, 304, 306, 312, 315, 321, 324, 325, 330, 334, 339, 344, 392, 400, 407, 436, 441, 445, 456, 460, 493, 495, 497, 567, 571, 574], "ic": [1, 7, 135, 140, 142, 168, 201, 206, 207, 209, 225, 226, 296, 302, 304, 318, 321, 324, 325, 330, 334, 339, 344, 350, 402, 404, 407, 410, 412, 415, 418, 434, 436, 439, 440, 441, 445, 448, 456, 458, 461, 465, 466, 467, 469, 589, 593, 596, 599, 604, 606, 607, 610, 612, 613, 614, 616, 617, 619, 620, 621, 622, 623, 624, 625, 627, 628, 629, 630, 632, 638, 639, 640, 641, 648, 651, 656, 657, 658], "shelf": [1, 7, 78, 79, 226, 296, 302, 304, 318, 321, 324, 325, 330, 334, 339, 344, 402, 404, 407, 410, 412, 415, 418, 434, 436, 448, 456, 461, 469, 493, 495, 497, 593, 596, 599, 605, 606, 612, 613, 614, 619, 620, 629, 630, 638, 639, 640, 641, 648, 651, 653, 656], "caviti": [1, 296, 302, 304, 321, 324, 325, 330, 334, 339, 344, 456, 460, 593, 596, 599, 606, 612, 613, 614, 638, 639, 640, 641, 648, 651], "__module__": [1, 593, 611], "mesh_config_filenam": [1, 330, 593], "cell": [1, 8, 40, 41, 42, 43, 47, 48, 49, 54, 140, 222, 224, 227, 228, 271, 324, 326, 330, 331, 335, 340, 345, 361, 400, 401, 439, 456, 486, 512, 526, 540, 564, 581, 582, 583, 584, 587, 588, 593, 594, 599, 601, 605, 611, 612, 613, 619, 620, 621, 622, 623, 624, 625, 627, 628, 630, 639, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 656], "width": [1, 8, 40, 41, 42, 47, 48, 49, 54, 326, 331, 335, 340, 345, 401, 512, 526, 540, 564, 612, 642, 643, 648, 650, 652, 653, 656], "arrai": [1, 8, 41, 48, 49, 54, 224, 326, 331, 335, 340, 345, 401, 458, 460, 512, 526, 540, 544, 545, 564, 579, 580, 582, 583, 584, 585], "regular": [1, 6, 36, 41, 48, 267, 270, 326, 331, 335, 340, 345, 401, 512, 526, 540, 564, 612, 631, 632, 634, 635, 636, 641, 657], "latitud": [1, 41, 48, 326, 331, 335, 340, 345, 401, 512, 526, 540, 564, 593, 644, 645, 653, 655], "longitud": [1, 41, 48, 49, 54, 326, 331, 335, 340, 345, 401, 512, 526, 540, 564, 593, 644, 653], "return": [1, 3, 7, 34, 41, 42, 43, 48, 59, 60, 65, 224, 226, 271, 274, 326, 331, 335, 340, 345, 350, 401, 439, 479, 486, 512, 526, 540, 542, 543, 544, 551, 564, 579, 582, 583, 584, 585, 586, 606, 611, 612, 613, 644, 652, 655], "cellwidth": [1, 326, 331, 335, 340, 345, 401, 512, 526, 540, 564], "x": [1, 41, 48, 49, 54, 326, 331, 335, 340, 345, 361, 401, 456, 458, 465, 466, 467, 512, 526, 540, 564, 593, 594, 596, 605, 612, 613, 643, 646, 648, 650, 652], "km": [1, 8, 40, 41, 42, 43, 47, 48, 49, 54, 205, 207, 208, 209, 211, 214, 258, 273, 326, 331, 335, 340, 345, 401, 436, 440, 441, 443, 445, 448, 451, 453, 478, 486, 505, 509, 511, 512, 519, 523, 525, 526, 533, 537, 539, 540, 557, 561, 563, 564, 590, 592, 593, 594, 599, 600, 601, 602, 603, 604, 611, 612, 613, 614, 617, 621, 623, 624, 625, 627, 628, 630, 637, 642, 643, 644, 645, 648, 650, 651, 652, 653, 654, 655, 656, 658], "lon": [1, 8, 41, 47, 48, 49, 54, 326, 331, 335, 340, 345, 401, 512, 526, 540, 564, 614, 645], "length": [1, 41, 48, 49, 54, 326, 331, 335, 340, 345, 401, 512, 526, 540, 564, 593, 604, 643, 646, 656], "180": [1, 41, 48, 49, 54, 326, 331, 335, 340, 345, 401, 512, 526, 540, 564, 644, 654], "lat": [1, 8, 41, 47, 48, 49, 54, 326, 331, 335, 340, 345, 401, 512, 526, 540, 564, 614, 645], "90": [1, 41, 48, 49, 54, 326, 331, 335, 340, 345, 401, 512, 526, 540, 564, 604, 605, 644, 654], "dlon": 1, "dlat": 1, "constantcellwidth": 1, "240": [1, 8, 42, 545, 550, 592, 593, 602, 614, 637, 644, 645, 651, 654], "nlat": [1, 655], "nlon": 1, "360": 1, "linspac": [1, 8, 601], "ones": [1, 6, 456, 581, 587, 588, 606, 611], "size": [1, 3, 8, 42, 43, 140, 462, 505, 519, 533, 542, 544, 545, 550, 557, 593, 605, 612, 613, 614, 619, 620, 621, 622, 625, 644, 645, 646, 648, 650, 652], "integr": [1, 8, 248, 280, 285, 288, 291, 306, 309, 327, 336, 341, 346, 351, 354, 357, 427, 590, 593, 598, 599, 605, 606, 612, 613, 617, 618, 620, 621, 622, 623, 624, 625, 626, 627, 628, 630, 641, 642, 644, 645, 648, 650, 651, 652, 653, 654, 656], "0000_01": 1, "1000": [1, 11, 206, 593, 612, 614, 622, 625, 639, 642, 645, 647, 650, 656], "config_mom_del4": 1, "2e11": 1, "config_hmix_scalewithmesh": 1, "config_use_gm": 1, "vertic": [1, 204, 205, 209, 228, 230, 258, 349, 350, 361, 403, 404, 412, 441, 445, 493, 495, 497, 543, 590, 591, 593, 594, 595, 596, 598, 599, 601, 604, 605, 611, 613, 614, 619, 620, 621, 622, 625, 637, 638, 640, 642, 643, 645, 646, 647, 648, 650, 651, 652, 653, 656], "layer": [1, 204, 205, 209, 222, 224, 462, 493, 495, 497, 579, 580, 581, 585, 586, 587, 588, 590, 593, 594, 595, 596, 598, 599, 601, 604, 612, 614, 619, 620, 621, 625, 637, 639, 641, 642, 643, 645, 646, 647, 648, 650, 651, 652, 653, 656], "metadata": [1, 614], "vertical_grid": [1, 222, 230, 579, 581, 587, 588, 593, 605, 612, 614, 639, 642, 643, 648, 650, 651, 652, 656], "grid_typ": [1, 593, 612, 614, 639, 642, 648, 650, 651, 652, 656], "60layerphc": [1, 593, 645], "mb": [1, 11, 593, 614, 645, 647], "init_max_memori": [1, 593, 614, 645, 647], "init_max_disk": [1, 593, 614, 645], "128": [1, 593, 633, 647], "forward_max_memori": [1, 593, 614, 645, 647], "forward_max_disk": [1, 593, 614, 645], "prefix": [1, 458, 460, 470, 593, 605, 607, 614, 645], "qu": [1, 592, 593, 611, 614, 644, 645, 655], "ec": [1, 593, 614, 645], "wc": [1, 593, 614, 645], "mesh_descript": [1, 593, 614, 645], "eddi": [1, 590, 593, 642, 645, 653], "closur": [1, 593, 645, 646], "e3sm_vers": [1, 593, 614, 645], "enhanc": [1, 593], "around": [1, 228, 592, 593, 602, 612, 613, 614, 637, 642, 644, 645, 650, 653], "equat": [1, 222, 593, 596, 612, 620, 644, 645, 646], "south": [1, 593], "pole": [1, 593, 645], "35": [1, 593, 612, 642, 643, 644, 645, 650, 652, 655, 657], "greenland": [1, 28, 201, 210, 212, 593, 605, 609, 616, 617, 624, 626, 627, 628, 658], "min_r": [1, 593, 614, 645], "max_r": [1, 593, 614, 645], "mid": [1, 222, 593, 645], "revis": [1, 6, 593, 614, 645], "increment": [1, 593, 614, 645], "mesh_revis": [1, 593, 614, 645], "finest": [1, 593, 614, 644, 645, 652, 654], "coarsest": [1, 593, 612, 614, 645], "60": [1, 8, 42, 324, 505, 519, 533, 557, 592, 593, 602, 603, 605, 639, 644, 645, 648, 653, 654, 655], "url": [1, 8, 12, 34, 593, 605, 608, 614, 645], "pull_request": [1, 593, 614, 645], "miss": [1, 8, 593, 605, 614, 645], "dynamical_adjust": 1, "spin": [1, 170, 605, 625, 641, 645], "kind": [1, 611, 612], "dynamicaladjust": 1, "dynamicadjust": [1, 293, 593], "qu240dynamicadjust": [1, 593, 605], "adjust": [1, 207, 222, 225, 266, 279, 291, 293, 296, 298, 300, 302, 304, 318, 327, 336, 341, 346, 404, 415, 448, 589, 593, 596, 599, 605, 614, 624, 627, 628, 629, 641, 645, 648, 651, 654], "dissip": [1, 291, 293, 298, 300, 327, 336, 341, 346, 593, 612, 642, 645, 650], "fast": [1, 291, 293, 298, 300, 327, 336, 341, 346, 593, 624, 645, 655], "move": [1, 202, 222, 291, 293, 327, 336, 341, 346, 593, 605, 606, 612, 651], "wave": [1, 291, 293, 298, 300, 327, 336, 341, 346, 421, 423, 425, 427, 428, 430, 432, 593, 598, 605, 612, 642, 645, 650], "restart_tim": 1, "0001": [1, 651], "02_00": 1, "03_00": 1, "restart_filenam": [1, 129, 291, 293, 296, 298, 300, 302, 304, 327, 341, 346, 593], "rst": [1, 7, 76, 81, 93, 108, 144, 158, 165, 188, 198, 204, 205, 207, 208, 209, 214, 593, 605, 612, 613], "step_nam": 1, "damped_adjustment_1": [1, 593], "namelist_opt": 1, "01_00": [1, 605, 651], "config_rayleigh_frict": 1, "config_rayleigh_damping_coeff": [1, 591], "stream_replac": [1, 605], "restart_interv": [1, 593, 605], "template_replac": [1, 17, 22, 605], "simul": [1, 208, 264, 291, 361, 369, 407, 443, 451, 453, 456, 468, 490, 493, 495, 497, 567, 571, 574, 593, 596, 599, 601, 602, 605, 609, 611, 612, 613, 624, 637, 642, 643, 645, 646, 647, 648, 653, 655, 656], "config_do_restart": 1, "config_start_tim": 1, "whew": 1, "That": [1, 605, 606, 609, 612, 613, 657], "lot": [1, 8, 605, 606, 613], "thank": 1, "bear": [1, 613], "myriad": 1, "highlight": 1, "roughli": [1, 606, 612, 644, 652, 654], "broken": [1, 91, 106, 142, 156, 163, 196, 605, 606], "ident": [1, 3, 6, 8, 79, 89, 91, 104, 106, 135, 142, 150, 156, 161, 163, 194, 196, 204, 205, 207, 208, 209, 214, 233, 245, 254, 280, 288, 354, 357, 412, 590, 593, 596, 601, 604, 606, 612, 613, 617, 620, 621, 623, 624, 625, 630, 642, 645, 648, 650, 651, 653, 654, 656], "analog": [1, 606], "get_available_cores_and_nod": [1, 606], "abl": [1, 6, 215, 216, 217, 218, 219, 605, 606, 607, 612, 613, 636], "unless": [1, 35, 63, 599, 606, 607, 612, 613], "am": 1, "theoret": [1, 606], "my": [1, 632], "ambit": 1, "gradual": [1, 593], "sea": [1, 7, 222, 224, 225, 226, 304, 318, 350, 404, 415, 435, 448, 458, 462, 465, 466, 467, 583, 584, 585, 586, 589, 593, 595, 596, 599, 613, 614, 639, 641, 643, 645, 646, 648, 651], "surfac": [1, 7, 206, 222, 224, 225, 226, 228, 318, 404, 415, 435, 448, 458, 462, 465, 466, 467, 493, 495, 497, 583, 584, 585, 586, 589, 593, 595, 596, 599, 612, 614, 622, 639, 641, 642, 643, 645, 648, 650, 651, 652, 653, 656], "height": [1, 7, 222, 224, 225, 226, 318, 404, 415, 448, 462, 583, 584, 585, 586, 589, 593, 595, 596, 599, 614, 639, 641, 643, 645, 648, 651], "frazil": [1, 222, 407, 567, 571, 574, 576, 596, 604, 641, 648, 656], "land": [1, 7, 201, 222, 225, 226, 324, 330, 400, 436, 439, 441, 445, 589, 593, 596, 599, 601, 610, 613, 614, 616, 617, 639, 645, 647, 648, 651, 653, 658], "flux": [1, 206, 222, 435, 461, 469, 593, 596, 599, 618, 622, 641, 645, 648, 651], "1d": [1, 222, 579, 580, 581, 582, 583, 584, 585, 587, 588, 596, 599], "coordin": [1, 258, 403, 404, 412, 441, 445, 456, 581, 587, 588, 591, 593, 596, 599, 611, 637, 638, 640, 642, 643, 645, 648, 650, 651, 652, 656], "3d": [1, 228, 458], "z": [1, 222, 324, 403, 404, 412, 441, 445, 456, 458, 465, 466, 467, 582, 583, 584, 585, 586, 587, 588, 596, 599, 612, 613, 637, 642, 643, 648, 650, 651, 652, 654, 656, 659], "iceshelf": [1, 222], "pressur": [1, 7, 222, 225, 226, 318, 392, 404, 415, 448, 589, 593, 595, 596, 599, 614, 637, 645, 647, 648, 651], "match": [1, 318, 404, 415, 448, 551, 591, 596, 599, 607], "particl": [1, 491, 493, 497, 567, 571, 601, 604, 641], "plot": [1, 8, 54, 87, 102, 117, 176, 202, 203, 204, 205, 206, 209, 251, 361, 363, 370, 392, 394, 428, 543, 544, 545, 546, 547, 548, 549, 590, 591, 592, 594, 595, 598, 599, 600, 601, 602, 603, 611, 612, 613, 618, 619, 620, 621, 622, 625, 643, 644, 647, 648, 651, 652, 654, 655, 658], "nearli": [1, 168, 209, 280, 593, 605, 606, 609, 610, 612, 613, 625, 637, 645, 654], "netcdf": [1, 216, 227, 228, 229, 230, 349, 396, 593, 612, 614, 631, 632, 633, 634, 635, 636, 645], "maintain": [1, 654, 657], "hundr": 1, "en4": [1, 593, 606, 645], "1900": [1, 593, 606, 645], "bgc": [1, 312, 315, 593, 606], "overkil": [1, 605], "never": [1, 605, 609], "note": [1, 7, 8, 202, 227, 610, 612, 623, 624, 629, 630, 635, 645, 647], "show": [1, 3, 7, 8, 224, 456, 458, 591, 605, 612, 613, 618, 622, 635, 636, 642, 644, 645, 650, 651, 652], "recent": [1, 640], "issu": [1, 3, 599, 605, 644, 652], "777": 1, "aren": [1, 8, 593, 605, 606, 607, 611, 612, 613, 644, 652, 654, 659], "occur": [1, 137, 202, 608], "rpe_test": [1, 605, 606, 657], "5": [1, 6, 8, 42, 205, 207, 213, 214, 228, 248, 427, 462, 546, 590, 593, 594, 596, 598, 601, 604, 605, 606, 608, 612, 613, 614, 619, 621, 623, 624, 627, 628, 629, 630, 641, 642, 643, 645, 646, 648, 650, 651, 653, 656, 657], "sourc": [1, 3, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 93, 94, 96, 97, 98, 100, 101, 102, 103, 104, 106, 108, 109, 111, 112, 113, 115, 116, 117, 118, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 132, 133, 134, 135, 137, 139, 140, 141, 142, 144, 145, 147, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 163, 165, 166, 168, 169, 170, 172, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 187, 188, 189, 191, 193, 194, 196, 198, 199, 215, 216, 217, 218, 219, 220, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 239, 240, 242, 243, 245, 246, 248, 249, 251, 252, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 284, 285, 288, 291, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 330, 331, 332, 333, 334, 335, 336, 339, 340, 341, 344, 345, 346, 349, 350, 351, 354, 357, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 410, 411, 412, 413, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 572, 574, 575, 576, 577, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 605, 607, 612, 613, 614, 629, 630, 631, 632, 633, 634, 635, 636, 657], "major": [1, 220, 605, 613, 636, 637, 645, 653], "assembl": [1, 293], "check": [1, 6, 8, 69, 74, 208, 222, 280, 596, 599, 605, 607, 609, 611, 612, 613, 614, 632, 635, 641, 656, 657, 659], "extend": [1, 614, 653], "opiton": 1, "mpas_model": [1, 6, 201, 589, 605, 614], "ocean_model": [1, 589, 607, 613, 614], "previous": [1, 611], "resourc": [1, 8, 590, 598, 605, 612, 624, 627, 628, 645], "Then": [1, 5, 7, 8, 201, 206, 215, 216, 217, 218, 219, 220, 589, 590, 591, 593, 596, 598, 599, 601, 604, 605, 611, 613, 620, 621, 623, 625, 630, 636, 642, 645, 648, 651, 657], "configure_global_ocean": [1, 593, 605], "initial_condit": [1, 168, 312, 315, 488, 606], "polar": [1, 593, 614, 639, 645], "scienc": [1, 593, 639, 645], "center": [1, 222, 224, 227, 228, 593, 605, 612, 619, 620, 621, 625, 639, 642, 645, 647, 648, 650, 651, 652, 656], "hydrograph": [1, 593, 639, 645], "climatologi": [1, 593, 639, 645], "en4_1900": [1, 312, 315, 593, 641, 645], "met": [1, 3], "offic": 1, "hadlei": 1, "centr": 1, "init_descript": [1, 593, 614, 645], "bathymetri": [1, 8, 330, 440, 456, 593, 605, 614, 645, 647, 656], "bathy_descript": [1, 593, 614, 645], "gebco": [1, 614, 645], "2019": [1, 614, 632, 645], "bedmachin": [1, 324, 614, 645], "antarctica": [1, 324, 593, 614, 637, 645], "with_bgc": [1, 312, 315, 605], "todo": 1, "fill": [1, 202, 324, 593, 599, 645], "bgc_descript": 1, "wisc_descript": 1, "shelv": [1, 589, 593, 596, 614, 637, 639, 641, 645, 648, 651], "although": [1, 8, 611], "config_fil": [1, 6, 64, 65, 67], "commandlin": 1, "w": [1, 6, 206, 607, 609, 622, 653, 657], "test_baroclinic_channel": 1, "test_nightli": 1, "check_siz": [1, 614], "verifi": [1, 8, 79, 89, 91, 104, 106, 135, 142, 150, 156, 161, 163, 194, 196, 491, 591, 614], "home": [1, 8, 607, 612, 613, 614, 632, 635, 636], "default_input": [1, 201, 589, 605, 614], "mesh_max_memori": [1, 614, 645], "mesh_max_disk": [1, 614, 645], "add_metadata": [1, 593, 614, 645], "quasi": [1, 8, 47, 170, 172, 493, 497, 567, 571, 593, 611, 614, 625, 645, 648, 651, 654, 655], "uniform": [1, 8, 47, 204, 209, 273, 478, 486, 505, 509, 511, 519, 523, 525, 533, 537, 539, 557, 561, 563, 590, 592, 593, 596, 598, 601, 602, 603, 604, 605, 611, 612, 613, 614, 619, 620, 621, 625, 642, 645, 648, 650, 651, 652, 654, 655, 656], "max_depth": [1, 593, 614, 645], "autodetect": [1, 593, 614, 645, 647], "creation_d": [1, 593, 614, 645], "email": [1, 593, 614, 645, 647], "lanl": [1, 610, 614, 632, 645, 657], "gov": [1, 8, 605, 608, 614, 632, 635, 645], "enable_ocean_initial_condit": [1, 614, 645], "enable_ocean_graph_partit": [1, 614, 645], "enable_seaice_initial_condit": [1, 614, 645], "enable_scrip": [1, 614, 645], "enable_diagnostics_fil": [1, 614, 645], "comparisonlatresolut": [1, 614, 645], "comparisonlonresolut": [1, 614, 645], "comparisonantarcticstereowidth": [1, 614, 645], "6000": [1, 593, 614, 639, 645], "comparisonantarcticstereoresolut": [1, 614, 645], "comparisonarcticstereowidth": [1, 614, 645], "comparisonarcticstereoresolut": [1, 614, 645], "tanh_dz": [1, 593, 614, 645], "vert_level": [1, 593, 605, 612, 613, 614, 639, 642, 643, 646, 648, 650, 651, 652], "bottom_depth": [1, 593, 605, 612, 613, 614, 639, 642, 646, 648, 650, 651, 652, 653, 656], "3000": [1, 593, 611, 614, 644, 645, 652, 654], "min_layer_thick": [1, 593, 614, 639], "max_layer_thick": [1, 593, 614, 639], "unfortun": 1, "lost": 1, "standard": [1, 113, 324, 593, 599, 602, 606, 607, 645, 654, 657], "search": [1, 6, 36, 227, 632], "through": [1, 3, 65, 418, 432, 593, 599, 606, 613, 616, 624, 627, 628, 637, 640, 643, 650, 651], "our": [1, 606, 611, 612, 613, 635, 657], "preserv": [1, 324], "lower": [1, 8, 612, 642, 650], "hpc": [1, 607, 632, 636], "laptop": [1, 607, 612, 613, 614], "desktop": [1, 612, 613], "varieti": [1, 626], "straightforward": [1, 605], "Or": [1, 6, 614], "late": 1, "run_step": [1, 8, 620], "subset": [1, 6], "run_by_default": [1, 24, 203, 204, 209, 605], "mesh_typ": [1, 79, 83, 85, 89, 91, 93, 96, 98, 100, 113, 139, 150, 152, 156, 158, 178, 183, 203, 204, 605], "dome": [1, 8, 39, 79, 121, 126, 129, 163, 168, 174, 201, 210, 605, 609, 616, 617, 626, 657, 658], "tye": [1, 79], "smoke_test": [1, 204, 605], "setupmesh": [1, 8, 205, 206, 209, 605], "runmodel": [1, 206, 207, 208, 209, 213, 214, 605], "unifi": [1, 607, 635], "detect": [1, 222, 593, 605, 614, 631, 632, 633, 634, 636, 645, 647, 654, 657], "fulli": [1, 599], "badger": [1, 220, 607, 636, 657], "cori": [1, 220, 607, 636, 657], "haswel": [1, 220, 657], "compi": [1, 220, 634, 657], "nest": [1, 612, 613], "27": 1, "29": [1, 655], "31": 1, "decomp_test": [1, 7, 612, 641, 657, 659], "32": [1, 600, 601, 604, 624, 630, 635, 652, 654, 657], "threads_test": [1, 8, 612, 641, 657, 659], "33": [1, 614, 650, 651, 657], "analysis_test": [1, 641, 659], "34": [1, 605, 620, 648, 651, 653, 656, 657], "daily_output_test": 1, "37": [1, 593, 657], "38": [1, 657], "39": 1, "41": 1, "43": 1, "44": [1, 648], "45": [1, 593, 632, 645], "phc_bgc": [1, 641, 645], "46": [1, 619], "cull": [1, 8, 330, 439, 590, 591, 593, 596, 598, 599, 601, 604, 605, 612, 613, 621, 623, 624, 627, 628, 630, 645, 647, 653], "switch": [1, 607, 612, 614, 656], "treat": [1, 605, 606], "progress": [1, 63, 224, 324, 458, 460], "intermix": 1, "continu": [1, 3, 129, 605, 611, 612, 617, 641, 645, 651], "azur": 1, "pipelin": 1, "doc": [1, 5, 7, 605, 612, 613, 635, 660], "renam": [1, 606], "titl": [1, 458, 460], "tabl": [1, 8, 550, 607, 636, 657], "tree": [1, 7, 610, 613], "0_doc": 1, "brows": [1, 612, 613], "index": [1, 5, 8, 222, 581, 582, 583, 584, 585, 586, 587, 588, 605, 612, 613, 619, 620, 625], "html": [1, 5, 616, 640], "keep": [1, 3, 6, 8, 11, 33, 435, 593, 605, 607, 613, 614, 651], "track": [1, 8, 11, 593, 605, 607, 653, 656], "thorough": 1, "absolut": [1, 6, 8, 11, 12, 33, 64, 65, 67, 201, 589, 605, 607, 614, 657], "sure": [1, 6, 8, 26, 69, 80, 90, 92, 99, 105, 107, 114, 120, 125, 136, 138, 143, 148, 155, 162, 164, 171, 173, 181, 186, 192, 195, 197, 201, 216, 220, 233, 235, 238, 245, 247, 250, 254, 256, 280, 288, 295, 354, 357, 406, 412, 414, 569, 578, 589, 590, 593, 596, 599, 605, 606, 607, 609, 612, 613, 614, 619, 620, 621, 623, 624, 625, 630, 635, 636, 642, 644, 645, 648], "present": [1, 324, 593, 607, 611, 612, 613, 643], "figur": [1, 462, 546, 548, 605, 613, 614, 619, 620, 621, 625], "implicitli": 1, "repositori": [1, 605, 610, 612, 613, 657], "affect": [1, 8, 605, 617, 637, 641], "immedi": [1, 39, 605, 607, 612, 613], "noth": [1, 8, 593, 608, 644, 652, 654, 655], "preclud": 1, "wouldn": 1, "limit": [1, 607, 610, 618], "review": 1, "agre": 1, "column": [1, 548, 594, 607, 613, 622, 637, 646, 648, 651, 657], "eas": [1, 612], "shallow": [1, 9, 607, 617, 620, 654], "water": [1, 9, 593, 599, 612, 637, 642, 643, 645, 648, 650, 651, 653], "he": [1, 8], "down": [1, 581, 582, 583, 584, 585, 586, 587, 588, 596, 599, 639], "road": 1, "86": 1, "higher": [1, 593, 612, 645, 656], "subject": 1, "thing": [1, 6, 215, 216, 217, 219, 220, 606, 610, 612, 613], "proof": 1, "concept": [1, 605, 606, 609, 658], "250": [1, 593, 594, 613, 639, 646, 656], "thick": [1, 168, 204, 205, 206, 207, 214, 222, 224, 435, 440, 581, 585, 586, 587, 588, 590, 593, 594, 596, 598, 599, 614, 617, 619, 622, 624, 627, 628, 639, 641, 642, 643, 645, 646, 648, 650, 651], "245": 1, "imposs": 1, "effect": [1, 651], "ask": [1, 618, 645], "evolv": [1, 222, 610, 637, 639, 651], "declar": [1, 3, 7], "good": [1, 8, 11, 605, 607, 611, 612, 613], "merg": 1, "intent": [1, 8], "ongo": 1, "basi": [1, 293, 296, 298, 300, 302, 304, 641], "demonstr": [1, 605, 612, 613, 656], "compass": [2, 3, 5, 7, 8, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 589, 590, 591, 592, 593, 594, 595, 596, 598, 599, 600, 601, 602, 603, 604, 608, 609, 611, 612, 614, 616, 617, 620, 624, 627, 628, 631, 632, 633, 634, 635, 636, 640, 641, 645, 646, 649, 651, 653, 656, 658, 659], "packag": [2, 5, 6, 7, 8, 12, 14, 17, 22, 25, 61, 66, 67, 220, 330, 593, 605, 607, 608, 609, 610, 611, 612, 613, 631, 632, 633, 634, 635, 636, 645, 649, 657], "output": [2, 6, 7, 8, 9, 11, 16, 19, 23, 31, 55, 56, 57, 63, 69, 85, 87, 95, 100, 102, 110, 115, 117, 121, 126, 131, 146, 167, 174, 176, 190, 200, 202, 203, 204, 205, 206, 207, 209, 213, 214, 222, 227, 228, 229, 241, 244, 253, 270, 280, 285, 291, 324, 349, 370, 386, 392, 409, 417, 438, 443, 450, 453, 456, 468, 485, 486, 503, 517, 531, 543, 548, 555, 573, 580, 590, 591, 593, 594, 596, 598, 599, 601, 604, 609, 610, 611, 613, 614, 624, 635, 645, 647, 657, 659], "yyyi": 3, "mm": [3, 274, 506, 520, 534, 558], "dd": 3, "summar": [3, 617], "code": [3, 6, 7, 8, 11, 201, 206, 222, 589, 591, 605, 607, 609, 610, 612, 613, 614, 617, 622, 626, 638, 641, 654, 657], "softwar": [3, 56, 635, 657], "success": [3, 34, 201, 589, 605, 614], "your": [3, 5, 6, 8, 201, 216, 220, 589, 606, 607, 608, 611, 612, 613, 614, 631, 632, 635, 636, 644, 645, 652, 654, 655, 657], "appear": [3, 220, 599, 605], "head": [3, 632], "technic": [3, 7], "focu": [3, 611], "extent": [3, 140, 656], "independ": [3, 6, 605, 609], "thu": [3, 7, 605, 612, 645, 651], "meet": [3, 650], "pde": 3, "solver": [3, 89, 91, 93, 98, 135, 142, 144, 147, 150, 156, 158, 202, 205, 206, 207, 213, 214, 607, 610, 617, 618, 619, 620, 621, 623, 624, 630, 657], "steer": 3, "low": [3, 144, 193, 645, 651], "interfac": [3, 8, 222, 224, 458, 461, 462, 465, 466, 467, 469, 579, 580, 581, 587, 588, 596, 599, 605, 606, 607, 610, 612, 613, 637, 639], "sequenc": [3, 204, 205, 207, 209, 214, 457, 593, 605, 606, 609, 657, 658, 659], "math": 3, "almost": [3, 8, 611], "latex": 3, "2ab": 3, "imag": [3, 7, 229, 230, 456, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 605, 612, 617, 619, 620, 621, 625, 645, 655], "small": [3, 8, 203, 222, 594, 605, 617, 618, 619, 620, 624, 631, 632, 638, 639, 648, 654, 657], "jpeg": 3, "png": [3, 8, 229, 230, 592, 600, 603, 612, 613, 617, 619, 620, 622, 625], "okai": [3, 605, 613], "centric": 3, "pseudo": 3, "item": 3, "timelin": 3, "staf": 3, "example_funct": 3, "foo": [3, 606], "configur": [3, 6, 7, 8, 11, 23, 34, 57, 60, 61, 64, 65, 67, 74, 87, 102, 117, 176, 191, 208, 220, 230, 349, 350, 579, 581, 582, 583, 587, 588, 591, 603, 606, 610, 611, 612, 613, 614, 620, 624, 629, 635, 636, 637, 639, 641, 645, 647, 651, 653, 656, 657, 658], "properli": [3, 215, 216, 217, 218, 219, 612, 614, 641, 655, 657], "page": [4, 7, 551, 631], "auto": 4, "summari": [4, 202, 618, 632], "relev": [4, 7, 8, 208, 612, 613, 631, 632, 633, 634, 635, 636, 657], "procedur": [5, 202, 220, 222, 607, 611, 635], "export": [5, 608], "docs_vers": 5, "test": [5, 6, 7, 8, 9, 10, 11, 16, 19, 23, 24, 25, 26, 27, 28, 29, 31, 32, 36, 39, 40, 45, 47, 50, 52, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 220, 222, 223, 579, 589, 590, 591, 592, 594, 595, 596, 598, 599, 600, 601, 602, 603, 604, 607, 608, 609, 610, 616, 618, 619, 620, 621, 622, 623, 624, 625, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 642, 643, 644, 646, 648, 650, 651, 652, 653, 654, 655, 656], "cd": [5, 201, 589, 607, 612, 613, 632, 657], "rm": 5, "rf": 5, "developers_guid": [5, 612, 613], "_build": 5, "view": [5, 607], "act": [6, 435, 606, 613, 639], "instal": [6, 607, 612, 635, 636, 657], "reflect": [6, 607], "h": [6, 593, 605, 613, 656], "v": [6, 222, 607, 645, 659], "example_compact": [6, 201, 589, 605, 614], "test1": 6, "test2": 6, "displai": [6, 8, 324, 635], "messag": [6, 8, 605, 608, 635], "test_expr": [6, 36], "substr": 6, "express": [6, 36], "think": [6, 612], "tempat": 6, "step1": 6, "step2": 6, "underli": 6, "framework": [6, 7, 23, 62, 69, 201, 589, 605, 609, 610, 612, 616, 640, 653, 656], "standalon": [6, 218, 605, 637], "num": 6, "mach": [6, 11, 631, 632, 633, 634, 635, 636, 657], "p": [6, 607, 612, 614, 657], "suite_nam": [6, 8, 32, 63, 65, 66, 67, 657], "case_numb": 6, "comma": [6, 8, 621, 644, 652, 654, 655], "requir": [6, 8, 11, 40, 47, 52, 76, 81, 93, 108, 129, 144, 158, 165, 188, 198, 201, 206, 207, 213, 214, 239, 260, 306, 318, 407, 415, 423, 448, 506, 520, 534, 558, 589, 593, 601, 604, 605, 606, 607, 608, 610, 611, 612, 613, 614, 616, 617, 620, 622, 623, 624, 627, 628, 630, 636, 639, 640, 645, 657, 658], "piec": [6, 605, 612], "r": [6, 593, 635, 644], "tell": [6, 607], "re": [6, 144, 193, 590, 591, 593, 604, 605, 606, 607, 609, 611, 612, 613, 614, 635, 636, 644, 647, 652, 654, 655, 657], "leav": [6, 330, 605, 614, 648, 651], "unknown": [6, 220, 636], "temp": 6, "baseline_dir": [6, 23, 64, 65, 67], "predefin": [6, 653], "afther": 6, "behind": [6, 606, 612], "fresh": [6, 611], "resid": 6, "test_suit": [6, 605], "proven": [6, 33, 610, 614, 645], "entir": [6, 611, 612, 642, 648, 650, 651, 659], "complet": [6, 8, 14, 17, 202, 222, 605, 607, 612, 613, 617, 645, 657], "comparison": [6, 8, 23, 68, 69, 264, 591, 593, 605, 614, 643, 645, 648, 651], "against": [6, 8, 69, 213, 291, 362, 422, 431, 593, 594, 601, 604, 605, 613, 617, 620, 641, 643], "no_step": 6, "wherea": [6, 8, 648, 656, 658], "clone": [6, 201, 589, 605, 607, 612, 613, 657], "tab": [6, 657], "full_run": [6, 593, 620, 621, 623, 625, 630, 642, 645, 648], "restart_run": [6, 76, 81, 93, 108, 144, 158, 165, 188, 198, 593, 620, 621, 623, 625, 630, 642, 645, 648], "preced": [6, 33], "serial": [6, 603, 655], "structur": [6, 8, 610, 613, 645], "onto": [6, 222, 227, 392, 595, 607, 647, 655], "whose": [6, 544, 548, 549, 605], "pr": [6, 657, 659], "saniti": [6, 222], "print": [6, 8, 36, 69, 549, 550, 605, 606, 613, 659], "restructuredtext": 7, "label": [7, 613, 636, 657], "_ocean": 7, "dev_": 7, "prepend": 7, "_dev_ocean": 7, "_ocean_baroclinic_channel": 7, "_ocean_baroclinic_channel_default": 7, "_dev_ocean_baroclinic_channel": 7, "_dev_ocean_baroclinic_channel_default": 7, "who": [7, 607, 612, 613, 614, 635], "citat": 7, "brief": [7, 612, 613], "awar": [7, 220, 605, 612, 613, 636], "wish": [7, 8, 222, 605, 607, 611, 612, 645, 657, 659], "specif": [7, 8, 25, 201, 220, 589, 591, 593, 604, 605, 607, 610, 611, 612, 613, 614, 629, 632, 636, 645, 657, 659], "share": [7, 71, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 222, 589, 590, 591, 593, 596, 598, 599, 601, 604, 605, 607, 610, 612, 613, 615, 620, 621, 622, 625, 634, 635, 636, 638, 642, 650, 657], "public": [7, 8, 605, 614], "underscor": [7, 612, 613], "currentmodul": 7, "autosummari": 7, "toctre": 7, "numpydoc": 7, "compute_land_ice_pressure_and_draft": [7, 222], "ssh": [7, 222, 224, 225, 226, 370, 372, 581, 583, 584, 585, 586, 587, 588, 589, 591, 593, 596, 599, 605, 612, 614, 632, 635, 637, 643, 645, 647, 648, 651], "modifysshmask": 7, "ref_dens": [7, 226], "draft": [7, 226, 440, 596, 599, 637, 639, 645, 651], "paramet": [7, 9, 10, 11, 12, 14, 15, 16, 17, 20, 21, 22, 23, 24, 28, 29, 31, 32, 34, 35, 36, 39, 40, 42, 43, 44, 47, 52, 54, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 76, 79, 81, 83, 85, 87, 89, 91, 93, 96, 98, 100, 102, 104, 106, 108, 111, 113, 115, 117, 118, 121, 123, 126, 129, 132, 135, 139, 142, 144, 147, 150, 152, 154, 156, 158, 161, 163, 165, 168, 170, 172, 174, 176, 178, 180, 183, 185, 188, 191, 194, 196, 198, 224, 225, 226, 227, 228, 229, 230, 232, 233, 236, 239, 242, 245, 248, 251, 254, 258, 260, 262, 264, 267, 270, 271, 273, 277, 280, 284, 285, 288, 291, 293, 296, 298, 300, 302, 304, 306, 309, 312, 315, 318, 321, 324, 325, 327, 330, 334, 336, 339, 341, 344, 346, 349, 350, 351, 354, 357, 361, 363, 365, 367, 370, 377, 380, 383, 386, 389, 392, 397, 400, 403, 404, 407, 410, 412, 415, 418, 421, 423, 425, 427, 428, 430, 432, 435, 436, 439, 440, 441, 443, 445, 448, 451, 453, 456, 458, 459, 460, 462, 463, 464, 468, 472, 474, 478, 482, 485, 486, 488, 491, 493, 495, 497, 500, 503, 505, 509, 511, 514, 517, 519, 523, 525, 528, 531, 533, 537, 539, 542, 543, 544, 545, 548, 549, 550, 551, 552, 555, 557, 561, 563, 567, 570, 571, 574, 576, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 593, 601, 604, 605, 610, 623, 624, 627, 628, 630, 642, 645, 648, 650, 651, 653, 656], "xarrai": [7, 224, 226, 439, 456, 458, 460, 468, 581, 582, 583, 584, 585, 586, 587, 588, 605, 612, 613], "dataarrai": [7, 224, 226, 458, 460, 582, 583, 584, 585, 586, 605], "mask": [7, 226, 324, 439, 456, 581, 584, 587, 588, 593, 599, 605, 612, 614, 639, 645, 647], "landicepressur": [7, 222, 225, 226, 593, 599, 605, 637, 645, 648, 651], "deviat": [7, 226], "densiti": [7, 8, 140, 222, 226, 228, 612, 623, 624, 627, 628, 630, 637, 651, 653], "seawat": [7, 226, 651], "displac": [7, 226, 637], "landicedraft": [7, 222, 226, 599, 651], "equal": [7, 208, 226, 606], "entri": [7, 30, 64, 65, 599, 605, 651], "side": 7, "colon": 7, "doubl": [7, 653], "quot": 7, "interfer": 7, "keyword": [7, 8, 605, 613], "arg": [7, 8], "On": [7, 8, 613, 636, 660], "indent": [7, 605], "obviou": [7, 605, 612], "els": [7, 8, 605, 612], "meant": [8, 606, 613, 614, 617, 619, 620, 624, 629, 641], "list_cas": 8, "list_machin": [8, 606], "list_suit": 8, "anywher": [8, 607], "setup_cas": 8, "clean_cas": 8, "setup_suit": 8, "clean_suit": 8, "caveat": 8, "sit": 8, "idl": 8, "fraction": [8, 76, 202, 439, 440, 599, 612, 618, 639, 642, 648, 650, 651, 652, 653, 656], "fewest": 8, "run_test": [8, 613], "retriev": [8, 608], "text": [8, 644], "txt": [8, 66, 67, 605, 608], "case_output": 8, "implement": [8, 202, 203, 204, 205, 206, 209, 222, 440, 590, 591, 592, 594, 595, 596, 598, 599, 600, 601, 602, 603, 604, 606, 612, 613, 617, 618, 619, 620, 621, 622, 625, 637, 642, 644, 645, 646, 652, 653, 654, 655, 656], "termin": [8, 605, 613], "window": [8, 619, 620, 622, 625], "update_cach": 8, "enabl": [8, 571, 593, 601, 604, 605, 608, 614, 617, 635, 645, 656], "parser": [8, 33], "mpasconfigpars": 8, "compassconfigpars": [8, 11, 23, 34, 57, 60, 61, 87, 102, 117, 176, 230, 232, 349, 350, 403, 570, 579, 581, 582, 583, 587, 588], "convert": [8, 457, 506, 520, 534, 558, 605, 611, 612, 613], "add_from_packag": 8, "make_diagnostics_fil": [8, 645], "makediagnosticsfil": 8, "behavior": [8, 63, 605, 611, 612, 617, 620, 641], "getinteg": 8, "getfloat": [8, 601, 605, 611, 612, 613], "getboolean": [8, 605, 612], "getlist": 8, "integ": [8, 545], "getexpress": 8, "tupl": [8, 462], "rang": [8, 222, 593, 624, 637, 653], "arang": 8, "check_cal": [8, 605], "won": [8, 606, 611, 612, 613, 614], "captur": [8, 613], "insid": [8, 605, 606, 612, 651], "subprocess": [8, 11, 62, 605, 606, 608, 613], "trick": [8, 204, 605], "snippet": [8, 612], "setup_mesh": [8, 203, 204, 605, 619, 620, 622, 625], "create_landice_grid_from_generic_mpas_grid": [8, 203, 204, 205, 206, 209], "mpas_grid": [8, 204, 605], "o": [8, 593, 606, 607, 613, 614, 657], "landice_grid": [8, 605], "l": [8, 69, 635], "relat": [8, 20, 73, 201, 204, 207, 209, 213, 214, 222, 461, 469, 589, 590, 591, 593, 596, 598, 599, 601, 604, 605, 606, 607, 608, 612, 614, 617, 619, 620, 621, 622, 625, 631, 632, 633, 634, 635, 636, 637, 639, 642, 643, 645, 647, 648, 650, 651, 652, 653, 655, 656, 657], "intern": [8, 11, 23, 421, 423, 425, 427, 428, 430, 432, 598, 605, 608, 650], "importlib": [8, 605], "though": [8, 11, 605, 606, 612, 613, 645], "whenev": [8, 605, 612, 613], "step_dir": 8, "database_root": 8, "download_path": 8, "join": 8, "remote_filenam": 8, "bedmachineantarctica_and_gebco_2019_0": [8, 605], "05_degre": [8, 605], "200128": [8, 605], "local_filenam": 8, "topographi": [8, 439, 440, 462, 584, 593, 599, 605, 612, 637, 639, 642, 647, 648, 650, 651, 652, 653, 656, 658], "file_nam": 8, "web": [8, 551, 605, 614], "anl": [8, 605, 614], "dest_path": [8, 34], "remot": [8, 12, 607], "quasiuniformsphericalmeshstep": [8, 592], "icosahedralmeshstep": [8, 592], "jigsaw": [8, 40, 44, 46, 47, 49, 51, 52, 267, 270, 605, 623, 630, 645], "opt": [8, 52], "make_jigsaw_mesh": [8, 47], "icosahedr": [8, 40, 42, 267, 270, 644], "smooth": [8, 440, 599, 637, 651], "hand": [8, 606], "subdivis": [8, 40, 41, 42, 43, 44], "icosahedron": [8, 41, 42, 43, 44], "6": [8, 42, 205, 470, 593, 594, 604, 605, 612, 613, 621, 624, 640, 643, 656, 657], "120": [8, 42, 545, 593, 604, 644, 654], "7": [8, 42, 599, 604, 619, 635, 644, 645, 648, 651, 656, 657], "9": [8, 42, 462, 593, 604, 613, 636, 645, 651, 652, 657], "94": [8, 42], "spherical_mesh": [8, 48], "cell_width": [8, 40, 41, 42, 43, 47, 48, 49, 54], "icosahedral_method": 8, "jigsaw_mesh_filenam": 8, "msh": 8, "jigsaw_geom_filenam": 8, "geom": 8, "jigsaw_jcfg_filenam": 8, "jig": 8, "jigsaw_hfun_filenam": 8, "spac": 8, "triangles_filenam": 8, "mesh_triangl": 8, "mpas_mesh_filenam": 8, "plot_cell_width": 8, "cell_width_filenam": [8, 54], "cellwidthvslatlon": 8, "cell_width_image_filenam": 8, "cellwidthglob": 8, "cell_width_colormap": 8, "3wbgy5": 8, "add_mesh_dens": 8, "vtk": 8, "convert_to_vtk": 8, "vtk_dir": 8, "base_mesh_vtk": 8, "extract": [8, 593], "sphere": [8, 499, 500, 514, 528, 552, 592, 600, 602, 603, 644, 654, 655], "vtk_lat_lon": 8, "librari": [8, 207, 213, 214, 215, 220, 607, 612, 613, 617, 631, 632, 633, 634, 635, 636, 646, 655, 657], "moment": 8, "gpmeti": [8, 614, 645], "divid": [8, 505, 519, 533, 557, 594, 613, 618, 639], "partition_graph": [8, 58, 601, 604], "circumst": [8, 605, 637], "wast": 8, "update_namelist_pio": 8, "config_pio_num_iotask": [8, 605], "config_pio_strid": [8, 605], "v2": [8, 593, 610, 639, 645], "feel": [8, 605, 611, 612, 613], "safe": [8, 605, 607], "update_pio": [8, 58], "yourself": [8, 612, 636], "fact": [8, 11, 612], "culler": [8, 613], "make_graph_fil": [8, 605], "field": [8, 54, 56, 213, 222, 227, 324, 393, 394, 435, 439, 581, 587, 588, 590, 593, 596, 598, 599, 601, 602, 604, 612, 617, 624, 637, 642, 643, 644, 645, 647, 648, 650, 651, 652, 653, 654, 656], "weight": [8, 56, 222, 318, 404, 415, 448, 581, 587, 588, 620, 637, 639, 645], "weight_field": [8, 56], "critic": [8, 324, 593, 611, 612, 645], "filename2": [8, 69], "simpl": [8, 440, 599, 606, 612, 613, 651, 657], "temperatur": [8, 104, 106, 205, 206, 222, 467, 491, 590, 591, 593, 594, 596, 598, 599, 601, 604, 605, 612, 621, 622, 641, 642, 643, 644, 645, 648, 650, 651, 652, 653, 656], "salin": [8, 222, 465, 466, 491, 590, 591, 593, 594, 596, 598, 599, 601, 604, 605, 612, 641, 642, 643, 644, 645, 648, 650, 651, 652, 653, 656], "prognost": [8, 593, 596, 599, 617, 620, 621, 623, 624, 625, 630, 641, 642, 645, 648, 650, 653, 656], "4proc": [8, 642, 645], "8proc": [8, 642, 645], "alter": [8, 435, 582, 583, 599, 605, 610, 612, 639, 642, 644, 645, 648, 650, 651, 652, 653, 654, 655, 656], "skip_if_step_not_run": [8, 69, 605], "forc": [8, 158, 222, 392, 435, 436, 441, 445, 591, 595, 599, 601, 651, 653, 655, 656, 658], "failur": 8, "quiet": [8, 63, 69, 613], "report": 8, "threshold": [8, 440, 599, 624, 644, 647, 651, 652], "l1": [8, 69], "00000000000000e": 8, "l2": [8, 69, 542, 543, 544, 545, 550], "l_infin": 8, "linf": [8, 69, 542, 543, 544, 545, 550], "test_nightly_latest": 8, "1thread": [8, 642, 645], "2thread": [8, 642, 645], "test_20210616": 8, "further_valid": 8, "disabl": [8, 617, 624, 645, 658], "check_output": [8, 69], "unlik": [8, 612, 613, 614, 653, 656], "zero": [8, 168, 209, 435, 582, 583, 584, 585, 586, 590, 594, 596, 598, 599, 604, 611, 613, 621, 625, 648, 651], "l1_norm": [8, 69], "l2_norm": [8, 69], "linf_norm": [8, 69], "nonzero": [8, 69, 602, 654], "easiest": [8, 612], "clobber": 8, "qualit": [8, 605], "judgment": 8, "compare_tim": 8, "rundir1": [8, 68], "92264": 8, "82317": 8, "percent": 8, "781019682649793": 8, "speedup": 8, "1208377370409515": 8, "hous": [9, 645], "sw": 9, "dict": [9, 11, 15, 17, 20, 22, 23, 28, 61, 65, 280, 370, 479, 543, 544, 549, 605, 611, 613], "max_memori": 11, "run_as_subprocess": [11, 605], "smallest": [11, 605, 609, 639, 658], "unit": [11, 458, 460, 470, 506, 520, 534, 558, 605, 609, 642, 643, 650, 658], "necessarili": [11, 12, 609, 645], "parallel": [11, 603, 605, 606, 607, 608, 609, 612, 614, 631, 632, 633, 634, 635, 636, 655, 657, 658], "input_data": 11, "namelist_data": 11, "streams_data": 11, "machine_info": 11, "machineinfo": 11, "base_work_dir": [11, 23, 605], "log_filenam": [11, 23, 605], "At": [11, 23, 593, 605, 612, 613, 624, 627, 628, 651], "redirect": [11, 605], "work_dir_target": [12, 605], "out_nam": [14, 15, 17, 20, 21, 22, 605], "render": [17, 22, 605, 613], "abstract": [18, 331], "everi": [18, 590, 596, 605, 606, 608, 609, 611, 612, 613, 642, 648], "consist": [21, 58, 225, 491, 589, 596, 605, 612, 613, 614, 619, 637, 648, 651], "decomposit": [23, 150, 222, 227, 233, 609, 617, 619, 621, 623, 624, 630], "stdout_logg": 23, "goe": [23, 605, 612, 613], "regardless": [23, 593], "statu": 23, "prior": [25, 605], "step_path": 31, "datestamp": 31, "dry": [31, 257, 260, 262, 264, 591, 643, 647, 651], "meta": 33, "link_nam": 35, "stackoverflow": 35, "55742015": 35, "7728169": 35, "symbol": [35, 605], "fileexistserror": 35, "try": [35, 605, 606, 607, 608, 612, 613, 614, 645, 657], "isadirectoryerror": 35, "decomposition_test": [39, 203, 204, 605, 617, 657], "decompositiontest": [39, 205, 207, 208, 209, 214, 605], "turquois": [39, 632, 657], "mhoffman": 39, "ndarrai": [41, 48, 49, 54, 456, 542, 545, 550, 579, 580], "static": [42, 43, 613], "rule": 42, "thumb": 42, "close": [43, 150, 324, 596, 610, 644], "subclass": [44, 47, 48, 49, 53], "jigsawpi": [52, 605], "jigsaw_jig_t": 52, "finish": 53, "mesh_filenam": [56, 645], "graph_filenam": [56, 227, 228, 604], "graph_fil": [57, 58], "step_is_subprocess": 62, "is_test_cas": 63, "steps_not_to_run": 63, "mpas_model_path": [64, 65, 67], "cached_step": 64, "rundir2": 68, "norm": [69, 544, 546, 654], "infin": [69, 654], "toler": [69, 203, 617, 624], "exclud": [69, 645, 657], "assess": [73, 172, 202, 351, 593, 618, 626], "timestep": [73, 202, 617, 618], "calv": [73, 74, 76, 150, 156, 158, 202, 207, 214, 440, 599, 617, 618, 624, 651], "pre": [73, 187, 193, 208, 618, 623, 624, 630], "veloc": [73, 76, 89, 91, 93, 98, 135, 142, 144, 147, 150, 156, 158, 202, 213, 214, 361, 392, 461, 469, 590, 593, 594, 596, 598, 599, 604, 607, 613, 617, 618, 619, 620, 623, 624, 630, 641, 644, 645, 646, 648, 652, 654, 656, 657], "velo": [74, 76, 617], "config_adaptive_timestep_calvingcfl_fract": [74, 202], "calvingdtconverg": [74, 202], "calv_dt_frac": 76, "dt": [76, 274, 604, 618, 644, 652], "mesh_fil": [76, 158, 386, 387], "twice": [76, 81, 93, 108, 144, 158, 165, 188, 198], "mismip": [76, 187, 188, 191, 213, 617, 629, 651], "humboldt": [76, 201, 210, 616, 617, 618, 626], "thwait": [76, 201, 210, 616, 617, 626], "specified_calving_veloc": [76, 158, 617, 618], "eigencalv": [76, 158, 617], "von_mises_stress": [76, 158, 617], "fo": [76, 89, 91, 93, 98, 135, 142, 144, 147, 150, 156, 158, 202, 207, 213, 214, 617, 619, 620, 623, 624, 630], "circular": [78, 79, 619, 653], "four": [79, 89, 104, 150, 222, 605, 651, 653], "input_dir": [85, 100, 174], "velo_solv": [89, 91, 93, 98, 135, 142, 144, 147, 150, 156, 158, 207], "sia": [89, 91, 93, 98, 135, 142, 144, 147, 150, 156, 158, 207, 607, 617, 620, 623], "segment": [91, 106, 142, 156, 163, 196, 593], "thermal_solv": [104, 106], "enthalpi": [104, 106, 118, 123, 128, 132, 205, 206, 621, 622], "formul": [104, 106], "thermodynam": [104, 106, 617], "standardexperi": [115, 205], "kleiner": [118, 123, 206, 622], "benchmark": [118, 123, 128, 132, 206, 622], "enthalpybenchmark": [118, 123, 206], "sheet": [135, 142, 206, 207, 209, 439, 620, 621, 622, 623, 625, 637, 645, 651], "eight": 135, "high": [137, 606, 633, 636, 645, 651, 653, 656], "basal": [137, 206, 619, 621, 622, 623, 624, 627, 628, 630], "friction": [137, 461, 469, 593, 619, 623, 624, 627, 628, 630, 645], "optim": [137, 623, 624, 627, 628, 630], "definit": [140, 605, 611, 612, 613], "region": [140, 208, 211, 212, 593, 595, 610, 614, 645, 647, 648, 651, 656], "observ": [140, 370, 372, 386, 387, 595, 610, 627, 628, 647], "flow": [140, 602, 620, 643, 644, 651, 652, 654], "speed": [140, 623, 624, 627, 628, 630], "distanc": [140, 440, 612, 623, 624, 627, 628, 630, 642, 650, 656], "margin": [140, 623, 624, 627, 628, 630], "20km": [144, 604, 641, 656, 659], "calving_law": [150, 156, 158], "damag": [150, 156, 158, 624], "face_melt": [150, 156, 158], "law": [150, 156, 158, 617, 618, 624], "face": [150, 156, 158], "melt": [150, 156, 158, 463, 469, 593, 599, 637, 645, 648, 651], "proc_list": 150, "pair": [150, 544, 624, 654], "count": [150, 194, 593, 645], "3km": [150, 156, 158], "forcing_fil": [158, 392], "damagecalv": [158, 617], "ismip6_retreat": [158, 617], "radial": [160, 161, 163, 165, 170, 209, 619, 620, 625], "symmetr": [160, 161, 163, 165, 170, 209, 619, 620, 621, 625, 650], "hydrologi": [160, 209, 605, 620], "hydrolog": [161, 163, 165, 170, 209, 625], "three": [161, 228, 612, 613, 623, 626, 630, 636, 645, 654], "hydroradi": [161, 170, 172, 209], "exact": [168, 172, 209, 592, 600, 602, 606, 625], "precomput": 168, "steadi": [170, 209, 625, 651], "reach": [170, 651], "drift": 172, "kogebugt": [185, 212], "smoke": [191, 213, 593, 629, 630], "14km": [193, 630], "landice_model": [201, 605, 607, 614], "core_path": [201, 204, 589, 605, 614], "submodul": [201, 589, 605, 607, 612, 613, 657], "guarante": [201, 589, 607], "recurs": [201, 589, 606, 607, 612, 613, 657], "calving_dt_converg": [201, 210, 616, 626], "circular_shelf": [201, 210, 616, 617, 626, 657], "hydro_radi": [201, 210, 616, 617, 626, 658], "kangerlussuaq": [201, 210, 616, 626], "koge_bugt_": [201, 210, 616, 626], "mismipplu": [201, 210, 616, 626], "physic": [202, 612, 617, 618, 624, 626, 652], "addition": [202, 203, 204, 205, 206, 209, 590, 591, 593, 596, 598, 599, 601, 604, 624, 631, 632, 633, 634, 635], "globalstat": [202, 645], "hardcod": 202, "smaller": [202, 222, 593, 657], "cost": [202, 629], "analyz": [202, 486, 601, 611, 654], "annoy": 202, "occasion": 202, "fine": [202, 591, 605, 612, 613], "logic": [202, 612, 642, 650], "circularshelf": 203, "horizont": [203, 204, 205, 206, 209, 222, 404, 436, 441, 443, 445, 448, 451, 453, 471, 482, 590, 593, 594, 596, 598, 611, 613, 620, 621, 625, 637, 642, 643, 645, 646, 647, 648, 650, 651, 652, 656], "planar_hex": [203, 204, 205, 206, 209, 590, 591, 596, 598, 599, 604, 605, 612, 613], "make_planar_hex_mesh": [203, 204, 205, 206, 209, 590, 591, 596, 598, 599, 604, 605, 612, 613], "privat": [203, 204, 205, 206, 209, 611], "_setup_circular_shelf_initial_condit": 203, "circular_shelf_viz": [203, 619], "200": [203, 204, 205, 206, 604, 605, 612, 620, 621, 622, 651], "ureconstructx": 203, "ureconstructi": 203, "2000": [204, 596, 605, 620, 621, 648, 651, 656], "durat": [204, 206, 207, 208, 209, 213, 214, 436, 479, 590, 591, 593, 596, 598, 605, 620, 645, 650, 652], "dome_varres_grid": [204, 605], "server_base_url": [204, 614], "_setup_dome_initial_condit": [204, 206], "dome_viz": [204, 605, 620], "former": [204, 205, 207, 209, 214], "25": [205, 206, 594, 598, 613, 621, 643, 650, 653], "globalstatsoutput": [205, 596, 599], "runexperi": 205, "letter": [205, 612, 613], "_setup_eismint2_initial_condit": 205, "000": [205, 206, 209, 613, 621, 622, 625], "basaltemperatur": 205, "heatdissip": 205, "thermal": [205, 206, 461, 469, 621, 653], "restarttest": [205, 207, 208, 209, 214, 590, 593, 596, 605], "et": [206, 209, 612, 616, 620, 621, 622, 625, 639, 642, 643, 644, 650, 651, 653, 654, 656], "al": [206, 209, 612, 616, 620, 621, 622, 625, 639, 642, 643, 644, 650, 651, 653, 654, 656], "2015": [206, 209, 612, 622, 625, 642, 650, 653, 656], "air": [206, 621, 622], "temper": 206, "heat": [206, 435, 461, 622, 648, 651], "basal_heat_flux": [206, 622], "042": [206, 622], "k": [206, 222, 613, 621, 622, 639, 646], "surface_air_temperatur": [206, 622], "243": [206, 622], "100": [206, 463, 593, 596, 601, 604, 612, 613, 617, 621, 622, 639, 651, 653, 656], "phase1_surface_air_temperatur": [206, 622], "phase2_surface_air_temperatur": [206, 622], "268": [206, 622], "150": [206, 622, 644, 653, 654], "phase3_surface_air_temperatur": [206, 622], "analyt": [206, 264, 591, 594, 603, 613, 619, 620, 643, 646, 653, 655, 658], "mat": [206, 605], "400": [206, 622], "270": [206, 622], "dai": [207, 214, 248, 264, 427, 505, 519, 533, 557, 590, 592, 593, 598, 600, 602, 605, 612, 623, 630, 642, 643, 644, 645, 650, 651, 656], "coars": [207, 214, 623, 630, 645, 651], "20": [207, 248, 427, 590, 593, 596, 598, 599, 604, 605, 612, 623, 642, 643, 648, 650, 651, 653, 654, 656], "albany_input": [207, 213], "yaml": [207, 213], "gis20km": 207, "210608": [207, 214], "smoketest": [207, 213, 605], "highresmesh": [207, 214], "glacier": [208, 211, 214, 617, 624, 627, 629, 630], "meshgen": [208, 211, 212], "restartn_test": 208, "plu": [208, 609, 624], "_setup_hydro_radial_initial_condit": 209, "thin": [209, 222, 625, 645, 647, 651], "numer": [209, 222, 605, 637], "bueler": [209, 620, 625], "iscontrol": 209, "hydro_radial_viz": [209, 625], "spinuptest": 209, "steadystatedrifttest": 209, "month": [209, 599, 621, 624, 625, 638, 645, 649, 651, 656], "waterthick": 209, "waterpressur": 209, "500m": [212, 628], "koge": [212, 628], "bugt": [212, 628], "surfacespe": 214, "load_dev_compass_1": [215, 216, 217, 218, 219, 220, 612, 613], "0_anvil_intel_impi": [215, 220], "sh": [215, 216, 217, 218, 219, 220, 607, 608, 612, 613, 631, 632, 633, 634, 635, 657], "openmp": [215, 216, 217, 218, 219, 631, 632, 633, 634, 635, 655], "openmpi": [215, 220, 607, 610, 631, 633, 657], "mvapich": [215, 220, 631, 632, 636], "impi": [215, 220, 631, 632, 633, 634, 636], "ifort": [215, 220, 631], "ve": [215, 216, 217, 219, 605, 612], "0_anvil_gnu_mvapich": 215, "gfortran": [215, 216, 217, 220, 607, 631, 632, 633], "modulefil": 216, "bashrc": 216, "pleas": [216, 606, 607, 611, 612], "unus": [216, 607], "0_badger_intel_impi": 216, "0_badger_gnu_mvapich": 216, "0_chrysalis_intel_impi": [217, 612, 613], "0_chrysalis_gnu_openmpi": 217, "soon": 218, "0_compy_intel_impi": 218, "architectur": 219, "0_cori": 219, "haswell_intel_mpt": 219, "nersc": [219, 220, 635], "haswell_gnu_mpt": 219, "load_compass_env": [220, 607, 657], "right": [220, 222, 593, 605, 607, 612, 613, 614, 618, 639, 644, 656, 657], "gnu": [220, 607, 634, 636, 657], "lib": 220, "intel": [220, 607, 612, 613, 636], "mpt": [220, 635], "compymcnodefac": [220, 636], "pretti": [220, 605, 606, 612, 614], "mpich": [220, 607, 610, 657], "forg": [220, 610, 657], "linux": [220, 607, 636], "configure_compass_env": [220, 607, 608, 612, 613], "conda_path": [220, 607], "osx": [220, 636], "clang": [220, 607], "0_": 220, "expand": [222, 639], "grid_1d": 222, "generate_1d_grid": 222, "star": [222, 403, 404, 412, 441, 445, 586, 588, 596, 599, 612, 642, 643, 648, 650, 651, 652, 656, 659], "init_vertical_coord": [222, 612], "minlevelcel": [222, 581, 583, 584, 585, 586, 587, 588], "maxlevelcel": [222, 581, 582, 583, 584, 585, 586, 587, 588, 605, 613], "cellmask": [222, 581, 584, 587, 588], "zmid": [222, 581, 587, 588], "restingthick": [222, 581, 586, 587, 588, 605, 613], "bottomdepth": [222, 581, 582, 584, 585, 586, 587, 588, 605, 612, 613], "compute_haney_numb": 222, "1991": [222, 637], "measur": [222, 645, 653], "gradient": [222, 612, 637, 642, 650, 653, 656], "tilt": 222, "r_": 222, "x1": 222, "frac": [222, 605, 612, 639, 656], "z_": [222, 639], "textrm": 222, "c_2": 222, "c_1": 222, "edg": [222, 224, 645, 648], "adjac": [222, 639, 648], "elev": [222, 324, 581, 587, 588, 599, 639, 647], "middl": [222, 581, 587, 588, 599, 651], "boussinesq": 222, "adjust_ssh": 222, "correct": [222, 607], "imbal": 222, "period": [222, 361, 370, 474, 482, 590, 591, 594, 596, 598, 600, 604, 605, 612, 613, 618, 642, 643, 647, 648, 650, 652, 656], "hour": [222, 591, 593, 594, 599, 605, 632, 635, 637, 651, 652, 657], "translat": 222, "compens": [222, 637], "repeat": 222, "fix": [222, 228, 462, 592, 599, 605, 648, 651], "elimin": 222, "substanti": [222, 607, 612], "prevent": [222, 435, 599, 605, 637, 651], "caus": [222, 607, 639], "instabl": 222, "agnost": 222, "light": [222, 653, 656], "buoyanc": [222, 228, 604], "isopycn": [222, 228], "passiv": [222, 228, 499], "remap_particl": 222, "remap": [222, 227], "plot_initial_st": 222, "histogram": [222, 229], "bottom": [222, 462, 581, 582, 583, 584, 585, 586, 587, 588, 591, 593, 599, 604, 612, 614, 639, 642, 643, 646, 648, 650, 651, 652, 653, 656], "depth": [222, 349, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 593, 594, 604, 612, 613, 614, 639, 642, 645, 646, 648, 650, 651, 652, 653, 656], "distribut": [222, 592, 600, 601, 602, 604, 645, 653, 655, 656], "plot_vertical_grid": 222, "bound": [222, 656], "ds_mesh": 224, "layer_thick": 224, "show_progress": 224, "rx1": 224, "bar": [224, 324, 458, 460], "haney_edg": 224, "haney_cel": 224, "iteration_count": 225, "modify_mask": 226, "init_filenam": [227, 228, 349, 604], "particle_filenam": [227, 228, 604], "posit": [227, 228, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 599, 630, 639, 656], "goal": 227, "currentblock": 227, "compli": 227, "nearest": [227, 387, 644], "neighbor": [227, 645], "form": [227, 228, 606, 613, 656, 658], "n_vert_level": 228, "vert_seed_typ": 228, "n_buoy_surf": 228, "pot_dens_min": 228, "1028": [228, 653], "pot_dens_max": 228, "1030": [228, 653], "spatial_filt": 228, "downsampl": 228, "seed_cent": 228, "seed_vertex": 228, "add_nois": 228, "cfl_min": 228, "005": 228, "densecent": 228, "seed": [228, 324, 593], "southernoceanplanar": 228, "southernoceanxyz": 228, "spatial": 228, "filter": 228, "amg": 228, "epsilon": [228, 646], "vertex": 228, "gaussian": [228, 600, 652, 655], "nois": 228, "cfl": [228, 618], "perturb": [228, 642, 644, 650], "input_file_nam": 229, "output_file_nam": 229, "grid_filenam": 230, "out_filenam": [230, 580], "shorter": [245, 412, 617, 621, 641], "energi": [248, 427, 605, 612, 642, 650], "slope": [257, 260, 262, 264, 591, 637, 643, 648, 653, 654, 656], "wet": [257, 647], "coord_typ": [258, 260, 262, 403, 404, 412, 591, 612, 639, 642, 643, 648, 650, 651, 652, 656], "sigma": [258, 260, 262, 591, 643], "single_lay": [258, 591, 643], "dryingslop": [258, 591], "damping_coeff": [260, 264, 591], "rayleigh": [260, 264, 591, 593, 643, 645], "damp": [260, 264, 591, 593, 643, 645], "coeffici": [260, 264, 591, 604, 613, 643, 646, 653, 656], "rom": [264, 591, 643], "datatyp": 264, "cosinebel": [270, 273, 277, 592, 611], "rmsevalu": 271, "squar": [271, 486, 592, 600, 652], "ncell": [271, 486, 593, 605, 612, 613], "hh": [274, 506, 520, 534, 558], "ss": [274, 506, 520, 534, 558], "member": [280, 285, 293, 296, 386, 497, 567, 571, 593, 595, 599, 601, 604, 613, 614, 641, 645, 647], "timeseriesstatmonthli": 285, "daili": [285, 645], "stage": [291, 605, 645, 651], "seaic": [293, 593, 645], "diagnost": [293, 296, 593, 614, 619, 631, 632, 634, 635, 636, 645, 657], "meridion": [293, 296, 593, 642, 650, 656], "overturn": [293, 296, 451, 464, 593, 599, 651], "circul": [293, 296, 593, 651], "filesfore3sm": [296, 298, 300, 302, 304, 593, 605], "cores_from_config": 306, "min_cores_from_config": 306, "threads_from_config": 306, "biogeochemistri": [312, 315, 593, 612, 613], "init_subdir": 312, "2d": [318, 402, 404, 407, 410, 412, 415, 418, 434, 436, 448, 500, 514, 528, 552, 648], "with_cav": 324, "with_critical_passag": [324, 593], "custom_critical_passag": 324, "custom_land_blockag": 324, "preserve_floodplain": [324, 330, 400], "use_progress_bar": 324, "process_count": 324, "natur": [324, 593, 645], "earth": [324, 593, 645], "coverag": [324, 593, 617], "north": [324, 593, 642, 645], "antarct": [324, 593, 614, 637, 645, 651], "ground": [324, 439, 593, 599, 619, 630, 645, 651], "bedmachineantarctica": [324, 593, 645], "transect": [324, 456, 593, 614, 645], "passag": [324, 593, 645], "flood": [324, 593, 645], "lock": [324, 593], "blockag": [324, 645], "geojson": [324, 613], "cellseedmask": 324, "floodplain": [324, 647], "problemat": [324, 605], "do_inject_bathymetri": 330, "criteria": 330, "output_filenam": 349, "short_mesh_nam": [350, 593], "long_mesh_nam": [350, 593], "turbul": [360, 361, 363, 365, 367, 420, 594, 612, 613, 646], "doubli": [361, 474, 482, 594, 613, 652], "storm": [370, 377, 383, 386, 392, 647], "station": [370, 372, 373, 386, 387, 595, 647], "frmt": 370, "datetim": [370, 605], "min_dat": [370, 372], "max_data": 370, "pointstats_fil": [370, 371, 386], "pointwisestat": [370, 371, 386, 387, 595, 647], "labl": 370, "legend": [370, 613], "product": [370, 604, 647], "obs_fil": 372, "obs_typ": 372, "max_dat": 372, "timeseri": [372, 595, 647], "station_fil": [373, 386], "contiain": 386, "pointstat": 386, "stations_fil": 387, "atmospher": [392, 593, 595], "wind": [392, 593, 595, 601, 647, 653, 656], "plot_interv": 392, "snap": [392, 393], "wind_fil": 392, "pres_fil": 392, "grid_fil": [392, 393], "data_fil": 393, "orig_data": 394, "interp_data": 394, "var_label": 394, "var_abrev": 394, "iceshelf2d": [404, 412, 596, 605, 606, 612, 613], "with_frazil": [407, 571, 574, 596, 641, 659], "cross": [418, 432, 456, 462, 599, 619, 650, 651], "gotm": [420, 589, 597, 612, 613, 640, 649], "internalwav": [421, 427, 430, 598], "in_forcing_fil": 435, "out_forcing_fil": 435, "out_forcing_link": 435, "evapor": [435, 599, 651], "isomip": [435, 436, 440, 441, 443, 445, 451, 453, 456, 468, 599, 651], "evaporationflux": 435, "seaicesalinityflux": 435, "seaiceheatflux": 435, "salt": 435, "northern": [435, 593, 599, 612, 642, 648, 650, 651, 656], "boundari": [435, 591, 593, 599, 600, 610, 623, 637, 642, 648, 650, 651, 656, 658], "spillwai": [435, 599], "rise": [435, 599, 648, 651], "run_dur": [436, 604], "time_varying_forc": [436, 441, 445], "ocean0": [436, 441, 443, 445, 451, 453, 456, 468, 599], "ocean1": [436, 441, 443, 445, 451, 453, 456, 468, 599], "ocean2": [436, 441, 443, 445, 451, 453, 456, 468, 599], "dsmesh": [439, 456, 468, 605, 612, 613], "dsgeom": 439, "min_ocean_fract": [439, 651], "bisicl": [439, 440, 599, 651], "process_input_geometri": [439, 599], "dsmask": 439, "regioncellmask": 439, "infilenam": 440, "outfilenam": 440, "filtersigma": 440, "minicethick": 440, "scale": [440, 599, 604, 610, 645, 646, 651, 653, 654, 656, 657], "geometri": [440, 599, 648, 651, 656], "scheme": [440, 599, 602, 647, 654], "vertical_coordin": [441, 445], "misomip1": 443, "isomipplu": [445, 599], "barotrop": [451, 459, 595, 599, 647, 651], "slice": 455, "monthli": 455, "infold": [456, 468], "streamfunctionfold": 456, "outfold": [456, 457, 468], "expt": [456, 459, 468, 621], "sectioni": 456, "showprogress": 456, "plotter": [456, 468], "hold": [456, 468], "folder": [456, 468], "streamfunct": [456, 459, 464, 651], "y": [456, 462, 590, 591, 593, 596, 598, 599, 604, 605, 612, 613, 635, 642, 643, 646, 648, 650, 651, 652, 656], "axi": [456, 605, 612, 618, 654], "plane": 456, "montli": 456, "oceanmask": 456, "cavitymask": 456, "oceanpatch": 456, "patchcollect": 456, "polygon": 456, "cover": [456, 599, 641, 645], "cavitypatch": 456, "horiz": 456, "vert": 456, "sectionmask": 456, "progressbar": 456, "framespersecond": 457, "mp4": [457, 643, 651], "movi": [457, 591, 599, 643, 651], "ffmpeg": 457, "da": [458, 460, 470], "nameintitl": [458, 460, 470], "vmin": [458, 459, 460, 463, 464], "vmax": [458, 459, 460, 463, 464], "cmap": [458, 460], "floor": [458, 465, 466, 467, 613, 639, 646, 648, 651], "nae": [458, 460], "subfold": [458, 460], "colorbar": [458, 459, 460, 463, 464], "colormap": [458, 460, 551], "color": [458, 460, 470], "chosen": [459, 605], "oceandomain": 460, "drive": [461, 469, 591], "halin": 461, "figsiz": [462, 470], "rate": [463, 469, 542, 550, 592, 599, 600, 602, 621, 637, 644, 645, 651, 652, 654], "sshmax": 469, "advect": [471, 482, 485, 488, 499, 592, 600, 602, 617, 641, 644, 652], "planar": [472, 474, 478, 482, 612, 652], "convergence_test_cas": 478, "convergencetestcas": 478, "rms_error": 486, "mesoscal": [490, 601, 645, 653], "profil": [491, 591, 593, 594, 596, 599, 601, 604, 608, 646, 651, 653, 656], "with_particl": [493, 497, 567, 571, 601, 604], "with_surface_restor": [493, 495, 497], "three_lay": [493, 495, 497, 601], "lagrangian": [493, 641, 653, 656], "restor": [493, 495, 497, 599, 651, 653, 656], "equilibrium": [493, 497, 567, 571, 621, 653], "continent": [493, 495, 497, 593, 645, 651, 653], "algorithm": [499, 637, 655], "transport": [500, 514, 528, 552, 593, 602, 644, 654], "spheretransport": [500, 514, 528, 552], "correlatedtracers2d": [503, 505, 509, 511, 602, 654], "dt_minut": [505, 519, 533, 557], "minut": [505, 506, 519, 520, 533, 534, 557, 558, 590, 593, 594, 596, 598, 605, 612, 617, 642, 648, 654, 659], "24": [505, 519, 533, 557, 592, 593, 600, 644, 652, 654], "divergent2d": [517, 519, 523, 525, 602], "nondivergent2d": [531, 533, 537, 539, 602], "dlambda": [542, 544, 545, 550], "compute_error_from_output_ncfil": [542, 550], "tracer1": [542, 544, 545, 550, 654], "linfrat": [542, 550], "l2rate": [542, 550], "lev": 543, "netcdf4": [543, 548, 612, 614], "tcdata": [544, 549], "appx": [544, 550], "linf1": [544, 545], "linf2": [544, 545], "tracer2": [544, 545, 654], "linf3": [544, 545], "tracer3": [544, 545, 654], "l21": [544, 545], "l22": [544, 545], "l23": [544, 545], "filament": [544, 546, 654], "sec": [544, 644, 656], "lspt2012": [544, 546], "ax": [545, 546, 547], "tcname": [545, 546, 547, 548, 549, 550], "resval": [545, 546, 547, 550], "matplotlib": [545, 548, 551, 612, 613], "instanc": [545, 548, 612, 613], "u1": [547, 635], "o1": 547, "u2": 547, "o2": [547, 605], "u3": 547, "o3": 547, "shoot": [547, 654], "fig": [548, 605], "row": 548, "csv": [549, 654], "consol": 550, "compute_convergence_r": 550, "cmap_filenam": 551, "rgb": 551, "ncar": 551, "ncl": 551, "www": 551, "ucar": 551, "edu": 551, "graphic": 551, "color_table_galleri": 551, "shtml": 551, "usabl": 551, "rotation2d": [555, 557, 561, 563, 602, 654], "tos": 557, "zonal": [566, 604, 642, 645, 650, 656], "invari": [566, 596, 645], "southern": [566, 593, 604, 612, 642, 645, 650, 651, 656], "with_analysi": 571, "meter": [579, 580, 623, 624, 627, 628, 630, 648], "stretch": [581, 587, 588, 639], "midpoint": [581, 587, 588], "reftopdepth": [581, 584, 585, 587, 588], "ref": [581, 587, 588, 593, 645], "refzmid": [581, 587, 588, 605, 612], "refbottomdepth": [581, 582, 583, 584, 585, 587, 588, 605, 612, 613], "refinterfac": [581, 587, 588], "nvertlevel": [581, 587, 588, 605, 612, 639], "vertcoordmovementweight": [581, 587, 588, 605, 613], "movement": [581, 587, 588], "consider": [581, 587, 588], "sometim": [581, 587, 588, 605, 609, 613, 645], "partial": [582, 583, 612, 639, 642, 648, 650, 651, 652, 656], "seafloor": [582, 584, 585, 586, 639], "rest": [586, 611, 613, 639, 645], "unstretch": 586, "drying_slop": [589, 597, 640, 649], "hurrican": [589, 597, 640, 649], "ice_shelf_2d": [589, 597, 605, 612, 613, 637, 640, 641, 649, 659], "internal_wav": [589, 597, 640, 649], "isomip_plu": [589, 597, 640, 649], "planar_converg": [589, 597, 605, 640, 649], "soma": [589, 597, 640, 649], "sphere_transport": [589, 597, 640, 649], "ziso": [589, 597, 605, 606, 612, 613, 639, 640, 641, 649, 658, 659], "spherical_harmonic_transform": [589, 597, 640, 649], "momentum": [590, 598], "diffus": [590, 598, 617, 620, 641, 653], "decomptest": [590, 593], "threadstest": [590, 593], "frequenc": [590, 596], "rpetest": [590, 598, 605, 612], "144": [590, 593, 605, 612], "intens": [590, 598], "drag": [591, 613, 643, 646], "tidal": [591, 643], "coord": 591, "plug": 591, "background": [591, 606, 613, 644, 650, 652], "emploi": [591, 605], "tailor": 591, "0025": [591, 643], "evolut": [591, 599, 620], "grain": 591, "interv": [591, 595, 605, 647], "accept": 591, "globalconverg": [592, 612, 613], "studi": [592, 600, 610, 612, 613, 644, 645, 652, 653, 654], "globe": [592, 600, 644, 645, 654], "ico": [592, 644], "spheric": [592, 603, 644, 655], "shape": [592, 600, 602, 644], "blob": [592, 600, 652], "dt_per_km": [592, 644], "rmse": [592, 600], "realist": [593, 605, 610, 630, 637, 645, 647, 648, 653, 658], "gitconfig": [593, 614, 645, 647], "enter": [593, 614, 645, 647], "get_e3sm_mesh_nam": 593, "mesh_prefix": 593, "kml": 593, "e3smv": 593, "qu240e2r1": [593, 645], "qu240kml16e3smv2r1": [593, 645], "forwardtestcas": 593, "performancetest": 593, "land_ice_flux": [593, 599], "forward_": [593, 645], "focus": [593, 645, 653], "build_mesh": [593, 602, 603], "build_spherical_mesh": [593, 602, 603], "cull_mesh": 593, "pure": 593, "ec30to60mesh": 593, "refin": [593, 595, 645, 647], "atlant": [593, 645], "pacif": [593, 645], "arctic": [593, 614, 645], "so12to60": 593, "so12to60mesh": 593, "1296": 593, "band": 593, "cycl": [593, 645], "gulf": 593, "wc14mesh": 593, "720": [593, 651], "america": 593, "628": 593, "uk": [593, 645], "metoffic": [593, 645], "estim": [593, 637, 645], "biogeochemsitri": 593, "stress": [593, 637, 656], "shortwav": 593, "ecosystem": [593, 631, 645], "sshadjust": [593, 596, 599], "closer": [593, 611], "clearli": 593, "wrong": 593, "half": [593, 612, 642, 648, 650, 651, 656], "analysistest": 593, "dailyoutputtest": 593, "timeseriesstatsdaili": [593, 645], "timeseriesstatsmonthli": [593, 645], "averag": [593, 599, 637, 645, 651], "rapid": [593, 617], "artifici": 593, "global_ocean_mesh": 593, "d_": [593, 605], "strong": [593, 612, 650, 651], "1e": [593, 613, 656], "jinja": 593, "ec30to60dynamicadjust": 593, "so12to60dynamicadjust": 593, "damped_adjustment_3": 593, "weaken": 593, "4e": 593, "wc14dynamicadjust": 593, "damped_adjustment_6": 593, "prepar": [593, 645, 647], "assembled_fil": [593, 645], "ocean_initial_condit": 593, "oceaninitialcondit": 593, "inputdata": 593, "ocn": 593, "mesh_short_nam": 593, "_no_xtim": 593, "ocean_graph_partit": 593, "oceangraphpartit": 593, "wide": [593, 608, 648, 653], "min_graph_s": 593, "max_graph_s": 593, "power": [593, 652], "1200": [593, 604, 620], "core_count": 593, "seaice_initial_condit": 593, "seaiceinitialcondit": 593, "keep_var": 593, "areacel": 593, "cellsoncel": 593, "edgesoncel": 593, "fcell": [593, 605, 612], "indextocellid": 593, "latcel": 593, "loncel": 593, "meshdens": 593, "nedgesoncel": 593, "verticesoncel": 593, "angleedg": 593, "cellsonedg": 593, "dcedg": 593, "dvedg": 593, "edgesonedg": 593, "fedg": [593, 605, 612], "indextoedgeid": 593, "latedg": 593, "lonedg": 593, "nedgesonedg": 593, "verticesonedg": 593, "weightsonedg": 593, "xedg": [593, 605, 612], "yedg": 593, "zedg": 593, "areatriangl": 593, "cellsonvertex": 593, "edgesonvertex": 593, "fvertex": [593, 605, 612], "indextovertexid": 593, "kiteareasonvertex": 593, "latvertex": 593, "lonvertex": 593, "xvertex": [593, 605, 612], "yvertex": 593, "zvertex": 593, "landicemask": [593, 651], "cice": 593, "scrip": [593, 613, 614, 645], "coupl": [593, 608, 610, 621, 637, 645], "interact": [593, 632, 635, 636, 657], "nomask": 593, "diagnostics_fil": 593, "diagnosticsfil": 593, "aggreg": 593, "get_aggregator_by_nam": 593, "region_group": 593, "basin": [593, 601, 653], "subbasin": 593, "ismip6": 593, "mpas_analysi": 593, "region_mask": 593, "ref_dat": 593, "moc": 593, "repres": [593, 612, 613, 639, 644, 645, 648], "_moc_masks_and_transect": 593, "stereograph": [593, 614, 645], "map_": 593, "_to_0": 593, "5x0": 593, "5degree_bilinear": 593, "_to_6000": 593, "0x6000": 593, "0km_10": 593, "0km_antarctic_stereo_bilinear": 593, "0km_arctic_stereo_bilinear": 593, "k\u00e4rn\u00e4": [594, 646], "cm": 594, "ever": [594, 606], "tropic": [595, 647], "cyclon": [595, 647], "dequ120at30cr10rr2": 595, "dequ120at30cr10rr2mesh": 595, "inherit": [595, 606], "coastal_tool": 595, "coastal_refined_mesh": 595, "interpolateatmforc": 595, "cfsv2": [595, 647], "reanalysi": [595, 647], "hourli": [595, 647], "createpointstatsfil": 595, "noaa": [595, 647], "usg": [595, 647], "squash": [596, 599, 604, 639, 651], "config_use_frazil_ice_form": 596, "config_frazil_maximum_depth": 596, "dirti": 596, "cut": 596, "tendaytest": 598, "timeseriesstatsmonthlyoutput": 599, "update_evaporation_flux": 599, "mimic": [599, 611], "indefinit": 599, "due": [599, 618, 651], "freshwat": [599, 641, 645, 648], "factor": [599, 643, 653], "interpolate_ocean_mask": 599, "interpolate_geom": 599, "geometr": 599, "bottomdepthobserv": 599, "bedrock": 599, "oceanfracobserv": 599, "landicefract": 599, "smootheddraftmask": 599, "runawai": 599, "incom": 599, "meltwat": [599, 651], "landicepressureforc": 599, "landicedraftforc": 599, "isomip_plus_forc": [599, 651], "time_varying_ocean0": 599, "consecut": 599, "land_ice_forc": 599, "front": [599, 632, 656], "held": [599, 605], "landicefractionforc": 599, "readi": [599, 605, 612, 613, 635], "fuller": 599, "repeatedli": [599, 618, 651], "plot_streamfunct": [599, 651], "isomip_plus_viz": [599, 651], "frame": [599, 643, 651], "deepest": [599, 604, 639], "timeseriesbelow300m": 599, "correctli": 599, "resolv": [599, 647], "oceantest": 599, "planarconverg": 600, "horizontaladvect": 600, "dt_1km": [600, 652], "surface_restor": 601, "radiu": [601, 621, 644], "accord": [601, 604, 645, 657], "100layere3smv1": [601, 604, 645, 656], "32km": [601, 653], "min_den": 601, "min_particle_dens": [601, 653], "max_den": 601, "max_particle_dens": [601, 653], "nsurf": 601, "surface_count": [601, 653], "build_particle_simpl": 601, "f_grid": 601, "f_name": 601, "f_decomp": 601, "buoysurf": 601, "somatestcas": 601, "solid": [602, 642, 644, 648, 650], "bodi": [602, 644], "rotat": [602, 644, 654], "timestep_munut": 602, "rotation_2d_converg": 602, "pdf": 602, "_sol": 602, "diverg": [602, 654], "nondivergent2d_converg": 602, "divergent2d_converg": 602, "correlatedtracers2d_triplot": 602, "quconverg": 603, "harmon": [603, 655], "transform": [603, 655], "implemnt": 603, "runnin": 603, "test_sht": 603, "ey": 604, "toward": 604, "2500": [604, 613, 639, 646, 653, 656], "cores_with_particl": 604, "min_cores_with_particl": 604, "btr_dt": 604, "mom_del4": 604, "0e10": 604, "80": 604, "130": 604, "25e9": 604, "5km": [604, 613, 641, 648, 651, 659], "300": [604, 611, 644, 652, 653, 654, 656], "09": 604, "8e8": 604, "2100": 604, "900": 604, "8e7": 604, "zisotestcas": 604, "withfrazil": 604, "initial_temp_t1": [604, 656], "tanh": [604, 639, 656], "initial_temp_t2": [604, 656], "initial_temp_h1": [604, 656], "initial_temp_mt": [604, 656], "green": 605, "blue": [605, 631, 657], "orang": 605, "red": 605, "laid": 605, "among": [605, 607, 612, 613], "organiz": 605, "encompass": 605, "perspect": 605, "add_test_group": [605, 606, 612, 613], "univers": 605, "mix": [605, 645, 650], "2000m": [605, 617, 620, 623, 657], "halfar": [605, 620], "cism": [605, 620], "dome_typ": [605, 620], "closest": [605, 620, 647], "put_origin_on_a_cel": [605, 620], "hydro": [605, 620], "time_slic": [605, 619, 620, 625], "save_imag": [605, 619, 620, 621, 625], "hide": [605, 619, 620, 621, 625], "hide_fig": [605, 619, 620, 621, 625], "add_test_cas": [605, 612, 613], "variable_resolut": [605, 617, 657], "talk": 605, "complic": [605, 606, 607, 612, 613], "calcul": 605, "enumer": [605, 612], "rpe_test_": [605, 612], "_nu_": [605, 612], "deliber": 605, "fairli": [605, 606, 607, 612, 648, 651], "clumsi": [605, 606, 611], "rpe_test_1_nu_1": [605, 642, 650], "rpe_test_2_nu_5": [605, 642, 650], "rememb": [605, 607], "po4": 605, "no3": 605, "sio3": 605, "nh4": 605, "fe": [605, 632], "dic": 605, "dic_alt_co2": 605, "alk": 605, "dofe": 605, "dop": 605, "dopr": 605, "donr": 605, "zooc": 605, "spchl": 605, "spc": 605, "spfe": 605, "spcaco3": 605, "diatchl": 605, "diatc": 605, "diatf": 605, "diatsi": 605, "diazchl": 605, "diazc": 605, "diazf": 605, "phaeochl": 605, "phaeoc": 605, "phaeof": 605, "dm": 605, "dmsp": 605, "prot": 605, "poli": 605, "lip": 605, "adjusted_init": 605, "unwant": 605, "outer": 605, "inner": [605, 612, 613], "reli": [605, 612], "question": [605, 614], "neglig": [605, 637, 648], "write_netcdf": [605, 612, 613], "convers": [605, 612, 613], "generate_grid": 605, "nonperiodic_x": [605, 612, 613], "nonperiodic_i": [605, 612, 613], "graphinfofilenam": [605, 612, 613], "use_dist": [605, 612, 642, 650], "gradient_width_dist": [605, 612, 642, 650], "gradient_width_frac": [605, 612, 642, 650], "bottom_temperatur": [605, 612, 642, 650], "surface_temperatur": [605, 612, 642, 650, 653], "temperature_differ": [605, 612, 642, 650], "coriolis_paramet": [605, 612, 642, 650, 651], "len": 605, "ones_lik": [605, 612], "xmin": [605, 612], "xmax": [605, 612], "ymin": [605, 612], "ymax": [605, 612], "ymid": [605, 612], "xperturbmin": [605, 612], "xperturbmax": [605, 612], "perturbationwidth": [605, 612], "yoffset": [605, 612], "sin": [605, 612, 642, 643, 650], "pi": [605, 612, 639, 643, 644], "temp_vert": [605, 612], "logical_and": [605, 612], "transpos": [605, 612], "3rd": [605, 612, 654], "crest": [605, 612], "expand_dim": [605, 612], "dim": [605, 612], "broadcast": [605, 612], "zeros_lik": [605, 612, 613], "nedg": [605, 612], "dtype": 605, "harm": 605, "likewis": [605, 612], "arisen": 605, "omit": [605, 613, 657], "open_dataset": [605, 613], "isn": [605, 606, 612, 613], "mesh_path": 605, "initial_state_target": 605, "entha_analy_result": 605, "ourselv": 605, "firewal": 605, "slate": 605, "output_fil": 605, "commonli": [605, 629], "expens": [605, 620], "word": 605, "clariti": 605, "ff": 605, "91": 605, "transfer": 605, "design": [605, 606, 610, 611, 636, 645, 652, 653], "substitut": 605, "beforehand": 605, "update_namelist_at_runtim": [605, 613], "pio_num_iotask": 605, "pio_strid": 605, "mostli": [605, 612, 613, 645], "synchron": [605, 610], "update_streams_at_runtim": 605, "timedelta": 605, "3600": 605, "delta": [605, 639], "03d": 605, "02d": 605, "forgotten": 605, "access": [606, 607, 612, 613, 631, 635, 636], "dig": [606, 614], "adher": [606, 612, 613], "strictli": [606, 612], "pep8": 606, "bot": [606, 639], "violat": 606, "editor": 606, "pycharm": [606, 612, 613], "spyder": 606, "linter": 606, "flake8": 606, "discourag": 606, "reformat": 606, "autopep8": 606, "undesir": 606, "util": 606, "lint": 606, "wildcard": 606, "vim": [606, 612, 613], "plugin": 606, "id": 606, "why": [606, 613, 617], "sound": 606, "subpackag": 606, "understand": [606, 614], "downstream": 606, "clu": 606, "intro": 606, "hidden": 606, "shortcut": [606, 657], "referenc": [606, 611, 612], "ll": [606, 612, 613, 635], "dot": 606, "charact": 606, "unix": [606, 610], "mayb": 606, "machine_config": 606, "endswith": 606, "splitext": 606, "exactli": [606, 607, 612, 613, 617, 639, 641], "visa": 606, "versa": 606, "comfort": [606, 612, 613], "orient": 606, "program": [606, 614], "felt": 606, "hesit": 606, "harder": 606, "outcom": 606, "augment": 606, "compos": [606, 648, 651], "dens": 606, "worth": [606, 612], "endeavor": 606, "took": 606, "138": 606, "bash": [607, 608, 657], "ksh": 607, "mac": [607, 610], "csh": 607, "tcsh": 607, "temporarili": 607, "obtain": [607, 632], "recogn": 607, "miniconda3": [607, 612, 613, 636, 657], "permiss": 607, "anyon": 607, "person": [607, 608], "base_path_to_install_or_update_conda": 607, "with_albani": 607, "with_netlib_lapack": 607, "with_petsc": 607, "flavor": 607, "login": [607, 632, 635], "troubl": 607, "recognit": 607, "trilino": 607, "spack": [607, 631, 632, 633, 634, 635, 636], "downsid": 607, "unneed": 607, "workstat": 607, "deploy": 607, "touch": 607, "miniconda": [607, 636, 657], "update_speck": 607, "reinstal": 607, "scorpio": [607, 636, 657], "esmf": [607, 635, 657], "load_": 607, "encod": 607, "load_dev_compass_": 607, "dev_compass_": [607, 608], "safest": 607, "rerun": 607, "load_dev_compass": 607, "echo": 607, "recreat": [607, 608], "incorrect": 607, "pip": 607, "extra": [607, 653], "wih": 607, "env_onli": 607, "mpas_make_target": [607, 657], "scientif": [607, 645, 653, 656, 657], "grizzli": 607, "situat": [607, 612, 613, 657], "platform": [607, 632, 657], "wiki": [607, 657], "workdir": [607, 657], "es3m": 607, "mkdir": 607, "fetch": [607, 612], "new_branch_nam": 607, "respons": [607, 647, 655], "simplest": [607, 654], "your_new_branch": 607, "checkout": 607, "encount": 608, "solv": [608, 619, 620, 639], "geo": 608, "cartopi": 608, "np110py27_4": 608, "calledprocesserror": 608, "spec": [608, 635], "vpn": 608, "site": 608, "shell": [608, 610], "honor": 608, "spawn": 608, "usernam": [608, 612, 635], "proxy_en": 608, "all_proxi": 608, "proxyout": 608, "8080": 608, "no_proxi": 608, "localhost": [608, 635, 636, 657], "127": 608, "proxy_dis": 608, "unset": 608, "anytim": 608, "fatal": 608, "mpi_init": 608, "stack": 608, "mpir_init_thread": 608, "159": 608, "mpid_init": 608, "164": 608, "mpidi_ch3_init": 608, "95": 608, "mpid_nem_init": 608, "314": 608, "mpid_nem_tcp_init": 608, "173": 608, "mpid_nem_tcp_get_business_card": 608, "395": 608, "getsockinterfaceaddr": 608, "369": 608, "pn2034311": 608, "errno": 608, "host": [608, 636, 657], "unexpect": [609, 612, 613, 617, 641], "Of": 610, "predict": 610, "kept": [610, 645], "expert": [610, 624, 627, 628, 645], "team": [610, 645], "launch": 610, "benefit": 610, "queue": 610, "beginn": [610, 612, 613], "worktre": [610, 612, 613], "advanc": [610, 612, 613], "style": [610, 612, 613], "troubleshoot": 610, "proxi": 610, "gethostbynam": 610, "port": [610, 611, 612, 635, 645, 649, 656], "list_testcas": 610, "setup_testcas": 610, "clean_testcas": 610, "manage_regression_suit": 610, "strict": [610, 612, 636, 657], "experienc": 610, "seriou": 610, "anticip": [610, 612, 645], "persist": 610, "medium": [610, 631], "glossari": [611, 612, 613], "rapidli": [611, 651], "companion": 611, "liber": 611, "add_cosine_bel": 611, "add_baroclinic_channel": [611, 612], "fit": [611, 614, 654], "camel": 611, "welcom": 611, "_mesh": 611, "bring": 611, "_namelist": 611, "_init": 611, "_output": 611, "wasn": 611, "becam": 611, "didn": [611, 613], "_setup_step": 611, "haven": [611, 612, 613], "_core": 611, "heurist": 611, "refus": 611, "update_cor": 611, "goal_cells_per_cor": [611, 644, 652, 654], "max_cells_per_cor": [611, 644, 652, 654], "qu30": 611, "65275": 611, "10383": 611, "approx_cel": 611, "6e8": 611, "round": [611, 644], "pinch": 611, "_forward": 611, "_min_cor": 611, "consult": [612, 613, 645], "fork": 612, "push": 612, "lowercas": [612, 613], "hyphen": 612, "realli": [612, 613, 635], "nice": [612, 613, 635], "supercomput": [612, 613], "highli": [612, 613], "camelcas": [612, 613], "capit": [612, 613], "cap": [612, 613], "promot": 612, "pattern": [612, 613], "seen": [612, 618], "seldom": 612, "outweigh": 612, "equip": 612, "hexagon": 612, "variat": 612, "pain": 612, "pick": [612, 613], "partial_cell_typ": [612, 639, 642, 648, 650, 651, 652, 656], "min_pc_fract": [612, 639, 642, 648, 650, 651, 652, 656], "halv": [612, 642, 650], "500km": [612, 642, 650], "40e3": [612, 642, 650, 651], "corioli": [612, 642, 648, 650, 651, 656], "2e": [612, 642, 650], "connect": [612, 635, 645], "handi": 612, "05": [612, 653, 656], "techiniqu": 612, "input_interv": [612, 613], "initial_onli": [612, 613], "__init": 612, "spuriou": [612, 642, 650], "pop": [612, 642, 650], "mom": [612, 642, 650], "mitgcm": [612, 642, 650], "heavi": 612, "context": 612, "analogi": 612, "tet": 612, "20_00": 612, "0000": [612, 613], "dayssincestartofsim": 612, "relativevort": 612, "pyplot": [612, 613], "plt": [612, 613], "cmocean": 612, "output_": 612, "sections_baroclinic_channel_": 612, "_plot": 612, "compact": 612, "anymor": 612, "bc_configur": 612, "users_guid": [612, 613], "alphabet": [612, 613], "daunt": [612, 613], "tini": 613, "add_gotm": 613, "driver": 613, "Its": 613, "driver_script": 613, "pre_messag": 613, "post_messag": 613, "config_init": 613, "add_execut": 613, "dest": 613, "config_init_configur": 613, "periodic_planar": 613, "config_vert_level": 613, "config_periodic_planar_vert_level": 613, "config_periodic_planar_bottom_depth": 613, "config_periodic_planar_velocity_strength": 613, "config_ocean_run_mod": 613, "config_write_cull_cell_mask": 613, "config_vertical_grid": 613, "immut": 613, "input_init": 613, "output_init": 613, "add_cont": 613, "edgemask": 613, "run_script": 613, "mpascellcul": 613, "mpasmeshconvert": 613, "model_run": 613, "proc": 613, "gotmturb": 613, "nml": 613, "plot_profil": 613, "jump": 613, "encourag": 613, "plai": 613, "role": 613, "barotropic_channel": 613, "excerpt": 613, "slight": 613, "hasn": 613, "real": 613, "deep": [613, 653], "uniformli": 613, "wrapper": 613, "conform": 613, "add_link": 613, "copy_fil": 613, "source_path": 613, "script_test_dir": 613, "0000_12": 613, "config_zonal_ssh_grad": 613, "config_pressure_gradient_typ": 613, "constant_forc": 613, "config_use_cvmix": 613, "config_use_gotm": 613, "config_gotm_namelist_fil": 613, "config_gotm_constant_bottom_drag_coeff": 613, "73e": 613, "config_use_implicit_bottom_drag": 613, "00_00": 613, "velocityzon": 613, "velocitymeridion": 613, "vertvisctopofcel": 613, "nor": 613, "velocity_profil": 613, "viscosity_profil": 613, "xr": 613, "switch_backend": 613, "agg": 613, "kappa": 613, "z0b": 613, "5e": [613, 656], "gssh": 613, "81": 613, "isel": 613, "zi": 613, "ustarb": 613, "sqrt": [613, 645], "u_a": 613, "nu_a": 613, "infer": [613, 646], "c_d": 613, "4g": 613, "xlabel": 613, "ylabel": 613, "savefig": 613, "introduc": 613, "got": 613, "newli": 613, "explanatori": 614, "wherev": 614, "my_machin": 614, "customize_config_pars": 614, "inej": 614, "ssl": 614, "certif": 614, "partition_execut": 614, "netcdf4_class": 614, "netcdf3_64bit": 614, "netcdf3_class": 614, "engin": 614, "scipi": 614, "contact": 614, "temperaturemax": 614, "statist": 614, "temperature_max": 614, "offlin": [614, 645], "coarser": [614, 644, 645, 652], "finer": [614, 645, 656], "2018": 616, "websit": [616, 640], "v6": 616, "land_ic": 616, "sia_restart_test": [617, 657], "sia_decomposition_test": [617, 657], "enthalpy_decomposition_test": 617, "enthalpy_restart_test": 617, "expos": [617, 641], "fo_decomposition_test": [617, 657], "fo_restart_test": [617, 657], "3km_restart_test": 617, "fo_calv": 617, "von_mises_stress_damag": 617, "threshold_facemelt": 617, "3km_decomposition_test": 617, "none_calv": 617, "adp": 618, "timestepp": [618, 629], "ratio": [618, 643], "warn": [618, 644, 652], "greater": [618, 620], "panel": 618, "cumul": 618, "adapt": [618, 629], "lag": 618, "trigger": 618, "routin": [618, 626], "unabl": 618, "volum": 618, "unground": 619, "iceberg": 619, "presenc": 619, "1250": [619, 656], "dirichlet": 619, "bed": 619, "use_mu": 619, "area": [619, 645], "use_7cel": 619, "1proc_run": [619, 620, 621, 623, 625], "4proc_run": [619, 620, 621, 623], "1983": 620, "2005": [620, 643, 645], "rectangular": [620, 621, 625, 653], "circularli": [620, 621], "accumul": [620, 621], "ablat": 620, "16700": 620, "varr": 620, "payn": 621, "750": 621, "exmapl": [621, 625], "25000m": 621, "64": [621, 639, 655], "74": 621, "25000": 621, "thermomechan": 621, "warm": [621, 651, 656], "altitud": 621, "cooler": [621, 642, 656], "slip": [621, 623, 656], "throughout": [621, 642, 643, 650, 651], "exismint2_viz": 621, "enthalpy_benchmark_viz": 622, "display_imag": 622, "prescrib": [622, 651, 653], "decreas": [622, 651], "paraview": [623, 630], "cull_dist": [623, 624, 627, 628, 630], "min_spac": [623, 624, 627, 628, 630], "e3": [623, 624, 627, 628, 630], "max_spac": [623, 624, 627, 628, 630], "log10": [623, 624, 627, 628, 630], "high_log_spe": [623, 624, 627, 628, 630], "low_log_spe": [623, 624, 627, 628, 630], "75": [623, 624, 627, 628, 630, 648, 651], "high_dist": [623, 624, 627, 628, 630], "e5": [623, 624, 627, 628, 630], "low_dist": [623, 624, 627, 628, 630], "e4": [623, 624, 627, 628, 630], "use_spe": [623, 624, 627, 628, 630], "use_dist_to_grounding_lin": [623, 624, 627, 628, 630], "use_dist_to_edg": [623, 624, 627, 628, 630], "newer": [623, 630], "notabl": 624, "slower": 624, "humboldt_mesh": 624, "yr": [624, 627, 628, 651], "16proc_run": [624, 630], "32proc_run": [624, 630], "fot": 624, "bfb": 624, "von": 624, "mise": 624, "marin": [624, 651], "facemelt": 624, "exercis": [624, 645], "widest": 624, "1000m": 625, "58": 625, "3proc_run": 625, "specialti": 626, "carefulli": 626, "high_res_kangerlussuaq_mesh": 627, "high_res_kogebugts_mesh": 628, "e2": 628, "2km": [629, 651], "paper": [629, 653, 656], "trade": 629, "accuraci": 629, "includess": 630, "gain": [631, 645], "confluenc": 631, "deploi": [631, 632, 633, 634, 635, 636, 653], "mpi_intel": [631, 632, 633, 634, 635, 636], "mpi_gnu": [631, 632, 633, 635, 636], "hdf5": [631, 632, 633, 634, 635, 636], "fortran": [631, 632, 633, 634, 635, 636], "pnetcdf": [631, 632, 633, 634, 635, 636], "use_e3sm_hdf5_netcdf": [631, 632, 633, 634, 635, 636], "cobalt": [631, 632, 633, 634, 635, 636], "condo": [631, 657], "acm": [631, 635, 657], "qualiti": [631, 632, 634, 635, 636, 657], "servic": [631, 632, 634, 635, 636, 657], "qo": [631, 632, 634, 635, 636, 657], "acme_high": 631, "load_latest_compass_intel_impi": [631, 632, 633, 634], "load_latest_compass_gnu_mvapich": [631, 632], "dst": 632, "calendar": 632, "yellow": 632, "introduct": 632, "batch": 632, "network": 632, "my_monik": 632, "wtrw": 632, "ba": 632, "lustr": [632, 657], "scratch3": 632, "scratch4": [632, 657], "sacctmgr": 632, "assoc": 632, "cluster": 632, "sshare": 632, "grep": [632, 657], "sreport": 632, "accountutilizationbyus": 632, "prioriti": 632, "chkhome": 632, "petabyt": 632, "df": 632, "bp": 632, "archiv": [632, 635], "hpss": [632, 635], "tn": 632, "storag": 632, "project_nam": 632, "salloc": [632, 635, 636], "account_nam": 632, "load_latest_compass_gnu_openmpi": [633, 657], "compyf": 634, "app": [634, 657], "conda_env": [634, 657], "mpi_pgi": 634, "mvapich2": 634, "pmi2": 634, "my_usernam": [635, 636], "knl": 635, "nim": 635, "filesystem": 635, "cscratch1": 635, "sd": 635, "myquota": 635, "prjquota": 635, "projectid": 635, "m2833": 635, "hsi": 635, "htar": 635, "zstash": 635, "cf": [635, 645, 657], "cdir": [635, 657], "premium": 635, "load_latest_compass_intel_mpt": 635, "load_latest_compass_gnu_mpt": 635, "8844": 635, "monik": 635, "browser": 635, "grab": 635, "logon": 635, "kernel": 635, "myenv": 635, "ipykernel": 635, "kernelspec": 635, "Be": 635, "interpret": 635, "argv": 635, "ipykernel_launch": 635, "connection_fil": 635, "display_nam": 635, "sai": [636, 651], "workload": 636, "sbatch": [636, 657], "squeue": 636, "scancel": 636, "jobid": 636, "cancel": 636, "emtpi": 636, "channel_prior": [636, 657], "mpi_mpich": [636, 657], "mpi_openmpi": [636, 657], "nompi": [636, 657], "inclus": [637, 645], "cryospher": [637, 645], "campaign": [637, 645], "mass": [637, 654], "loss": 637, "depress": [637, 639, 648, 651], "thicker": 637, "hanei": [637, 651], "stationari": 637, "freeli": 637, "guess": 637, "robust": 637, "grow": 638, "stewart": [639, 656], "2017": 639, "z_2": 639, "z_1": 639, "mathrm": [639, 656], "rightarrow": 639, "infti": 639, "z_k": 639, "z_0": 639, "finder": 639, "n_z": 639, "h_": [639, 656], "210": [639, 644], "5500": 639, "renorm": [639, 656], "51": 639, "221": 639, "63": 639, "flat": 639, "collaps": 639, "adcroft": 639, "campin": 639, "2004": 639, "absenc": 639, "proport": [639, 644, 652, 654], "watercolumn": 639, "press": 639, "batymetri": 639, "stair": 639, "release_6": 640, "unexpectedli": 641, "proper": [641, 645], "equilibr": 641, "ilicak": [642, 650], "2012": [642, 650, 654], "psu": [642, 643, 648, 650, 651, 652, 653, 656], "sinusoid": [642, 643, 650], "warmer": [642, 650], "mk": [642, 643, 650], "celsiu": [642, 648, 650, 651], "reproduc": [643, 645], "warner": 643, "2013": [643, 656], "oei": 643, "dimens": 643, "6km": 643, "seaward": 643, "oscil": 643, "zeta_": 643, "east": 643, "5t": 643, "degc": 643, "rough": 643, "250m": 643, "coordiant": 643, "viz": [643, 648, 650, 651], "ouptut": [643, 651], "drying_slope_viz": 643, "generate_movi": 643, "frames_per_second": [643, 651], "movie_format": [643, 651], "12h": 643, "inspect": 643, "williamson": 644, "1992": 644, "3a": 644, "skamarock": 644, "gassmann": 644, "psi": 644, "psi_0": 644, "co": [644, 645], "ge": 644, "equatori": 644, "u_0": 644, "aim": [644, 645, 652, 654], "central": 644, "rad": 644, "lat_cent": 644, "lon_cent": 644, "14159265": 644, "2123666": 644, "6667": 644, "hill": 644, "psi0": 644, "transit": [644, 645, 651], "vel_pd": 644, "qu_conv_thresh": 644, "qu_conv_max": 644, "icos_conv_thresh": 644, "icos_conv_max": 644, "480": 644, "multipli": [644, 652], "alloc": [644, 652, 654], "mesh_": 645, "init_": 645, "april": 645, "mpas_mesh_short_nam": 645, "mpas_mesh_long_nam": 645, "mpas_mesh_prefix": 645, "mpas_mesh_e3sm_vers": 645, "mpas_mesh_pull_request": 645, "mpas_mesh_qu_revis": 645, "mpas_mesh_qu_version_author": 645, "mpas_mesh_qu_version_author_": 645, "mail": 645, "mpas_mesh_qu_version_creation_d": 645, "210116": 645, "mpas_mesh_qu_minimum_resolution_km": 645, "mpas_mesh_qu_maximum_resolution_km": 645, "mpas_mesh_qu_maximum_depth_m": 645, "mpas_mesh_qu_number_of_level": 645, "mpas_mesh_descript": 645, "mpas_mesh_bathymetri": 645, "mpas_initial_condit": 645, "mpas_mesh_compass_vers": 645, "mpas_mesh_jigsaw_vers": 645, "mpas_mesh_jigsaw": 645, "python_vers": 645, "mpas_mesh_mpa": 645, "tools_vers": 645, "mpas_mesh_nco_vers": 645, "mpas_mesh_esmf_vers": 645, "mpas_mesh_geometric_features_vers": 645, "mpas_mesh_metis_vers": 645, "mpas_mesh_pyremap_vers": 645, "lowest": 645, "everywher": 645, "impli": 645, "treatment": 645, "gent": 645, "mcwilliam": 645, "doi": 645, "org": 645, "1175": 645, "1520": 645, "0485": 645, "1990": [645, 648, 651], "020": 645, "0150": 645, "imiocm": 645, "parameter": [645, 648], "a_c": 645, "smoothli": 645, "sorrm": 645, "taper": 645, "attach": 645, "topograph": 645, "global_ocean_dynamic_adjust": 645, "coastlin": [645, 653], "ai": 645, "portion": 645, "gibraltar": 645, "mediterranean": 645, "contigu": 645, "peninsula": 645, "deriv": 645, "en4_1900_bgc": 645, "thought": 645, "explict": 645, "higdon": 645, "4th": [645, 654], "rung": [645, 654], "kutta": [645, 654], "infeas": 645, "surfaceareaweightedaverag": 645, "watermasscensu": 645, "layervolumeweightedaverag": 645, "zonalmean": 645, "okuboweiss": 645, "meridionalheattransport": 645, "highfrequencyoutput": 645, "eliassenpalm": 645, "mixedlayerdepth": 645, "debugdiagnost": 645, "eddyproductvari": 645, "oceanheatcont": 645, "mixedlayerheatbudget": 645, "sync": 645, "confid": 645, "complianc": 645, "cfconvent": 645, "transient": [645, 648], "amplitud": 645, "aggress": 645, "gentli": 645, "global_ocean_mesh_quwisc240": 645, "global_ocean_mesh_ecwisc30to60": 645, "qu240_for_e3sm": [645, 657, 659], "quwisc240_for_e3sm": [645, 657, 659], "mocstreamfunct": 645, "weren": 645, "ofr": 645, "wcatl12to45e2r4": 645, "210318": 645, "gl": 646, "umlauf": 646, "burchard": 646, "2003": 646, "67": 646, "69": 646, "0173": 646, "event": 647, "tide": [647, 655], "coastal": 647, "estuari": 647, "surg": 647, "inund": 647, "floodplain_elev": 647, "strm15": 647, "carri": 647, "vector": 647, "recor": 647, "spinup": 647, "ramp": 647, "shock": 647, "dimension": 648, "linearli": [648, 651, 653], "bui": [648, 651], "1490": [648, 651], "abruptli": [648, 651], "occupi": [648, 651], "cavity_thick": 648, "slope_height": 648, "angl": 648, "edge_width": 648, "0e3": 648, "y1": 648, "y2": 648, "surface_salin": [648, 653], "bottom_salin": 648, "5e3": 648, "strenuou": 648, "live": 648, "induc": 650, "propag": 650, "stratif": [650, 653], "5000": 650, "amplitude_width_frac": 650, "amplitude_width_dist": 650, "50e3": 650, "intercomparison": 651, "2016": [651, 656], "sheetmodel": 651, "cornford": 651, "ocean3": 651, "ocean4": 651, "inflow": 651, "misomip": 651, "topo_smooth": 651, "min_ice_thick": 651, "scalar": 651, "draft_scal": 651, "minimum_level": 651, "min_column_thick": 651, "min_smoothed_draft_mask": 651, "min_land_ice_fract": 651, "init_top_temp": 651, "init_bot_temp": 651, "init_top_s": 651, "init_bot_s": 651, "restore_top_temp": 651, "restore_bot_temp": 651, "restore_top_s": 651, "restore_bot_s": 651, "restore_r": 651, "restore_evap_r": 651, "restore_xmin": 651, "790e3": 651, "restore_xmax": 651, "800e3": 651, "409e": 651, "kg": 651, "effective_dens": 651, "1026": 651, "0002": 651, "0003": 651, "isomip_plus_streamfunct": 651, "osf_dx": 651, "2e3": 651, "osf_dz": 651, "plot_hanei": 651, "section_i": 651, "warmest": 651, "amundsen": 651, "bellingshausen": 651, "vigor": 651, "rigor": 651, "cold": [651, 656], "weddel": 651, "ross": 651, "weak": 651, "decad": 651, "protocol": 651, "opposit": 651, "misimp": 651, "undergon": 651, "retreat": 651, "exponenti": 651, "cours": 651, "stai": 651, "monoton": 651, "setup_to_run": 651, "loop": 651, "stagger": 652, "hex": 652, "nx_1km": 652, "512": 652, "ny_1km": 652, "640": 652, "deg": 652, "x_center": 652, "y_center": 652, "gaussian_width": 652, "advect_x": 652, "advect_i": 652, "conv_thresh": 652, "conv_max": 652, "wolfram": [653, 656], "investig": 653, "midlatitud": 653, "21": 653, "48": 653, "gyre": 653, "appendix": 653, "8km": 653, "16km": 653, "expans": 653, "eos_linear_alpha": 653, "density_differ": 653, "salinity_gradi": 653, "0008": 653, "thermocline_depth": 653, "density_difference_linear": 653, "phi": 653, "shelf_depth": [653, 656], "unequ": 653, "trajectori": 653, "situ": [653, 656], "lauritzen": 654, "conserv": 654, "debugtrac": 654, "discontinu": 654, "slot": 654, "cylind": 654, "offset": 654, "timestep_minut": 654, "tracer1_conv_thresh": 654, "tracer2_conv_thresh": 654, "tracer3_conv_thresh": 654, "appreci": 654, "degrad": 654, "revers": 654, "deform": 654, "nonlinearli": 654, "correl": 654, "invers": 655, "attract": 655, "guassian": 655, "shperic": 655, "shtn": 655, "dosen": 655, "gather": 655, "rank": 655, "scatter": 655, "impliment": 655, "algoritm": 655, "unstructur": 655, "all_reduc": 655, "use_shtn": 655, "analyit": 655, "sprial": 655, "harmoic": 655, "26": 655, "220": 655, "980": 655, "spherial": 655, "ringler": 656, "span": 656, "l_x": 656, "l_y": 656, "y_": 656, "w_": 656, "easterli": 656, "wind_transition_posit": 656, "800000": 656, "antarctic_shelf_front_width": 656, "600000": 656, "wind_stress_shelf_front_max": 656, "meridional_ext": 656, "0e6": 656, "slope_half_width": 656, "0e5": 656, "slope_center_posit": 656, "reference_corioli": 656, "coriolis_gradi": 656, "wind_stress_max": 656, "mean_restoring_temp": 656, "restoring_temp_dev_ta": 656, "restoring_temp_dev_tb": 656, "interior": 656, "restoring_temp_tau": 656, "piston": 656, "restoring_temp_piston_vel": 656, "93e": 656, "fold": 656, "restoring_temp_z": 656, "spong": 656, "restoring_sponge_l": 656, "0e4": 656, "anomali": 656, "frazil_temperature_anomali": 656, "load_latest_compass": 657, "minu": 657, "create_compass_load_script": 657, "load_compass_1": 657, "0_mpich": 657, "sia_smoke_test": 657, "fo_smoke_test": 657, "mpas_path": 657, "17": 657, "210131_test_new_branch": 657, "fall": 657, "landice_datafil": 657, "ocean_databas": 657, "_database_root": 657, "cpu": 657, "previous_workdir": 657, "test_subdir": 657, "whatev": 657, "job_script": 657, "j": 657, "exclus": 657, "job_nam": 657, "wall_tim": 657, "fo_integr": [657, 659], "full_integr": [657, 659], "sia_integr": [657, 659], "suitenam": 657, "prohibit": 659}, "objects": {"compass": [[9, 0, 1, "", "MpasCore"], [11, 0, 1, "", "Step"], [23, 0, 1, "", "TestCase"], [28, 0, 1, "", "TestGroup"]], "compass.MpasCore": [[9, 1, 1, "", "__init__"], [10, 1, 1, "", "add_test_group"]], "compass.Step": [[11, 1, 1, "", "__init__"], [12, 1, 1, "", "add_input_file"], [13, 1, 1, "", "add_model_as_input"], [14, 1, 1, "", "add_namelist_file"], [15, 1, 1, "", "add_namelist_options"], [16, 1, 1, "", "add_output_file"], [17, 1, 1, "", "add_streams_file"], [18, 1, 1, "", "run"], [19, 1, 1, "", "setup"], [20, 1, 1, "", "update_namelist_at_runtime"], [21, 1, 1, "", "update_namelist_pio"], [22, 1, 1, "", "update_streams_at_runtime"]], "compass.TestCase": [[23, 1, 1, "", "__init__"], [24, 1, 1, "", "add_step"], [25, 1, 1, "", "configure"], [26, 1, 1, "", "run"], [27, 1, 1, "", "validate"]], "compass.TestGroup": [[28, 1, 1, "", "__init__"], [29, 1, 1, "", "add_test_case"]], "compass.__main__": [[30, 2, 1, "", "main"]], "compass.cache": [[31, 2, 1, "", "update_cache"]], "compass.clean": [[32, 2, 1, "", "clean_cases"]], "compass.config": [[33, 0, 1, "", "CompassConfigParser"]], "compass.config.CompassConfigParser": [[33, 1, 1, "", "__init__"]], "compass.io": [[34, 2, 1, "", "download"], [35, 2, 1, "", "symlink"]], "compass.landice": [[72, 0, 1, "", "Landice"]], "compass.landice.Landice": [[72, 1, 1, "", "__init__"]], "compass.landice.tests.calving_dt_convergence": [[73, 0, 1, "", "CalvingDtConvergence"]], "compass.landice.tests.calving_dt_convergence.CalvingDtConvergence": [[73, 1, 1, "", "__init__"]], "compass.landice.tests.calving_dt_convergence.dt_convergence_test": [[74, 0, 1, "", "DtConvergenceTest"]], "compass.landice.tests.calving_dt_convergence.dt_convergence_test.DtConvergenceTest": [[74, 1, 1, "", "__init__"], [75, 1, 1, "", "validate"]], "compass.landice.tests.calving_dt_convergence.run_model": [[76, 0, 1, "", "RunModel"]], "compass.landice.tests.calving_dt_convergence.run_model.RunModel": [[76, 1, 1, "", "__init__"], [77, 1, 1, "", "run"]], "compass.landice.tests.circular_shelf": [[78, 0, 1, "", "CircularShelf"]], "compass.landice.tests.circular_shelf.CircularShelf": [[78, 1, 1, "", "__init__"]], "compass.landice.tests.circular_shelf.decomposition_test": [[79, 0, 1, "", "DecompositionTest"]], "compass.landice.tests.circular_shelf.decomposition_test.DecompositionTest": [[79, 1, 1, "", "__init__"], [80, 1, 1, "", "run"]], "compass.landice.tests.circular_shelf.run_model": [[81, 0, 1, "", "RunModel"]], "compass.landice.tests.circular_shelf.run_model.RunModel": [[81, 1, 1, "", "__init__"], [82, 1, 1, "", "run"]], "compass.landice.tests.circular_shelf.setup_mesh": [[83, 0, 1, "", "SetupMesh"]], "compass.landice.tests.circular_shelf.setup_mesh.SetupMesh": [[83, 1, 1, "", "__init__"], [84, 1, 1, "", "run"]], "compass.landice.tests.circular_shelf.visualize": [[85, 0, 1, "", "Visualize"], [87, 2, 1, "", "visualize_circular_shelf"]], "compass.landice.tests.circular_shelf.visualize.Visualize": [[85, 1, 1, "", "__init__"], [86, 1, 1, "", "run"]], "compass.landice.tests.dome": [[88, 0, 1, "", "Dome"]], "compass.landice.tests.dome.Dome": [[88, 1, 1, "", "__init__"]], "compass.landice.tests.dome.decomposition_test": [[89, 0, 1, "", "DecompositionTest"]], "compass.landice.tests.dome.decomposition_test.DecompositionTest": [[89, 1, 1, "", "__init__"], [90, 1, 1, "", "run"]], "compass.landice.tests.dome.restart_test": [[91, 0, 1, "", "RestartTest"]], "compass.landice.tests.dome.restart_test.RestartTest": [[91, 1, 1, "", "__init__"], [92, 1, 1, "", "run"]], "compass.landice.tests.dome.run_model": [[93, 0, 1, "", "RunModel"]], "compass.landice.tests.dome.run_model.RunModel": [[93, 1, 1, "", "__init__"], [94, 1, 1, "", "run"], [95, 1, 1, "", "setup"]], "compass.landice.tests.dome.setup_mesh": [[96, 0, 1, "", "SetupMesh"]], "compass.landice.tests.dome.setup_mesh.SetupMesh": [[96, 1, 1, "", "__init__"], [97, 1, 1, "", "run"]], "compass.landice.tests.dome.smoke_test": [[98, 0, 1, "", "SmokeTest"]], "compass.landice.tests.dome.smoke_test.SmokeTest": [[98, 1, 1, "", "__init__"], [99, 1, 1, "", "run"]], "compass.landice.tests.dome.visualize": [[100, 0, 1, "", "Visualize"], [102, 2, 1, "", "visualize_dome"]], "compass.landice.tests.dome.visualize.Visualize": [[100, 1, 1, "", "__init__"], [101, 1, 1, "", "run"]], "compass.landice.tests.eismint2": [[103, 0, 1, "", "Eismint2"]], "compass.landice.tests.eismint2.Eismint2": [[103, 1, 1, "", "__init__"]], "compass.landice.tests.eismint2.decomposition_test": [[104, 0, 1, "", "DecompositionTest"]], "compass.landice.tests.eismint2.decomposition_test.DecompositionTest": [[104, 1, 1, "", "__init__"], [105, 1, 1, "", "run"]], "compass.landice.tests.eismint2.restart_test": [[106, 0, 1, "", "RestartTest"]], "compass.landice.tests.eismint2.restart_test.RestartTest": [[106, 1, 1, "", "__init__"], [107, 1, 1, "", "run"]], "compass.landice.tests.eismint2.run_experiment": [[108, 0, 1, "", "RunExperiment"]], "compass.landice.tests.eismint2.run_experiment.RunExperiment": [[108, 1, 1, "", "__init__"], [109, 1, 1, "", "run"], [110, 1, 1, "", "setup"]], "compass.landice.tests.eismint2.setup_mesh": [[111, 0, 1, "", "SetupMesh"]], "compass.landice.tests.eismint2.setup_mesh.SetupMesh": [[111, 1, 1, "", "__init__"], [112, 1, 1, "", "run"]], "compass.landice.tests.eismint2.standard_experiments": [[113, 0, 1, "", "StandardExperiments"]], "compass.landice.tests.eismint2.standard_experiments.StandardExperiments": [[113, 1, 1, "", "__init__"], [114, 1, 1, "", "run"]], "compass.landice.tests.eismint2.standard_experiments.visualize": [[115, 0, 1, "", "Visualize"], [117, 2, 1, "", "visualize_eismint2"]], "compass.landice.tests.eismint2.standard_experiments.visualize.Visualize": [[115, 1, 1, "", "__init__"], [116, 1, 1, "", "run"]], "compass.landice.tests.enthalpy_benchmark.A": [[118, 0, 1, "", "A"]], "compass.landice.tests.enthalpy_benchmark.A.A": [[118, 1, 1, "", "__init__"], [119, 1, 1, "", "configure"], [120, 1, 1, "", "run"]], "compass.landice.tests.enthalpy_benchmark.A.visualize": [[121, 0, 1, "", "Visualize"]], "compass.landice.tests.enthalpy_benchmark.A.visualize.Visualize": [[121, 1, 1, "", "__init__"], [122, 1, 1, "", "run"]], "compass.landice.tests.enthalpy_benchmark.B": [[123, 0, 1, "", "B"]], "compass.landice.tests.enthalpy_benchmark.B.B": [[123, 1, 1, "", "__init__"], [124, 1, 1, "", "configure"], [125, 1, 1, "", "run"]], "compass.landice.tests.enthalpy_benchmark.B.visualize": [[126, 0, 1, "", "Visualize"]], "compass.landice.tests.enthalpy_benchmark.B.visualize.Visualize": [[126, 1, 1, "", "__init__"], [127, 1, 1, "", "run"]], "compass.landice.tests.enthalpy_benchmark": [[128, 0, 1, "", "EnthalpyBenchmark"]], "compass.landice.tests.enthalpy_benchmark.EnthalpyBenchmark": [[128, 1, 1, "", "__init__"]], "compass.landice.tests.enthalpy_benchmark.run_model": [[129, 0, 1, "", "RunModel"]], "compass.landice.tests.enthalpy_benchmark.run_model.RunModel": [[129, 1, 1, "", "__init__"], [130, 1, 1, "", "run"], [131, 1, 1, "", "setup"]], "compass.landice.tests.enthalpy_benchmark.setup_mesh": [[132, 0, 1, "", "SetupMesh"]], "compass.landice.tests.enthalpy_benchmark.setup_mesh.SetupMesh": [[132, 1, 1, "", "__init__"], [133, 1, 1, "", "run"]], "compass.landice.tests.greenland": [[134, 0, 1, "", "Greenland"]], "compass.landice.tests.greenland.Greenland": [[134, 1, 1, "", "__init__"]], "compass.landice.tests.greenland.decomposition_test": [[135, 0, 1, "", "DecompositionTest"]], "compass.landice.tests.greenland.decomposition_test.DecompositionTest": [[135, 1, 1, "", "__init__"], [136, 1, 1, "", "run"]], "compass.landice.tests.greenland.high_res_mesh": [[137, 0, 1, "", "HighResMesh"]], "compass.landice.tests.greenland.high_res_mesh.HighResMesh": [[137, 1, 1, "", "__init__"], [138, 1, 1, "", "run"]], "compass.landice.tests.greenland.mesh": [[139, 0, 1, "", "Mesh"]], "compass.landice.tests.greenland.mesh.Mesh": [[139, 1, 1, "", "__init__"], [140, 1, 1, "", "build_cell_width"], [141, 1, 1, "", "run"]], "compass.landice.tests.greenland.restart_test": [[142, 0, 1, "", "RestartTest"]], "compass.landice.tests.greenland.restart_test.RestartTest": [[142, 1, 1, "", "__init__"], [143, 1, 1, "", "run"]], "compass.landice.tests.greenland.run_model": [[144, 0, 1, "", "RunModel"]], "compass.landice.tests.greenland.run_model.RunModel": [[144, 1, 1, "", "__init__"], [145, 1, 1, "", "run"], [146, 1, 1, "", "setup"]], "compass.landice.tests.greenland.smoke_test": [[147, 0, 1, "", "SmokeTest"]], "compass.landice.tests.greenland.smoke_test.SmokeTest": [[147, 1, 1, "", "__init__"], [148, 1, 1, "", "run"]], "compass.landice.tests.humboldt": [[149, 0, 1, "", "Humboldt"]], "compass.landice.tests.humboldt.Humboldt": [[149, 1, 1, "", "__init__"]], "compass.landice.tests.humboldt.decomposition_test": [[150, 0, 1, "", "DecompositionTest"]], "compass.landice.tests.humboldt.decomposition_test.DecompositionTest": [[150, 1, 1, "", "__init__"], [151, 1, 1, "", "validate"]], "compass.landice.tests.humboldt.mesh": [[152, 0, 1, "", "Mesh"]], "compass.landice.tests.humboldt.mesh.Mesh": [[152, 1, 1, "", "__init__"], [153, 1, 1, "", "run"]], "compass.landice.tests.humboldt.mesh_gen": [[154, 0, 1, "", "MeshGen"]], "compass.landice.tests.humboldt.mesh_gen.MeshGen": [[154, 1, 1, "", "__init__"], [155, 1, 1, "", "run"]], "compass.landice.tests.humboldt.restart_test": [[156, 0, 1, "", "RestartTest"]], "compass.landice.tests.humboldt.restart_test.RestartTest": [[156, 1, 1, "", "__init__"], [157, 1, 1, "", "validate"]], "compass.landice.tests.humboldt.run_model": [[158, 0, 1, "", "RunModel"]], "compass.landice.tests.humboldt.run_model.RunModel": [[158, 1, 1, "", "__init__"], [159, 1, 1, "", "run"]], "compass.landice.tests.hydro_radial": [[160, 0, 1, "", "HydroRadial"]], "compass.landice.tests.hydro_radial.HydroRadial": [[160, 1, 1, "", "__init__"]], "compass.landice.tests.hydro_radial.decomposition_test": [[161, 0, 1, "", "DecompositionTest"]], "compass.landice.tests.hydro_radial.decomposition_test.DecompositionTest": [[161, 1, 1, "", "__init__"], [162, 1, 1, "", "run"]], "compass.landice.tests.hydro_radial.restart_test": [[163, 0, 1, "", "RestartTest"]], "compass.landice.tests.hydro_radial.restart_test.RestartTest": [[163, 1, 1, "", "__init__"], [164, 1, 1, "", "run"]], "compass.landice.tests.hydro_radial.run_model": [[165, 0, 1, "", "RunModel"]], "compass.landice.tests.hydro_radial.run_model.RunModel": [[165, 1, 1, "", "__init__"], [166, 1, 1, "", "run"], [167, 1, 1, "", "setup"]], "compass.landice.tests.hydro_radial.setup_mesh": [[168, 0, 1, "", "SetupMesh"]], "compass.landice.tests.hydro_radial.setup_mesh.SetupMesh": [[168, 1, 1, "", "__init__"], [169, 1, 1, "", "run"]], "compass.landice.tests.hydro_radial.spinup_test": [[170, 0, 1, "", "SpinupTest"]], "compass.landice.tests.hydro_radial.spinup_test.SpinupTest": [[170, 1, 1, "", "__init__"], [171, 1, 1, "", "run"]], "compass.landice.tests.hydro_radial.steady_state_drift_test": [[172, 0, 1, "", "SteadyStateDriftTest"]], "compass.landice.tests.hydro_radial.steady_state_drift_test.SteadyStateDriftTest": [[172, 1, 1, "", "__init__"], [173, 1, 1, "", "run"]], "compass.landice.tests.hydro_radial.visualize": [[174, 0, 1, "", "Visualize"], [176, 2, 1, "", "visualize_hydro_radial"]], "compass.landice.tests.hydro_radial.visualize.Visualize": [[174, 1, 1, "", "__init__"], [175, 1, 1, "", "run"]], "compass.landice.tests.kangerlussuaq": [[177, 0, 1, "", "Kangerlussuaq"]], "compass.landice.tests.kangerlussuaq.Kangerlussuaq": [[177, 1, 1, "", "__init__"]], "compass.landice.tests.kangerlussuaq.mesh": [[178, 0, 1, "", "Mesh"]], "compass.landice.tests.kangerlussuaq.mesh.Mesh": [[178, 1, 1, "", "__init__"], [179, 1, 1, "", "run"]], "compass.landice.tests.kangerlussuaq.mesh_gen": [[180, 0, 1, "", "MeshGen"]], "compass.landice.tests.kangerlussuaq.mesh_gen.MeshGen": [[180, 1, 1, "", "__init__"], [181, 1, 1, "", "run"]], "compass.landice.tests.koge_bugt_s": [[182, 0, 1, "", "KogeBugtS"]], "compass.landice.tests.koge_bugt_s.KogeBugtS": [[182, 1, 1, "", "__init__"]], "compass.landice.tests.koge_bugt_s.mesh": [[183, 0, 1, "", "Mesh"]], "compass.landice.tests.koge_bugt_s.mesh.Mesh": [[183, 1, 1, "", "__init__"], [184, 1, 1, "", "run"]], "compass.landice.tests.koge_bugt_s.mesh_gen": [[185, 0, 1, "", "MeshGen"]], "compass.landice.tests.koge_bugt_s.mesh_gen.MeshGen": [[185, 1, 1, "", "__init__"], [186, 1, 1, "", "run"]], "compass.landice.tests.mismipplus": [[187, 0, 1, "", "MISMIPplus"]], "compass.landice.tests.mismipplus.MISMIPplus": [[187, 1, 1, "", "__init__"]], "compass.landice.tests.mismipplus.run_model": [[188, 0, 1, "", "RunModel"]], "compass.landice.tests.mismipplus.run_model.RunModel": [[188, 1, 1, "", "__init__"], [189, 1, 1, "", "run"], [190, 1, 1, "", "setup"]], "compass.landice.tests.mismipplus.smoke_test": [[191, 0, 1, "", "SmokeTest"]], "compass.landice.tests.mismipplus.smoke_test.SmokeTest": [[191, 1, 1, "", "__init__"], [192, 1, 1, "", "run"]], "compass.landice.tests.thwaites": [[193, 0, 1, "", "Thwaites"]], "compass.landice.tests.thwaites.Thwaites": [[193, 1, 1, "", "__init__"]], "compass.landice.tests.thwaites.decomposition_test": [[194, 0, 1, "", "DecompositionTest"]], "compass.landice.tests.thwaites.decomposition_test.DecompositionTest": [[194, 1, 1, "", "__init__"], [195, 1, 1, "", "run"]], "compass.landice.tests.thwaites.restart_test": [[196, 0, 1, "", "RestartTest"]], "compass.landice.tests.thwaites.restart_test.RestartTest": [[196, 1, 1, "", "__init__"], [197, 1, 1, "", "run"]], "compass.landice.tests.thwaites.run_model": [[198, 0, 1, "", "RunModel"]], "compass.landice.tests.thwaites.run_model.RunModel": [[198, 1, 1, "", "__init__"], [199, 1, 1, "", "run"], [200, 1, 1, "", "setup"]], "compass.list": [[36, 2, 1, "", "list_cases"], [37, 2, 1, "", "list_machines"], [38, 2, 1, "", "list_suites"]], "compass.logging": [[39, 2, 1, "", "log_method_call"]], "compass.mesh": [[40, 0, 1, "", "IcosahedralMeshStep"], [47, 0, 1, "", "QuasiUniformSphericalMeshStep"]], "compass.mesh.IcosahedralMeshStep": [[40, 1, 1, "", "__init__"], [41, 1, 1, "", "build_subdivisions_cell_width_lat_lon"], [42, 1, 1, "", "get_cell_width"], [43, 1, 1, "", "get_subdivisions"], [44, 1, 1, "", "make_jigsaw_mesh"], [45, 1, 1, "", "run"], [46, 1, 1, "", "setup"]], "compass.mesh.QuasiUniformSphericalMeshStep": [[47, 1, 1, "", "__init__"], [48, 1, 1, "", "build_cell_width_lat_lon"], [49, 1, 1, "", "make_jigsaw_mesh"], [50, 1, 1, "", "run"], [51, 1, 1, "", "setup"]], "compass.mesh.spherical": [[52, 0, 1, "", "SphericalBaseStep"]], "compass.mesh.spherical.SphericalBaseStep": [[52, 1, 1, "", "__init__"], [53, 1, 1, "", "run"], [54, 1, 1, "", "save_and_plot_cell_width"], [55, 1, 1, "", "setup"]], "compass.model": [[56, 2, 1, "", "make_graph_file"], [57, 2, 1, "", "partition"], [58, 2, 1, "", "run_model"]], "compass.mpas_cores": [[59, 2, 1, "", "get_mpas_cores"]], "compass.ocean": [[223, 0, 1, "", "Ocean"]], "compass.ocean.Ocean": [[223, 1, 1, "", "__init__"]], "compass.ocean.haney": [[224, 2, 1, "", "compute_haney_number"]], "compass.ocean.iceshelf": [[225, 2, 1, "", "adjust_ssh"], [226, 2, 1, "", "compute_land_ice_pressure_and_draft"]], "compass.ocean.particles": [[227, 2, 1, "", "remap_particles"], [228, 2, 1, "", "write"]], "compass.ocean.plot": [[229, 2, 1, "", "plot_initial_state"], [230, 2, 1, "", "plot_vertical_grid"]], "compass.ocean.tests.baroclinic_channel": [[231, 0, 1, "", "BaroclinicChannel"], [232, 2, 1, "", "configure"]], "compass.ocean.tests.baroclinic_channel.BaroclinicChannel": [[231, 1, 1, "", "__init__"]], "compass.ocean.tests.baroclinic_channel.decomp_test": [[233, 0, 1, "", "DecompTest"]], "compass.ocean.tests.baroclinic_channel.decomp_test.DecompTest": [[233, 1, 1, "", "__init__"], [234, 1, 1, "", "configure"], [235, 1, 1, "", "run"]], "compass.ocean.tests.baroclinic_channel.default": [[236, 0, 1, "", "Default"]], "compass.ocean.tests.baroclinic_channel.default.Default": [[236, 1, 1, "", "__init__"], [237, 1, 1, "", "configure"], [238, 1, 1, "", "run"]], "compass.ocean.tests.baroclinic_channel.forward": [[239, 0, 1, "", "Forward"]], "compass.ocean.tests.baroclinic_channel.forward.Forward": [[239, 1, 1, "", "__init__"], [240, 1, 1, "", "run"], [241, 1, 1, "", "setup"]], "compass.ocean.tests.baroclinic_channel.initial_state": [[242, 0, 1, "", "InitialState"]], "compass.ocean.tests.baroclinic_channel.initial_state.InitialState": [[242, 1, 1, "", "__init__"], [243, 1, 1, "", "run"], [244, 1, 1, "", "setup"]], "compass.ocean.tests.baroclinic_channel.restart_test": [[245, 0, 1, "", "RestartTest"]], "compass.ocean.tests.baroclinic_channel.restart_test.RestartTest": [[245, 1, 1, "", "__init__"], [246, 1, 1, "", "configure"], [247, 1, 1, "", "run"]], "compass.ocean.tests.baroclinic_channel.rpe_test": [[248, 0, 1, "", "RpeTest"]], "compass.ocean.tests.baroclinic_channel.rpe_test.RpeTest": [[248, 1, 1, "", "__init__"], [249, 1, 1, "", "configure"], [250, 1, 1, "", "run"]], "compass.ocean.tests.baroclinic_channel.rpe_test.analysis": [[251, 0, 1, "", "Analysis"]], "compass.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis": [[251, 1, 1, "", "__init__"], [252, 1, 1, "", "run"], [253, 1, 1, "", "setup"]], "compass.ocean.tests.baroclinic_channel.threads_test": [[254, 0, 1, "", "ThreadsTest"]], "compass.ocean.tests.baroclinic_channel.threads_test.ThreadsTest": [[254, 1, 1, "", "__init__"], [255, 1, 1, "", "configure"], [256, 1, 1, "", "run"]], "compass.ocean.tests.drying_slope": [[257, 0, 1, "", "DryingSlope"]], "compass.ocean.tests.drying_slope.DryingSlope": [[257, 1, 1, "", "__init__"]], "compass.ocean.tests.drying_slope.default": [[258, 0, 1, "", "Default"]], "compass.ocean.tests.drying_slope.default.Default": [[258, 1, 1, "", "__init__"], [259, 1, 1, "", "configure"]], "compass.ocean.tests.drying_slope.forward": [[260, 0, 1, "", "Forward"]], "compass.ocean.tests.drying_slope.forward.Forward": [[260, 1, 1, "", "__init__"], [261, 1, 1, "", "run"]], "compass.ocean.tests.drying_slope.initial_state": [[262, 0, 1, "", "InitialState"]], "compass.ocean.tests.drying_slope.initial_state.InitialState": [[262, 1, 1, "", "__init__"], [263, 1, 1, "", "run"]], "compass.ocean.tests.drying_slope.viz": [[264, 0, 1, "", "Viz"]], "compass.ocean.tests.drying_slope.viz.Viz": [[264, 1, 1, "", "__init__"], [265, 1, 1, "", "run"]], "compass.ocean.tests.global_convergence": [[266, 0, 1, "", "GlobalConvergence"]], "compass.ocean.tests.global_convergence.GlobalConvergence": [[266, 1, 1, "", "__init__"]], "compass.ocean.tests.global_convergence.cosine_bell": [[267, 0, 1, "", "CosineBell"]], "compass.ocean.tests.global_convergence.cosine_bell.CosineBell": [[267, 1, 1, "", "__init__"], [268, 1, 1, "", "configure"], [269, 1, 1, "", "run"]], "compass.ocean.tests.global_convergence.cosine_bell.analysis": [[270, 0, 1, "", "Analysis"]], "compass.ocean.tests.global_convergence.cosine_bell.analysis.Analysis": [[270, 1, 1, "", "__init__"], [271, 1, 1, "", "rmse"], [272, 1, 1, "", "run"]], "compass.ocean.tests.global_convergence.cosine_bell.forward": [[273, 0, 1, "", "Forward"]], "compass.ocean.tests.global_convergence.cosine_bell.forward.Forward": [[273, 1, 1, "", "__init__"], [274, 1, 1, "", "get_dt"], [275, 1, 1, "", "run"], [276, 1, 1, "", "setup"]], "compass.ocean.tests.global_convergence.cosine_bell.init": [[277, 0, 1, "", "Init"]], "compass.ocean.tests.global_convergence.cosine_bell.init.Init": [[277, 1, 1, "", "__init__"], [278, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean": [[279, 0, 1, "", "GlobalOcean"], [283, 3, 0, "-", "configure"]], "compass.ocean.tests.global_ocean.GlobalOcean": [[279, 1, 1, "", "__init__"]], "compass.ocean.tests.global_ocean.analysis_test": [[280, 0, 1, "", "AnalysisTest"]], "compass.ocean.tests.global_ocean.analysis_test.AnalysisTest": [[280, 1, 1, "", "__init__"], [281, 1, 1, "", "configure"], [282, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.configure": [[284, 2, 1, "", "configure_global_ocean"]], "compass.ocean.tests.global_ocean.daily_output_test": [[285, 0, 1, "", "DailyOutputTest"]], "compass.ocean.tests.global_ocean.daily_output_test.DailyOutputTest": [[285, 1, 1, "", "__init__"], [286, 1, 1, "", "configure"], [287, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.decomp_test": [[288, 0, 1, "", "DecompTest"]], "compass.ocean.tests.global_ocean.decomp_test.DecompTest": [[288, 1, 1, "", "__init__"], [289, 1, 1, "", "configure"], [290, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.dynamic_adjustment": [[291, 0, 1, "", "DynamicAdjustment"]], "compass.ocean.tests.global_ocean.dynamic_adjustment.DynamicAdjustment": [[291, 1, 1, "", "__init__"], [292, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.files_for_e3sm": [[293, 0, 1, "", "FilesForE3SM"]], "compass.ocean.tests.global_ocean.files_for_e3sm.FilesForE3SM": [[293, 1, 1, "", "__init__"], [294, 1, 1, "", "configure"], [295, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.files_for_e3sm.diagnostics_files": [[296, 0, 1, "", "DiagnosticsFiles"]], "compass.ocean.tests.global_ocean.files_for_e3sm.diagnostics_files.DiagnosticsFiles": [[296, 1, 1, "", "__init__"], [297, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.files_for_e3sm.ocean_graph_partition": [[298, 0, 1, "", "OceanGraphPartition"]], "compass.ocean.tests.global_ocean.files_for_e3sm.ocean_graph_partition.OceanGraphPartition": [[298, 1, 1, "", "__init__"], [299, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.files_for_e3sm.ocean_initial_condition": [[300, 0, 1, "", "OceanInitialCondition"]], "compass.ocean.tests.global_ocean.files_for_e3sm.ocean_initial_condition.OceanInitialCondition": [[300, 1, 1, "", "__init__"], [301, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.files_for_e3sm.scrip": [[302, 0, 1, "", "Scrip"]], "compass.ocean.tests.global_ocean.files_for_e3sm.scrip.Scrip": [[302, 1, 1, "", "__init__"], [303, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.files_for_e3sm.seaice_initial_condition": [[304, 0, 1, "", "SeaiceInitialCondition"]], "compass.ocean.tests.global_ocean.files_for_e3sm.seaice_initial_condition.SeaiceInitialCondition": [[304, 1, 1, "", "__init__"], [305, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.forward": [[306, 0, 1, "", "ForwardStep"], [309, 0, 1, "", "ForwardTestCase"]], "compass.ocean.tests.global_ocean.forward.ForwardStep": [[306, 1, 1, "", "__init__"], [307, 1, 1, "", "run"], [308, 1, 1, "", "setup"]], "compass.ocean.tests.global_ocean.forward.ForwardTestCase": [[309, 1, 1, "", "__init__"], [310, 1, 1, "", "configure"], [311, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.init": [[312, 0, 1, "", "Init"]], "compass.ocean.tests.global_ocean.init.Init": [[312, 1, 1, "", "__init__"], [313, 1, 1, "", "configure"], [314, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.init.initial_state": [[315, 0, 1, "", "InitialState"]], "compass.ocean.tests.global_ocean.init.initial_state.InitialState": [[315, 1, 1, "", "__init__"], [316, 1, 1, "", "run"], [317, 1, 1, "", "setup"]], "compass.ocean.tests.global_ocean.init.ssh_adjustment": [[318, 0, 1, "", "SshAdjustment"]], "compass.ocean.tests.global_ocean.init.ssh_adjustment.SshAdjustment": [[318, 1, 1, "", "__init__"], [319, 1, 1, "", "run"], [320, 1, 1, "", "setup"]], "compass.ocean.tests.global_ocean.mesh": [[321, 0, 1, "", "Mesh"]], "compass.ocean.tests.global_ocean.mesh.Mesh": [[321, 1, 1, "", "__init__"], [322, 1, 1, "", "configure"], [323, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.mesh.cull": [[324, 2, 1, "", "cull_mesh"]], "compass.ocean.tests.global_ocean.mesh.ec30to60": [[325, 0, 1, "", "EC30to60Mesh"]], "compass.ocean.tests.global_ocean.mesh.ec30to60.EC30to60Mesh": [[325, 1, 1, "", "__init__"], [326, 1, 1, "", "build_cell_width_lat_lon"]], "compass.ocean.tests.global_ocean.mesh.ec30to60.dynamic_adjustment": [[327, 0, 1, "", "EC30to60DynamicAdjustment"]], "compass.ocean.tests.global_ocean.mesh.ec30to60.dynamic_adjustment.EC30to60DynamicAdjustment": [[327, 1, 1, "", "__init__"], [328, 1, 1, "", "configure"], [329, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.mesh.mesh": [[330, 0, 1, "", "MeshStep"]], "compass.ocean.tests.global_ocean.mesh.mesh.MeshStep": [[330, 1, 1, "", "__init__"], [331, 1, 1, "", "build_cell_width_lat_lon"], [332, 1, 1, "", "run"], [333, 1, 1, "", "setup"]], "compass.ocean.tests.global_ocean.mesh.qu240": [[334, 0, 1, "", "QU240Mesh"]], "compass.ocean.tests.global_ocean.mesh.qu240.QU240Mesh": [[334, 1, 1, "", "__init__"], [335, 1, 1, "", "build_cell_width_lat_lon"]], "compass.ocean.tests.global_ocean.mesh.qu240.dynamic_adjustment": [[336, 0, 1, "", "QU240DynamicAdjustment"]], "compass.ocean.tests.global_ocean.mesh.qu240.dynamic_adjustment.QU240DynamicAdjustment": [[336, 1, 1, "", "__init__"], [337, 1, 1, "", "configure"], [338, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.mesh.so12to60": [[339, 0, 1, "", "SO12to60Mesh"]], "compass.ocean.tests.global_ocean.mesh.so12to60.SO12to60Mesh": [[339, 1, 1, "", "__init__"], [340, 1, 1, "", "build_cell_width_lat_lon"]], "compass.ocean.tests.global_ocean.mesh.so12to60.dynamic_adjustment": [[341, 0, 1, "", "SO12to60DynamicAdjustment"]], "compass.ocean.tests.global_ocean.mesh.so12to60.dynamic_adjustment.SO12to60DynamicAdjustment": [[341, 1, 1, "", "__init__"], [342, 1, 1, "", "configure"], [343, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.mesh.wc14": [[344, 0, 1, "", "WC14Mesh"]], "compass.ocean.tests.global_ocean.mesh.wc14.WC14Mesh": [[344, 1, 1, "", "__init__"], [345, 1, 1, "", "build_cell_width_lat_lon"]], "compass.ocean.tests.global_ocean.mesh.wc14.dynamic_adjustment": [[346, 0, 1, "", "WC14DynamicAdjustment"]], "compass.ocean.tests.global_ocean.mesh.wc14.dynamic_adjustment.WC14DynamicAdjustment": [[346, 1, 1, "", "__init__"], [347, 1, 1, "", "configure"], [348, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.metadata": [[349, 2, 1, "", "add_mesh_and_init_metadata"], [350, 2, 1, "", "get_e3sm_mesh_names"]], "compass.ocean.tests.global_ocean.performance_test": [[351, 0, 1, "", "PerformanceTest"]], "compass.ocean.tests.global_ocean.performance_test.PerformanceTest": [[351, 1, 1, "", "__init__"], [352, 1, 1, "", "configure"], [353, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.restart_test": [[354, 0, 1, "", "RestartTest"]], "compass.ocean.tests.global_ocean.restart_test.RestartTest": [[354, 1, 1, "", "__init__"], [355, 1, 1, "", "configure"], [356, 1, 1, "", "run"]], "compass.ocean.tests.global_ocean.threads_test": [[357, 0, 1, "", "ThreadsTest"]], "compass.ocean.tests.global_ocean.threads_test.ThreadsTest": [[357, 1, 1, "", "__init__"], [358, 1, 1, "", "configure"], [359, 1, 1, "", "run"]], "compass.ocean.tests.gotm": [[360, 0, 1, "", "Gotm"]], "compass.ocean.tests.gotm.Gotm": [[360, 1, 1, "", "__init__"]], "compass.ocean.tests.gotm.default": [[361, 0, 1, "", "Default"]], "compass.ocean.tests.gotm.default.Default": [[361, 1, 1, "", "__init__"], [362, 1, 1, "", "validate"]], "compass.ocean.tests.gotm.default.analysis": [[363, 0, 1, "", "Analysis"]], "compass.ocean.tests.gotm.default.analysis.Analysis": [[363, 1, 1, "", "__init__"], [364, 1, 1, "", "run"]], "compass.ocean.tests.gotm.default.forward": [[365, 0, 1, "", "Forward"]], "compass.ocean.tests.gotm.default.forward.Forward": [[365, 1, 1, "", "__init__"], [366, 1, 1, "", "run"]], "compass.ocean.tests.gotm.default.init": [[367, 0, 1, "", "Init"]], "compass.ocean.tests.gotm.default.init.Init": [[367, 1, 1, "", "__init__"], [368, 1, 1, "", "run"]], "compass.ocean.tests.hurricane": [[369, 0, 1, "", "Hurricane"], [376, 3, 0, "-", "configure"]], "compass.ocean.tests.hurricane.Hurricane": [[369, 1, 1, "", "__init__"]], "compass.ocean.tests.hurricane.analysis": [[370, 0, 1, "", "Analysis"]], "compass.ocean.tests.hurricane.analysis.Analysis": [[370, 1, 1, "", "__init__"], [371, 1, 1, "", "read_pointstats"], [372, 1, 1, "", "read_station_data"], [373, 1, 1, "", "read_station_file"], [374, 1, 1, "", "run"], [375, 1, 1, "", "setup"]], "compass.ocean.tests.hurricane.forward": [[377, 0, 1, "", "Forward"]], "compass.ocean.tests.hurricane.forward.Forward": [[377, 1, 1, "", "__init__"], [378, 1, 1, "", "configure"], [379, 1, 1, "", "run"]], "compass.ocean.tests.hurricane.forward.forward": [[380, 0, 1, "", "ForwardStep"]], "compass.ocean.tests.hurricane.forward.forward.ForwardStep": [[380, 1, 1, "", "__init__"], [381, 1, 1, "", "run"], [382, 1, 1, "", "setup"]], "compass.ocean.tests.hurricane.init": [[383, 0, 1, "", "Init"]], "compass.ocean.tests.hurricane.init.Init": [[383, 1, 1, "", "__init__"], [384, 1, 1, "", "configure"], [385, 1, 1, "", "run"]], "compass.ocean.tests.hurricane.init.create_pointstats_file": [[386, 0, 1, "", "CreatePointstatsFile"]], "compass.ocean.tests.hurricane.init.create_pointstats_file.CreatePointstatsFile": [[386, 1, 1, "", "__init__"], [387, 1, 1, "", "create_pointstats_file"], [388, 1, 1, "", "run"]], "compass.ocean.tests.hurricane.init.initial_state": [[389, 0, 1, "", "InitialState"]], "compass.ocean.tests.hurricane.init.initial_state.InitialState": [[389, 1, 1, "", "__init__"], [390, 1, 1, "", "run"], [391, 1, 1, "", "setup"]], "compass.ocean.tests.hurricane.init.interpolate_atm_forcing": [[392, 0, 1, "", "InterpolateAtmForcing"]], "compass.ocean.tests.hurricane.init.interpolate_atm_forcing.InterpolateAtmForcing": [[392, 1, 1, "", "__init__"], [393, 1, 1, "", "interpolate_data_to_grid"], [394, 1, 1, "", "plot_interp_data"], [395, 1, 1, "", "run"], [396, 1, 1, "", "write_to_file"]], "compass.ocean.tests.hurricane.mesh": [[397, 0, 1, "", "Mesh"]], "compass.ocean.tests.hurricane.mesh.Mesh": [[397, 1, 1, "", "__init__"], [398, 1, 1, "", "configure"], [399, 1, 1, "", "run"]], "compass.ocean.tests.hurricane.mesh.dequ120at30cr10rr2": [[400, 0, 1, "", "DEQU120at30cr10rr2Mesh"]], "compass.ocean.tests.hurricane.mesh.dequ120at30cr10rr2.DEQU120at30cr10rr2Mesh": [[400, 1, 1, "", "__init__"], [401, 1, 1, "", "build_cell_width_lat_lon"]], "compass.ocean.tests.ice_shelf_2d": [[402, 0, 1, "", "IceShelf2d"], [403, 2, 1, "", "configure"]], "compass.ocean.tests.ice_shelf_2d.IceShelf2d": [[402, 1, 1, "", "__init__"]], "compass.ocean.tests.ice_shelf_2d.default": [[404, 0, 1, "", "Default"]], "compass.ocean.tests.ice_shelf_2d.default.Default": [[404, 1, 1, "", "__init__"], [405, 1, 1, "", "configure"], [406, 1, 1, "", "run"]], "compass.ocean.tests.ice_shelf_2d.forward": [[407, 0, 1, "", "Forward"]], "compass.ocean.tests.ice_shelf_2d.forward.Forward": [[407, 1, 1, "", "__init__"], [408, 1, 1, "", "run"], [409, 1, 1, "", "setup"]], "compass.ocean.tests.ice_shelf_2d.initial_state": [[410, 0, 1, "", "InitialState"]], "compass.ocean.tests.ice_shelf_2d.initial_state.InitialState": [[410, 1, 1, "", "__init__"], [411, 1, 1, "", "run"]], "compass.ocean.tests.ice_shelf_2d.restart_test": [[412, 0, 1, "", "RestartTest"]], "compass.ocean.tests.ice_shelf_2d.restart_test.RestartTest": [[412, 1, 1, "", "__init__"], [413, 1, 1, "", "configure"], [414, 1, 1, "", "run"]], "compass.ocean.tests.ice_shelf_2d.ssh_adjustment": [[415, 0, 1, "", "SshAdjustment"]], "compass.ocean.tests.ice_shelf_2d.ssh_adjustment.SshAdjustment": [[415, 1, 1, "", "__init__"], [416, 1, 1, "", "run"], [417, 1, 1, "", "setup"]], "compass.ocean.tests.ice_shelf_2d.viz": [[418, 0, 1, "", "Viz"]], "compass.ocean.tests.ice_shelf_2d.viz.Viz": [[418, 1, 1, "", "__init__"], [419, 1, 1, "", "run"]], "compass.ocean.tests.internal_wave": [[420, 0, 1, "", "InternalWave"]], "compass.ocean.tests.internal_wave.InternalWave": [[420, 1, 1, "", "__init__"]], "compass.ocean.tests.internal_wave.default": [[421, 0, 1, "", "Default"]], "compass.ocean.tests.internal_wave.default.Default": [[421, 1, 1, "", "__init__"], [422, 1, 1, "", "validate"]], "compass.ocean.tests.internal_wave.forward": [[423, 0, 1, "", "Forward"]], "compass.ocean.tests.internal_wave.forward.Forward": [[423, 1, 1, "", "__init__"], [424, 1, 1, "", "run"]], "compass.ocean.tests.internal_wave.initial_state": [[425, 0, 1, "", "InitialState"]], "compass.ocean.tests.internal_wave.initial_state.InitialState": [[425, 1, 1, "", "__init__"], [426, 1, 1, "", "run"]], "compass.ocean.tests.internal_wave.rpe_test": [[427, 0, 1, "", "RpeTest"]], "compass.ocean.tests.internal_wave.rpe_test.RpeTest": [[427, 1, 1, "", "__init__"]], "compass.ocean.tests.internal_wave.rpe_test.analysis": [[428, 0, 1, "", "Analysis"]], "compass.ocean.tests.internal_wave.rpe_test.analysis.Analysis": [[428, 1, 1, "", "__init__"], [429, 1, 1, "", "run"]], "compass.ocean.tests.internal_wave.ten_day_test": [[430, 0, 1, "", "TenDayTest"]], "compass.ocean.tests.internal_wave.ten_day_test.TenDayTest": [[430, 1, 1, "", "__init__"], [431, 1, 1, "", "validate"]], "compass.ocean.tests.internal_wave.viz": [[432, 0, 1, "", "Viz"]], "compass.ocean.tests.internal_wave.viz.Viz": [[432, 1, 1, "", "__init__"], [433, 1, 1, "", "run"]], "compass.ocean.tests.isomip_plus": [[434, 0, 1, "", "IsomipPlus"]], "compass.ocean.tests.isomip_plus.IsomipPlus": [[434, 1, 1, "", "__init__"]], "compass.ocean.tests.isomip_plus.evap": [[435, 2, 1, "", "update_evaporation_flux"]], "compass.ocean.tests.isomip_plus.forward": [[436, 0, 1, "", "Forward"]], "compass.ocean.tests.isomip_plus.forward.Forward": [[436, 1, 1, "", "__init__"], [437, 1, 1, "", "run"], [438, 1, 1, "", "setup"]], "compass.ocean.tests.isomip_plus.geom": [[439, 2, 1, "", "interpolate_ocean_mask"], [440, 2, 1, "", "process_input_geometry"]], "compass.ocean.tests.isomip_plus.initial_state": [[441, 0, 1, "", "InitialState"]], "compass.ocean.tests.isomip_plus.initial_state.InitialState": [[441, 1, 1, "", "__init__"], [442, 1, 1, "", "run"]], "compass.ocean.tests.isomip_plus.misomip": [[443, 0, 1, "", "Misomip"]], "compass.ocean.tests.isomip_plus.misomip.Misomip": [[443, 1, 1, "", "__init__"], [444, 1, 1, "", "run"]], "compass.ocean.tests.isomip_plus.ocean_test": [[445, 0, 1, "", "OceanTest"]], "compass.ocean.tests.isomip_plus.ocean_test.OceanTest": [[445, 1, 1, "", "__init__"], [446, 1, 1, "", "configure"], [447, 1, 1, "", "run"]], "compass.ocean.tests.isomip_plus.ssh_adjustment": [[448, 0, 1, "", "SshAdjustment"]], "compass.ocean.tests.isomip_plus.ssh_adjustment.SshAdjustment": [[448, 1, 1, "", "__init__"], [449, 1, 1, "", "run"], [450, 1, 1, "", "setup"]], "compass.ocean.tests.isomip_plus.streamfunction": [[451, 0, 1, "", "Streamfunction"]], "compass.ocean.tests.isomip_plus.streamfunction.Streamfunction": [[451, 1, 1, "", "__init__"], [452, 1, 1, "", "run"]], "compass.ocean.tests.isomip_plus.viz": [[453, 0, 1, "", "Viz"], [455, 2, 1, "", "file_complete"]], "compass.ocean.tests.isomip_plus.viz.Viz": [[453, 1, 1, "", "__init__"], [454, 1, 1, "", "run"]], "compass.ocean.tests.isomip_plus.viz.plot": [[456, 0, 1, "", "MoviePlotter"], [468, 0, 1, "", "TimeSeriesPlotter"]], "compass.ocean.tests.isomip_plus.viz.plot.MoviePlotter": [[456, 1, 1, "", "__init__"], [457, 1, 1, "", "images_to_movies"], [458, 1, 1, "", "plot_3d_field_top_bot_section"], [459, 1, 1, "", "plot_barotropic_streamfunction"], [460, 1, 1, "", "plot_horiz_series"], [461, 1, 1, "", "plot_ice_shelf_boundary_variables"], [462, 1, 1, "", "plot_layer_interfaces"], [463, 1, 1, "", "plot_melt_rates"], [464, 1, 1, "", "plot_overturning_streamfunction"], [465, 1, 1, "", "plot_potential_density"], [466, 1, 1, "", "plot_salinity"], [467, 1, 1, "", "plot_temperature"]], "compass.ocean.tests.isomip_plus.viz.plot.TimeSeriesPlotter": [[468, 1, 1, "", "__init__"], [469, 1, 1, "", "plot_melt_time_series"], [470, 1, 1, "", "plot_time_series"]], "compass.ocean.tests.planar_convergence": [[471, 0, 1, "", "PlanarConvergence"]], "compass.ocean.tests.planar_convergence.PlanarConvergence": [[471, 1, 1, "", "__init__"]], "compass.ocean.tests.planar_convergence.conv_init": [[472, 0, 1, "", "ConvInit"]], "compass.ocean.tests.planar_convergence.conv_init.ConvInit": [[472, 1, 1, "", "__init__"], [473, 1, 1, "", "run"]], "compass.ocean.tests.planar_convergence.conv_test_case": [[474, 0, 1, "", "ConvTestCase"]], "compass.ocean.tests.planar_convergence.conv_test_case.ConvTestCase": [[474, 1, 1, "", "__init__"], [475, 1, 1, "", "configure"], [476, 1, 1, "", "run"], [477, 1, 1, "", "update_cores"]], "compass.ocean.tests.planar_convergence.forward": [[478, 0, 1, "", "Forward"]], "compass.ocean.tests.planar_convergence.forward.Forward": [[478, 1, 1, "", "__init__"], [479, 1, 1, "", "get_dt_duration"], [480, 1, 1, "", "run"], [481, 1, 1, "", "setup"]], "compass.ocean.tests.planar_convergence.horizontal_advection": [[482, 0, 1, "", "HorizontalAdvection"]], "compass.ocean.tests.planar_convergence.horizontal_advection.HorizontalAdvection": [[482, 1, 1, "", "__init__"], [483, 1, 1, "", "configure"], [484, 1, 1, "", "run"]], "compass.ocean.tests.planar_convergence.horizontal_advection.analysis": [[485, 0, 1, "", "Analysis"]], "compass.ocean.tests.planar_convergence.horizontal_advection.analysis.Analysis": [[485, 1, 1, "", "__init__"], [486, 1, 1, "", "rmse"], [487, 1, 1, "", "run"]], "compass.ocean.tests.planar_convergence.horizontal_advection.init": [[488, 0, 1, "", "Init"]], "compass.ocean.tests.planar_convergence.horizontal_advection.init.Init": [[488, 1, 1, "", "__init__"], [489, 1, 1, "", "run"]], "compass.ocean.tests.soma": [[490, 0, 1, "", "Soma"]], "compass.ocean.tests.soma.Soma": [[490, 1, 1, "", "__init__"]], "compass.ocean.tests.soma.analysis": [[491, 0, 1, "", "Analysis"]], "compass.ocean.tests.soma.analysis.Analysis": [[491, 1, 1, "", "__init__"], [492, 1, 1, "", "run"]], "compass.ocean.tests.soma.forward": [[493, 0, 1, "", "Forward"]], "compass.ocean.tests.soma.forward.Forward": [[493, 1, 1, "", "__init__"], [494, 1, 1, "", "run"]], "compass.ocean.tests.soma.initial_state": [[495, 0, 1, "", "InitialState"]], "compass.ocean.tests.soma.initial_state.InitialState": [[495, 1, 1, "", "__init__"], [496, 1, 1, "", "run"]], "compass.ocean.tests.soma.soma_test_case": [[497, 0, 1, "", "SomaTestCase"]], "compass.ocean.tests.soma.soma_test_case.SomaTestCase": [[497, 1, 1, "", "__init__"], [498, 1, 1, "", "validate"]], "compass.ocean.tests.sphere_transport": [[499, 0, 1, "", "SphereTransport"]], "compass.ocean.tests.sphere_transport.SphereTransport": [[499, 1, 1, "", "__init__"]], "compass.ocean.tests.sphere_transport.correlated_tracers_2d": [[500, 0, 1, "", "CorrelatedTracers2D"]], "compass.ocean.tests.sphere_transport.correlated_tracers_2d.CorrelatedTracers2D": [[500, 1, 1, "", "__init__"], [501, 1, 1, "", "configure"], [502, 1, 1, "", "run"]], "compass.ocean.tests.sphere_transport.correlated_tracers_2d.analysis": [[503, 0, 1, "", "Analysis"]], "compass.ocean.tests.sphere_transport.correlated_tracers_2d.analysis.Analysis": [[503, 1, 1, "", "__init__"], [504, 1, 1, "", "run"]], "compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward": [[505, 0, 1, "", "Forward"]], "compass.ocean.tests.sphere_transport.correlated_tracers_2d.forward.Forward": [[505, 1, 1, "", "__init__"], [506, 1, 1, "", "get_timestep_str"], [507, 1, 1, "", "run"], [508, 1, 1, "", "setup"]], "compass.ocean.tests.sphere_transport.correlated_tracers_2d.init": [[509, 0, 1, "", "Init"]], "compass.ocean.tests.sphere_transport.correlated_tracers_2d.init.Init": [[509, 1, 1, "", "__init__"], [510, 1, 1, "", "run"]], "compass.ocean.tests.sphere_transport.correlated_tracers_2d.mesh": [[511, 0, 1, "", "Mesh"]], "compass.ocean.tests.sphere_transport.correlated_tracers_2d.mesh.Mesh": [[511, 1, 1, "", "__init__"], [512, 1, 1, "", "build_cell_width_lat_lon"], [513, 1, 1, "", "run"]], "compass.ocean.tests.sphere_transport.divergent_2d": [[514, 0, 1, "", "Divergent2D"]], "compass.ocean.tests.sphere_transport.divergent_2d.Divergent2D": [[514, 1, 1, "", "__init__"], [515, 1, 1, "", "configure"], [516, 1, 1, "", "run"]], "compass.ocean.tests.sphere_transport.divergent_2d.analysis": [[517, 0, 1, "", "Analysis"]], "compass.ocean.tests.sphere_transport.divergent_2d.analysis.Analysis": [[517, 1, 1, "", "__init__"], [518, 1, 1, "", "run"]], "compass.ocean.tests.sphere_transport.divergent_2d.forward": [[519, 0, 1, "", "Forward"]], "compass.ocean.tests.sphere_transport.divergent_2d.forward.Forward": [[519, 1, 1, "", "__init__"], [520, 1, 1, "", "get_timestep_str"], [521, 1, 1, "", "run"], [522, 1, 1, "", "setup"]], "compass.ocean.tests.sphere_transport.divergent_2d.init": [[523, 0, 1, "", "Init"]], "compass.ocean.tests.sphere_transport.divergent_2d.init.Init": [[523, 1, 1, "", "__init__"], [524, 1, 1, "", "run"]], "compass.ocean.tests.sphere_transport.divergent_2d.mesh": [[525, 0, 1, "", "Mesh"]], "compass.ocean.tests.sphere_transport.divergent_2d.mesh.Mesh": [[525, 1, 1, "", "__init__"], [526, 1, 1, "", "build_cell_width_lat_lon"], [527, 1, 1, "", "run"]], "compass.ocean.tests.sphere_transport.nondivergent_2d": [[528, 0, 1, "", "Nondivergent2D"]], "compass.ocean.tests.sphere_transport.nondivergent_2d.Nondivergent2D": [[528, 1, 1, "", "__init__"], [529, 1, 1, "", "configure"], [530, 1, 1, "", "run"]], "compass.ocean.tests.sphere_transport.nondivergent_2d.analysis": [[531, 0, 1, "", "Analysis"]], "compass.ocean.tests.sphere_transport.nondivergent_2d.analysis.Analysis": [[531, 1, 1, "", "__init__"], [532, 1, 1, "", "run"]], "compass.ocean.tests.sphere_transport.nondivergent_2d.forward": [[533, 0, 1, "", "Forward"]], "compass.ocean.tests.sphere_transport.nondivergent_2d.forward.Forward": [[533, 1, 1, "", "__init__"], [534, 1, 1, "", "get_timestep_str"], [535, 1, 1, "", "run"], [536, 1, 1, "", "setup"]], "compass.ocean.tests.sphere_transport.nondivergent_2d.init": [[537, 0, 1, "", "Init"]], "compass.ocean.tests.sphere_transport.nondivergent_2d.init.Init": [[537, 1, 1, "", "__init__"], [538, 1, 1, "", "run"]], "compass.ocean.tests.sphere_transport.nondivergent_2d.mesh": [[539, 0, 1, "", "Mesh"]], "compass.ocean.tests.sphere_transport.nondivergent_2d.mesh.Mesh": [[539, 1, 1, "", "__init__"], [540, 1, 1, "", "build_cell_width_lat_lon"], [541, 1, 1, "", "run"]], "compass.ocean.tests.sphere_transport.process_output": [[542, 2, 1, "", "compute_convergence_rates"], [543, 2, 1, "", "compute_error_from_output_ncfile"], [544, 2, 1, "", "make_convergence_arrays"], [545, 2, 1, "", "plot_convergence"], [546, 2, 1, "", "plot_filament"], [547, 2, 1, "", "plot_over_and_undershoot_errors"], [548, 2, 1, "", "plot_sol"], [549, 2, 1, "", "print_data_as_csv"], [550, 2, 1, "", "print_error_conv_table"], [551, 2, 1, "", "read_ncl_rgb_file"]], "compass.ocean.tests.sphere_transport.rotation_2d": [[552, 0, 1, "", "Rotation2D"]], "compass.ocean.tests.sphere_transport.rotation_2d.Rotation2D": [[552, 1, 1, "", "__init__"], [553, 1, 1, "", "configure"], [554, 1, 1, "", "run"]], "compass.ocean.tests.sphere_transport.rotation_2d.analysis": [[555, 0, 1, "", "Analysis"]], "compass.ocean.tests.sphere_transport.rotation_2d.analysis.Analysis": [[555, 1, 1, "", "__init__"], [556, 1, 1, "", "run"]], "compass.ocean.tests.sphere_transport.rotation_2d.forward": [[557, 0, 1, "", "Forward"]], "compass.ocean.tests.sphere_transport.rotation_2d.forward.Forward": [[557, 1, 1, "", "__init__"], [558, 1, 1, "", "get_timestep_str"], [559, 1, 1, "", "run"], [560, 1, 1, "", "setup"]], "compass.ocean.tests.sphere_transport.rotation_2d.init": [[561, 0, 1, "", "Init"]], "compass.ocean.tests.sphere_transport.rotation_2d.init.Init": [[561, 1, 1, "", "__init__"], [562, 1, 1, "", "run"]], "compass.ocean.tests.sphere_transport.rotation_2d.mesh": [[563, 0, 1, "", "Mesh"]], "compass.ocean.tests.sphere_transport.rotation_2d.mesh.Mesh": [[563, 1, 1, "", "__init__"], [564, 1, 1, "", "build_cell_width_lat_lon"], [565, 1, 1, "", "run"]], "compass.ocean.tests.ziso": [[566, 0, 1, "", "Ziso"], [567, 0, 1, "", "ZisoTestCase"], [570, 2, 1, "", "configure"]], "compass.ocean.tests.ziso.Ziso": [[566, 1, 1, "", "__init__"]], "compass.ocean.tests.ziso.ZisoTestCase": [[567, 1, 1, "", "__init__"], [568, 1, 1, "", "configure"], [569, 1, 1, "", "run"]], "compass.ocean.tests.ziso.forward": [[571, 0, 1, "", "Forward"]], "compass.ocean.tests.ziso.forward.Forward": [[571, 1, 1, "", "__init__"], [572, 1, 1, "", "run"], [573, 1, 1, "", "setup"]], "compass.ocean.tests.ziso.initial_state": [[574, 0, 1, "", "InitialState"]], "compass.ocean.tests.ziso.initial_state.InitialState": [[574, 1, 1, "", "__init__"], [575, 1, 1, "", "run"]], "compass.ocean.tests.ziso.with_frazil": [[576, 0, 1, "", "WithFrazil"]], "compass.ocean.tests.ziso.with_frazil.WithFrazil": [[576, 1, 1, "", "__init__"], [577, 1, 1, "", "configure"], [578, 1, 1, "", "run"]], "compass.ocean.vertical.grid_1d": [[579, 2, 1, "", "generate_1d_grid"], [580, 2, 1, "", "write_1d_grid"]], "compass.ocean.vertical": [[581, 2, 1, "", "init_vertical_coord"]], "compass.ocean.vertical.partial_cells": [[582, 2, 1, "", "alter_bottom_depth"], [583, 2, 1, "", "alter_ssh"]], "compass.ocean.vertical.zlevel": [[584, 2, 1, "", "compute_min_max_level_cell"], [585, 2, 1, "", "compute_z_level_layer_thickness"], [586, 2, 1, "", "compute_z_level_resting_thickness"], [587, 2, 1, "", "init_z_level_vertical_coord"]], "compass.ocean.vertical.zstar": [[588, 2, 1, "", "init_z_star_vertical_coord"]], "compass.parallel": [[60, 2, 1, "", "get_available_cores_and_nodes"]], "compass.provenance": [[61, 2, 1, "", "write"]], "compass.run.serial": [[62, 2, 1, "", "run_step"], [63, 2, 1, "", "run_tests"]], "compass.setup": [[64, 2, 1, "", "setup_case"], [65, 2, 1, "", "setup_cases"]], "compass.suite": [[66, 2, 1, "", "clean_suite"], [67, 2, 1, "", "setup_suite"]], "compass.validate": [[68, 2, 1, "", "compare_timers"], [69, 2, 1, "", "compare_variables"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:module"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "module", "Python module"]}, "titleterms": {"cach": [0, 4, 6, 8, 31, 605], "output": [0, 1, 605, 612], "from": [0, 605, 607, 636], "compass": [0, 1, 4, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 605, 606, 607, 610, 613, 657], "step": [0, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 221, 593, 605, 611, 612, 613, 644, 645, 647, 652, 654], "summari": [0, 1, 3], "requir": [0, 1, 3], "select": 0, "whether": 0, "us": 0, "updat": [0, 8, 605, 607, 613], "uniqu": 0, "identifi": 0, "either": 0, "normal": 0, "version": [0, 610, 660], "design": [0, 1, 2, 3], "implement": [0, 1, 3], "test": [0, 1, 3, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 210, 221, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 593, 597, 605, 606, 611, 612, 613, 614, 617, 626, 641, 645, 647, 649, 657, 658, 659], "python": 1, "packag": [1, 606], "make": [1, 8, 611, 612, 613], "case": [1, 221, 593, 605, 606, 611, 612, 613, 614, 645, 647, 657, 658], "easi": 1, "understand": 1, "modifi": 1, "creat": [1, 607, 612, 647], "share": [1, 606, 645, 647, 648, 651, 652, 653, 656], "code": [1, 606, 660], "configur": [1, 25, 119, 124, 232, 234, 237, 246, 249, 255, 259, 268, 281, 283, 284, 286, 289, 294, 310, 313, 322, 328, 337, 342, 347, 352, 355, 358, 376, 378, 384, 398, 403, 405, 413, 446, 475, 483, 501, 515, 529, 553, 568, 570, 577, 593, 605, 608], "option": [1, 3, 8, 605, 607, 612, 613, 618, 619, 620, 621, 622, 623, 624, 625, 627, 628, 630, 631, 632, 633, 634, 635, 636, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656], "abil": 1, "specifi": 1, "core": [1, 4, 201, 589, 605, 606, 611, 616, 640, 644, 652, 654], "count": 1, "machin": [1, 220, 607, 636, 657], "specif": 1, "data": [1, 635], "looser": 1, "more": 1, "flexibl": 1, "directori": [1, 605], "structur": [1, 605], "user": [1, 607, 610, 614, 657], "develop": [1, 607, 610, 611, 612, 613], "friendli": 1, "document": [1, 2, 5, 7, 611, 612, 613, 660], "consider": 1, "relat": 1, "run": [1, 4, 6, 8, 18, 26, 45, 50, 53, 62, 63, 77, 80, 82, 84, 86, 90, 92, 94, 97, 99, 101, 105, 107, 109, 112, 114, 116, 120, 122, 125, 127, 130, 133, 136, 138, 141, 143, 145, 148, 153, 155, 159, 162, 164, 166, 169, 171, 173, 175, 179, 181, 184, 186, 189, 192, 195, 197, 199, 235, 238, 240, 243, 247, 250, 252, 256, 261, 263, 265, 269, 272, 275, 278, 282, 287, 290, 292, 295, 297, 299, 301, 303, 305, 307, 311, 314, 316, 319, 323, 329, 332, 338, 343, 348, 353, 356, 359, 364, 366, 368, 374, 379, 381, 385, 388, 390, 395, 399, 406, 408, 411, 414, 416, 419, 424, 426, 429, 433, 437, 442, 444, 447, 449, 452, 454, 473, 476, 480, 484, 487, 489, 492, 494, 496, 502, 504, 507, 510, 513, 516, 518, 521, 524, 527, 530, 532, 535, 538, 541, 554, 556, 559, 562, 565, 569, 572, 575, 578, 605, 607, 612, 613, 651, 657], "parallel": [1, 4, 60], "resolut": [1, 612, 613, 644, 652, 654, 655], "can": 1, "paramet": [1, 611, 612, 613], "i": 1, "alter": 1, "rerun": 1, "support": [1, 220, 607, 636, 657], "pre": 1, "made": 1, "initi": [1, 612, 647], "condit": [1, 612], "file": [1, 8, 222, 605, 612, 614, 647], "batch": 1, "submiss": 1, "algorithm": [1, 3], "constructor": [1, 605], "setup": [1, 4, 6, 8, 19, 46, 51, 55, 64, 65, 95, 110, 131, 146, 167, 190, 200, 241, 244, 253, 276, 308, 317, 320, 333, 375, 382, 391, 409, 417, 438, 450, 481, 508, 522, 536, 560, 573, 605], "global": 1, "ocean": [1, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 640], "group": [1, 70, 210, 221, 597, 605, 606, 611, 612, 613, 626, 649], "framework": [1, 4, 8, 71, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 221, 222, 590, 591, 593, 596, 598, 599, 601, 604, 606, 615, 638], "within": [1, 606], "an": [1, 605, 606, 611, 612], "mpa": [1, 4, 8, 605, 606, 607, 657], "max_memori": 1, "max_disk": 1, "input": [1, 605], "templat": [3, 605], "name": 3, "topic": 3, "here": 3, "same": 3, "valid": [3, 4, 8, 27, 68, 69, 75, 151, 157, 362, 422, 431, 498, 605, 613], "api": 4, "refer": 4, "command": [4, 6], "line": [4, 6], "interfac": [4, 6], "list": [4, 6, 8, 36, 37, 38], "clean": [4, 6, 8, 32], "suit": [4, 6, 8, 66, 67, 605, 617, 641, 657, 659], "base": [4, 612], "class": [4, 593, 606], "mpas_cor": [4, 59], "testgroup": [4, 28, 29], "testcas": [4, 23, 24, 25, 26, 27, 605], "config": [4, 8, 33, 612, 613, 614, 618, 619, 620, 621, 622, 623, 624, 625, 627, 628, 630, 631, 632, 633, 634, 635, 636, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656], "io": [4, 8, 34, 35], "log": [4, 8, 39], "mesh": [4, 8, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 139, 140, 141, 152, 153, 178, 179, 183, 184, 207, 208, 211, 212, 214, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 397, 398, 399, 400, 401, 511, 512, 513, 525, 526, 527, 539, 540, 541, 563, 564, 565, 592, 593, 595, 602, 603, 611, 612, 645, 647], "model": [4, 8, 56, 57, 58, 605], "proven": [4, 8, 61], "build": [5, 607, 657], "docstr": 7, "modul": [8, 606, 607], "serial": [8, 62, 63], "comment": 8, "symlink": [8, 35, 605], "download": [8, 34, 605], "spheric": [8, 52, 53, 54, 55], "partit": [8, 57], "pio": 8, "namelist": [8, 222, 605, 612, 613], "graph": 8, "variabl": 8, "norm": 8, "timer": 8, "mpascor": [9, 10], "add_test_group": 10, "add_input_fil": 12, "add_model_as_input": 13, "add_namelist_fil": 14, "add_namelist_opt": 15, "add_output_fil": 16, "add_streams_fil": 17, "update_namelist_at_runtim": 20, "update_namelist_pio": 21, "update_streams_at_runtim": 22, "add_step": 24, "add_test_cas": 29, "__main__": 30, "main": 30, "update_cach": 31, "clean_cas": 32, "compassconfigpars": 33, "list_cas": 36, "list_machin": 37, "list_suit": 38, "log_method_cal": 39, "icosahedralmeshstep": [40, 41, 42, 43, 44, 45, 46], "build_subdivisions_cell_width_lat_lon": 41, "get_cell_width": 42, "get_subdivis": 43, "make_jigsaw_mesh": [44, 49], "quasiuniformsphericalmeshstep": [47, 48, 49, 50, 51], "build_cell_width_lat_lon": [48, 326, 331, 335, 340, 345, 401, 512, 526, 540, 564], "sphericalbasestep": [52, 53, 54, 55], "save_and_plot_cell_width": 54, "make_graph_fil": 56, "run_model": [58, 76, 77, 81, 82, 93, 94, 95, 129, 130, 131, 144, 145, 146, 158, 159, 165, 166, 167, 188, 189, 190, 198, 199, 200, 206, 207, 208, 209, 213, 214], "get_mpas_cor": 59, "get_available_cores_and_nod": 60, "write": [61, 228], "run_step": 62, "run_test": 63, "setup_cas": [64, 65], "clean_suit": 66, "setup_suit": 67, "compare_tim": 68, "compare_vari": 69, "landic": [70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 616], "calving_dt_converg": [70, 73, 74, 75, 76, 77, 202, 617, 618], "circular_shelf": [70, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 203, 619], "dome": [70, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 204, 620], "enthalpy_benchmark": [70, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 206, 622], "eismint2": [70, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 205, 621], "greenland": [70, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 207, 623], "humboldt": [70, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 208, 624], "hydro_radi": [70, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 209, 625], "kangerlussuaq": [70, 177, 178, 179, 180, 181, 211, 627], "koge_bugt_": [70, 182, 183, 184, 185, 186, 212, 628], "mismipplu": [70, 187, 188, 189, 190, 191, 192, 213, 629], "thwait": [70, 193, 194, 195, 196, 197, 198, 199, 200, 214, 630], "land": 71, "ic": [71, 222, 637, 645], "calvingdtconverg": 73, "dt_convergence_test": [74, 75, 618], "dtconvergencetest": [74, 75, 202], "runmodel": [76, 77, 81, 82, 93, 94, 95, 129, 130, 131, 144, 145, 146, 158, 159, 165, 166, 167, 188, 189, 190, 198, 199, 200, 202, 203, 204], "circularshelf": 78, "decomposition_test": [79, 80, 89, 90, 104, 105, 135, 136, 150, 151, 161, 162, 194, 195, 205, 207, 208, 209, 214, 619, 620, 621, 623, 624, 625, 630], "decompositiontest": [79, 80, 89, 90, 104, 105, 135, 136, 150, 151, 161, 162, 194, 195, 203, 204], "setup_mesh": [83, 84, 96, 97, 111, 112, 132, 133, 168, 169, 205, 206, 209], "setupmesh": [83, 84, 96, 97, 111, 112, 132, 133, 168, 169, 203, 204], "visual": [85, 86, 87, 100, 101, 102, 115, 116, 117, 121, 122, 126, 127, 174, 175, 176, 203, 204, 205, 209], "visualize_circular_shelf": 87, "restart_test": [91, 92, 106, 107, 142, 143, 156, 157, 163, 164, 196, 197, 205, 207, 208, 209, 214, 245, 246, 247, 354, 355, 356, 412, 413, 414, 590, 593, 596, 620, 621, 623, 624, 625, 630, 642, 645, 648], "restarttest": [91, 92, 106, 107, 142, 143, 156, 157, 163, 164, 196, 197, 204, 245, 246, 247, 354, 355, 356, 412, 413, 414], "smoke_test": [98, 99, 147, 148, 191, 192, 207, 213, 620, 623, 629], "smoketest": [98, 99, 147, 148, 191, 192, 204], "visualize_dom": 102, "run_experi": [108, 109, 110, 205], "runexperi": [108, 109, 110], "standard_experi": [113, 114, 115, 116, 117, 205, 621], "standardexperi": [113, 114], "visualize_eismint2": 117, "A": [118, 119, 120, 121, 122, 206, 614, 622], "b": [123, 124, 125, 126, 127, 206, 622], "enthalpybenchmark": 128, "high_res_mesh": [137, 138, 207, 214, 623, 630], "highresmesh": [137, 138], "build_cell_width": 140, "mesh_gen": [154, 155, 180, 181, 185, 186, 208, 211, 212, 624, 627, 628], "meshgen": [154, 155, 180, 181, 185, 186], "hydroradi": 160, "spinup_test": [170, 171, 209, 625], "spinuptest": [170, 171], "steady_state_drift_test": [172, 173, 209, 625], "steadystatedrifttest": [172, 173], "visualize_hydro_radi": 176, "kogebugt": 182, "enthalpy_decomposition_test": [205, 621], "enthalpy_restart_test": [205, 621], "anvil": [215, 631], "intel": [215, 216, 217, 218, 219, 631, 632, 633, 634, 635], "gnu": [215, 216, 217, 219, 631, 632, 633, 635], "badger": [216, 632], "chrysali": [217, 633], "compymcnodefac": [218, 634], "cori": [219, 635], "haswel": [219, 635], "other": [220, 612, 613, 636, 657], "baroclinic_channel": [221, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 590, 642], "drying_slop": [221, 257, 258, 259, 260, 261, 262, 263, 264, 265, 591, 643], "global_converg": [221, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 592, 644], "cosine_bel": [221, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 592, 611, 644], "global_ocean": [221, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 593, 645], "gotm": [221, 360, 361, 362, 363, 364, 365, 366, 367, 368, 594, 646], "default": [221, 236, 237, 238, 258, 259, 361, 362, 363, 364, 365, 366, 367, 368, 404, 405, 406, 421, 422, 590, 591, 594, 596, 598, 612, 642, 643, 646, 648, 650, 653, 656], "hurrican": [221, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 595, 647], "ice_shelf_2d": [221, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 596, 648], "internal_wav": [221, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 598, 650], "isomip_plu": [221, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 599, 651], "planar_converg": [221, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 600, 652], "horizontal_advect": [221, 482, 483, 484, 485, 486, 487, 488, 489, 600, 652], "soma": [221, 490, 491, 492, 493, 494, 495, 496, 497, 498, 601, 653], "sphere_transport": [221, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 602, 654], "correlated_tracers_2d": [221, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 602, 654], "divergent_2d": [221, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 602, 654], "nondivergent_2d": [221, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 602, 654], "rotation_2d": [221, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 602, 654], "ziso": [221, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 604, 656], "replac": 222, "stream": [222, 605, 612, 613], "vertic": [222, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 612, 639], "coordin": [222, 612, 639], "hanei": [222, 224], "number": [222, 611], "shelf": [222, 637, 645], "caviti": [222, 637, 645], "particl": [222, 227, 228, 653, 656], "plot": [222, 229, 230, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470], "compute_haney_numb": 224, "iceshelf": [225, 226], "adjust_ssh": 225, "compute_land_ice_pressure_and_draft": 226, "remap_particl": 227, "plot_initial_st": 229, "plot_vertical_grid": 230, "baroclinicchannel": 231, "decomp_test": [233, 234, 235, 288, 289, 290, 590, 593, 642, 645], "decomptest": [233, 234, 235, 288, 289, 290], "forward": [239, 240, 241, 260, 261, 273, 274, 275, 276, 306, 307, 308, 309, 310, 311, 365, 366, 377, 378, 379, 380, 381, 382, 407, 408, 409, 423, 424, 436, 437, 438, 478, 479, 480, 481, 493, 494, 505, 506, 507, 508, 519, 520, 521, 522, 533, 534, 535, 536, 557, 558, 559, 560, 571, 572, 573, 590, 591, 592, 593, 594, 595, 596, 598, 599, 600, 601, 602, 604, 611, 612, 613, 645, 647], "initial_st": [242, 243, 244, 262, 263, 315, 316, 317, 389, 390, 391, 410, 411, 425, 426, 441, 442, 495, 496, 574, 575, 590, 591, 595, 596, 598, 599, 601, 604, 612], "initialst": [242, 243, 244, 262, 263, 315, 316, 317, 389, 390, 391, 410, 411, 425, 426, 441, 442, 495, 496, 574, 575], "rpe_test": [248, 249, 250, 251, 252, 253, 427, 428, 429, 590, 598, 612, 642, 650], "rpetest": [248, 249, 250, 427], "analysi": [251, 252, 253, 270, 271, 272, 363, 364, 370, 371, 372, 373, 374, 375, 428, 429, 485, 486, 487, 491, 492, 503, 504, 517, 518, 531, 532, 555, 556, 592, 594, 595, 600, 601, 602, 603, 611, 612, 613, 647], "threads_test": [254, 255, 256, 357, 358, 359, 590, 593, 645], "threadstest": [254, 255, 256, 357, 358, 359], "dryingslop": 257, "viz": [264, 265, 418, 419, 432, 433, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 591, 596, 599], "globalconverg": 266, "cosinebel": [267, 268, 269], "rmse": [271, 486], "get_dt": 274, "init": [277, 278, 312, 313, 314, 315, 316, 317, 318, 319, 320, 367, 368, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 488, 489, 509, 510, 523, 524, 537, 538, 561, 562, 592, 593, 594, 600, 602, 603, 611, 613, 645, 647], "globalocean": 279, "analysis_test": [280, 281, 282, 593, 645], "analysistest": [280, 281, 282], "configure_global_ocean": 284, "daily_output_test": [285, 286, 287, 593, 645], "dailyoutputtest": [285, 286, 287], "dynamic_adjust": [291, 292, 327, 328, 329, 336, 337, 338, 341, 342, 343, 346, 347, 348, 593, 645], "dynamicadjust": [291, 292], "files_for_e3sm": [293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 593, 645], "filesfore3sm": [293, 294, 295], "diagnostics_fil": [296, 297], "diagnosticsfil": [296, 297], "ocean_graph_partit": [298, 299], "oceangraphpartit": [298, 299], "ocean_initial_condit": [300, 301], "oceaninitialcondit": [300, 301], "scrip": [302, 303], "seaice_initial_condit": [304, 305], "seaiceinitialcondit": [304, 305], "forwardstep": [306, 307, 308, 380, 381, 382], "forwardtestcas": [309, 310, 311], "ssh_adjust": [318, 319, 320, 415, 416, 417, 448, 449, 450, 596, 599], "sshadjust": [318, 319, 320, 415, 416, 417, 448, 449, 450], "cull": 324, "cull_mesh": 324, "ec30to60": [325, 326, 327, 328, 329, 593, 641, 645], "ec30to60mesh": [325, 326], "ec30to60dynamicadjust": [327, 328, 329], "meshstep": [330, 331, 332, 333], "qu240": [334, 335, 336, 337, 338, 593, 645], "qu240mesh": [334, 335], "qu240dynamicadjust": [336, 337, 338], "so12to60": [339, 340, 341, 342, 343], "so12to60mesh": [339, 340], "so12to60dynamicadjust": [341, 342, 343], "wc14": [344, 345, 346, 347, 348, 593, 645], "wc14mesh": [344, 345], "wc14dynamicadjust": [346, 347, 348], "metadata": [349, 350, 593, 645], "add_mesh_and_init_metadata": 349, "get_e3sm_mesh_nam": 350, "performance_test": [351, 352, 353, 593, 645], "performancetest": [351, 352, 353], "read_pointstat": 371, "read_station_data": 372, "read_station_fil": 373, "create_pointstats_fil": [386, 387, 388, 595], "createpointstatsfil": [386, 387, 388], "interpolate_atm_forc": [392, 393, 394, 395, 396, 595], "interpolateatmforc": [392, 393, 394, 395, 396], "interpolate_data_to_grid": 393, "plot_interp_data": 394, "write_to_fil": 396, "dequ120at30cr10rr2": [400, 401], "dequ120at30cr10rr2mesh": [400, 401], "iceshelf2d": 402, "internalwav": 420, "ten_day_test": [430, 431, 598, 650], "tendaytest": [430, 431], "isomipplu": 434, "evap": [435, 599], "update_evaporation_flux": 435, "geom": [439, 440, 599], "interpolate_ocean_mask": 439, "process_input_geometri": 440, "misomip": [443, 444, 599], "ocean_test": [445, 446, 447, 599], "oceantest": [445, 446, 447], "streamfunct": [451, 452, 599], "file_complet": 455, "movieplott": [456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467], "images_to_movi": 457, "plot_3d_field_top_bot_sect": 458, "plot_barotropic_streamfunct": 459, "plot_horiz_seri": 460, "plot_ice_shelf_boundary_vari": 461, "plot_layer_interfac": 462, "plot_melt_r": 463, "plot_overturning_streamfunct": 464, "plot_potential_dens": 465, "plot_salin": 466, "plot_temperatur": 467, "timeseriesplott": [468, 469, 470], "plot_melt_time_seri": 469, "plot_time_seri": 470, "planarconverg": 471, "conv_init": [472, 473], "convinit": [472, 473], "conv_test_cas": [474, 475, 476, 477], "convtestcas": [474, 475, 476, 477], "update_cor": 477, "get_dt_dur": 479, "horizontaladvect": [482, 483, 484], "soma_test_cas": [497, 498, 601], "somatestcas": [497, 498], "spheretransport": 499, "correlatedtracers2d": [500, 501, 502], "get_timestep_str": [506, 520, 534, 558], "divergent2d": [514, 515, 516], "nondivergent2d": [528, 529, 530], "process_output": [542, 543, 544, 545, 546, 547, 548, 549, 550, 551], "compute_convergence_r": 542, "compute_error_from_output_ncfil": 543, "make_convergence_arrai": 544, "plot_converg": 545, "plot_fila": 546, "plot_over_and_undershoot_error": 547, "plot_sol": 548, "print_data_as_csv": 549, "print_error_conv_t": 550, "read_ncl_rgb_fil": 551, "rotation2d": [552, 553, 554], "zisotestcas": [567, 568, 569], "with_frazil": [576, 577, 578, 604, 656], "withfrazil": [576, 577, 578], "grid_1d": [579, 580], "generate_1d_grid": 579, "write_1d_grid": 580, "init_vertical_coord": 581, "partial_cel": [582, 583], "alter_bottom_depth": 582, "alter_ssh": 583, "zlevel": [584, 585, 586, 587], "compute_min_max_level_cel": 584, "compute_z_level_layer_thick": 585, "compute_z_level_resting_thick": 586, "init_z_level_vertical_coord": 587, "zstar": 588, "init_z_star_vertical_coord": 588, "type": [592, 639], "quwisc240": [593, 641, 645], "ecwisc30to60": [593, 641, 645], "sowisc12to60": [593, 645], "child": 593, "spherical_harmonic_transform": [603, 655], "qu_converg": [603, 655], "ziso_test_cas": 604, "organ": 605, "attribut": 605, "copi": 605, "ad": [605, 611, 612, 613], "runtim": 605, "overview": 606, "style": 606, "In": 606, "quick": [607, 657], "start": [607, 611, 612, 613, 657], "unix": 607, "shell": 607, "set": [607, 611, 612, 613, 657], "up": [607, 612, 613, 657], "repositori": 607, "beginn": 607, "conda": [607, 608, 636, 657], "environ": [607, 608, 657], "compil": 607, "system": 607, "albani": 607, "petsc": 607, "netlib": 607, "lapack": 607, "unknown": 607, "what": 607, "script": [607, 657], "doe": 607, "flag": 607, "activ": 607, "troubleshoot": [607, 608], "onli": 607, "compon": [607, 657], "repo": 607, "worktre": 607, "advanc": 607, "solver": 608, "error": 608, "when": 608, "proxi": 608, "lanl": 608, "mac": 608, "gethostbynam": 608, "fail": 608, "glossari": [609, 610], "": 610, "guid": 610, "tutori": [610, 611, 612, 613], "legaci": [610, 613], "studi": 611, "get": [611, 612, 613], "new": [611, 612, 613], "vari": [612, 613], "horizont": 612, "defin": [612, 613], "method": [612, 613], "port": 613, "The": 613, "sia_integr": 617, "fo_integr": 617, "full_integr": 617, "humboldt_calving_test": 617, "humboldt_calving_tests_fo": 617, "jupyt": 635, "notebook": 635, "remot": 635, "slurm": 636, "job": [636, 657], "queue": 636, "mpich": 636, "openmpi": 636, "No": 636, "mpi": 636, "forg": 636, "sea": 637, "surfac": 637, "height": 637, "adjust": 637, "1d": 639, "grid": 639, "uniform": 639, "tanh_dz": 639, "60layerphc": 639, "100layere3smv1": 639, "3d": 639, "z": 639, "star": 639, "level": 639, "nightli": 641, "qu240_for_e3sm": 641, "quwisc240_for_e3sm": 641, "thread_test": 642, "time": [644, 652, 654], "biogeochemsitri": 645, "make_diagnostic_fil": 645, "state": 647, "interpol": 647, "atmospher": 647, "forc": 647, "pointstat": 647, "sandi": 647, "ocean0": 651, "ocean1": 651, "ocean2": 651, "time_varying_ocean0": 651, "perform": 651, "simul": 651, "long": [653, 656], "surface_restor": 653, "three_lay": 653, "converg": 654, "threshold": 654, "parallel_n": 655, "serial_nlat": 655, "e3sm": 657}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 56}})